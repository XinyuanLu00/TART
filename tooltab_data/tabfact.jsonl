{"id": "210357d7-7661-4dcf-92e8-d2dc21d60451", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = american dad! (season 1)\ntable_data = [[\"no in series\", \"title\", \"directed by\", \"written by\", \"original air date\", \"production code\", \"us viewers (millions)\"],[\"1\", \"pilot\", \"ron hughart\", \"seth macfarlane , mike barker & matt weitzman\", \"february 6 , 2005\", \"1ajn01\", \"15.10\"],[\"2\", \"threat levels\", \"brent woods\", \"david zuckerman\", \"may 1 , 2005\", \"1ajn02\", \"9.47\"],[\"3\", \"stan knows best\", \"pam cooke\", \"mike barker & matt weitzman\", \"may 8 , 2005\", \"1ajn03\", \"8.23\"],[\"4\", \"francine 's flashback\", \"caleb meurer & brent woods\", \"rick wiener & kenny schwartz\", \"may 15 , 2005\", \"1ajn05\", \"7.84\"],[\"5\", \"roger codger\", \"albert calleros\", \"dan vebber\", \"june 5 , 2005\", \"1ajn04\", \"6.09\"],[\"6\", \"homeland insecurity\", \"rodney clouden\", \"neal boushell & sam o'neal\", \"june 12 , 2005\", \"1ajn06\", \"6.85\"]]\nQuestion = Is it true that dan vebber wrote the episode with production code 1ajn05?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    production_codes = get_column_by_name(table_data, \"production code\")\n    writers = get_column_by_name(table_data, \"written by\")\n    for production_code, writer in zip(production_codes, writers):\n        if production_code == \"1ajn05\":\n            answer = equal_to(writer, \"dan vebber\")\n            break \n    return answer\n\n### END"}
{"id": "3ecd7bb3-9d7c-4f7f-bd5c-28904f33e408", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1964 all - ireland senior hurling championship\ntable_data = [[\"rank\", \"player\", \"county\", \"tally\", \"total\", \"opposition\"],[\"1\", \"richard browne\", \"cork\", \"4 - 0\", \"12\", \"galway\"],[\"2\", \"tony forrestal\", \"kilkenny\", \"3 - 2\", \"11\", \"wexford\"],[\"3\", \"pat cronin\", \"clare\", \"2 - 4\", \"10\", \"limerick\"],[\"3\", \"jimmy doyle\", \"tipperary\", \"1 - 7\", \"10\", \"clare\"],[\"3\", \"jimmy doyle\", \"tipperary\", \"0 - 10\", \"10\", \"cork\"],[\"3\", \"jimmy doyle\", \"tipperary\", \"0 - 10\", \"10\", \"kilkenny\"],[\"7\", \"donie nealon\", \"tipperary\", \"3 - 0\", \"9\", \"kilkenny\"],[\"7\", \"philly grimes\", \"waterford\", \"2 - 3\", \"9\", \"cork\"],[\"7\", \"paddy molloy\", \"offaly\", \"1 - 6\", \"9\", \"westmeath\"],[\"10\", \"fran whelan\", \"dublin\", \"2 - 2\", \"8\", \"carlow\"],[\"10\", \"pat harte\", \"cork\", \"2 - 2\", \"8\", \"waterford\"]]\nQuestion = Is it true that jimmy doyle is ranked 3rd with a tally of 0 - 10 and cork is named the opposition?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    players = get_column_by_name(table_data, \"player\")\n    tallies = get_column_by_name(table_data, \"tally\")\n    oppositions = get_column_by_name(table_data, \"opposition\")\n    for rank, player, tally, opposition in zip(ranks, players, tallies, oppositions):\n        if player.lower() == \"jimmy doyle\" and rank == \"3\" and tally == \"0 - 10\" and opposition.lower() == \"cork\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "2d843993-47c8-44c5-98b2-b63f355448f4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = westinghouse broadcasting\ntable_data = [[\"city of license / market\", \"station\", \"channel tv ( dt )\", \"years owned\", \"current affiliation\"],[\"san francisco - oakland - san jose\", \"kpix\", \"5 (29)\", \"1954 - 1995\", \"cbs owned - and - operated ( o&o )\"],[\"baltimore\", \"wjz - tv\", \"13 (13)\", \"1957 - 1995\", \"cbs owned - and - operated (o&o)\"],[\"boston\", \"wbz - tv\", \"4 (30)\", \"1948 - 1995\", \"cbs owned - and - operated (o&o)\"],[\"charlotte\", \"wpcq - tv (now wcnc - tv )\", \"36 (22)\", \"1980 - 1985\", \"nbc affiliate owned by belo corporation\"],[\"cleveland\", \"kyw - tv (now wkyc - tv )\", \"3 (17)\", \"1956 - 1965\", \"nbc affiliate owned by gannett company\"],[\"philadelphia\", \"wptz / kyw - tv\", \"3 (26)\", \"1953 - 1956 1965 - 1995\", \"cbs owned - and - operated (o&o)\"]]\nQuestion = Is it true that san francisco , oakland , and san jose all play the station kpix on channel 5?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    cities = get_column_by_name(table_data, \"city of license / market\")\n    stations = get_column_by_name(table_data, \"station\")\n    channels = get_column_by_name(table_data, \"channel tv ( dt )\")\n    for city, station, channel in zip(cities, stations, channels):\n        if \"san francisco\" in city.lower() and \"oakland\" in city.lower() and \"san jose\" in city.lower():\n            answer = equal_to(station, \"kpix\") and equal_to(channel, \"5 (29)\")\n            break \n    return answer\n\n### END"}
{"id": "f741a535-72a0-42c6-968d-e8af03c0cdca", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of new jersey transit stations\ntable_data = [[\"station\",\"municipality\",\"county\",\"former railroad\",\"closed\"],[\"ampere\",\"east orange\",\"essex , nj\",\"lackawanna\",\"1991\"],[\"arlington\",\"kearney\",\"hudson , nj\",\"erie\",\"2002\"],[\"benson street\",\"glen ridge\",\"essex , nj\",\"erie\",\"2002\"],[\"fairmount avenue\",\"hackensack\",\"bergen , nj\",\"erie\",\"1983\"],[\"finderne\",\"finderne\",\"somerset , nj\",\"jersey central\",\"2006\"],[\"great notch\",\"great notch\",\"passaic , nj\",\"erie\",\"2010\"],[\"grove street\",\"east orange\",\"essex , nj\",\"lackawanna\",\"1991\"],[\"harmon cove\",\"secaucus\",\"hudson , nj\",\"erie\",\"2003\"],[\"harrison\",\"harrison\",\"hudson , nj\",\"lackawanna\",\"1984\"],[\"north newark\",\"newark\",\"essex , nj\",\"lackawanna\",\"1984\"],[\"north rahway\",\"rahway\",\"fairfield , nj\",\"pennsylvania\",\"1993\"],[\"roseville avenue\",\"newark\",\"essex , nj\",\"lackawanna\",\"1984\"],[\"rowe street\",\"bloomfield township\",\"essex , nj\",\"erie\",\"2002\"]]\nQuestion = Is it true that the harmon cove station was located in the municipality of secaucus , in hudson county?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    stations = get_column_by_name(table_data, \"station\")\n    municipalities = get_column_by_name(table_data, \"municipality\")\n    counties = get_column_by_name(table_data, \"county\")\n    for station, municipality, county in zip(stations, municipalities, counties):\n        if station.lower() == \"harmon cove\":\n            answer = municipality.lower() == \"secaucus\" and county.lower() == \"hudson , nj\"\n            break \n    return answer\n\n### END"}
{"id": "95b1d5c2-b250-48ed-9125-f0321fc56241", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = jewelpet universe\ntable_data = [[\"name\",\"sweet\",\"species\",\"gender\",\"attribute\",\"birthday\",\"media debut\",\"voice actor\"],[\"sakuran ( さくらん )\",\"sakuramochi\",\"brown bear\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"rina hidaka\"],[\"melorina ( メロリーナ )\",\"melonpan\",\"poodle\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"asuka ōgame (sweets dance princess)\"],[\"eclan ( エクレン )\",\"eclair\",\"rex rabbit\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"chiwa saito (sweets dance princess)\"],[\"macaronia ( マカロニア )\",\"macaron\",\"holland lop\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"miyu matsuki (sweets dance princess)\"],[\"donadona ( ドナドナ )\",\"donut\",\"golden hamster\",\"male\",\"magical red\",\"unknown\",\"jps ep 38\",\"saki fujita (sweets dance princess)\"],[\"honey ( ハニー )\",\"honey waffles\",\"flying squirrel\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"megumi mukai (sweets dance princess)\"],[\"purinki ( プリンキー )\",\"crème caramel\",\"common squirrel monkey\",\"female\",\"magical green\",\"unknown\",\"jps ep 38\",\"mana matsufuji (sweets dance princess)\"],[\"chocolat ( ショコラ )\",\"chocolate ice cream\",\"asian black bear\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"marie miyake (sweets dance princess)\"],[\"maco ( マコ )\",\"macaron\",\"roborovski hamster\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"mako\"],[\"kaco ( カコ )\",\"macaron\",\"roborovski hamster\",\"male\",\"magical green\",\"unknown\",\"jps ep 38\",\"asuka ōgame\"],[\"roco ( ロコ )\",\"macaron\",\"roborovski hamster\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"marie miyake\"],[\"coron ( コロン )\",\"macaron\",\"roborovski hamster\",\"male\",\"magical red\",\"unknown\",\"jps ep 38\",\"saki fujita\"]]\nQuestion = Is it true that the asian black bear is listed as female in gender?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    species = get_column_by_name(table_data, \"species\")\n    genders = get_column_by_name(table_data, \"gender\")\n    answer = False\n    for specie, gender in zip(species, genders):\n        if \"asian black bear\" in specie.lower() and \"female\" in gender.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "7b335308-b849-43aa-bd4c-db957dada52b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1966 dutch grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"jack brabham\", \"brabham - repco\", \"90\", \"2:20:32.5\", \"1\"],[\"graham hill\", \"brm\", \"89\", \"+ 1 lap\", \"7\"],[\"jim clark\", \"lotus - climax\", \"88\", \"+ 2 laps\", \"3\"],[\"jackie stewart\", \"brm\", \"88\", \"+ 2 laps\", \"8\"],[\"mike spence\", \"lotus - brm\", \"87\", \"+ 3 laps\", \"12\"],[\"lorenzo bandini\", \"ferrari\", \"87\", \"+ 3 laps\", \"9\"],[\"jo bonnier\", \"cooper - maserati\", \"84\", \"+ 6 laps\", \"13\"],[\"john taylor\", \"brabham - brm\", \"84\", \"+ 6 laps\", \"17\"],[\"guy ligier\", \"cooper - maserati\", \"84\", \"+ 6 laps\", \"16\"],[\"jo siffert\", \"cooper - maserati\", \"79\", \"engine\", \"11\"],[\"bob anderson\", \"brabham - climax\", \"73\", \"suspension\", \"14\"],[\"john surtees\", \"cooper - maserati\", \"44\", \"electrical\", \"10\"],[\"denny hulme\", \"brabham - repco\", \"37\", \"ignition\", \"2\"],[\"peter arundell\", \"lotus - brm\", \"28\", \"ignition\", \"15\"],[\"dan gurney\", \"eagle - climax\", \"26\", \"oil leak\", \"4\"],[\"mike parkes\", \"ferrari\", \"10\", \"accident\", \"5\"],[\"jochen rindt\", \"cooper - maserati\", \"2\", \"accident\", \"6\"]]\nQuestion = Is it true that the smallest grid for bob anderson is greater than 14?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    grids = get_column_by_name(table_data, \"grid\")\n    for driver, grid in zip(drivers, grids):\n        if driver.lower() == \"bob anderson\":\n            answer = greater(int(grid), 14)\n            break \n    return answer\n\n### END"}
{"id": "a7d8bc49-527a-41be-8334-19886fc2fca7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = big day out lineups by year\ntable_data = [[\"sydney\", \"melbourne\", \"perth\", \"adelaide\", \"gold coast\", \"auckland\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"cancelled\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\"],[\"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"no\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"no\"],[\"no\", \"yes\", \"no\", \"no\", \"no\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"]]\nQuestion = Is it true that when adelaide has a yes , melbourne , auckland and perth also have a yes?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    adelaide = get_column_by_name(table_data, \"adelaide\")\n    melbourne = get_column_by_name(table_data, \"melbourne\")\n    auckland = get_column_by_name(table_data, \"auckland\")\n    perth = get_column_by_name(table_data, \"perth\")\n    answer = True\n    for ad, mel, auck, per in zip(adelaide, melbourne, auckland, perth):\n        if equal_to(ad, \"yes\"):\n            if not equal_to(mel, \"yes\") or not equal_to(auck, \"yes\") or not equal_to(per, \"yes\"):\n                answer = False\n                break\n    return answer\n\n### END"}
{"id": "bcc5e140-b1b0-42d0-962a-40ea7f3adbe9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of quadrangles on mercury\ntable_data = [[\"name\",\"number\",\"namesake\",\"albedo feature name\",\"area\",\"current map\"],[\"borealis\",\"h - 1\",\"borealis planitia\",\"borea\",\"north pole to 67 degree latitude\",\"h - 1\"],[\"victoria\",\"h - 2\",\"victoria rupes\",\"aurora\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 2\"],[\"shakespeare\",\"h - 3\",\"shakespeare crater\",\"caduceata\",\"90 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 3\"],[\"raditladi\",\"h - 4\",\"raditladi basin\",\"liguria\",\"270 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 4\"],[\"hokusai\",\"h - 5\",\"hokusai crater\",\"apollonia\",\"360 to 270 degree longitude , 21 to 66 degree latitude\",\"h - 5\"],[\"kuiper\",\"h - 6\",\"kuiper crater\",\"tricrena\",\"0 to 72 degree longitude , 22 to 22 degree latitude\",\"h - 6\"],[\"beethoven\",\"h - 7\",\"beethoven crater\",\"solitudo lycaonis\",\"72 to 144 degree longitude , 22 to 22 degree latitude\",\"h - 7\"],[\"tolstoj\",\"h - 8\",\"tolstoj crater\",\"phaethontias\",\"144 to 216 degree longitude , 22 to 22 degree latitude\",\"h - 8\"],[\"eminescu\",\"h - 9\",\"eminescu crater\",\"solitudo criophori\",\"216 to 288 degree longitude , 22 to 22 degree latitude\",\"h - 9\"],[\"derain\",\"h - 10\",\"derain crater\",\"pieria\",\"288 to 360 degree longitude , - 22 to 22 degree latitude\",\"h - 10\"],[\"discovery\",\"h - 11\",\"discovery rupes\",\"solitudo hermae trismegisti\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 11\"],[\"michelangelo\",\"h - 12\",\"michelangelo crater\",\"solitudo promethei\",\"90 to 180 degree longitude , 21 to - 66 degree latitude\",\"h - 12\"],[\"neruda\",\"h - 13\",\"neruda crater\",\"solitudo persephones\",\"180 to 270 degree longitude , 21 to - 66 degree latitude\",\"h - 13\"],[\"debussy\",\"h - 14\",\"debussy crater\",\"cyllene\",\"270 to 360 degree longitude , 21 to 66 degree latitude\",\"h - 14\"],[\"bach\",\"h - 15\",\"bach crater\",\"australia\",\"south pole to 67 degree latitude\",\"h - 15\"]]\nQuestion = Is it true that h - 14 is the current map designation and number of the feature named debussy?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    numbers = get_column_by_name(table_data, \"number\")\n    current_maps = get_column_by_name(table_data, \"current map\")\n    for name, number, current_map in zip(names, numbers, current_maps):\n        if name.lower() == \"debussy\":\n            answer = equal_to(number, \"h - 14\") and equal_to(current_map, \"h - 14\")\n            break \n    return answer\n\n### END"}
{"id": "d50209a0-7a2b-4aac-b292-e8bdb26087e8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = hampden football netball league\ntable_data = [[\"club\", \"active\", \"wins\", \"losses\", \"draws\", \"percentage wins\", \"flags\"],[\"camperdown\", \"1930 - 2011\", \"723\", \"665\", \"15\", \"51.53%\", \"6\"],[\"cobden\", \"1930 - 2011\", \"640\", \"733\", \"17\", \"46.04%\", \"6\"],[\"colac\", \"1949 - 2000\", \"597\", \"373\", \"10\", \"60.92%\", \"10\"],[\"coragulac\", \"1961 - 1979\", \"118\", \"225\", \"2\", \"33.91%\", \"0\"],[\"koroit\", \"1961 - 2011\", \"431\", \"528\", \"8\", \"44.57%\", \"5\"],[\"mortlake\", \"1930 - 1998\", \"473\", \"633\", \"18\", \"42.08%\", \"3\"],[\"north warrnambool\", \"1997 - 2011\", \"52\", \"213\", \"3\", \"19.40%\", \"0\"],[\"port fairy\", \"1949 - 2011\", \"410\", \"738\", \"2\", \"35.65%\", \"1\"],[\"south warrnambool\", \"1933 - 2011\", \"745\", \"611\", \"17\", \"54.26%\", \"11\"],[\"terang\", \"1930 - 2001\", \"642\", \"580\", \"10\", \"52.11%\", \"8\"],[\"terang mortlake\", \"2002 - 2011\", \"141\", \"61\", \"1\", \"69.46%\", \"3\"],[\"warrnambool\", \"1933 - 2011\", \"895\", \"490\", \"19\", \"63.75%\", \"23\"],[\"western lions\", \"1999 - 2000\", \"2\", \"17\", \"0\", \"10.5%\", \"0\"]]\nQuestion = Is it true that south warnambool had 723 winds and 10 flags?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    clubs = get_column_by_name(table_data, \"club\")\n    wins = get_column_by_name(table_data, \"wins\")\n    flags = get_column_by_name(table_data, \"flags\")\n    for club, win, flag in zip(clubs, wins, flags):\n        if club.lower() == \"south warrnambool\":\n            answer = equal_to(win, \"723\") and equal_to(flag, \"10\")\n            break \n    return answer\n\n### END"}
{"id": "c91058fc-8384-4ded-8cc2-a55af211c177", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sambo (martial art)\ntable_data = [[\"rank\", \"nation\", \"gold\", \"silver\", \"bronze\", \"total\"],[\"1\", \"russia\", \"200\", \"24\", \"82\", \"308\"],[\"2\", \"belarus\", \"12\", \"11\", \"19\", \"43\"],[\"3\", \"bulgaria\", \"12\", \"10\", \"22\", \"44\"],[\"4\", \"ukraine\", \"7\", \"17\", \"26\", \"50\"],[\"5\", \"kazakhstan\", \"4\", \"5\", \"23\", \"31\"],[\"6\", \"mongolia\", \"4\", \"7\", \"7\", \"18\"],[\"7\", \"lithuania\", \"2\", \"4\", \"11\", \"17\"],[\"8\", \"georgia\", \"2\", \"4\", \"8\", \"14\"],[\"9\", \"uzbekistan\", \"1\", \"8\", \"15\", \"24\"],[\"10\", \"kyrgyzstan\", \"1\", \"2\", \"4\", \"7\"],[\"10\", \"serbia\", \"1\", \"2\", \"4\", \"7\"],[\"12\", \"tajikistan\", \"1\", \"2\", \"3\", \"6\"],[\"13\", \"latvia\", \"1\", \"1\", \"3\", \"5\"],[\"14\", \"moldova\", \"1\", \"0\", \"5\", \"6\"],[\"15\", \"venezuela\", \"0\", \"3\", \"7\", \"10\"],[\"16\", \"armenia\", \"0\", \"2\", \"6\", \"8\"],[\"17\", \"azerbaijan\", \"0\", \"2\", \"4\", \"6\"],[\"18\", \"japan\", \"0\", \"1\", \"4\", \"5\"],[\"19\", \"france\", \"0\", \"1\", \"3\", \"4\"],[\"19\", \"romania\", \"0\", \"1\", \"3\", \"4\"],[\"19\", \"estonia\", \"0\", \"1\", \"3\", \"4\"],[\"22\", \"germany\", \"0\", \"1\", \"1\", \"2\"],[\"22\", \"colombia\", \"0\", \"1\", \"1\", \"2\"],[\"24\", \"israel\", \"0\", \"1\", \"0\", \"1\"],[\"25\", \"greece\", \"0\", \"0\", \"2\", \"2\"],[\"25\", \"spain\", \"0\", \"0\", \"2\", \"2\"],[\"27\", \"czech republic\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"indonesia\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"iran\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"jordan\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"united states\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"turkmenistan\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"south korea\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"slovenia\", \"0\", \"0\", \"1\", \"1\"],[\"total\", \"total\", \"245\", \"111\", \"207\", \"425\"]]\nQuestion = Is it true that ukraine received a total of 50 medals which was two times as many as the 5th ranked team?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef two_times(num1, num2):\n    return num1 == 2 * num2\n\ndef solution(table_data):\n    nations = get_column_by_name(table_data, \"nation\")\n    totals = get_column_by_name(table_data, \"total\")\n    ukraine_total = totals[nations.index(\"ukraine\")]\n    fifth_ranked_total = totals[4]\n    answer = equal_to(ukraine_total, \"50\") and two_times(int(ukraine_total), int(fifth_ranked_total))\n    return answer\n\n### END"}
{"id": "b79fc88a-fb17-41cd-b888-e6f488e80003", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = israeli football league\ntable_data = [[\"season\", \"champion\", \"runner up\", \"israel bowl\", \"venue\", \"date\", \"finals mvp\"],[\"2007 - 08\", \"jerusalem lions\", \"haifa underdogs\", \"i\", \"kraft stadium , jerusalem\", \"march 28 , 2008\", \"moshe horowitz (lions)\"],[\"2008 - 09\", \"modi'in pioneers\", \"jerusalem lions\", \"ii\", \"kraft stadium , jerusalem\", \"april 3 , 2009\", \"assaf katz (pioneers)\"],[\"2009 - 10\", \"tel aviv sabres\", \"jerusalem lions\", \"iii\", \"kraft stadium , jerusalem\", \"march 26 , 2010\", \"evan reshef (sabres)\"],[\"2010 - 11\", \"judean rebels\", \"tel aviv sabres\", \"iv\", \"kraft stadium , jerusalem\", \"march 18 , 2011\", \"zack miller (rebels)\"],[\"2011 - 12\", \"tel aviv sabres\", \"tel aviv pioneers\", \"v\", \"kraft stadium , jerusalem\", \"march 30 , 2012\", \"adi hakami and jonathan curran (sabres)\"],[\"2012 - 13\", \"tel aviv sabres\", \"judean rebels\", \"vi\", \"kraft stadium , jerusalem\", \"march 22 , 2013\", \"jonathan curran and banning fudge (sabres)\"]]\nQuestion = Is it true that the march 30 , 2012 israel bowl was the fifth?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    israel_bowls = get_column_by_name(table_data, \"israel bowl\")\n    for date, israel_bowl in zip(dates, israel_bowls):\n        if date.lower() == \"march 30 , 2012\":\n            answer = equal_to(israel_bowl.lower(), \"v\")\n            break \n    return answer\n\n### END"}
{"id": "8b3f0f4d-5bee-45e7-a296-54af70d209c6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of tallest buildings in germany\ntable_data = [[\"name\", \"city\", \"height (m)\", \"height (ft)\", \"floors\", \"years as tallest\"],[\"commerzbank tower\", \"frankfurt\", \"259\", \"850\", \"56\", \"1997 - present\"],[\"messeturm\", \"frankfurt\", \"257\", \"843\", \"55\", \"1990 - 1997\"],[\"silberturm\", \"frankfurt\", \"166\", \"545\", \"32\", \"1978 - 1990\"],[\"westend gate\", \"frankfurt\", \"159\", \"522\", \"47\", \"1976 - 1978\"],[\"colonia - hochhaus\", \"cologne\", \"147\", \"482\", \"42\", \"1973 - 1976\"],[\"city - hochhaus leipzig\", \"leipzig\", \"143\", \"468\", \"36\", \"1972 - 1973\"],[\"bayer - hochhaus\", \"leverkusen\", \"122\", \"400\", \"29\", \"1963 - 1972\"],[\"friedrich - engelhorn - hochhaus\", \"ludwigshafen\", \"102\", \"335\", \"28\", \"1957 - 1963\"]]\nQuestion = Is it true that 102 meters is equivalent to 335 feet?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    heights_m = get_column_by_name(table_data, \"height (m)\")\n    heights_ft = get_column_by_name(table_data, \"height (ft)\")\n    for height_m, height_ft in zip(heights_m, heights_ft):\n        if equal_to(height_m, \"102\") and equal_to(height_ft, \"335\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "bdc4365a-0a5d-4240-b2f2-17034999697a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1989 - 90 fa cup\ntable_data = [[\"tie no\", \"home team\", \"score\", \"away team\", \"date\"],[\"1\", \"blackpool\", \"2 - 2\", \"queens park rangers\", \"18 feb 1990\"],[\"replay\", \"queens park rangers\", \"0 - 0\", \"blackpool\", \"21 feb 1990\"],[\"replay\", \"queens park rangers\", \"3 - 0\", \"blackpool\", \"26 feb 1990\"],[\"2\", \"bristol city\", \"0 - 0\", \"cambridge united\", \"17 feb 1990\"],[\"replay\", \"cambridge united\", \"1 - 1\", \"bristol city\", \"21 feb 1990\"],[\"replay\", \"cambridge united\", \"5 - 1\", \"bristol city\", \"27 feb 1990\"],[\"3\", \"liverpool\", \"3 - 0\", \"southampton\", \"17 feb 1990\"],[\"4\", \"west bromwich albion\", \"0 - 2\", \"aston villa\", \"17 feb 1990\"],[\"5\", \"sheffield united\", \"2 - 2\", \"barnsley\", \"18 feb 1990\"],[\"replay\", \"barnsley\", \"0 - 0\", \"sheffield united\", \"21 feb 1990\"],[\"replay\", \"barnsley\", \"0 - 1\", \"sheffield united\", \"5 mar 1990\"],[\"6\", \"newcastle united\", \"2 - 3\", \"manchester united\", \"18 feb 1990\"],[\"7\", \"oldham athletic\", \"2 - 2\", \"everton\", \"17 feb 1990\"],[\"replay\", \"everton\", \"1 - 1\", \"oldham athletic\", \"21 feb 1990\"],[\"replay\", \"oldham athletic\", \"2 - 1\", \"everton\", \"10 mar 1990\"],[\"8\", \"crystal palace\", \"1 - 0\", \"rochdale\", \"17 feb 1990\"]]\nQuestion = Is it true that west bromwich albion was the home team on 17 feb 1990?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for home_team, date in zip(home_teams, dates):\n        if \"west bromwich albion\" in home_team.lower() and \"17 feb 1990\" in date.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "fc9343cc-6021-4d83-9945-9ec4c41d511b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"singular abbreviation\", \"singular word\", \"plural abbreviation\", \"plural word\", \"discipline\"],[\"d\", \"didot\", \"dd\", \"didots\", \"typography\"],[\"f\", \"following line or page\", \"ff\", \"following lines or pages\", \"notes\"],[\"f\", \"folio\", \"ff\", \"folios\", \"literature\"],[\"h\", \"hand\", \"hh\", \"hands\", \"horse height\"],[\"l\", \"line\", \"ll\", \"lines\", \"notes\"],[\"ms\", \"manuscript\", \"mss\", \"manuscripts\", \"notes\"],[\"op\", \"opus\", \"opp\", \"opera\", \"notes\"],[\"p\", \"page\", \"pp\", \"pages\", \"notes\"],[\"q\", \"quarto\", \"qq\", \"quartos\", \"literature\"],[\"s (or §)\", \"section\", \"ss (or §§)\", \"sections\", \"notes\"],[\"v\", \"volume\", \"vv\", \"volumes\", \"notes\"]]\nQuestion = Is it true that the singular word for hand uses the plural word hands?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    singular_words = get_column_by_name(table_data, \"singular word\")\n    plural_words = get_column_by_name(table_data, \"plural word\")\n    for singular_word, plural_word in zip(singular_words, plural_words):\n        if singular_word.lower() == \"hand\":\n            answer = equal_to(plural_word, \"hands\")\n            break \n    return answer\n\n### END"}
{"id": "d7f31212-d0d9-40f6-97b6-7f87060a1609", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of leverage episodes\ntable_data = [[\"series\",\"season\",\"title\",\"directed by\",\"written by\",\"original air date\",\"us viewers (in millions)\"],[\"14\",\"1\",\"the beantown bailout job\",\"dean devlin\",\"john rogers\",\"july 15, 2009\",\"3.89\"],[\"15\",\"2\",\"the tap - out job\",\"marc roskin\",\"albert kim\",\"july 22, 2009\",\"3.05\"],[\"16\",\"3\",\"the order 23 job\",\"rod hardy\",\"chris downey\",\"july 29, 2009\",\"3.68\"],[\"17\",\"4\",\"the fairy godparents job\",\"jonathan frakes\",\"amy berg\",\"august 5, 2009\",\"3.69\"],[\"18\",\"5\",\"the three days of the hunter job\",\"marc roskin\",\"melissa glenn & jessica rieder\",\"august 12, 2009\",\"3.16\"],[\"19\",\"6\",\"the top hat job\",\"peter o'fallon\",\"m scott veach & christine boylan\",\"august 19, 2009\",\"3.43\"],[\"20\",\"7\",\"the two live crew job\",\"dean devlin\",\"amy berg & john rogers\",\"august 26, 2009\",\"3.73\"],[\"21\",\"8\",\"the ice man job\",\"jeremiah chechik\",\"christine boylan\",\"september 2, 2009\",\"3.58\"],[\"22\",\"9\",\"the lost heir job\",\"peter winther\",\"chris downey\",\"september 9, 2009\",\"3.37\"],[\"23\",\"10\",\"the runway job\",\"mark roskin\",\"albert kim\",\"january 13, 2010\",\"3.69\"],[\"24\",\"11\",\"the bottle job\",\"jonathan frakes\",\"christine boylan\",\"january 20, 2010\",\"3.00\"],[\"25\",\"12\",\"the zanzibar marketplace job\",\"jeremiah chechik\",\"melissa glenn & jessica rieder\",\"january 27, 2010\",\"3.02\"],[\"26\",\"13\",\"the future job\",\"mark roskin\",\"amy berg & chris downey\",\"february 3, 2010\",\"2.91\"],[\"27\",\"14\",\"the three strikes job\",\"dean devlin\",\"john rogers\",\"february 10, 2010\",\"2.8\"]]\nQuestion = Is it true that the director , mark roskin directed series number 23?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    series = get_column_by_name(table_data, \"series\")\n    directors = get_column_by_name(table_data, \"directed by\")\n    answer = False\n    for serie, director in zip(series, directors):\n        if serie == \"23\" and director.lower() == \"mark roskin\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "444b9af6-9f7c-4f6c-9a4f-c915b97ce103", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of rna structure prediction software\ntable_data = [[\"name\", \"species specific\", \"intra - molecular structure\", \"comparative\", \"link\"],[\"diana - microt\", \"human , mouse\", \"no\", \"yes\", \"webserver\"],[\"microtar\", \"no\", \"no\", \"no\", \"sourcecode\"],[\"mitarget\", \"no\", \"no\", \"no\", \"webserver\"],[\"mirror\", \"no\", \"no\", \"no\", \"webserver\"],[\"pictar\", \"8 vertebrates\", \"no\", \"yes\", \"predictions\"],[\"pita\", \"no\", \"yes\", \"no\", \"executable , webserver , predictions\"],[\"rna22\", \"no\", \"no\", \"no\", \"predictions custom\"],[\"rnahybrid\", \"no\", \"no\", \"no\", \"sourcecode , webserver\"],[\"sylamer\", \"no\", \"no\", \"no\", \"sourcecode webserver\"],[\"taref\", \"yes\", \"no\", \"no\", \"server / sourcecode\"],[\"p - taref\", \"yes\", \"no\", \"no\", \"server / standalone\"],[\"targetscan\", \"vertebrates , flies , nematodes\", \"evaluated indirectly\", \"yes\", \"sourcecode , webserver\"]]\nQuestion = Is it true that for the name diana - microt , species specific for human , mouse , the link is sourcecode?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    species_specifics = get_column_by_name(table_data, \"species specific\")\n    links = get_column_by_name(table_data, \"link\")\n    for name, species_specific, link in zip(names, species_specifics, links):\n        if name.lower() == \"diana - microt\" and species_specific.lower() == \"human , mouse\":\n            answer = equal_to(link, \"sourcecode\")\n            break \n    return answer\n\n### END"}
{"id": "cd7a4a2c-cff0-4e02-bef1-db0e66372961", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sheffield and hallamshire association cup\ntable_data = [[\"season\", \"winner\", \"result\", \"runner - up\", \"final venue\"],[\"2002 - 03\", \"elm tree\", \"1 - 0\", \"stocksbridge park steels reserves\", \"belle vue\"],[\"2003 - 04\", \"hsbc\", \"3 - 2\", \"athersley recreation\", \"belle vue\"],[\"2004 - 05\", \"kiveton park\", \"2 - 2\", \"athersley recreation\", \"sandy lane\"],[\"2005 - 06\", \"kiveton park\", \"5 - 0\", \"sheffield lane top\", \"belle vue\"],[\"2006 - 07\", \"stocksbridge park steels reserves\", \"3 - 1\", \"hemsworth miners welfare\", \"millmoor\"],[\"2007 - 08\", \"athersley recreation\", \"1 - 0\", \"hollinsend amateurs\", \"oakwell\"],[\"2008 - 09\", \"hall green united\", \"2 - 1\", \"kirkburton\", \"keepmoat stadium (pitch 2)\"],[\"2009 - 10\", \"sheffield reserves\", \"2 - 1\", \"dearne colliery miners welfare\", \"inkersall road\"],[\"2010 - 11\", \"stocksbridge park steels reserves\", \"3 - 0\", \"kirkburton\", \"green lane\"],[\"2012 - 13\", \"swinton athletic\", \"3 - 0\", \"kirkburton\", \"sandy lane\"]]\nQuestion = Is it true that sheffield reserves was the winner when inkersall road was the final venue?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    winners = get_column_by_name(table_data, \"winner\")\n    final_venues = get_column_by_name(table_data, \"final venue\")\n    answer = False\n    for winner, final_venue in zip(winners, final_venues):\n        if \"sheffield reserves\" in winner.lower() and \"inkersall road\" in final_venue.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "cb9cd89c-4985-4161-9df0-24cf8b9bb869", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = hampden football netball league\ntable_data = [[\"club\", \"active\", \"wins\", \"losses\", \"draws\", \"percentage wins\", \"flags\"],[\"camperdown\", \"1930 - 2011\", \"723\", \"665\", \"15\", \"51.53%\", \"6\"],[\"cobden\", \"1930 - 2011\", \"640\", \"733\", \"17\", \"46.04%\", \"6\"],[\"colac\", \"1949 - 2000\", \"597\", \"373\", \"10\", \"60.92%\", \"10\"],[\"coragulac\", \"1961 - 1979\", \"118\", \"225\", \"2\", \"33.91%\", \"0\"],[\"koroit\", \"1961 - 2011\", \"431\", \"528\", \"8\", \"44.57%\", \"5\"],[\"mortlake\", \"1930 - 1998\", \"473\", \"633\", \"18\", \"42.08%\", \"3\"],[\"north warrnambool\", \"1997 - 2011\", \"52\", \"213\", \"3\", \"19.40%\", \"0\"],[\"port fairy\", \"1949 - 2011\", \"410\", \"738\", \"2\", \"35.65%\", \"1\"],[\"south warrnambool\", \"1933 - 2011\", \"745\", \"611\", \"17\", \"54.26%\", \"11\"],[\"terang\", \"1930 - 2001\", \"642\", \"580\", \"10\", \"52.11%\", \"8\"],[\"terang mortlake\", \"2002 - 2011\", \"141\", \"61\", \"1\", \"69.46%\", \"3\"],[\"warrnambool\", \"1933 - 2011\", \"895\", \"490\", \"19\", \"63.75%\", \"23\"],[\"western lions\", \"1999 - 2000\", \"2\", \"17\", \"0\", \"10.5%\", \"0\"]]\nQuestion = Is it true that there have been zero wins where the flags were more than 8 and 52.11% of wins?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    wins = get_column_by_name(table_data, \"wins\")\n    flags = get_column_by_name(table_data, \"flags\")\n    percentage_wins = get_column_by_name(table_data, \"percentage wins\")\n    answer = False\n    for win, flag, percentage_win in zip(wins, flags, percentage_wins):\n        if greater(int(flag), 8) and equal_to(percentage_win, \"52.11%\"):\n            if int(win) == 0:\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "e62955c2-eeda-4349-bf41-43681b91eda6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mahmoud amnah\ntable_data = [[\"date\",\"venue\",\"score\",\"result\",\"competition\"],[\"08 oct 2004\",\"doha, qatar\",\"1 - 0\",\"2 - 1\",\"international friendly\"],[\"26 jan 2005\",\"kuwait city, kuwait\",\"1 - 1\",\"2 - 3\",\"international friendly\"],[\"04 dec 2005\",\"al - gharafa stadium, doha, qatar\",\"1 - 0\",\"2 - 2\",\"west asian games 2005\"],[\"10 dec 2005\",\"qatar sc stadium, doha, qatar\",\"1 - 0\",\"2 - 2\",\"west asian games 2005\"],[\"17 may 2008\",\"abbasiyyin stadium, damascus, syria\",\"1 - 0\",\"2 - 1\",\"international friendly\"]]\nQuestion = Is it true that west asian games 2006 had a score of 2 - 0 and had a result of 2 - 1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    scores = get_column_by_name(table_data, \"score\")\n    results = get_column_by_name(table_data, \"result\")\n    competitions = get_column_by_name(table_data, \"competition\")\n    for score, result, competition in zip(scores, results, competitions):\n        if \"west asian games 2006\" in competition.lower():\n            answer = equal_to(score, \"2 - 0\") and equal_to(result, \"2 - 1\")\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "a22ce0be-bf99-419a-9423-f65518fc4d48", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1935 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"16.18 (114)\", \"north melbourne\", \"6.10 (46)\", \"glenferrie oval\", \"4000\", \"13 july 1935\"],[\"fitzroy\", \"9.10 (64)\", \"st kilda\", \"12.12 (84)\", \"brunswick street oval\", \"15000\", \"13 july 1935\"],[\"essendon\", \"10.14 (74)\", \"melbourne\", \"12.21 (93)\", \"windy hill\", \"8000\", \"13 july 1935\"],[\"richmond\", \"16.10 (106)\", \"footscray\", \"3.11 (29)\", \"punt road oval\", \"16000\", \"13 july 1935\"],[\"south melbourne\", \"18.16 (124)\", \"collingwood\", \"10.11 (71)\", \"lake oval\", \"31000\", \"13 july 1935\"],[\"geelong\", \"6.7 (43)\", \"carlton\", \"11.10 (76)\", \"corio oval\", \"14500\", \"13 july 1935\"]]\nQuestion = Is it true that the home team of hawthorn had a score of 16.18 (114)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    for home_team, home_team_score in zip(home_teams, home_team_scores):\n        if home_team.lower() == \"hawthorn\":\n            answer = equal_to(home_team_score, \"16.18 (114)\")\n            break \n    return answer\n\n### END"}
{"id": "7f2ee73f-8f7f-4b6b-997e-8dd9fa6a753a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1954 baltimore colts season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"record\", \"game site\", \"attendance\"],[\"1\", \"september 26 , 1954\", \"los angeles rams\", \"l 0 - 48\", \"0 - 1\", \"memorial stadium\", \"36215\"],[\"2\", \"october 2 , 1954\", \"new york giants\", \"w 20 - 14\", \"1 - 1\", \"memorial stadium\", \"27088\"],[\"3\", \"october 10 , 1954\", \"chicago bears\", \"l 9 - 28\", \"1 - 2\", \"wrigley field\", \"27845\"],[\"4\", \"october 16 , 1954\", \"detroit lions\", \"l 0 - 35\", \"1 - 3\", \"tiger stadium\", \"48272\"],[\"5\", \"october 24 , 1954\", \"green bay packers\", \"l 6 - 7\", \"1 - 4\", \"memorial stadium\", \"28680\"],[\"6\", \"october 31 , 1954\", \"washington redskins\", \"l 21 - 24\", \"1 - 5\", \"griffith stadium\", \"23566\"],[\"7\", \"november 6 , 1954\", \"detroit lions\", \"l 3 - 27\", \"1 - 6\", \"memorial stadium\", \"25287\"],[\"8\", \"november 13 , 1954\", \"green bay packers\", \"l 13 - 24\", \"1 - 7\", \"milwaukee county stadium\", \"19786\"],[\"9\", \"november 21 , 1954\", \"chicago bears\", \"l 13 - 28\", \"1 - 8\", \"memorial stadium\", \"23093\"],[\"10\", \"november 28 , 1954\", \"san francisco 49ers\", \"w 17 - 13\", \"2 - 8\", \"memorial stadium\", \"23875\"],[\"11\", \"december 4 , 1954\", \"los angeles rams\", \"w 22 - 21\", \"3 - 8\", \"los angeles memorial coliseum\", \"30744\"],[\"12\", \"december 11 , 1954\", \"san francisco 49ers\", \"l 7 - 10\", \"3 - 9\", \"kezar stadium\", \"26856\"]]\nQuestion = Is it true that during the game on december 11 , 1954 , there were 26856 people watching the game in the stadium?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    answer = False\n    for date, attendance in zip(dates, attendances):\n        if \"december 11 , 1954\" in date.lower():\n            answer = attendance == \"26856\"\n            break\n    return answer\n\n### END"}
{"id": "74d6fa70-123a-404a-af4b-97d76c5ad3c7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1964 all - ireland senior hurling championship\ntable_data = [[\"rank\", \"player\", \"county\", \"tally\", \"total\", \"opposition\"],[\"1\", \"richard browne\", \"cork\", \"4 - 0\", \"12\", \"galway\"],[\"2\", \"tony forrestal\", \"kilkenny\", \"3 - 2\", \"11\", \"wexford\"],[\"3\", \"pat cronin\", \"clare\", \"2 - 4\", \"10\", \"limerick\"],[\"3\", \"jimmy doyle\", \"tipperary\", \"1 - 7\", \"10\", \"clare\"],[\"3\", \"jimmy doyle\", \"tipperary\", \"0 - 10\", \"10\", \"cork\"],[\"3\", \"jimmy doyle\", \"tipperary\", \"0 - 10\", \"10\", \"kilkenny\"],[\"7\", \"donie nealon\", \"tipperary\", \"3 - 0\", \"9\", \"kilkenny\"],[\"7\", \"philly grimes\", \"waterford\", \"2 - 3\", \"9\", \"cork\"],[\"7\", \"paddy molloy\", \"offaly\", \"1 - 6\", \"9\", \"westmeath\"],[\"10\", \"fran whelan\", \"dublin\", \"2 - 2\", \"8\", \"carlow\"],[\"10\", \"pat harte\", \"cork\", \"2 - 2\", \"8\", \"waterford\"]]\nQuestion = Is it true that richard browne is ranked number 1 and has a tally of 4 - 0?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    players = get_column_by_name(table_data, \"player\")\n    tallies = get_column_by_name(table_data, \"tally\")\n    for rank, player, tally in zip(ranks, players, tallies):\n        if player.lower() == \"richard browne\":\n            answer = equal_to(rank, \"1\") and equal_to(tally, \"4 - 0\")\n            break \n    return answer\n\n### END"}
{"id": "32f42ffa-4a8d-4afa-bb16-1ee03d4855bd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = peaches & herb\ntable_data = [[\"title\", \"label\", \"year of release\", \"country of release\", \"peaches :\"],[\"for your love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"let 's fall in love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"peaches & herb\", \"mca\", \"1977\", \"usa\", \"linda greene\"],[\"2 hot\", \"mvp / polydor\", \"1978\", \"usa\", \"linda greene\"],[\"twice the fire\", \"mvp / polydor\", \"1979\", \"usa\", \"linda greene\"],[\"demasiado candente\", \"mvp / polydor\", \"1979\", \"argentina\", \"linda greene\"],[\"worth the wait\", \"mvp / polydor\", \"1980\", \"usa\", \"linda greene\"],[\"sayin' something\", \"mvp / polydor\", \"1981\", \"usa\", \"linda greene\"],[\"remember\", \"the entertainment co / columbia\", \"1983\", \"usa\", \"linda greene\"],[\"colors of love\", \"imagen\", \"2009\", \"usa\", \"meritxell negre\"]]\nQuestion = Is it true that the peaches , francine barker , are the peaches for sayin' something?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    peaches = get_column_by_name(table_data, \"peaches :\")\n    for title, peach in zip(titles, peaches):\n        if title.lower() == \"sayin' something\":\n            answer = equal_to(peach, \"francine barker\")\n            break \n    return answer\n\n### END"}
{"id": "788bda7a-1b34-48fc-92b7-01f59031c3d9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = south wales derby\ntable_data = [[\"competition\", \"total matches\", \"cardiff win\", \"draw\", \"swansea win\"],[\"league\", \"55\", \"19\", \"16\", \"20\"],[\"fa cup\", \"2\", \"0\", \"0\", \"2\"],[\"league cup\", \"5\", \"2\", \"0\", \"3\"],[\"associate members cup\", \"4\", \"1\", \"1\", \"2\"],[\"welsh cup / faw premier cup\", \"36\", \"21\", \"8\", \"7\"],[\"southern league\", \"4\", \"1\", \"2\", \"1\"],[\"total\", \"106\", \"44\", \"27\", \"35\"]]\nQuestion = Is it true that no swansea win has a draw of 27?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    draws = get_column_by_name(table_data, \"draw\")\n    swansea_wins = get_column_by_name(table_data, \"swansea win\")\n    for draw, swansea_win in zip(draws, swansea_wins):\n        if equal_to(draw, \"27\") and equal_to(swansea_win, \"27\"):\n            answer = True\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "c4ca4e20-d6d0-4893-91b8-ca5d2b53c4dc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glover teixeira\ntable_data = [[\"result\", \"opponent\", \"method\", \"event\", \"date\"],[\"loss\", \"gabriel vella\", \"points\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"armando sapo\", \"submission\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"salvador minnit\", \"submission\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"jorge bezerra\", \"points\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"loss\", \"vinny magalhães\", \"submission (armbar)\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"loss\", \"gerardi rinaldi\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"dean lister\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"vesa vuori\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"leonardo chocolate\", \"submission (rear naked choke)\", \"adcc brasil trails (under 99 kg)\", \"2009\"],[\"win\", \"renato ferreira\", \"points\", \"adcc brasil trails (under 99 kg)\", \"2009\"]]\nQuestion = Is it true that renato ferreira won in 2009?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    results = get_column_by_name(table_data, \"result\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for result, opponent, date in zip(results, opponents, dates):\n        if \"renato ferreira\" in opponent.lower() and \"2009\" in date:\n            if \"win\" in result.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "42ac0c88-34da-4355-afa4-68006e88deaf", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of tallest buildings in germany\ntable_data = [[\"name\", \"city\", \"height (m)\", \"height (ft)\", \"floors\", \"years as tallest\"],[\"commerzbank tower\", \"frankfurt\", \"259\", \"850\", \"56\", \"1997 - present\"],[\"messeturm\", \"frankfurt\", \"257\", \"843\", \"55\", \"1990 - 1997\"],[\"silberturm\", \"frankfurt\", \"166\", \"545\", \"32\", \"1978 - 1990\"],[\"westend gate\", \"frankfurt\", \"159\", \"522\", \"47\", \"1976 - 1978\"],[\"colonia - hochhaus\", \"cologne\", \"147\", \"482\", \"42\", \"1973 - 1976\"],[\"city - hochhaus leipzig\", \"leipzig\", \"143\", \"468\", \"36\", \"1972 - 1973\"],[\"bayer - hochhaus\", \"leverkusen\", \"122\", \"400\", \"29\", \"1963 - 1972\"],[\"friedrich - engelhorn - hochhaus\", \"ludwigshafen\", \"102\", \"335\", \"28\", \"1957 - 1963\"]]\nQuestion = Is it true that colonia - hochhaus is 482 feet tall?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    buildings = get_column_by_name(table_data, \"name\")\n    heights = get_column_by_name(table_data, \"height (ft)\")\n    for building, height in zip(buildings, heights):\n        if building.lower() == \"colonia - hochhaus\":\n            answer = equal_to(height, \"482\")\n            break \n    return answer\n\n### END"}
{"id": "366b9d5f-051d-4ae2-aa47-cceea9db7c40", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = colin morgan\ntable_data = [[\"year\", \"award\", \"category\", \"role\", \"result\"],[\"2008\", \"variety club showbiz awards\", \"outstanding newcomer\", \"merlin in merlin\", \"won\"],[\"2009\", \"monte carlo tv festival awards\", \"outstanding actor (drama)\", \"merlin in merlin\", \"nominated\"],[\"2010\", \"monte carlo tv festival awards\", \"outstanding actor (drama)\", \"merlin in merlin\", \"nominated\"],[\"2011\", \"monte carlo tv festival awards\", \"outstanding actor (drama)\", \"merlin in merlin\", \"nominated\"],[\"2012\", \"virgin media tv awards\", \"best actor\", \"merlin in merlin\", \"won\"],[\"2013\", \"national television award\", \"drama performance : male\", \"merlin in merlin\", \"won\"]]\nQuestion = Is it true that virgin media tv has a award result of won?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    awards = get_column_by_name(table_data, \"award\")\n    results = get_column_by_name(table_data, \"result\")\n    answer = False\n    for award, result in zip(awards, results):\n        if \"virgin media tv awards\" in award.lower() and \"won\" in result.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "3dff417e-9625-4a8e-bd80-ab2531b1ae42", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2002 valencian community motorcycle grand prix\ntable_data = [[\"rider\", \"manufacturer\", \"laps\", \"time / retired\", \"grid\"],[\"alex barros\", \"honda\", \"30\", \"47:22.404\", \"2\"],[\"valentino rossi\", \"honda\", \"30\", \"+ 0.230\", \"6\"],[\"max biaggi\", \"yamaha\", \"30\", \"+ 15.213\", \"1\"],[\"daijiro kato\", \"honda\", \"30\", \"+ 22.504\", \"3\"],[\"tohru ukawa\", \"honda\", \"30\", \"+ 35.165\", \"7\"],[\"shinya nakano\", \"yamaha\", \"30\", \"+ 50.169\", \"9\"],[\"jurgen vd goorbergh\", \"honda\", \"30\", \"+ 1:03.814\", \"15\"],[\"jeremy mcwilliams\", \"proton kr\", \"30\", \"+ 1:05.079\", \"8\"],[\"olivier jacque\", \"yamaha\", \"30\", \"+ 1:08.312\", \"11\"],[\"norifumi abe\", \"yamaha\", \"30\", \"+ 1:08.312\", \"20\"],[\"john hopkins\", \"yamaha\", \"30\", \"+ 1:26.241\", \"17\"],[\"andrew pitt\", \"kawasaki\", \"30\", \"+ 1:27.427\", \"18\"],[\"sete gibernau\", \"suzuki\", \"29\", \"+ 1 lap\", \"10\"],[\"tetsuya harada\", \"honda\", \"29\", \"+ 1 lap\", \"22\"],[\"kenny roberts , jr\", \"suzuki\", \"24\", \"retirement\", \"14\"],[\"loris capirossi\", \"honda\", \"19\", \"accident\", \"12\"],[\"david garcía\", \"proton kr\", \"13\", \"retirement\", \"19\"],[\"garry mccoy\", \"yamaha\", \"6\", \"accident\", \"4\"],[\"nobuatsu aoki\", \"proton kr\", \"1\", \"accident\", \"16\"],[\"régis laconi\", \"aprilia\", \"1\", \"retirement\", \"13\"],[\"josé luis cardoso\", \"yamaha\", \"0\", \"accident\", \"21\"],[\"carlos checa\", \"yamaha\", \"0\", \"accident\", \"5\"]]\nQuestion = Is it true that when the grid was 21 the rider was jose luis cardoso?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    riders = get_column_by_name(table_data, \"rider\")\n    grids = get_column_by_name(table_data, \"grid\")\n    answer = False\n    for rider, grid in zip(riders, grids):\n        if grid == \"21\" and rider.lower() == \"josé luis cardoso\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "16125e29-78af-425b-ae6b-499cf84ed450", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1928 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"fitzroy\", \"17.11 (113)\", \"south melbourne\", \"11.11 (77)\", \"brunswick street oval\", \"8000\", \"2 june 1928\"],[\"carlton\", \"12.12 (84)\", \"collingwood\", \"13.9 (87)\", \"princes park\", \"30000\", \"2 june 1928\"],[\"north melbourne\", \"5.7 (37)\", \"melbourne\", \"14.16 (100)\", \"arden street oval\", \"9000\", \"2 june 1928\"],[\"richmond\", \"12.21 (93)\", \"geelong\", \"13.12 (90)\", \"punt road oval\", \"10000\", \"2 june 1928\"],[\"st kilda\", \"9.17 (71)\", \"footscray\", \"11.6 (72)\", \"junction oval\", \"12000\", \"2 june 1928\"],[\"hawthorn\", \"7.15 (57)\", \"essendon\", \"13.20 (98)\", \"glenferrie oval\", \"6000\", \"2 june 1928\"]]\nQuestion = Is it true that carlton played collingwood at princes park on 2 june 1928?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    dates = get_column_by_name(table_data, \"date\")\n    for home_team, away_team, venue, date in zip(home_teams, away_teams, venues, dates):\n        if home_team.lower() == \"carlton\" and away_team.lower() == \"collingwood\" and venue.lower() == \"princes park\" and date.lower() == \"2 june 1928\":\n            return True\n    return False\n\n### END"}
{"id": "0ca20b9c-2b31-4537-aee5-43ac62715885", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 issf world cup final (shotgun)\ntable_data = [[\"shooter\", \"event\", \"rank points\", \"score points\", \"total\"],[\"georgios achilleos ( cyp )\", \"wcf 2007\", \"defending champion\", \"defending champion\", \"defending champion\"],[\"vincent hancock ( usa )\", \"og beijing\", \"olympic gold medalist\", \"olympic gold medalist\", \"olympic gold medalist\"],[\"tore brovold ( nor )\", \"og beijing\", \"olympic silver medalist\", \"olympic silver medalist\", \"olympic silver medalist\"],[\"anthony terras ( fra )\", \"og beijing\", \"olympic bronze medalist\", \"olympic bronze medalist\", \"olympic bronze medalist\"],[\"ariel mauricio flores ( mex )\", \"wc kerrville\", \"15\", \"12\", \"27\"],[\"qu ridong ( chn )\", \"wc beijing\", \"15\", \"10\", \"25\"],[\"andrea benelli ( ita )\", \"wc belgrade\", \"10\", \"13\", \"23\"],[\"konstantin tsuranov ( rus )\", \"wc beijing\", \"10\", \"10\", \"20\"],[\"jan sychra ( cze )\", \"wc belgrade\", \"5\", \"13\", \"18\"],[\"valerio luchini ( ita )\", \"wc kerrville\", \"8\", \"10\", \"18\"],[\"leos hlavacek ( cze )\", \"wc suhl\", \"5\", \"11\", \"16\"],[\"abdullah alrashidi ( kuw )\", \"wc belgrade\", \"3\", \"12\", \"15\"]]\nQuestion = Is it true that qu ridong ( chn ) is the shooter with a total of 25?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    shooters = get_column_by_name(table_data, \"shooter\")\n    totals = get_column_by_name(table_data, \"total\")\n    for shooter, total in zip(shooters, totals):\n        if shooter.lower() == \"qu ridong ( chn )\":\n            answer = equal_to(total, \"25\")\n            break \n    return answer\n\n### END"}
{"id": "b2bfc411-93bf-49c6-a7c4-a33e66bf3acd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 melbourne cup\ntable_data = [[\"saddle cloth\", \"horse\", \"trainer\", \"jockey\", \"weight (kg)\", \"barrier\", \"placing\"],[\"1\", \"septimus\", \"aidan o'brien\", \"j p murtagh\", \"58.5\", \"10\", \"18\"],[\"2\", \"master o 'reilly\", \"danny o'brien\", \"v duric\", \"55\", \"6\", \"4\"],[\"3\", \"honolulu\", \"aidan o'brien\", \"colm odonoghue\", \"54.5\", \"24\", \"21\"],[\"4\", \"cest la guerre\", \"john sadler\", \"b prebble\", \"54\", \"5\", \"3\"],[\"5\", \"nom du jeu\", \"murray baker\", \"j lloyd\", \"54\", \"1\", \"8\"],[\"6\", \"yellowstone\", \"jane chapple - hyam\", \"j f egan\", \"54\", \"scr\", \"scr\"],[\"7\", \"zipping\", \"john sadler\", \"d nikolic\", \"54\", \"16\", \"9\"],[\"8\", \"mad rush\", \"luca cumani\", \"damien oliver\", \"53.5\", \"4\", \"7\"],[\"9\", \"ice chariot\", \"ron maund\", \"m rodd\", \"53\", \"22\", \"11\"],[\"10\", \"viewed\", \"bart cummings\", \"b shinn\", \"53\", \"9\", \"1\"],[\"11\", \"littorio\", \"nigel blackiston\", \"s r king\", \"52.5\", \"17\", \"13\"],[\"12\", \"bauer\", \"luca cumani\", \"c w brown\", \"52\", \"13\", \"2\"],[\"13\", \"boundless\", \"stephen mckee\", \"g j childs\", \"52\", \"20\", \"15\"],[\"14\", \"gallopin\", \"danny o'brien\", \"j winks\", \"52\", \"21\", \"dnf\"],[\"15\", \"guyno\", \"lou luciani\", \"c newitt\", \"52\", \"8\", \"12\"],[\"16\", \"zarita\", \"pat hyland\", \"d dunn\", \"52\", \"scr\", \"scr\"],[\"17\", \"newport\", \"paul perry\", \"chris symons\", \"51.5\", \"15\", \"10\"],[\"18\", \"profound beauty\", \"dermot k weld\", \"glen boss\", \"51.5\", \"2\", \"5\"],[\"19\", \"red lord\", \"anthony cummings\", \"nicholas hall\", \"51.5\", \"14\", \"16\"],[\"20\", \"varevees\", \"richard gibson\", \"craig williams\", \"51.5\", \"23\", \"14\"],[\"21\", \"prize lady\", \"graeme sanders\", \"m c sweeney\", \"51\", \"18\", \"17\"],[\"22\", \"alessandro volta\", \"aidan o'brien\", \"w m lordan\", \"50.5\", \"11\", \"20\"],[\"23\", \"barbaricus\", \"danny o'brien\", \"s baster\", \"50.5\", \"3\", \"19\"],[\"24\", \"moatize\", \"bart cummings\", \"ms c lindop\", \"50\", \"19\", \"6\"]]\nQuestion = Is it true that the horse named viewed had a saddle cloth of 9?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    horses = get_column_by_name(table_data, \"horse\")\n    saddle_cloths = get_column_by_name(table_data, \"saddle cloth\")\n    for horse, saddle_cloth in zip(horses, saddle_cloths):\n        if horse.lower() == \"viewed\":\n            answer = equal_to(saddle_cloth, \"9\")\n            break \n    return answer\n\n### END"}
{"id": "f4660915-96a6-47b9-b99e-93fec7199278", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1993 open championship\ntable_data = [[\"place\", \"player\", \"country\", \"score\", \"to par\"],[\"t1\", \"mark calcavecchia\", \"united states\", \"66\", \"- 4\"],[\"t1\", \"greg norman\", \"australia\", \"66\", \"- 4\"],[\"t1\", \"peter senior\", \"australia\", \"66\", \"- 4\"],[\"t1\", \"fuzzy zoeller\", \"united states\", \"66\", \"- 4\"],[\"t5\", \"stephen ames\", \"trinidad and tobago\", \"67\", \"- 3\"],[\"t5\", \"howard clark\", \"england\", \"67\", \"- 3\"],[\"t5\", \"glen day\", \"united states\", \"67\", \"- 3\"],[\"t5\", \"gary evans\", \"england\", \"67\", \"- 3\"],[\"t5\", \"bernhard langer\", \"germany\", \"67\", \"- 3\"],[\"t5\", \"mark mcnulty\", \"zimbabwe\", \"67\", \"- 3\"],[\"t5\", \"larry mize\", \"united states\", \"67\", \"- 3\"],[\"t5\", \"des smyth\", \"ireland\", \"67\", \"- 3\"],[\"t5\", \"greg turner\", \"new zealand\", \"67\", \"- 3\"],[\"t5\", \"wayne westner\", \"south africa\", \"67\", \"- 3\"]]\nQuestion = Is it true that fuzzy zoeller comes from england?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    countries = get_column_by_name(table_data, \"country\")\n    for player, country in zip(players, countries):\n        if player.lower() == \"fuzzy zoeller\":\n            answer = country.lower() == \"england\"\n            break\n    return answer\n\n### END"}
{"id": "18d68000-46fe-4217-b778-a6c153bfd1ca", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of flashpoint episodes\ntable_data = [[\"no\", \"-\", \"title\", \"directed by\", \"written by\", \"canadian air date\", \"us air date\", \"production code\", \"canadian viewers (million)\"],[\"45\", \"1\", \"personal effects (part 2)\", \"kelly makin\", \"mark ellis & stephanie morgenstern\", \"july 8 , 2011\", \"july 8 , 2011\", \"401\", \"1.369\"],[\"46\", \"2\", \"good cop\", \"john fawcett\", \"michael maclennan\", \"july 15 , 2011\", \"july 15 , 2011\", \"402\", \"1.508\"],[\"47\", \"3\", \"run , jaime , run\", \"kelly makin\", \"ian weir\", \"july 22 , 2011\", \"july 22 , 2011\", \"403\", \"1.537\"],[\"48\", \"4\", \"through a glass darkly\", \"john fawcett\", \"andrew wreggitt\", \"july 29 , 2011\", \"july 29 , 2011\", \"404\", \"1.430\"],[\"49\", \"5\", \"the better man\", \"david frazee\", \"michael maclennan\", \"august 5 , 2011\", \"august 5 , 2011\", \"405\", \"1.254\"],[\"50\", \"6\", \"a day in the life\", \"jim donovan\", \"mark ellis & stephanie morgenstern\", \"august 12 , 2011\", \"august 12 , 2011\", \"406\", \"1.406\"],[\"51\", \"7\", \"shockwave\", \"david frazee\", \"larry bambrick\", \"august 19 , 2011\", \"august 19 , 2011\", \"407\", \"1.313\"],[\"52\", \"8\", \"grounded\", \"david frazee\", \"karen walton\", \"september 19 , 2011\", \"october 18 , 2011\", \"412\", \"1.536\"],[\"53\", \"9\", \"the war within\", \"david frazee\", \"daniel godwin & michael maclennan\", \"september 27 , 2011\", \"december 13 , 2011\", \"408\", \"1.349\"],[\"54\", \"10\", \"the cost of doing business\", \"david frazee\", \"larry bambrick\", \"october 4 , 2011\", \"october 25 , 2011\", \"409\", \"1.309\"],[\"55\", \"11\", \"wild card\", \"brett sullivan\", \"karen walton\", \"october 11 , 2011\", \"november 1 , 2011\", \"410\", \"1.263\"],[\"56\", \"12\", \"a new life\", \"kelly makin\", \"adam barken\", \"november 1 , 2011\", \"november 8 , 2011\", \"411\", \"1.293\"],[\"57\", \"13\", \"a call to arms\", \"ã‰rik canuel\", \"alex levine\", \"november 8 , 2011\", \"november 22 , 2011\", \"413\", \"1.215\"],[\"58\", \"14\", \"day game\", \"kelly makin\", \"aubrey nealon\", \"november 15 , 2011\", \"november 29 , 2011\", \"415\", \"1.191\"],[\"59\", \"15\", \"blue on blue\", \"stefan pleszczynski\", \"adam barken\", \"november 22 , 2011\", \"december 6 , 2011\", \"416\", \"1.229\"],[\"60\", \"16\", \"team player\", \"kelly makin\", \"michael maclennan\", \"november 28 , 2011\", \"january 10 , 2012\", \"414\", \"1.452\"],[\"61\", \"17\", \"priority of life\", \"david frazee\", \"mark ellis , stephanie morgenstern & alex levine\", \"december 6 , 2011\", \"january 17 , 2012\", \"417\", \"1.317\"]]\nQuestion = Is it true that on december 6 , 2011 there was 1.317 million canadian viewers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    air_dates = get_column_by_name(table_data, \"canadian air date\")\n    viewers = get_column_by_name(table_data, \"canadian viewers (million)\")\n    for air_date, viewer in zip(air_dates, viewers):\n        if \"december 6 , 2011\" in air_date.lower():\n            answer = equal_to(viewer, \"1.317\")\n            break \n    return answer\n\n### END"}
{"id": "3b145128-0a9a-4016-8700-59a5f7885070", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"domestic freight\", \"domestic mail\", \"international freight\", \"international mail\", \"total freight and mail\", \"change\"],[\"2006\", \"132\", \"260\", \"2883\", \"3\", \"3278\", \"+ 9 , 8%\"],[\"2007\", \"50\", \"102\", \"3304\", \"3\", \"3459\", \"+ 5 , 5%\"],[\"2008\", \"43\", \"0\", \"4650\", \"1\", \"4695\", \"+ 35 , 7%\"],[\"2009\", \"157\", \"0\", \"6761\", \"0\", \"6919\", \"+ 47 , 4%\"],[\"2010\", \"72\", \"0\", \"6988\", \"0\", \"7061\", \"+ 2 , 1%\"],[\"2011\", \"1\", \"1\", \"7852\", \"0\", \"7853\", \"+ 11 , 2%\"]]\nQuestion = Is it true that in 2006 , the domestic mail was 260 , the international mail was larger than 1 , and the total for domestic freight was 132?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    domestic_freights = get_column_by_name(table_data, \"domestic freight\")\n    domestic_mails = get_column_by_name(table_data, \"domestic mail\")\n    international_mails = get_column_by_name(table_data, \"international mail\")\n    for year, domestic_freight, domestic_mail, international_mail in zip(years, domestic_freights, domestic_mails, international_mails):\n        if year == \"2006\":\n            answer = equal_to(domestic_freight, \"132\") and equal_to(domestic_mail, \"260\") and greater(international_mail, \"1\")\n            break\n    return answer\n\n### END"}
{"id": "4ed6054a-7827-4786-b95f-bc81e7a9bd28", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = prr locomotive classification\ntable_data = [[\"prr class\", \"builders model\", \"build date\", \"total produced\", \"wheel arrangement\", \"service\", \"power output\"],[\"bs6\", \"vo - 660\", \"1942 - 1945\", \"12\", \"b - b\", \"switcher\", \"\"],[\"bs6\", \"ds - 4 - 4 - 660\", \"1942 - 1945\", \"99\", \"b - b\", \"switcher\", \"\"],[\"bs7\", \"ds - 4 - 4 - 750\", \"1951\", \"24\", \"b - b\", \"switcher\", \"\"],[\"bs7\", \"s7\", \"1951\", \"7\", \"b - b\", \"switcher\", \"\"],[\"bs10\", \"vo\", \"1943 - 1945\", \"8\", \"b - b\", \"switcher\", \"\"],[\"bs10\", \"ds - 4 - 4 - 1000\", \"1948 - 1950\", \"137\", \"b - b\", \"switcher\", \"\"],[\"bs12\", \"s - 12\", \"1951 - 1956\", \"98\", \"b - b\", \"switcher\", \"\"],[\"bf15\", \"dr - 4 - 4 - 1500\", \"1940 - 1950\", \"34\", \"b - b\", \"freight\", \"\"],[\"bf16\", \"rf - 16 (a)\", \"1950 - 1952\", \"72\", \"b - b\", \"freight\", \"\"],[\"bf16\", \"rf - 16 (b)\", \"1950 - 1952\", \"30\", \"b - b\", \"freight\", \"\"],[\"bp60a\", \"dr - 12 - 8 - 3000\", \"1947 - 1948\", \"24\", \"2 - d - d - 2\", \"pass\", \"\"],[\"bp20\", \"dr - 6 - 4 - 2000\", \"1948\", \"18\", \"a1a - a1a\", \"pass\", \"\"],[\"bp20\", \"dr - 6 - 4 - 2000\", \"1948\", \"9\", \"a1a - a1a\", \"pass\", \"\"],[\"brs10\", \"drs - 4 - 4 - 1000\", \"1949 - 1950\", \"6\", \"b - b\", \"pass\", \"\"],[\"brs12\", \"rs - 12\", \"1951 - 1954\", \"8\", \"b - b\", \"pass\", \"\"],[\"brs15\", \"drs - 4 - 4 - 1500\", \"1950\", \"8\", \"b - b\", \"pass\", \"\"],[\"brs16\", \"as - 16\", \"1953 - 1955\", \"28\", \"c - c\", \"pass\", \"\"],[\"brs24\", \"rt - 624\", \"1951 - 1954\", \"22\", \"c - c\", \"transfer\", \"\"],[\"lrs25\", \"t2500\", \"1950 - 1951\", \"22\", \"c - c\", \"transfer\", \"\"]]\nQuestion = Is it true that the prr class brs24 built the model rt - 624 from 1951 - 1954?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    prr_classes = get_column_by_name(table_data, \"prr class\")\n    builders_models = get_column_by_name(table_data, \"builders model\")\n    build_dates = get_column_by_name(table_data, \"build date\")\n    answer = False\n    for prr_class, builders_model, build_date in zip(prr_classes, builders_models, build_dates):\n        if prr_class.lower() == \"brs24\" and builders_model.lower() == \"rt - 624\" and build_date == \"1951 - 1954\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "712270b2-455a-4b2b-8628-e93264c8bd10", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = papal conclave , 1314 - 16\ntable_data = [[\"elector\",\"nationality\",\"faction\",\"elevated\",\"elevator\"],[\"nicolò albertini , op\",\"prato\",\"italian\",\"1303 , december 18\",\"benedict xi\"],[\"bérenger frédol , seniore\",\"french\",\"french\",\"1305 , december 15\",\"clement v\"],[\"arnaud de falguières\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"],[\"guillaume de mandagot , crsa\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"arnaud d'aux\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"jacques d'euse\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"nicolas de fréauville , op\",\"french\",\"french\",\"1305 , december 15\",\"clement v\"],[\"arnaud nouvel , ocist\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"],[\"bérenguer frédol , iuniore\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"michel du bec - crespin\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"guillaume teste\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"guillaume pierre godin , op\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"vital du four , ofm\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"raymond , osb\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"giacomo colonna\",\"roman\",\"italian\",\"1278 , march 12\",\"nicholas iii\"],[\"napoleone orsini\",\"roman\",\"italian\",\"1288 , may 16\",\"nicholas iv\"],[\"pietro colonna\",\"roman\",\"italian\",\"1288 , may 16\",\"nicholas iv\"],[\"guglielmo de longhi\",\"bergamo\",\"italian\",\"1294 , september 18\",\"celestine v\"],[\"giacomo gaetani stefaneschi\",\"rome\",\"italian\",\"1295 , december 17\",\"boniface viii\"],[\"francesco caetani\",\"rome\",\"italian\",\"1295 , december 17\",\"boniface viii\"],[\"luc fieschi\",\"genoese\",\"italian\",\"1300 , march 2\",\"boniface viii\"],[\"arnaud de pellegrue\",\"french\",\"gascon\",\"1305 , december 15\",\"clement v\"],[\"raymond guillaume des forges\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"],[\"bernard de garves\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"]]\nQuestion = Is it true that jacques d'euse was the elector with the clement v elevator?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    electors = get_column_by_name(table_data, \"elector\")\n    elevators = get_column_by_name(table_data, \"elevator\")\n    for elector, elevator in zip(electors, elevators):\n        if equal_to(elector, \"jacques d'euse\") and equal_to(elevator, \"clement v\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "8b0581ab-e916-48fd-896c-2fa8a03486f1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = extreme engineering\ntable_data = [[\"no in series\",\"no in season\",\"title\",\"country\",\"project\",\"status at production\",\"original air date\"],[\"70\",\"1\",\"rebuilding new york city 's subway\",\"united states\",\"new york city subway expansion\",\"under construction\",\"april 8 , 2011\"],[\"71\",\"2\",\"drought - proofing australia\",\"australia\",\"wonthaggi desalination plant\",\"under construction\",\"april 15 , 2011\"],[\"72\",\"3\",\"azerbaijan 's amazing transformation\",\"azerbaijan\",\"flame towers and heydar aliyev cultural centre\",\"under construction\",\"april 22 , 2011\"],[\"73\",\"4\",\"london 's olympic aquatic stadium\",\"united kingdom\",\"london aquatics centre\",\"under construction\",\"april 29 , 2011\"],[\"74\",\"5\",\"constructing serbia 's largest bridge\",\"serbia\",\"ada bridge\",\"under construction\",\"june 18 , 2011\"],[\"75\",\"6\",\"amsterdam 's futuristic floating city\",\"netherlands\",\"netherlands land expansion\",\"under construction\",\"june 25 , 2011\"],[\"76\",\"7\",\"building mumbai 's modern airport\",\"india\",\"chhatrapati shivaji international airport\",\"under construction\",\"july 2 , 2011\"]]\nQuestion = Is it true that for the project flame towers and heydar aliyev cultural cenre in azerbaijan , the original air date was june 18 , 2011?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    projects = get_column_by_name(table_data, \"project\")\n    air_dates = get_column_by_name(table_data, \"original air date\")\n    for project, air_date in zip(projects, air_dates):\n        if project.lower() == \"flame towers and heydar aliyev cultural centre\":\n            answer = equal_to(air_date, \"june 18 , 2011\")\n            break \n    return answer\n\n### END"}
{"id": "a221b2fa-8f32-415f-ad3c-cca27b69b02c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of americas records in swimming\ntable_data = [[\"event\", \"time\", \"nationality\", \"date\", \"meet\", \"location\"],[\"50 m freestyle\", \"20.91\", \"brazil\", \"18 december 2009\", \"brazilian championships\", \"são paulo, brazil\"],[\"100 m freestyle\", \"46.91\", \"brazil\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m freestyle\", \"1:42.96\", \"united states\", \"12 august 2008\", \"olympic games\", \"beijing, china\"],[\"400 m freestyle\", \"3:42.78\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"800 m freestyle\", \"7:41.86\", \"canada\", \"27 july 2011\", \"world championships\", \"shanghai, china\"],[\"1500 m freestyle\", \"14:39.63\", \"canada\", \"4 august 2012\", \"olympic games\", \"london, united kingdom\"],[\"50 m backstroke\", \"24.33\", \"united states\", \"5 december 2008\", \"dutch swim cup\", \"eindhoven, netherlands\"],[\"100 m backstroke\", \"51.94\", \"united states\", \"8 july 2009\", \"us championships\", \"indianapolis, united states\"],[\"200 m backstroke\", \"1:51.92\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m breaststroke\", \"26.76\", \"brazil\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"100 m breaststroke\", \"58.96\", \"united states\", \"26 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m breaststroke\", \"2:07.42\", \"united states\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m butterfly\", \"22.76\", \"brazil\", \"26 april 2012\", \"maria lenk trophy\", \"rio de janeiro, brazil\"],[\"100 m butterfly\", \"49.82\", \"united states\", \"1 august 2009\", \"world championships\", \"rome, italy\"],[\"200 m butterfly\", \"1:51.51\", \"united states\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m individual medley\", \"1:54.00\", \"united states\", \"28 july 2011\", \"world championships\", \"shanghai, china\"],[\"400 m individual medley\", \"4:03.84\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"4100 m freestyle relay\", \"3:08.24\", \"united states\", \"11 august 2008\", \"olympic games\", \"beijing, china\"],[\"4200 m freestyle relay\", \"6:58.55\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"4100 m medley relay\", \"3:27.28\", \"united states\", \"2 august 2009\", \"world championships\", \"rome, italy\"]]\nQuestion = Is it true that the 50 m freestyle event took place on 18 december 2009?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for event, date in zip(events, dates):\n        if \"50 m freestyle\" in event.lower():\n            if \"18 december 2009\" in date.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "c615e049-0c51-4fde-8381-d64f7941d1fb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = dock jumping\ntable_data = [[\"date\", \"distance\", \"handler\", \"event\", \"location\"],[\"7 july 2000\", \"ft4in (m)\", \"beth gutteridge\", \"espn great outdoor games\", \"lake placid , ny\"],[\"8 july 2001\", \"ft1in (m)\", \"mike wallace\", \"espn great outdoor games\", \"lake placid , ny\"],[\"20 february 2002\", \"ft3in (m)\", \"mike jackson\", \"indianapolis boat , sport & travel show\", \"indianapolis , in\"],[\"1 may 2002\", \"ft4in (m)\", \"john kline\", \"espn2 super retriever series\", \"northfield , mn\"],[\"6 july 2002\", \"ft6in (m)\", \"mike jackson\", \"espn great outdoor games\", \"lake placid , ny\"],[\"7 august 2005\", \"ft5in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"21 august 2005\", \"ft7in (m)\", \"kevin meese\", \"big nickle time cabela 's\", \"hamburg , pa\"],[\"9 october 2005\", \"ft10in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"30 may 2010\", \"ft11.59in (m)\", \"rande murphy\", \"super retriever series crown championship\", \"little rock , ar\"],[\"11 july 2010\", \"ft1in (m)\", \"melissa ness\", \"2010 ukc premier\", \"richmond , in\"],[\"29 may 2011\", \"ft7in (m)\", \"tony lampert\", \"super retriever series crown championship\", \"little rock , ar\"],[\"07 oct 2011\", \"ft11in (m)\", \"tony lampert\", \"david letterman show , october 7 2011\", \"new york , ny\"]]\nQuestion = Is it true that the event super retriever series crown championship was held in little rock , ar?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    locations = get_column_by_name(table_data, \"location\")\n    answer = False\n    for event, location in zip(events, locations):\n        if \"super retriever series crown championship\" in event.lower() and \"little rock , ar\" in location.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "fd4cd87e-4be1-4e66-bbae-8a796b0a64b5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = somerset county cricket club in 2009\ntable_data = [[\"player\", \"matches\", \"innings\", \"wickets\", \"average\", \"bbi\", \"bbm\", \"5wi\"],[\"charl willoughby\", \"16\", \"26\", \"54\", \"30.03\", \"5 / 56\", \"7 / 170\", \"3\"],[\"david stiff\", \"10\", \"18\", \"31\", \"36.12\", \"5 / 91\", \"5 / 93\", \"1\"],[\"alfonso thomas\", \"14\", \"22\", \"35\", \"37.62\", \"5 / 53\", \"8 / 152\", \"1\"],[\"ben phillips\", \"7\", \"11\", \"12\", \"38.00\", \"4 / 46\", \"4 / 73\", \"0\"],[\"arul suppiah\", \"16\", \"19\", \"15\", \"45.46\", \"3 / 58\", \"5 / 85\", \"0\"],[\"peter trego\", \"16\", \"25\", \"19\", \"46.78\", \"3 / 53\", \"3 / 74\", \"0\"],[\"andrew caddick\", \"5\", \"8\", \"10\", \"52.50\", \"3 / 53\", \"4 / 95\", \"0\"]]\nQuestion = Is it true that one player had 12 wickets?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    wickets = get_column_by_name(table_data, \"wickets\")\n    answer = \"12\" in wickets\n    return answer\n\n### END"}
{"id": "76bb09ac-be80-43da-b29e-ebaf19ba948b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sinta ozoliņa - kovala\ntable_data = [[\"year\", \"competition\", \"venue\", \"position\", \"notes\"],[\"2005\", \"world youth championships\", \"marrakesh, morocco\", \"25th\", \"39.34 m\"],[\"2006\", \"world junior championships\", \"beijing, china\", \"6th\", \"56.38 m\"],[\"2007\", \"european junior championships\", \"hengelo, netherlands\", \"2nd\", \"57.01 m\"],[\"2008\", \"olympic games\", \"beijing, china\", \"11th\", \"53.38 m\"],[\"2010\", \"european championships\", \"barcelona, spain\", \"13th\", \"56.11 m\"]]\nQuestion = Is it true that the year of the olympic games was 2008?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    competitions = get_column_by_name(table_data, \"competition\")\n    years = get_column_by_name(table_data, \"year\")\n    for competition, year in zip(competitions, years):\n        if competition.lower() == \"olympic games\":\n            answer = equal_to(year, \"2008\")\n            break \n    return answer\n\n### END"}
{"id": "c4c732b9-d900-4b18-8b57-c7aaf5b613c1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = malayalam calendar\ntable_data = [[\"months in malayalam era\", \"in malayalam\", \"gregorian calendar\", \"tamil calendar\", \"saka era\", \"sign of zodiac\"],[\"chingam\", \"ചിങ്ങം\", \"august - september\", \"aavani\", \"sravan - bhadrapada\", \"leo\"],[\"kanni\", \"കന്നി\", \"september - october\", \"purattasi\", \"bhadrapada - asvina\", \"virgo\"],[\"tulam\", \"തുലാം\", \"october - november\", \"aippasi\", \"asvina - kartika\", \"libra\"],[\"vrscikam\", \"വൃശ്ചികം\", \"november - december\", \"karthigai\", \"kartika - agrahayana\", \"scorpio\"],[\"dhanu\", \"ധനു\", \"december - january\", \"margazhi\", \"agrahayana - pausa\", \"sagittarius\"],[\"makaram\", \"മകരം\", \"january - february\", \"thai\", \"pausa - magha\", \"capricon\"],[\"kumbham\", \"കുംഭം\", \"february - march\", \"maasi\", \"magha - phalguna\", \"aquarius\"],[\"minam\", \"മീനം\", \"march - april\", \"panguni\", \"phalguna - chaitra\", \"pisces\"],[\"medam\", \"മേടം\", \"april - may\", \"chithirai\", \"chaitra - vaisakha\", \"aries\"],[\"edavam (idavam)\", \"ഇടവം\", \"may - june\", \"vaikasi\", \"vaisakha - jyaistha\", \"taurus\"],[\"mithunam\", \"മിഥുനം\", \"june - july\", \"aani\", \"jyaistha - asada\", \"gemini\"],[\"karkadakam\", \"കര്‍ക്കടകം\", \"july - august\", \"aadi\", \"asada - sravana\", \"cancer\"]]\nQuestion = Is it true that in the gregorian calendar , february - march denotes the aquarius sign of zodiac?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    gregorian_calendar = get_column_by_name(table_data, \"gregorian calendar\")\n    sign_of_zodiac = get_column_by_name(table_data, \"sign of zodiac\")\n    for date, sign in zip(gregorian_calendar, sign_of_zodiac):\n        if \"february - march\" in date.lower():\n            answer = \"aquarius\" in sign.lower()\n            break\n    return answer\n\n### END"}
{"id": "412946ef-e7ef-4933-b0a3-827256874413", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1985 chicago cubs season\ntable_data = [[\"date\",\"opponent\",\"score\",\"loss\",\"save\"],[\"july 1\",\"phillies\",\"3 - 1\",\"denny (5 - 6)\",\"smith (17)\"],[\"july 2\",\"phillies\",\"11 - 2\",\"sutcliffe (7 - 7)\",\"\"],[\"july 3\",\"phillies\",\"4 - 3\",\"tekulve (4 - 3)\",\"\"],[\"july 4\",\"giants\",\"6 - 4\",\"trout (7 - 4)\",\"minton (2)\"],[\"july 5\",\"giants\",\"12 - 6\",\"sanderson (4 - 4)\",\"\"],[\"july 6\",\"giants\",\"6 - 4\",\"smith (4 - 3)\",\"m davis (5)\"],[\"july 7\",\"giants\",\"6 - 5\",\"m davis (3 - 6)\",\"smith (18)\"],[\"july 8\",\"padres\",\"8 - 4\",\"sorensen (1 - 2)\",\"\"],[\"july 9\",\"padres\",\"7 - 3\",\"show (7 - 6)\",\"frazier (1)\"],[\"july 10\",\"padres\",\"4 - 3\",\"dravecky (8 - 5)\",\"smith (19)\"],[\"july 11\",\"dodgers\",\"3 - 1\",\"fontenot (3 - 4)\",\"howell (9)\"],[\"july 12\",\"dodgers\",\"7 - 4\",\"smith (4 - 4)\",\"\"],[\"july 13\",\"dodgers\",\"9 - 1\",\"gura (0 - 2)\",\"\"],[\"july 14\",\"dodgers\",\"10 - 4\",\"honeycutt (6 - 8)\",\"brusstar (2)\"],[\"july 18\",\"giants\",\"1 - 0\",\"frazier (5 - 3)\",\"\"],[\"july 19\",\"giants\",\"4 - 3\",\"gott (4 - 7)\",\"smith (20)\"],[\"july 20\",\"giants\",\"2 - 1\",\"hammaker (3 - 9)\",\"smith (21)\"],[\"july 21\",\"giants\",\"2 - 1\",\"gura (0 - 3)\",\"minton (3)\"],[\"july 22\",\"padres\",\"5 - 3\",\"jackson (0 - 1)\",\"smith (22)\"],[\"july 23\",\"padres\",\"8 - 1\",\"hawkins (12 - 3)\",\"\"],[\"july 24\",\"padres\",\"4 - 3 10\",\"stoddard (1 - 4)\",\"frazier (2)\"],[\"july 25\",\"dodgers\",\"7 - 3\",\"fontenot (3 - 5)\",\"howell (10)\"],[\"july 26\",\"dodgers\",\"10 - 0\",\"ruthven (4 - 7)\",\"\"],[\"july 27\",\"dodgers\",\"5 - 4\",\"frazier (5 - 4)\",\"howell (11)\"],[\"july 28\",\"dodgers\",\"9 - 2\",\"powell (0 - 1)\",\"brusstar (3)\"],[\"july 30\",\"cardinals\",\"11 - 3\",\"engel (0 - 1)\",\"\"],[\"july 31\",\"cardinals\",\"5 - 2\",\"andãjar (17 - 5)\",\"smith (23)\"]]\nQuestion = Is it true that smith (22) got the save against the padres on july 31st?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    saves = get_column_by_name(table_data, \"save\")\n    answer = False\n    for date, opponent, save in zip(dates, opponents, saves):\n        if \"july 31\" in date.lower() and \"padres\" in opponent.lower():\n            answer = \"smith (22)\" in save.lower()\n            break\n    return answer\n\n### END"}
{"id": "83e85464-faa5-4a83-80b4-c400cabaf0da", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = campbell union high school district\ntable_data = [[\"school name\", \"city\", \"students\", \"fte teachers\", \"pupil / teacher ratio\"],[\"boynton high school\", \"san jose\", \"280\", \"16.8\", \"16.7\"],[\"branham high school\", \"san jose\", \"1444\", \"54.4\", \"26.5\"],[\"camden community day school\", \"san jose\", \"30\", \"4.6\", \"6.5\"],[\"del mar high school\", \"san jose\", \"1278\", \"55.6\", \"23.0\"],[\"leigh high school\", \"san jose\", \"1619\", \"64.6\", \"25.1\"],[\"prospect high school\", \"saratoga\", \"1213\", \"53.0\", \"22.9\"],[\"westmont high school\", \"campbell\", \"1663\", \"66.6\", \"25.0\"]]\nQuestion = Is it true that a school with a teacher ration of pupils of 25.1 has an average of 1619.0 students?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    students = get_column_by_name(table_data, \"students\")\n    ratios = get_column_by_name(table_data, \"pupil / teacher ratio\")\n    for student, ratio in zip(students, ratios):\n        if float(ratio) == 25.1:\n            answer = equal_to(float(student), 1619.0)\n            break \n    return answer\n\n### END"}
{"id": "59da8c0f-9a21-4b61-86b6-90d1e6e408cd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = atlanta falcons draft history\ntable_data = [[\"round\", \"pick\", \"overall\", \"name\", \"position\"],[\"1\", \"9\", \"9\", \"bubba bean\", \"running back\"],[\"2\", \"8\", \"36\", \"sonny collins\", \"running back\"],[\"3\", \"11\", \"71\", \"dave scott\", \"guard\"],[\"4\", \"10\", \"102\", \"walt brett\", \"defensive end\"],[\"6\", \"13\", \"169\", \"stan varner\", \"defensive tackle\"],[\"7\", \"11\", \"193\", \"karl farmer\", \"wide receiver\"],[\"8\", \"10\", \"219\", \"frank reed\", \"washington\"],[\"9\", \"9\", \"246\", \"phil mckinnely\", \"offensive tackle\"],[\"11\", \"11\", \"302\", \"chuck brislin\", \"offensive tackle\"],[\"12\", \"10\", \"329\", \"pat bolton\", \"kicker\"],[\"13\", \"9\", \"356\", \"mike williams\", \"offensive tackle\"],[\"14\", \"8\", \"383\", \"mark husfloen\", \"defensive end\"],[\"15\", \"11\", \"414\", \"ron olson\", \"defensive back\"],[\"16\", \"10\", \"441\", \"pat curto\", \"linebacker\"],[\"17\", \"9\", \"468\", \"tony green\", \"defensive back\"]]\nQuestion = Is it true that pat curto was the 10th pick in the 16th round at linebacker?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    picks = get_column_by_name(table_data, \"pick\")\n    names = get_column_by_name(table_data, \"name\")\n    positions = get_column_by_name(table_data, \"position\")\n    for round, pick, name, position in zip(rounds, picks, names, positions):\n        if round == \"16\" and pick == \"10\" and name.lower() == \"pat curto\" and position.lower() == \"linebacker\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "da6d2ad2-f429-45be-9a38-ffb49a00c92f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mysterious ways (tv series)\ntable_data = [[\"series\",\"season\",\"title\",\"director\",\"writer (s)\",\"nbc airdate\",\"code\"],[\"23\",\"1\",\"phoenix\",\"michael robison\",\"carl binder\",\"july 13 , 2001\",\"201\"],[\"24\",\"2\",\"one of us\",\"michael robison\",\"melissa r byer , treena hancock\",\"july 20 , 2001\",\"205\"],[\"25\",\"3\",\"pure of heart\",\"rick stevenson\",\"barbara covington\",\"july 27 , 2001\",\"204\"],[\"26\",\"4\",\"condemned\",\"michael robison\",\"dawn ritchie , carl binder\",\"august 3 , 2001\",\"207\"],[\"27\",\"5\",\"lost souls\",\"richard martin\",\"melissa r byer , treena hancock\",\"september 4 , 2001\",\"210\"],[\"28\",\"6\",\"spike\",\"rick stevenson\",\"eric tuchman\",\"september 18 , 2001\",\"202\"],[\"29\",\"7\",\"child of wonder\",\"ken jubenvill\",\"eric tuchman\",\"october 2 , 2001\",\"206\"],[\"30\",\"8\",\"29\",\"ken jubenvill\",\"deborah starr seibel\",\"october 9 , 2001\",\"208\"],[\"31\",\"9\",\"love 's divine\",\"scott williams\",\"john mandel\",\"october 16 , 2001\",\"209\"],[\"32\",\"10\",\"the big picture\",\"ken jubenvill\",\"philip gerson\",\"november 6 , 2001\",\"211\"],[\"33\",\"11\",\"a time to every purpose\",\"gil shilton\",\"barbara covington\",\"november 13 , 2001\",\"212\"],[\"34\",\"12\",\"doctor in the house\",\"brad turner\",\"philip gerson\",\"november 27 , 2001\",\"203\"],[\"35\",\"13\",\"the last dance\",\"ken jubenvill\",\"dan d'amelio\",\"december 11 , 2001\",\"213\"],[\"36\",\"14\",\"free spirit\",\"eric tuchman\",\"ken jubenvill\",\"january 15 , 2002\",\"214\"],[\"37\",\"15\",\"spark of life\",\"rick stevenson\",\"melissa r byer , treena hancock\",\"january 22 , 2002\",\"220\"],[\"38\",\"16\",\"face in the crowd\",\"m robison\",\"barbara covington\",\"february 5 , 2002\",\"222\"],[\"39\",\"17\",\"logan miller\",\"richard martin\",\"barbara covington\",\"february 26 , 2002\",\"217\"],[\"40\",\"18\",\"friends in need\",\"ken jubenvill\",\"eric tuchman\",\"march 19 , 2002\",\"218\"],[\"41\",\"19\",\"a man of god\",\"brad turner\",\"carl binder\",\"march 26 , 2002\",\"219\"],[\"42\",\"20\",\"muti\",\"michael robison\",\"treena hancock , melissa r byer\",\"april 30 , 2002\",\"215\"],[\"43\",\"21\",\"listen\",\"scott williams\",\"deborah starr seibel\",\"may 7 , 2002\",\"221\"]]\nQuestion = Is it true that season 7 had an nbc airdate of ocotber 2 , 2001?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    air_dates = get_column_by_name(table_data, \"nbc airdate\")\n    answer = False\n    for season, air_date in zip(seasons, air_dates):\n        if season == \"7\" and air_date.lower() == \"october 2 , 2001\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "1bccc566-ff60-4aca-ac8f-fa1b97e97fac", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = orlando magic all - time roster\ntable_data = [[\"player\",\"nationality\",\"position\",\"years in orlando\",\"school / club team\"],[\"matt barnes\",\"united states\",\"guard - forward\",\"2009 - 2010\",\"ucla\"],[\"andre barrett\",\"united states\",\"guard\",\"2005\",\"seton hall\"],[\"brandon bass\",\"united states\",\"forward\",\"2009 - 2011\",\"louisiana state\"],[\"tony battie\",\"united states\",\"forward - center\",\"2004 - 2009\",\"texas tech\"],[\"david benoit\",\"united states\",\"forward\",\"1998\",\"alabama\"],[\"keith bogans\",\"united states\",\"guard\",\"2003 - 2004\",\"kentucky\"],[\"keith bogans\",\"united states\",\"guard\",\"2006 - 2009\",\"kentucky\"],[\"anthony bonner\",\"united states\",\"forward\",\"1995 - 1996\",\"st louis\"],[\"anthony bowie\",\"united states\",\"guard\",\"1991 - 1996\",\"oklahoma\"],[\"earl boykins\",\"united states\",\"guard\",\"1999\",\"eastern michigan\"],[\"michael bradley\",\"united states\",\"forward\",\"2004 - 2005\",\"villanova\"],[\"dee brown\",\"united states\",\"guard\",\"2000 - 2002\",\"jacksonville\"],[\"jud buechler\",\"united states\",\"guard - forward\",\"2001 - 2002\",\"arizona\"],[\"pat burke\",\"ireland\",\"center\",\"2002 - 2003\",\"auburn\"]]\nQuestion = Is it true that the villanova school / club team has a player pat burke?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    schools = get_column_by_name(table_data, \"school / club team\")\n    answer = False\n    for player, school in zip(players, schools):\n        if player.lower() == \"pat burke\" and school.lower() == \"villanova\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "3c340bab-b0ca-4df2-a905-e74d026bb92d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1966 dutch grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"jack brabham\", \"brabham - repco\", \"90\", \"2:20:32.5\", \"1\"],[\"graham hill\", \"brm\", \"89\", \"+ 1 lap\", \"7\"],[\"jim clark\", \"lotus - climax\", \"88\", \"+ 2 laps\", \"3\"],[\"jackie stewart\", \"brm\", \"88\", \"+ 2 laps\", \"8\"],[\"mike spence\", \"lotus - brm\", \"87\", \"+ 3 laps\", \"12\"],[\"lorenzo bandini\", \"ferrari\", \"87\", \"+ 3 laps\", \"9\"],[\"jo bonnier\", \"cooper - maserati\", \"84\", \"+ 6 laps\", \"13\"],[\"john taylor\", \"brabham - brm\", \"84\", \"+ 6 laps\", \"17\"],[\"guy ligier\", \"cooper - maserati\", \"84\", \"+ 6 laps\", \"16\"],[\"jo siffert\", \"cooper - maserati\", \"79\", \"engine\", \"11\"],[\"bob anderson\", \"brabham - climax\", \"73\", \"suspension\", \"14\"],[\"john surtees\", \"cooper - maserati\", \"44\", \"electrical\", \"10\"],[\"denny hulme\", \"brabham - repco\", \"37\", \"ignition\", \"2\"],[\"peter arundell\", \"lotus - brm\", \"28\", \"ignition\", \"15\"],[\"dan gurney\", \"eagle - climax\", \"26\", \"oil leak\", \"4\"],[\"mike parkes\", \"ferrari\", \"10\", \"accident\", \"5\"],[\"jochen rindt\", \"cooper - maserati\", \"2\", \"accident\", \"6\"]]\nQuestion = Is it true that the smallest grid for bob anderson is 14?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    grids = get_column_by_name(table_data, \"grid\")\n    for driver, grid in zip(drivers, grids):\n        if driver.lower() == \"bob anderson\":\n            answer = equal_to(int(grid), 14)\n            break \n    return answer\n\n### END"}
{"id": "ef0a6526-94f7-44ad-a6f0-aa063a1050ae", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1925 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"8.11 (59)\", \"st kilda\", \"8.8 (56)\", \"glenferrie oval\", \"10000\", \"8 august 1925\"],[\"geelong\", \"11.20 (86)\", \"richmond\", \"4.8 (32)\", \"corio oval\", \"13500\", \"8 august 1925\"],[\"fitzroy\", \"17.18 (120)\", \"north melbourne\", \"11.8 (74)\", \"brunswick street oval\", \"7000\", \"8 august 1925\"],[\"south melbourne\", \"13.14 (92)\", \"footscray\", \"12.15 (87)\", \"lake oval\", \"15000\", \"8 august 1925\"],[\"melbourne\", \"7.10 (52)\", \"collingwood\", \"9.11 (65)\", \"mcg\", \"33642\", \"8 august 1925\"],[\"essendon\", \"15.11 (101)\", \"carlton\", \"8.14 (62)\", \"windy hill\", \"10000\", \"8 august 1925\"]]\nQuestion = Is it true that mcg is the venue that the away team had a score of 10.11 (65)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"venue\")\n    away_team_scores = get_column_by_name(table_data, \"away team score\")\n    for venue, away_team_score in zip(venues, away_team_scores):\n        if venue.lower() == \"mcg\":\n            answer = equal_to(away_team_score, \"10.11 (65)\")\n            break \n    return answer\n\n### END"}
{"id": "6447d46a-8c3a-4ce8-8bdb-ca09f446914d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 veikkausliiga\ntable_data = [[\"club\",\"location\",\"stadium\",\"capacity\",\"manager\",\"kitmaker\"],[\"ac oulu\",\"oulu\",\"castrén\",\"4000\",\"juha malinen\",\"umbro\"],[\"fc honka\",\"espoo\",\"tapiolan urheilupuisto\",\"6000\",\"mika lehkosuo\",\"kappa\"],[\"fc inter\",\"turku\",\"veritas stadion\",\"9372\",\"job dragtsma\",\"nike\"],[\"fc lahti\",\"lahti\",\"lahden stadion\",\"15000\",\"ilkka mäkelä\",\"umbro\"],[\"ff jaro\",\"jakobstad\",\"jakobstads centralplan\",\"5000\",\"alexei eremenko sr\",\"errea\"],[\"haka\",\"valkeakoski\",\"tehtaan kenttä\",\"3516\",\"sami ristilä\",\"umbro\"],[\"hjk\",\"helsinki\",\"sonera stadium\",\"10770\",\"antti muurinen\",\"adidas\"],[\"ifk mariehamn\",\"mariehamn\",\"wiklöf holding arena\",\"4000\",\"pekka lyyski\",\"puma\"],[\"jjk\",\"jyväskylä\",\"harjun stadion\",\"3000\",\"kari martonen\",\"legea\"],[\"kups\",\"kuopio\",\"kuopion keskuskenttä\",\"5000\",\"esa pekonen\",\"puma\"],[\"mypa\",\"anjalankoski\",\"saviniemi\",\"4167\",\"janne lindberg\",\"puma\"],[\"tampere united\",\"tampere\",\"ratina stadion\",\"17000\",\"ari hjelm\",\"puma\"],[\"tps\",\"turku\",\"veritas stadion\",\"9372\",\"marko rajamäki\",\"puma\"]]\nQuestion = Is it true that ff jaro club is managed by alexei eremenko sr and is located in lahti?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    clubs = get_column_by_name(table_data, \"club\")\n    locations = get_column_by_name(table_data, \"location\")\n    managers = get_column_by_name(table_data, \"manager\")\n    for club, location, manager in zip(clubs, locations, managers):\n        if equal_to(club, \"ff jaro\") and equal_to(manager, \"alexei eremenko sr\") and equal_to(location, \"lahti\"):\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "1e9d2375-a2ab-41cf-a33a-a075de189be9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = comparison of e - book formats\ntable_data = [[\"format\", \"filename extension\", \"image support\", \"interactivity support\", \"word wrap support\", \"open standard\"],[\"djvu\", \"djvu\", \"yes\", \"no\", \"no\", \"yes\"],[\"epub (idpf)\", \"epub\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"fictionbook\", \"fb2\", \"yes\", \"no\", \"yes\", \"yes\"],[\"html\", \"html\", \"yes\", \"no\", \"yes\", \"yes\"],[\"kindle\", \"azw\", \"yes\", \"yes\", \"yes\", \"no\"],[\"microsoft reader\", \"lit\", \"yes\", \"no\", \"yes\", \"no\"],[\"mobipocket\", \"prc , mobi\", \"yes\", \"yes\", \"yes\", \"no\"],[\"multimedia ebook\", \"exe\", \"yes\", \"yes\", \"no\", \"yes\"],[\"newton book\", \"pkg\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ereader\", \"pdb\", \"yes\", \"no\", \"yes\", \"no\"],[\"plain text\", \"txt\", \"no\", \"no\", \"yes\", \"yes\"],[\"plucker\", \"pdb\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"portable document format\", \"pdf\", \"yes\", \"yes\", \"yes though not all readers implement support\", \"yes\"],[\"postscript\", \"ps\", \"yes\", \"no\", \"no\", \"yes\"],[\"tome raider\", \"tr2 , tr3\", \"yes\", \"no\", \"yes\", \"no\"],[\"openxps\", \"oxps , xps\", \"yes\", \"no\", \"no\", \"yes\"]]\nQuestion = Is it true that .azw , prc and mobi filename extensions support word wrap and interactivity , but do not have an open standard?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    filename_extensions = get_column_by_name(table_data, \"filename extension\")\n    interactivity_supports = get_column_by_name(table_data, \"interactivity support\")\n    word_wrap_supports = get_column_by_name(table_data, \"word wrap support\")\n    open_standards = get_column_by_name(table_data, \"open standard\")\n    for filename_extension, interactivity_support, word_wrap_support, open_standard in zip(filename_extensions, interactivity_supports, word_wrap_supports, open_standards):\n        if \"azw\" in filename_extension.lower() or \"prc\" in filename_extension.lower() or \"mobi\" in filename_extension.lower():\n            answer = equal_to(interactivity_support, \"yes\") and equal_to(word_wrap_support, \"yes\") and equal_to(open_standard, \"no\")\n            break \n    return answer\n\n### END"}
{"id": "69055d01-b5bc-410b-b451-e7bb76ce1dcd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of six feet under episodes\ntable_data = [[\"no in series\", \"no in season\", \"title\", \"directed by\", \"written by\", \"original air date\"],[\"14\", \"1\", \"in the game\", \"rodrigo garcã­a\", \"alan ball\", \"march 3 , 2002\"],[\"15\", \"2\", \"out , out brief candle\", \"kathy bates\", \"laurence andries\", \"march 10 , 2002\"],[\"16\", \"3\", \"the plan\", \"rose troche\", \"kate robin\", \"march 17 , 2002\"],[\"17\", \"4\", \"driving mr mossback\", \"michael cuesta\", \"rick cleveland\", \"march 24 , 2002\"],[\"18\", \"5\", \"the invisible woman\", \"jeremy podeswa\", \"bruce eric kaplan\", \"march 31 , 2002\"],[\"19\", \"6\", \"in place of anger\", \"michael engler\", \"christian taylor\", \"april 7 , 2002\"],[\"20\", \"7\", \"back to the garden\", \"dan attias\", \"jill soloway\", \"april 14 , 2002\"],[\"21\", \"8\", \"it 's the most wonderful time of the year\", \"alan taylor\", \"scott buck\", \"april 21 , 2002\"],[\"22\", \"9\", \"someone else 's eyes\", \"michael cuesta\", \"alan ball\", \"april 28 , 2002\"],[\"23\", \"10\", \"the secret\", \"alan poul\", \"bruce eric kaplan\", \"may 5 , 2002\"],[\"24\", \"11\", \"the liar and the whore\", \"miguel arteta\", \"rick cleveland\", \"may 12 , 2002\"],[\"25\", \"12\", \"i'll take you\", \"michael engler\", \"jill soloway\", \"may 19 , 2002\"]]\nQuestion = Is it true that only one episode during the season was directed by jeremy podeswa , titled the invisible woman?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    directors = get_column_by_name(table_data, \"directed by\")\n    titles = get_column_by_name(table_data, \"title\")\n    answer = False\n    count = 0\n    for director, title in zip(directors, titles):\n        if director.lower() == \"jeremy podeswa\" and title.lower() == \"the invisible woman\":\n            count += 1\n    if count == 1:\n        answer = True\n    return answer\n\n### END"}
{"id": "2a663704-72be-4d67-a6e2-46f7ac8884eb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1928 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"fitzroy\", \"17.11 (113)\", \"south melbourne\", \"11.11 (77)\", \"brunswick street oval\", \"8000\", \"2 june 1928\"],[\"carlton\", \"12.12 (84)\", \"collingwood\", \"13.9 (87)\", \"princes park\", \"30000\", \"2 june 1928\"],[\"north melbourne\", \"5.7 (37)\", \"melbourne\", \"14.16 (100)\", \"arden street oval\", \"9000\", \"2 june 1928\"],[\"richmond\", \"12.21 (93)\", \"geelong\", \"13.12 (90)\", \"punt road oval\", \"10000\", \"2 june 1928\"],[\"st kilda\", \"9.17 (71)\", \"footscray\", \"11.6 (72)\", \"junction oval\", \"12000\", \"2 june 1928\"],[\"hawthorn\", \"7.15 (57)\", \"essendon\", \"13.20 (98)\", \"glenferrie oval\", \"6000\", \"2 june 1928\"]]\nQuestion = Is it true that 12.0 was the sum of the crowd sizes when the home team score 9.17 on while away team is 13.12?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    away_team_scores = get_column_by_name(table_data, \"away team score\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    total_crowd = 0\n    for home_team_score, away_team_score, crowd in zip(home_team_scores, away_team_scores, crowds):\n        if home_team_score == \"9.17 (71)\" and away_team_score == \"13.12 (90)\":\n            total_crowd += int(crowd)\n    answer = equal_to(total_crowd, 12000)\n    return answer\n\n### END"}
{"id": "f982bd0d-fd93-4281-ac41-583f35f95b86", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1970 isle of man tt\ntable_data = [[\"rank\", \"rider\", \"team\", \"speed\", \"time\"],[\"1\", \"chas mortimer\", \"ducati\", \"84.87 mph\", \"2:13.23.4\"],[\"2\", \"john williams\", \"honda\", \"84.80 mph\", \"2:13.29.0\"],[\"3\", \"stan woods\", \"suzuki\", \"84.06 mph\", \"2:14.40.6\"],[\"4\", \"ghunter\", \"ducati\", \"83.94 mph\", \"2:14.52.4\"],[\"5\", \"roy boughley\", \"honda\", \"82.26 mph\", \"2:17.37.6\"],[\"6\", \"raymond ashcroft\", \"suzuki\", \"76.59 mph\", \"2:27.48.8\"],[\"7\", \"tom loughridge\", \"suzuki\", \"76.32 mph\", \"2:28.19.0\"],[\"8\", \"cluton\", \"ducati\", \"72.50 mph\", \"2:36.08.0\"]]\nQuestion = Is it true that tom loughridge is ranked 7th and is a rider for team suzuki?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    riders = get_column_by_name(table_data, \"rider\")\n    teams = get_column_by_name(table_data, \"team\")\n    for rank, rider, team in zip(ranks, riders, teams):\n        if equal_to(rank, \"7\") and equal_to(rider, \"tom loughridge\") and equal_to(team, \"suzuki\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "734b26a1-85a3-41ae-bf4e-61f5d3a09ed5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = er (season 15)\ntable_data = [[\"series\",\"season\",\"title\",\"directed by\",\"written by\",\"original air date\"],[\"310\",\"1\",\"life after death\",\"christopher misiano\",\"joe sachs\",\"september 25 , 2008\"],[\"311\",\"2\",\"another thursday at county\",\"paul mccrane\",\"lisa zwerling\",\"october 9 , 2008\"],[\"312\",\"3\",\"the book of abby\",\"christopher chulack\",\"david zabel\",\"october 16 , 2008\"],[\"313\",\"4\",\"parental guidance\",\"john gallagher\",\"janine sherman barrois\",\"october 23 , 2008\"],[\"314\",\"5\",\"haunted\",\"christopher chulack\",\"karen maser\",\"october 30 , 2008\"],[\"315\",\"6\",\"oh , brother\",\"stephen cragg\",\"virgil williams\",\"november 6 , 2008\"],[\"316\",\"7\",\"heal thyself\",\"david zabel\",\"david zabel\",\"november 13 , 2008\"],[\"317\",\"8\",\"age of innocence\",\"paul mccrane\",\"janine sherman barrois\",\"november 20 , 2008\"],[\"318\",\"9\",\"let it snow\",\"charles haid\",\"joe sachs\",\"december 4 , 2008\"],[\"319\",\"10\",\"the high holiday\",\"lesli linka glatter\",\"shannon goss\",\"december 11 , 2008\"],[\"320\",\"11\",\"separation anxiety\",\"terence nightingall\",\"virgil williams\",\"january 8 , 2009\"],[\"321\",\"12\",\"dream runner\",\"andrew bernstein\",\"lisa zwerling\",\"january 15 , 2009\"],[\"322\",\"13\",\"love is a battlefield\",\"richard thorpe\",\"karen maser\",\"january 22 , 2009\"],[\"323\",\"14\",\"a long , strange trip\",\"mimi leder\",\"joe sachs\",\"february 5 , 2009\"],[\"324\",\"15\",\"the family man\",\"eriq la salle\",\"andrew fash\",\"february 12 , 2009\"],[\"325\",\"16\",\"the beginning of the end\",\"jonathan kaplan\",\"david zabel and lisa zwerling\",\"february 19 , 2009\"],[\"326\",\"17\",\"t - minus - 6\",\"rod holcomb\",\"david zabel and lisa zwerling\",\"february 26 , 2009\"],[\"327\",\"18\",\"what we do\",\"david zabel\",\"david zabel\",\"march 5 , 2009\"],[\"328\",\"19\",\"old times\",\"john wells\",\"john wells\",\"march 12 , 2009\"],[\"329\",\"20\",\"shifting equilibrium\",\"andrew bernstein\",\"lisa zwerling\",\"march 19 , 2009\"],[\"330\",\"21\",\"i feel good\",\"stephen cragg\",\"joe sachs\",\"march 26 , 2009\"]]\nQuestion = Is it true that i feel good is written by stephen cragg?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    writers = get_column_by_name(table_data, \"written by\")\n    answer = False\n    for title, writer in zip(titles, writers):\n        if title.lower() == \"i feel good\" and writer.lower() == \"stephen cragg\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "392f491e-2cbd-4326-9d29-d752c2559ae8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glover teixeira\ntable_data = [[\"result\", \"opponent\", \"method\", \"event\", \"date\"],[\"loss\", \"gabriel vella\", \"points\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"armando sapo\", \"submission\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"salvador minnit\", \"submission\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"jorge bezerra\", \"points\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"loss\", \"vinny magalhães\", \"submission (armbar)\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"loss\", \"gerardi rinaldi\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"dean lister\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"vesa vuori\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"leonardo chocolate\", \"submission (rear naked choke)\", \"adcc brasil trails (under 99 kg)\", \"2009\"],[\"win\", \"renato ferreira\", \"points\", \"adcc brasil trails (under 99 kg)\", \"2009\"]]\nQuestion = Is it true that the result for the opponent being gerardi rinaldi in 2009 was win?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    results = get_column_by_name(table_data, \"result\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    dates = get_column_by_name(table_data, \"date\")\n    for result, opponent, date in zip(results, opponents, dates):\n        if opponent.lower() == \"gerardi rinaldi\" and \"2009\" in date:\n            answer = equal_to(result, \"win\")\n            break \n    return answer\n\n### END"}
{"id": "19718bc4-2edd-45a6-bfa8-cd8383bbd6f7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = ádammo\ntable_data = [[\"año\", \"trabajo nominado\", \"premio\", \"categoría\", \"country\", \"resultado\"],[\"2009\", \"adammo\", \"mtv latin america\", \"revelation artist\", \"colombia\", \"nominate\"],[\"2009\", \"adammo\", \"mtv latin america\", \"best new artist : center\", \"colombia\", \"winner\"],[\"2009\", \"adammo\", \"mtv latin america\", \"prize zone\", \"colombia\", \"nominate\"],[\"2010\", \"adammo\", \"premios apdayc\", \"rock group of the year\", \"perú\", \"winner\"],[\"2010\", \"adammo\", \"premios apdayc\", \"artist of the year\", \"perú\", \"nominate\"],[\"2010\", \"adammo\", \"premios orgullosamente latino\", \"grupo latin of the year\", \"mexico\", \"nominate\"],[\"2010\", \"algún día\", \"latin grammy awards\", \"short video of the year\", \"eeuu\", \"nominate\"],[\"2010\", \"adammo\", \"premios clarín\", \"best music video of the year\", \"argentina\", \"nominate\"],[\"2010\", \"adammo\", \"premios clarín\", \"best international breakthrough\", \"argentina\", \"nominate\"],[\"2010\", \"adammo\", \"premios clarín\", \"best international album\", \"argentina\", \"nominate\"],[\"2010\", \"algún día\", \"radio can\", \"best video\", \"colombia\", \"nominate\"],[\"2011\", \"adammo\", \"premios apdayc\", \"rock group of the year\", \"perú\", \"winner\"],[\"2011\", \"adammo\", \"mtv europe music awards\", \"world wide act latin american\", \"europa\", \"nominate\"],[\"2011\", \"adammo\", \"zona joven\", \"best pop rock peruano\", \"perú\", \"winner\"],[\"2012\", \"siento que caigo\", \"radio can\", \"song of the year\", \"perú\", \"nominate\"]]\nQuestion = Is it true that one premio was there when best video was the categoria?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    premios = get_column_by_name(table_data, \"premio\")\n    categorias = get_column_by_name(table_data, \"categoría\")\n    answer = \"premio\" in premios and \"best video\" in categorias\n    return answer\n\n### END"}
{"id": "d37ea337-035b-4577-8df8-41e6c78277d5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = bmw m1 procar championship\ntable_data = [[\"round\", \"date\", \"event\", \"circuit\", \"winning driver\", \"winning team\"],[\"1\", \"may 12\", \"belgian grand prix\", \"circuit zolder\", \"elio de angelis\", \"squadra osella corse\"],[\"2\", \"may 26\", \"monaco grand prix\", \"circuit de monaco\", \"niki lauda\", \"project four\"],[\"-\", \"june 3\", \"gunnar nilsson trophy\", \"donington park\", \"nelson piquet\", \"bmw motorsport\"],[\"3\", \"june 30\", \"french grand prix\", \"dijon - prenois\", \"nelson piquet\", \"bmw motorsport\"],[\"4\", \"july 13\", \"british grand prix\", \"silverstone circuit\", \"niki lauda\", \"project four\"],[\"5\", \"july 28\", \"german grand prix\", \"hockenheimring\", \"niki lauda\", \"project four\"],[\"6\", \"august 11\", \"austrian grand prix\", \"österreichring\", \"jacques laffite\", \"bmw motorsport\"],[\"7\", \"august 25\", \"dutch grand prix\", \"circuit zandvoort\", \"hans - joachim stuck\", \"cassani racing\"],[\"8\", \"september 8\", \"italian grand prix\", \"autodromo nazionale monza\", \"hans - joachim stuck\", \"cassani racing\"]]\nQuestion = Is it true that the winning team for circuit zolder was squadra osella corse?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    circuits = get_column_by_name(table_data, \"circuit\")\n    winning_teams = get_column_by_name(table_data, \"winning team\")\n    for circuit, winning_team in zip(circuits, winning_teams):\n        if circuit.lower() == \"circuit zolder\":\n            answer = equal_to(winning_team, \"squadra osella corse\")\n            break \n    return answer\n\n### END"}
{"id": "43bcc67d-f67a-4174-8253-137120fda73b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1950 french grand prix\ntable_data = [[\"driver\",\"entrant\",\"constructor\",\"chassis\",\"engine\",\"tyre\"],[\"nino farina\",\"sa alfa romeo\",\"alfa romeo\",\"alfa romeo 158\",\"alfa romeo l8s\",\"p\"],[\"luigi fagioli\",\"sa alfa romeo\",\"alfa romeo\",\"alfa romeo 158\",\"alfa romeo l8s\",\"p\"],[\"juan manuel fangio\",\"sa alfa romeo\",\"alfa romeo\",\"alfa romeo 158\",\"alfa romeo l8s\",\"p\"],[\"luigi villoresi\",\"scuderia ferrari\",\"ferrari\",\"ferrari 125\",\"ferrari v12s\",\"p\"],[\"alberto ascari\",\"scuderia ferrari\",\"ferrari\",\"ferrari 125\",\"ferrari v12s\",\"p\"],[\"raymond sommer\",\"automobiles talbot - darracq sa\",\"talbot - lago\",\"talbot - lago t26c - gs\",\"talbot l6\",\"d\"],[\"peter whitehead\",\"private\",\"ferrari\",\"ferrari 125\",\"ferrari v12s\",\"p\"],[\"philippe étancelin\",\"private\",\"talbot - lago\",\"talbot - lago t26c - da\",\"talbot l6\",\"d\"],[\"yves giraud cabantous\",\"automobiles talbot - darracq sa\",\"talbot - lago\",\"talbot - lago t26c - da\",\"talbot l6\",\"d\"],[\"louis rosier\",\"automobiles talbot - darracq sa\",\"talbot - lago\",\"talbot - lago t26c - da\",\"talbot l6\",\"d\"],[\"pierre levegh\",\"private\",\"talbot - lago\",\"talbot - lago t26c\",\"talbot l6\",\"d\"],[\"eugène chaboud\",\"ecurie lutetia\",\"talbot - lago\",\"talbot - lago t26c\",\"talbot l6\",\"d\"],[\"charles pozzi\",\"private\",\"talbot - lago\",\"talbot - lago t26c\",\"talbot l6\",\"d\"],[\"franco rol\",\"officine alfieri maserati\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"p\"],[\"louis chiron\",\"officine alfieri maserati\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"p\"],[\"reg parnell\",\"scuderia ambrosiana\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"d\"],[\"david hampshire\",\"scuderia ambrosiana\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"d\"],[\"josé froilán gonzález\",\"scuderia achille varzi\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"p\"],[\"gianfranco comotti\",\"scuderia achille varzi\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"p\"],[\"felice bonetto\",\"scuderia milano\",\"maserati\",\"maserati 4clt - 50\",\"milano l4s\",\"p\"],[\"johnny claes\",\"ecurie belge\",\"talbot - lago\",\"talbot - lago t26c\",\"talbot l6\",\"d\"],[\"robert manzon\",\"equipe gordini\",\"simca - gordini\",\"simca - gordini t15\",\"gordini l4s\",\"e\"]]\nQuestion = Is it true that eugène chaboud drove an ecurie lutetia entrant with an engine of ferrari v12s?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    entrants = get_column_by_name(table_data, \"entrant\")\n    engines = get_column_by_name(table_data, \"engine\")\n    answer = False\n    for driver, entrant, engine in zip(drivers, entrants, engines):\n        if driver.lower() == \"eugène chaboud\" and entrant.lower() == \"ecurie lutetia\" and engine.lower() == \"ferrari v12s\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "bb80ab93-ba50-47c9-822d-c92784fcf022", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of 10 metre air pistol records\ntable_data = [[\"score\", \"shooter\", \"date\", \"comp\", \"place\"],[\"688.6\", \"igor basinski ( urs )\", \"1986\", \"wch\", \"suhl , east germany\"],[\"689.7\", \"aleksandr melentiev ( urs )\", \"1987\", \"wc\", \"seoul , south korea\"],[\"692.3\", \"igor basinski ( urs )\", \"1988\", \"ech\", \"stavanger , norway\"],[\"new targets from 1989\", \"new targets from 1989\", \"new targets from 1989\", \"new targets from 1989\", \"new targets from 1989\"],[\"686.4\", \"sorin babii ( rou )\", \"1989\", \"ech\", \"copenhagen , denmark\"],[\"690.3\", \"sergei pyzhianov ( urs )\", \"1989\", \"wch\", \"sarajevo , yugoslavia\"],[\"695.1\", \"sergei pyzhianov ( urs )\", \"13 oct 1989\", \"wcf\", \"munich , west germany\"]]\nQuestion = Is it true that each year , the ech competition is held in copenhagen , denmark?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    comps = get_column_by_name(table_data, \"comp\")\n    places = get_column_by_name(table_data, \"place\")\n    answer = False\n    for comp, place in zip(comps, places):\n        if comp.lower() == \"ech\" and place.lower() != \"copenhagen , denmark\":\n            answer = False\n            break\n        elif comp.lower() == \"ech\" and place.lower() == \"copenhagen , denmark\":\n            answer = True\n    return answer\n\n### END"}
{"id": "af130e97-aca1-4e54-bc3b-fb9286860fc5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = boise state broncos men 's basketball\ntable_data = [[\"year\", \"round\", \"opponent\", \"result\", \"bsu head coach\"],[\"1976\", \"first round\", \"unlv\", \"l 78 - 103\", \"bus conner\"],[\"1988\", \"first round\", \"michigan\", \"l 58 - 63\", \"bobby dye\"],[\"1993\", \"first round\", \"vanderbilt\", \"l 72 - 92\", \"bobby dye\"],[\"1994\", \"first round\", \"louisville\", \"l 58 - 67\", \"bobby dye\"],[\"2008\", \"first round\", \"louisville\", \"l 61 - 79\", \"greg graham\"],[\"2013\", \"first four\", \"la salle\", \"l 71 - 80\", \"leon rice\"]]\nQuestion = Is it true that the result for 2008 was l 71 - 80 , with leon rice as the bsu head coach?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    results = get_column_by_name(table_data, \"result\")\n    coaches = get_column_by_name(table_data, \"bsu head coach\")\n    for year, result, coach in zip(years, results, coaches):\n        if year == \"2008\":\n            answer = equal_to(result, \"l 71 - 80\") and equal_to(coach, \"leon rice\")\n            break \n    return answer\n\n### END"}
{"id": "758308c1-20ee-4995-a56b-45b13277662d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = marsel ilhan\ntable_data = [[\"outcome\", \"date\", \"tournament\", \"surface\", \"opponent\", \"score\"],[\"runner - up\", \"august 20 , 2007\", \"karshi\", \"hard\", \"denis istomin\", \"1 - 6 , 4 - 6\"],[\"winner\", \"july 13 , 2008\", \"israel open\", \"hard\", \"ivo klec\", \"6 - 4 , 6 - 4\"],[\"runner - up\", \"may 17 , 2009\", \"izmir cup\", \"hard\", \"andrea stoppini\", \"6 - 7 , 2 - 6\"],[\"winner\", \"september 20 , 2010\", \"banja luka\", \"clay\", \"pere riba\", \"6 - 0 , 7 - 6 (7 - 4)\"],[\"runner - up\", \"september 26 , 2010\", \"izmir cup\", \"hard\", \"somdev devvarman\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 10 , 2011\", \"scheveningen\", \"clay\", \"steve darcis\", \"3 - 6 , 6 - 4 , 2 - 6\"],[\"runner - up\", \"september 25 , 2011\", \"izmir cup\", \"hard\", \"lukáš lacko\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 29 , 2012\", \"president 's cup (tennis)\", \"hard\", \"evgeny donskoy\", \"3 - 6 , 4 - 6\"]]\nQuestion = Is it true that the israel open tournament on clay surface was held on july 13th 2008?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    tournaments = get_column_by_name(table_data, \"tournament\")\n    surfaces = get_column_by_name(table_data, \"surface\")\n    answer = False\n    for date, tournament, surface in zip(dates, tournaments, surfaces):\n        if \"july 13 , 2008\" in date.lower() and \"israel open\" in tournament.lower() and \"clay\" in surface.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "4b358d00-bb16-4691-83bf-f1d74f50824c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = daniel gimeno - traver\ntable_data = [[\"date\", \"tournament\", \"surface\", \"opponent\", \"score\"],[\"5 september 2005\", \"brasov\", \"clay\", \"daniel elsner\", \"5 - 7 , 2 - 6\"],[\"5 november 2007\", \"guayaquil\", \"clay\", \"nicolás lapentti\", \"3 - 6 , 7 - 6 (6) , 5 - 7\"],[\"10 march 2008\", \"tanger\", \"clay\", \"marcel granollers\", \"4 - 6 , 4 - 6\"],[\"15 september 2008\", \"banja luka\", \"clay\", \"ilija bozoljac\", \"4 - 6 , 4 - 6\"],[\"12 october 2009\", \"asunción\", \"clay\", \"ramón delgado\", \"6 - 7 (2 - 7) , 6 - 1 , 3 - 6\"],[\"5 july 2010\", \"san benedetto\", \"clay\", \"carlos berlocq\", \"3 - 6 , 6 - 4 , 4 - 6\"],[\"2 october 2011\", \"madrid\", \"clay\", \"jérémy chardy\", \"1 - 6 , 7 - 5 , 6 - 7 (3 - 7)\"],[\"12 august 2012\", \"cordenos\", \"clay\", \"paolo lorenzi\", \"6 - 7 (5 - 7) , 3 - 6\"]]\nQuestion = Is it true that opponent ilija bozoljac played on a clay surface?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    surfaces = get_column_by_name(table_data, \"surface\")\n    answer = False\n    for opponent, surface in zip(opponents, surfaces):\n        if opponent.lower() == \"ilija bozoljac\" and surface.lower() == \"clay\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "4090924e-6678-4b9b-987f-bd4f3817c599", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2000 tennessee titans season\ntable_data = [[\"week\", \"date\", \"tv time\", \"opponent\", \"result\"],[\"1\", \"september 3 , 2000\", \"espn 7:30 pm cdt\", \"buffalo bills\", \"l 13 - 16\"],[\"2\", \"september 10 , 2000\", \"cbs 12:00 pm cdt\", \"kansas city chiefs\", \"w 17 - 14\"],[\"3\", \"-\", \"-\", \"-\", None],[\"4\", \"september 24 , 2000\", \"cbs 12:00 pm cdt\", \"pittsburgh steelers\", \"w 23 - 20\"],[\"5\", \"october 1 , 2000\", \"fox 12:00 pm cdt\", \"new york giants\", \"w 28 - 14\"],[\"6\", \"october 8 , 2000\", \"cbs 12:00 pm cdt\", \"cincinnati bengals\", \"w 23 - 14\"],[\"7\", \"october 16 , 2000\", \"abc 8:00 pm cdt\", \"jacksonville jaguars\", \"w 27 - 13\"],[\"8\", \"october 22 , 2000\", \"cbs 12:00 pm cdt\", \"baltimore ravens\", \"w 14 - 6\"],[\"9\", \"october 30 , 2000\", \"abc 8:00 pm cdt\", \"washington redskins\", \"w 27 - 21\"],[\"10\", \"november 5 , 2000\", \"cbs 12:00 pm cdt\", \"pittsburgh steelers\", \"w 9 - 7\"],[\"11\", \"november 12 , 2000\", \"cbs 12:00 pm cdt\", \"baltimore ravens\", \"l 23 - 24\"],[\"12\", \"november 19 , 2000\", \"cbs 12:00 pm cdt\", \"cleveland browns\", \"w 24 - 10\"],[\"13\", \"november 26 , 2000\", \"cbs 3:15 pm cdt\", \"jacksonville jaguars\", \"l 13 - 16\"],[\"14\", \"december 3 , 2000\", \"cbs 12:00 pm cdt\", \"philadelphia eagles\", \"w 15 - 13\"],[\"15\", \"december 10 , 2000\", \"cbs 12:00 pm cdt\", \"cincinnati bengals\", \"w 35 - 3\"],[\"16\", \"december 17 , 2000\", \"cbs 12:00 pm cdt\", \"cleveland browns\", \"w 24 - 0\"],[\"17\", \"december 25 , 2000\", \"abc 8:00 pm cdt\", \"dallas cowboys\", \"w 31 - 0\"]]\nQuestion = Is it true that the game before week 8 was after october 22 , 2000?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef convert_date_string_to_datetime(date_string):\n    from datetime import datetime\n    return datetime.strptime(date_string, '%B %d , %Y')\n\ndef later_than(date1, date2):\n    return date1 > date2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    week_7_date = convert_date_string_to_datetime(dates[6])\n    week_8_date = convert_date_string_to_datetime(dates[7])\n    answer = later_than(week_7_date, week_8_date)\n    return answer\n\n### END"}
{"id": "f1101ace-00e7-4601-b25d-3022946350e8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = gilmour racing\ntable_data = [[\"season\", \"series\", \"points\", \"position\", \"driver\"],[\"2001\", \"queensland formula ford championship\", \"216\", \"2nd\", \"chris gilmour\"],[\"2002\", \"queensland formula ford championship\", \"234\", \"2nd\", \"chris gilmour\"],[\"2003\", \"queensland formula ford championship\", \"222\", \"1st\", \"chris gilmour\"],[\"2004\", \"australian formula 3 championship\", \"235\", \"2nd\", \"chris gilmour\"],[\"2005\", \"australian formula 3 championship\", \"142\", \"4th\", \"chris gilmour\"],[\"2006\", \"australian formula 3 championship\", \"150\", \"4th\", \"chris gilmour\"],[\"2007\", \"australian formula 3 championship\", \"52\", \"8th\", \"chris gilmour\"],[\"2008\", \"australian formula 3 championship - national class\", \"228\", \"1st\", \"chris gilmour\"],[\"2009\", \"australian formula 3 championship - national class\", \"93\", \"4th\", \"chris gilmour\"],[\"2010\", \"australian formula 3 championship\", \"90\", \"5th\", \"chris gilmour\"],[\"2011\", \"australian formula 3 championship\", \"210\", \"1st\", \"chris gilmour\"]]\nQuestion = Is it true that during the queensland formula ford championship the 1st position had 222 points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    series = get_column_by_name(table_data, \"series\")\n    points = get_column_by_name(table_data, \"points\")\n    positions = get_column_by_name(table_data, \"position\")\n    for serie, point, position in zip(series, points, positions):\n        if serie.lower() == \"queensland formula ford championship\" and position.lower() == \"1st\":\n            answer = equal_to(point, \"222\")\n            break \n    return answer\n\n### END"}
{"id": "1973a7bb-badd-48ac-8f4c-2f28c4fb62dc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states house of representatives elections , 1984\ntable_data = [[\"district\",\"incumbent\",\"party\",\"first elected\",\"result\",\"candidates\"],[\"florida 1\",\"earl dewitt hutto\",\"democratic\",\"1978\",\"re - elected\",\"earl dewitt hutto (d) unopposed\"],[\"florida 2\",\"don fuqua\",\"democratic\",\"1962\",\"re - elected\",\"don fuqua (d) unopposed\"],[\"florida 3\",\"charles edward bennett\",\"democratic\",\"1948\",\"re - elected\",\"charles edward bennett (d) unopposed\"],[\"florida 5\",\"bill mccollum\",\"republican\",\"1980\",\"re - elected\",\"bill mccollum (r) unopposed\"],[\"florida 6\",\"buddy mackay\",\"democratic\",\"1982\",\"re - elected\",\"buddy mackay (d) 99.3% others 0.7%\"],[\"florida 8\",\"bill young\",\"republican\",\"1970\",\"re - elected\",\"bill young (r) 80.3% robert kent (d) 19.7%\"],[\"florida 9\",\"michael bilirakis\",\"republican\",\"1982\",\"re - elected\",\"michael bilirakis (r) 78.6% jack wilson (d) 21.4%\"],[\"florida 10\",\"andy ireland\",\"republican\",\"1976\",\"re - elected\",\"andy ireland (r) 61.9% patricia m glass (d) 38.1%\"],[\"florida 11\",\"bill nelson\",\"democratic\",\"1978\",\"re - elected\",\"bill nelson (d) 60.5% rob quartel (r) 39.5%\"],[\"florida 12\",\"tom lewis\",\"republican\",\"1982\",\"re - elected\",\"tom lewis (r) unopposed\"],[\"florida 13\",\"connie mack\",\"republican\",\"1982\",\"re - elected\",\"connie mack (r) unopposed\"],[\"florida 14\",\"dan mica\",\"democratic\",\"1978\",\"re - elected\",\"dan mica (d) 55.4% don ross (r) 44.6%\"],[\"florida 16\",\"lawrence j smith\",\"democratic\",\"1982\",\"re - elected\",\"lawrence j smith (d) 56.4% tom bush (r) 43.6%\"],[\"florida 17\",\"william lehman\",\"democratic\",\"1972\",\"re - elected\",\"william lehman (d) unopposed\"],[\"florida 18\",\"claude pepper\",\"democratic\",\"1962\",\"re - elected\",\"claude pepper (d) 60.5% ricardo nunez (r) 39.5%\"]]\nQuestion = Is it true that charles edward bennett belongs to the same party as connie mack?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    incumbents = get_column_by_name(table_data, \"incumbent\")\n    parties = get_column_by_name(table_data, \"party\")\n    for incumbent, party in zip(incumbents, parties):\n        if equal_to(incumbent, \"charles edward bennett\"):\n            party_bennett = party\n        if equal_to(incumbent, \"connie mack\"):\n            party_mack = party\n    answer = equal_to(party_bennett, party_mack)\n    return answer\n\n### END"}
{"id": "919a0dbf-b5b5-4b9d-bb80-f59feda70968", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = south carolina gamecocks men 's soccer\ntable_data = [[\"rank\", \"player\", \"goals\", \"assists\", \"points\", \"years\"],[\"1\", \"doug allison\", \"63\", \"32\", \"158\", \"1984 - 87\"],[\"2\", \"chris faklaris\", \"55\", \"14\", \"124\", \"1991 - 94\"],[\"3\", \"clint mathis\", \"53\", \"15\", \"121\", \"1994 - 97\"],[\"4\", \"clark brisson\", \"36\", \"26\", \"98\", \"1987 - 90\"],[\"5\", \"dan ratcliff\", \"37\", \"20\", \"94\", \"1983 - 86\"],[\"6\", \"jordan quinn\", \"37\", \"13\", \"87\", \"1999 - 02\"],[\"7\", \"andrew coggins\", \"33\", \"15\", \"81\", \"1988 - 91\"],[\"8\", \"brian winstead\", \"33\", \"14\", \"80\", \"1978 - 79\"],[\"9\", \"billy baumhoff\", \"22\", \"34\", \"78\", \"1991 - 94\"],[\"9\", \"rob smith\", \"19\", \"40\", \"78\", \"1991 - 94\"],[\"11\", \"john harr\", \"28\", \"20\", \"76\", \"1997 - 99\"],[\"12\", \"arni arnthorsson\", \"22\", \"25\", \"69\", \"1984 - 87\"],[\"13\", \"dave goodchild\", \"28\", \"12\", \"68\", \"1979 - 82\"],[\"14\", \"rubãn tufiã±o\", \"18\", \"30\", \"66\", \"1989 - 92\"],[\"15\", \"joey worthen\", \"25\", \"15\", \"65\", \"1998 - 01\"]]\nQuestion = Is it true that the 63 goals had been collected from the 158 points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    goals = get_column_by_name(table_data, \"goals\")\n    points = get_column_by_name(table_data, \"points\")\n    for goal, point in zip(goals, points):\n        if equal_to(goal, \"63\") and equal_to(point, \"158\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "e1de6729-841c-4a1d-8b25-f9f7c9cf6a2d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1996 - 97 european challenge cup\ntable_data = [[\"team\", \"tries for\", \"tries against\", \"try diff\", \"points for\", \"points against\", \"points diff\"],[\"bourgoin\", \"27\", \"4\", \"+ 23\", \"196\", \"66\", \"+ 130\"],[\"bordeaux - bègles\", \"29\", \"13\", \"+ 16\", \"195\", \"99\", \"+ 96\"],[\"swansea\", \"28\", \"19\", \"+ 9\", \"207\", \"138\", \"+ 69\"],[\"gloucester\", \"17\", \"17\", \"0\", \"119\", \"123\", \"4\"],[\"ebbw vale\", \"6\", \"36\", \"30\", \"48\", \"243\", \"195\"],[\"london irish\", \"12\", \"30\", \"18\", \"90\", \"186\", \"96\"]]\nQuestion = Is it true that the points for , was 196 with a try difference of + 23?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    points_for = get_column_by_name(table_data, \"points for\")\n    try_diff = get_column_by_name(table_data, \"try diff\")\n    for points, diff in zip(points_for, try_diff):\n        if equal_to(points, \"196\") and equal_to(diff, \"+ 23\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "b6996a57-fe81-4cee-8353-fa56ce434fda", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 geylang united fc season\ntable_data = [[\"match\", \"date\", \"tournament\", \"location\", \"opponent team\", \"score\"],[\"1\", \"january 19 , 2008\", \"friendly\", \"bedok stadium\", \"police sa\", \"4 - 0\"],[\"2\", \"january 23 , 2008\", \"friendly\", \"bedok stadium\", \"katong fc\", \"7 - 1\"],[\"3\", \"january 26 , 2008\", \"friendly\", \"penang , malaysia\", \"chinese recreation club\", \"0 - 5\"],[\"4\", \"january 27 , 2008\", \"friendly\", \"penang , malaysia\", \"kampong seronong\", \"0 - 1\"],[\"5\", \"january 31 , 2008\", \"friendly\", \"bedok stadium\", \"admiralty\", \"4 - 0\"],[\"6\", \"february 4 , 2008\", \"friendly\", \"pasir gudang , malaysia\", \"johor pg\", \"2 - 3\"],[\"7\", \"february 11 , 2008\", \"friendly\", \"seri gelam , malaysia\", \"majlis bandaraya johor bahru\", \"0 - 3\"],[\"8\", \"february 16 , 2008\", \"friendly\", \"bedok stadium\", \"summerville fc\", \"9 - 0\"]]\nQuestion = Is it true that the team lost its 6th match against johor pg in pasir gudang , malaysia after beating admiralty 4 - 0 a week earlier?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    matches = get_column_by_name(table_data, \"match\")\n    locations = get_column_by_name(table_data, \"location\")\n    opponent_teams = get_column_by_name(table_data, \"opponent team\")\n    scores = get_column_by_name(table_data, \"score\")\n    for match, location, opponent_team, score in zip(matches, locations, opponent_teams, scores):\n        if match == \"6\" and location.lower() == \"pasir gudang , malaysia\" and opponent_team.lower() == \"johor pg\" and score == \"2 - 3\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "d8f42243-cf32-45c9-98b1-7bcd096adafb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = eurovision song contest 1962\ntable_data = [[\"draw\", \"language\", \"artist\", \"english translation\", \"place\", \"points\"],[\"01\", \"finnish\", \"marion rung\", \"chirpy chirp\", \"7\", \"4\"],[\"02\", \"french\", \"fud leclerc\", \"your name\", \"13\", \"0\"],[\"03\", \"spanish\", \"victor balaguer\", \"call me\", \"13\", \"0\"],[\"04\", \"german\", \"eleonore schwarz\", \"only in the vienna air\", \"13\", \"0\"],[\"05\", \"danish\", \"ellen winther\", \"lullaby\", \"10\", \"2\"],[\"06\", \"swedish\", \"inger berggren\", \"sun and spring\", \"7\", \"4\"],[\"07\", \"german\", \"conny froboess\", \"two little italians\", \"6\", \"9\"],[\"08\", \"dutch\", \"de spelbrekers\", \"-\", \"13\", \"0\"],[\"09\", \"french\", \"isabelle aubret\", \"a first love\", \"1\", \"26\"],[\"10\", \"norwegian\", \"inger jacobsen\", \"come sun , come rain\", \"10\", \"2\"],[\"11\", \"french\", \"jean philippe\", \"the return\", \"10\", \"2\"],[\"12\", \"serbian\", \"lola novaković\", \"don't turn the lights on at twilight\", \"4\", \"10\"],[\"13\", \"english\", \"ronnie carroll\", \"-\", \"4\", \"10\"],[\"14\", \"french\", \"camillo felgen\", \"little chap\", \"3\", \"11\"],[\"15\", \"italian\", \"claudio villa\", \"goodbye , goodbye\", \"9\", \"3\"],[\"16\", \"french\", \"françois deguelt\", \"say nothing\", \"2\", \"13\"]]\nQuestion = Is it true that the english translation of camillo felgen is say nothing?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    artists = get_column_by_name(table_data, \"artist\")\n    translations = get_column_by_name(table_data, \"english translation\")\n    for artist, translation in zip(artists, translations):\n        if artist.lower() == \"camillo felgen\":\n            answer = equal_to(translation, \"say nothing\")\n            break \n    return answer\n\n### END"}
{"id": "2f547f10-931d-4df4-b2b3-0ef6346282ad", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1970 - 71 new york rangers season\ntable_data = [[\"game\", \"march\", \"opponent\", \"score\", \"record\"],[\"64\", \"3\", \"california golden seals\", \"8 - 1\", \"40 - 14 - 10\"],[\"65\", \"6\", \"detroit red wings\", \"2 - 2\", \"40 - 14 - 11\"],[\"66\", \"7\", \"los angeles kings\", \"4 - 2\", \"41 - 14 - 11\"],[\"67\", \"10\", \"chicago black hawks\", \"4 - 2\", \"42 - 14 - 11\"],[\"68\", \"12\", \"philadelphia flyers\", \"7 - 2\", \"43 - 14 - 11\"],[\"69\", \"14\", \"toronto maple leafs\", \"1 - 0\", \"44 - 14 - 11\"],[\"70\", \"18\", \"philadelphia flyers\", \"2 - 1\", \"44 - 15 - 11\"],[\"71\", \"20\", \"toronto maple leafs\", \"3 - 1\", \"44 - 16 - 11\"],[\"72\", \"21\", \"montreal canadiens\", \"6 - 2\", \"44 - 17 - 11\"],[\"73\", \"23\", \"buffalo sabres\", \"7 - 2\", \"45 - 17 - 11\"],[\"74\", \"27\", \"boston bruins\", \"6 - 3\", \"46 - 17 - 11\"],[\"75\", \"28\", \"boston bruins\", \"2 - 1\", \"47 - 17 - 11\"],[\"76\", \"31\", \"chicago black hawks\", \"4 - 2\", \"48 - 17 - 11\"]]\nQuestion = Is it true that the score for boston bruins' second game is 2 - 1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    scores = get_column_by_name(table_data, \"score\")\n    boston_bruins_scores = [score for opponent, score in zip(opponents, scores) if opponent.lower() == \"boston bruins\"]\n    answer = equal_to(boston_bruins_scores[1], \"2 - 1\")\n    return answer\n\n### END"}
{"id": "d63104f8-1aef-4ccb-ba43-6a04afb8044b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 miller superbike world championship round\ntable_data = [[\"rider\", \"bike\", \"laps\", \"time\", \"grid\"],[\"carlos checa\", \"honda cbr1000rr\", \"20\", \"37:04.991\", \"1\"],[\"troy corser\", \"yamaha yzf - r1\", \"20\", \"+ 2.809\", \"5\"],[\"michel fabrizio\", \"ducati 1098 f08\", \"20\", \"+ 6.546\", \"4\"],[\"max neukirchner\", \"suzuki gsx - r1000\", \"20\", \"+ 7.764\", \"2\"],[\"fonsi nieto\", \"suzuki gsx - r1000\", \"20\", \"+ 16.475\", \"13\"],[\"jakub smrz\", \"ducati 1098 rs 08\", \"20\", \"+ 17.126\", \"11\"],[\"karl muggeridge\", \"honda cbr1000rr\", \"20\", \"+ 17.284\", \"12\"],[\"yukio kagayama\", \"suzuki gsx - r1000\", \"20\", \"+ 17.416\", \"8\"],[\"max biaggi\", \"ducati 1098 rs 08\", \"20\", \"+ 18.117\", \"9\"],[\"ryuichi kiyonari\", \"honda cbr1000rr\", \"20\", \"+ 20.467\", \"20\"],[\"lorenzo lanzi\", \"ducati 1098 rs 08\", \"20\", \"+ 21.742\", \"15\"],[\"kenan sofuoğlu\", \"honda cbr1000rr\", \"20\", \"+ 27.533\", \"25\"],[\"gregorio lavilla\", \"honda cbr1000rr\", \"20\", \"+ 32.609\", \"23\"],[\"ruben xaus\", \"ducati 1098 rs 08\", \"20\", \"+ 33.165\", \"6\"],[\"russell holland\", \"honda cbr1000rr\", \"20\", \"+ 34.182\", \"17\"],[\"shinichi nakatomi\", \"yamaha yzf - r1\", \"20\", \"+ 34.500\", \"22\"],[\"ayrton badovini\", \"kawasaki zx - 10r\", \"20\", \"+ 36.155\", \"16\"],[\"sébastien gimbert\", \"yamaha yzf - r1\", \"20\", \"+ 41.685\", \"24\"],[\"makoto tamada\", \"kawasaki zx - 10r\", \"20\", \"+ 43.579\", \"18\"],[\"roberto rolfo\", \"honda cbr1000rr\", \"20\", \"+ 54.195\", \"28\"],[\"jason pridmore\", \"honda cbr1000rr\", \"20\", \"+ 1:00.388\", \"19\"],[\"vittorio iannuzzo\", \"kawasaki zx - 10r\", \"20\", \"+ 1:02.104\", \"21\"],[\"scott jensen\", \"suzuki gsx - r1000 k8\", \"20\", \"+ 1:09.953\", \"29\"],[\"loic napoleone\", \"yamaha yzf - r1\", \"20\", \"+ 1:12.258\", \"27\"],[\"shuhei aoyama\", \"honda cbr1000rr\", \"14\", \"retirement\", \"14\"],[\"david checa\", \"yamaha yzf - r1\", \"6\", \"retirement\", \"26\"],[\"noriyuki haga\", \"yamaha yzf - r1\", \"5\", \"accident\", \"10\"],[\"troy bayliss\", \"ducati 1098 f08\", \"4\", \"accident\", \"3\"],[\"régis laconi\", \"kawasaki zx - 10r\", \"4\", \"retirement\", \"7\"]]\nQuestion = Is it true that susuki gsx - r 1000 is the name of the bike that has a grid number greater than 9 and a time of + 7.764?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    bikes = get_column_by_name(table_data, \"bike\")\n    times = get_column_by_name(table_data, \"time\")\n    grids = get_column_by_name(table_data, \"grid\")\n    answer = False\n    for bike, time, grid in zip(bikes, times, grids):\n        if bike.lower() == \"suzuki gsx - r1000\" and time == \"+ 7.764\" and greater(int(grid), 9):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "7719d105-cabf-4294-bd05-581cb5e5e48c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = golden gate transit\ntable_data = [[\"make\", \"year placed in service\", \"quantity\", \"number of seats\", \"wheelchair accessible\", \"current status\"],[\"gm new look\", \"1971 , 1972\", \"132\", \"45\", \"no\", \"retired , one bus retained for historical purposes\"],[\"gm advanced design\", \"1981\", \"16\", \"43\", \"yes\", \"retired\"],[\"gm advanced design\", \"1983\", \"50\", \"41\", \"yes\", \"retired\"],[\"gillig\", \"1986\", \"4\", \"26\", \"yes\", \"retired\"],[\"mci\", \"1987\", \"21\", \"45\", \"yes\", \"retired\"],[\"tmc\", \"1990\", \"48\", \"39\", \"yes\", \"retired\"],[\"tmc\", \"1991\", \"49\", \"40\", \"yes\", \"retired (26) , reserve fleet (10) , for sale (13)\"],[\"flxible\", \"1994\", \"40\", \"45\", \"yes\", \"retired\"],[\"mci\", \"1996 , 1997\", \"32\", \"57\", \"yes\", \"for sale (21) , unknown (11)\"],[\"novabus\", \"1997\", \"10\", \"43\", \"yes\", \"retired\"],[\"new flyer\", \"2003\", \"8\", \"62\", \"yes\", \"retired\"]]\nQuestion = Is it true that for the make novabus , the quantity was 10 and the number of seats was 57?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    makes = get_column_by_name(table_data, \"make\")\n    quantities = get_column_by_name(table_data, \"quantity\")\n    seats = get_column_by_name(table_data, \"number of seats\")\n    for make, quantity, seat in zip(makes, quantities, seats):\n        if make.lower() == \"novabus\":\n            answer = equal_to(quantity, \"10\") and equal_to(seat, \"57\")\n            break \n    return answer\n\n### END"}
{"id": "f9c862ef-09cc-4085-9ebf-f6ed1b473798", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of quadrangles on mercury\ntable_data = [[\"name\",\"number\",\"namesake\",\"albedo feature name\",\"area\",\"current map\"],[\"borealis\",\"h - 1\",\"borealis planitia\",\"borea\",\"north pole to 67 degree latitude\",\"h - 1\"],[\"victoria\",\"h - 2\",\"victoria rupes\",\"aurora\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 2\"],[\"shakespeare\",\"h - 3\",\"shakespeare crater\",\"caduceata\",\"90 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 3\"],[\"raditladi\",\"h - 4\",\"raditladi basin\",\"liguria\",\"270 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 4\"],[\"hokusai\",\"h - 5\",\"hokusai crater\",\"apollonia\",\"360 to 270 degree longitude , 21 to 66 degree latitude\",\"h - 5\"],[\"kuiper\",\"h - 6\",\"kuiper crater\",\"tricrena\",\"0 to 72 degree longitude , 22 to 22 degree latitude\",\"h - 6\"],[\"beethoven\",\"h - 7\",\"beethoven crater\",\"solitudo lycaonis\",\"72 to 144 degree longitude , 22 to 22 degree latitude\",\"h - 7\"],[\"tolstoj\",\"h - 8\",\"tolstoj crater\",\"phaethontias\",\"144 to 216 degree longitude , 22 to 22 degree latitude\",\"h - 8\"],[\"eminescu\",\"h - 9\",\"eminescu crater\",\"solitudo criophori\",\"216 to 288 degree longitude , 22 to 22 degree latitude\",\"h - 9\"],[\"derain\",\"h - 10\",\"derain crater\",\"pieria\",\"288 to 360 degree longitude , - 22 to 22 degree latitude\",\"h - 10\"],[\"discovery\",\"h - 11\",\"discovery rupes\",\"solitudo hermae trismegisti\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 11\"],[\"michelangelo\",\"h - 12\",\"michelangelo crater\",\"solitudo promethei\",\"90 to 180 degree longitude , 21 to - 66 degree latitude\",\"h - 12\"],[\"neruda\",\"h - 13\",\"neruda crater\",\"solitudo persephones\",\"180 to 270 degree longitude , 21 to - 66 degree latitude\",\"h - 13\"],[\"debussy\",\"h - 14\",\"debussy crater\",\"cyllene\",\"270 to 360 degree longitude , 21 to 66 degree latitude\",\"h - 14\"],[\"bach\",\"h - 15\",\"bach crater\",\"australia\",\"south pole to 67 degree latitude\",\"h - 15\"]]\nQuestion = Is it true that h - 10 is the current map location and number for the namesake called derain crater?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    namesakes = get_column_by_name(table_data, \"namesake\")\n    current_maps = get_column_by_name(table_data, \"current map\")\n    for namesake, current_map in zip(namesakes, current_maps):\n        if namesake.lower() == \"derain crater\":\n            answer = equal_to(current_map, \"h - 10\")\n            break \n    return answer\n\n### END"}
{"id": "f328b78d-35db-4e97-a8db-fc1d261036ad", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1969 player 's county league\ntable_data = [[\"player\", \"county\", \"balls\", \"wickets\", \"average\", \"economy\", \"bbi\", \"4wi\", \"5wi\"],[\"keith boyce\", \"essex\", \"708\", \"26\", \"12.00\", \"2.54\", \"3 / 15\", \"0\", \"0\"],[\"peter sainsbury\", \"hampshire\", \"644\", \"28\", \"13.96\", \"3.64\", \"4 / 23\", \"2\", \"0\"],[\"stuart turner\", \"essex\", \"639\", \"27\", \"14.85\", \"3.76\", \"4 / 14\", \"1\", \"0\"],[\"ken higgs\", \"lancashire\", \"673\", \"26\", \"15.23\", \"3.53\", \"4 / 22\", \"1\", \"0\"],[\"ray east\", \"essex\", \"660\", \"29\", \"15.24\", \"4.01\", \"6 / 18\", \"0\", \"2\"],[\"butch white\", \"hampshire\", \"698\", \"26\", \"17.92\", \"4.00\", \"5 / 31\", \"1\", \"1\"]]\nQuestion = Is it true that peter sainsbury had 28 wickets and a 3.64 economy?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    wickets = get_column_by_name(table_data, \"wickets\")\n    economies = get_column_by_name(table_data, \"economy\")\n    for player, wicket, economy in zip(players, wickets, economies):\n        if player.lower() == \"peter sainsbury\":\n            answer = equal_to(wicket, \"28\") and equal_to(economy, \"3.64\")\n            break \n    return answer\n\n### END"}
{"id": "50e248c9-f061-4bdc-8d9e-3ce4eddb8e8d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1972 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"st kilda\", \"13.12 (90)\", \"melbourne\", \"13.11 (89)\", \"moorabbin oval\", \"18836\", \"19 august 1972\"],[\"south melbourne\", \"9.12 (66)\", \"footscray\", \"11.13 (79)\", \"lake oval\", \"9154\", \"19 august 1972\"],[\"richmond\", \"20.17 (137)\", \"fitzroy\", \"13.22 (100)\", \"mcg\", \"27651\", \"19 august 1972\"],[\"geelong\", \"17.10 (112)\", \"collingwood\", \"17.9 (111)\", \"kardinia park\", \"23108\", \"19 august 1972\"],[\"north melbourne\", \"8.12 (60)\", \"carlton\", \"23.11 (149)\", \"arden street oval\", \"11271\", \"19 august 1972\"],[\"hawthorn\", \"15.16 (106)\", \"essendon\", \"12.15 (87)\", \"vfl park\", \"36749\", \"19 august 1972\"]]\nQuestion = Is it true that footscray was the away team at the lake oval venue?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    away_teams = get_column_by_name(table_data, \"away team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    answer = False\n    for away_team, venue in zip(away_teams, venues):\n        if away_team.lower() == \"footscray\" and venue.lower() == \"lake oval\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "a38c1797-6a32-47ce-9498-10df137d2a8d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1997 major league baseball draft\ntable_data = [[\"pick\", \"player\", \"team\", \"position\", \"school\"],[\"1\", \"matt anderson\", \"detroit tigers\", \"p\", \"rice university\"],[\"2\", \"jd drew\", \"philadelphia phillies\", \"of\", \"florida state university\"],[\"3\", \"troy glaus\", \"anaheim angels\", \"3b , p\", \"ucla\"],[\"4\", \"jason grilli\", \"san francisco giants\", \"p\", \"seton hall university\"],[\"5\", \"vernon wells\", \"toronto blue jays\", \"of\", \"bowie hs (arlington , texas)\"],[\"6\", \"geoff goetz\", \"new york mets\", \"p\", \"jesuit hs (tampa , florida)\"],[\"7\", \"dan reichert\", \"kansas city royals\", \"p\", \"university of the pacific\"],[\"8\", \"jj davis\", \"pittsburgh pirates\", \"of\", \"baldwin park hs (pomona , california)\"],[\"9\", \"michael cuddyer\", \"minnesota twins\", \"ss , p\", \"great bridge hs (chesapeake , virginia)\"],[\"10\", \"jon garland\", \"chicago cubs\", \"p\", \"kennedy hs (granada hills , california)\"],[\"11\", \"chris enochs\", \"oakland athletics\", \"p\", \"west virginia university\"],[\"12\", \"aaron akin\", \"florida marlins\", \"p\", \"cowley county community college\"],[\"13\", \"kyle peterson\", \"milwaukee brewers\", \"p\", \"stanford university\"],[\"14\", \"brandon larson\", \"cincinnati reds\", \"ss\", \"louisiana state university\"],[\"15\", \"jason dellaero\", \"chicago white sox\", \"ss , p\", \"university of south florida\"],[\"16\", \"lance berkman\", \"houston astros\", \"1b\", \"rice university\"],[\"17\", \"john curtice\", \"boston red sox\", \"p\", \"great bridge hs (chesapeake , virginia)\"],[\"18\", \"mark mangum\", \"colorado rockies\", \"p\", \"kingwood hs (kingwood , texas)\"],[\"19\", \"ryan anderson\", \"seattle mariners\", \"p\", \"divine child hs (westland , michigan)\"],[\"20\", \"adam kennedy\", \"st louis cardinals\", \"ss\", \"cal state northridge university\"],[\"21\", \"eric dubose\", \"oakland athletics\", \"p\", \"mississippi state university\"],[\"22\", \"jayson werth\", \"baltimore orioles\", \"c , of\", \"glenwood hs (chatham , illinois)\"],[\"23\", \"donnie bridges\", \"montreal expos\", \"p\", \"oak grove hs (hattiesburg , mississippi)\"],[\"24\", \"tyrell godwin\", \"new york yankees\", \"of\", \"east bladen hs (elizabethtown , north carolina)\"],[\"25\", \"glenn davis\", \"los angeles dodgers\", \"1b\", \"vanderbilt university\"],[\"26\", \"darnell mcdonald\", \"baltimore orioles\", \"of\", \"cherry creek hs (englewood , colorado)\"],[\"27\", \"kevin nicholson\", \"san diego padres\", \"ss\", \"stetson university\"],[\"28\", \"tim drew\", \"cleveland indians\", \"p , of\", \"lowndes county hs (valdosta , georgia)\"],[\"29\", \"troy cameron\", \"atlanta braves\", \"ss\", \"st thomas aquinas hs (fort lauderdale , florida)\"],[\"30\", \"jack cust\", \"arizona diamondbacks\", \"1b\", \"immaculata hs (somerville , new jersey)\"],[\"31\", \"jason standridge\", \"tampa bay devil rays\", \"p\", \"hewitt - trussville hs (trussville , al)\"]]\nQuestion = Is it true that john curtice held the p position?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    positions = get_column_by_name(table_data, \"position\")\n    answer = False\n    for player, position in zip(players, positions):\n        if \"john curtice\" in player.lower():\n            if \"p\" in position.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "01a2f4c0-ef35-415b-b306-be0a1e1c0726", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of radio stations in tamaulipas\ntable_data = [[\"frequency\", \"callsign\", \"brand\", \"city of license\", \"type\"],[\"580\", \"xehp\", \"la mas prendida\", \"ciudad victoria\", \"norteño\"],[\"640\", \"xetam\", \"la poderosa\", \"santa elena\", \"norteño\"],[\"970\", \"xebj - am\", \"radio 970\", \"ciudad victoria\", \"contemporary\"],[\"1340\", \"xerpv - am\", \"la cotorra\", \"ciudad victoria\", \"norteño\"],[\"1380\", \"xegw\", \"planeta w 1380\", \"ciudad victoria\", \"christian pop\"],[\"1480\", \"xevic\", \"radio tamaulipas\", \"ciudad victoria\", \"state government\"]]\nQuestion = Is it true that the frequency 640 has the brand of radio 970?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    brands = get_column_by_name(table_data, \"brand\")\n    for frequency, brand in zip(frequencies, brands):\n        if frequency == \"640\":\n            answer = equal_to(brand, \"radio 970\")\n            break \n    return answer\n\n### END"}
{"id": "24f24b9c-348f-4ce1-ba8c-7b7dc80506fe", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mark donohue\ntable_data = [[\"year\", \"chassis\", \"engine\", \"start\", \"finish\", \"entrant\"],[\"1969\", \"lola\", \"offy\", \"4th\", \"7th\", \"penske\"],[\"1970\", \"lola\", \"ford\", \"5th\", \"2nd\", \"penske\"],[\"1971\", \"mclaren\", \"offy\", \"2nd\", \"25th\", \"penske\"],[\"1972\", \"mclaren\", \"offy\", \"3rd\", \"1st\", \"penske\"],[\"1973\", \"eagle\", \"offy\", \"3rd\", \"15th\", \"penske\"]]\nQuestion = Is it true that the mclaren chassis finished 25th in 1971 and 1st in 1972 for the ford engine?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    chassis = get_column_by_name(table_data, \"chassis\")\n    engines = get_column_by_name(table_data, \"engine\")\n    finishes = get_column_by_name(table_data, \"finish\")\n    answer = False\n    for year, chassi, engine, finish in zip(years, chassis, engines, finishes):\n        if year == \"1971\" and chassi.lower() == \"mclaren\" and engine.lower() == \"ford\" and finish == \"25th\":\n            answer = True\n        elif year == \"1972\" and chassi.lower() == \"mclaren\" and engine.lower() == \"ford\" and finish == \"1st\":\n            answer = True\n    return answer\n\n### END"}
{"id": "989c4aa8-8f3b-4c72-8e3e-bd1213293f0d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"\", \"date\", \"vs\", \"opponent\", \"score\", \"attendance\", \"record\"],[\"1\", \"january 9 , 1988\", \"at\", \"washington wave\", \"13 - 14\", \"6624\", \"loss\"],[\"2\", \"january 16 , 1988\", \"vs\", \"washington wave\", \"10 - 11\", \"13814\", \"loss\"],[\"3\", \"january 30 , 1988\", \"vs\", \"baltimore thunder\", \"12 - 7\", \"16028\", \"win\"],[\"4\", \"february 6 , 1988\", \"vs\", \"new jersey saints\", \"7 - 10\", \"9064\", \"loss\"],[\"5\", \"february 14 , 1988\", \"at\", \"washington wave\", \"12 - 13\", \"6683\", \"loss\"],[\"6\", \"february 20 , 1988\", \"vs\", \"baltimore thunder\", \"14 - 13\", \"10004\", \"win\"],[\"7\", \"february 21 , 1988\", \"at\", \"new jersey saints\", \"12 - 13\", \"6427\", \"loss\"],[\"8\", \"february 27 , 1988\", \"at\", \"baltimore thunder\", \"17 - 9\", \"4937\", \"win\"]]\nQuestion = Is it true that 6624 people attended the game on january 9 , 1988?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    for date, attendance in zip(dates, attendances):\n        if \"january 9 , 1988\" in date.lower():\n            answer = equal_to(attendance, \"6624\")\n            break \n    return answer\n\n### END"}
{"id": "5a34091d-97b8-4953-a4b1-6e95d7ad4798", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sambo (martial art)\ntable_data = [[\"rank\", \"nation\", \"gold\", \"silver\", \"bronze\", \"total\"],[\"1\", \"russia\", \"200\", \"24\", \"82\", \"308\"],[\"2\", \"belarus\", \"12\", \"11\", \"19\", \"43\"],[\"3\", \"bulgaria\", \"12\", \"10\", \"22\", \"44\"],[\"4\", \"ukraine\", \"7\", \"17\", \"26\", \"50\"],[\"5\", \"kazakhstan\", \"4\", \"5\", \"23\", \"31\"],[\"6\", \"mongolia\", \"4\", \"7\", \"7\", \"18\"],[\"7\", \"lithuania\", \"2\", \"4\", \"11\", \"17\"],[\"8\", \"georgia\", \"2\", \"4\", \"8\", \"14\"],[\"9\", \"uzbekistan\", \"1\", \"8\", \"15\", \"24\"],[\"10\", \"kyrgyzstan\", \"1\", \"2\", \"4\", \"7\"],[\"10\", \"serbia\", \"1\", \"2\", \"4\", \"7\"],[\"12\", \"tajikistan\", \"1\", \"2\", \"3\", \"6\"],[\"13\", \"latvia\", \"1\", \"1\", \"3\", \"5\"],[\"14\", \"moldova\", \"1\", \"0\", \"5\", \"6\"],[\"15\", \"venezuela\", \"0\", \"3\", \"7\", \"10\"],[\"16\", \"armenia\", \"0\", \"2\", \"6\", \"8\"],[\"17\", \"azerbaijan\", \"0\", \"2\", \"4\", \"6\"],[\"18\", \"japan\", \"0\", \"1\", \"4\", \"5\"],[\"19\", \"france\", \"0\", \"1\", \"3\", \"4\"],[\"19\", \"romania\", \"0\", \"1\", \"3\", \"4\"],[\"19\", \"estonia\", \"0\", \"1\", \"3\", \"4\"],[\"22\", \"germany\", \"0\", \"1\", \"1\", \"2\"],[\"22\", \"colombia\", \"0\", \"1\", \"1\", \"2\"],[\"24\", \"israel\", \"0\", \"1\", \"0\", \"1\"],[\"25\", \"greece\", \"0\", \"0\", \"2\", \"2\"],[\"25\", \"spain\", \"0\", \"0\", \"2\", \"2\"],[\"27\", \"czech republic\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"indonesia\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"iran\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"jordan\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"united states\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"turkmenistan\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"south korea\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"slovenia\", \"0\", \"0\", \"1\", \"1\"],[\"total\", \"total\", \"245\", \"111\", \"207\", \"425\"]]\nQuestion = Is it true that the team ranked 15 is the last to receive any gold medals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    golds = get_column_by_name(table_data, \"gold\")\n    ranks = get_column_by_name(table_data, \"rank\")\n    for rank, gold in zip(ranks, golds):\n        if rank == \"15\":\n            answer = equal_to(gold, \"0\")\n            break\n    return not answer\n\n### END"}
{"id": "560ef3a2-88fd-4871-a9b7-91c4d46e4e62", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = provinces of korea\ntable_data = [[\"japanese name\",\"kana\",\"hanja / kanji\",\"korean name\",\"hangul\"],[\"chūsei - hokudō\",\"ちゅうせいほくどう\",\"忠清北道\",\"chungcheong - bukdo\",\"충청북도\"],[\"keishō - hokudō\",\"けいしょうほくどう\",\"慶尚北道\",\"gyeongsang - bukdo\",\"경상북도\"],[\"chūsei - nandō\",\"ちゅうせいなんどう\",\"忠淸南道\",\"chungcheong - namdo\",\"충청남도\"],[\"keishō - nandō\",\"けいしょうなんどう\",\"慶尚南道\",\"gyeongsang - namdo\",\"경상남도\"],[\"heian - hokudō\",\"へいあんほくどう\",\"平安北道\",\"pyeongan - bukdo\",\"평안북도\"],[\"kōgendō\",\"こうげんどう\",\"江原道\",\"gangwondo\",\"강원도\"],[\"heian - nandō\",\"へいあんなんどう\",\"平安南道\",\"pyeongan - namdo\",\"평안남도\"],[\"kōkaidō\",\"こうかいどう\",\"黃海道\",\"hwanghaedo\",\"황해도\"],[\"kankyō - hokudo\",\"かんきょうほくどう\",\"咸鏡北道\",\"hamgyeong - bukdo\",\"함경북도\"],[\"zenra - hokudō\",\"ぜんらほくどう\",\"全羅北道\",\"jeolla - bukdo\",\"전라북도\"],[\"kankyō - nandō\",\"かんきょうなんどう\",\"咸鏡南道\",\"hamgyeong - namdo\",\"함경남도\"],[\"zenra - nandō\",\"ぜんらなんどう\",\"全羅南道\",\"jeolla - namdo\",\"전라남도\"],[\"keikidō\",\"けいきどう\",\"京畿道\",\"gyeonggido\",\"경기도\"]]\nQuestion = Is it true that 忠清北道 is the hanja / kanji of the province with a kana of ちゅうせいほくどう?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    kana_column = get_column_by_name(table_data, \"kana\")\n    hanja_kanji_column = get_column_by_name(table_data, \"hanja / kanji\")\n    for kana, hanja_kanji in zip(kana_column, hanja_kanji_column):\n        if kana == \"ちゅうせいほくどう\":\n            answer = equal_to(hanja_kanji, \"忠清北道\")\n            break\n    return answer\n\n### END"}
{"id": "c1c7e9b2-cb04-4ea6-b0b3-f68e850a9556", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = .38 special\ntable_data = [[\"cartridge\", \"bullet weight\", \"muzzle velocity\", \"muzzle energy\", \"max pressure\"],[\".38 short colt\", \"gr (g)\", \"ft / s (m / s)\", \"181ft lbf (245 j)\", \"7500 cup\"],[\".38 long colt\", \"gr (g)\", \"ft / s (m / s)\", \"201ft lbf (273 j)\", \"12000 cup\"],[\".38 s&w\", \"gr (g)\", \"ft / s (m / s)\", \"206ft lbf (279 j)\", \"14500 psi\"],[\".38 s&w special\", \"gr (g)\", \"ft / s (m / s)\", \"310ft lbf (420 j)\", \"17000 psi\"],[\".38 special + p\", \"gr (g)\", \"ft / s (m / s)\", \"351ft lbf (476 j)\", \"20000 psi\"],[\".38 special + p +\", \"gr (g)\", \"ft / s (m / s)\", \"295ft lbf (400 j)\", \">20000 psi\"],[\".380 acp\", \"gr (g)\", \"ft / s (m / s)\", \"178ft lbf (241 j)\", \"21500 psi\"],[\"9x19 mm parabellum\", \"gr (g)\", \"ft / s (m / s)\", \"420ft lbf (570 j)\", \"39200 psi\"],[\"9x19 mm parabellum\", \"gr (g)\", \"ft / s (m / s)\", \"383ft lbf (520 j)\", \"39200 psi\"],[\"9x18 mm makarov\", \"gr (g)\", \"ft / s (m / s)\", \"231ft lbf (313 j)\", \"23206 psi\"],[\".38 super\", \"grains (g)\", \"ft / s (m / s)\", \"468ft lbf (634 j)\", \"36500 psi\"],[\".357 magnum\", \"grains (g)\", \"ft / s (m / s)\", \"639ft lbf (866 j)\", \"35000 psi\"],[\".357 sig\", \"grains (g)\", \"ft / s (m / s)\", \"506ft lbf (686 j)\", \"40000 psi\"]]\nQuestion = Is it true that the muzzle velocity of the bullet weight gr (g) is ft / s (m / s)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    bullet_weights = get_column_by_name(table_data, \"bullet weight\")\n    muzzle_velocities = get_column_by_name(table_data, \"muzzle velocity\")\n    answer = equal_to(bullet_weights[0], \"gr (g)\") and equal_to(muzzle_velocities[0], \"ft / s (m / s)\")\n    return answer\n\n### END"}
{"id": "f2e549f9-2c10-4067-9f8f-86bd4711b53a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rivers state\ntable_data = [[\"lga name\",\"area (km 2 )\",\"census 2006 population\",\"administrative capital\",\"postal code\"],[\"port harcourt\",\"109\",\"541115\",\"port harcourt\",\"500\"],[\"obio - akpor\",\"260\",\"464789\",\"rumuodumaya\",\"500\"],[\"okrika\",\"222\",\"222026\",\"okrika\",\"500\"],[\"ogu / bolo\",\"89\",\"74683\",\"ogu\",\"500\"],[\"eleme\",\"138\",\"190884\",\"eleme\",\"501\"],[\"tai\",\"159\",\"117797\",\"sakpenwa\",\"501\"],[\"gokana\",\"126\",\"228828\",\"kpor\",\"501\"],[\"khana\",\"560\",\"294217\",\"bori\",\"502\"],[\"oyigbo\",\"248\",\"122687\",\"afam\",\"502\"],[\"opobo / nkoro\",\"130\",\"151511\",\"opobo town\",\"503\"],[\"andoni\",\"233\",\"211009\",\"ngo\",\"503\"],[\"bonny\",\"642\",\"215358\",\"bonny\",\"503\"],[\"degema\",\"1011\",\"249773\",\"degema\",\"504\"],[\"asari - toru\",\"113\",\"220100\",\"buguma\",\"504\"],[\"akuku - toru\",\"1443\",\"156006\",\"abonnema\",\"504\"],[\"abua / odual\",\"704\",\"282988\",\"abua\",\"510\"],[\"ahoada west\",\"403\",\"249425\",\"akinima\",\"510\"],[\"ahoada east\",\"341\",\"166747\",\"ahoada\",\"510\"],[\"ogba / egbema / ndoni\",\"969\",\"284010\",\"omuku\",\"510\"],[\"emohua\",\"831\",\"201901\",\"emohua\",\"511\"],[\"ikwerre\",\"655\",\"189726\",\"isiokpo\",\"511\"],[\"etche\",\"805\",\"249454\",\"okehi\",\"512\"]]\nQuestion = Is it true that port harcourt is the lga with an administrative capital of port harcourt and a population larger than 425208.9417698913 at the 2006 census?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    lga_names = get_column_by_name(table_data, \"lga name\")\n    populations = get_column_by_name(table_data, \"census 2006 population\")\n    capitals = get_column_by_name(table_data, \"administrative capital\")\n    for lga_name, population, capital in zip(lga_names, populations, capitals):\n        if lga_name.lower() == \"port harcourt\" and capital.lower() == \"port harcourt\":\n            answer = greater(int(population), 425208.9417698913)\n            break \n    return answer\n\n### END"}
{"id": "1639f482-a161-44cb-b7be-456180ae20b0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2000 tennessee titans season\ntable_data = [[\"week\", \"date\", \"tv time\", \"opponent\", \"result\"],[\"1\", \"september 3 , 2000\", \"espn 7:30 pm cdt\", \"buffalo bills\", \"l 13 - 16\"],[\"2\", \"september 10 , 2000\", \"cbs 12:00 pm cdt\", \"kansas city chiefs\", \"w 17 - 14\"],[\"3\", \"-\", \"-\", \"-\", None],[\"4\", \"september 24 , 2000\", \"cbs 12:00 pm cdt\", \"pittsburgh steelers\", \"w 23 - 20\"],[\"5\", \"october 1 , 2000\", \"fox 12:00 pm cdt\", \"new york giants\", \"w 28 - 14\"],[\"6\", \"october 8 , 2000\", \"cbs 12:00 pm cdt\", \"cincinnati bengals\", \"w 23 - 14\"],[\"7\", \"october 16 , 2000\", \"abc 8:00 pm cdt\", \"jacksonville jaguars\", \"w 27 - 13\"],[\"8\", \"october 22 , 2000\", \"cbs 12:00 pm cdt\", \"baltimore ravens\", \"w 14 - 6\"],[\"9\", \"october 30 , 2000\", \"abc 8:00 pm cdt\", \"washington redskins\", \"w 27 - 21\"],[\"10\", \"november 5 , 2000\", \"cbs 12:00 pm cdt\", \"pittsburgh steelers\", \"w 9 - 7\"],[\"11\", \"november 12 , 2000\", \"cbs 12:00 pm cdt\", \"baltimore ravens\", \"l 23 - 24\"],[\"12\", \"november 19 , 2000\", \"cbs 12:00 pm cdt\", \"cleveland browns\", \"w 24 - 10\"],[\"13\", \"november 26 , 2000\", \"cbs 3:15 pm cdt\", \"jacksonville jaguars\", \"l 13 - 16\"],[\"14\", \"december 3 , 2000\", \"cbs 12:00 pm cdt\", \"philadelphia eagles\", \"w 15 - 13\"],[\"15\", \"december 10 , 2000\", \"cbs 12:00 pm cdt\", \"cincinnati bengals\", \"w 35 - 3\"],[\"16\", \"december 17 , 2000\", \"cbs 12:00 pm cdt\", \"cleveland browns\", \"w 24 - 0\"],[\"17\", \"december 25 , 2000\", \"abc 8:00 pm cdt\", \"dallas cowboys\", \"w 31 - 0\"]]\nQuestion = Is it true that the tv time of fox on october 1 , 2000 , was 12:00 pm cdt?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    tv_times = get_column_by_name(table_data, \"tv time\")\n    answer = False\n    for date, tv_time in zip(dates, tv_times):\n        if \"october 1 , 2000\" in date.lower() and \"fox 12:00 pm cdt\" in tv_time.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "72a33852-e5d7-4911-aa41-062edc01b883", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = wagnney fabiano\ntable_data = [[\"res\",\"record\",\"opponent\",\"method\",\"event\",\"round\",\"time\",\"location\"],[\"loss\",\"15 - 4\",\"rad martinez\",\"decision (unanimous)\",\"bellator 80\",\"3\",\"5:00\",\"hollywood , florida , united states\"],[\"win\",\"15 - 3\",\"akop stepanyan\",\"submission (armbar)\",\"bellator 76\",\"1\",\"3:24\",\"windsor , ontario , canada\"],[\"loss\",\"14 - 3\",\"joseph benavidez\",\"submission (guillotine choke)\",\"wec 52\",\"2\",\"2:45\",\"las vegas , nevada , united states\"],[\"win\",\"14 - 2\",\"frank gomez\",\"decision (unanimous)\",\"wec 49\",\"3\",\"5:00\",\"edmonton , alberta , canada\"],[\"win\",\"13 - 2\",\"clint godfrey\",\"decision (unanimous)\",\"wec 46\",\"3\",\"5:00\",\"sacramento , california , united states\"],[\"loss\",\"12 - 2\",\"mackens semerzier\",\"submission (triangle choke)\",\"wec 43\",\"1\",\"2:14\",\"san antonio , texas , united states\"],[\"win\",\"12 - 1\",\"fredson paixão\",\"decision (unanimous)\",\"wec 40\",\"3\",\"5:00\",\"chicago , illinois , united states\"],[\"win\",\"11 - 1\",\"akitoshi tamura\",\"submission (arm - triangle choke)\",\"wec 37\",\"3\",\"4:48\",\"las vegas , nevada , united states\"],[\"win\",\"10 - 1\",\"shad lierley\",\"ko (punch)\",\"ifl : new blood , new battles 2\",\"1\",\"0:37\",\"east rutherford , new jersey , united states\"],[\"win\",\"9 - 1\",\"lc davis\",\"submission (armbar)\",\"ifl : world grand prix finals\",\"1\",\"3:38\",\"uncasville , connecticut , united states\"],[\"win\",\"8 - 1\",\"john gunderson\",\"submission (guillotine choke)\",\"ifl : world grand prix semifinals\",\"2\",\"1:53\",\"chicago , illinois , united states\"],[\"win\",\"7 - 1\",\"erik owings\",\"submission (armbar)\",\"ifl : las vegas\",\"1\",\"0:58\",\"las vegas , nevada , united states\"],[\"win\",\"6 - 1\",\"cam ward\",\"submission (arm - triangle choke)\",\"ifl : connecticut\",\"1\",\"3:24\",\"uncasville , connecticut , united states\"],[\"win\",\"5 - 1\",\"ian loveland\",\"submission (arm - triangle choke)\",\"ifl : atlanta\",\"1\",\"0:59\",\"atlanta , georgia , united states\"],[\"loss\",\"4 - 1\",\"jeff curran\",\"decision (split)\",\"apex : a night of champions\",\"3\",\"5:00\",\"gatineau , quebec , canada\"],[\"win\",\"4 - 0\",\"bao quach\",\"ko (head kick)\",\"apex : evolution\",\"1\",\"4:50\",\"gatineau , quebec , canada\"],[\"win\",\"3 - 0\",\"matt fiordirosa\",\"decision (unanimous)\",\"freedom fights : canada vs usa\",\"3\",\"5:00\",\"hull , quebec , canada\"],[\"win\",\"2 - 0\",\"tommy lee\",\"submission (arm - triangle choke)\",\"tko 16: infernal\",\"1\",\"2:46\",\"quebec city , quebec , canada\"],[\"win\",\"1 - 0\",\"ali nestor charles\",\"decision (unanimous)\",\"ucc 1: the new beginning\",\"2\",\"10:00\",\"montreal , quebec , canada\"]]\nQuestion = Is it true that ucc 1: the new beginning is the event that has a record of 1 - 0 in quebec city , quebec , canada?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    records = get_column_by_name(table_data, \"record\")\n    events = get_column_by_name(table_data, \"event\")\n    locations = get_column_by_name(table_data, \"location\")\n    for record, event, location in zip(records, events, locations):\n        if record == \"1 - 0\" and event.lower() == \"ucc 1: the new beginning\" and \"quebec city , quebec , canada\" in location.lower():\n            return True\n    return False\n\n### END"}
{"id": "80bea53b-f7d7-4979-9434-2ad9ca02e136", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = badminton at the 1992 summer olympics\ntable_data = [[\"rank\", \"nation\", \"gold\", \"silver\", \"bronze\", \"total\"],[\"1\", \"indonesia\", \"2\", \"2\", \"1\", \"5\"],[\"2\", \"south korea\", \"2\", \"1\", \"1\", \"4\"],[\"3\", \"china\", \"0\", \"1\", \"4\", \"5\"],[\"4\", \"denmark\", \"0\", \"0\", \"1\", \"1\"],[\"5\", \"malaysia\", \"0\", \"0\", \"1\", \"1\"]]\nQuestion = Is it true that there were totally 4 medals won by the country that won 0 gold and was ranked 4th?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    golds = get_column_by_name(table_data, \"gold\")\n    totals = get_column_by_name(table_data, \"total\")\n    for rank, gold, total in zip(ranks, golds, totals):\n        if rank == \"4\" and gold == \"0\":\n            answer = equal_to(total, \"4\")\n            break \n    return answer\n\n### END"}
{"id": "cb9aa3a7-b58e-442c-9588-c139f289c062", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = marlboro challenge\ntable_data = [[\"season\", \"date\", \"location\", \"driver\", \"chassis\", \"engine\", \"team\"],[\"1987\", \"october 31\", \"tamiami park\", \"bobby rahal\", \"lola\", \"cosworth\", \"truesports\"],[\"1988\", \"november 5\", \"tamiami park\", \"michael andretti\", \"lola\", \"cosworth\", \"kraco racing\"],[\"1989\", \"october 14\", \"laguna seca\", \"al unser , jr\", \"lola\", \"chevrolet\", \"galles racing\"],[\"1990\", \"october 6\", \"nazareth\", \"rick mears\", \"penske\", \"chevrolet\", \"penske racing\"],[\"1991\", \"october 19\", \"laguna seca\", \"michael andretti\", \"lola\", \"chevrolet\", \"newman / haas racing\"],[\"1992\", \"october 3\", \"nazareth\", \"emerson fittipaldi\", \"penske\", \"chevrolet\", \"penske racing\"]]\nQuestion = Is it true that kraco eacing used the cosworth engine for one season?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    engines = get_column_by_name(table_data, \"engine\")\n    teams = get_column_by_name(table_data, \"team\")\n    answer = False\n    for engine, team in zip(engines, teams):\n        if \"kraco racing\" in team.lower() and \"cosworth\" in engine.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "175f85cd-631c-4ee5-b2e6-a673a15a3399", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = extreme engineering\ntable_data = [[\"no in series\",\"no in season\",\"title\",\"country\",\"project\",\"status at production\",\"original air date\"],[\"70\", \"1\", \"rebuilding new york city 's subway\", \"united states\", \"new york city subway expansion\", \"under construction\", \"april 8 , 2011\"],[\"71\", \"2\", \"drought - proofing australia\", \"australia\", \"wonthaggi desalination plant\", \"under construction\", \"april 15 , 2011\"],[\"72\", \"3\", \"azerbaijan 's amazing transformation\", \"azerbaijan\", \"flame towers and heydar aliyev cultural centre\", \"under construction\", \"april 22 , 2011\"],[\"73\", \"4\", \"london 's olympic aquatic stadium\", \"united kingdom\", \"london aquatics centre\", \"under construction\", \"april 29 , 2011\"],[\"74\", \"5\", \"constructing serbia 's largest bridge\", \"serbia\", \"ada bridge\", \"under construction\", \"june 18 , 2011\"],[\"75\", \"6\", \"amsterdam 's futuristic floating city\", \"netherlands\", \"netherlands land expansion\", \"under construction\", \"june 25 , 2011\"],[\"76\", \"7\", \"building mumbai 's modern airport\", \"india\", \"chhatrapati shivaji international airport\", \"under construction\", \"july 2 , 2011\"]]\nQuestion = Is it true that series number 71 originally aired on ampril 15 , 2011?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    series_numbers = get_column_by_name(table_data, \"no in series\")\n    air_dates = get_column_by_name(table_data, \"original air date\")\n    for series_number, air_date in zip(series_numbers, air_dates):\n        if series_number == \"71\":\n            answer = equal_to(air_date, \"april 15 , 2011\")\n            break \n    return answer\n\n### END"}
{"id": "2277632e-038c-427d-a498-1af16901d481", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glamorgan county cricket club\ntable_data = [[\"score\", \"batsmen\", \"against\", \"location\", \"year\"],[\"374\", \"matthew elliott and steve james\", \"sussex\", \"colwyn bay\", \"2000\"],[\"252\", \"matthew maynard and david hemp\", \"northamptonshire\", \"sophia gardens\", \"2002\"],[\"313\", \"emrys davies and willie jones\", \"essex\", \"brentwood\", \"1948\"],[\"425\", \"adrian dale and viv richards\", \"middlesex\", \"sophia gardens\", \"1993\"],[\"264\", \"maurice robinson and stan montgomery\", \"hampshire\", \"bournemouth\", \"1949\"],[\"240\", \"jim allenby and mark wallace\", \"surrey\", \"the brit oval\", \"2009\"],[\"211\", \"tony cottey and ottis gibson\", \"leicestershire\", \"swansea\", \"1996\"],[\"202\", \"dai davies and joe hills\", \"sussex\", \"eastbourne\", \"1928\"],[\"203\", \"joe hills and johnnie clay\", \"worcestershire\", \"swansea\", \"1929\"],[\"143\", \"terry davies and simon daniels\", \"gloucestershire\", \"swansea\", \"1982\"]]\nQuestion = Is it true that the batsmen at the brit oval location are terry davies and simon daniels?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"location\")\n    batsmen = get_column_by_name(table_data, \"batsmen\")\n    for location, batsman in zip(locations, batsmen):\n        if location.lower() == \"the brit oval\":\n            answer = equal_to(batsman, \"terry davies and simon daniels\")\n            break \n    return answer\n\n### END"}
{"id": "da254339-b5e3-453b-b58b-5e543f3428a9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the howie carr show\ntable_data = [[\"calls\",\"frequency\",\"branding\",\"format\",\"timeslot\",\"group owner\"],[\"wgan\",\"560 khz\",\"news radio 560 wgan\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"whyn\",\"560 khz\",\"news / talk 560 whyn\",\"news / talk\",\"live 3p - 7p\",\"clear channel communications\"],[\"wvmt\",\"620 khz\",\"news / talk 620 wvmt\",\"news / talk\",\"live 3p - 7p\",\"sison broadcasting\"],[\"wrko\",\"680 khz\",\"am 680 wrko\",\"news / talk\",\"live 3p - 7p\",\"entercom\"],[\"wcrn\",\"830 khz\",\"wcrn 830 true talk\",\"news / talk\",\"live 3p - 7p\",\"carter broadcasting\"],[\"wkbk\",\"1290 khz\",\"1290 wkbk w281au 104.1\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"wegp\",\"1390 khz\",\"wegp 1390 am - the talk of the county\",\"news / talk\",\"live 3p - 6p\",\"decelles / media , inc\"],[\"wxtk\",\"95.1 mhz\",\"news radio 95 wxtk\",\"news / talk\",\"live 3p - 7p\",\"qantam of cape cod , llc\"],[\"wntk - fm\",\"99.7 mhz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wuvr\",\"1490 khz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wvom - fm / wvqm\",\"103.9 / 101.3 mhz\",\"the voice of maine\",\"news / talk\",\"live 3p - 7p\",\"blueberry broadcasting\"]]\nQuestion = Is it true that the station wrko will take live calls from 3p to 7p?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    calls = get_column_by_name(table_data, \"calls\")\n    timeslots = get_column_by_name(table_data, \"timeslot\")\n    for call, timeslot in zip(calls, timeslots):\n        if equal_to(call, \"wrko\"):\n            answer = equal_to(timeslot, \"live 3p - 7p\")\n            break \n    return answer\n\n### END"}
{"id": "e2395142-2e85-4efe-b3d1-050c584f2ec3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"10:00\", \"10:30\"],[\"coronation street\", \"marketplace\", \"little mosque on the prairie\", \"no opportunity wasted\", \"the fifth estate\", \"the national\", \"the national\"],[\"etalk\", \"jeopardy!\", \"private practice\", \"private practice\", \"criminal minds\", \"csi : ny\", \"csi : ny\"],[\"et canada\", \"entertainment tonight\", \"back to you\", \"'til death\", \"bones\", \"life\", \"life\"],[\"wheel of fortune\", \"e2\", \"smallville\", \"smallville\", \"the big picture\", \"the big picture\", \"the big picture\"],[\"friends\", \"access hollywood\", \"america 's next top model\", \"america 's next top model\", \"great movies\", \"great movies\", \"great movies\"],[\"the insider\", \"e! news\", \"kid nation\", \"kid nation\", \"bionic woman\", \"the simple life\", \"sunset tan\"],[\"virginie\", \"l'épicerie\", \"le match des étoiles\", \"le match des étoiles\", \"enquête\", \"le téléjournal\", \"le téléjournal\"],[\"star système\", \"la poule aux oeufs d'or\", \"destinées\", \"destinées\", \"les soeurs elliot\", \"le tva 22 heures\", \"le tva 22 heures\"],[\"loft story\", \"450 , chemin du golf\", \"movie\", \"movie\", \"movie\", \"le journal du soir\", \"le journal du soir\"]]\nQuestion = Is it true that le journal du soir plays at 10:00 , a movie plays at 9:00 , and loft story plays at 8:00?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    column_8 = get_column_by_index(table_data, 2)\n    column_9 = get_column_by_index(table_data, 4)\n    column_10 = get_column_by_index(table_data, 5)\n    answer = equal_to(column_8, \"loft story\") and equal_to(column_9, \"movie\") and equal_to(column_10, \"le journal du soir\")\n    return answer\n\n### END"}
{"id": "ca84fb3d-e88d-4271-a45c-c3ef36c9849a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1961 houston oilers season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 9 , 1961\", \"oakland raiders\", \"w 55 - 0\", \"16231\"],[\"3\", \"september 24 , 1961\", \"san diego chargers\", \"l 34 - 24\", \"29210\"],[\"4\", \"october 1 , 1961\", \"dallas texans\", \"l 26 - 21\", \"28000\"],[\"5\", \"october 8 , 1961\", \"buffalo bills\", \"l 22 - 12\", \"22761\"],[\"6\", \"october 13 , 1961\", \"boston patriots\", \"t 31 - 31\", \"15070\"],[\"7\", \"october 22 , 1961\", \"dallas texans\", \"w 38 - 7\", \"21237\"],[\"8\", \"october 29 , 1961\", \"buffalo bills\", \"w 28 - 16\", \"23228\"],[\"9\", \"november 5 , 1961\", \"denver broncos\", \"w 55 - 14\", \"11564\"],[\"10\", \"november 12 , 1961\", \"boston patriots\", \"w 27 - 15\", \"35649\"],[\"11\", \"november 19 , 1961\", \"new york titans\", \"w 49 - 13\", \"33428\"],[\"12\", \"november 26 , 1961\", \"denver broncos\", \"w 45 - 14\", \"27864\"],[\"13\", \"december 3 , 1961\", \"san diego chargers\", \"w 33 - 13\", \"37845\"],[\"14\", \"december 10 , 1961\", \"new york titans\", \"w 48 - 21\", \"9462\"],[\"15\", \"december 17 , 1961\", \"oakland raiders\", \"w 47 - 16\", \"4821\"]]\nQuestion = Is it true that the game on october 1 , 1961 had a result of l 26 - 21 with 28000 in attendance?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    results = get_column_by_name(table_data, \"result\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    for date, result, attendance in zip(dates, results, attendances):\n        if date.lower() == \"october 1 , 1961\":\n            answer = equal_to(result, \"l 26 - 21\") and equal_to(attendance, \"28000\")\n            break \n    return answer\n\n### END"}
{"id": "81a4e739-257c-4a5a-90b5-6ac0c8e76c66", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"\", \"original title\", \"directed by\", \"written by\", \"original airdate\", \"prod code\", \"viewers\"],[\"1 - 1\", \"tracy returns\", \"susan tully\", \"elly brewer\", \"8 july 2002\", \"1.1\", \"267000\"],[\"1 - 2\", \"dares\", \"david skynner\", \"elly brewer\", \"15 july 2002\", \"1.2\", \"363000\"],[\"1 - 3\", \"sneaking in ben\", \"susan tully\", \"andy walker\", \"22 july 2002\", \"1.3\", \"499000\"],[\"1 - 4\", \"cam 's first visit\", \"susan tully\", \"elly brewer\", \"29 july 2002\", \"1.4\", \"233000\"],[\"1 - 5\", \"child of the week\", \"susan tully\", \"elly brewer\", \"29 july 2002\", \"1.5\", \"278000\"],[\"1 - 6\", \"the truth is revealed\", \"susan tully\", \"carol russell\", \"5 august 2002\", \"1.6\", \"315000\"],[\"1 - 7\", \"never ever wanna see him again\", \"susan tully\", \"mary morris\", \"5 august 2002\", \"1.7\", \"221000\"],[\"1 - 8\", \"1000 words about tracy\", \"susan tully\", \"arnold evans\", \"12 august 2002\", \"1.8\", \"261000\"],[\"1 - 9\", \"bad peter\", \"susan tully\", \"mary morris\", \"12 august 2002\", \"1.9\", \"242000\"],[\"1 - 10\", \"cam 's place\", \"susan tully\", \"andy walker\", \"19 august 2002\", \"1.10\", \"423000\"],[\"1 - 11\", \"dumping ground virus\", \"david skynner\", \"elly brewer\", \"19 august 2002\", \"1.11\", \"444000\"],[\"1 - 12\", \"justine 's tv\", \"susan tully\", \"elly brewer\", \"26 august 2002\", \"1.12\", \"417000\"],[\"1 - 13\", \"tracy and cam row\", \"susan tully\", \"elly brewer\", \"26 august 2002\", \"1.13\", \"526000\"],[\"1 - 14\", \"sleepover\", \"david skynner\", \"mary morris\", \"3 september 2002\", \"1.14\", \"658000\"],[\"1 - 15\", \"parent 's evening\", \"susan tully\", \"laura summers\", \"3 september 2002\", \"1.15\", \"215000\"],[\"1 - 16\", \"the postcard\", \"susan tully\", \"roger griffiths\", \"10 september 2002\", \"1.16\", \"215000\"],[\"1 - 18\", \"helpful tracy\", \"david skynner\", \"mary morris\", \"10 september 2002\", \"1.17\", \"145000\"],[\"1 - 19\", \"friend\", \"david skynner\", \"laura summers\", \"17 september 2002\", \"1.19\", \"815000\"],[\"1 - 20\", \"treasure hunt\", \"david skynner\", \"laura summers\", \"24 september 2002\", \"1.20\", \"234000\"],[\"1 - 21\", \"romance\", \"david skynner\", \"elly brewer\", \"24 september 2002\", \"1.21\", \"415000\"],[\"1 - 22\", \"temporary care worker\", \"david skynner\", \"othniel smith\", \"1 october 2002\", \"1.22\", \"615000\"],[\"1 - 23\", \"cut the weed\", \"david skynner\", \"graham alborough\", \"1 october 2002\", \"1.23\", \"522000\"],[\"1 - 24\", \"need armbands\", \"david skynner\", \"laura summers\", \"8 october 2002\", \"1.24\", \"195000\"],[\"1 - 25\", \"miss you\", \"david skynner\", \"mary morris\", \"8 october 2002\", \"1.25\", \"395000\"]]\nQuestion = Is it true that when the production code is less than 1.16 the postcard is the original title?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    prod_codes = get_column_by_name(table_data, \"prod code\")\n    titles = get_column_by_name(table_data, \"original title\")\n    for prod_code, title in zip(prod_codes, titles):\n        if less_than(float(prod_code), 1.16) and title.lower() == \"the postcard\":\n            return True\n    return False\n\n### END"}
{"id": "721d91f3-2f27-42e7-a872-b96733eacd55", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"poll source\",\"sample size\",\"date\",\"democrat\",\"republican\"],[\"survey usa\",\"520\",\"mar 14 - 16 , 2008\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"520\",\"mar 14 - 16 , 2008\",\"barack obama\",\"john mccain\"],[\"rasmussen reports\",\"500\",\"feb 17 - 18 , 2008\",\"hillary clinton\",\"john mccain\"],[\"rasmussen reports\",\"500\",\"feb 17 - 18 , 2008\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"506\",\"feb 15 - 17 , 2008\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"506\",\"feb 15 - 17 , 2008\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"hillary clinton\",\"rudy giuliani\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"hillary clinton\",\"mike huckabee\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"hillary clinton\",\"mitt romney\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"barack obama\",\"rudy giuliani\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"barack obama\",\"mike huckabee\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"barack obama\",\"mitt romney\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"hillary clinton\",\"rudy giuliani\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"hillary clinton\",\"mike huckabee\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"hillary clinton\",\"mitt romney\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"barack obama\",\"rudy giuliani\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"barack obama\",\"mike huckabee\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"barack obama\",\"mitt romney\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"hillary clinton\",\"rudy giuliani\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"hillary clinton\",\"mike huckabee\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"hillary clinton\",\"mitt romney\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"barack obama\",\"rudy giuliani\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"barack obama\",\"mike huckabee\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"barack obama\",\"mitt romney\"],[\"survey usa\",\"495\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"rudy giuliani\"],[\"survey usa\",\"472\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"mike huckabee\"],[\"survey usa\",\"468\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"464\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"ron paul\"],[\"survey usa\",\"482\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"mitt romney\"],[\"survey usa\",\"492\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"fred thompson\"]]\nQuestion = Is it true that during october 12 - 14 , 2007 , ron paul , a republican was sampled sized 464?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    sample_sizes = get_column_by_name(table_data, \"sample size\")\n    republicans = get_column_by_name(table_data, \"republican\")\n    for date, sample_size, republican in zip(dates, sample_sizes, republicans):\n        if date.lower() == \"oct 12 - 14 , 2007\" and republican.lower() == \"ron paul\":\n            answer = equal_to(sample_size, \"464\")\n            break \n    return answer\n\n### END"}
{"id": "c1035b37-b1ad-4206-818c-aea0d84f49e3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = kansas jayhawk community college conference\ntable_data = [[\"institution\", \"main campus location\", \"founded\", \"mascot\", \"school colors\"],[\"allen community college\", \"iola\", \"1923\", \"red devils\", \"scarlet & black\"],[\"coffeyville community college\", \"coffeyville\", \"1923\", \"red ravens\", \"red & white\"],[\"cowley college\", \"arkansas city\", \"1922\", \"tigers\", \"orange & black\"],[\"fort scott community college\", \"fort scott\", \"1919\", \"greyhounds\", \"maroon & grey\"],[\"highland community college\", \"highland\", \"1858\", \"scotties\", \"navy & gold\"],[\"independence community college\", \"independence\", \"1925\", \"pirates\", \"navy blue & vegas gold\"],[\"johnson county community college\", \"overland park\", \"1967\", \"cavaliers\", \"maroon & gold\"],[\"kansas city kansas community college\", \"kansas city\", \"1923\", \"blue devils\", \"blue , red & white\"],[\"labette community college\", \"parsons\", \"1923\", \"cardinals\", \"red & white\"],[\"neosho county community college\", \"chanute\", \"1936\", \"panthers\", \"orange & black\"]]\nQuestion = Is it true that maroon & grey are the school colors for the college whose main campus is at overland park?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    main_campus_locations = get_column_by_name(table_data, \"main campus location\")\n    school_colors = get_column_by_name(table_data, \"school colors\")\n    for main_campus_location, school_color in zip(main_campus_locations, school_colors):\n        if main_campus_location.lower() == \"overland park\":\n            answer = equal_to(school_color, \"maroon & grey\")\n            break \n    return answer\n\n### END"}
{"id": "743c7b10-82e1-4f6c-acf6-e3df084b5082", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the simpsons (season 21)\ntable_data = [[\"-\", \"-\", \"title\", \"directed by\", \"written by\", \"original air date\", \"production code\", \"us viewers (millions)\"],[\"442\", \"1\", \"homer the whopper\", \"lance kramer\", \"seth rogen & evan goldberg\", \"september 27 , 2009\", \"labf13\", \"8.31\"],[\"443\", \"2\", \"bart gets a 'z'\", \"mark kirkland\", \"matt selman\", \"october 4 , 2009\", \"labf15\", \"9.32\"],[\"444\", \"3\", \"the great wife hope\", \"matthew faughnan\", \"carolyn omine\", \"october 11 , 2009\", \"labf16\", \"7.5\"],[\"446\", \"5\", \"the devil wears nada\", \"nancy kruse\", \"tim long\", \"november 15 , 2009\", \"labf17\", \"9.04\"],[\"447\", \"6\", \"pranks and greens\", \"chuck sheetz\", \"jeff westbrook\", \"november 22 , 2009\", \"labf18\", \"7.03\"],[\"448\", \"7\", \"rednecks and broomsticks\", \"bob anderson & rob oliver\", \"kevin curran\", \"november 29 , 2009\", \"labf19\", \"9.02\"],[\"449\", \"8\", \"o brother , where bart thou\", \"steven dean moore\", \"matt selman\", \"december 13 , 2009\", \"mabf01\", \"7.11\"],[\"450\", \"9\", \"thursdays with abie\", \"michael polcino\", \"don payne & mitchell h glazer\", \"january 3 , 2010\", \"mabf02\", \"8.65\"],[\"451\", \"10\", \"once upon a time in springfield\", \"matthew nastuk\", \"stephanie gillis\", \"january 10 , 2010\", \"labf20\", \"21.01\"],[\"452\", \"11\", \"million dollar maybe\", \"chris clements\", \"bill odenkirk\", \"january 31 , 2010\", \"mabf03\", \"5.11\"],[\"453\", \"12\", \"boy meets curl\", \"chuck sheetz\", \"rob lazebnik\", \"february 14 , 2010\", \"mabf05\", \"5.87\"],[\"454\", \"13\", \"the color yellow\", \"raymond s persi\", \"billy kimball & ian maxtone - graham\", \"february 21 , 2010\", \"mabf06\", \"6.08\"],[\"455\", \"14\", \"postcards from the wedge\", \"mark kirkland\", \"brian kelley\", \"march 14 , 2010\", \"mabf04\", \"5.23\"],[\"456\", \"15\", \"stealing first base\", \"steven dean moore\", \"john frink\", \"march 21 , 2010\", \"mabf07\", \"5.69\"],[\"457\", \"16\", \"the greatest story ever d'ohed\", \"michael polcino\", \"kevin curran\", \"march 28 , 2010\", \"mabf10\", \"5.69\"],[\"458\", \"17\", \"american history x - cellent\", \"bob anderson\", \"michael price\", \"april 11 , 2010\", \"mabf08\", \"5.65\"],[\"459\", \"18\", \"chief of hearts\", \"chris clements\", \"carolyn omine & william wright\", \"april 18 , 2010\", \"mabf09\", \"5.93\"],[\"460\", \"19\", \"the squirt and the whale\", \"mark kirkland\", \"matt warburton\", \"april 25 , 2010\", \"mabf14\", \"5.94\"],[\"461\", \"20\", \"to surveil with love\", \"lance kramer\", \"michael nobori\", \"may 2 , 2010\", \"mabf12\", \"6.06\"],[\"462\", \"21\", \"moe letter blues\", \"matthew nastuk\", \"stephanie gillis\", \"may 9 , 2010\", \"mabf13\", \"5.66\"],[\"463\", \"22\", \"the bob next door\", \"nancy kruse\", \"john frink\", \"may 16 , 2010\", \"mabf11\", \"6.26\"]]\nQuestion = Is it true that the show titled bart gets a 'z' , production code labf15 , had 9.32 m us viewers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    production_codes = get_column_by_name(table_data, \"production code\")\n    viewers = get_column_by_name(table_data, \"us viewers (millions)\")\n    for title, production_code, viewer in zip(titles, production_codes, viewers):\n        if title.lower() == \"bart gets a 'z'\" and production_code.lower() == \"labf15\":\n            answer = equal_to(viewer, \"9.32\")\n            break \n    return answer\n\n### END"}
{"id": "ae7ba177-0553-4d44-83e9-0adb96e6d183", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 u.s. women 's open golf championship\ntable_data = [[\"place\", \"player\", \"country\", \"score\", \"to par\", \"money\"],[\"1\", \"cristie kerr\", \"united states\", \"71 + 72 + 66 + 70 = 279\", \"- 5\", \"560000\"],[\"t2\", \"angela park\", \"brazil\", \"68 + 69 + 74 + 70 = 281\", \"- 3\", \"271022\"],[\"t2\", \"lorena ochoa\", \"mexico\", \"71 + 71 + 68 + 71 = 281\", \"- 3\", \"271022\"],[\"t4\", \"se ri pak\", \"south korea\", \"74 + 72 + 68 + 68 = 282\", \"- 2\", \"130549\"],[\"t4\", \"inbee park\", \"south korea\", \"69 + 73 + 71 + 69 = 282\", \"- 2\", \"130549\"],[\"6\", \"jiyai shin\", \"south korea\", \"70 + 69 + 71 + 74 = 284\", \"e\", \"103581\"],[\"7\", \"jee young lee\", \"south korea\", \"72 + 71 + 71 + 71 = 285\", \"+ 1\", \"93031\"],[\"t8\", \"mi hyun kim\", \"south korea\", \"71 + 75 + 70 + 70 = 286\", \"+ 2\", \"82464\"],[\"t8\", \"jeong jang\", \"south korea\", \"72 + 71 + 70 + 73 = 286\", \"+ 2\", \"82464\"],[\"t10\", \"ai miyazato\", \"japan\", \"73 + 73 + 72 + 69 = 287\", \"+ 3\", \"66177\"],[\"t10\", \"kyeong bae\", \"south korea\", \"74 + 71 + 72 + 70 = 287\", \"+ 3\", \"66177\"],[\"t10\", \"julieta granada\", \"paraguay\", \"70 + 69 + 75 + 73 = 287\", \"+ 3\", \"66177\"],[\"t10\", \"morgan pressel\", \"united states\", \"71 + 70 + 69 + 77 = 287\", \"+ 3\", \"66177\"]]\nQuestion = Is it true that the player mi hyun kim was in the t8 place?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_place = get_column_by_name(table_data, \"place\")\n    column_player = get_column_by_name(table_data, \"player\")\n    answer = \"mi hyun kim\" in column_player and \"t8\" in column_place\n    return answer\n\n### END"}
{"id": "3e0dd16a-d681-45f8-9e92-b46608cfdd75", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 seattle supersonics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"47\", \"february 2\", \"new york\", \"w 86 - 85 (ot)\", \"kevin durant (21)\", \"nick collison (12)\", \"earl watson (8)\", \"keyarena 12783\", \"12 - 35\"],[\"48\", \"february 4\", \"chicago\", \"l 108 - 118 (ot)\", \"wally szczerbiak (21)\", \"nick collison (9)\", \"earl watson (8)\", \"keyarena 10935\", \"12 - 36\"],[\"49\", \"february 6\", \"sacramento\", \"w 105 - 92 (ot)\", \"earl watson (23)\", \"earl watson chris wilcox (10)\", \"earl watson (10)\", \"arco arena 13136\", \"13 - 36\"],[\"50\", \"february 8\", \"phoenix\", \"l 99 - 103 (ot)\", \"chris wilcox (22)\", \"chris wilcox (15)\", \"earl watson (5)\", \"us airways center 18422\", \"13 - 37\"],[\"51\", \"february 13\", \"utah\", \"l 93 - 112 (ot)\", \"kevin durant (19)\", \"kurt thomas (13)\", \"earl watson (14)\", \"keyarena 10618\", \"13 - 38\"],[\"52\", \"february 19\", \"memphis\", \"w 108 - 101 (ot)\", \"earl watson (26)\", \"nick collison jeff green (9)\", \"earl watson (9)\", \"keyarena 11391\", \"14 - 38\"],[\"53\", \"february 21\", \"portland\", \"l 88 - 92 (ot)\", \"kevin durant (20)\", \"nick collison (14)\", \"earl watson (9)\", \"rose garden 20168\", \"14 - 39\"],[\"54\", \"february 22\", \"portland\", \"w 99 - 87 (ot)\", \"kevin durant (17)\", \"jeff green (9)\", \"earl watson (4)\", \"keyarena 16640\", \"15 - 39\"],[\"55\", \"february 24\", \"l a lakers\", \"l 91 - 111 (ot)\", \"mickaël gelabale (21)\", \"johan petro (10)\", \"earl watson (8)\", \"keyarena 17072\", \"15 - 40\"],[\"56\", \"february 26\", \"golden state\", \"l 99 - 105 (ot)\", \"kevin durant jeff green (21)\", \"nick collison (13)\", \"luke ridnour (15)\", \"oracle arena 19412\", \"15 - 41\"],[\"57\", \"february 27\", \"denver\", \"l 96 - 138 (ot)\", \"kevin durant mickaël gelabale (16)\", \"johan petro (8)\", \"mickaël gelabale (6)\", \"keyarena 13627\", \"15 - 42\"]]\nQuestion = Is it true that when the team had a record of 14 - 39 they played portland?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    records = get_column_by_name(table_data, \"record\")\n    answer = False\n    for team, record in zip(teams, records):\n        if \"14 - 39\" in record and \"portland\" in team.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "4948666f-12ef-4ce1-a3c4-80c1defb5379", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"title\", \"from album\", \"label\", \"label - nr\"],[\"1962\", \"tonight / sinnin' sam\", \"lookin' ahead\", \"pacific jazz\", \"x - 340\"],[\"1962\", \"the young rabbits / song of india\", \"lookin' ahead\", \"pacific jazz\", \"x - 342\"],[\"1962\", \"congolese sermon / weather beat\", \"(only on 45)\", \"pacific jazz\", \"x - 357\"],[\"1963\", \"no name samba / tough talk\", \"tough talk\", \"world pacific\", \"x - 371\"],[\"1963\", \"turkish black / boopie\", \"tough talk\", \"world pacific\", \"x - 388\"],[\"1963\", \"spanish castles / bluesette\", \"jazz waltz (w les mccann)\", \"world pacific\", \"406\"],[\"1964\", \"heat wave / on broadway\", \"heat wave\", \"world pacific\", \"401\"],[\"1964\", \"i remember tomorrow / long john\", \"stretchin' out\", \"world pacific\", \"412\"],[\"1965\", \"tough talk / the thing\", \"the thing\", \"world pacific\", \"77800\"],[\"1965\", \"aqua dulce / soul bourgeoisie\", \"chile con soul\", \"world pacific\", \"77806\"],[\"1966\", \"scratch / uptight\", \"talk that talk\", \"pacific jazz\", \"88125\"],[\"1968\", \"ooga - boo - ga - loo / eleanor rigby\", \"lighthouse '68\", \"pacific jazz\", \"88144\"],[\"1968\", \"hey jude / love and peace\", \"powerhouse\", \"pacific jazz\", \"88146\"],[\"1969\", \"get back / willie and laura mae jones\", \"lighthouse '69\", \"word pacific jazz\", \"88153\"],[\"1970\", \"way back home / jackson\", \"old socks , new shoes\", \"chisa\", \"c - 8010\"]]\nQuestion = Is it true that heat wave had an album in 1964 with the title heat wave / on broadway in a pacific jazz label?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    titles = get_column_by_name(table_data, \"title\")\n    albums = get_column_by_name(table_data, \"from album\")\n    labels = get_column_by_name(table_data, \"label\")\n    for year, title, album, label in zip(years, titles, albums, labels):\n        if year == \"1964\" and title == \"heat wave / on broadway\" and album == \"heat wave\" and label == \"pacific jazz\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "6a323543-3f88-4b89-aa35-4d4adda23df4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = gambrinus liga\ntable_data = [[\"season\", \"champions\", \"runner - up\", \"third place\", \"top goalscorer\", \"club\"],[\"1993 - 94\", \"sparta prague (1)\", \"slavia prague\", \"baník ostrava\", \"horst siegl (20)\", \"sparta prague\"],[\"1994 - 95\", \"sparta prague (2)\", \"slavia prague\", \"fc brno\", \"radek drulák (15)\", \"drnovice\"],[\"1995 - 96\", \"slavia prague (1)\", \"sigma olomouc\", \"baumit jablonec\", \"radek drulák (22)\", \"drnovice\"],[\"1996 - 97\", \"sparta prague (3)\", \"slavia prague\", \"baumit jablonec\", \"horst siegl (19)\", \"sparta prague\"],[\"1997 - 98\", \"sparta prague (4)\", \"slavia prague\", \"sigma olomouc\", \"horst siegl (13)\", \"sparta prague\"],[\"1998 - 99\", \"sparta prague (5)\", \"teplice\", \"slavia prague\", \"horst siegl (18)\", \"sparta prague\"],[\"1999 - 00\", \"sparta prague (6)\", \"slavia prague\", \"drnovice\", \"vratislav lokvenc (21)\", \"sparta prague\"],[\"2000 - 01\", \"sparta prague (7)\", \"slavia prague\", \"sigma olomouc\", \"vítězslav tuma (15)\", \"drnovice\"],[\"2001 - 02\", \"slovan liberec (1)\", \"sparta prague\", \"viktoria žižkov\", \"jiří štajner (15)\", \"slovan liberec\"],[\"2002 - 03\", \"sparta prague (8)\", \"slavia prague\", \"viktoria žižkov\", \"jiří kowalík (16)\", \"1. fc synot\"],[\"2003 - 04\", \"baník ostrava (1)\", \"sparta prague\", \"sigma olomouc\", \"marek heinz (19)\", \"baník ostrava\"],[\"2004 - 05\", \"sparta prague (9)\", \"slavia prague\", \"teplice\", \"tomáš jun (14)\", \"sparta prague\"],[\"2005 - 06\", \"slovan liberec (2)\", \"mladá boleslav\", \"slavia prague\", \"milan ivana (11)\", \"fc slovácko\"],[\"2006 - 07\", \"sparta prague (10)\", \"slavia prague\", \"mladá boleslav\", \"luboš pecka (16)\", \"mladá boleslav\"],[\"2007 - 08\", \"slavia prague (2)\", \"sparta prague\", \"baník ostrava\", \"václav svěrkoš (15)\", \"baník ostrava\"],[\"2008 - 09\", \"slavia prague (3)\", \"sparta prague\", \"slovan liberec\", \"andrej kerić (15)\", \"slovan liberec\"],[\"2009 - 10\", \"sparta prague (11)\", \"jablonec\", \"baník ostrava\", \"michal ordoš (12)\", \"sigma olomouc\"],[\"2010 - 11\", \"viktoria plzeň (1)\", \"sparta prague\", \"jablonec\", \"david lafata (19)\", \"jablonec\"],[\"2011 - 12\", \"slovan liberec (3)\", \"sparta prague\", \"viktoria plzeň\", \"david lafata (25)\", \"jablonec\"]]\nQuestion = Is it true that drnovice was in third place only one time?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    third_place_teams = get_column_by_name(table_data, \"third place\")\n    count = third_place_teams.count(\"drnovice\")\n    answer = count == 1\n    return answer\n\n### END"}
{"id": "8ded77b3-49af-4ac7-b1b9-3b7fa7b6c40c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = harald ertl\ntable_data = [[\"year\", \"entrant\", \"chassis\", \"engine\", \"points\"],[\"1975\", \"warsteiner brewery\", \"hesketh 308\", \"cosworth v8\", \"0\"],[\"1976\", \"hesketh racing\", \"hesketh 308d\", \"cosworth v8\", \"0\"],[\"1977\", \"hesketh racing\", \"hesketh 308e\", \"cosworth v8\", \"0\"],[\"1978\", \"sachs racing\", \"ensign n177\", \"cosworth v8\", \"0\"],[\"1978\", \"ats engineering\", \"ats hs1\", \"cosworth v8\", \"0\"],[\"1980\", \"team ats\", \"ats d4\", \"cosworth v8\", \"0\"]]\nQuestion = Is it true that the highest number of points with an entrant of warsteiner brewery was greater than 1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    entrants = get_column_by_name(table_data, \"entrant\")\n    points = get_column_by_name(table_data, \"points\")\n    max_points = 0\n    for entrant, point in zip(entrants, points):\n        if entrant.lower() == \"warsteiner brewery\":\n            if greater(int(point), max_points):\n                max_points = int(point)\n    answer = greater(max_points, 1)\n    return answer\n\n### END"}
{"id": "5b686aa1-1ac9-4770-a319-cb45321854ee", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = statistics relating to enlargement of the european union\ntable_data = [[\"member countries\", \"population\", \"area (km square)\", \"gdp (billion us)\", \"gdp per capita (us)\"],[\"cyprus\", \"775927\", \"9250\", \"11.681\", \"15054\"],[\"czech republic\", \"10246178\", \"78866\", \"105.248\", \"10272\"],[\"estonia\", \"1341664\", \"45226\", \"22.384\", \"16684\"],[\"hungary\", \"10032375\", \"93030\", \"102183\", \"10185\"],[\"latvia\", \"2306306\", \"64589\", \"24.826\", \"10764\"],[\"lithuania\", \"3607899\", \"65200\", \"31.971\", \"8861\"],[\"malta\", \"396851\", \"316\", \"5.097\", \"12843\"],[\"poland\", \"38580445\", \"311904\", \"316.438\", \"8202\"],[\"slovakia\", \"5423567\", \"49036\", \"42.800\", \"7810\"],[\"slovenia\", \"2011473\", \"20273\", \"29.633\", \"14732\"],[\"accession countries\", \"74722685\", \"737690\", \"685.123\", \"9169\"],[\"existing members (2004)\", \"381781620\", \"3367154\", \"7711.871\", \"20200\"],[\"eu25 (2004)\", \"456504305 ( + 19.57%)\", \"4104844 ( + 17.97%)\", \"8396994 ( + 8.88%)\", \"18394 (8.94%)\"]]\nQuestion = Is it true that malta has an area of 316 kilometers squared , with a gross domestic product (gdp) of 5.097 billion us dollars?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    member_countries = get_column_by_name(table_data, \"member countries\")\n    areas = get_column_by_name(table_data, \"area (km square)\")\n    gdps = get_column_by_name(table_data, \"gdp (billion us)\")\n    for member_country, area, gdp in zip(member_countries, areas, gdps):\n        if member_country.lower() == \"malta\":\n            answer = equal_to(area, \"316\") and equal_to(gdp, \"5.097\")\n            break \n    return answer\n\n### END"}
{"id": "08428fff-7923-4ba3-8402-5cd777f90456", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"title\", \"from album\", \"label\", \"label - nr\"],[\"1962\", \"tonight / sinnin' sam\", \"lookin' ahead\", \"pacific jazz\", \"x - 340\"],[\"1962\", \"the young rabbits / song of india\", \"lookin' ahead\", \"pacific jazz\", \"x - 342\"],[\"1962\", \"congolese sermon / weather beat\", \"(only on 45)\", \"pacific jazz\", \"x - 357\"],[\"1963\", \"no name samba / tough talk\", \"tough talk\", \"world pacific\", \"x - 371\"],[\"1963\", \"turkish black / boopie\", \"tough talk\", \"world pacific\", \"x - 388\"],[\"1963\", \"spanish castles / bluesette\", \"jazz waltz (w les mccann)\", \"world pacific\", \"406\"],[\"1964\", \"heat wave / on broadway\", \"heat wave\", \"world pacific\", \"401\"],[\"1964\", \"i remember tomorrow / long john\", \"stretchin' out\", \"world pacific\", \"412\"],[\"1965\", \"tough talk / the thing\", \"the thing\", \"world pacific\", \"77800\"],[\"1965\", \"aqua dulce / soul bourgeoisie\", \"chile con soul\", \"world pacific\", \"77806\"],[\"1966\", \"scratch / uptight\", \"talk that talk\", \"pacific jazz\", \"88125\"],[\"1968\", \"ooga - boo - ga - loo / eleanor rigby\", \"lighthouse '68\", \"pacific jazz\", \"88144\"],[\"1968\", \"hey jude / love and peace\", \"powerhouse\", \"pacific jazz\", \"88146\"],[\"1969\", \"get back / willie and laura mae jones\", \"lighthouse '69\", \"word pacific jazz\", \"88153\"],[\"1970\", \"way back home / jackson\", \"old socks , new shoes\", \"chisa\", \"c - 8010\"]]\nQuestion = Is it true that a title from album , tough talk , has the title called no name samba / tough talk?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    albums = get_column_by_name(table_data, \"from album\")\n    answer = False\n    for title, album in zip(titles, albums):\n        if \"tough talk\" in album.lower() and \"no name samba / tough talk\" in title.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "eeda5f9f-8ce7-453e-8215-f766e5002480", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states house of representatives elections , 2010\ntable_data = [[\"district\", \"incumbent\", \"party\", \"first elected\", \"result\", \"candidates\"],[\"pennsylvania 1\", \"bob brady\", \"democratic\", \"1998\", \"re - elected\", \"bob brady (d) unopposed\"],[\"pennsylvania 2\", \"chaka fattah\", \"democratic\", \"1994\", \"re - elected\", \"chaka fattah (d) 89.3% rick hellberg (r) 10.7%\"],[\"pennsylvania 3\", \"kathy dahlkemper\", \"democratic\", \"2008\", \"lost re - election republican gain\", \"mike kelly (r) 55.7% kathy dahlkemper (d) 44.3%\"],[\"pennsylvania 4\", \"jason altmire\", \"democratic\", \"2006\", \"re - elected\", \"jason altmire (d) 50.8% keith rothfuss (r) 49.2%\"],[\"pennsylvania 6\", \"jim gerlach\", \"republican\", \"2002\", \"re - elected\", \"jim gerlach (r) 57.1% manan trivedi (d) 42.9%\"],[\"pennsylvania 9\", \"bill shuster\", \"republican\", \"2001\", \"re - elected\", \"bill shuster (r) 73.1% tom conners (d) 26.9%\"],[\"pennsylvania 10\", \"chris carney\", \"democratic\", \"2006\", \"lost re - election republican gain\", \"tom marino (r) 55.2% chris carney (d) 44.8%\"],[\"pennsylvania 11\", \"paul kanjorski\", \"democratic\", \"1984\", \"lost re - election republican gain\", \"lou barletta (r) 54.7% paul kanjorski (d) 45.3%\"],[\"pennsylvania 12\", \"mark critz\", \"democratic\", \"2010\", \"re - elected\", \"mark critz (d) 50.8% tim burns (r) 49.2%\"],[\"pennsylvania 13\", \"allyson schwartz\", \"democratic\", \"2004\", \"re - elected\", \"allyson schwartz (d) 56.3% dee adcock (r) 43.7%\"],[\"pennsylvania 16\", \"joe pitts\", \"republican\", \"1996\", \"re - elected\", \"joe pitts (r) 65.4% lois herr (d) 34.6%\"],[\"pennsylvania 17\", \"tim holden\", \"democratic\", \"1992\", \"re - elected\", \"tim holden (d) 55.5% dave argall (r) 44.5%\"]]\nQuestion = Is it true that when 1994 is the first elected then the district is pennsylvania 2?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    districts = get_column_by_name(table_data, \"district\")\n    first_elected_years = get_column_by_name(table_data, \"first elected\")\n    for district, first_elected_year in zip(districts, first_elected_years):\n        if equal_to(first_elected_year, \"1994\"):\n            answer = equal_to(district, \"pennsylvania 2\")\n            break \n    return answer\n\n### END"}
{"id": "3bd80756-9866-4c86-8a14-18e41446e314", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 - 02 prva hnl\ntable_data = [[\"team\",\"manager\",\"home city\",\"stadium\",\"capacity\"],[\"cibalia\",\"davor čop\",\"vinkovci\",\"stadion hnk cibalia\",\"9920\"],[\"čakovec\",\"rajko magić\",\"čakovec\",\"stadion src mladost\",\"8000\"],[\"dinamo zagreb\",\"ilija lončarević\",\"zagreb\",\"stadion maksimir\",\"37168\"],[\"hajduk split\",\"nenad gračan\",\"split\",\"gradski stadion u poljudu\",\"35000\"],[\"hrvatski dragovoljac\",\"luka bonačić\",\"zagreb\",\"stadion nšc stjepan spajić\",\"5000\"],[\"kamen ingrad\",\"tomislav radić\",\"velika\",\"stadion kamen ingrada\",\"8000\"],[\"marsonia\",\"milo nižetić\",\"slavonski brod\",\"gradski stadion uz savu\",\"10000\"],[\"osijek\",\"vlado bilić\",\"osijek\",\"stadion gradski vrt\",\"19500\"],[\"pomorac\",\"predrag stilinović\",\"kostrena\",\"stadion žuknica\",\"3000\"],[\"rijeka\",\"ivan katalinić\",\"rijeka\",\"stadion na kantridi\",\"10275\"],[\"slaven belupo\",\"dražen besek\",\"koprivnica\",\"gradski stadion u koprivnici\",\"4000\"],[\"šibenik\",\"vjekoslav lokica\",\"šibenik\",\"stadion šubićevac\",\"8000\"],[\"tšk topolovac\",\"ivica vidović\",\"topolovac\",\"gradski stadion sisak\",\"8000\"],[\"varteks\",\"branko janžek\",\"varaždin\",\"stadion nk varteks\",\"10800\"],[\"zadar\",\"stanko mršić\",\"zadar\",\"stadion stanovi\",\"5860\"],[\"nk zagreb\",\"zlatko kranjčar\",\"zagreb\",\"stadion u kranjčevićevoj ulici\",\"8850\"]]\nQuestion = Is it true that sibenik plays at the stadion subicevas with room for 8000?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    capacities = get_column_by_name(table_data, \"capacity\")\n    for team, stadium, capacity in zip(teams, stadiums, capacities):\n        if team.lower() == \"šibenik\":\n            answer = equal_to(stadium, \"stadion šubićevac\") and equal_to(capacity, \"8000\")\n            break \n    return answer\n\n### END"}
{"id": "1964d7c4-3f1c-4030-b4f1-f69835cc045c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = boise state broncos men 's basketball\ntable_data = [[\"year\", \"round\", \"opponent\", \"result\", \"bsu head coach\"],[\"1976\", \"first round\", \"unlv\", \"l 78 - 103\", \"bus conner\"],[\"1988\", \"first round\", \"michigan\", \"l 58 - 63\", \"bobby dye\"],[\"1993\", \"first round\", \"vanderbilt\", \"l 72 - 92\", \"bobby dye\"],[\"1994\", \"first round\", \"louisville\", \"l 58 - 67\", \"bobby dye\"],[\"2008\", \"first round\", \"louisville\", \"l 61 - 79\", \"greg graham\"],[\"2013\", \"first four\", \"la salle\", \"l 71 - 80\", \"leon rice\"]]\nQuestion = Is it true that in 1976 , the home team faced unlv as the opponent?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    answer = False\n    for year, opponent in zip(years, opponents):\n        if year == \"1976\" and opponent.lower() == \"unlv\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "cac7b8ae-d44f-419e-bd83-47e99d0ee3eb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = israeli football league\ntable_data = [[\"season\", \"champion\", \"runner up\", \"israel bowl\", \"venue\", \"date\", \"finals mvp\"],[\"2007 - 08\", \"jerusalem lions\", \"haifa underdogs\", \"i\", \"kraft stadium , jerusalem\", \"march 28 , 2008\", \"moshe horowitz (lions)\"],[\"2008 - 09\", \"modi'in pioneers\", \"jerusalem lions\", \"ii\", \"kraft stadium , jerusalem\", \"april 3 , 2009\", \"assaf katz (pioneers)\"],[\"2009 - 10\", \"tel aviv sabres\", \"jerusalem lions\", \"iii\", \"kraft stadium , jerusalem\", \"march 26 , 2010\", \"evan reshef (sabres)\"],[\"2010 - 11\", \"judean rebels\", \"tel aviv sabres\", \"iv\", \"kraft stadium , jerusalem\", \"march 18 , 2011\", \"zack miller (rebels)\"],[\"2011 - 12\", \"tel aviv sabres\", \"tel aviv pioneers\", \"v\", \"kraft stadium , jerusalem\", \"march 30 , 2012\", \"adi hakami and jonathan curran (sabres)\"],[\"2012 - 13\", \"tel aviv sabres\", \"judean rebels\", \"vi\", \"kraft stadium , jerusalem\", \"march 22 , 2013\", \"jonathan curran and banning fudge (sabres)\"]]\nQuestion = Is it true that the israel bowl v is before april and the venue was tel aviv sabres?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    israel_bowls = get_column_by_name(table_data, \"israel bowl\")\n    venues = get_column_by_name(table_data, \"venue\")\n    dates = get_column_by_name(table_data, \"date\")\n    for israel_bowl, venue, date in zip(israel_bowls, venues, dates):\n        if israel_bowl.lower() == \"v\":\n            answer = equal_to(venue, \"tel aviv sabres\") and \"april\" not in date.lower()\n            break \n    return answer\n\n### END"}
{"id": "f3f3dd11-11ab-41d7-b2dd-e71ad7be260d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 cleveland cavaliers season\ntable_data = [[\"game\",\"date\",\"team\",\"score\",\"high points\",\"high rebounds\",\"high assists\",\"location attendance\",\"record\"],[\"18\",\"december 2\",\"phoenix suns\",\"w 107 - 90 (ot)\",\"zydrunas ilgauskas (14)\",\"shaquille o'neal (9)\",\"lebron james (10)\",\"quicken loans arena 20562\",\"13 - 5\"],[\"19\",\"december 4\",\"chicago bulls\",\"w 101 - 87 (ot)\",\"lebron james (23)\",\"zydrunas ilgauskas , shaquille o'neal (7)\",\"lebron james (11)\",\"quicken loans arena 20562\",\"14 - 5\"],[\"20\",\"december 6\",\"milwaukee bucks\",\"w 101 - 86 (ot)\",\"delonte west (21)\",\"anderson varejão (12)\",\"lebron james (10)\",\"bradley center 16625\",\"15 - 5\"],[\"21\",\"december 8\",\"memphis grizzlies\",\"l 109 - 111 (ot)\",\"lebron james (43)\",\"lebron james (13)\",\"mo williams (8)\",\"fedex forum 16325\",\"15 - 6\"],[\"22\",\"december 9\",\"houston rockets\",\"l 85 - 95 (ot)\",\"lebron james (27)\",\"shaquille o'neal , j j hickson (10)\",\"lebron james (7)\",\"toyota center 18200\",\"15 - 7\"],[\"23\",\"december 11\",\"portland trail blazers\",\"w 104 - 99 (ot)\",\"lebron james (33)\",\"shaquille o'neal (11)\",\"mo williams (10)\",\"quicken loans arena 20562\",\"16 - 7\"],[\"24\",\"december 13\",\"oklahoma city thunder\",\"w 102 - 89 (ot)\",\"lebron james (44)\",\"anderson varejão (10)\",\"lebron james (6)\",\"ford center 18203\",\"17 - 7\"],[\"25\",\"december 15\",\"new jersey nets\",\"w 99 - 89 (ot)\",\"lebron james (23)\",\"mo williams , jamario moon (8)\",\"lebron james (7)\",\"quicken loans arena 20562\",\"18 - 7\"],[\"26\",\"december 16\",\"philadelphia 76ers\",\"w 108 - 101 (ot)\",\"lebron james (36)\",\"shaquille o'neal (9)\",\"lebron james (7)\",\"wachovia center 19517\",\"19 - 7\"],[\"27\",\"december 18\",\"milwaukee bucks\",\"w 85 - 82 (ot)\",\"lebron james (26)\",\"lebron james (10)\",\"lebron james (8)\",\"quicken loans arena 20562\",\"20 - 7\"],[\"28\",\"december 20\",\"dallas mavericks\",\"l 95 - 102 (ot)\",\"lebron james (25)\",\"anderson varejão , shaquille o'neal (8)\",\"lebron james (6)\",\"american airlines center 20346\",\"20 - 8\"],[\"29\",\"december 21\",\"phoenix suns\",\"w 109 - 91 (ot)\",\"lebron james (29)\",\"mo williams , lebron james , jj hickson (6)\",\"delonte west (6)\",\"us airways center 18221\",\"21 - 8\"],[\"30\",\"december 23\",\"sacramento kings\",\"w 117 - 104 (ot)\",\"lebron james (34)\",\"lebron james (16)\",\"lebron james (10)\",\"arco arena 16407\",\"22 - 8\"],[\"31\",\"december 25\",\"la lakers\",\"w 102 - 87 (ot)\",\"mo williams (28)\",\"anderson varejão , zydrunas ilgauskas (9)\",\"lebron james (9)\",\"staples center 18997\",\"23 - 8\"],[\"32\",\"december 27\",\"houston rockets\",\"w 108 - 83 (ot)\",\"lebron james (29)\",\"shaquille o'neal (11)\",\"lebron james (6)\",\"quicken loans arena 20562\",\"24 - 8\"]]\nQuestion = Is it true that the score was 101 - 87 (ot) for chicago bulls?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    scores = get_column_by_name(table_data, \"score\")\n    for team, score in zip(teams, scores):\n        if team.lower() == \"chicago bulls\":\n            answer = equal_to(score, \"w 101 - 87 (ot)\")\n            break \n    return answer\n\n### END"}
{"id": "6d8956b7-5e41-4f67-92f8-92043488a8b0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = ghost whisperer (season 3)\ntable_data = [[\"no in series\",\"no in season\",\"title\",\"directed by\",\"written by\", \"original air date\",\"us viewers (millions)\"],[\"45\", \"1\", \"the underneath\", \"john gray\", \"john gray\", \"september 28, 2007\", \"8.72\"],[\"46\", \"2\", \"don't try this at home\", \"ian sander\", \"teddy tenenbaum & laurie mccarthy\", \"october 5, 2007\", \"8.91\"],[\"47\", \"3\", \"haunted hero\", \"eric laneuville\", \"breen frazier & karl schaefer\", \"october 12, 2007\", \"8.90\"],[\"48\", \"4\", \"no safe place\", \"peter o'fallon\", \"jeannine renshaw\", \"october 19, 2007\", \"8.95\"],[\"49\", \"5\", \"weight of what was\", \"gloria muzio\", \"pk simonds\", \"october 26, 2007\", \"9.99\"],[\"50\", \"6\", \"double exposure\", \"eric laneuville\", \"laurie mccarthy\", \"november 2, 2007\", \"9.18\"],[\"51\", \"7\", \"unhappy medium\", \"frederick eo toye\", \"breen frazier\", \"november 9, 2007\", \"9.85\"],[\"52\", \"8\", \"bad blood\", \"peter werner\", \"teddy tenenbaum\", \"november 16, 2007\", \"9.56\"],[\"53\", \"9\", \"all ghosts lead to grandview\", \"frederick eo toye\", \"pk simonds & laurie mccarthy\", \"november 23, 2007\", \"9.98\"],[\"54\", \"10\", \"holiday spirit\", \"steven robman\", \"jeannine renshaw\", \"december 14, 2007\", \"9.80\"],[\"55\", \"11\", \"slam (aka slambook)\", \"mark rosman\", \"karl schaefer & daniel sinclair\", \"january 11, 2008\", \"9.86\"],[\"56\", \"12\", \"first do no harm\", \"ian sander\", \"john gray\", \"january 18, 2008\", \"9.91\"],[\"57\", \"13\", \"home but not alone\", \"eric laneuville\", \"pk simonds & laurie mccarthy\", \"april 4, 2008\", \"9.06\"],[\"58\", \"14\", \"the grave sitter\", \"frederick eo toye\", \"john gray\", \"april 11, 2008\", \"8.55\"],[\"59\", \"15\", \"horror show\", \"ian sander\", \"jeannine renshaw\", \"april 25, 2008\", \"8.98\"],[\"60\", \"16\", \"deadbeat dads\", \"gloria muzio\", \"mark b perry\", \"may 2, 2008\", \"9.21\"],[\"61\", \"17\", \"stranglehold (part 1)\", \"eric laneuville\", \"laurie mccarthy & pk simonds\", \"may 9, 2008\", \"8.78\"]]\n\n# get the column by name\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\n# Check if one number equals to another number\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    no_in_season = get_column_by_name(table_data, \"no in season\")\n    directed_by = get_column_by_name(table_data, \"directed by\")\n    original_air_date = get_column_by_name(table_data, \"original air date\")\n    highest_no_in_season = max([int(no) for no in no_in_season if \"2007\" in original_air_date[no_in_season.index(no)]]\nQuestion = Is it true that the highest no in season in 2007 was 5 , directed by gloria muzio?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    no_in_season = get_column_by_name(table_data, \"no in season\")\n    directed_by = get_column_by_name(table_data, \"directed by\")\n    original_air_date = get_column_by_name(table_data, \"original air date\")\n    highest_no_in_season = max([int(no) for no in no_in_season if \"2007\" in original_air_date[no_in_season.index(no)]])\n    director_of_highest_no_in_season = directed_by[no_in_season.index(str(highest_no_in_season))]\n    answer = equal_to(highest_no_in_season, 5) and equal_to(director_of_highest_no_in_season, \"gloria muzio\")\n    return answer\n\n### END"}
{"id": "f6c3d652-dce0-43e6-9e63-da70bd73f1f7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1950 world figure skating championships\ntable_data = [[\"rank\", \"name\", \"nation\", \"placings\", \"total\"],[\"1\", \"karol kennedy / peter kennedy\", \"united states\", \"15\", \"96.07\"],[\"2\", \"jennifer nicks / john nicks\", \"united kingdom\", \"28.5\", \"92.70\"],[\"3\", \"marianne nagy / lászló nagy\", \"hungary\", \"32\", \"92.25\"],[\"4\", \"elianne steineman / andré calamé\", \"switzerland\", \"44.5\", \"90.00\"],[\"5\", \"suzanne gheldorf / jacques rénard\", \"belgium\", \"48.5\", \"89.43\"],[\"6\", \"elly stärck / harry gareis\", \"austria\", \"61\", \"88.08\"],[\"7\", \"marlene smith / donald gilchrist\", \"canada\", \"63\", \"87.07\"],[\"8\", \"joan waterhouse / gordon holloway\", \"united kingdom\", \"62\", \"88.31\"],[\"9\", \"liliane de becker / edmund verbustel\", \"belgium\", \"64\", \"88.42\"],[\"10\", \"irene maguire / walter muehlbronner\", \"united states\", \"82\", \"84.26\"],[\"11\", \"sybil cooke / bob hudson\", \"united kingdom\", \"93.5\", \"83.47\"],[\"12\", \"denise favart / jacques favart\", \"france\", \"108\", \"77.73\"]]\nQuestion = Is it true that rank number 2 has a total of 92.7?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    totals = get_column_by_name(table_data, \"total\")\n    for rank, total in zip(ranks, totals):\n        if rank == \"2\":\n            answer = equal_to(total, \"92.70\")\n            break \n    return answer\n\n### END"}
{"id": "35613468-16a6-4b18-92bd-898b3f5de904", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 - 11 new jersey nets season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"34\", \"january 1\", \"minnesota\", \"l 88 - 103 (ot)\", \"sasha vujačić (22)\", \"kris humphries (14)\", \"devin harris (8)\", \"target center 12665\", \"9 - 25\"],[\"35\", \"january 5\", \"chicago\", \"w 96 - 94 (ot)\", \"kris humphries (20)\", \"kris humphries (11)\", \"devin harris (11)\", \"prudential center 15025\", \"10 - 25\"],[\"36\", \"january 7\", \"washington\", \"l 77 - 97 (ot)\", \"jordan farmar , brook lopez (14)\", \"stephen graham (9)\", \"devin harris (3)\", \"verizon center 16017\", \"10 - 26\"],[\"37\", \"january 8\", \"milwaukee\", \"l 92 - 115 (ot)\", \"kris humphries (22)\", \"kris humphries (8)\", \"jordan farmar (10)\", \"prudential center 12898\", \"10 - 27\"],[\"38\", \"january 12\", \"phoenix\", \"l 109 - 118 (ot)\", \"sasha vujačić (19)\", \"travis outlaw (11)\", \"devin harris (15)\", \"us airways center 16334\", \"10 - 28\"],[\"39\", \"january 14\", \"la lakers\", \"l 88 - 100 (ot)\", \"brook lopez (35)\", \"kris humphries (15)\", \"devin harris (8)\", \"staples center 18997\", \"10 - 29\"],[\"40\", \"january 15\", \"portland\", \"l 89 - 96 (ot)\", \"brook lopez (32)\", \"kris humphries (10)\", \"devin harris (6)\", \"rose garden 20441\", \"10 - 30\"],[\"41\", \"january 17\", \"golden state\", \"l 100 - 109 (ot)\", \"brook lopez (20)\", \"kris humphries (10)\", \"devin harris (8)\", \"oracle arena 18563\", \"10 - 31\"],[\"42\", \"january 19\", \"utah\", \"w 103 - 95 (ot)\", \"brook lopez (20)\", \"travis outlaw (8)\", \"devin harris (8)\", \"prudential center 13251\", \"11 - 31\"],[\"43\", \"january 21\", \"detroit\", \"w 89 - 74 (ot)\", \"brook lopez (15)\", \"kris humphries (12)\", \"devin harris (9)\", \"prudential center 13316\", \"12 - 31\"],[\"44\", \"january 22\", \"dallas\", \"l 86 - 87 (ot)\", \"brook lopez (24)\", \"kris humphries (15)\", \"devin harris (11)\", \"prudential center 14051\", \"12 - 32\"],[\"45\", \"january 24\", \"cleveland\", \"w 103 - 101 (ot)\", \"brook lopez (28)\", \"kris humphries (11)\", \"devin harris (10)\", \"prudential center 10197\", \"13 - 32\"],[\"46\", \"january 26\", \"memphis\", \"w 93 - 88 (ot)\", \"anthony morrow (19)\", \"derrick favors (9)\", \"devin harris (9)\", \"prudential center 8866\", \"14 - 32\"],[\"47\", \"january 28\", \"indiana\", \"l 92 - 124 (ot)\", \"brook lopez (28)\", \"travis outlaw (6)\", \"devin harris (9)\", \"conseco fieldhouse 11337\", \"14 - 33\"],[\"48\", \"january 29\", \"milwaukee\", \"l 81 - 91 (ot)\", \"brook lopez (26)\", \"kris humphries (10)\", \"devin harris (16)\", \"bradley center 17173\", \"14 - 34\"]]\nQuestion = Is it true that kris humphries (12) got the highest rebounds and brook lopez (15) earned the highest points on january 29?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    high_points = get_column_by_name(table_data, \"high points\")\n    high_rebounds = get_column_by_name(table_data, \"high rebounds\")\n    answer = False\n    for date, high_point, high_rebound in zip(dates, high_points, high_rebounds):\n        if \"january 29\" in date.lower():\n            if \"kris humphries (12)\" in high_rebound.lower() and \"brook lopez (15)\" in high_point.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "ebe19765-dbce-4f8c-b4e3-435fc981a572", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = .38 special\ntable_data = [[\"cartridge\", \"bullet weight\", \"muzzle velocity\", \"muzzle energy\", \"max pressure\"],[\".38 short colt\", \"gr (g)\", \"ft / s (m / s)\", \"181ft lbf (245 j)\", \"7500 cup\"],[\".38 long colt\", \"gr (g)\", \"ft / s (m / s)\", \"201ft lbf (273 j)\", \"12000 cup\"],[\".38 s&w\", \"gr (g)\", \"ft / s (m / s)\", \"206ft lbf (279 j)\", \"14500 psi\"],[\".38 s&w special\", \"gr (g)\", \"ft / s (m / s)\", \"310ft lbf (420 j)\", \"17000 psi\"],[\".38 special + p\", \"gr (g)\", \"ft / s (m / s)\", \"351ft lbf (476 j)\", \"20000 psi\"],[\".38 special + p +\", \"gr (g)\", \"ft / s (m / s)\", \"295ft lbf (400 j)\", \">20000 psi\"],[\".380 acp\", \"gr (g)\", \"ft / s (m / s)\", \"178ft lbf (241 j)\", \"21500 psi\"],[\"9x19 mm parabellum\", \"gr (g)\", \"ft / s (m / s)\", \"420ft lbf (570 j)\", \"39200 psi\"],[\"9x19 mm parabellum\", \"gr (g)\", \"ft / s (m / s)\", \"383ft lbf (520 j)\", \"39200 psi\"],[\"9x18 mm makarov\", \"gr (g)\", \"ft / s (m / s)\", \"231ft lbf (313 j)\", \"23206 psi\"],[\".38 super\", \"grains (g)\", \"ft / s (m / s)\", \"468ft lbf (634 j)\", \"36500 psi\"],[\".357 magnum\", \"grains (g)\", \"ft / s (m / s)\", \"639ft lbf (866 j)\", \"35000 psi\"],[\".357 sig\", \"grains (g)\", \"ft / s (m / s)\", \"506ft lbf (686 j)\", \"40000 psi\"]]\nQuestion = Is it true that the 38 long colt cartridge has a muzzle energy of 273 joules with a maximum pressure of 12000 cup?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    cartridges = get_column_by_name(table_data, \"cartridge\")\n    muzzle_energies = get_column_by_name(table_data, \"muzzle energy\")\n    max_pressures = get_column_by_name(table_data, \"max pressure\")\n    for cartridge, muzzle_energy, max_pressure in zip(cartridges, muzzle_energies, max_pressures):\n        if cartridge.lower() == \".38 long colt\":\n            answer = equal_to(muzzle_energy, \"201ft lbf (273 j)\") and equal_to(max_pressure, \"12000 cup\")\n            break \n    return answer\n\n### END"}
{"id": "d7bd7ed4-a1c3-4ffb-b6ce-0f18498858c8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = marlboro challenge\ntable_data = [[\"season\", \"date\", \"location\", \"driver\", \"chassis\", \"engine\", \"team\"],[\"1987\", \"october 31\", \"tamiami park\", \"bobby rahal\", \"lola\", \"cosworth\", \"truesports\"],[\"1988\", \"november 5\", \"tamiami park\", \"michael andretti\", \"lola\", \"cosworth\", \"kraco racing\"],[\"1989\", \"october 14\", \"laguna seca\", \"al unser , jr\", \"lola\", \"chevrolet\", \"galles racing\"],[\"1990\", \"october 6\", \"nazareth\", \"rick mears\", \"penske\", \"chevrolet\", \"penske racing\"],[\"1991\", \"october 19\", \"laguna seca\", \"michael andretti\", \"lola\", \"chevrolet\", \"newman / haas racing\"],[\"1992\", \"october 3\", \"nazareth\", \"emerson fittipaldi\", \"penske\", \"chevrolet\", \"penske racing\"]]\nQuestion = Is it true that on october 6 , driver michael andretti was on the team kraco racing?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    drivers = get_column_by_name(table_data, \"driver\")\n    teams = get_column_by_name(table_data, \"team\")\n    answer = False\n    for date, driver, team in zip(dates, drivers, teams):\n        if \"october 6\" in date.lower() and \"michael andretti\" in driver.lower():\n            if \"kraco racing\" in team.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "25372acb-835c-4822-beec-28bdd7b88926", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = jonathan cochet\ntable_data = [[\"season\", \"series\", \"team\", \"races\", \"wins\", \"fast laps\", \"points\", \"pos\"],[\"2001\", \"formula one\", \"prost\", \"test driver\", \"test driver\", \"test driver\", \"test driver\", \"test driver\"],[\"2001\", \"formula 3000 international\", \"gd racing\", \"4\", \"0\", \"0\", \"0\", \"nc\"],[\"2001\", \"world series by nissan\", \"gd racing\", \"6\", \"0\", \"1\", \"51\", \"9th\"],[\"2002\", \"world series by nissan\", \"gd racing\", \"6\", \"0\", \"0\", \"30\", \"13th\"],[\"2003\", \"world series by nissan\", \"gd racing\", \"2\", \"0\", \"0\", \"0\", \"nc\"],[\"2006\", \"formula one\", \"renault\", \"test driver\", \"test driver\", \"test driver\", \"test driver\", \"test driver\"],[\"200708\", \"a1 grand prix\", \"a1 team france\", \"2\", \"0\", \"0\", \"0\", \"4th\"]]\nQuestion = Is it true that the prost team 's point category is test driver?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    points = get_column_by_name(table_data, \"points\")\n    for team, point in zip(teams, points):\n        if equal_to(team, \"prost\"):\n            answer = equal_to(point, \"test driver\")\n            break \n    return answer\n\n### END"}
{"id": "5d1b4ed4-8830-4351-9cb3-2cf67afc31a9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = hey venus!\ntable_data = [[\"region\", \"date\", \"label\", \"format\", \"catalogue\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"vinyl record\", \"rtradlp 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"compact disc\", \"rtradcd 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"download\", \"-\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"vinyl record\", \"rt - 346 - 1\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"download\", \"rt - 346 - 5\"],[\"united states\", \"22 january 2008\", \"rough trade america\", \"double compact disc\", \"rtradcd 423\"],[\"japan\", \"12 september 2007\", \"rough trade japan\", \"compact disc\", \"xqcy - 1003\"]]\nQuestion = Is it true that rt - 346 - 5 is a catalogue code for rough trade america?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    labels = get_column_by_name(table_data, \"label\")\n    catalogues = get_column_by_name(table_data, \"catalogue\")\n    answer = False\n    for label, catalogue in zip(labels, catalogues):\n        if label.lower() == \"rough trade america\" and catalogue.lower() == \"rt - 346 - 5\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "f05789b3-80df-431f-9a13-680f2814823b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = gambrinus liga\ntable_data = [[\"season\", \"champions\", \"runner - up\", \"third place\", \"top goalscorer\", \"club\"],[\"1993 - 94\", \"sparta prague (1)\", \"slavia prague\", \"baník ostrava\", \"horst siegl (20)\", \"sparta prague\"],[\"1994 - 95\", \"sparta prague (2)\", \"slavia prague\", \"fc brno\", \"radek drulák (15)\", \"drnovice\"],[\"1995 - 96\", \"slavia prague (1)\", \"sigma olomouc\", \"baumit jablonec\", \"radek drulák (22)\", \"drnovice\"],[\"1996 - 97\", \"sparta prague (3)\", \"slavia prague\", \"baumit jablonec\", \"horst siegl (19)\", \"sparta prague\"],[\"1997 - 98\", \"sparta prague (4)\", \"slavia prague\", \"sigma olomouc\", \"horst siegl (13)\", \"sparta prague\"],[\"1998 - 99\", \"sparta prague (5)\", \"teplice\", \"slavia prague\", \"horst siegl (18)\", \"sparta prague\"],[\"1999 - 00\", \"sparta prague (6)\", \"slavia prague\", \"drnovice\", \"vratislav lokvenc (21)\", \"sparta prague\"],[\"2000 - 01\", \"sparta prague (7)\", \"slavia prague\", \"sigma olomouc\", \"vítězslav tuma (15)\", \"drnovice\"],[\"2001 - 02\", \"slovan liberec (1)\", \"sparta prague\", \"viktoria žižkov\", \"jiří štajner (15)\", \"slovan liberec\"],[\"2002 - 03\", \"sparta prague (8)\", \"slavia prague\", \"viktoria žižkov\", \"jiří kowalík (16)\", \"1. fc synot\"],[\"2003 - 04\", \"baník ostrava (1)\", \"sparta prague\", \"sigma olomouc\", \"marek heinz (19)\", \"baník ostrava\"],[\"2004 - 05\", \"sparta prague (9)\", \"slavia prague\", \"teplice\", \"tomáš jun (14)\", \"sparta prague\"],[\"2005 - 06\", \"slovan liberec (2)\", \"mladá boleslav\", \"slavia prague\", \"milan ivana (11)\", \"fc slovácko\"],[\"2006 - 07\", \"sparta prague (10)\", \"slavia prague\", \"mladá boleslav\", \"luboš pecka (16)\", \"mladá boleslav\"],[\"2007 - 08\", \"slavia prague (2)\", \"sparta prague\", \"baník ostrava\", \"václav svěrkoš (15)\", \"baník ostrava\"],[\"2008 - 09\", \"slavia prague (3)\", \"sparta prague\", \"slovan liberec\", \"andrej kerić (15)\", \"slovan liberec\"],[\"2009 - 10\", \"sparta prague (11)\", \"jablonec\", \"baník ostrava\", \"michal ordoš (12)\", \"sigma olomouc\"],[\"2010 - 11\", \"viktoria plzeň (1)\", \"sparta prague\", \"jablonec\", \"david lafata (19)\", \"jablonec\"],[\"2011 - 12\", \"slovan liberec (3)\", \"sparta prague\", \"viktoria plzeň\", \"david lafata (25)\", \"jablonec\"]]\nQuestion = Is it true that sparta prague had third place when the champion was baník ostrava (1)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    champions = get_column_by_name(table_data, \"champions\")\n    third_places = get_column_by_name(table_data, \"third place\")\n    for champion, third_place in zip(champions, third_places):\n        if \"baník ostrava (1)\" in champion.lower() and \"sparta prague\" in third_place.lower():\n            return True\n    return False\n\n### END"}
{"id": "def5e80a-4b6e-4024-b732-732a2a0b939a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = türk telekom arena\ntable_data = [[\"project\", \"year\", \"location\", \"capacity\", \"suites\", \"architect\", \"cost\"],[\"faruk süren project\", \"1997 - 2001\", \"mecidiyeköy\", \"40482\", \"125 + 72 boxes without outside seating\", \"bbb architects\", \"118.5 million ( in 2014 dollars)\"],[\"mehmet cansun project\", \"2001\", \"mecidiyeköy\", \"35000\", \"132\", \"gs member architecture group\", \"35 million ( in 2014 dollars)\"],[\"özhan canaydın : back to süren 's project\", \"2002 - 2005\", \"aslantepe\", \"40482\", \"125\", \"bbb architects\", \"90 million ( in 2014 dollars)\"],[\"eren talu bidding project\", \"2007\", \"aslantepe\", \"52000\", \"150\", \"populous\", \"n / a\"],[\"özhan canaydın project\", \"2007\", \"aslantepe\", \"52652\", \"157\", \"asp stuttgart\", \"250 million ( in 2014 dollars)\"]]\nQuestion = Is it true that the capacity for 150 suites is 52000?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    suites = get_column_by_name(table_data, \"suites\")\n    capacities = get_column_by_name(table_data, \"capacity\")\n    for suite, capacity in zip(suites, capacities):\n        if suite == \"150\":\n            answer = equal_to(capacity, \"52000\")\n            break \n    return answer\n\n### END"}
{"id": "1ce23276-0be0-4fa1-b2f2-cd4669abae25", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 brazilian grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"felipe massa\", \"ferrari\", \"71\", \"1:34:11.435\", \"1\"],[\"fernando alonso\", \"renault\", \"71\", \"+ 13.298\", \"6\"],[\"kimi räikkönen\", \"ferrari\", \"71\", \"+ 16.235\", \"3\"],[\"sebastian vettel\", \"toro rosso - ferrari\", \"71\", \"+ 38.011\", \"7\"],[\"lewis hamilton\", \"mclaren - mercedes\", \"71\", \"+ 38.907\", \"4\"],[\"timo glock\", \"toyota\", \"71\", \"+ 44.368\", \"10\"],[\"heikki kovalainen\", \"mclaren - mercedes\", \"71\", \"+ 55.074\", \"5\"],[\"jarno trulli\", \"toyota\", \"71\", \"+ 1:08.433\", \"2\"],[\"mark webber\", \"red bull - renault\", \"71\", \"+ 1:19.666\", \"12\"],[\"nick heidfeld\", \"bmw sauber\", \"70\", \"+ 1 lap\", \"8\"],[\"robert kubica\", \"bmw sauber\", \"70\", \"+ 1 lap\", \"13\"],[\"nico rosberg\", \"williams - toyota\", \"70\", \"+ 1 lap\", \"18\"],[\"jenson button\", \"honda\", \"70\", \"+ 1 lap\", \"17\"],[\"sébastien bourdais\", \"toro rosso - ferrari\", \"70\", \"+ 1 lap\", \"9\"],[\"rubens barrichello\", \"honda\", \"70\", \"+ 1 lap\", \"15\"],[\"adrian sutil\", \"force india - ferrari\", \"69\", \"+ 2 laps\", \"20\"],[\"kazuki nakajima\", \"williams - toyota\", \"69\", \"+ 2 laps\", \"16\"],[\"giancarlo fisichella\", \"force india - ferrari\", \"69\", \"+ 2 laps\", \"19\"],[\"nelson piquet jr\", \"renault\", \"0\", \"accident\", \"11\"],[\"david coulthard\", \"red bull - renault\", \"0\", \"collision\", \"14\"]]\nQuestion = Is it true that only one lap has a grid of 15?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef solution(table_data):\n    grids = get_column_by_name(table_data, \"grid\")\n    count = count_occurrences(\"15\", grids)\n    answer = count == 1\n    return answer\n\n### END"}
{"id": "37a4ae6c-bd13-4cca-bc48-c3f22146bf38", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rowing at the 2008 summer olympics - women 's lightweight double sculls\ntable_data = [[\"rank\", \"rowers\", \"country\", \"time\", \"notes\"],[\"1\", \"melanie kok , tracy cameron\", \"canada\", \"7:10.70\", \"fa\"],[\"2\", \"xu dongxiang , chen haixia\", \"china\", \"7:11.59\", \"fa\"],[\"3\", \"chrysi biskitzi , alexandra tsiavou\", \"greece\", \"7:11.99\", \"fa\"],[\"4\", \"renee hykel , jennifer goldsack\", \"united states\", \"7:12.15\", \"fb\"],[\"5\", \"amber halliday , marguerite houston\", \"australia\", \"7:13.80\", \"fb\"],[\"6\", \"misaki kumakura , akiko iwamoto\", \"japan\", \"7:16.13\", \"fb\"]]\nQuestion = Is it true that greece 's rank is 3 with notes of fa?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    countries = get_column_by_name(table_data, \"country\")\n    notes = get_column_by_name(table_data, \"notes\")\n    for rank, country, note in zip(ranks, countries, notes):\n        if country.lower() == \"greece\":\n            answer = equal_to(rank, \"3\") and equal_to(note, \"fa\")\n            break \n    return answer\n\n### END"}
{"id": "2da4b333-c09e-405d-8640-00cfc3eb6b3f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date\", \"round\", \"opponent\", \"venue\", \"result\", \"attendance\"],[\"23 january 1999\", \"r3\", \"stenhousemuir\", \"h\", \"2 - 0\", \"37759\"],[\"14 february 1999\", \"r4\", \"hamilton academical\", \"a\", \"6 - 0\", \"7339\"],[\"6 march 1999\", \"qf\", \"falkirk\", \"h\", \"2 - 1\", \"39250\"],[\"11 april 1999\", \"sf\", \"st johnstone\", \"n\", \"4 - 0\", \"20664\"],[\"29 may 1999\", \"f\", \"celtic\", \"n\", \"1 - 0\", \"52670\"]]\nQuestion = Is it true that the average attendance for n venue and f round is 52.0 on 11 april 1999?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef average(numbers):\n    return sum(numbers) / len(numbers)\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    rounds = get_column_by_name(table_data, \"round\")\n    venues = get_column_by_name(table_data, \"venue\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    attendances = [int(attendance) for attendance in attendances]\n    attendances_n_f = []\n    for date, round, venue, attendance in zip(dates, rounds, venues, attendances):\n        if date == \"11 april 1999\" and round == \"f\" and venue == \"n\":\n            attendances_n_f.append(attendance)\n    if attendances_n_f:\n        avg_attendance = average(attendances_n_f)\n        answer = equal_to(avg_attendance, 52.0)\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "b834ac93-3fab-4dc9-a015-9a5f777a87ce", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1994 nhl entry draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"261\", \"per gustafsson\", \"defence\", \"sweden\", \"florida panthers\", \"hv71 (sweden)\"],[\"262\", \"jeremy stevenson\", \"left wing\", \"united states\", \"mighty ducks of anaheim\", \"sault ste marie greyhounds (ohl)\"],[\"263\", \"rob mara\", \"left wing\", \"united states\", \"chicago blackhawks\", \"belmont hill high school (hs - massachusetts)\"],[\"264\", \"jason issel\", \"left wing\", \"canada\", \"winnipeg jets\", \"prince albert raiders (whl)\"],[\"265\", \"steve nimigon\", \"left wing\", \"canada\", \"hartford whalers\", \"niagara falls thunder (ohl)\"],[\"266\", \"ladislav benysek\", \"defence\", \"czech republic\", \"edmonton oilers\", \"olomouc hc (czech republic)\"],[\"267\", \"jamie butt\", \"left wing\", \"canada\", \"ny rangers\", \"tacoma rockets (whl)\"],[\"268\", \"brian white\", \"defence\", \"united states\", \"tampa bay lightning\", \"arlington catholic high school (hs - massachusetts)\"],[\"269\", \"mike hanson\", \"centre\", \"united states\", \"new jersey devils\", \"minot high school (hs - north dakota)\"],[\"270\", \"jan lipiansky\", \"forward\", \"slovakia\", \"philadelphia flyers\", \"slovan bratislava (slovakia)\"],[\"271\", \"david beauregard\", \"left wing\", \"canada\", \"san jose sharks\", \"st hyacinthe lasers (qmjhl)\"],[\"272\", \"dick tarnstrom\", \"defence\", \"sweden\", \"new york islanders\", \"aik (sweden)\"],[\"273\", \"robert longpre\", \"centre\", \"canada\", \"vancouver canucks\", \"medicine hat tigers (whl)\"],[\"274\", \"antti tormanen\", \"left wing\", \"finland\", \"ottawa senators\", \"jokerit (finland)\"],[\"275\", \"sergei tertyshny\", \"defence\", \"russia\", \"washington capitals\", \"chelyabinsk traktor (russia)\"],[\"276\", \"scott fankhouser\", \"goaltender\", \"united states\", \"st louis blues\", \"university of massachusetts lowell (ncaa)\"],[\"277\", \"shayne wright\", \"defence\", \"canada\", \"buffalo sabres\", \"owen sound platers (ohl)\"],[\"278\", \"ross parsons\", \"defence\", \"canada\", \"montreal canadiens\", \"regina pats (whl)\"],[\"279\", \"pavel torgayev\", \"centre\", \"russia\", \"calgary flames\", \"tps (finland)\"],[\"280\", \"chris szysky\", \"right wing\", \"canada\", \"dallas stars\", \"swift current broncos (whl)\"],[\"281\", \"andrei yakhanov\", \"defence\", \"russia\", \"boston bruins\", \"ufa salavat yulayev (russia)\"],[\"282\", \"doug nolan\", \"defence\", \"united states\", \"toronto maple leafs\", \"catholic memorial high school (hs - massachusetts)\"],[\"283\", \"toivo suursoo\", \"left wing\", \"estonia\", \"detroit red wings\", \"krylya sovetov moscow (russia)\"],[\"284\", \"brian leitza\", \"goaltender\", \"united states\", \"pittsburgh penguins\", \"sioux city musketeers (ushl)\"],[\"285\", \"steven low\", \"defence\", \"canada\", \"quebec nordiques\", \"sherbrooke faucons (qmjhl)\"],[\"286\", \"kim johnsson\", \"defence\", \"sweden\", \"new york rangers\", \"malmã if (sweden)\"]]\nQuestion = Is it true that the players from the st louis blues come from university of massachusetts lowell (ncaa)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    nhl_teams = get_column_by_name(table_data, \"nhl team\")\n    colleges = get_column_by_name(table_data, \"college / junior / club team\")\n    answer = False\n    for nhl_team, college in zip(nhl_teams, colleges):\n        if \"st louis blues\" in nhl_team.lower() and \"university of massachusetts lowell (ncaa)\" in college.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "6d49c0da-baf9-4bbb-9317-b79c01e70f5d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"episode\", \"broadcast date\", \"run time\", \"viewers (in millions)\", \"archive\"],[\"episode 1\", \"21 march 1970\", \"24:33\", \"7.1\", \"pal 2 colour videotape\"],[\"episode 2\", \"28 march 1970\", \"24:39\", \"7.6\", \"chroma dot colour recovery\"],[\"episode 3\", \"4 april 1970\", \"24:38\", \"8.0\", \"chroma dot colour recovery\"],[\"episode 4\", \"11 april 1970\", \"24:37\", \"9.3\", \"chroma dot colour recovery\"],[\"episode 5\", \"18 april 1970\", \"24:17\", \"7.1\", \"pal d3 colour restoration\"],[\"episode 6\", \"25 april 1970\", \"24:31\", \"6.9\", \"chroma dot colour recovery\"],[\"episode 7\", \"2 may 1970\", \"24:32\", \"6.4\", \"chroma dot colour recovery\"]]\nQuestion = Is it true that episode 1 was the only episode with a run time of 24:33?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    run_times = get_column_by_name(table_data, \"run time\")\n    answer = run_times.count(\"24:33\") == 1\n    return answer\n\n### END"}
{"id": "14886431-dc1e-42b0-a6d1-dd9195e09f16", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = oregon city - class cruiser\ntable_data = [[\"hull number\", \"name\", \"builder\", \"laid down\", \"launched\", \"completed\"],[\"ca 122\", \"ussoregon city\", \"bethlehem steel\", \"8 april 1944\", \"9 june 1945\", \"16 february 1946\"],[\"ca 123\", \"ussalbany\", \"bethlehem steel\", \"6 mar 1944\", \"30 jun 1945\", \"11 jun 1946\"],[\"ca - 124\", \"ussrochester\", \"bethlehem steel\", \"29 may 1944\", \"28 august 1945\", \"20 december 1946\"],[\"ca - 125\", \"ussnorthampton\", \"bethlehem steel\", \"31 august 1944\", \"27 january 1951\", \"7 march 1953\"],[\"ca - 126\", \"uss cambridge\", \"bethlehem steel\", \"16 december 1944\", \"n / a\", \"n / a\"],[\"ca - 127\", \"uss bridgeport\", \"bethlehem steel\", \"13 january 1945\", \"n / a\", \"n / a\"],[\"ca - 128\", \"uss kansas city\", \"bethlehem steel\", \"n / a\", \"n / a\", \"n / a\"],[\"ca - 129\", \"uss tulsa\", \"bethlehem steel\", \"n / a\", \"n / a\", \"n / a\"],[\"ca - 137\", \"uss norfolk\", \"philadelphia naval shipyard\", \"n / a\", \"n / a\", \"n / a\"],[\"ca - 138\", \"uss scranton\", \"philadelphia naval shipyard\", \"n / a\", \"n / a\", \"n / a\"]]\nQuestion = Is it true that the uss cambridge was laid down in the year 16 december 1944?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    laid_down_dates = get_column_by_name(table_data, \"laid down\")\n    for name, laid_down_date in zip(names, laid_down_dates):\n        if \"uss cambridge\" in name.lower():\n            answer = equal_to(laid_down_date, \"16 december 1944\")\n            break \n    return answer\n\n### END"}
{"id": "e6015d12-64f2-4ba3-ab7d-0d545d96f602", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = türk telekom arena\ntable_data = [[\"project\", \"year\", \"location\", \"capacity\", \"suites\", \"architect\", \"cost\"],[\"faruk süren project\", \"1997 - 2001\", \"mecidiyeköy\", \"40482\", \"125 + 72 boxes without outside seating\", \"bbb architects\", \"118.5 million ( in 2014 dollars)\"],[\"mehmet cansun project\", \"2001\", \"mecidiyeköy\", \"35000\", \"132\", \"gs member architecture group\", \"35 million ( in 2014 dollars)\"],[\"özhan canaydın : back to süren 's project\", \"2002 - 2005\", \"aslantepe\", \"40482\", \"125\", \"bbb architects\", \"90 million ( in 2014 dollars)\"],[\"eren talu bidding project\", \"2007\", \"aslantepe\", \"52000\", \"150\", \"populous\", \"n / a\"],[\"özhan canaydın project\", \"2007\", \"aslantepe\", \"52652\", \"157\", \"asp stuttgart\", \"250 million ( in 2014 dollars)\"]]\nQuestion = Is it true that as of the year 2002 - 2005 the location of aslantepe had a capacity of 40482?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    locations = get_column_by_name(table_data, \"location\")\n    capacities = get_column_by_name(table_data, \"capacity\")\n    for year, location, capacity in zip(years, locations, capacities):\n        if year == \"2002 - 2005\" and location.lower() == \"aslantepe\":\n            answer = equal_to(capacity, \"40482\")\n            break \n    return answer\n\n### END"}
{"id": "2435d987-d543-4917-bd66-5d6d6772ebb7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 manchester city f.c. season\ntable_data = [[\"exit date\", \"pos\", \"player\", \"to club\", \"transfer fee\"],[\"15 may 2007\", \"df\", \"hatem trabelsi\", \"al - hilal\", \"released\"],[\"23 may 2007\", \"df\", \"sylvain distin\", \"portsmouth\", \"free\"],[\"14 june 2007\", \"mf\", \"joey barton\", \"newcastle united\", \"5.8 m\"],[\"4 july 2007\", \"gk\", \"nicky weaver\", \"charlton athletic\", \"free\"],[\"10 july 2007\", \"mf\", \"trevor sinclair\", \"cardiff city\", \"free\"],[\"16 july 2007\", \"df\", \"stephen jordan\", \"burnley\", \"free\"],[\"31 jan 2008\", \"mf\", \"ousmane dabo\", \"lazio\", \"free\"],[\"31 jan 2008\", \"fw\", \"ishmael miller\", \"west brom albion\", \"9 m - 1.4 m\"]]\nQuestion = Is it true that ishmael miller has a position of fw?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    positions = get_column_by_name(table_data, \"pos\")\n    answer = False\n    for player, position in zip(players, positions):\n        if player.lower() == \"ishmael miller\":\n            if position.lower() == \"fw\":\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "6eb24e06-c7cb-49f5-8360-7ef8e84aa5cf", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"team\", \"number\", \"games\", \"kicks\", \"handballs\", \"total disposals\", \"marks\", \"tackles\", \"goals\", \"behinds\", \"goal accuracy %\", \"brownlow medal votes\"],[\"2005\", \"sydney\", \"40\", \"5\", \"21\", \"11\", \"32\", \"10\", \"3\", \"1\", \"1\", \"50%\", \"0\"],[\"2006\", \"sydney\", \"9\", \"17\", \"148\", \"57\", \"205\", \"68\", \"53\", \"9\", \"7\", \"56%\", \"0\"],[\"2007\", \"sydney\", \"9\", \"23\", \"333\", \"148\", \"481\", \"150\", \"60\", \"14\", \"5\", \"74%\", \"9\"],[\"2008\", \"sydney\", \"9\", \"11\", \"110\", \"47\", \"157\", \"53\", \"19\", \"6\", \"1\", \"86%\", \"0\"],[\"2009\", \"sydney\", \"9\", \"12\", \"112\", \"70\", \"183\", \"37\", \"16\", \"5\", \"5\", \"50%\", \"0\"],[\"2010\", \"sydney\", \"9\", \"24\", \"339\", \"204\", \"543\", \"128\", \"60\", \"7\", \"9\", \"44%\", \"4\"]]\nQuestion = Is it true that the team had 10 marks in 2008?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    marks = get_column_by_name(table_data, \"marks\")\n    for year, mark in zip(years, marks):\n        if year == \"2008\":\n            answer = equal_to(mark, \"10\")\n            break \n    return answer\n\n### END"}
{"id": "1f1f8746-1758-42cb-b56b-2bb149bf202c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 dallas cowboys season\ntable_data = [[\"week\", \"date\", \"time (cst)\", \"opponent\", \"result\", \"game site\", \"record\", \"nfl recap\"],[\"1\", \"september 7 , 2008\", \"3:15 pm\", \"cleveland browns\", \"w , 28 - 10\", \"cleveland browns stadium\", \"1 - 0\", \"recap\"],[\"2\", \"september 15 , 2008\", \"7:15 pm\", \"philadelphia eagles\", \"w , 41 - 37\", \"texas stadium\", \"2 - 0\", \"recap\"],[\"3\", \"september 21 , 2008\", \"7:15 pm\", \"green bay packers\", \"w , 27 - 16\", \"lambeau field\", \"3 - 0\", \"recap\"],[\"4\", \"september 28 , 2008\", \"3:15 pm\", \"washington redskins\", \"l , 26 - 24\", \"texas stadium\", \"3 - 1\", \"recap\"],[\"5\", \"october 5 , 2008\", \"3:15 pm\", \"cincinnati bengals\", \"w , 31 - 22\", \"texas stadium\", \"4 - 1\", \"recap\"],[\"6\", \"october 12 , 2008\", \"3:15 pm\", \"arizona cardinals\", \"l , 30 - 24 ot\", \"university of phoenix stadium\", \"4 - 2\", \"recap\"],[\"7\", \"october 19 , 2008\", \"12:00 pm\", \"st louis rams\", \"l , 14 - 34\", \"edward jones dome\", \"4 - 3\", \"recap\"],[\"8\", \"october 26 , 2008\", \"12:00 pm\", \"tampa bay buccaneers\", \"w , 13 - 9\", \"texas stadium\", \"5 - 3\", \"recap\"],[\"9\", \"november 2 , 2008\", \"3:15 pm\", \"new york giants\", \"l , 14 - 35\", \"giants stadium\", \"5 - 4\", \"recap\"],[\"10\", \"bye week\", \"bye week\", \"bye week\", \"bye week\", \"bye week\", \"bye week\", \"bye week\"],[\"11\", \"november 16 , 2008\", \"7:15 pm\", \"washington redskins\", \"w , 14 - 10\", \"fedexfield\", \"6 - 4\", \"recap\"],[\"12\", \"november 23 , 2008\", \"12:00 pm\", \"san francisco 49ers\", \"w , 35 - 22\", \"texas stadium\", \"7 - 4\", \"recap\"],[\"13\", \"november 27 , 2008\", \"3:15 pm\", \"seattle seahawks\", \"w , 34 - 9\", \"texas stadium\", \"8 - 4\", \"recap\"],[\"14\", \"december 7 , 2008\", \"3:15 pm\", \"pittsburgh steelers\", \"l , 13 - 20\", \"heinz field\", \"8 - 5\", \"recap\"],[\"15\", \"december 14 , 2008\", \"7:15 pm\", \"new york giants\", \"w , 20 - 8\", \"texas stadium\", \"9 - 5\", \"recap\"],[\"16\", \"december 20 , 2008\", \"7:15 pm\", \"baltimore ravens\", \"l , 33 - 24\", \"texas stadium\", \"9 - 6\", \"recap\"],[\"17\", \"december 28 , 2008\", \"3:15 pm\", \"philadelphia eagles\", \"l , 44 - 6\", \"lincoln financial field\", \"9 - 7\", \"recap\"]]\nQuestion = Is it true that on week 9 , the game was at the giants stadium?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    game_sites = get_column_by_name(table_data, \"game site\")\n    for week, game_site in zip(weeks, game_sites):\n        if week == \"9\":\n            answer = game_site.lower() == \"giants stadium\"\n            break\n    return answer\n\n### END"}
{"id": "c8a64cb6-56e8-4fb3-bd1f-60e3b70214d1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1977 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"carlton\", \"3.13 (31)\", \"geelong\", \"2.12 (24)\", \"princes park\", \"11009\", \"18 june 1977\"],[\"south melbourne\", \"8.22 (70)\", \"melbourne\", \"9.10 (64)\", \"lake oval\", \"20785\", \"18 june 1977\"],[\"north melbourne\", \"6.11 (47)\", \"hawthorn\", \"6.12 (48)\", \"arden street oval\", \"9027\", \"18 june 1977\"],[\"richmond\", \"13.15 (93)\", \"fitzroy\", \"6.5 (41)\", \"mcg\", \"12877\", \"18 june 1977\"],[\"footscray\", \"5.6 (36)\", \"collingwood\", \"9.15 (69)\", \"western oval\", \"11921\", \"18 june 1977\"],[\"essendon\", \"5.16 (46)\", \"st kilda\", \"5.12 (42)\", \"vfl park\", \"14337\", \"18 june 1977\"]]\nQuestion = Is it true that the home team scored 6.5 (41) at mcg?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    venues = get_column_by_name(table_data, \"venue\")\n    for home_team_score, venue in zip(home_team_scores, venues):\n        if venue.lower() == \"mcg\":\n            answer = equal_to(home_team_score, \"6.5 (41)\")\n            break \n    return answer\n\n### END"}
{"id": "f428c5d8-70e4-41f5-b4c3-7dba31f6681e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states house of representatives elections , 1984\ntable_data = [[\"district\",\"incumbent\",\"party\",\"first elected\",\"result\",\"candidates\"],[\"florida 1\",\"earl dewitt hutto\",\"democratic\",\"1978\",\"re - elected\",\"earl dewitt hutto (d) unopposed\"],[\"florida 2\",\"don fuqua\",\"democratic\",\"1962\",\"re - elected\",\"don fuqua (d) unopposed\"],[\"florida 3\",\"charles edward bennett\",\"democratic\",\"1948\",\"re - elected\",\"charles edward bennett (d) unopposed\"],[\"florida 5\",\"bill mccollum\",\"republican\",\"1980\",\"re - elected\",\"bill mccollum (r) unopposed\"],[\"florida 6\",\"buddy mackay\",\"democratic\",\"1982\",\"re - elected\",\"buddy mackay (d) 99.3% others 0.7%\"],[\"florida 8\",\"bill young\",\"republican\",\"1970\",\"re - elected\",\"bill young (r) 80.3% robert kent (d) 19.7%\"],[\"florida 9\",\"michael bilirakis\",\"republican\",\"1982\",\"re - elected\",\"michael bilirakis (r) 78.6% jack wilson (d) 21.4%\"],[\"florida 10\",\"andy ireland\",\"republican\",\"1976\",\"re - elected\",\"andy ireland (r) 61.9% patricia m glass (d) 38.1%\"],[\"florida 11\",\"bill nelson\",\"democratic\",\"1978\",\"re - elected\",\"bill nelson (d) 60.5% rob quartel (r) 39.5%\"],[\"florida 12\",\"tom lewis\",\"republican\",\"1982\",\"re - elected\",\"tom lewis (r) unopposed\"],[\"florida 13\",\"connie mack\",\"republican\",\"1982\",\"re - elected\",\"connie mack (r) unopposed\"],[\"florida 14\",\"dan mica\",\"democratic\",\"1978\",\"re - elected\",\"dan mica (d) 55.4% don ross (r) 44.6%\"],[\"florida 16\",\"lawrence j smith\",\"democratic\",\"1982\",\"re - elected\",\"lawrence j smith (d) 56.4% tom bush (r) 43.6%\"],[\"florida 17\",\"william lehman\",\"democratic\",\"1972\",\"re - elected\",\"william lehman (d) unopposed\"],[\"florida 18\",\"claude pepper\",\"democratic\",\"1962\",\"re - elected\",\"claude pepper (d) 60.5% ricardo nunez (r) 39.5%\"]]\nQuestion = Is it true that bill mccollum (r) unopposed is the candidate in the election where the incumbent was first elected in 1980?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    first_elected = get_column_by_name(table_data, \"first elected\")\n    candidates = get_column_by_name(table_data, \"candidates\")\n    for year, candidate in zip(first_elected, candidates):\n        if year == \"1980\" and candidate == \"bill mccollum (r) unopposed\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "b71a1ab7-6673-4c24-b1c3-dabed54cd7ed", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = lynyrd skynyrd\ntable_data = [[\"date of release\", \"title\", \"billboard peak\", \"riaa cert\", \"label\"],[\"august 13 , 1973\", \"(pronounced 'lĕh - 'nérd 'skin - 'nérd)\", \"27\", \"2 platinum\", \"mca\"],[\"april 15 , 1974\", \"second helping\", \"12\", \"2 platinum\", \"mca\"],[\"march 24 , 1975\", \"nuthin' fancy\", \"9\", \"platinum\", \"mca\"],[\"february 2 , 1976\", \"gimme back my bullets\", \"20\", \"gold\", \"mca\"],[\"october 17 , 1977\", \"street survivors\", \"5\", \"2 platinum\", \"mca\"],[\"june 11 , 1991\", \"lynyrd skynyrd 1991\", \"64\", \"-\", \"atlantic\"],[\"february 16 , 1993\", \"the last rebel\", \"64\", \"-\", \"atlantic\"],[\"august 9 , 1994\", \"endangered species\", \"-\", \"-\", \"capricorn\"],[\"april 29 , 1997\", \"twenty\", \"97\", \"-\", \"cmc\"],[\"august 10 , 1999\", \"edge of forever\", \"96\", \"-\", \"cmc\"],[\"september 12 , 2000\", \"christmas time again\", \"38\", \"-\", \"sanctuary\"],[\"may 20 , 2003\", \"vicious cycle\", \"30\", \"-\", \"sanctuary\"],[\"september 29 , 2009\", \"god & guns\", \"18\", \"-\", \"roadrunner\"],[\"august 21 , 2012\", \"last of a dyin' breed\", \"14\", \"-\", \"roadrunner\"]]\nQuestion = Is it true that the billboard peak for the album released on february 2 , 1976 by mca was 22?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    release_dates = get_column_by_name(table_data, \"date of release\")\n    billboard_peaks = get_column_by_name(table_data, \"billboard peak\")\n    labels = get_column_by_name(table_data, \"label\")\n    for release_date, billboard_peak, label in zip(release_dates, billboard_peaks, labels):\n        if release_date.lower() == \"february 2 , 1976\" and label.lower() == \"mca\":\n            answer = equal_to(billboard_peak, \"22\")\n            break \n    return answer\n\n### END"}
{"id": "70d23b14-4843-4840-a868-25259e2c6a41", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1926 grand prix season\ntable_data = [[\"name\", \"circuit\", \"date\", \"winning drivers\", \"winning constructor\", \"report\"],[\"indianapolis 500\", \"indianapolis\", \"31 may\", \"frank lockhart\", \"miller\", \"report\"],[\"french grand prix\", \"miramas\", \"27 june\", \"jules goux\", \"bugatti\", \"report\"],[\"san sebastián grand prix / european grand prix\", \"lasarte\", \"18 july\", \"jules goux\", \"bugatti\", \"report\"],[\"british grand prix\", \"brooklands\", \"7 august\", \"robert sénéchal louis wagner\", \"delage\", \"report\"],[\"italian grand prix\", \"monza\", \"5 september\", \"louis charavel\", \"bugatti\", \"report\"]]\nQuestion = Is it true that the date for the french grand prix is in the beginning of june?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef parse_date(date_str):\n    from datetime import datetime\n    return datetime.strptime(date_str, '%d %B')\n\ndef earlier(date1, date2):\n    return date1 < date2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    names = get_column_by_name(table_data, \"name\")\n    answer = False\n    for date, name in zip(dates, names):\n        if \"french grand prix\" in name.lower():\n            parsed_date = parse_date(date)\n            beginning_of_june = parse_date(\"1 june\")\n            if earlier(parsed_date, beginning_of_june):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "87e43d52-afa3-43b0-aec6-cedaf1e0865e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = türk telekom arena\ntable_data = [[\"project\", \"year\", \"location\", \"capacity\", \"suites\", \"architect\", \"cost\"],[\"faruk süren project\", \"1997 - 2001\", \"mecidiyeköy\", \"40482\", \"125 + 72 boxes without outside seating\", \"bbb architects\", \"118.5 million ( in 2014 dollars)\"],[\"mehmet cansun project\", \"2001\", \"mecidiyeköy\", \"35000\", \"132\", \"gs member architecture group\", \"35 million ( in 2014 dollars)\"],[\"özhan canaydın : back to süren 's project\", \"2002 - 2005\", \"aslantepe\", \"40482\", \"125\", \"bbb architects\", \"90 million ( in 2014 dollars)\"],[\"eren talu bidding project\", \"2007\", \"aslantepe\", \"52000\", \"150\", \"populous\", \"n / a\"],[\"özhan canaydın project\", \"2007\", \"aslantepe\", \"52652\", \"157\", \"asp stuttgart\", \"250 million ( in 2014 dollars)\"]]\nQuestion = Is it true that the year that had 157 suites , had a capacity of 40482?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    suites = get_column_by_name(table_data, \"suites\")\n    capacities = get_column_by_name(table_data, \"capacity\")\n    for suite, capacity in zip(suites, capacities):\n        if suite == \"157\":\n            answer = equal_to(capacity, \"40482\")\n            break \n    return answer\n\n### END"}
{"id": "a87c3936-5cf4-4b7b-b7ef-605f4c6b1bb9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"team\", \"number\", \"games\", \"kicks\", \"handballs\", \"total disposals\", \"marks\", \"tackles\", \"goals\", \"behinds\", \"goal accuracy %\", \"brownlow medal votes\"],[\"2005\", \"sydney\", \"40\", \"5\", \"21\", \"11\", \"32\", \"10\", \"3\", \"1\", \"1\", \"50%\", \"0\"],[\"2006\", \"sydney\", \"9\", \"17\", \"148\", \"57\", \"205\", \"68\", \"53\", \"9\", \"7\", \"56%\", \"0\"],[\"2007\", \"sydney\", \"9\", \"23\", \"333\", \"148\", \"481\", \"150\", \"60\", \"14\", \"5\", \"74%\", \"9\"],[\"2008\", \"sydney\", \"9\", \"11\", \"110\", \"47\", \"157\", \"53\", \"19\", \"6\", \"1\", \"86%\", \"0\"],[\"2009\", \"sydney\", \"9\", \"12\", \"112\", \"70\", \"183\", \"37\", \"16\", \"5\", \"5\", \"50%\", \"0\"],[\"2010\", \"sydney\", \"9\", \"24\", \"339\", \"204\", \"543\", \"128\", \"60\", \"7\", \"9\", \"44%\", \"4\"]]\nQuestion = Is it true that in 2007 , sydney had a goal accuracy percentage of 74% and 481 total disposals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    goal_accuracy_percentages = get_column_by_name(table_data, \"goal accuracy %\")\n    total_disposals = get_column_by_name(table_data, \"total disposals\")\n    for year, goal_accuracy_percentage, total_disposal in zip(years, goal_accuracy_percentages, total_disposals):\n        if year == \"2007\":\n            answer = equal_to(goal_accuracy_percentage, \"74%\") and equal_to(total_disposal, \"481\")\n            break \n    return answer\n\n### END"}
{"id": "c4c57b31-0178-47c9-854c-09da806a1694", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = f.c. united of manchester\ntable_data = [[\"season\",\"leaguecontested\",\"level\",\"leagueposition\",\"avghome attendance 1\",\"fa cup\",\"fa trophy\",\"leading scorer 1\"],[\"2005 - 06\",\"north west counties league division two\",\"10\",\"1st of 19 promoted\",\"3056\",\"n / a\",\"n / a\",\"rory patterson 18\"],[\"2006 - 07\",\"north west counties league division one\",\"9\",\"1st of 22 promoted\",\"2581\",\"n / a\",\"n / a\",\"stuart rudd 38\"],[\"2007 - 08\",\"northern premier league division one north\",\"8\",\"2nd of 18 won playoffs promoted\",\"2086 2\",\"1q\",\"prelim rd\",\"rory patterson 34\"],[\"2008 - 09\",\"northern premier league premier division\",\"7\",\"6th of 22\",\"2152\",\"1q\",\"3q\",\"kyle wilson 21\"],[\"2009 - 10\",\"northern premier league premier division\",\"7\",\"13th of 20\",\"1954 3\",\"4q\",\"3q\",\"phil marsh 10\"],[\"2010 - 11\",\"northern premier league premier division\",\"7\",\"4th of 22 playoffs runner - up\",\"1961 4\",\"r2\",\"3q\",\"michael norton 24\"],[\"2011 - 12\",\"northern premier league premier division\",\"7\",\"6th of 22 playoffs runner - up\",\"1947 5\",\"2q\",\"r1\",\"matthew wolfenden 20\"],[\"2012 - 13\",\"northern premier league premier division\",\"7\",\"3rd of 22 playoffs runner - up\",\"1835 6\",\"4q\",\"2q\",\"matthew wolfenden 19\"],[\"2013 - 14\",\"northern premier league premier division\",\"7\",\"4th of 24\",\"1713\",\"1q\",\"1q next game 19th oct\",\"tom greaves 8\"]]\nQuestion = Is it true that the league contested in 2011 - 12 , and level 7 , is the northern premier league premier division?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    leagues = get_column_by_name(table_data, \"leaguecontested\")\n    levels = get_column_by_name(table_data, \"level\")\n    for season, league, level in zip(seasons, leagues, levels):\n        if equal_to(season, \"2011 - 12\") and equal_to(level, \"7\"):\n            answer = equal_to(league, \"northern premier league premier division\")\n            break \n    return answer\n\n### END"}
{"id": "855948e7-f16b-4a2f-a421-2cbf176e7ebe", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = toronto , grey and bruce railway\ntable_data = [[\"number\", \"name\", \"builder\", \"type\", \"date\", \"works number\"],[\"1\", \"gordon\", \"avonside engine company\", \"4 - 6 - 0\", \"aug 1870\", \"799\"],[\"2\", \"ar mcmaster\", \"avonside engine company\", \"4 - 4 - 0\", \"aug 1870\", \"800\"],[\"3\", \"kincardine\", \"avonside engine company\", \"4 - 4 - 0\", \"september 1870\", \"809\"],[\"4\", \"r walker & sons\", \"avonside engine company\", \"4 - 4 - 0\", \"may 1871\", \"838\"],[\"5\", \"albion\", \"avonside engine company\", \"4 - 4 - 0\", \"july 1871\", \"839\"],[\"6\", \"rice lewis & son\", \"avonside engine company\", \"4 - 4 - 0\", \"mid 1871\", \"840\"],[\"7\", \"caledon\", \"avonside engine company\", \"0 - 6 - 6 - 0 fairlie type\", \"late 1872\", \"862 & 863\"],[\"8\", \"mono\", \"avonside engine company\", \"4 - 6 - 0\", \"late 1871\", \"866\"],[\"9\", \"toronto\", \"baldwin locomotive works\", \"2 - 6 - 0\", \"september 1871\", \"2534\"],[\"10\", \"amaranth\", \"baldwin locomotive works\", \"2 - 6 - 0\", \"september 1871\", \"2538\"],[\"11\", \"holland\", \"avonside engine company\", \"4 - 6 - 0\", \"early 1873\", \"one of 935 - 939\"],[\"12\", \"sydenham\", \"avonside engine company\", \"4 - 6 - 0\", \"early 1873\", \"one of 935 - 939\"],[\"13\", \"artemisia\", \"avonside engine company\", \"4 - 6 - 0\", \"early 1873\", \"one of 935 - 939\"],[\"14\", \"owen sound\", \"avonside engine company\", \"4 - 6 - 0\", \"early 1873\", \"one of 931932933 , or 934\"],[\"15\", \"mount forest\", \"baldwin locomotive works\", \"2 - 8 - 0\", \"february 1874\", \"3524\"],[\"16\", \"orangeville\", \"baldwin locomotive works\", \"2 - 8 - 0\", \"february 1874\", \"3525\"],[\"17\", \"sarawak\", \"baldwin locomotive works\", \"2 - 8 - 0\", \"april 1874\", \"3551\"],[\"18\", \"melancthon\", \"baldwin locomotive works\", \"2 - 8 - 0\", \"april 1874\", \"3552\"],[\"19\", \"howick\", \"baldwin locomotive works\", \"2 - 8 - 0\", \"september 1874\", \"3636\"],[\"20\", \"culross\", \"baldwin locomotive works\", \"2 - 8 - 0\", \"september 1874\", \"3640\"]]\nQuestion = Is it true that mount forest was built in february 1874?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    dates = get_column_by_name(table_data, \"date\")\n    for name, date in zip(names, dates):\n        if name.lower() == \"mount forest\":\n            answer = equal_to(date, \"february 1874\")\n            break \n    return answer\n\n### END"}
{"id": "d0d04682-30fb-4cba-bb1e-f587c6fb5818", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 issf world cup final (rifle and pistol)\ntable_data = [[\"shooter\", \"event\", \"rank points\", \"score points\", \"total\"],[\"zhu qinan ( chn )\", \"wcf 2007\", \"defending champion\", \"defending champion\", \"defending champion\"],[\"abhinav bindra ( ind )\", \"og beijing\", \"olympic gold medalist\", \"olympic gold medalist\", \"olympic gold medalist\"],[\"henri häkkinen ( fin )\", \"og beijing\", \"olympic bronze medalist\", \"olympic bronze medalist\", \"olympic bronze medalist\"],[\"alin george moldoveanu ( rou )\", \"wc munich\", \"15\", \"14\", \"29\"],[\"péter sidi ( hun )\", \"wc rio de janeiro\", \"15\", \"13\", \"28\"],[\"matthew emmons ( usa )\", \"wc beijing\", \"10\", \"14\", \"24\"],[\"cao yifei ( chn )\", \"wc milan\", \"10\", \"11\", \"21\"],[\"gagan narang ( ind )\", \"wc beijing\", \"8\", \"12\", \"20\"],[\"thomas farnik ( aut )\", \"wc munich\", \"8\", \"12\", \"20\"],[\"nemanja mirosavljev ( srb )\", \"wc rio de janeiro\", \"8\", \"11\", \"19\"],[\"artur ayvazyan ( ukr )\", \"wc milan\", \"5\", \"12\", \"17\"]]\nQuestion = Is it true that both wc beijing and wc munich have 8 as the rank points , with 20 as the total?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    rank_points = get_column_by_name(table_data, \"rank points\")\n    totals = get_column_by_name(table_data, \"total\")\n    answer = False\n    for event, rank_point, total in zip(events, rank_points, totals):\n        if (\"wc beijing\" in event.lower() or \"wc munich\" in event.lower()) and equal_to(rank_point, \"8\") and equal_to(total, \"20\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "e535a292-3807-4265-bb76-be367dc6c557", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 u.s. women 's open golf championship\ntable_data = [[\"place\", \"player\", \"country\", \"score\", \"to par\", \"money\"],[\"1\", \"cristie kerr\", \"united states\", \"71 + 72 + 66 + 70 = 279\", \"- 5\", \"560000\"],[\"t2\", \"angela park\", \"brazil\", \"68 + 69 + 74 + 70 = 281\", \"- 3\", \"271022\"],[\"t2\", \"lorena ochoa\", \"mexico\", \"71 + 71 + 68 + 71 = 281\", \"- 3\", \"271022\"],[\"t4\", \"se ri pak\", \"south korea\", \"74 + 72 + 68 + 68 = 282\", \"- 2\", \"130549\"],[\"t4\", \"inbee park\", \"south korea\", \"69 + 73 + 71 + 69 = 282\", \"- 2\", \"130549\"],[\"6\", \"jiyai shin\", \"south korea\", \"70 + 69 + 71 + 74 = 284\", \"e\", \"103581\"],[\"7\", \"jee young lee\", \"south korea\", \"72 + 71 + 71 + 71 = 285\", \"+ 1\", \"93031\"],[\"t8\", \"mi hyun kim\", \"south korea\", \"71 + 75 + 70 + 70 = 286\", \"+ 2\", \"82464\"],[\"t8\", \"jeong jang\", \"south korea\", \"72 + 71 + 70 + 73 = 286\", \"+ 2\", \"82464\"],[\"t10\", \"ai miyazato\", \"japan\", \"73 + 73 + 72 + 69 = 287\", \"+ 3\", \"66177\"],[\"t10\", \"kyeong bae\", \"south korea\", \"74 + 71 + 72 + 70 = 287\", \"+ 3\", \"66177\"],[\"t10\", \"julieta granada\", \"paraguay\", \"70 + 69 + 75 + 73 = 287\", \"+ 3\", \"66177\"],[\"t10\", \"morgan pressel\", \"united states\", \"71 + 70 + 69 + 77 = 287\", \"+ 3\", \"66177\"]]\nQuestion = Is it true that morgan pressel netted 66.177 in 10th place?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    money = get_column_by_name(table_data, \"money\")\n    for player, money in zip(players, money):\n        if player.lower() == \"morgan pressel\":\n            answer = equal_to(int(money), 66177)\n            break \n    return answer\n\n### END"}
{"id": "d3fc86a2-2f6f-44b3-a13d-691e7dbe5120", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"10:00\", \"10:30\"],[\"coronation street\", \"marketplace\", \"little mosque on the prairie\", \"no opportunity wasted\", \"the fifth estate\", \"the national\", \"the national\"],[\"etalk\", \"jeopardy!\", \"private practice\", \"private practice\", \"criminal minds\", \"csi : ny\", \"csi : ny\"],[\"et canada\", \"entertainment tonight\", \"back to you\", \"'til death\", \"bones\", \"life\", \"life\"],[\"wheel of fortune\", \"e2\", \"smallville\", \"smallville\", \"the big picture\", \"the big picture\", \"the big picture\"],[\"friends\", \"access hollywood\", \"america 's next top model\", \"america 's next top model\", \"great movies\", \"great movies\", \"great movies\"],[\"the insider\", \"e! news\", \"kid nation\", \"kid nation\", \"bionic woman\", \"the simple life\", \"sunset tan\"],[\"virginie\", \"l'épicerie\", \"le match des étoiles\", \"le match des étoiles\", \"enquête\", \"le téléjournal\", \"le téléjournal\"],[\"star système\", \"la poule aux oeufs d'or\", \"destinées\", \"destinées\", \"les soeurs elliot\", \"le tva 22 heures\", \"le tva 22 heures\"],[\"loft story\", \"450 , chemin du golf\", \"movie\", \"movie\", \"movie\", \"le journal du soir\", \"le journal du soir\"]]\nQuestion = Is it true that prior to the showing of le journal du soir , there was a movie which started at 9:00?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    column_9 = get_column_by_index(table_data, 4)\n    column_10 = get_column_by_index(table_data, 5)\n    for show_9, show_10 in zip(column_9, column_10):\n        if equal_to(show_9, \"movie\") and equal_to(show_10, \"le journal du soir\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "b8e7c3f7-536b-4cdd-8ed0-a9cf381f95fd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of solar car teams\ntable_data = [[\"year started\", \"number of cars\", \"current car\", \"car\", \"website\"],[\"1998\", \"7\", \"b - 7\", \"77\", \"english\"],[\"1992\", \"7\", \"ã‰clipse 7\", \"92\", \"french english\"],[\"1998\", \"6\", \"esteban vi\", \"55\", \"french english\"],[\"1992\", \"3\", \"isun\", \"66\", \"french english\"],[\"1997\", \"4\", \"phoenix ii\", \"116\", \"english\"],[\"1990\", \"10\", \"midnight sun x\", \"24\", \"english\"],[\"2008\", \"1\", \"arctic sun\", \"none\", \"english\"],[\"1988\", \"11\", \"aurum\", \"100\", \"english\"],[\"1991\", \"6\", \"sunstang\", \"96\", \"english\"],[\"2008\", \"1\", \"raven\", \"none\", \"english\"],[\"2004\", \"4\", \"schulich delta\", \"65\", \"english\"],[\"1989\", \"2\", \"ralos ii\", \"125\", \"english\"],[\"1999\", \"1\", \"xof1\", \"125\", \"english french\"]]\nQuestion = Is it true that the xoft1 car has a number of cars of 1 , and a year started after 1999?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    year_started = get_column_by_name(table_data, \"year started\")\n    number_of_cars = get_column_by_name(table_data, \"number of cars\")\n    current_car = get_column_by_name(table_data, \"current car\")\n    for year, number, car in zip(year_started, number_of_cars, current_car):\n        if car.lower() == \"xof1\":\n            answer = equal_to(number, \"1\") and greater(year, \"1999\")\n            break \n    return answer\n\n### END"}
{"id": "fb648c4c-0341-4f13-9515-ead078b31595", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 big ten conference football season\ntable_data = [[\"bowl game\",\"date\",\"stadium\",\"city\",\"television\",\"conference matchups\",\"payout ( us )\"],[\"insight bowl\",\"december 31 , 2008\",\"sun devil stadium\",\"tempe , arizona\",\"nfl\",\"minnesota vs kansas\",\"1.2 million\"],[\"champs sports bowl\",\"december 27 , 2008\",\"citrus bowl\",\"orlando , florida\",\"espn\",\"wisconsin vs florida state\",\"2.25 million\"],[\"alamo bowl\",\"december 29 , 2008\",\"alamodome\",\"san antonio , texas\",\"espn\",\"northwestern vs missouri\",\"2.2 million\"],[\"outback bowl\",\"january 1 , 2009\",\"raymond james stadium\",\"tampa , florida\",\"espn\",\"iowa vs south carolina\",\"3 million\"],[\"capital one\",\"january 1 , 2009\",\"citrus bowl\",\"orlando , florida\",\"abc\",\"michigan state vs georgia\",\"4.25 million\"],[\"fiesta bowl\",\"january 5 , 2009\",\"university of phoenix stadium\",\"glendale , arizona\",\"fox\",\"ohio state vs texas\",\"17.5 million\"]]\nQuestion = Is it true that michigan state vs south carolina was played in the capital one bowl on january 1 , 2009?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    bowl_games = get_column_by_name(table_data, \"bowl game\")\n    dates = get_column_by_name(table_data, \"date\")\n    matchups = get_column_by_name(table_data, \"conference matchups\")\n    for bowl_game, date, matchup in zip(bowl_games, dates, matchups):\n        if bowl_game.lower() == \"capital one\" and date.lower() == \"january 1 , 2009\":\n            answer = equal_to(matchup, \"michigan state vs south carolina\")\n            break \n    return answer\n\n### END"}
{"id": "b4b4673a-6d6b-4687-a891-f7a865e7fdfb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1970 isle of man tt\ntable_data = [[\"rank\", \"rider\", \"team\", \"speed\", \"time\"],[\"1\", \"chas mortimer\", \"ducati\", \"84.87 mph\", \"2:13.23.4\"],[\"2\", \"john williams\", \"honda\", \"84.80 mph\", \"2:13.29.0\"],[\"3\", \"stan woods\", \"suzuki\", \"84.06 mph\", \"2:14.40.6\"],[\"4\", \"ghunter\", \"ducati\", \"83.94 mph\", \"2:14.52.4\"],[\"5\", \"roy boughley\", \"honda\", \"82.26 mph\", \"2:17.37.6\"],[\"6\", \"raymond ashcroft\", \"suzuki\", \"76.59 mph\", \"2:27.48.8\"],[\"7\", \"tom loughridge\", \"suzuki\", \"76.32 mph\", \"2:28.19.0\"],[\"8\", \"cluton\", \"ducati\", \"72.50 mph\", \"2:36.08.0\"]]\nQuestion = Is it true that tom loughridge is suzuki 's lowest ranked rider?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    riders = get_column_by_name(table_data, \"rider\")\n    teams = get_column_by_name(table_data, \"team\")\n    suzuki_riders = [rider for rider, team in zip(riders, teams) if team.lower() == \"suzuki\"]\n    answer = equal_to(suzuki_riders[-1], \"tom loughridge\")\n    return answer\n\n### END"}
{"id": "6201face-eaf1-4029-82d2-399b9567c0e0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = toronto and nipissing railway\ntable_data = [[\"number\", \"builder\", \"type\", \"date\", \"works number\"],[\"1\", \"avonside engine company\", \"4 - 4 - 0\", \"september 1870\", \"808\"],[\"2\", \"canadian engine & machinery company\", \"4 - 4 - 0\", \"november 1870\", \"83\"],[\"3\", \"canadian engine & machinery company\", \"4 - 4 - 0\", \"december 1870\", \"84\"],[\"4\", \"canadian engine & machinery company\", \"4 - 4 - 0\", \"early 1871\", \"85\"],[\"5\", \"canadian engine & machinery company\", \"4 - 4 - 0\", \"march 1871\", \"86\"],[\"6\", \"canadian engine & machinery company\", \"4 - 4 - 0\", \"may 1871\", \"87\"],[\"7\", \"canadian engine & machinery company\", \"4 - 4 - 0\", \"may 1871\", \"88\"],[\"8\", \"avonside engine company\", \"4 - 6 - 0\", \"december 1871\", \"867\"],[\"9\", \"avonside engine company\", \"0 - 6 - 6 - 0 fairlie\", \"december 1871\", \"864 & 865\"],[\"10\", \"avonside engine company\", \"4 - 6 - 0\", \"early 1873\", \"uncertain but probably one of 931 - 934\"],[\"11\", \"avonside engine company\", \"4 - 6 - 0\", \"1872\", \"uncertain but probably one of 935 - 939\"],[\"12\", \"avonside engine company\", \"4 - 6 - 0\", \"early 1873\", \"uncertain but probably one of 935 - 939\"]]\nQuestion = Is it true that number 2 , canadian engine & machinery company , has a works number of 83?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    numbers = get_column_by_name(table_data, \"number\")\n    builders = get_column_by_name(table_data, \"builder\")\n    works_numbers = get_column_by_name(table_data, \"works number\")\n    for number, builder, works_number in zip(numbers, builders, works_numbers):\n        if number == \"2\" and builder.lower() == \"canadian engine & machinery company\":\n            answer = equal_to(works_number, \"83\")\n            break \n    return answer\n\n### END"}
{"id": "4b2ec732-3ab4-4d85-9d53-b1f7b0c9a425", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1925 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"8.11 (59)\", \"st kilda\", \"8.8 (56)\", \"glenferrie oval\", \"10000\", \"8 august 1925\"],[\"geelong\", \"11.20 (86)\", \"richmond\", \"4.8 (32)\", \"corio oval\", \"13500\", \"8 august 1925\"],[\"fitzroy\", \"17.18 (120)\", \"north melbourne\", \"11.8 (74)\", \"brunswick street oval\", \"7000\", \"8 august 1925\"],[\"south melbourne\", \"13.14 (92)\", \"footscray\", \"12.15 (87)\", \"lake oval\", \"15000\", \"8 august 1925\"],[\"melbourne\", \"7.10 (52)\", \"collingwood\", \"9.11 (65)\", \"mcg\", \"33642\", \"8 august 1925\"],[\"essendon\", \"15.11 (101)\", \"carlton\", \"8.14 (62)\", \"windy hill\", \"10000\", \"8 august 1925\"]]\nQuestion = Is it true that in 8 august 1925 , the away team scored 9.11 (65) with crowd of 33642?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    away_team_scores = get_column_by_name(table_data, \"away team score\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    dates = get_column_by_name(table_data, \"date\")\n    for away_team_score, crowd, date in zip(away_team_scores, crowds, dates):\n        if date == \"8 august 1925\" and away_team_score == \"9.11 (65)\" and crowd == \"33642\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "65d0755f-8c34-4aa8-8038-43427af036d3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 malaysian grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"michael schumacher\", \"ferrari\", \"55\", \"1:47:34.801\", \"1\"],[\"rubens barrichello\", \"ferrari\", \"55\", \"+ 23.660\", \"2\"],[\"david coulthard\", \"mclaren - mercedes\", \"55\", \"+ 28.555\", \"8\"],[\"heinz - harald frentzen\", \"jordan - honda\", \"55\", \"+ 46.543\", \"9\"],[\"ralf schumacher\", \"williams - bmw\", \"55\", \"+ 48.233\", \"3\"],[\"mika häkkinen\", \"mclaren - mercedes\", \"55\", \"+ 48.606\", \"4\"],[\"jos verstappen\", \"arrows - asiatech\", \"55\", \"+ 1:21.560\", \"18\"],[\"jarno trulli\", \"jordan - honda\", \"54\", \"+ 1 lap\", \"5\"],[\"jean alesi\", \"prost - acer\", \"54\", \"+ 1 lap\", \"13\"],[\"luciano burti\", \"jaguar - cosworth\", \"54\", \"+ 1 lap\", \"15\"],[\"jenson button\", \"benetton - renault\", \"53\", \"+ 2 laps\", \"17\"],[\"gastón mazzacane\", \"prost - acer\", \"53\", \"+ 2 laps\", \"19\"],[\"fernando alonso\", \"minardi - european\", \"52\", \"+ 3 laps\", \"21\"],[\"tarso marques\", \"minardi - european\", \"51\", \"+ 4 laps\", \"20\"],[\"giancarlo fisichella\", \"benetton - renault\", \"31\", \"fuel pressure\", \"16\"],[\"jacques villeneuve\", \"bar - honda\", \"3\", \"spun off\", \"7\"],[\"nick heidfeld\", \"sauber - petronas\", \"3\", \"spun off\", \"11\"],[\"enrique bernoldi\", \"arrows - asiatech\", \"3\", \"spun off\", \"22\"],[\"juan pablo montoya\", \"williams - bmw\", \"3\", \"spun off\", \"6\"],[\"eddie irvine\", \"jaguar - cosworth\", \"3\", \"water leak\", \"12\"],[\"olivier panis\", \"bar - honda\", \"1\", \"oil leak\", \"10\"],[\"kimi räikkönen\", \"sauber - petronas\", \"0\", \"driveshaft\", \"14\"]]\nQuestion = Is it true that luciano burti drove a jaguar , and completed the most laps out of all the drivers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef get_max_value(lst):\n    return max(lst)\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    constructors = get_column_by_name(table_data, \"constructor\")\n    laps = list(map(int, get_column_by_name(table_data, \"laps\")))\n    max_laps = get_max_value(laps)\n    for driver, constructor, lap in zip(drivers, constructors, laps):\n        if driver.lower() == \"luciano burti\" and constructor.lower() == \"jaguar - cosworth\":\n            answer = lap == max_laps\n            break\n    return answer\n\n### END"}
{"id": "5923cd42-6c6f-487b-a589-088a0e1c3653", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date\", \"round\", \"opponent\", \"venue\", \"result\", \"attendance\"],[\"23 january 1999\", \"r3\", \"stenhousemuir\", \"h\", \"2 - 0\", \"37759\"],[\"14 february 1999\", \"r4\", \"hamilton academical\", \"a\", \"6 - 0\", \"7339\"],[\"6 march 1999\", \"qf\", \"falkirk\", \"h\", \"2 - 1\", \"39250\"],[\"11 april 1999\", \"sf\", \"st johnstone\", \"n\", \"4 - 0\", \"20664\"],[\"29 may 1999\", \"f\", \"celtic\", \"n\", \"1 - 0\", \"52670\"]]\nQuestion = Is it true that the average attendance for the n venues was 36667?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef average(numbers):\n    return sum(numbers) / len(numbers)\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"venue\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    n_venues_attendances = [int(attendance) for venue, attendance in zip(venues, attendances) if venue.lower() == 'n']\n    avg_attendance = average(n_venues_attendances)\n    answer = equal_to(round(avg_attendance), 36667)\n    return answer\n\n### END"}
{"id": "cdf76b94-7f63-4758-a08b-ad630debd69c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"name\", \"latitude\", \"longitude\", \"diameter (km)\", \"year named\", \"name origin\"],[\"fornax rupes\", \"30.3n\", \"201.1e\", \"729.0\", \"1985\", \"roman goddess of hearth and baking of bread\"],[\"gabie rupes\", \"67.5n\", \"109.9e\", \"350.0\", \"1985\", \"lithuanian goddess of fire and hearth\"],[\"hestia rupes\", \"6.0n\", \"71.1e\", \"588.0\", \"1982\", \"greek hearth goddess\"],[\"uorsar rupes\", \"76.8n\", \"341.2e\", \"820.0\", \"1985\", \"adygan (caucasus) goddess of hearth\"],[\"ut rupes\", \"55.3n\", \"321.9e\", \"676.0\", \"1982\", \"siberian , turco - tatar goddess of the hearth fire\"],[\"vaidilute rupes\", \"43.5s\", \"22.0e\", \"2000.0\", \"1997\", \"lithuanian hearth goddess\"],[\"vesta rupes\", \"58.3n\", \"323.9e\", \"788.0\", \"1982\", \"roman hearth goddess\"]]\nQuestion = Is it true that the highest diameter is 2000 when the latitude is 43.5s?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    latitudes = get_column_by_name(table_data, \"latitude\")\n    diameters = get_column_by_name(table_data, \"diameter (km)\")\n    for latitude, diameter in zip(latitudes, diameters):\n        if latitude.lower() == \"43.5s\":\n            answer = equal_to(float(diameter), 2000.0)\n            break \n    return answer\n\n### END"}
{"id": "40d2e75a-a3e9-448c-b60c-8955d1104125", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the sunday night project\ntable_data = [[\"episode number\", \"air date\", \"guest host\", \"musical guest (song performed)\", \"who knows the most about the guest host panelists\", \"coat of cash wearing celebrity\"],[\"1\", \"8 june 2008\", \"katie price and peter andre\", \"the courteeners ( no you didn't , no you don't )\", \"cerys matthews and michelle dewberry\", \"andy abraham\"],[\"2\", \"15 june 2008\", \"pamela anderson\", \"five o'clock heroes feat agyness deyn ( who )\", \"paul daniels and danny dyer\", \"ricky whittle\"],[\"3\", \"22 june 2008\", \"mark ronson\", \"nerd ( everyone nose )\", \"pharrell williams and miquita oliver\", \"stephanie mcmichael\"],[\"4\", \"29 june 2008\", \"ronan keating , stephen gately , and shane lynch\", \"estelle ( no substitute love )\", \"lulu and estelle\", \"carly stratton\"],[\"5\", \"6 july 2008\", \"david hasselhoff\", \"the feeling ( turn it up )\", \"scott mills and sally lindsay\", \"sylvia barrie\"],[\"6\", \"13 july 2008\", \"barbara windsor\", \"the ting tings ( shut up and let me go )\", \"patsy palmer and anna karen\", \"jennifer clark\"]]\nQuestion = Is it true that jennifer clark was the coat of celeb when scott mills and sally lindsay apppeared?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    panelists = get_column_by_name(table_data, \"who knows the most about the guest host panelists\")\n    celebrities = get_column_by_name(table_data, \"coat of cash wearing celebrity\")\n    for panelist, celebrity in zip(panelists, celebrities):\n        if \"scott mills and sally lindsay\" in panelist.lower():\n            answer = equal_to(celebrity.lower(), \"jennifer clark\")\n            break \n    return answer\n\n### END"}
{"id": "54afae92-9dac-4234-8f85-be56861968ae", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1994 nhl entry draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"261\", \"per gustafsson\", \"defence\", \"sweden\", \"florida panthers\", \"hv71 (sweden)\"],[\"262\", \"jeremy stevenson\", \"left wing\", \"united states\", \"mighty ducks of anaheim\", \"sault ste marie greyhounds (ohl)\"],[\"263\", \"rob mara\", \"left wing\", \"united states\", \"chicago blackhawks\", \"belmont hill high school (hs - massachusetts)\"],[\"264\", \"jason issel\", \"left wing\", \"canada\", \"winnipeg jets\", \"prince albert raiders (whl)\"],[\"265\", \"steve nimigon\", \"left wing\", \"canada\", \"hartford whalers\", \"niagara falls thunder (ohl)\"],[\"266\", \"ladislav benysek\", \"defence\", \"czech republic\", \"edmonton oilers\", \"olomouc hc (czech republic)\"],[\"267\", \"jamie butt\", \"left wing\", \"canada\", \"ny rangers\", \"tacoma rockets (whl)\"],[\"268\", \"brian white\", \"defence\", \"united states\", \"tampa bay lightning\", \"arlington catholic high school (hs - massachusetts)\"],[\"269\", \"mike hanson\", \"centre\", \"united states\", \"new jersey devils\", \"minot high school (hs - north dakota)\"],[\"270\", \"jan lipiansky\", \"forward\", \"slovakia\", \"philadelphia flyers\", \"slovan bratislava (slovakia)\"],[\"271\", \"david beauregard\", \"left wing\", \"canada\", \"san jose sharks\", \"st hyacinthe lasers (qmjhl)\"],[\"272\", \"dick tarnstrom\", \"defence\", \"sweden\", \"new york islanders\", \"aik (sweden)\"],[\"273\", \"robert longpre\", \"centre\", \"canada\", \"vancouver canucks\", \"medicine hat tigers (whl)\"],[\"274\", \"antti tormanen\", \"left wing\", \"finland\", \"ottawa senators\", \"jokerit (finland)\"],[\"275\", \"sergei tertyshny\", \"defence\", \"russia\", \"washington capitals\", \"chelyabinsk traktor (russia)\"],[\"276\", \"scott fankhouser\", \"goaltender\", \"united states\", \"st louis blues\", \"university of massachusetts lowell (ncaa)\"],[\"277\", \"shayne wright\", \"defence\", \"canada\", \"buffalo sabres\", \"owen sound platers (ohl)\"],[\"278\", \"ross parsons\", \"defence\", \"canada\", \"montreal canadiens\", \"regina pats (whl)\"],[\"279\", \"pavel torgayev\", \"centre\", \"russia\", \"calgary flames\", \"tps (finland)\"],[\"280\", \"chris szysky\", \"right wing\", \"canada\", \"dallas stars\", \"swift current broncos (whl)\"],[\"281\", \"andrei yakhanov\", \"defence\", \"russia\", \"boston bruins\", \"ufa salavat yulayev (russia)\"],[\"282\", \"doug nolan\", \"defence\", \"united states\", \"toronto maple leafs\", \"catholic memorial high school (hs - massachusetts)\"],[\"283\", \"toivo suursoo\", \"left wing\", \"estonia\", \"detroit red wings\", \"krylya sovetov moscow (russia)\"],[\"284\", \"brian leitza\", \"goaltender\", \"united states\", \"pittsburgh penguins\", \"sioux city musketeers (ushl)\"],[\"285\", \"steven low\", \"defence\", \"canada\", \"quebec nordiques\", \"sherbrooke faucons (qmjhl)\"],[\"286\", \"kim johnsson\", \"defence\", \"sweden\", \"new york rangers\", \"malmã if (sweden)\"]]\nQuestion = Is it true that doug nolan played for the catholic memorial high school in massachusetts?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    teams = get_column_by_name(table_data, \"college / junior / club team\")\n    answer = False\n    for player, team in zip(players, teams):\n        if \"doug nolan\" in player.lower() and \"catholic memorial high school (hs - massachusetts)\" in team.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "b59a5be6-237e-4c9b-81a2-76b96d1dd570", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 - 02 prva hnl\ntable_data = [[\"team\", \"manager\", \"home city\", \"stadium\", \"capacity\"],[\"cibalia\", \"davor čop\", \"vinkovci\", \"stadion hnk cibalia\", \"9920\"],[\"čakovec\", \"rajko magić\", \"čakovec\", \"stadion src mladost\", \"8000\"],[\"dinamo zagreb\", \"ilija lončarević\", \"zagreb\", \"stadion maksimir\", \"37168\"],[\"hajduk split\", \"nenad gračan\", \"split\", \"gradski stadion u poljudu\", \"35000\"],[\"hrvatski dragovoljac\", \"luka bonačić\", \"zagreb\", \"stadion nšc stjepan spajić\", \"5000\"],[\"kamen ingrad\", \"tomislav radić\", \"velika\", \"stadion kamen ingrada\", \"8000\"],[\"marsonia\", \"milo nižetić\", \"slavonski brod\", \"gradski stadion uz savu\", \"10000\"],[\"osijek\", \"vlado bilić\", \"osijek\", \"stadion gradski vrt\", \"19500\"],[\"pomorac\", \"predrag stilinović\", \"kostrena\", \"stadion žuknica\", \"3000\"],[\"rijeka\", \"ivan katalinić\", \"rijeka\", \"stadion na kantridi\", \"10275\"],[\"slaven belupo\", \"dražen besek\", \"koprivnica\", \"gradski stadion u koprivnici\", \"4000\"],[\"šibenik\", \"vjekoslav lokica\", \"šibenik\", \"stadion šubićevac\", \"8000\"],[\"tšk topolovac\", \"ivica vidović\", \"topolovac\", \"gradski stadion sisak\", \"8000\"],[\"varteks\", \"branko janžek\", \"varaždin\", \"stadion nk varteks\", \"10800\"],[\"zadar\", \"stanko mršić\", \"zadar\", \"stadion stanovi\", \"5860\"],[\"nk zagreb\", \"zlatko kranjčar\", \"zagreb\", \"stadion u kranjčevićevoj ulici\", \"8850\"]]\nQuestion = Is it true that the stadion src mladost is located in cakovec?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    cities = get_column_by_name(table_data, \"home city\")\n    answer = False\n    for stadium, city in zip(stadiums, cities):\n        if \"stadion src mladost\" in stadium.lower() and \"čakovec\" in city.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "9da5ee43-86c0-4850-b5cd-8a4a5eea8476", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = john mcenroe career statistics\ntable_data = [[\"outcome\", \"year\", \"championship\", \"surface\", \"partner\", \"opponents in the final\", \"score in the final\"],[\"winner\", \"2007\", \"french open\", \"clay\", \"järryd\", \"fitzgerald vilas\", \"6 - 1 , 6 - 2\"],[\"winner\", \"2008\", \"french open\", \"clay\", \"järryd\", \"bahrami leconte\", \"6 - 4 , 7 - 6 2\"],[\"winner\", \"2009\", \"french open\", \"clay\", \"järryd\", \"bahrami leconte\", \"7 - 6 2 , 6 - 1\"],[\"winner\", \"2010\", \"french open\", \"clay\", \"gómez\", \"bahrami leconte\", \"6 - 1 , 6 - 1\"],[\"runner - up\", \"2011\", \"french open\", \"clay\", \"gómez\", \"forget leconte\", \"6 - 3 , 5 - 7 ,\"]]\nQuestion = Is it true that in 2009 , one of the opponents in the french open was bahrami leconte and he won with a final score of 7 - 6 2 , 6 - 1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    opponents = get_column_by_name(table_data, \"opponents in the final\")\n    scores = get_column_by_name(table_data, \"score in the final\")\n    for year, opponent, score in zip(years, opponents, scores):\n        if year == \"2009\" and opponent.lower() == \"bahrami leconte\" and score == \"7 - 6 2 , 6 - 1\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "3f13ec71-62a3-44a4-a386-3b901e48840a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1965 detroit lions season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 19 , 1965\", \"los angeles rams\", \"w 20 - 0\", \"46941\"],[\"2\", \"september 26 , 1965\", \"minnesota vikings\", \"w 31 - 29\", \"46826\"],[\"3\", \"october 3 , 1965\", \"washington redskins\", \"w 14 - 10\", \"52627\"],[\"4\", \"october 10 , 1965\", \"baltimore colts\", \"l 31 - 7\", \"60238\"],[\"5\", \"october 17 , 1965\", \"green bay packers\", \"l 31 - 21\", \"56712\"],[\"6\", \"october 24 , 1965\", \"chicago bears\", \"l 38 - 10\", \"45658\"],[\"7\", \"october 31 , 1965\", \"los angeles rams\", \"w 31 - 7\", \"35137\"],[\"8\", \"november 7 , 1965\", \"green bay packers\", \"w 12 - 7\", \"50852\"],[\"9\", \"november 14 , 1965\", \"san francisco 49ers\", \"l 27 - 21\", \"54534\"],[\"10\", \"november 21 , 1965\", \"chicago bears\", \"l 17 - 10\", \"51499\"],[\"11\", \"november 25 , 1965\", \"baltimore colts\", \"t 24 - 24\", \"55036\"],[\"12\", \"december 5 , 1965\", \"san francisco 49ers\", \"l 17 - 14\", \"38463\"],[\"13\", \"december 12 , 1965\", \"minnesota vikings\", \"l 29 - 7\", \"45420\"],[\"14\", \"december 19 , 1965\", \"philadelphia eagles\", \"w 35 - 28\", \"56718\"]]\nQuestion = Is it true that the team face the baltimore colts as it opponent on november 25 , 1965?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    answer = False\n    for date, opponent in zip(dates, opponents):\n        if \"november 25 , 1965\" in date.lower() and \"baltimore colts\" in opponent.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "c7a096ba-fe33-44db-82c6-d8819491627b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 seattle supersonics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"47\", \"february 2\", \"new york\", \"w 86 - 85 (ot)\", \"kevin durant (21)\", \"nick collison (12)\", \"earl watson (8)\", \"keyarena 12783\", \"12 - 35\"],[\"48\", \"february 4\", \"chicago\", \"l 108 - 118 (ot)\", \"wally szczerbiak (21)\", \"nick collison (9)\", \"earl watson (8)\", \"keyarena 10935\", \"12 - 36\"],[\"49\", \"february 6\", \"sacramento\", \"w 105 - 92 (ot)\", \"earl watson (23)\", \"earl watson chris wilcox (10)\", \"earl watson (10)\", \"arco arena 13136\", \"13 - 36\"],[\"50\", \"february 8\", \"phoenix\", \"l 99 - 103 (ot)\", \"chris wilcox (22)\", \"chris wilcox (15)\", \"earl watson (5)\", \"us airways center 18422\", \"13 - 37\"],[\"51\", \"february 13\", \"utah\", \"l 93 - 112 (ot)\", \"kevin durant (19)\", \"kurt thomas (13)\", \"earl watson (14)\", \"keyarena 10618\", \"13 - 38\"],[\"52\", \"february 19\", \"memphis\", \"w 108 - 101 (ot)\", \"earl watson (26)\", \"nick collison jeff green (9)\", \"earl watson (9)\", \"keyarena 11391\", \"14 - 38\"],[\"53\", \"february 21\", \"portland\", \"l 88 - 92 (ot)\", \"kevin durant (20)\", \"nick collison (14)\", \"earl watson (9)\", \"rose garden 20168\", \"14 - 39\"],[\"54\", \"february 22\", \"portland\", \"w 99 - 87 (ot)\", \"kevin durant (17)\", \"jeff green (9)\", \"earl watson (4)\", \"keyarena 16640\", \"15 - 39\"],[\"55\", \"february 24\", \"l a lakers\", \"l 91 - 111 (ot)\", \"mickaël gelabale (21)\", \"johan petro (10)\", \"earl watson (8)\", \"keyarena 17072\", \"15 - 40\"],[\"56\", \"february 26\", \"golden state\", \"l 99 - 105 (ot)\", \"kevin durant jeff green (21)\", \"nick collison (13)\", \"luke ridnour (15)\", \"oracle arena 19412\", \"15 - 41\"],[\"57\", \"february 27\", \"denver\", \"l 96 - 138 (ot)\", \"kevin durant mickaël gelabale (16)\", \"johan petro (8)\", \"mickaël gelabale (6)\", \"keyarena 13627\", \"15 - 42\"]]\nQuestion = Is it true that mickaël gelabale scored 21 more points than johan petro against the la lakers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef parse_points(points_str):\n    return int(points_str.split(' ')[-1][1:-1])\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    high_points = get_column_by_name(table_data, \"high points\")\n    high_rebounds = get_column_by_name(table_data, \"high rebounds\")\n    for team, points, rebounds in zip(teams, high_points, high_rebounds):\n        if team.lower() == \"l a lakers\":\n            gelabale_points = parse_points(points) if \"mickaël gelabale\" in points.lower() else 0\n            petro_points = parse_points(rebounds) if \"johan petro\" in rebounds.lower() else 0\n            answer = equal_to(gelabale_points, petro_points + 21)\n            break \n    return answer\n\n### END"}
{"id": "2d5d74c2-de76-44a7-a4e7-1c7bd16211d4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = ghost whisperer (season 3)\ntable_data = [[\"no in series\",\"no in season\",\"title\",\"directed by\",\"written by\", \"original air date\",\"us viewers (millions)\"],[\"45\", \"1\", \"the underneath\", \"john gray\", \"john gray\", \"september 28, 2007\", \"8.72\"],[\"46\", \"2\", \"don't try this at home\", \"ian sander\", \"teddy tenenbaum & laurie mccarthy\", \"october 5, 2007\", \"8.91\"],[\"47\", \"3\", \"haunted hero\", \"eric laneuville\", \"breen frazier & karl schaefer\", \"october 12, 2007\", \"8.90\"],[\"48\", \"4\", \"no safe place\", \"peter o'fallon\", \"jeannine renshaw\", \"october 19, 2007\", \"8.95\"],[\"49\", \"5\", \"weight of what was\", \"gloria muzio\", \"pk simonds\", \"october 26, 2007\", \"9.99\"],[\"50\", \"6\", \"double exposure\", \"eric laneuville\", \"laurie mccarthy\", \"november 2, 2007\", \"9.18\"],[\"51\", \"7\", \"unhappy medium\", \"frederick eo toye\", \"breen frazier\", \"november 9, 2007\", \"9.85\"],[\"52\", \"8\", \"bad blood\", \"peter werner\", \"teddy tenenbaum\", \"november 16, 2007\", \"9.56\"],[\"53\", \"9\", \"all ghosts lead to grandview\", \"frederick eo toye\", \"pk simonds & laurie mccarthy\", \"november 23, 2007\", \"9.98\"],[\"54\", \"10\", \"holiday spirit\", \"steven robman\", \"jeannine renshaw\", \"december 14, 2007\", \"9.80\"],[\"55\", \"11\", \"slam (aka slambook)\", \"mark rosman\", \"karl schaefer & daniel sinclair\", \"january 11, 2008\", \"9.86\"],[\"56\", \"12\", \"first do no harm\", \"ian sander\", \"john gray\", \"january 18, 2008\", \"9.91\"],[\"57\", \"13\", \"home but not alone\", \"eric laneuville\", \"pk simonds & laurie mccarthy\", \"april 4, 2008\", \"9.06\"],[\"58\", \"14\", \"the grave sitter\", \"frederick eo toye\", \"john gray\", \"april 11, 2008\", \"8.55\"],[\"59\", \"15\", \"horror show\", \"ian sander\", \"jeannine renshaw\", \"april 25, 2008\", \"8.98\"],[\"60\", \"16\", \"deadbeat dads\", \"gloria muzio\", \"mark b perry\", \"may 2, 2008\", \"9.21\"],[\"61\", \"17\", \"stranglehold (part 1)\", \"eric laneuville\", \"laurie mccarthy & pk simonds\", \"may 9, 2008\", \"8.78\"]]\nQuestion = Is it true that breen frazier wrote unhappy medium?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    writers = get_column_by_name(table_data, \"written by\")\n    answer = False\n    for title, writer in zip(titles, writers):\n        if \"unhappy medium\" in title.lower():\n            if \"breen frazier\" in writer.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "532815a8-f0e4-4ce8-8063-b6acedb945c0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date\", \"visitor\", \"score\", \"home\", \"record\"],[\"february 2\", \"vancouver\", \"5 - 1\", \"california\", \"15 - 28 - 5\"],[\"february 4\", \"chicago\", \"6 - 2\", \"vancouver\", \"15 - 29 - 5\"],[\"february 6\", \"montreal\", \"4 - 2\", \"vancouver\", \"15 - 30 - 5\"],[\"february 8\", \"philadelphia\", \"3 - 1\", \"vancouver\", \"15 - 31 - 5\"],[\"february 10\", \"vancouver\", \"1 - 9\", \"boston\", \"15 - 32 - 5\"],[\"february 12\", \"vancouver\", \"4 - 5\", \"st louis\", \"15 - 33 - 5\"],[\"february 13\", \"vancouver\", \"4 - 6\", \"pittsburgh\", \"15 - 34 - 5\"],[\"february 15\", \"new york\", \"5 - 1\", \"vancouver\", \"15 - 35 - 5\"],[\"february 18\", \"st louis\", \"2 - 5\", \"vancouver\", \"16 - 35 - 5\"],[\"february 19\", \"vancouver\", \"3 - 5\", \"los angeles\", \"16 - 36 - 5\"],[\"february 22\", \"boston\", \"4 - 3\", \"vancouver\", \"16 - 37 - 5\"],[\"february 24\", \"vancouver\", \"0 - 2\", \"detroit\", \"16 - 38 - 5\"],[\"february 26\", \"vancouver\", \"1 - 7\", \"toronto\", \"16 - 39 - 5\"],[\"february 27\", \"vancouver\", \"3 - 3\", \"chicago\", \"16 - 39 - 6\"],[\"february 29\", \"vancouver\", \"2 - 8\", \"detroit\", \"16 - 40 - 6\"]]\nQuestion = Is it true that the score on february 29 was 2 - 8?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    scores = get_column_by_name(table_data, \"score\")\n    for date, score in zip(dates, scores):\n        if date.lower() == \"february 29\":\n            answer = equal_to(score, \"2 - 8\")\n            break \n    return answer\n\n### END"}
{"id": "5f5dc9cb-0086-4704-984e-ccfc48879b1b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rivers state\ntable_data = [[\"lga name\", \"area (km 2 )\", \"census 2006 population\", \"administrative capital\", \"postal code\"],[\"port harcourt\", \"109\", \"541115\", \"port harcourt\", \"500\"],[\"obio - akpor\", \"260\", \"464789\", \"rumuodumaya\", \"500\"],[\"okrika\", \"222\", \"222026\", \"okrika\", \"500\"],[\"ogu / bolo\", \"89\", \"74683\", \"ogu\", \"500\"],[\"eleme\", \"138\", \"190884\", \"eleme\", \"501\"],[\"tai\", \"159\", \"117797\", \"sakpenwa\", \"501\"],[\"gokana\", \"126\", \"228828\", \"kpor\", \"501\"],[\"khana\", \"560\", \"294217\", \"bori\", \"502\"],[\"oyigbo\", \"248\", \"122687\", \"afam\", \"502\"],[\"opobo / nkoro\", \"130\", \"151511\", \"opobo town\", \"503\"],[\"andoni\", \"233\", \"211009\", \"ngo\", \"503\"],[\"bonny\", \"642\", \"215358\", \"bonny\", \"503\"],[\"degema\", \"1011\", \"249773\", \"degema\", \"504\"],[\"asari - toru\", \"113\", \"220100\", \"buguma\", \"504\"],[\"akuku - toru\", \"1443\", \"156006\", \"abonnema\", \"504\"],[\"abua / odual\", \"704\", \"282988\", \"abua\", \"510\"],[\"ahoada west\", \"403\", \"249425\", \"akinima\", \"510\"],[\"ahoada east\", \"341\", \"166747\", \"ahoada\", \"510\"],[\"ogba / egbema / ndoni\", \"969\", \"284010\", \"omuku\", \"510\"],[\"emohua\", \"831\", \"201901\", \"emohua\", \"511\"],[\"ikwerre\", \"655\", \"189726\", \"isiokpo\", \"511\"],[\"etche\", \"805\", \"249454\", \"okehi\", \"512\"]]\nQuestion = Is it true that the 2006 census population for opobo / nkoro is 151511?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    lga_names = get_column_by_name(table_data, \"lga name\")\n    populations = get_column_by_name(table_data, \"census 2006 population\")\n    for lga_name, population in zip(lga_names, populations):\n        if lga_name.lower() == \"opobo / nkoro\":\n            answer = equal_to(population, \"151511\")\n            break \n    return answer\n\n### END"}
{"id": "f0fa036d-ec2c-40f8-bbcb-2614e2d8bab7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = florida collegiate summer league\ntable_data = [[\"player\",\"fcsl team\",\"years played\",\"year drafted\",\"round\",\"mlb team\"],[\"mike mcclendon\",\"winter park\",\"2006\",\"2006\",\"10th\",\"milwaukee brewers\"],[\"corey brown\",\"orlando shockers\",\"2006\",\"2007\",\"1st\",\"oakland athletics\"],[\"jonathan lucroy\",\"sanford\",\"2005 06\",\"2007\",\"3rd\",\"milwaukee brewers\"],[\"alan farina\",\"orlando shockers\",\"2005\",\"2007\",\"3rd\",\"toronto blue jays\"],[\"jonathan holt\",\"leesburg\",\"2006 - 2007\",\"2007\",\"5th\",\"cleveland indians\"],[\"dee gordon\",\"belleview\",\"2008\",\"2008\",\"4th\",\"los angeles dodgers\"],[\"mycal jones\",\"leesburg\",\"2007 - 2008\",\"2009\",\"4th\",\"atlanta braves\"],[\"kent matthes\",\"winter pines\",\"2008\",\"2009\",\"4th\",\"colorado rockies\"],[\"thomas berryhill\",\"deland\",\"2008\",\"2009\",\"5th\",\"atlanta braves\"],[\"jimmy nelson\",\"deland\",\"2009\",\"2010\",\"2nd\",\"milwaukee brewers\"],[\"dante bichette jr\",\"winter park\",\"2011\",\"2011\",\"1st\",\"new york yankees\"],[\"peter o'brien\",\"deland\",\"2010\",\"2012\",\"2nd\",\"new york yankees\"],[\"brandon thomas\",\"sanford\",\"2010\",\"2012\",\"4th\",\"pittsburgh pirates\"],[\"tucker donahue\",\"winter park\",\"2010\",\"2012\",\"4th\",\"toronto blue jays\"]]\nQuestion = Is it true that tucker donahue 's mlb team is the toronto blue jays and his fcsl team is winter park?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    fcsl_teams = get_column_by_name(table_data, \"fcsl team\")\n    mlb_teams = get_column_by_name(table_data, \"mlb team\")\n    for player, fcsl_team, mlb_team in zip(players, fcsl_teams, mlb_teams):\n        if equal_to(player, \"tucker donahue\"):\n            answer = equal_to(fcsl_team, \"winter park\") and equal_to(mlb_team, \"toronto blue jays\")\n            break \n    return answer\n\n### END"}
{"id": "ed3fcbe7-4a26-4c8e-a1e9-d415581cd7e7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1989 pga championship\ntable_data = [[\"player\", \"country\", \"year (s) won\", \"total\", \"to par\", \"finish\"],[\"jeff sluman\", \"united states\", \"1988\", \"284\", \"- 4\", \"t24\"],[\"jack nicklaus\", \"united states\", \"1963 , 1971 , 1973 1975 , 1980\", \"285\", \"- 3\", \"t27\"],[\"larry nelson\", \"united states\", \"1981 , 1987\", \"288\", \"e\", \"t46\"],[\"raymond floyd\", \"united states\", \"1969 , 1982\", \"288\", \"e\", \"t46\"],[\"hubert green\", \"united states\", \"1985\", \"295\", \"+ 7\", \"66\"],[\"dave stockton\", \"united states\", \"1970 , 1976\", \"297\", \"+ 9\", \"68\"]]\nQuestion = Is it true that the years won of 1970 and 1976 were won with a finish of 68?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years_won = get_column_by_name(table_data, \"year (s) won\")\n    finishes = get_column_by_name(table_data, \"finish\")\n    for year, finish in zip(years_won, finishes):\n        if \"1970\" in year and \"1976\" in year:\n            answer = equal_to(finish, \"68\")\n            break \n    return answer\n\n### END"}
{"id": "25b857a1-61fc-4ff1-8107-058010233225", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = westinghouse broadcasting\ntable_data = [[\"city of license / market\", \"station\", \"channel tv ( dt )\", \"years owned\", \"current affiliation\"],[\"san francisco - oakland - san jose\", \"kpix\", \"5 (29)\", \"1954 - 1995\", \"cbs owned - and - operated ( o&o )\"],[\"baltimore\", \"wjz - tv\", \"13 (13)\", \"1957 - 1995\", \"cbs owned - and - operated (o&o)\"],[\"boston\", \"wbz - tv\", \"4 (30)\", \"1948 - 1995\", \"cbs owned - and - operated (o&o)\"],[\"charlotte\", \"wpcq - tv (now wcnc - tv )\", \"36 (22)\", \"1980 - 1985\", \"nbc affiliate owned by belo corporation\"],[\"cleveland\", \"kyw - tv (now wkyc - tv )\", \"3 (17)\", \"1956 - 1965\", \"nbc affiliate owned by gannett company\"],[\"philadelphia\", \"wptz / kyw - tv\", \"3 (26)\", \"1953 - 1956 1965 - 1995\", \"cbs owned - and - operated (o&o)\"]]\nQuestion = Is it true that kpix was owned between 1954 - 1955?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef year_in_range(year, range_str):\n    start_year, end_year = map(int, range_str.split(' - '))\n    return start_year <= year <= end_year\n\ndef solution(table_data):\n    stations = get_column_by_name(table_data, \"station\")\n    years_owned = get_column_by_name(table_data, \"years owned\")\n    for station, year_owned in zip(stations, years_owned):\n        if station.lower() == \"kpix\":\n            answer = year_in_range(1955, year_owned)\n            break \n    return answer\n\n### END"}
{"id": "74d51a3f-135f-41f4-b4a1-b9d874f6a757", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1974 formula one season\ntable_data = [[\"race\",\"circuit\",\"date\",\"pole position\",\"fastest lap\",\"winning driver\",\"constructor\",\"tyre\",\"report\"],[\"argentine grand prix\",\"buenos aires\",\"13 january\",\"ronnie peterson\",\"clay regazzoni\",\"denny hulme\",\"mclaren - ford\",\"g\",\"report\"],[\"brazilian grand prix\",\"interlagos\",\"27 january\",\"emerson fittipaldi\",\"clay regazzoni\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"south african grand prix\",\"kyalami\",\"30 march\",\"niki lauda\",\"carlos reutemann\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"],[\"spanish grand prix\",\"jarama\",\"28 april\",\"niki lauda\",\"niki lauda\",\"niki lauda\",\"ferrari\",\"g\",\"report\"],[\"belgian grand prix\",\"nivelles - baulers\",\"12 may\",\"clay regazzoni\",\"denny hulme\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"monaco grand prix\",\"monaco\",\"26 may\",\"niki lauda\",\"ronnie peterson\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"swedish grand prix\",\"anderstorp\",\"9 june\",\"patrick depailler\",\"patrick depailler\",\"jody scheckter\",\"tyrrell - ford\",\"g\",\"report\"],[\"dutch grand prix\",\"zandvoort\",\"23 june\",\"niki lauda\",\"ronnie peterson\",\"niki lauda\",\"ferrari\",\"g\",\"report\"],[\"french grand prix\",\"dijon - prenois\",\"7 july\",\"niki lauda\",\"jody scheckter\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"british grand prix\",\"brands hatch\",\"20 july\",\"niki lauda\",\"niki lauda\",\"jody scheckter\",\"tyrrell - ford\",\"g\",\"report\"],[\"german grand prix\",\"nürburgring\",\"4 august\",\"niki lauda\",\"jody scheckter\",\"clay regazzoni\",\"ferrari\",\"g\",\"report\"],[\"austrian grand prix\",\"österreichring\",\"18 august\",\"niki lauda\",\"clay regazzoni\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"],[\"italian grand prix\",\"monza\",\"8 september\",\"niki lauda\",\"carlos pace\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"canadian grand prix\",\"mosport park\",\"22 september\",\"emerson fittipaldi\",\"niki lauda\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"united states grand prix\",\"watkins glen\",\"6 october\",\"carlos reutemann\",\"carlos pace\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"]]\nQuestion = Is it true that the race at the interlagos circuit was held on 27 january?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    circuits = get_column_by_name(table_data, \"circuit\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for circuit, date in zip(circuits, dates):\n        if \"interlagos\" in circuit.lower() and \"27 january\" in date.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "78d7ad5c-fea2-4839-95b9-48804c185a65", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1983 nfl draft\ntable_data = [[\"pick\", \"nfl team\", \"player\", \"position\", \"college\"],[\"29\", \"baltimore colts\", \"vernon maxwell\", \"linebacker\", \"arizona state\"],[\"30\", \"houston oilers\", \"harvey salem\", \"tackle\", \"california\"],[\"31\", \"denver broncos\", \"mark cooper\", \"tackle\", \"miami (fl)\"],[\"32\", \"los angeles rams\", \"henry ellard\", \"wide receiver\", \"fresno state\"],[\"33\", \"chicago bears\", \"mike richardson\", \"defensive back\", \"arizona state\"],[\"34\", \"kansas city chiefs\", \"dave lutz\", \"guard\", \"georgia tech\"],[\"35\", \"philadelphia eagles\", \"wes hopkins\", \"safety\", \"southern methodist\"],[\"36\", \"los angeles rams\", \"mike wilcher\", \"linebacker\", \"north carolina\"],[\"37\", \"new york giants\", \"leonard marshall\", \"defensive end\", \"louisiana state\"],[\"38\", \"new orleans saints\", \"steve korte\", \"center\", \"arkansas\"],[\"39\", \"buffalo bills\", \"darryl talley\", \"linebacker\", \"west virginia\"],[\"40\", \"detroit lions\", \"rich strenger\", \"tackle\", \"michigan\"],[\"41\", \"cleveland browns\", \"ron brown\", \"cornerback\", \"arizona state\"],[\"42\", \"houston oilers\", \"keith bostic\", \"defensive back\", \"michigan\"],[\"43\", \"atlanta falcons\", \"james britt\", \"defensive back\", \"louisiana state\"],[\"44\", \"st louis cardinals\", \"cedric mack\", \"cornerback\", \"baylor\"],[\"45\", \"tampa bay buccaneers\", \"randy grimes\", \"center\", \"baylor\"],[\"46\", \"philadelphia eagles\", \"jody schulz\", \"linebacker\", \"east carolina\"],[\"47\", \"new england patriots\", \"darryal wilson\", \"wide receiver\", \"tennessee\"],[\"48\", \"green bay packers\", \"dave drechsler\", \"guard\", \"north carolina\"],[\"49\", \"san francisco 49ers\", \"roger craig\", \"running back\", \"nebraska\"],[\"50\", \"dallas cowboys\", \"mike walter\", \"linebacker\", \"oregon\"],[\"51\", \"new york jets\", \"johnny hector\", \"running back\", \"texas a&m\"],[\"52\", \"pittsburgh steelers\", \"wayne capers\", \"wide receiver\", \"kansas\"],[\"53\", \"cincinnati bengals\", \"ray horton\", \"safety\", \"washington\"],[\"54\", \"los angeles raiders\", \"bill pickel\", \"defensive tackle\", \"rutgers\"],[\"55\", \"miami dolphins\", \"mike charles\", \"defensive tackle\", \"syracuse\"]]\nQuestion = Is it true that henry ellard was pick number 32?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    picks = get_column_by_name(table_data, \"pick\")\n    for player, pick in zip(players, picks):\n        if player.lower() == \"henry ellard\":\n            answer = equal_to(pick, \"32\")\n            break \n    return answer\n\n### END"}
{"id": "f55cf172-b833-4dd7-ae74-a448de4d94f0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1944 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"st kilda\", \"7.12 (54)\", \"south melbourne\", \"10.19 (79)\", \"junction oval\", \"8000\", \"5 august 1944\"],[\"geelong\", \"11.20 (86)\", \"hawthorn\", \"9.7 (61)\", \"kardinia park\", \"7000\", \"5 august 1944\"],[\"collingwood\", \"8.12 (60)\", \"footscray\", \"15.9 (99)\", \"victoria park\", \"9000\", \"5 august 1944\"],[\"carlton\", \"4.14 (38)\", \"melbourne\", \"8.6 (54)\", \"princes park\", \"10000\", \"5 august 1944\"],[\"north melbourne\", \"11.12 (78)\", \"fitzroy\", \"15.11 (101)\", \"arden street oval\", \"14000\", \"5 august 1944\"],[\"richmond\", \"11.17 (83)\", \"essendon\", \"12.15 (87)\", \"punt road oval\", \"26000\", \"5 august 1944\"]]\nQuestion = Is it true that collingwood lost at home with a score of 8.12 (60) to footscray who scored 15.9 (99)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    away_team_scores = get_column_by_name(table_data, \"away team score\")\n    for home_team, home_team_score, away_team, away_team_score in zip(home_teams, home_team_scores, away_teams, away_team_scores):\n        if home_team.lower() == \"collingwood\" and away_team.lower() == \"footscray\":\n            answer = equal_to(home_team_score, \"8.12 (60)\") and equal_to(away_team_score, \"15.9 (99)\")\n            break \n    return answer\n\n### END"}
{"id": "96d262ac-fdc7-4c0b-afb5-ef629bed647b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = history of test cricket from 1901 to 1914\ntable_data = [[\"date\", \"home captain\", \"away captain\", \"venue\", \"result\"],[\"15 , 16 , 18 , 19 , 20 , 21 dec 1911\", \"clem hill\", \"johnny douglas\", \"sydney cricket ground\", \"aus by 146 runs\"],[\"30 dec , 1 , 2 , 3 jan 1911 / 2\", \"clem hill\", \"johnny douglas\", \"melbourne cricket ground\", \"eng by 8 wkts\"],[\"12 , 13 , 15 , 16 , 17 jan 1912\", \"clem hill\", \"johnny douglas\", \"adelaide oval\", \"eng by 7 wkts\"],[\"9 , 10 , 12 , 13 feb 1912\", \"clem hill\", \"johnny douglas\", \"melbourne cricket ground\", \"eng by inns&225 runs\"],[\"23 , 24 , 26 , 27 , 28 , 29 feb , 1 mar 1912\", \"clem hill\", \"johnny douglas\", \"sydney cricket ground\", \"eng by 70 runs\"]]\nQuestion = Is it true that clem hill was the home captain from february 23rd - march 1st , 1912?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    home_captains = get_column_by_name(table_data, \"home captain\")\n    for date, home_captain in zip(dates, home_captains):\n        if \"23 , 24 , 26 , 27 , 28 , 29 feb , 1 mar 1912\" in date.lower() and \"clem hill\" in home_captain.lower():\n            return True\n    return False\n\n### END"}
{"id": "64a4cf1e-1ac8-40b3-b67e-460bc1fa60c8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = oregon city - class cruiser\ntable_data = [[\"hull number\", \"name\", \"builder\", \"laid down\", \"launched\", \"completed\"],[\"ca 122\", \"ussoregon city\", \"bethlehem steel\", \"8 april 1944\", \"9 june 1945\", \"16 february 1946\"],[\"ca 123\", \"ussalbany\", \"bethlehem steel\", \"6 mar 1944\", \"30 jun 1945\", \"11 jun 1946\"],[\"ca - 124\", \"ussrochester\", \"bethlehem steel\", \"29 may 1944\", \"28 august 1945\", \"20 december 1946\"],[\"ca - 125\", \"ussnorthampton\", \"bethlehem steel\", \"31 august 1944\", \"27 january 1951\", \"7 march 1953\"],[\"ca - 126\", \"uss cambridge\", \"bethlehem steel\", \"16 december 1944\", \"n / a\", \"n / a\"],[\"ca - 127\", \"uss bridgeport\", \"bethlehem steel\", \"13 january 1945\", \"n / a\", \"n / a\"],[\"ca - 128\", \"uss kansas city\", \"bethlehem steel\", \"n / a\", \"n / a\", \"n / a\"],[\"ca - 129\", \"uss tulsa\", \"bethlehem steel\", \"n / a\", \"n / a\", \"n / a\"],[\"ca - 137\", \"uss norfolk\", \"philadelphia naval shipyard\", \"n / a\", \"n / a\", \"n / a\"],[\"ca - 138\", \"uss scranton\", \"philadelphia naval shipyard\", \"n / a\", \"n / a\", \"n / a\"]]\nQuestion = Is it true that 16 december , 1944 , was the year the uss cambridge was launched?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    launch_dates = get_column_by_name(table_data, \"launched\")\n    for name, launch_date in zip(names, launch_dates):\n        if name.lower() == \"uss cambridge\":\n            answer = equal_to(launch_date, \"16 december 1944\")\n            break \n    return answer\n\n### END"}
{"id": "51482853-31cf-41b0-a076-ceb1cec5ed0a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1982 toronto blue jays season\ntable_data = [[\"date\",\"opponent\",\"score\",\"loss\",\"record\"],[\"august 1\",\"tigers\",\"8 - 5\",\"leal (8 - 8)\",\"48 - 53\"],[\"august 2\",\"brewers\",\"9 - 4\",\"mcclure (8 - 4)\",\"49 - 53\"],[\"august 3\",\"brewers\",\"7 - 4\",\"clancy (8 - 10)\",\"49 - 54\"],[\"august 4\",\"brewers\",\"8 - 0\",\"gott (2 - 7)\",\"49 - 55\"],[\"august 5\",\"tigers\",\"5 - 2\",\"leal (8 - 9)\",\"49 - 56\"],[\"august 5\",\"tigers\",\"7 - 4\",\"jackson (3 - 8)\",\"49 - 57\"],[\"august 6\",\"tigers\",\"6 - 0\",\"stieb (11 - 11)\",\"49 - 58\"],[\"august 7\",\"tigers\",\"7 - 4\",\"pashnick (3 - 4)\",\"50 - 58\"],[\"august 8\",\"tigers\",\"7 - 4\",\"underwood (3 - 8)\",\"51 - 58\"],[\"august 8\",\"tigers\",\"7 - 4\",\"rucker (2 - 2)\",\"52 - 58\"],[\"august 9\",\"red sox\",\"4 - 2\",\"eckersley (11 - 10)\",\"53 - 58\"],[\"august 10\",\"red sox\",\"4 - 0\",\"torrez (7 - 7)\",\"54 - 58\"],[\"august 11\",\"red sox\",\"4 - 3\",\"stanley (7 - 5)\",\"55 - 58\"],[\"august 12\",\"brewers\",\"7 - 1\",\"gott (3 - 8)\",\"55 - 59\"],[\"august 12\",\"brewers\",\"4 - 3\",\"murray (7 - 4)\",\"55 - 60\"],[\"august 13\",\"brewers\",\"3 - 1\",\"leal (8 - 10)\",\"55 - 61\"],[\"august 14\",\"brewers\",\"4 - 2\",\"caldwell (10 - 11)\",\"56 - 61\"],[\"august 15\",\"brewers\",\"3 - 2\",\"slaton (9 - 4)\",\"57 - 61\"],[\"august 16\",\"indians\",\"2 - 1\",\"waits (1 - 12)\",\"58 - 61\"],[\"august 17\",\"indians\",\"6 - 5\",\"mclaughlin (8 - 5)\",\"58 - 62\"],[\"august 17\",\"indians\",\"9 - 5\",\"geisel (1 - 1)\",\"58 - 63\"],[\"august 20\",\"yankees\",\"4 - 2\",\"stieb (13 - 12)\",\"58 - 64\"],[\"august 21\",\"yankees\",\"3 - 1\",\"guidry (11 - 5)\",\"59 - 64\"],[\"august 22\",\"yankees\",\"3 - 1\",\"gott (4 - 9)\",\"59 - 65\"],[\"august 23\",\"yankees\",\"4 - 3\",\"leal (8 - 11)\",\"59 - 66\"],[\"august 24\",\"orioles\",\"7 - 3 (10)\",\"mclaughlin (8 - 6)\",\"59 - 67\"],[\"august 25\",\"orioles\",\"8 - 3\",\"clancy (11 - 11)\",\"59 - 68\"],[\"august 26\",\"orioles\",\"12 - 5\",\"gott (4 - 10)\",\"59 - 69\"],[\"august 27\",\"yankees\",\"10 - 3\",\"righetti (8 - 6)\",\"60 - 69\"],[\"august 28\",\"yankees\",\"3 - 2 (11)\",\"laroche (4 - 2)\",\"61 - 69\"],[\"august 29\",\"yankees\",\"8 - 2\",\"clancy (11 - 12)\",\"61 - 70\"],[\"august 30\",\"orioles\",\"6 - 3\",\"eichhorn (0 - 1)\",\"61 - 71\"],[\"august 31\",\"orioles\",\"1 - 0\",\"leal (9 - 12)\",\"61 - 72\"]]\nQuestion = Is it true that the score in the game that had a record of 59 - 65 was 3 - 1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    scores = get_column_by_name(table_data, \"score\")\n    records = get_column_by_name(table_data, \"record\")\n    for score, record in zip(scores, records):\n        if record == \"59 - 65\":\n            answer = equal_to(score, \"3 - 1\")\n            break \n    return answer\n\n### END"}
{"id": "01868b09-a254-4533-90a7-24fbe7a1abf5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"model\",\"release date\",\"price\",\"midi inputs / outputs\",\"sampling rate\",\"sampling memory / upgrade - able\",\"sampling time\",\"storage method\",\"pad banks\"],[\"mpc60\",\"1988\",\"5000\",\"2 in , 4 out\",\"12 - bit 40khz\",\"750 kb / 1.5 mb\",\"(13.1 sec) / (26.2 sec)\",\"internal 3½ floppy drive\",\"4\"],[\"mpc60 mk2\",\"1991\",\"5000\",\"2 in , 4 out\",\"12 - bit 40 khz\",\"750 kb / 1.5 mb\",\"(13.1 sec) / (26.2 sec)\",\"internal 3½ floppy drive\",\"4\"],[\"mpc3000\",\"1993\",\"3500\",\"2 in , 4 out\",\"16 - bit 44.1khz\",\"2 mb / 32 mb\",\"(22 sec) / (6 min)\",\"internal 3½ floppy drive\",\"4\"],[\"mpc2000\",\"1997\",\"2000\",\"2 in , 2 out\",\"22 or 44.1khz\",\"2 mb / 32 mb\",\"6 min mono / 3 min stereo\",\"floppy / scsi interface\",\"4\"],[\"mpc2000xl\",\"2000\",\"1100\",\"2 in , 2 out\",\"22 or 44.1khz\",\"2 mb / 32 mb\",\"6 min mono / 3 min stereo\",\"floppy / zip drive / compactflash / scsi interface\",\"4\"],[\"mpc4000\",\"2002\",\"3500\",\"2 in , 4 out\",\"96 , 48 or 44.1khz , 16 or 24 bit\",\"16 mb / 512 mb\",\"96 min / 64 min (16 / 24 bit)\",\"hard drive / cd - rom\",\"6\"],[\"mpc1000\",\"2005\",\"1000\",\"2 in , 2 out\",\"44.1khz\",\"16 mb / 128 mb\",\"136 sec / 24 m28sec\",\"compactflash / hard drive\",\"4\"],[\"mpc500\",\"2006\",\"700\",\"1 in , 1 out\",\"44.1khz\",\"16 mb / 128 mb\",\"136 sec / 24 m28sec\",\"compactflash\",\"4\"],[\"mpc2500\",\"2005\",\"1700\",\"2 in , 4 out\",\"44.1khz\",\"16 mb / 128 mb\",\"136 sec / 24 m28sec\",\"compactflash / cd - rom / dvd - rom / hard drive\",\"4\"],[\"mpc5000\",\"2008\",\"3500\",\"2 in , 4 out\",\"44.1khz\",\"64 mb / 192 mb\",\"12 m48s / 38 m24s\",\"compactflash / cd - rom / dvd - rom / hard drive\",\"4\"],[\"mpc renaissance\",\"2012\",\"1300\",\"2 in , 4 out\",\"up to 24 bit / 96 khz\",\"uses the ram in your computer\",\"varies depending on how much ram your computer has\",\"computer 's hard drive\",\"8\"]]\nQuestion = Is it true that a sampling rate of 12 - bit 40khz was around 1988 frame release?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    release_dates = get_column_by_name(table_data, \"release date\")\n    sampling_rates = get_column_by_name(table_data, \"sampling rate\")\n    for release_date, sampling_rate in zip(release_dates, sampling_rates):\n        if \"1988\" in release_date and \"12 - bit 40khz\" in sampling_rate:\n            return True\n    return False\n\n### END"}
{"id": "841e7aa5-105f-4c37-b7c5-cd690a48abfd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2000 tennessee titans season\ntable_data = [[\"week\", \"date\", \"tv time\", \"opponent\", \"result\"],[\"1\", \"september 3 , 2000\", \"espn 7:30 pm cdt\", \"buffalo bills\", \"l 13 - 16\"],[\"2\", \"september 10 , 2000\", \"cbs 12:00 pm cdt\", \"kansas city chiefs\", \"w 17 - 14\"],[\"3\", \"-\", \"-\", \"-\", None],[\"4\", \"september 24 , 2000\", \"cbs 12:00 pm cdt\", \"pittsburgh steelers\", \"w 23 - 20\"],[\"5\", \"october 1 , 2000\", \"fox 12:00 pm cdt\", \"new york giants\", \"w 28 - 14\"],[\"6\", \"october 8 , 2000\", \"cbs 12:00 pm cdt\", \"cincinnati bengals\", \"w 23 - 14\"],[\"7\", \"october 16 , 2000\", \"abc 8:00 pm cdt\", \"jacksonville jaguars\", \"w 27 - 13\"],[\"8\", \"october 22 , 2000\", \"cbs 12:00 pm cdt\", \"baltimore ravens\", \"w 14 - 6\"],[\"9\", \"october 30 , 2000\", \"abc 8:00 pm cdt\", \"washington redskins\", \"w 27 - 21\"],[\"10\", \"november 5 , 2000\", \"cbs 12:00 pm cdt\", \"pittsburgh steelers\", \"w 9 - 7\"],[\"11\", \"november 12 , 2000\", \"cbs 12:00 pm cdt\", \"baltimore ravens\", \"l 23 - 24\"],[\"12\", \"november 19 , 2000\", \"cbs 12:00 pm cdt\", \"cleveland browns\", \"w 24 - 10\"],[\"13\", \"november 26 , 2000\", \"cbs 3:15 pm cdt\", \"jacksonville jaguars\", \"l 13 - 16\"],[\"14\", \"december 3 , 2000\", \"cbs 12:00 pm cdt\", \"philadelphia eagles\", \"w 15 - 13\"],[\"15\", \"december 10 , 2000\", \"cbs 12:00 pm cdt\", \"cincinnati bengals\", \"w 35 - 3\"],[\"16\", \"december 17 , 2000\", \"cbs 12:00 pm cdt\", \"cleveland browns\", \"w 24 - 0\"],[\"17\", \"december 25 , 2000\", \"abc 8:00 pm cdt\", \"dallas cowboys\", \"w 31 - 0\"]]\nQuestion = Is it true that october 22 , 2000 , was week 8?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for week, date in zip(weeks, dates):\n        if \"october 22 , 2000\" in date.lower():\n            answer = week == \"8\"\n            break\n    return answer\n\n### END"}
{"id": "407a797e-fa9f-4d34-afc0-57bab9caa567", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"satellite\", \"cospar id\", \"satcat no\", \"product number\", \"launch date\", \"estimated end date\", \"estimated operational life\"],[\"kosmos 2133\", \"1991 - 010a\", \"21111\", \"7120\", \"14 february 1991\", \"9 november 1995\", \"4 years 9 months\"],[\"kosmos 2224\", \"1992 - 088a\", \"22269\", \"7121\", \"17 december 1992\", \"17 june 1999\", \"6 years 6 months\"],[\"kosmos 2282\", \"1994 - 038a\", \"23168\", \"7123\", \"6 july 1994\", \"29 december 1995\", \"1 year 5 months\"],[\"kosmos 2350\", \"1998 - 025a\", \"25315\", \"7122\", \"29 april 1998\", \"29 june 1998\", \"2 months\"],[\"kosmos 2379\", \"2001 - 037a\", \"26892\", \"7124\", \"24 august 2001\", \"late 2009 / early 2010\", \"8 years\"],[\"kosmos 2397\", \"2003 - 015a\", \"27775\", \"7126\", \"24 april 2003\", \"june 2003\", \"2 months\"],[\"kosmos 2440\", \"2008 - 033a\", \"33108\", \"7127\", \"26 june 2008\", \"february 2010\", \"1 year 4 months\"]]\nQuestion = Is it true that with cospar id 2008 - 033a , the launch date was june 26 , 2008?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    cospar_ids = get_column_by_name(table_data, \"cospar id\")\n    launch_dates = get_column_by_name(table_data, \"launch date\")\n    for cospar_id, launch_date in zip(cospar_ids, launch_dates):\n        if cospar_id.lower() == \"2008 - 033a\":\n            answer = equal_to(launch_date, \"26 june 2008\")\n            break \n    return answer\n\n### END"}
{"id": "38cd2948-2d94-4f0a-b5a2-c6b009e3ecce", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of tallest buildings in houston\ntable_data = [[\"name\", \"street address\", \"years as tallest\", \"height ft / m\", \"floors\"],[\"lomas & nettleton building\", \"201 main street\", \"1904 - 1908\", \"n / a\", \"8\"],[\"711 main\", \"711 main street\", \"1908 - 1910\", \"134 / 41\", \"10\"],[\"806 main\", \"806 main street\", \"1910 - 1926\", \"302 / 92\", \"23\"],[\"magnolia hotel\", \"1100 texas avenue\", \"1926 - 1927\", \"325 / 99\", \"22\"],[\"niels esperson building\", \"808 travis street\", \"1927 - 1929\", \"410 / 125\", \"32\"],[\"jpmorgan chase building\", \"712 main street\", \"1929 - 1963\", \"428 / 131\", \"36\"],[\"exxon building\", \"800 bell avenue\", \"1963 - 1971\", \"607 / 185\", \"44\"],[\"one shell plaza\", \"910 louisiana street\", \"1971 - 1980\", \"714 / 218\", \"50\"],[\"enterprise plaza\", \"1100 louisiana street\", \"1980 - 1982\", \"756 / 230\", \"55\"],[\"jpmorgan chase tower\", \"600 travis street\", \"1982 - present\", \"1002 / 305\", \"75\"]]\nQuestion = Is it true that the street address 800 bell avenue has 44 floors?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    street_addresses = get_column_by_name(table_data, \"street address\")\n    floors = get_column_by_name(table_data, \"floors\")\n    for street_address, floor in zip(street_addresses, floors):\n        if street_address.lower() == \"800 bell avenue\":\n            answer = equal_to(floor, \"44\")\n            break \n    return answer\n\n### END"}
{"id": "2890f2b4-6e9d-4f09-a1aa-a87bba8f7bb8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1994 nhl entry draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"261\", \"per gustafsson\", \"defence\", \"sweden\", \"florida panthers\", \"hv71 (sweden)\"],[\"262\", \"jeremy stevenson\", \"left wing\", \"united states\", \"mighty ducks of anaheim\", \"sault ste marie greyhounds (ohl)\"],[\"263\", \"rob mara\", \"left wing\", \"united states\", \"chicago blackhawks\", \"belmont hill high school (hs - massachusetts)\"],[\"264\", \"jason issel\", \"left wing\", \"canada\", \"winnipeg jets\", \"prince albert raiders (whl)\"],[\"265\", \"steve nimigon\", \"left wing\", \"canada\", \"hartford whalers\", \"niagara falls thunder (ohl)\"],[\"266\", \"ladislav benysek\", \"defence\", \"czech republic\", \"edmonton oilers\", \"olomouc hc (czech republic)\"],[\"267\", \"jamie butt\", \"left wing\", \"canada\", \"ny rangers\", \"tacoma rockets (whl)\"],[\"268\", \"brian white\", \"defence\", \"united states\", \"tampa bay lightning\", \"arlington catholic high school (hs - massachusetts)\"],[\"269\", \"mike hanson\", \"centre\", \"united states\", \"new jersey devils\", \"minot high school (hs - north dakota)\"],[\"270\", \"jan lipiansky\", \"forward\", \"slovakia\", \"philadelphia flyers\", \"slovan bratislava (slovakia)\"],[\"271\", \"david beauregard\", \"left wing\", \"canada\", \"san jose sharks\", \"st hyacinthe lasers (qmjhl)\"],[\"272\", \"dick tarnstrom\", \"defence\", \"sweden\", \"new york islanders\", \"aik (sweden)\"],[\"273\", \"robert longpre\", \"centre\", \"canada\", \"vancouver canucks\", \"medicine hat tigers (whl)\"],[\"274\", \"antti tormanen\", \"left wing\", \"finland\", \"ottawa senators\", \"jokerit (finland)\"],[\"275\", \"sergei tertyshny\", \"defence\", \"russia\", \"washington capitals\", \"chelyabinsk traktor (russia)\"],[\"276\", \"scott fankhouser\", \"goaltender\", \"united states\", \"st louis blues\", \"university of massachusetts lowell (ncaa)\"],[\"277\", \"shayne wright\", \"defence\", \"canada\", \"buffalo sabres\", \"owen sound platers (ohl)\"],[\"278\", \"ross parsons\", \"defence\", \"canada\", \"montreal canadiens\", \"regina pats (whl)\"],[\"279\", \"pavel torgayev\", \"centre\", \"russia\", \"calgary flames\", \"tps (finland)\"],[\"280\", \"chris szysky\", \"right wing\", \"canada\", \"dallas stars\", \"swift current broncos (whl)\"],[\"281\", \"andrei yakhanov\", \"defence\", \"russia\", \"boston bruins\", \"ufa salavat yulayev (russia)\"],[\"282\", \"doug nolan\", \"defence\", \"united states\", \"toronto maple leafs\", \"catholic memorial high school (hs - massachusetts)\"],[\"283\", \"toivo suursoo\", \"left wing\", \"estonia\", \"detroit red wings\", \"krylya sovetov moscow (russia)\"],[\"284\", \"brian leitza\", \"goaltender\", \"united states\", \"pittsburgh penguins\", \"sioux city musketeers (ushl)\"],[\"285\", \"steven low\", \"defence\", \"canada\", \"quebec nordiques\", \"sherbrooke faucons (qmjhl)\"],[\"286\", \"kim johnsson\", \"defence\", \"sweden\", \"new york rangers\", \"malmã if (sweden)\"]]\nQuestion = Is it true that calgary flames is the nhl team for which the players from tps (finland) play for?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    nhl_teams = get_column_by_name(table_data, \"nhl team\")\n    club_teams = get_column_by_name(table_data, \"college / junior / club team\")\n    answer = False\n    for nhl_team, club_team in zip(nhl_teams, club_teams):\n        if \"calgary flames\" in nhl_team.lower() and \"tps (finland)\" in club_team.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "0186c91d-d1bf-48b0-9646-c78e85fa9819", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states house of representatives elections , 1812\ntable_data = [[\"district\", \"incumbent\", \"party\", \"first elected\", \"result\", \"candidates\"],[\"north carolina 2\", \"willis alston\", \"democratic - republican\", \"1798\", \"re - elected\", \"willis alston (dr) 56.0% daniel mason (f) 44.0%\"],[\"north carolina 5\", \"william r king\", \"democratic - republican\", \"1810\", \"re - elected\", \"william r king (dr) 100%\"],[\"north carolina 6\", \"nathaniel macon\", \"democratic - republican\", \"1791\", \"re - elected\", \"nathaniel macon (dr)\"],[\"north carolina 9\", \"none (district created)\", \"none (district created)\", \"none (district created)\", \"new seat democratic - republican gain\", \"bartlett yancey (dr) 61.1% james martin (f) 38.9%\"],[\"north carolina 10\", \"joseph pearson\", \"federalist\", \"1808\", \"re - elected\", \"joseph pearson (f) 54.1% alexander gary (dr) 45.9%\"]]\nQuestion = Is it true that democratic - republican is the party that the incumbent joseph pearson belonged to?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    incumbents = get_column_by_name(table_data, \"incumbent\")\n    parties = get_column_by_name(table_data, \"party\")\n    for incumbent, party in zip(incumbents, parties):\n        if incumbent.lower() == \"joseph pearson\":\n            answer = party.lower() == \"democratic - republican\"\n            break\n    return answer\n\n### END"}
{"id": "e036d7b8-0200-4ce8-b176-02aa6ee873bb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\"],[\"coronation street\", \"who do you think you are\", \"the nature of things\", \"the nature of things\", \"doc zone\", \"doc zone\", \"the national\"],[\"etalk\", \"jeopardy!\", \"csi\", \"csi\", \"grey 's anatomy\", \"grey 's anatomy\", \"er\"],[\"et canada\", \"entertainment tonight\", \"survivor : china\", \"survivor : china\", \"the office\", \"my name is earl\", \"shark\"],[\"wheel of fortune\", \"e2\", \"scrubs\", \"30 rock\", \"don't forget the lyrics!\", \"don't forget the lyrics!\", \"big shots\"],[\"friends\", \"access hollywood\", \"ugly betty\", \"ugly betty\", \"supernatural\", \"supernatural\", \"terminal city\"],[\"the insider\", \"e! news\", \"are you smarter than a 5th grader\", \"are you smarter than a 5th grader\", \"e! movies we love\", \"e! movies we love\", \"e! movies we love\"],[\"virginie\", \"infoman\", \"le moment de vérité\", \"le moment de vérité\", \"tous pour un\", \"tous pour un\", \"le téléjournal\"],[\"la fièvre de la danse\", \"la fièvre de la danse\", \"le banquier\", \"le banquier\", \"taxi 0 - 22\", \"taxi 0 - 22\", \"le tva 22 heures\"],[\"loft story\", \"criss angel\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal du soir\"]]\nQuestion = Is it true that you can watch don't forget the lyrics at 9:30 and then watch e2 , it comes on afterwards?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef in_string(str1, str2):\n    return str1 in str2\n\ndef solution(table_data):\n    column_930 = get_column_by_index(table_data, 5)\n    column_1000 = get_column_by_index(table_data, 6)\n    answer = False\n    for show_930, show_1000 in zip(column_930, column_1000):\n        if in_string(\"don't forget the lyrics\", show_930.lower()) and in_string(\"e2\", show_1000.lower()):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "9c44c06c-cf6a-4307-a741-8c46873187ee", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = atlanta falcons draft history\ntable_data = [[\"round\", \"pick\", \"overall\", \"name\", \"position\", \"college\"],[\"1\", \"6\", \"6\", \"warren bryant\", \"offensive tackle\", \"kentucky\"],[\"1\", \"20\", \"20\", \"wilson faumuina\", \"defensive tackle\", \"san josã state\"],[\"2\", \"8\", \"36\", \"r c thielemann\", \"guard\", \"arkansas\"],[\"4\", \"6\", \"90\", \"allan leavitt\", \"kicker\", \"georgia\"],[\"5\", \"8\", \"120\", \"shelton diggs\", \"wide receiver\", \"usc\"],[\"6\", \"22\", \"161\", \"keith jenkins\", \"defensive back\", \"cincinnati\"],[\"8\", \"8\", \"203\", \"walter packer\", \"wide receiver\", \"mississippi state\"],[\"9\", \"7\", \"230\", \"john maxwell\", \"offensive tackle\", \"boston college\"],[\"9\", \"19\", \"242\", \"robert speer\", \"defensive end\", \"arkansas state\"],[\"10\", \"6\", \"257\", \"billy ryckman\", \"wide receiver\", \"louisiana tech\"],[\"11\", \"8\", \"287\", \"dave farmer\", \"running back\", \"usc\"],[\"12\", \"7\", \"312\", \"don parrish\", \"defensive tackle\", \"pittsburgh\"]]\nQuestion = Is it true that keith jenkins who played at defensive tackle position of overall 161 is from cincinnati college?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    positions = get_column_by_name(table_data, \"position\")\n    colleges = get_column_by_name(table_data, \"college\")\n    overalls = get_column_by_name(table_data, \"overall\")\n    for name, position, college, overall in zip(names, positions, colleges, overalls):\n        if name.lower() == \"keith jenkins\" and position.lower() == \"defensive tackle\" and college.lower() == \"cincinnati\" and equal_to(overall, \"161\"):\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "4318f33a-d70a-496c-868e-8dfa2f9ad476", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1979 new orleans saints season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 2 , 1979\", \"atlanta falcons\", \"l 40 - 34\", \"70940\"],[\"2\", \"september 9 , 1979\", \"green bay packers\", \"l 28 - 19\", \"53184\"],[\"3\", \"september 16 , 1979\", \"philadelphia eagles\", \"l 26 - 14\", \"54212\"],[\"4\", \"september 23 , 1979\", \"san francisco 49ers\", \"w 30 - 21\", \"39727\"],[\"5\", \"september 30 , 1979\", \"new york giants\", \"w 24 - 14\", \"51543\"],[\"6\", \"october 7 , 1979\", \"los angeles rams\", \"l 35 - 17\", \"68986\"],[\"7\", \"october 14 , 1979\", \"tampa bay buccaneers\", \"w 42 - 14\", \"67640\"],[\"8\", \"october 21 , 1979\", \"detroit lions\", \"w 17 - 7\", \"57428\"],[\"9\", \"october 28 , 1979\", \"washington redskins\", \"w 14 - 10\", \"52133\"],[\"10\", \"november 4 , 1979\", \"denver broncos\", \"l 10 - 3\", \"74482\"],[\"11\", \"november 11 , 1979\", \"san francisco 49ers\", \"w 31 - 20\", \"65551\"],[\"12\", \"november 18 , 1979\", \"seattle seahawks\", \"l 38 - 24\", \"60055\"],[\"13\", \"november 25 , 1979\", \"atlanta falcons\", \"w 37 - 6\", \"42815\"],[\"14\", \"december 3 , 1979\", \"oakland raiders\", \"l 42 - 35\", \"65541\"],[\"15\", \"december 9 , 1979\", \"san diego chargers\", \"l 35 - 0\", \"61059\"],[\"16\", \"december 16 , 1979\", \"los angeles rams\", \"w 29 - 14\", \"53879\"]]\nQuestion = Is it true that attendance of the game at seattle seahawks stadium was 60055?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    for opponent, attendance in zip(opponents, attendances):\n        if opponent.lower() == \"seattle seahawks\":\n            answer = equal_to(attendance, \"60055\")\n            break \n    return answer\n\n### END"}
{"id": "d229dfb3-5f71-404c-b776-b5c1b71c4859", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"\", \"date\", \"vs\", \"opponent\", \"score\", \"attendance\", \"record\"],[\"1\", \"january 5 , 1991\", \"at\", \"detroit turbos\", \"8 - 18\", \"6847\", \"loss\"],[\"2\", \"january 11 , 1991\", \"vs\", \"new england blazers\", \"11 - 10\", \"14789\", \"win\"],[\"3\", \"january 19 , 1991\", \"at\", \"new york saints\", \"13 - 19\", \"9081\", \"loss\"],[\"4\", \"january 26 , 1991\", \"vs\", \"new york saints\", \"13 - 8\", \"16282\", \"win\"],[\"5\", \"february 10 , 1991\", \"vs\", \"detroit turbos\", \"12 - 14\", \"16642\", \"loss\"],[\"6\", \"february 22 , 1991\", \"at\", \"new england blazers\", \"11 - 13\", \"7095\", \"loss\"],[\"7\", \"february 28 , 1991\", \"vs\", \"pittsburgh bulls\", \"11 - 9\", \"13712\", \"win\"],[\"8\", \"march 9 , 1991\", \"at\", \"pittsburgh bulls\", \"15 - 7\", \"8589\", \"win\"],[\"9\", \"march 17 , 1991\", \"vs\", \"baltimore thunder\", \"14 - 17\", \"16289\", \"loss\"]]\nQuestion = Is it true that the score for game 9 was 11 - 9?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef get_column_cell_value(row_index, column):\n    return column[row_index]\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    column_index = 4\n    column_4 = get_column_by_index(table_data, column_index)\n    game_9_score = get_column_cell_value(8, column_4)\n    expected_score = \"11 - 9\"\n    answer = equal_to(game_9_score, expected_score)\n    return answer\n\n### END"}
{"id": "c2fcdbc4-56a2-434a-8dd8-570d2aca4be9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = anaprof clausura 2008\ntable_data = [[\"place (posición)\", \"team (equipo)\", \"played (pj)\", \"won (pg)\", \"draw (pe)\", \"lost (pp)\", \"goals scored (gf)\", \"goals conceded (gc)\", \"+ / - (dif)\", \"points (pts)\"],[\"1\", \"árabe unido\", \"31\", \"17\", \"6\", \"8\", \"54\", \"31\", \"+ 23\", \"57\"],[\"2\", \"tauro\", \"31\", \"16\", \"8\", \"7\", \"54\", \"41\", \"+ 13\", \"56\"],[\"3\", \"san francisco\", \"31\", \"14\", \"11\", \"6\", \"54\", \"42\", \"+ 12\", \"53\"],[\"4\", \"chepo\", \"31\", \"13\", \"10\", \"8\", \"50\", \"31\", \"+ 19\", \"49\"],[\"5\", \"sporting san miguelito\", \"31\", \"11\", \"10\", \"10\", \"44\", \"40\", \"+ 4\", \"43\"],[\"6\", \"atlético veragüense\", \"31\", \"9\", \"11\", \"11\", \"40\", \"48\", \"- 8\", \"38\"],[\"7\", \"chorrillo\", \"31\", \"7\", \"13\", \"11\", \"32\", \"39\", \"- 7\", \"34\"],[\"8\", \"atlético chiriquí\", \"31\", \"9\", \"7\", \"15\", \"33\", \"64\", \"- 31\", \"34\"],[\"9\", \"alianza\", \"31\", \"9\", \"4\", \"18\", \"45\", \"51\", \"- 6\", \"31\"],[\"10\", \"plaza amador\", \"31\", \"6\", \"8\", \"17\", \"22\", \"41\", \"- 19\", \"27\"]]\nQuestion = Is it true that team (equipo) alianza played 31 games and won 5 more games than plaza amador?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team (equipo)\")\n    played_games = get_column_by_name(table_data, \"played (pj)\")\n    won_games = get_column_by_name(table_data, \"won (pg)\")\n    alianza_played_games = 0\n    alianza_won_games = 0\n    plaza_amador_won_games = 0\n    for team, played_game, won_game in zip(teams, played_games, won_games):\n        if team.lower() == \"alianza\":\n            alianza_played_games = int(played_game)\n            alianza_won_games = int(won_game)\n        elif team.lower() == \"plaza amador\":\n            plaza_amador_won_games = int(won_game)\n    answer = equal_to(alianza_played_games, 31) and greater(alianza_won_games, plaza_amador_won_games + 5)\n    return answer\n\n### END"}
{"id": "dea3a122-02cb-4afb-91b7-0f2b5d3f053a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = israeli football league\ntable_data = [[\"season\", \"champion\", \"runner up\", \"israel bowl\", \"venue\", \"date\", \"finals mvp\"],[\"2007 - 08\", \"jerusalem lions\", \"haifa underdogs\", \"i\", \"kraft stadium , jerusalem\", \"march 28 , 2008\", \"moshe horowitz (lions)\"],[\"2008 - 09\", \"modi'in pioneers\", \"jerusalem lions\", \"ii\", \"kraft stadium , jerusalem\", \"april 3 , 2009\", \"assaf katz (pioneers)\"],[\"2009 - 10\", \"tel aviv sabres\", \"jerusalem lions\", \"iii\", \"kraft stadium , jerusalem\", \"march 26 , 2010\", \"evan reshef (sabres)\"],[\"2010 - 11\", \"judean rebels\", \"tel aviv sabres\", \"iv\", \"kraft stadium , jerusalem\", \"march 18 , 2011\", \"zack miller (rebels)\"],[\"2011 - 12\", \"tel aviv sabres\", \"tel aviv pioneers\", \"v\", \"kraft stadium , jerusalem\", \"march 30 , 2012\", \"adi hakami and jonathan curran (sabres)\"],[\"2012 - 13\", \"tel aviv sabres\", \"judean rebels\", \"vi\", \"kraft stadium , jerusalem\", \"march 22 , 2013\", \"jonathan curran and banning fudge (sabres)\"]]\nQuestion = Is it true that the israel bowl iv 's champion is judean rebels?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    champions = get_column_by_name(table_data, \"champion\")\n    israel_bowls = get_column_by_name(table_data, \"israel bowl\")\n    for champion, israel_bowl in zip(champions, israel_bowls):\n        if israel_bowl.lower() == \"iv\":\n            answer = equal_to(champion, \"judean rebels\")\n            break \n    return answer\n\n### END"}
{"id": "9a372e43-2bf5-45e1-adee-058b5b98027a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of the busiest airports in africa\ntable_data = [[\"country\", \"airport\", \"city\", \"2010\", \"change (10 / 09)\"],[\"south africa\", \"or tambo international airport\", \"johannesburg\", \"18383549\", \"0 11.4%\"],[\"egypt\", \"cairo international airport\", \"cairo\", \"16148480\", \"0 12.3%\"],[\"spain\", \"gran canaria airport\", \"las palmas de gran canaria\", \"9486035\", \"0 3.6%\"],[\"egypt\", \"sharm el - sheikh international airport\", \"sharm el - sheikh\", \"8693990\", \"0 17.0%\"],[\"south africa\", \"cape town international airport\", \"cape town\", \"8107648\", \"0 5.0%\"],[\"egypt\", \"hurghada international airport\", \"hurghada\", \"8062652\", \"0 19.8%\"],[\"spain\", \"tenerife sur\", \"granadilla de abona\", \"7358986\", \"0 3.5%\"],[\"morocco\", \"mohammed v international airport\", \"casablanca\", \"7245508\", \"0 13.3%\"],[\"nigeria\", \"murtala muhammed international airport\", \"lagos\", \"6273545\", \"0 11.1%\"],[\"kenya\", \"jomo kenyatta international airport\", \"nairobi\", \"5485771\", \"0 8.0%\"],[\"spain\", \"lanzarote airport\", \"san bartolomé , las palmas\", \"4938343\", \"0 5.0%\"],[\"south africa\", \"king shaka international airport\", \"durban\", \"4757800\", \"0 10.5%\"],[\"ethiopia\", \"bole international airport\", \"addis ababa\", \"4562036\", \"0 13.83\"],[\"spain\", \"fuerteventura airport\", \"puerto del rosario\", \"4173590\", \"0 11.6%\"],[\"spain\", \"tenerife norte\", \"san cristóbal de la laguna\", \"4051356\", \"0 0.1%\"],[\"nigeria\", \"nnamdi azikiwe international airport\", \"abuja\", \"3922547\", \"0 22.7%\"],[\"morocco\", \"marrakech - menara airport\", \"marrakech\", \"3453044\", \"0 15.0%\"],[\"mauritius\", \"sir seewoosagur ramgoolam international airport\", \"mauritius\", \"2509156\", \"0 8.5%\"],[\"france\", \"la réunion roland garros airport\", \"saint - denis\", \"1911336\", \"0 13.5%\"],[\"senegal\", \"léopold sédar senghor international airport\", \"dakar\", \"1687006\", \"unknown\"],[\"morocco\", \"agadir - al massira airport\", \"agadir\", \"1621272\", \"0 11.3%\"],[\"tanzania\", \"julius nyerere international airport\", \"dar es salaam\", \"1556410\", \"0 9.4%\"],[\"south africa\", \"port elizabeth airport\", \"port elizabeth\", \"1400688\", \"0 3.2%\"],[\"ghana\", \"kotoka international airport\", \"accra\", \"1387045\", \"unknown\"],[\"nigeria\", \"port harcourt international airport\", \"port harcourt\", \"1211816\", \"0 12.0%\"],[\"south africa\", \"lanseria international airport\", \"krugersdorp\", \"1000000\", \"unknown\"]]\nQuestion = Is it true that the 2010 total for ghana is 1387045?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    countries = get_column_by_name(table_data, \"country\")\n    totals = get_column_by_name(table_data, \"2010\")\n    for country, total in zip(countries, totals):\n        if country.lower() == \"ghana\":\n            answer = equal_to(total, \"1387045\")\n            break \n    return answer\n\n### END"}
{"id": "2b228caa-2e09-4de1-b6c5-2109aa44913e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = chameleon\ntable_data = [[\"scientific name\", \"common name\", \"length (male)\", \"length (female)\", \"color\", \"lifespan (years)\"],[\"chamaeleo calyptratus\", \"veiled chameleon\", \"14 - 24 in\", \"10 - 13 in\", \"green and light colors\", \"about 5\"],[\"trioceros jacksonii\", \"jackson 's chameleon\", \"9 - 13 in\", \"10 - 13 in\", \"green and light colors\", \"5 - 10\"],[\"furcifer pardalis\", \"panther chameleon\", \"15 - 21 in\", \"9 - 13 in\", \"darker colors\", \"about 5 (2 - 3 for birthing females)\"],[\"rieppeleon brevicaudatus\", \"bearded pygmy chameleon\", \"2 - 3 in\", \"2 - 3 in\", \"brown , beige , green\", \"about 3 - 5\"],[\"rhampholeon spectrum\", \"spectral pygmy chameleon\", \"3 - 4 in\", \"2 - 4 in\", \"tan and gray\", \"3 - 5\"]]\nQuestion = Is it true that the rhampholeon spectrum is more commonly known as a spectral pygmy chameleon?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    scientific_names = get_column_by_name(table_data, \"scientific name\")\n    common_names = get_column_by_name(table_data, \"common name\")\n    for scientific_name, common_name in zip(scientific_names, common_names):\n        if scientific_name.lower() == \"rhampholeon spectrum\":\n            answer = common_name.lower() == \"spectral pygmy chameleon\"\n            break\n    return answer\n\n### END"}
{"id": "5ba8f856-0952-458c-b6e2-f9a6181f6925", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = .38 special\ntable_data = [[\"cartridge\", \"bullet weight\", \"muzzle velocity\", \"muzzle energy\", \"max pressure\"],[\".38 short colt\", \"gr (g)\", \"ft / s (m / s)\", \"181ft lbf (245 j)\", \"7500 cup\"],[\".38 long colt\", \"gr (g)\", \"ft / s (m / s)\", \"201ft lbf (273 j)\", \"12000 cup\"],[\".38 s&w\", \"gr (g)\", \"ft / s (m / s)\", \"206ft lbf (279 j)\", \"14500 psi\"],[\".38 s&w special\", \"gr (g)\", \"ft / s (m / s)\", \"310ft lbf (420 j)\", \"17000 psi\"],[\".38 special + p\", \"gr (g)\", \"ft / s (m / s)\", \"351ft lbf (476 j)\", \"20000 psi\"],[\".38 special + p +\", \"gr (g)\", \"ft / s (m / s)\", \"295ft lbf (400 j)\", \">20000 psi\"],[\".380 acp\", \"gr (g)\", \"ft / s (m / s)\", \"178ft lbf (241 j)\", \"21500 psi\"],[\"9x19 mm parabellum\", \"gr (g)\", \"ft / s (m / s)\", \"420ft lbf (570 j)\", \"39200 psi\"],[\"9x19 mm parabellum\", \"gr (g)\", \"ft / s (m / s)\", \"383ft lbf (520 j)\", \"39200 psi\"],[\"9x18 mm makarov\", \"gr (g)\", \"ft / s (m / s)\", \"231ft lbf (313 j)\", \"23206 psi\"],[\".38 super\", \"grains (g)\", \"ft / s (m / s)\", \"468ft lbf (634 j)\", \"36500 psi\"],[\".357 magnum\", \"grains (g)\", \"ft / s (m / s)\", \"639ft lbf (866 j)\", \"35000 psi\"],[\".357 sig\", \"grains (g)\", \"ft / s (m / s)\", \"506ft lbf (686 j)\", \"40000 psi\"]]\nQuestion = Is it true that 506ft lbf (686 j) is the muzzle energy with 40000 psi max pressure for the 38 long colt cartridge?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    cartridges = get_column_by_name(table_data, \"cartridge\")\n    muzzle_energies = get_column_by_name(table_data, \"muzzle energy\")\n    max_pressures = get_column_by_name(table_data, \"max pressure\")\n    for cartridge, muzzle_energy, max_pressure in zip(cartridges, muzzle_energies, max_pressures):\n        if cartridge.lower() == \".38 long colt\":\n            answer = equal_to(muzzle_energy, \"506ft lbf (686 j)\") and equal_to(max_pressure, \"40000 psi\")\n            break \n    return answer\n\n### END"}
{"id": "f639b535-a3cc-49a6-bf26-2006c13ab670", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = dock jumping\ntable_data = [[\"date\", \"distance\", \"handler\", \"event\", \"location\"],[\"7 july 2000\", \"ft4in (m)\", \"beth gutteridge\", \"espn great outdoor games\", \"lake placid , ny\"],[\"8 july 2001\", \"ft1in (m)\", \"mike wallace\", \"espn great outdoor games\", \"lake placid , ny\"],[\"20 february 2002\", \"ft3in (m)\", \"mike jackson\", \"indianapolis boat , sport & travel show\", \"indianapolis , in\"],[\"1 may 2002\", \"ft4in (m)\", \"john kline\", \"espn2 super retriever series\", \"northfield , mn\"],[\"6 july 2002\", \"ft6in (m)\", \"mike jackson\", \"espn great outdoor games\", \"lake placid , ny\"],[\"7 august 2005\", \"ft5in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"21 august 2005\", \"ft7in (m)\", \"kevin meese\", \"big nickle time cabela 's\", \"hamburg , pa\"],[\"9 october 2005\", \"ft10in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"30 may 2010\", \"ft11.59in (m)\", \"rande murphy\", \"super retriever series crown championship\", \"little rock , ar\"],[\"11 july 2010\", \"ft1in (m)\", \"melissa ness\", \"2010 ukc premier\", \"richmond , in\"],[\"29 may 2011\", \"ft7in (m)\", \"tony lampert\", \"super retriever series crown championship\", \"little rock , ar\"],[\"07 oct 2011\", \"ft11in (m)\", \"tony lampert\", \"david letterman show , october 7 2011\", \"new york , ny\"]]\nQuestion = Is it true that the event named bass pro shops held on 9 october 2005 had a distance of ft10in (m)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    distances = get_column_by_name(table_data, \"distance\")\n    events = get_column_by_name(table_data, \"event\")\n    for date, distance, event in zip(dates, distances, events):\n        if date.lower() == \"9 october 2005\" and event.lower() == \"bass pro shops\":\n            answer = equal_to(distance, \"ft10in (m)\")\n            break \n    return answer\n\n### END"}
{"id": "040b02f6-86a6-4ee6-9ba0-00d5b173245a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 football league one\ntable_data = [[\"team\",\"outgoing manager\",\"manner of departure\",\"date of vacancy\",\"replaced by\",\"date of appointment\",\"position in table\"],[\"milton keynes dons\",\"paul ince\",\"signed by blackburn rovers (mutual consent)\",\"22 june 2008\",\"roberto di matteo\",\"2 july 2008\",\"pre - season\"],[\"cheltenham town\",\"keith downing\",\"mutual consent\",\"13 september 2008\",\"martin allen\",\"15 september 2008\",\"24th\"],[\"colchester united\",\"geraint williams\",\"mutual consent\",\"22 september 2008\",\"paul lambert\",\"24 september 2008\",\"23rd\"],[\"carlisle united\",\"john ward\",\"mutual consent\",\"3 november 2008\",\"greg abbott\",\"5 december 2008\",\"20th\"],[\"huddersfield town\",\"stan ternent\",\"mutual consent\",\"4 november 2008\",\"lee clark\",\"11 december 2008\",\"16th\"],[\"swindon town\",\"maurice malpas\",\"mutual consent\",\"14 november 2008\",\"danny wilson\",\"26 december 2008\",\"16th\"],[\"crewe alexandra\",\"steve holland\",\"contract terminated\",\"18 november 2008\",\"guðjón þórðarson\",\"24 december 2008\",\"24th\"],[\"hartlepool united\",\"danny wilson\",\"contract terminated\",\"15 december 2008\",\"chris turner\",\"15 december 2008\",\"13th\"],[\"leeds united\",\"gary mcallister\",\"contract terminated\",\"21 december 2008\",\"simon grayson\",\"23 december 2008\",\"9th\"],[\"walsall\",\"jimmy mullen\",\"contract terminated\",\"10 january 2009\",\"chris hutchings\",\"20 january 2009\",\"12th\"],[\"leyton orient\",\"martin ling\",\"mutual consent\",\"18 january 2009\",\"geraint williams\",\"5 february 2009\",\"21st\"],[\"yeovil town\",\"russell slade\",\"contract terminated\",\"16 february 2009\",\"terry skiverton\",\"18 february 2009\",\"16th\"],[\"brighton & hove albion\",\"micky adams\",\"contract terminated\",\"21 february 2009\",\"russell slade\",\"6 march 2009\",\"21st\"]]\nQuestion = Is it true that on 2 july 2008 , roberto di matteo was appointed to milton keynes?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    replaced_bys = get_column_by_name(table_data, \"replaced by\")\n    date_of_appointments = get_column_by_name(table_data, \"date of appointment\")\n    for team, replaced_by, date_of_appointment in zip(teams, replaced_bys, date_of_appointments):\n        if team.lower() == \"milton keynes dons\" and replaced_by.lower() == \"roberto di matteo\" and date_of_appointment.lower() == \"2 july 2008\":\n            return True\n    return False\n\n### END"}
{"id": "ec79d194-9484-4fa2-b9da-02b6a8d4d59c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1980 - 81 philadelphia flyers season\ntable_data = [[\"game\", \"december\", \"opponent\", \"score\", \"record\", \"points\"],[\"27\", \"4\", \"chicago black hawks\", \"7 - 5\", \"18 - 5 - 4\", \"40\"],[\"28\", \"6\", \"detroit red wings\", \"2 - 4\", \"18 - 6 - 4\", \"40\"],[\"29\", \"7\", \"colorado rockies\", \"4 - 2\", \"19 - 6 - 4\", \"42\"],[\"30\", \"10\", \"chicago black hawks\", \"2 - 2\", \"19 - 6 - 5\", \"43\"],[\"31\", \"13\", \"pittsburgh penguins\", \"6 - 5\", \"20 - 6 - 5\", \"45\"],[\"32\", \"14\", \"st louis blues\", \"5 - 4\", \"21 - 6 - 5\", \"47\"],[\"33\", \"18\", \"colorado rockies\", \"2 - 0\", \"22 - 6 - 5\", \"49\"],[\"34\", \"20\", \"washington capitals\", \"5 - 2\", \"23 - 6 - 5\", \"51\"],[\"35\", \"21\", \"washington capitals\", \"0 - 6\", \"23 - 7 - 5\", \"51\"],[\"36\", \"27\", \"calgary flames\", \"1 - 2\", \"23 - 8 - 5\", \"51\"],[\"37\", \"28\", \"edmonton oilers\", \"2 - 1\", \"24 - 8 - 5\", \"53\"],[\"38\", \"30\", \"minnesota north stars\", \"5 - 6\", \"24 - 9 - 5\", \"53\"]]\nQuestion = Is it true that on december 14th , the record is 21 - 6 - 5?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"december\")\n    records = get_column_by_name(table_data, \"record\")\n    for date, record in zip(dates, records):\n        if date == \"14\":\n            answer = equal_to(record, \"21 - 6 - 5\")\n            break \n    return answer\n\n### END"}
{"id": "cb472916-f1e8-43c0-be38-eef5d7c6fc19", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = comparison of e - book formats\ntable_data = [[\"format\", \"filename extension\", \"image support\", \"interactivity support\", \"word wrap support\", \"open standard\"],[\"djvu\", \"djvu\", \"yes\", \"no\", \"no\", \"yes\"],[\"epub (idpf)\", \"epub\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"fictionbook\", \"fb2\", \"yes\", \"no\", \"yes\", \"yes\"],[\"html\", \"html\", \"yes\", \"no\", \"yes\", \"yes\"],[\"kindle\", \"azw\", \"yes\", \"yes\", \"yes\", \"no\"],[\"microsoft reader\", \"lit\", \"yes\", \"no\", \"yes\", \"no\"],[\"mobipocket\", \"prc , mobi\", \"yes\", \"yes\", \"yes\", \"no\"],[\"multimedia ebook\", \"exe\", \"yes\", \"yes\", \"no\", \"yes\"],[\"newton book\", \"pkg\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ereader\", \"pdb\", \"yes\", \"no\", \"yes\", \"no\"],[\"plain text\", \"txt\", \"no\", \"no\", \"yes\", \"yes\"],[\"plucker\", \"pdb\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"portable document format\", \"pdf\", \"yes\", \"yes\", \"yes though not all readers implement support\", \"yes\"],[\"postscript\", \"ps\", \"yes\", \"no\", \"no\", \"yes\"],[\"tome raider\", \"tr2 , tr3\", \"yes\", \"no\", \"yes\", \"no\"],[\"openxps\", \"oxps , xps\", \"yes\", \"no\", \"no\", \"yes\"]]\nQuestion = Is it true that fictionbook is not open standard?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    formats = get_column_by_name(table_data, \"format\")\n    open_standards = get_column_by_name(table_data, \"open standard\")\n    for format, open_standard in zip(formats, open_standards):\n        if format.lower() == \"fictionbook\":\n            answer = open_standard.lower() == \"no\"\n            break\n    return answer\n\n### END"}
{"id": "109219e8-7a3c-4316-95df-82509964fe16", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = los angeles lakers all - time roster\ntable_data = [[\"player\", \"nationality\", \"position\", \"from\", \"school / country\"],[\"bo lamar\", \"united states\", \"guard\", \"1977\", \"louisiana - lafayette\"],[\"jeff lamp\", \"united states\", \"guard / forward\", \"1987\", \"virginia\"],[\"mark landsberger\", \"united states\", \"forward / center\", \"1979\", \"arizona state\"],[\"stu lantz\", \"united states\", \"guard\", \"1974\", \"nebraska\"],[\"rudy larusso\", \"united states\", \"forward / center\", \"1959\", \"dartmouth\"],[\"butch lee\", \"united states\", \"guard\", \"1979\", \"marquette\"],[\"slick leonard\", \"united states\", \"guard\", \"1956\", \"indiana\"],[\"ronnie lester\", \"united states\", \"guard\", \"1984\", \"iowa\"],[\"stan love\", \"united states\", \"forward\", \"1973\", \"oregon\"],[\"clyde lovellette\", \"united states\", \"forward / center\", \"1953\", \"kansas\"],[\"maurice lucas\", \"united states\", \"forward / center\", \"1985\", \"marquette\"],[\"tyronn lue\", \"united states\", \"guard\", \"1998\", \"nebraska\"],[\"george lynch\", \"united states\", \"forward\", \"1993\", \"north carolina\"],[\"mike lynn\", \"united states\", \"forward\", \"1969\", \"ucla\"]]\nQuestion = Is it true that jeff lamp , who played in 1987 , was a guard?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef in_string(str1, str2):\n    return str1 in str2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    positions = get_column_by_name(table_data, \"position\")\n    years = get_column_by_name(table_data, \"from\")\n    for player, position, year in zip(players, positions, years):\n        if player.lower() == \"jeff lamp\" and year == \"1987\":\n            answer = in_string(\"guard\", position.lower())\n            break \n    return answer\n\n### END"}
{"id": "3afabe65-361e-495d-b97e-182568633953", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = hey venus!\ntable_data = [[\"region\", \"date\", \"label\", \"format\", \"catalogue\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"vinyl record\", \"rtradlp 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"compact disc\", \"rtradcd 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"download\", \"-\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"vinyl record\", \"rt - 346 - 1\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"download\", \"rt - 346 - 5\"],[\"united states\", \"22 january 2008\", \"rough trade america\", \"double compact disc\", \"rtradcd 423\"],[\"japan\", \"12 september 2007\", \"rough trade japan\", \"compact disc\", \"xqcy - 1003\"]]\nQuestion = Is it true that the rough trade america label released in japan the download format?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    regions = get_column_by_name(table_data, \"region\")\n    labels = get_column_by_name(table_data, \"label\")\n    formats = get_column_by_name(table_data, \"format\")\n    answer = False\n    for region, label, format in zip(regions, labels, formats):\n        if region.lower() == \"japan\" and label.lower() == \"rough trade america\" and format.lower() == \"download\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "d11a8116-553e-4d8a-ad95-f0ce8731bc45", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = dock jumping\ntable_data = [[\"date\", \"distance\", \"handler\", \"event\", \"location\"],[\"7 july 2000\", \"ft4in (m)\", \"beth gutteridge\", \"espn great outdoor games\", \"lake placid , ny\"],[\"8 july 2001\", \"ft1in (m)\", \"mike wallace\", \"espn great outdoor games\", \"lake placid , ny\"],[\"20 february 2002\", \"ft3in (m)\", \"mike jackson\", \"indianapolis boat , sport & travel show\", \"indianapolis , in\"],[\"1 may 2002\", \"ft4in (m)\", \"john kline\", \"espn2 super retriever series\", \"northfield , mn\"],[\"6 july 2002\", \"ft6in (m)\", \"mike jackson\", \"espn great outdoor games\", \"lake placid , ny\"],[\"7 august 2005\", \"ft5in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"21 august 2005\", \"ft7in (m)\", \"kevin meese\", \"big nickle time cabela 's\", \"hamburg , pa\"],[\"9 october 2005\", \"ft10in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"30 may 2010\", \"ft11.59in (m)\", \"rande murphy\", \"super retriever series crown championship\", \"little rock , ar\"],[\"11 july 2010\", \"ft1in (m)\", \"melissa ness\", \"2010 ukc premier\", \"richmond , in\"],[\"29 may 2011\", \"ft7in (m)\", \"tony lampert\", \"super retriever series crown championship\", \"little rock , ar\"],[\"07 oct 2011\", \"ft11in (m)\", \"tony lampert\", \"david letterman show , october 7 2011\", \"new york , ny\"]]\nQuestion = Is it true that the distance bass pro shops event has is ft7in (m) / ft11in (m)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    distances = get_column_by_name(table_data, \"distance\")\n    answer = False\n    for event, distance in zip(events, distances):\n        if \"bass pro shops\" in event.lower():\n            if equal_to(distance, \"ft7in (m)\") or equal_to(distance, \"ft11in (m)\"):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "0652966c-da53-4ab6-ad3f-4a3e74503925", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = good news network\ntable_data = [[\"call sign\", \"frequency mhz\", \"city of license\", \"erp w\", \"class\", \"fcc info\"],[\"wlpe\", \"91.7\", \"augusta , ga\", \"1150\", \"a\", \"fcc\"],[\"wgph\", \"91.5\", \"vidalia , ga\", \"31000\", \"c2\", \"fcc\"],[\"wwgf\", \"107.5\", \"donalsonville , ga\", \"6000\", \"a\", \"fcc\"],[\"wpwb\", \"90.5\", \"byron , ga\", \"16500\", \"c2\", \"fcc\"],[\"wlpf\", \"98.5\", \"ocilla , ga\", \"2300\", \"a\", \"fcc\"],[\"wziq\", \"106.5\", \"smithville , ga\", \"2450\", \"a\", \"fcc\"],[\"wlpg\", \"91.7\", \"florence , sc\", \"20000\", \"c2\", \"fcc\"],[\"wpma\", \"102.7\", \"greensboro , ga\", \"7500\", \"c3\", \"fcc\"],[\"wthp\", \"94.3\", \"gibson , ga\", \"6300\", \"c3\", \"fcc\"],[\"wlpt\", \"88.3\", \"jesup , ga\", \"20000\", \"c1\", \"fcc\"],[\"wsja\", \"91.3\", \"york , al\", \"5000\", \"a\", \"fcc\"],[\"wlgp\", \"100.3\", \"jacksonville , nc\", \"100000\", \"c1\", \"fcc\"]]\nQuestion = Is it true that call sign wpwb using a 90.5 frequency mhz was licensed in the city of byron , ga?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    call_signs = get_column_by_name(table_data, \"call sign\")\n    frequencies = get_column_by_name(table_data, \"frequency mhz\")\n    cities = get_column_by_name(table_data, \"city of license\")\n    answer = False\n    for call_sign, frequency, city in zip(call_signs, frequencies, cities):\n        if call_sign.lower() == \"wpwb\" and frequency == \"90.5\" and city.lower() == \"byron , ga\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "cb97f271-7da6-4876-b3c1-e8f35c282597", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of make it or break it episodes\ntable_data = [[\"series\",\"season\",\"title\",\"directed by\",\"written by\",\"original air date\",\"us viewers (in millions)\"],[\"21\",\"1\",\"friends close , enemies closer\",\"patrick norris\",\"joanna johnson\",\"june 28 , 2010\",\"1.83\"],[\"22\",\"2\",\"all or nothing\",\"fred gerber\",\"kerry lenhart & john j sakmar\",\"july 5 , 2010\",\"1.72\"],[\"23\",\"3\",\"battle of the flexes\",\"j miller tobin\",\"amy turner\",\"july 13 , 2010\",\"1.56\"],[\"24\",\"4\",\"and the rocky goes to\",\"bethany rooney\",\"holly sorensen\",\"july 20 , 2010\",\"1.46\"],[\"25\",\"5\",\"i won't dance , don't ask me\",\"david paymer\",\"michael gans & richard register\",\"july 27 , 2010\",\"1.66\"],[\"26\",\"6\",\"party gone out of bounds\",\"felix alcala\",\"joanna johnson\",\"august 3 , 2010\",\"1.75\"],[\"27\",\"7\",\"what are you made of\",\"glenn l steelman\",\"holly sorensen\",\"august 10 , 2010\",\"1.56\"],[\"28\",\"8\",\"rock bottom\",\"chris grismer\",\"liz maccie\",\"august 17 , 2010\",\"1.30\"],[\"29\",\"9\",\"if only\",\"david paymer\",\"michael gans & richard register\",\"august 24 , 2010\",\"1.42\"],[\"30\",\"10\",\"the edge of the worlds\",\"chris grismer\",\"kerry lenhart & john j sakmar\",\"august 31 , 2010\",\"1.44\"],[\"31\",\"11\",\"the new normal\",\"michael lange\",\"holly sorensen\",\"march 28 , 2011\",\"2.06\"],[\"32\",\"12\",\"free people\",\"fred gerber\",\"joanna johnson\",\"april 4 , 2011\",\"1.69\"],[\"33\",\"13\",\"the buddy system\",\"glenn l steelman\",\"amy turner\",\"april 11 , 2011\",\"1.64\"],[\"34\",\"14\",\"life or death\",\"david paymer\",\"michael gans & richard register\",\"april 18 , 2011\",\"1.58\"],[\"35\",\"15\",\"hungary heart\",\"rod hardy\",\"kerry lenhart & john j sakmar\",\"april 25 , 2011\",\"1.64\"],[\"36\",\"16\",\"requiem for a dream\",\"michael schultz\",\"holly sorenson\",\"may 2 , 2011\",\"1.65\"],[\"37\",\"17\",\"to thine own self be true\",\"john behring\",\"liz maccie\",\"may 9 , 2011\",\"1.51\"],[\"38\",\"18\",\"dog eat dog\",\"chris grismer\",\"michael gans & richard register\",\"may 16 , 2011\",\"1.64\"],[\"39\",\"19\",\"what lies beneath\",\"david paymer\",\"joanna johnson\",\"may 23 , 2011\",\"1.49\"]]\nQuestion = Is it true that the episode if only had 1.42 million viewers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    viewers = get_column_by_name(table_data, \"us viewers (in millions)\")\n    for title, viewer in zip(titles, viewers):\n        if title.lower() == \"if only\":\n            answer = equal_to(viewer, \"1.42\")\n            break \n    return answer\n\n### END"}
{"id": "1ec40497-0cec-4907-a4b7-e73bd61131a7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = anna kournikova career statistics\ntable_data = [[\"outcome\", \"year\", \"championship\", \"surface\", \"partner\", \"opponents in final\", \"score in final\"],[\"winners\", \"1999\", \"indian wells\", \"hard\", \"martina hingis\", \"mary joe fernández jana novotná\", \"6 - 2 , 6 - 2\"],[\"winners\", \"1999\", \"rome\", \"clay\", \"martina hingis\", \"alexandra fusai nathalie tauziat\", \"6 - 2 , 6 - 2\"],[\"runner - up\", \"2000\", \"indian wells\", \"hard\", \"natasha zvereva\", \"lindsay davenport corina morariu\", \"6 - 3 , 6 - 2\"],[\"runner - up\", \"2000\", \"moscow\", \"carpet\", \"martina hingis\", \"julie halard - decugis ai sugiyama\", \"4 - 6 , 6 - 4 , 7 - 6 (7 - 5)\"],[\"winners\", \"2000\", \"zürich\", \"carpet\", \"martina hingis\", \"kimberly po anne - gaëlle sidot\", \"6 - 3 , 6 - 4\"],[\"runner - up\", \"2001\", \"tokyo\", \"hard\", \"iroda tulyaganova\", \"lisa raymond rennae stubbs\", \"7 - 6 (7 - 5) , 6 - 2 , 7 - 6 (8 - 6)\"]]\nQuestion = Is it true that in 1999 , in rome , she and martina hingis defeated alexandra fusai and nathalie tauziat in the women 's doubles finals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    championships = get_column_by_name(table_data, \"championship\")\n    partners = get_column_by_name(table_data, \"partner\")\n    opponents = get_column_by_name(table_data, \"opponents in final\")\n    answer = False\n    for year, championship, partner, opponent in zip(years, championships, partners, opponents):\n        if year == \"1999\" and championship.lower() == \"rome\" and partner.lower() == \"martina hingis\" and \"alexandra fusai\" in opponent.lower() and \"nathalie tauziat\" in opponent.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "47e4ae06-9a64-44fc-9495-1035e455be8e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = radio iq\ntable_data = [[\"call sign\", \"frequency mhz\", \"city of license\", \"erp w\", \"class\", \"fcc info\"],[\"wvtw\", \"88.5\", \"charlottesville , virginia\", \"1000\", \"b1\", \"fcc\"],[\"wffc\", \"89.9\", \"ferrum , virginia\", \"1100\", \"a\", \"fcc\"],[\"wqiq\", \"88.3\", \"spotsylvania , virginia\", \"3500\", \"a\", \"fcc\"],[\"wriq\", \"88.7\", \"lexington , virginia\", \"3900\", \"a\", \"fcc\"],[\"wwvt\", \"1260\", \"christiansburg , virginia\", \"5000 day 25 night\", \"d\", \"fcc\"]]\nQuestion = Is it true that the total frequecy in mhz of radio stations with a class a license is 160.4?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency mhz\")\n    classes = get_column_by_name(table_data, \"class\")\n    total_frequency = 0\n    for frequency, class_ in zip(frequencies, classes):\n        if class_.lower() == \"a\":\n            total_frequency += float(frequency)\n    answer = equal_to(total_frequency, 160.4)\n    return answer\n\n### END"}
{"id": "9caffb9d-72d1-490c-8cab-9020eb4023f5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2011 the dominion tankard\ntable_data = [[\"skip (club)\", \"w\", \"l\", \"pf\", \"pa\", \"ends won\", \"ends lost\", \"blank ends\", \"stolen ends\"],[\"peter corner (brampton)\", \"8\", \"2\", \"69\", \"54\", \"41\", \"36\", \"8\", \"11\"],[\"glenn howard (coldwater)\", \"8\", \"2\", \"79\", \"35\", \"40\", \"22\", \"8\", \"11\"],[\"greg balsdon (loonie)\", \"7\", \"3\", \"80\", \"57\", \"46\", \"37\", \"5\", \"12\"],[\"john epping (donalda)\", \"7\", \"3\", \"76\", \"64\", \"43\", \"41\", \"5\", \"10\"],[\"mark bice (sarnia)\", \"6\", \"4\", \"70\", \"76\", \"45\", \"44\", \"8\", \"7\"],[\"chris gardner (renfrew)\", \"5\", \"5\", \"73\", \"72\", \"47\", \"41\", \"7\", \"16\"],[\"dale matchett (bradford)\", \"4\", \"6\", \"57\", \"75\", \"35\", \"42\", \"7\", \"7\"],[\"mark kean (annandale)\", \"3\", \"7\", \"53\", \"67\", \"43\", \"35\", \"12\", \"8\"],[\"howard rajala (rideau)\", \"3\", \"7\", \"67\", \"71\", \"43\", \"48\", \"5\", \"9\"],[\"nick rizzo (brantford)\", \"3\", \"7\", \"56\", \"74\", \"35\", \"42\", \"4\", \"5\"]]\nQuestion = Is it true that 72 is the pa when the pf is 73?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    pf = get_column_by_name(table_data, \"pf\")\n    pa = get_column_by_name(table_data, \"pa\")\n    for pf_value, pa_value in zip(pf, pa):\n        if equal_to(pf_value, \"73\") and equal_to(pa_value, \"72\"):\n            return True\n    return False\n\n### END"}
{"id": "0993e93d-f4c0-40a4-b27f-e0a22152fa88", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1981 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"footscray\", \"10.14 (74)\", \"hawthorn\", \"11.18 (84)\", \"western oval\", \"13789\", \"23 may 1981\"],[\"fitzroy\", \"13.15 (93)\", \"geelong\", \"16.18 (114)\", \"junction oval\", \"15604\", \"23 may 1981\"],[\"carlton\", \"25.22 (172)\", \"south melbourne\", \"11.7 (73)\", \"princes park\", \"22445\", \"23 may 1981\"],[\"melbourne\", \"10.10 (70)\", \"essendon\", \"14.20 (104)\", \"mcg\", \"31769\", \"23 may 1981\"],[\"north melbourne\", \"12.26 (98)\", \"collingwood\", \"16.15 (111)\", \"arden street oval\", \"24625\", \"23 may 1981\"],[\"richmond\", \"20.16 (136)\", \"st kilda\", \"15.15 (105)\", \"vfl park\", \"40240\", \"23 may 1981\"]]\nQuestion = Is it true that north melbourne was the team that played against st kilda?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    answer = False\n    for home_team, away_team in zip(home_teams, away_teams):\n        if \"north melbourne\" in home_team.lower() and \"st kilda\" in away_team.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "9fd40f15-caf6-4916-89d5-c4a1e939b472", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = colin morgan\ntable_data = [[\"year\", \"award\", \"category\", \"role\", \"result\"],[\"2008\", \"variety club showbiz awards\", \"outstanding newcomer\", \"merlin in merlin\", \"won\"],[\"2009\", \"monte carlo tv festival awards\", \"outstanding actor (drama)\", \"merlin in merlin\", \"nominated\"],[\"2010\", \"monte carlo tv festival awards\", \"outstanding actor (drama)\", \"merlin in merlin\", \"nominated\"],[\"2011\", \"monte carlo tv festival awards\", \"outstanding actor (drama)\", \"merlin in merlin\", \"nominated\"],[\"2012\", \"virgin media tv awards\", \"best actor\", \"merlin in merlin\", \"won\"],[\"2013\", \"national television award\", \"drama performance : male\", \"merlin in merlin\", \"won\"]]\nQuestion = Is it true that the monte carlo tv festival awards awarded outstanding actor (drama) between 2009 and 2012?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    awards = get_column_by_name(table_data, \"award\")\n    results = get_column_by_name(table_data, \"result\")\n    answer = False\n    for year, award, result in zip(years, awards, results):\n        if int(year) >= 2009 and int(year) <= 2012 and award.lower() == \"monte carlo tv festival awards\" and result.lower() == \"won\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "c3c03408-39db-4e13-b7f4-d4ce7ddfb33c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of quadrangles on mercury\ntable_data = [[\"name\",\"number\",\"namesake\",\"albedo feature name\",\"area\",\"current map\"],[\"borealis\",\"h - 1\",\"borealis planitia\",\"borea\",\"north pole to 67 degree latitude\",\"h - 1\"],[\"victoria\",\"h - 2\",\"victoria rupes\",\"aurora\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 2\"],[\"shakespeare\",\"h - 3\",\"shakespeare crater\",\"caduceata\",\"90 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 3\"],[\"raditladi\",\"h - 4\",\"raditladi basin\",\"liguria\",\"270 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 4\"],[\"hokusai\",\"h - 5\",\"hokusai crater\",\"apollonia\",\"360 to 270 degree longitude , 21 to 66 degree latitude\",\"h - 5\"],[\"kuiper\",\"h - 6\",\"kuiper crater\",\"tricrena\",\"0 to 72 degree longitude , 22 to 22 degree latitude\",\"h - 6\"],[\"beethoven\",\"h - 7\",\"beethoven crater\",\"solitudo lycaonis\",\"72 to 144 degree longitude , 22 to 22 degree latitude\",\"h - 7\"],[\"tolstoj\",\"h - 8\",\"tolstoj crater\",\"phaethontias\",\"144 to 216 degree longitude , 22 to 22 degree latitude\",\"h - 8\"],[\"eminescu\",\"h - 9\",\"eminescu crater\",\"solitudo criophori\",\"216 to 288 degree longitude , 22 to 22 degree latitude\",\"h - 9\"],[\"derain\",\"h - 10\",\"derain crater\",\"pieria\",\"288 to 360 degree longitude , - 22 to 22 degree latitude\",\"h - 10\"],[\"discovery\",\"h - 11\",\"discovery rupes\",\"solitudo hermae trismegisti\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 11\"],[\"michelangelo\",\"h - 12\",\"michelangelo crater\",\"solitudo promethei\",\"90 to 180 degree longitude , 21 to - 66 degree latitude\",\"h - 12\"],[\"neruda\",\"h - 13\",\"neruda crater\",\"solitudo persephones\",\"180 to 270 degree longitude , 21 to - 66 degree latitude\",\"h - 13\"],[\"debussy\",\"h - 14\",\"debussy crater\",\"cyllene\",\"270 to 360 degree longitude , 21 to 66 degree latitude\",\"h - 14\"],[\"bach\",\"h - 15\",\"bach crater\",\"australia\",\"south pole to 67 degree latitude\",\"h - 15\"]]\nQuestion = Is it true that derain is the only name with a namesake?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    namesakes = get_column_by_name(table_data, \"namesake\")\n    answer = \"derain\" in names and \"derain\" not in namesakes\n    return not answer\n\n### END"}
{"id": "c3ee4c14-5727-42b6-acd9-6c86fee9c339", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = gambrinus liga\ntable_data = [[\"season\", \"champions\", \"runner - up\", \"third place\", \"top goalscorer\", \"club\"],[\"1993 - 94\", \"sparta prague (1)\", \"slavia prague\", \"baník ostrava\", \"horst siegl (20)\", \"sparta prague\"],[\"1994 - 95\", \"sparta prague (2)\", \"slavia prague\", \"fc brno\", \"radek drulák (15)\", \"drnovice\"],[\"1995 - 96\", \"slavia prague (1)\", \"sigma olomouc\", \"baumit jablonec\", \"radek drulák (22)\", \"drnovice\"],[\"1996 - 97\", \"sparta prague (3)\", \"slavia prague\", \"baumit jablonec\", \"horst siegl (19)\", \"sparta prague\"],[\"1997 - 98\", \"sparta prague (4)\", \"slavia prague\", \"sigma olomouc\", \"horst siegl (13)\", \"sparta prague\"],[\"1998 - 99\", \"sparta prague (5)\", \"teplice\", \"slavia prague\", \"horst siegl (18)\", \"sparta prague\"],[\"1999 - 00\", \"sparta prague (6)\", \"slavia prague\", \"drnovice\", \"vratislav lokvenc (21)\", \"sparta prague\"],[\"2000 - 01\", \"sparta prague (7)\", \"slavia prague\", \"sigma olomouc\", \"vítězslav tuma (15)\", \"drnovice\"],[\"2001 - 02\", \"slovan liberec (1)\", \"sparta prague\", \"viktoria žižkov\", \"jiří štajner (15)\", \"slovan liberec\"],[\"2002 - 03\", \"sparta prague (8)\", \"slavia prague\", \"viktoria žižkov\", \"jiří kowalík (16)\", \"1. fc synot\"],[\"2003 - 04\", \"baník ostrava (1)\", \"sparta prague\", \"sigma olomouc\", \"marek heinz (19)\", \"baník ostrava\"],[\"2004 - 05\", \"sparta prague (9)\", \"slavia prague\", \"teplice\", \"tomáš jun (14)\", \"sparta prague\"],[\"2005 - 06\", \"slovan liberec (2)\", \"mladá boleslav\", \"slavia prague\", \"milan ivana (11)\", \"fc slovácko\"],[\"2006 - 07\", \"sparta prague (10)\", \"slavia prague\", \"mladá boleslav\", \"luboš pecka (16)\", \"mladá boleslav\"],[\"2007 - 08\", \"slavia prague (2)\", \"sparta prague\", \"baník ostrava\", \"václav svěrkoš (15)\", \"baník ostrava\"],[\"2008 - 09\", \"slavia prague (3)\", \"sparta prague\", \"slovan liberec\", \"andrej kerić (15)\", \"slovan liberec\"],[\"2009 - 10\", \"sparta prague (11)\", \"jablonec\", \"baník ostrava\", \"michal ordoš (12)\", \"sigma olomouc\"],[\"2010 - 11\", \"viktoria plzeň (1)\", \"sparta prague\", \"jablonec\", \"david lafata (19)\", \"jablonec\"],[\"2011 - 12\", \"slovan liberec (3)\", \"sparta prague\", \"viktoria plzeň\", \"david lafata (25)\", \"jablonec\"]]\nQuestion = Is it true that the top goal scorer for the season 2010 - 2011 was david lafata?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    top_goalscorers = get_column_by_name(table_data, \"top goalscorer\")\n    for season, top_goalscorer in zip(seasons, top_goalscorers):\n        if season == \"2010 - 11\":\n            answer = equal_to(top_goalscorer, \"david lafata (19)\")\n            break \n    return answer\n\n### END"}
{"id": "51477783-5add-4b27-a834-277fabe990cc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = peaches & herb\ntable_data = [[\"title\", \"label\", \"year of release\", \"country of release\", \"peaches :\"],[\"for your love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"let 's fall in love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"peaches & herb\", \"mca\", \"1977\", \"usa\", \"linda greene\"],[\"2 hot\", \"mvp / polydor\", \"1978\", \"usa\", \"linda greene\"],[\"twice the fire\", \"mvp / polydor\", \"1979\", \"usa\", \"linda greene\"],[\"demasiado candente\", \"mvp / polydor\", \"1979\", \"argentina\", \"linda greene\"],[\"worth the wait\", \"mvp / polydor\", \"1980\", \"usa\", \"linda greene\"],[\"sayin' something\", \"mvp / polydor\", \"1981\", \"usa\", \"linda greene\"],[\"remember\", \"the entertainment co / columbia\", \"1983\", \"usa\", \"linda greene\"],[\"colors of love\", \"imagen\", \"2009\", \"usa\", \"meritxell negre\"]]\nQuestion = Is it true that linda greene is the peaches for the title sayin' something that was released in the usa in 1981?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    countries = get_column_by_name(table_data, \"country of release\")\n    years = get_column_by_name(table_data, \"year of release\")\n    peaches = get_column_by_name(table_data, \"peaches :\")\n    for title, country, year, peach in zip(titles, countries, years, peaches):\n        if title.lower() == \"sayin' something\" and country.lower() == \"usa\" and year == \"1981\":\n            answer = equal_to(peach.lower(), \"linda greene\")\n            break \n    return answer\n\n### END"}
{"id": "bcc6cdf6-3679-4bbd-9b8b-46a52623c081", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = dock jumping\ntable_data = [[\"date\", \"distance\", \"handler\", \"event\", \"location\"],[\"7 july 2000\", \"ft4in (m)\", \"beth gutteridge\", \"espn great outdoor games\", \"lake placid , ny\"],[\"8 july 2001\", \"ft1in (m)\", \"mike wallace\", \"espn great outdoor games\", \"lake placid , ny\"],[\"20 february 2002\", \"ft3in (m)\", \"mike jackson\", \"indianapolis boat , sport & travel show\", \"indianapolis , in\"],[\"1 may 2002\", \"ft4in (m)\", \"john kline\", \"espn2 super retriever series\", \"northfield , mn\"],[\"6 july 2002\", \"ft6in (m)\", \"mike jackson\", \"espn great outdoor games\", \"lake placid , ny\"],[\"7 august 2005\", \"ft5in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"21 august 2005\", \"ft7in (m)\", \"kevin meese\", \"big nickle time cabela 's\", \"hamburg , pa\"],[\"9 october 2005\", \"ft10in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"30 may 2010\", \"ft11.59in (m)\", \"rande murphy\", \"super retriever series crown championship\", \"little rock , ar\"],[\"11 july 2010\", \"ft1in (m)\", \"melissa ness\", \"2010 ukc premier\", \"richmond , in\"],[\"29 may 2011\", \"ft7in (m)\", \"tony lampert\", \"super retriever series crown championship\", \"little rock , ar\"],[\"07 oct 2011\", \"ft11in (m)\", \"tony lampert\", \"david letterman show , october 7 2011\", \"new york , ny\"]]\nQuestion = Is it true that mike jackson was a handler at the indianapolis boat , sport & travel show on 8 july 2001?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    handlers = get_column_by_name(table_data, \"handler\")\n    events = get_column_by_name(table_data, \"event\")\n    answer = False\n    for date, handler, event in zip(dates, handlers, events):\n        if \"8 july 2001\" in date.lower() and \"mike jackson\" in handler.lower() and \"indianapolis boat , sport & travel show\" in event.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "edf4c246-a0c7-48bf-b899-c3aac0e3c456", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1926 grand prix season\ntable_data = [[\"name\", \"circuit\", \"date\", \"winning drivers\", \"winning constructor\", \"report\"],[\"indianapolis 500\", \"indianapolis\", \"31 may\", \"frank lockhart\", \"miller\", \"report\"],[\"french grand prix\", \"miramas\", \"27 june\", \"jules goux\", \"bugatti\", \"report\"],[\"san sebastián grand prix / european grand prix\", \"lasarte\", \"18 july\", \"jules goux\", \"bugatti\", \"report\"],[\"british grand prix\", \"brooklands\", \"7 august\", \"robert sénéchal louis wagner\", \"delage\", \"report\"],[\"italian grand prix\", \"monza\", \"5 september\", \"louis charavel\", \"bugatti\", \"report\"]]\nQuestion = Is it true that for the italian grand prix at the monza circuit , bugatti was the winning constructor?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    circuits = get_column_by_name(table_data, \"circuit\")\n    constructors = get_column_by_name(table_data, \"winning constructor\")\n    for name, circuit, constructor in zip(names, circuits, constructors):\n        if name.lower() == \"italian grand prix\" and circuit.lower() == \"monza\":\n            answer = equal_to(constructor.lower(), \"bugatti\")\n            break \n    return answer\n\n### END"}
{"id": "a83ef676-643e-424c-b44d-b3a83ed404e1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = badminton at the 1992 summer olympics\ntable_data = [[\"rank\", \"nation\", \"gold\", \"silver\", \"bronze\", \"total\"],[\"1\", \"indonesia\", \"2\", \"2\", \"1\", \"5\"],[\"2\", \"south korea\", \"2\", \"1\", \"1\", \"4\"],[\"3\", \"china\", \"0\", \"1\", \"4\", \"5\"],[\"4\", \"denmark\", \"0\", \"0\", \"1\", \"1\"],[\"5\", \"malaysia\", \"0\", \"0\", \"1\", \"1\"]]\nQuestion = Is it true that the was silver won by the country with zero bronze medals and a rank of 3rd?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    silvers = get_column_by_name(table_data, \"silver\")\n    bronzes = get_column_by_name(table_data, \"bronze\")\n    for rank, silver, bronze in zip(ranks, silvers, bronzes):\n        if equal_to(rank, \"3\") and equal_to(bronze, \"0\") and not equal_to(silver, \"0\"):\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "090eb28a-3808-40bf-991c-d94afc69381f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = anna kournikova career statistics\ntable_data = [[\"outcome\", \"year\", \"championship\", \"surface\", \"partner\", \"opponents in final\", \"score in final\"],[\"winners\", \"1999\", \"indian wells\", \"hard\", \"martina hingis\", \"mary joe fernández jana novotná\", \"6 - 2 , 6 - 2\"],[\"winners\", \"1999\", \"rome\", \"clay\", \"martina hingis\", \"alexandra fusai nathalie tauziat\", \"6 - 2 , 6 - 2\"],[\"runner - up\", \"2000\", \"indian wells\", \"hard\", \"natasha zvereva\", \"lindsay davenport corina morariu\", \"6 - 3 , 6 - 2\"],[\"runner - up\", \"2000\", \"moscow\", \"carpet\", \"martina hingis\", \"julie halard - decugis ai sugiyama\", \"4 - 6 , 6 - 4 , 7 - 6 (7 - 5)\"],[\"winners\", \"2000\", \"zürich\", \"carpet\", \"martina hingis\", \"kimberly po anne - gaëlle sidot\", \"6 - 3 , 6 - 4\"],[\"runner - up\", \"2001\", \"tokyo\", \"hard\", \"iroda tulyaganova\", \"lisa raymond rennae stubbs\", \"7 - 6 (7 - 5) , 6 - 2 , 7 - 6 (8 - 6)\"]]\nQuestion = Is it true that at the championship in rome , the partner was martina hingis and the year was 2001?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    championships = get_column_by_name(table_data, \"championship\")\n    partners = get_column_by_name(table_data, \"partner\")\n    for year, championship, partner in zip(years, championships, partners):\n        if championship.lower() == \"rome\" and partner.lower() == \"martina hingis\":\n            answer = equal_to(year, \"2001\")\n            break \n    return answer\n\n### END"}
{"id": "6ed9b219-53ce-4100-94b4-d8d08ef9e4c5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = usa today all - usa high school baseball team\ntable_data = [[\"player\",\"position\",\"school\",\"hometown\",\"mlb draft\"],[\"delmon young\",\"outfielder\",\"camarillo high school\",\"camarillo, ca\",\"1st round - 1st pick of 2003 draft ( devil rays )\"],[\"chris lubanski\",\"outfielder\",\"kennedy - kenrick catholic high school\",\"norristown, pa\",\"1st round - 5th pick of 2003 draft ( royals )\"],[\"lastings milledge\",\"outfielder\",\"lakewood ranch high school\",\"bradenton, fl\",\"1st round - 12th pick of 2003 draft ( mets )\"],[\"brandon wood\",\"infielder\",\"horizon high school\",\"scottsdale, az\",\"1st round - 23rd pick of 2003 draft ( angels )\"],[\"john danks\",\"pitcher\",\"round rock high school\",\"round rock, tx\",\"1st round - 9th pick of 2003 draft ( rangers )\"],[\"jonathan fulton\",\"infielder\",\"george washington high school\",\"danville, va\",\"3rd round - 83rd pick of 2003 draft ( marlins )\"],[\"ian stewart\",\"infielder\",\"la quinta high school\",\"westminster, ca\",\"1st round - 10th pick of 2003 draft ( rockies )\"],[\"jeff allison\",\"pitcher\",\"veterans memorial high school\",\"peabody, ma\",\"1st round - 16th pick of 2003 draft ( marlins )\"],[\"daric barton\",\"catcher\",\"marina high school\",\"huntington beach, ca\",\"1st round - 28th pick of 2003 draft ( cardinals )\"],[\"eric duncan\",\"infielder\",\"seton hall preparatory school\",\"west orange, nj\",\"1st round - 27th pick of 2003 draft ( yankees )\"]]\nQuestion = Is it true that chris lubanski attended camarillo high school?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    schools = get_column_by_name(table_data, \"school\")\n    for player, school in zip(players, schools):\n        if player.lower() == \"chris lubanski\":\n            answer = school.lower() == \"camarillo high school\"\n            break\n    return answer\n\n### END"}
{"id": "b7e95a04-2283-4ce4-b0a4-68d29d851476", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 boston celtics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"74\", \"april 1\", \"chicago\", \"106 - 92\", \"allen (22)\", \"perkins (9)\", \"rondo (10)\", \"united center 22225\", \"59 - 15\"],[\"75\", \"april 2\", \"indiana\", \"92 - 77\", \"garnett (20)\", \"garnett (11)\", \"rondo (6)\", \"td banknorth garden 18624\", \"60 - 15\"],[\"76\", \"april 5\", \"charlotte\", \"101 - 78\", \"powe (22)\", \"powe (9)\", \"rondo (5)\", \"charlotte bobcats arena 19403\", \"61 - 15\"],[\"77\", \"april 8\", \"milwaukee\", \"107 - 104 (ot)\", \"garnett (21)\", \"perkins (10)\", \"pierce (4)\", \"bradley center 15921\", \"62 - 15\"],[\"78\", \"april 9\", \"washington\", \"95 - 109\", \"pierce (28)\", \"garnett (14)\", \"pierce , rondo (7)\", \"verizon center 20173\", \"62 - 16\"],[\"79\", \"april 11\", \"milwaukee\", \"102 - 86\", \"rondo (16)\", \"garnett , posey (8)\", \"rondo (10)\", \"td banknorth garden 18624\", \"63 - 16\"],[\"80\", \"april 12\", \"atlanta\", \"99 - 89\", \"garnett (24)\", \"davis (10)\", \"cassell , rondo (5)\", \"philips arena 20098\", \"64 - 16\"],[\"81\", \"april 14\", \"new york\", \"99 - 93\", \"rondo (23)\", \"rondo (10)\", \"rondo (5)\", \"madison square garden 19763\", \"65 - 16\"],[\"82\", \"april 16\", \"new jersey\", \"105 - 94\", \"powe (27)\", \"powe (11)\", \"cassell (4)\", \"td banknorth garden 18624\", \"66 - 16\"]]\nQuestion = Is it true that the high assists garnett (5) and the high rebounds davis (10) was on april 9?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    high_rebounds = get_column_by_name(table_data, \"high rebounds\")\n    high_assists = get_column_by_name(table_data, \"high assists\")\n    for date, high_rebound, high_assist in zip(dates, high_rebounds, high_assists):\n        if date.lower() == \"april 9\":\n            answer = equal_to(high_rebound, \"davis (10)\") and equal_to(high_assist, \"garnett (5)\")\n            break \n    return answer\n\n### END"}
{"id": "18528fb8-dc50-44fb-b26a-d40fa8075030", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2006 cincinnati reds season\ntable_data = [[\"date\",\"opponent\",\"score\",\"loss\",\"attendance\",\"record\"],[\"august 1\",\"dodgers\",\"10 - 4\",\"bray (2 - 2)\",\"25127\",\"55 - 51\"],[\"august 2\",\"dodgers\",\"5 - 3\",\"ramírez (4 - 7)\",\"22110\",\"55 - 52\"],[\"august 3\",\"dodgers\",\"3 - 0\",\"milton (7 - 7)\",\"26053\",\"55 - 53\"],[\"august 4\",\"braves\",\"5 - 4\",\"james (4 - 3)\",\"33661\",\"56 - 53\"],[\"august 5\",\"braves\",\"8 - 6\",\"yates (1 - 2)\",\"33170\",\"57 - 53\"],[\"august 6\",\"braves\",\"6 - 4\",\"majewski (3 - 1)\",\"29660\",\"57 - 54\"],[\"august 7\",\"cardinals\",\"13 - 1\",\"ramírez (4 - 8)\",\"34262\",\"57 - 55\"],[\"august 8\",\"cardinals\",\"10 - 3\",\"marquis (12 - 10)\",\"40094\",\"58 - 55\"],[\"august 9\",\"cardinals\",\"8 - 7\",\"isringhausen (3 - 5)\",\"41649\",\"59 - 55\"],[\"august 10\",\"cardinals\",\"6 - 1\",\"arroyo (9 - 8)\",\"39591\",\"59 - 56\"],[\"august 11\",\"phillies\",\"6 - 5\",\"ramírez (4 - 9)\",\"41461\",\"59 - 57\"],[\"august 12\",\"phillies\",\"9 - 7\",\"gordon (3 - 0)\",\"39553\",\"60 - 57\"],[\"august 13\",\"phillies\",\"7 - 5\",\"madson (10 - 8)\",\"37677\",\"61 - 57\"],[\"august 15\",\"cardinals\",\"5 - 0\",\"harang (12 - 8)\",\"42761\",\"61 - 58\"],[\"august 16\",\"cardinals\",\"7 - 2\",\"reyes (4 - 6)\",\"42752\",\"62 - 58\"],[\"august 17\",\"cardinals\",\"2 - 1\",\"franklin (2 - 6)\",\"40346\",\"62 - 59\"],[\"august 18\",\"pirates\",\"7 - 3\",\"michalak (1 - 1)\",\"31718\",\"62 - 60\"],[\"august 19\",\"pirates\",\"14 - 7\",\"torres (3 - 6)\",\"34245\",\"63 - 60\"],[\"august 20\",\"pirates\",\"5 - 1\",\"santos (5 - 8)\",\"29935\",\"64 - 60\"],[\"august 21\",\"astros\",\"4 - 3\",\"qualls (4 - 3)\",\"24110\",\"65 - 60\"],[\"august 22\",\"astros\",\"14 - 0\",\"hirsh (1 - 2)\",\"22556\",\"66 - 60\"],[\"august 23\",\"astros\",\"7 - 3\",\"coffey (6 - 5)\",\"24873\",\"66 - 61\"],[\"august 24\",\"giants\",\"6 - 3\",\"chulk (0 - 2)\",\"38754\",\"67 - 61\"],[\"august 25\",\"giants\",\"4 - 1\",\"harang (13 - 9)\",\"37801\",\"67 - 62\"],[\"august 26\",\"giants\",\"4 - 1\",\"arroyo (10 - 9)\",\"41362\",\"67 - 63\"],[\"august 27\",\"giants\",\"8 - 0\",\"lohse (1 - 1)\",\"39097\",\"67 - 64\"],[\"august 28\",\"dodgers\",\"6 - 5\",\"michalak (1 - 2)\",\"44176\",\"67 - 65\"],[\"august 29\",\"dodgers\",\"6 - 5\",\"franklin (5 - 7)\",\"44697\",\"67 - 66\"],[\"august 30\",\"dodgers\",\"7 - 3\",\"harang (13 - 10)\",\"47356\",\"67 - 67\"]]\nQuestion = Is it true that on august 13 , phillies were the oponent , and the record was 61 - 57?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    records = get_column_by_name(table_data, \"record\")\n    for date, opponent, record in zip(dates, opponents, records):\n        if date.lower() == \"august 13\" and opponent.lower() == \"phillies\" and record == \"61 - 57\":\n            return True\n    return False\n\n### END"}
{"id": "aef97ebf-5975-4c86-b73d-842d7036a59a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1997 major league baseball draft\ntable_data = [[\"pick\", \"player\", \"team\", \"position\", \"school\"],[\"1\", \"matt anderson\", \"detroit tigers\", \"p\", \"rice university\"],[\"2\", \"jd drew\", \"philadelphia phillies\", \"of\", \"florida state university\"],[\"3\", \"troy glaus\", \"anaheim angels\", \"3b , p\", \"ucla\"],[\"4\", \"jason grilli\", \"san francisco giants\", \"p\", \"seton hall university\"],[\"5\", \"vernon wells\", \"toronto blue jays\", \"of\", \"bowie hs (arlington , texas)\"],[\"6\", \"geoff goetz\", \"new york mets\", \"p\", \"jesuit hs (tampa , florida)\"],[\"7\", \"dan reichert\", \"kansas city royals\", \"p\", \"university of the pacific\"],[\"8\", \"jj davis\", \"pittsburgh pirates\", \"of\", \"baldwin park hs (pomona , california)\"],[\"9\", \"michael cuddyer\", \"minnesota twins\", \"ss , p\", \"great bridge hs (chesapeake , virginia)\"],[\"10\", \"jon garland\", \"chicago cubs\", \"p\", \"kennedy hs (granada hills , california)\"],[\"11\", \"chris enochs\", \"oakland athletics\", \"p\", \"west virginia university\"],[\"12\", \"aaron akin\", \"florida marlins\", \"p\", \"cowley county community college\"],[\"13\", \"kyle peterson\", \"milwaukee brewers\", \"p\", \"stanford university\"],[\"14\", \"brandon larson\", \"cincinnati reds\", \"ss\", \"louisiana state university\"],[\"15\", \"jason dellaero\", \"chicago white sox\", \"ss , p\", \"university of south florida\"],[\"16\", \"lance berkman\", \"houston astros\", \"1b\", \"rice university\"],[\"17\", \"john curtice\", \"boston red sox\", \"p\", \"great bridge hs (chesapeake , virginia)\"],[\"18\", \"mark mangum\", \"colorado rockies\", \"p\", \"kingwood hs (kingwood , texas)\"],[\"19\", \"ryan anderson\", \"seattle mariners\", \"p\", \"divine child hs (westland , michigan)\"],[\"20\", \"adam kennedy\", \"st louis cardinals\", \"ss\", \"cal state northridge university\"],[\"21\", \"eric dubose\", \"oakland athletics\", \"p\", \"mississippi state university\"],[\"22\", \"jayson werth\", \"baltimore orioles\", \"c , of\", \"glenwood hs (chatham , illinois)\"],[\"23\", \"donnie bridges\", \"montreal expos\", \"p\", \"oak grove hs (hattiesburg , mississippi)\"],[\"24\", \"tyrell godwin\", \"new york yankees\", \"of\", \"east bladen hs (elizabethtown , north carolina)\"],[\"25\", \"glenn davis\", \"los angeles dodgers\", \"1b\", \"vanderbilt university\"],[\"26\", \"darnell mcdonald\", \"baltimore orioles\", \"of\", \"cherry creek hs (englewood , colorado)\"],[\"27\", \"kevin nicholson\", \"san diego padres\", \"ss\", \"stetson university\"],[\"28\", \"tim drew\", \"cleveland indians\", \"p , of\", \"lowndes county hs (valdosta , georgia)\"],[\"29\", \"troy cameron\", \"atlanta braves\", \"ss\", \"st thomas aquinas hs (fort lauderdale , florida)\"],[\"30\", \"jack cust\", \"arizona diamondbacks\", \"1b\", \"immaculata hs (somerville , new jersey)\"],[\"31\", \"jason standridge\", \"tampa bay devil rays\", \"p\", \"hewitt - trussville hs (trussville , al)\"]]\nQuestion = Is it true that jason grilli is from seton hall university?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    schools = get_column_by_name(table_data, \"school\")\n    answer = False\n    for player, school in zip(players, schools):\n        if player.lower() == \"jason grilli\" and school.lower() == \"seton hall university\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "35dee87d-772b-45f9-94ff-e9bee75a7759", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = air macau destinations\ntable_data = [[\"city\",\"country\",\"iata\",\"icao\",\"airport\"],[\"bangkok\",\"thailand\",\"bkk\",\"vtbs\",\"suvarnabhumi airport\"],[\"beijing\",\"china\",\"pek\",\"zbaa\",\"beijing capital international airport\"],[\"changsha\",\"china\",\"csx\",\"zgha\",\"changsha huanghua international airport\"],[\"chengdu\",\"china\",\"ctu\",\"zuuu\",\"chengdu shuangliu international airport\"],[\"chongqing\",\"china\",\"ckg\",\"zuck\",\"chongqing jiangbei international airport\"],[\"hangzhou\",\"china\",\"hgh\",\"zshc\",\"hangzhou xiaoshan international airport\"],[\"hefei\",\"china\",\"hfe\",\"zsof\",\"hefei luogang international airport\"],[\"kaohsiung\",\"taiwan\",\"khh\",\"rckh\",\"kaohsiung international airport\"],[\"macau\",\"macau\",\"mfm\",\"vmmc\",\"macau international airport\"],[\"nanjing\",\"china\",\"nkg\",\"zsnj\",\"nanjing lukou international airport\"],[\"nanning\",\"china\",\"nng\",\"zgnn\",\"nanning wuxu international airport\"],[\"ningbo\",\"china\",\"ngb\",\"zsnb\",\"ningbo lishe international airport\"],[\"osaka\",\"japan\",\"kix\",\"rjbb\",\"kansai international airport\"],[\"seoul\",\"south korea\",\"icn\",\"rksi\",\"incheon international airport\"],[\"shanghai\",\"china\",\"sha\",\"zsss\",\"shanghai hongqiao international airport\"],[\"shanghai\",\"china\",\"pvg\",\"zspd\",\"shanghai pudong international airport\"],[\"shenyang\",\"china\",\"she\",\"zytx\",\"shenyang taoxian international airport\"],[\"shenzhen\",\"china\",\"szx\",\"zgsz\",\"shenzhen bao'an international airport\"],[\"singapore\",\"singapore\",\"sin\",\"wsss\",\"singapore changi airport\"],[\"taipei\",\"taiwan\",\"tpe\",\"rctp\",\"taiwan taoyuan international airport\"],[\"taiyuan\",\"china\",\"tyn\",\"zbyn\",\"taiyuan wusu airport\"],[\"tokyo\",\"japan\",\"nrt\",\"rjaa\",\"narita international airport\"],[\"xiamen\",\"china\",\"xmn\",\"zsam\",\"xiamen gaoqi international airport\"],[\"wenzhou\",\"china\",\"wnz\",\"zswz\",\"wenzhou yongqiang international airport\"]]\nQuestion = Is it true that shangai 's pudong international airport is the chinese airport with an icao code of zspd and an iata code of pvg?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    cities = get_column_by_name(table_data, \"city\")\n    iatas = get_column_by_name(table_data, \"iata\")\n    icaos = get_column_by_name(table_data, \"icao\")\n    airports = get_column_by_name(table_data, \"airport\")\n    for city, iata, icao, airport in zip(cities, iatas, icaos, airports):\n        if equal_to(city, \"shanghai\") and equal_to(iata, \"pvg\") and equal_to(icao, \"zspd\") and equal_to(airport, \"shanghai pudong international airport\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "30ab5db9-96fd-436e-aca1-8c09ef7105f9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = cultural interest fraternities and sororities\ntable_data = [[\"letters\", \"organization\", \"nickname\", \"founding date\", \"founding university\", \"type\"],[\"δλφ\", \"delta lambda phi\", \"dlp , deltas' , or lambda men\", \"1986 - 10 - 15\", \"washington , dc\", \"fraternity\"],[\"κψκ\", \"kappa psi kappa\", \"canes , k - psis , diamonds , or angels\", \"2001 - 08 - 17\", \"tallahassee , florida\", \"fraternity\"],[\"οεπ\", \"omicron epsilon pi\", \"the epps\", \"2000 - 12 - 07\", \"tallahassee , florida\", \"sorority\"],[\"γρλ\", \"gamma rho lambda 1\", \"grl\", \"2003 - 08 - 25\", \"tempe , arizona\", \"sorority\"],[\"αλζ\", \"alpha lambda zeta\", \"the regal alphas\", \"2006 - 01 - 09\", \"houston , texas and atlanta , georgia\", \"fraternity\"],[\"καλ\", \"kappa alpha lambda\", \"the kappas\", \"2003 - 10 - 19\", \"clark atlanta university\", \"sorority\"],[\"φαν\", \"phi alpha nu\", \"phi - nomenal gentlewomen\", \"2006 - 07 - 30\", \"charlotte , nc\", \"fraternity\"]]\nQuestion = Is it true that if the letters is ΚΑΛ , the founding date is 2006 - 07 - 30?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    letters = get_column_by_name(table_data, \"letters\")\n    founding_dates = get_column_by_name(table_data, \"founding date\")\n    for letter, founding_date in zip(letters, founding_dates):\n        if letter.lower() == \"καλ\":\n            answer = equal_to(founding_date, \"2006 - 07 - 30\")\n            break \n    return answer\n\n### END"}
{"id": "5fc2cb0a-7709-4c6a-9928-2f8f612eb4e2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1975 argentine grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"emerson fittipaldi\", \"mclaren - ford\", \"53\", \"1:39:26.29\", \"5\"],[\"james hunt\", \"hesketh - ford\", \"53\", \"+ 5.91\", \"6\"],[\"carlos reutemann\", \"brabham - ford\", \"53\", \"+ 17.06\", \"3\"],[\"clay regazzoni\", \"ferrari\", \"53\", \"+ 35.79\", \"7\"],[\"patrick depailler\", \"tyrrell - ford\", \"53\", \"+ 54.25\", \"8\"],[\"niki lauda\", \"ferrari\", \"53\", \"+ 1:19.65\", \"4\"],[\"mark donohue\", \"penske - ford\", \"52\", \"+ 1 lap\", \"16\"],[\"jacky ickx\", \"lotus - ford\", \"52\", \"+ 1 lap\", \"18\"],[\"vittorio brambilla\", \"march - ford\", \"52\", \"+ 1 lap\", \"12\"],[\"graham hill\", \"lola - ford\", \"52\", \"+ 1 lap\", \"21\"],[\"jody scheckter\", \"tyrrell - ford\", \"52\", \"+ 1 lap\", \"9\"],[\"tom pryce\", \"shadow - ford\", \"51\", \"transmission\", \"14\"],[\"rolf stommelen\", \"lola - ford\", \"51\", \"+ 2 laps\", \"19\"],[\"jochen mass\", \"mclaren - ford\", \"50\", \"+ 3 laps\", \"13\"],[\"carlos pace\", \"brabham - ford\", \"46\", \"engine\", \"2\"],[\"arturo merzario\", \"williams - ford\", \"44\", \"not classified\", \"20\"],[\"mario andretti\", \"parnelli - ford\", \"27\", \"transmission\", \"10\"],[\"mike wilds\", \"brm\", \"24\", \"engine\", \"22\"],[\"ronnie peterson\", \"lotus - ford\", \"15\", \"engine\", \"11\"],[\"jacques laffite\", \"williams - ford\", \"15\", \"gearbox\", \"17\"],[\"wilson fittipaldi\", \"fittipaldi - ford\", \"12\", \"accident\", \"23\"],[\"john watson\", \"surtees - ford\", \"6\", \"disqualified\", \"15\"],[\"jean - pierre jarier\", \"shadow - ford\", \"0\", \"transmission\", \"1\"]]\nQuestion = Is it true that 19.0 is the bottom most grid for rolf stommelen?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    grids = get_column_by_name(table_data, \"grid\")\n    for driver, grid in zip(drivers, grids):\n        if driver.lower() == \"rolf stommelen\":\n            answer = equal_to(int(grid), 19)\n            break \n    return answer\n\n### END"}
{"id": "3df4845f-15cd-4b71-9e9a-d82eca95695f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2006 - 07 seattle supersonics season\ntable_data = [[\"game\",\"date\",\"team\",\"score\",\"high points\",\"high rebounds\",\"high assists\",\"location attendance\",\"record\"],[\"1\",\"november 1\",\"portland\",\"l 106 - 110\",\"rashard lewis (25)\",\"rashard lewis (8)\",\"luke ridnour (13)\",\"keyarena 17072\",\"0 - 1\"],[\"2\",\"november 3\",\"l a lakers\",\"l 112 - 118\",\"ray allen (30)\",\"chris wilcox (12)\",\"earl watson (7)\",\"staples center 18997\",\"0 - 2\"],[\"3\",\"november 5\",\"l a lakers\",\"w 117 - 101\",\"ray allen (32)\",\"chris wilcox (8)\",\"luke ridnour (7)\",\"keyarena 17072\",\"1 - 2\"],[\"4\",\"november 7\",\"miami\",\"l 87 - 90\",\"rashard lewis (23)\",\"nick collison (10)\",\"earl watson (6)\",\"american airlines arena 19600\",\"1 - 3\"],[\"5\",\"november 8\",\"orlando\",\"l 87 - 88\",\"ray allen (21)\",\"danny fortson (8)\",\"luke ridnour (6)\",\"amway arena 16312\",\"1 - 4\"],[\"6\",\"november 10\",\"charlotte\",\"w 99 - 85\",\"ray allen (26)\",\"nick collison (15)\",\"luke ridnour (7)\",\"charlotte bobcats arena 13515\",\"2 - 4\"],[\"7\",\"november 11\",\"atlanta\",\"w 113 - 112 (ot)\",\"ray allen (33)\",\"chris wilcox (15)\",\"luke ridnour (5)\",\"philips arena 19309\",\"3 - 4\"],[\"8\",\"november 13\",\"new jersey\",\"w 119 - 113\",\"luke ridnour (32)\",\"rashard lewis (11)\",\"luke ridnour , earl watson (7)\",\"continental airlines arena 14392\",\"4 - 4\"],[\"9\",\"november 15\",\"philadelphia\",\"l 90 - 96\",\"rashard lewis (25)\",\"rashard lewis , chris wilcox (15)\",\"luke ridnour (7)\",\"keyarena 14936\",\"4 - 5\"],[\"10\",\"november 17\",\"utah\",\"l 109 - 118\",\"ray allen (32)\",\"chris wilcox (11)\",\"luke ridnour (7)\",\"keyarena 15513\",\"4 - 6\"],[\"11\",\"november 18\",\"golden state\",\"l 95 - 107\",\"ray allen (34)\",\"ray allen (11)\",\"earl watson (7)\",\"oracle arena 17205\",\"4 - 7\"],[\"12\",\"november 20\",\"new jersey\",\"w 99 - 87\",\"ray allen (29)\",\"ray allen (9)\",\"ray allen , luke ridnour (5)\",\"keyarena 14621\",\"5 - 7\"],[\"13\",\"november 22\",\"l a clippers\",\"w 95 - 85\",\"rashard lewis (35)\",\"nick collison , rashard lewis (13)\",\"luke ridnour (9)\",\"staples center 16290\",\"6 - 7\"],[\"14\",\"november 24\",\"sacramento\",\"l 100 - 109\",\"rashard lewis (26)\",\"chris wilcox (13)\",\"luke ridnour (8)\",\"keyarena 16757\",\"6 - 8\"],[\"15\",\"november 26\",\"san antonio\",\"l 78 - 98\",\"ray allen (21)\",\"johan petro (9)\",\"chris wilcox (5)\",\"keyarena 15483\",\"6 - 9\"]]\nQuestion = Is it true that the supersonics record at game 2 was 1 - 1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    games = get_column_by_name(table_data, \"game\")\n    records = get_column_by_name(table_data, \"record\")\n    for game, record in zip(games, records):\n        if game == \"2\":\n            answer = equal_to(record, \"1 - 1\")\n            break \n    return answer\n\n### END"}
{"id": "43c296ec-d87f-4896-a800-16f875e76c97", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1965 american football league draft\ntable_data = [[\"pick\", \"team\", \"player\", \"position\", \"college\"],[\"9\", \"denver broncos\", \"dick butkus\", \"linebacker\", \"illinois\"],[\"10\", \"houston oilers\", \"malcolm walker\", \"center\", \"rice\"],[\"11\", \"oakland raiders\", \"fred biletnikoff\", \"wide receiver\", \"florida state\"],[\"12\", \"new york jets\", \"john huarte\", \"quarterback\", \"notre dame\"],[\"13\", \"kansas city chiefs\", \"jack chapple\", \"linebacker\", \"stanford\"],[\"14\", \"san diego chargers\", \"roy jefferson\", \"linebacker\", \"utah\"],[\"15\", \"houston oilers (from boston patriots)\", \"ralph neely\", \"tackle\", \"oklahoma\"],[\"16\", \"kansas city chiefs (from buffalo bills)\", \"ronnie caveness\", \"linebacker\", \"arkansas\"]]\nQuestion = Is it true that the linebacker from the denver broncos is pick 9?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    positions = get_column_by_name(table_data, \"position\")\n    picks = get_column_by_name(table_data, \"pick\")\n    for team, position, pick in zip(teams, positions, picks):\n        if team.lower() == \"denver broncos\" and position.lower() == \"linebacker\":\n            answer = equal_to(pick, \"9\")\n            break \n    return answer\n\n### END"}
{"id": "2d62b274-87c7-4ea7-862c-19902e59ac1a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"series number\",\"number of episodes\",\"original air date\",\"dvd region 2 release date\",\"dvd region 1 release date\"],[\"1\",\"6\",\"1973\",\"2 september 2002\",\"tba\"],[\"2\",\"7\",\"1975\",\"2 september 2002\",\"tba\"],[\"3\",\"7\",\"1976\",\"26 july 2004\",\"11 march 2008\"],[\"4\",\"7\",\"1977\",\"26 july 2004\",\"9 september 2008\"],[\"5\",\"7\",\"1979\",\"5 march 2007\",\"6 september 2009\"],[\"6\",\"7\",\"1982\",\"5 march 2007\",\"27 april 2010\"],[\"7\",\"6\",\"1983\",\"3 march 2008\",\"27 april 2010\"],[\"8\",\"6\",\"1985\",\"3 march 2008\",\"9 july 2010\"],[\"9\",\"12\",\"1987\",\"5 may 2008\",\"18 january 2011\"],[\"10\",\"6\",\"1988\",\"22 september 2008\",\"12 april 2011\"],[\"11\",\"7\",\"1989\",\"22 september 2008\",\"12 april 2011\"],[\"12\",\"10\",\"1990\",\"26 december 2008\",\"12 july 2011\"],[\"13\",\"6\",\"1991\",\"26 december 2008\",\"21 february 2012\"],[\"14\",\"9\",\"1992\",\"26 october 2009\",\"17 april 2012\"],[\"15\",\"9\",\"1993\",\"26 october 2009\",\"24 july 2012\"],[\"16\",\"8\",\"1995\",\"27 december 2010\",\"tba\"],[\"17\",\"10\",\"1995\",\"27 december 2010\",\"15 june 2004\"],[\"18\",\"10\",\"1997\",\"7 february 2011\",\"15 january 2013\"],[\"19\",\"10\",\"1998\",\"7 february 2011\",\"16 april 2013\"],[\"20\",\"10\",\"1999\",\"26 march 2012\",\"9 july 2013\"],[\"21\",\"10\",\"2000\",\"26 march 2012\",\"15 october 2013\"],[\"22\",\"10\",\"2001\",\"23 april 2012\",\"14 january 2014\"],[\"23\",\"10\",\"2002\",\"23 april 2012\",\"tba\"],[\"24\",\"10\",\"2003\",\"tba\",\"tba\"],[\"25\",\"10\",\"2004\",\"tba\",\"tba\"],[\"26\",\"10\",\"2005\",\"tba\",\"tba\"],[\"27\",\"9\",\"2006\",\"tba\",\"tba\"],[\"28\",\"10\",\"2007\",\"tba\",\"tba\"],[\"29\",\"11\",\"2008\",\"tba\",\"tba\"],[\"30\",\"10\",\"2009\",\"tba\",\"tba\"],[\"31\",\"6\",\"2010\",\"tba\",\"tba\"]]\nQuestion = Is it true that 1988 was the original air date for series number 10?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    series_numbers = get_column_by_name(table_data, \"series number\")\n    original_air_dates = get_column_by_name(table_data, \"original air date\")\n    for series_number, original_air_date in zip(series_numbers, original_air_dates):\n        if series_number == \"10\":\n            answer = equal_to(original_air_date, \"1988\")\n            break \n    return answer\n\n### END"}
{"id": "be9287fd-9bb3-406b-a314-9d38b97b6e83", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = julia glushko\ntable_data = [[\"outcome\", \"date\", \"tournament\", \"surface\", \"opponent in the final\", \"score\"],[\"winner\", \"november 11 , 2007\", \"mallorca , spain\", \"clay\", \"diana buzean\", \"6 - 0 , 6 - 0\"],[\"winner\", \"may 30 , 2010\", \"ra'anana , israel\", \"hard\", \"keren shlomo\", \"6 - 1 , 6 - 3\"],[\"winner\", \"october 24 , 2010\", \"akko , israel\", \"hard\", \"julia kimmelmann\", \"6 - 2 , 6 - 2\"],[\"winner\", \"november 7 , 2010\", \"kalgoorlie , australia\", \"hard\", \"isabella holland\", \"6 - 1 , 6 - 2\"],[\"winner\", \"november 28 , 2010\", \"traralgon , australia\", \"hard\", \"sacha jones\", \"2 - 6 , 7 - 5 , 7 - 6 (7 - 4)\"],[\"runner - up\", \"july 15 , 2012\", \"waterloo , canada\", \"clay\", \"sharon fichman\", \"6 - 3 , 6 - 2\"],[\"winner\", \"july 29 , 2012\", \"lexington , united states\", \"hard\", \"johanna konta\", \"6 - 3 , 6 - 0\"],[\"winner\", \"march 24 , 2013\", \"innisbrook resort and golf club , united states\", \"clay\", \"patricia mayr - achleitner\", \"2 - 6 , 6 - 0 , 6 - 4\"],[\"winner\", \"july 7 , 2013\", \"waterloo , canada\", \"clay\", \"gabriela dabrowski\", \"6 - 1 , 6 - 3\"]]\nQuestion = Is it true that the tournament was ra'anana , israel with a hard surface for 6 - 1 , 6 - 2?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    tournaments = get_column_by_name(table_data, \"tournament\")\n    surfaces = get_column_by_name(table_data, \"surface\")\n    scores = get_column_by_name(table_data, \"score\")\n    for tournament, surface, score in zip(tournaments, surfaces, scores):\n        if tournament.lower() == \"ra'anana , israel\" and surface.lower() == \"hard\" and score == \"6 - 1 , 6 - 2\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "246262b6-ce13-424e-8630-bda5a7892ab6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1973 belgian grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"jackie stewart\", \"tyrrell - ford\", \"70\", \"1:42:13.43\", \"6\"],[\"franã§ois cevert\", \"tyrrell - ford\", \"70\", \"+ 31.84\", \"4\"],[\"emerson fittipaldi\", \"lotus - ford\", \"70\", \"+ 2:02.79\", \"9\"],[\"andrea de adamich\", \"brabham - ford\", \"69\", \"+ 1 lap\", \"18\"],[\"niki lauda\", \"brm\", \"69\", \"+ 1 lap\", \"14\"],[\"chris amon\", \"tecno\", \"67\", \"+ 3 laps\", \"15\"],[\"denny hulme\", \"mclaren - ford\", \"67\", \"+ 3 laps\", \"2\"],[\"carlos pace\", \"surtees - ford\", \"66\", \"+ 4 laps\", \"8\"],[\"graham hill\", \"shadow - ford\", \"65\", \"+ 5 laps\", \"23\"],[\"clay regazzoni\", \"brm\", \"63\", \"accident\", \"12\"],[\"mike beuttler\", \"march - ford\", \"63\", \"accident\", \"20\"],[\"jean - pierre jarier\", \"march - ford\", \"60\", \"accident\", \"16\"],[\"jean - pierre beltoise\", \"brm\", \"56\", \"not classified\", \"5\"],[\"wilson fittipaldi\", \"brabham - ford\", \"46\", \"engine\", \"19\"],[\"ronnie peterson\", \"lotus - ford\", \"42\", \"accident\", \"1\"],[\"peter revson\", \"mclaren - ford\", \"33\", \"accident\", \"10\"],[\"howden ganley\", \"iso marlboro - ford\", \"16\", \"accident\", \"21\"],[\"carlos reutemann\", \"brabham - ford\", \"14\", \"engine\", \"7\"],[\"george follmer\", \"shadow - ford\", \"13\", \"throttle\", \"11\"],[\"jackie oliver\", \"shadow - ford\", \"11\", \"accident\", \"22\"],[\"jacky ickx\", \"ferrari\", \"6\", \"oil pump\", \"3\"],[\"nanni galli\", \"iso marlboro - ford\", \"6\", \"engine\", \"17\"],[\"mike hailwood\", \"surtees - ford\", \"4\", \"accident\", \"13\"]]\nQuestion = Is it true that the average grid more than 56 laps is 5?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef average(lst):\n    return sum(lst) / len(lst)\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    laps = get_column_by_name(table_data, \"laps\")\n    grids = get_column_by_name(table_data, \"grid\")\n    grids_over_56_laps = [int(grid) for lap, grid in zip(laps, grids) if int(lap) > 56]\n    avg_grid = average(grids_over_56_laps)\n    answer = equal_to(avg_grid, 5)\n    return answer\n\n### END"}
{"id": "f7dc4c16-6c40-46be-9f6b-069a614f84d9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = gilmour racing\ntable_data = [[\"season\", \"series\", \"points\", \"position\", \"driver\"],[\"2001\", \"queensland formula ford championship\", \"216\", \"2nd\", \"chris gilmour\"],[\"2002\", \"queensland formula ford championship\", \"234\", \"2nd\", \"chris gilmour\"],[\"2003\", \"queensland formula ford championship\", \"222\", \"1st\", \"chris gilmour\"],[\"2004\", \"australian formula 3 championship\", \"235\", \"2nd\", \"chris gilmour\"],[\"2005\", \"australian formula 3 championship\", \"142\", \"4th\", \"chris gilmour\"],[\"2006\", \"australian formula 3 championship\", \"150\", \"4th\", \"chris gilmour\"],[\"2007\", \"australian formula 3 championship\", \"52\", \"8th\", \"chris gilmour\"],[\"2008\", \"australian formula 3 championship - national class\", \"228\", \"1st\", \"chris gilmour\"],[\"2009\", \"australian formula 3 championship - national class\", \"93\", \"4th\", \"chris gilmour\"],[\"2010\", \"australian formula 3 championship\", \"90\", \"5th\", \"chris gilmour\"],[\"2011\", \"australian formula 3 championship\", \"210\", \"1st\", \"chris gilmour\"]]\nQuestion = Is it true that the 2007 season was the only year of the australian formula 3 championship series?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef solution(table_data):\n    series = get_column_by_name(table_data, \"series\")\n    count = count_occurrences(\"australian formula 3 championship\", series)\n    answer = count == 1\n    return answer\n\n### END"}
{"id": "e07764e8-5a41-4593-bdf4-a9277a85b53e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date\",\"visitor\",\"score\",\"home\",\"decision\",\"record\"],[\"february 2\",\"phoenix\",\"2 - 3\",\"nashville\",\"ellis\",\"27 - 21 - 5\"],[\"february 5\",\"carolina\",\"0 - 1\",\"nashville\",\"ellis\",\"28 - 21 - 5\"],[\"february 7\",\"tampa bay\",\"2 - 1\",\"nashville\",\"ellis\",\"28 - 21 - 6\"],[\"february 9\",\"nashville\",\"3 - 4\",\"san jose\",\"ellis\",\"28 - 22 - 6\"],[\"february 10\",\"nashville\",\"6 - 3\",\"phoenix\",\"ellis\",\"29 - 22 - 6\"],[\"february 12\",\"detroit\",\"2 - 4\",\"nashville\",\"ellis\",\"30 - 22 - 6\"],[\"february 14\",\"chicago\",\"6 - 1\",\"nashville\",\"mason\",\"30 - 23 - 6\"],[\"february 16\",\"st louis\",\"1 - 2\",\"nashville\",\"ellis\",\"31 - 23 - 6\"],[\"february 17\",\"nashville\",\"4 - 5\",\"minnesota\",\"ellis\",\"31 - 23 - 7\"],[\"february 19\",\"edmonton\",\"4 - 5\",\"nashville\",\"ellis\",\"32 - 23 - 7\"],[\"february 21\",\"vancouver\",\"3 - 2\",\"nashville\",\"ellis\",\"32 - 23 - 8\"],[\"february 23\",\"dallas\",\"6 - 3\",\"nashville\",\"ellis\",\"32 - 24 - 8\"],[\"february 27\",\"nashville\",\"4 - 8\",\"buffalo\",\"mason\",\"32 - 25 - 8\"]]\nQuestion = Is it true that before february 16th won as decision , st louis , home team , was versus ellis?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    home_teams = get_column_by_name(table_data, \"home\")\n    decisions = get_column_by_name(table_data, \"decision\")\n    for date, home_team, decision in zip(dates, home_teams, decisions):\n        if date.lower() == \"february 16\":\n            answer = equal_to(home_team, \"st louis\") and equal_to(decision, \"ellis\")\n            break \n    return answer\n\n### END"}
{"id": "293749a0-395d-4146-ace7-44c3cafd30fe", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1969 player 's county league\ntable_data = [[\"player\", \"county\", \"balls\", \"wickets\", \"average\", \"economy\", \"bbi\", \"4wi\", \"5wi\"],[\"keith boyce\", \"essex\", \"708\", \"26\", \"12.00\", \"2.54\", \"3 / 15\", \"0\", \"0\"],[\"peter sainsbury\", \"hampshire\", \"644\", \"28\", \"13.96\", \"3.64\", \"4 / 23\", \"2\", \"0\"],[\"stuart turner\", \"essex\", \"639\", \"27\", \"14.85\", \"3.76\", \"4 / 14\", \"1\", \"0\"],[\"ken higgs\", \"lancashire\", \"673\", \"26\", \"15.23\", \"3.53\", \"4 / 22\", \"1\", \"0\"],[\"ray east\", \"essex\", \"660\", \"29\", \"15.24\", \"4.01\", \"6 / 18\", \"0\", \"2\"],[\"butch white\", \"hampshire\", \"698\", \"26\", \"17.92\", \"4.00\", \"5 / 31\", \"1\", \"1\"]]\nQuestion = Is it true that there is 28.0 wickets when the economy was 3.64 with 1 as 4wi?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    wickets = get_column_by_name(table_data, \"wickets\")\n    economies = get_column_by_name(table_data, \"economy\")\n    four_wis = get_column_by_name(table_data, \"4wi\")\n    for wicket, economy, four_wi in zip(wickets, economies, four_wis):\n        if equal_to(wicket, \"28\") and equal_to(economy, \"3.64\") and equal_to(four_wi, \"1\"):\n            answer = True\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "5f9d40f1-25bb-4886-a4f9-5dfe9a57c4bc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2006 cincinnati reds season\ntable_data = [[\"date\",\"opponent\",\"score\",\"loss\",\"attendance\",\"record\"],[\"august 1\",\"dodgers\",\"10 - 4\",\"bray (2 - 2)\",\"25127\",\"55 - 51\"],[\"august 2\",\"dodgers\",\"5 - 3\",\"ramírez (4 - 7)\",\"22110\",\"55 - 52\"],[\"august 3\",\"dodgers\",\"3 - 0\",\"milton (7 - 7)\",\"26053\",\"55 - 53\"],[\"august 4\",\"braves\",\"5 - 4\",\"james (4 - 3)\",\"33661\",\"56 - 53\"],[\"august 5\",\"braves\",\"8 - 6\",\"yates (1 - 2)\",\"33170\",\"57 - 53\"],[\"august 6\",\"braves\",\"6 - 4\",\"majewski (3 - 1)\",\"29660\",\"57 - 54\"],[\"august 7\",\"cardinals\",\"13 - 1\",\"ramírez (4 - 8)\",\"34262\",\"57 - 55\"],[\"august 8\",\"cardinals\",\"10 - 3\",\"marquis (12 - 10)\",\"40094\",\"58 - 55\"],[\"august 9\",\"cardinals\",\"8 - 7\",\"isringhausen (3 - 5)\",\"41649\",\"59 - 55\"],[\"august 10\",\"cardinals\",\"6 - 1\",\"arroyo (9 - 8)\",\"39591\",\"59 - 56\"],[\"august 11\",\"phillies\",\"6 - 5\",\"ramírez (4 - 9)\",\"41461\",\"59 - 57\"],[\"august 12\",\"phillies\",\"9 - 7\",\"gordon (3 - 0)\",\"39553\",\"60 - 57\"],[\"august 13\",\"phillies\",\"7 - 5\",\"madson (10 - 8)\",\"37677\",\"61 - 57\"],[\"august 15\",\"cardinals\",\"5 - 0\",\"harang (12 - 8)\",\"42761\",\"61 - 58\"],[\"august 16\",\"cardinals\",\"7 - 2\",\"reyes (4 - 6)\",\"42752\",\"62 - 58\"],[\"august 17\",\"cardinals\",\"2 - 1\",\"franklin (2 - 6)\",\"40346\",\"62 - 59\"],[\"august 18\",\"pirates\",\"7 - 3\",\"michalak (1 - 1)\",\"31718\",\"62 - 60\"],[\"august 19\",\"pirates\",\"14 - 7\",\"torres (3 - 6)\",\"34245\",\"63 - 60\"],[\"august 20\",\"pirates\",\"5 - 1\",\"santos (5 - 8)\",\"29935\",\"64 - 60\"],[\"august 21\",\"astros\",\"4 - 3\",\"qualls (4 - 3)\",\"24110\",\"65 - 60\"],[\"august 22\",\"astros\",\"14 - 0\",\"hirsh (1 - 2)\",\"22556\",\"66 - 60\"],[\"august 23\",\"astros\",\"7 - 3\",\"coffey (6 - 5)\",\"24873\",\"66 - 61\"],[\"august 24\",\"giants\",\"6 - 3\",\"chulk (0 - 2)\",\"38754\",\"67 - 61\"],[\"august 25\",\"giants\",\"4 - 1\",\"harang (13 - 9)\",\"37801\",\"67 - 62\"],[\"august 26\",\"giants\",\"4 - 1\",\"arroyo (10 - 9)\",\"41362\",\"67 - 63\"],[\"august 27\",\"giants\",\"8 - 0\",\"lohse (1 - 1)\",\"39097\",\"67 - 64\"],[\"august 28\",\"dodgers\",\"6 - 5\",\"michalak (1 - 2)\",\"44176\",\"67 - 65\"],[\"august 29\",\"dodgers\",\"6 - 5\",\"franklin (5 - 7)\",\"44697\",\"67 - 66\"],[\"august 30\",\"dodgers\",\"7 - 3\",\"harang (13 - 10)\",\"47356\",\"67 - 67\"]]\nQuestion = Is it true that when the braves were the opponent , it was august 20th?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    answer = False\n    for date, opponent in zip(dates, opponents):\n        if \"braves\" in opponent.lower() and \"august 20\" in date.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "f527bdd9-9544-4ca0-a39c-be1c1efde0ad", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1944 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"st kilda\", \"7.12 (54)\", \"south melbourne\", \"10.19 (79)\", \"junction oval\", \"8000\", \"5 august 1944\"],[\"geelong\", \"11.20 (86)\", \"hawthorn\", \"9.7 (61)\", \"kardinia park\", \"7000\", \"5 august 1944\"],[\"collingwood\", \"8.12 (60)\", \"footscray\", \"15.9 (99)\", \"victoria park\", \"9000\", \"5 august 1944\"],[\"carlton\", \"4.14 (38)\", \"melbourne\", \"8.6 (54)\", \"princes park\", \"10000\", \"5 august 1944\"],[\"north melbourne\", \"11.12 (78)\", \"fitzroy\", \"15.11 (101)\", \"arden street oval\", \"14000\", \"5 august 1944\"],[\"richmond\", \"11.17 (83)\", \"essendon\", \"12.15 (87)\", \"punt road oval\", \"26000\", \"5 august 1944\"]]\nQuestion = Is it true that when the home scored 8.12 (60) , the away team scored 9.7 (61)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    away_team_scores = get_column_by_name(table_data, \"away team score\")\n    for home_team_score, away_team_score in zip(home_team_scores, away_team_scores):\n        if home_team_score == \"8.12 (60)\":\n            answer = equal_to(away_team_score, \"9.7 (61)\")\n            break \n    return answer\n\n### END"}
{"id": "1a686462-4f3b-4940-8bba-dd1041aabcaf", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 veikkausliiga\ntable_data = [[\"club\",\"location\",\"stadium\",\"capacity\",\"manager\",\"kitmaker\"],[\"ac oulu\",\"oulu\",\"castrén\",\"4000\",\"juha malinen\",\"umbro\"],[\"fc honka\",\"espoo\",\"tapiolan urheilupuisto\",\"6000\",\"mika lehkosuo\",\"kappa\"],[\"fc inter\",\"turku\",\"veritas stadion\",\"9372\",\"job dragtsma\",\"nike\"],[\"fc lahti\",\"lahti\",\"lahden stadion\",\"15000\",\"ilkka mäkelä\",\"umbro\"],[\"ff jaro\",\"jakobstad\",\"jakobstads centralplan\",\"5000\",\"alexei eremenko sr\",\"errea\"],[\"haka\",\"valkeakoski\",\"tehtaan kenttä\",\"3516\",\"sami ristilä\",\"umbro\"],[\"hjk\",\"helsinki\",\"sonera stadium\",\"10770\",\"antti muurinen\",\"adidas\"],[\"ifk mariehamn\",\"mariehamn\",\"wiklöf holding arena\",\"4000\",\"pekka lyyski\",\"puma\"],[\"jjk\",\"jyväskylä\",\"harjun stadion\",\"3000\",\"kari martonen\",\"legea\"],[\"kups\",\"kuopio\",\"kuopion keskuskenttä\",\"5000\",\"esa pekonen\",\"puma\"],[\"mypa\",\"anjalankoski\",\"saviniemi\",\"4167\",\"janne lindberg\",\"puma\"],[\"tampere united\",\"tampere\",\"ratina stadion\",\"17000\",\"ari hjelm\",\"puma\"],[\"tps\",\"turku\",\"veritas stadion\",\"9372\",\"marko rajamäki\",\"puma\"]]\nQuestion = Is it true that the manager for the club in turku is job dragtsma and their stadium holds 5000?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"location\")\n    managers = get_column_by_name(table_data, \"manager\")\n    capacities = get_column_by_name(table_data, \"capacity\")\n    for location, manager, capacity in zip(locations, managers, capacities):\n        if location.lower() == \"turku\":\n            answer = equal_to(manager, \"job dragtsma\") and equal_to(capacity, \"5000\")\n            break \n    return answer\n\n### END"}
{"id": "041f8cc6-74b7-400e-8354-7906ac1ce2a4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1950 world figure skating championships\ntable_data = [[\"rank\", \"name\", \"nation\", \"placings\", \"total\"],[\"1\", \"karol kennedy / peter kennedy\", \"united states\", \"15\", \"96.07\"],[\"2\", \"jennifer nicks / john nicks\", \"united kingdom\", \"28.5\", \"92.70\"],[\"3\", \"marianne nagy / lászló nagy\", \"hungary\", \"32\", \"92.25\"],[\"4\", \"elianne steineman / andré calamé\", \"switzerland\", \"44.5\", \"90.00\"],[\"5\", \"suzanne gheldorf / jacques rénard\", \"belgium\", \"48.5\", \"89.43\"],[\"6\", \"elly stärck / harry gareis\", \"austria\", \"61\", \"88.08\"],[\"7\", \"marlene smith / donald gilchrist\", \"canada\", \"63\", \"87.07\"],[\"8\", \"joan waterhouse / gordon holloway\", \"united kingdom\", \"62\", \"88.31\"],[\"9\", \"liliane de becker / edmund verbustel\", \"belgium\", \"64\", \"88.42\"],[\"10\", \"irene maguire / walter muehlbronner\", \"united states\", \"82\", \"84.26\"],[\"11\", \"sybil cooke / bob hudson\", \"united kingdom\", \"93.5\", \"83.47\"],[\"12\", \"denise favart / jacques favart\", \"france\", \"108\", \"77.73\"]]\nQuestion = Is it true that liliane de becker / edmund verbustel had a rank of 9 and a total of 64?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    ranks = get_column_by_name(table_data, \"rank\")\n    totals = get_column_by_name(table_data, \"total\")\n    for name, rank, total in zip(names, ranks, totals):\n        if name.lower() == \"liliane de becker / edmund verbustel\":\n            answer = equal_to(rank, \"9\") and equal_to(total, \"64\")\n            break \n    return answer\n\n### END"}
{"id": "ea11eacd-5884-41f2-b83c-c774991c4737", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2006 cincinnati reds season\ntable_data = [[\"date\",\"opponent\",\"score\",\"loss\",\"attendance\",\"record\"],[\"august 1\",\"dodgers\",\"10 - 4\",\"bray (2 - 2)\",\"25127\",\"55 - 51\"],[\"august 2\",\"dodgers\",\"5 - 3\",\"ramírez (4 - 7)\",\"22110\",\"55 - 52\"],[\"august 3\",\"dodgers\",\"3 - 0\",\"milton (7 - 7)\",\"26053\",\"55 - 53\"],[\"august 4\",\"braves\",\"5 - 4\",\"james (4 - 3)\",\"33661\",\"56 - 53\"],[\"august 5\",\"braves\",\"8 - 6\",\"yates (1 - 2)\",\"33170\",\"57 - 53\"],[\"august 6\",\"braves\",\"6 - 4\",\"majewski (3 - 1)\",\"29660\",\"57 - 54\"],[\"august 7\",\"cardinals\",\"13 - 1\",\"ramírez (4 - 8)\",\"34262\",\"57 - 55\"],[\"august 8\",\"cardinals\",\"10 - 3\",\"marquis (12 - 10)\",\"40094\",\"58 - 55\"],[\"august 9\",\"cardinals\",\"8 - 7\",\"isringhausen (3 - 5)\",\"41649\",\"59 - 55\"],[\"august 10\",\"cardinals\",\"6 - 1\",\"arroyo (9 - 8)\",\"39591\",\"59 - 56\"],[\"august 11\",\"phillies\",\"6 - 5\",\"ramírez (4 - 9)\",\"41461\",\"59 - 57\"],[\"august 12\",\"phillies\",\"9 - 7\",\"gordon (3 - 0)\",\"39553\",\"60 - 57\"],[\"august 13\",\"phillies\",\"7 - 5\",\"madson (10 - 8)\",\"37677\",\"61 - 57\"],[\"august 15\",\"cardinals\",\"5 - 0\",\"harang (12 - 8)\",\"42761\",\"61 - 58\"],[\"august 16\",\"cardinals\",\"7 - 2\",\"reyes (4 - 6)\",\"42752\",\"62 - 58\"],[\"august 17\",\"cardinals\",\"2 - 1\",\"franklin (2 - 6)\",\"40346\",\"62 - 59\"],[\"august 18\",\"pirates\",\"7 - 3\",\"michalak (1 - 1)\",\"31718\",\"62 - 60\"],[\"august 19\",\"pirates\",\"14 - 7\",\"torres (3 - 6)\",\"34245\",\"63 - 60\"],[\"august 20\",\"pirates\",\"5 - 1\",\"santos (5 - 8)\",\"29935\",\"64 - 60\"],[\"august 21\",\"astros\",\"4 - 3\",\"qualls (4 - 3)\",\"24110\",\"65 - 60\"],[\"august 22\",\"astros\",\"14 - 0\",\"hirsh (1 - 2)\",\"22556\",\"66 - 60\"],[\"august 23\",\"astros\",\"7 - 3\",\"coffey (6 - 5)\",\"24873\",\"66 - 61\"],[\"august 24\",\"giants\",\"6 - 3\",\"chulk (0 - 2)\",\"38754\",\"67 - 61\"],[\"august 25\",\"giants\",\"4 - 1\",\"harang (13 - 9)\",\"37801\",\"67 - 62\"],[\"august 26\",\"giants\",\"4 - 1\",\"arroyo (10 - 9)\",\"41362\",\"67 - 63\"],[\"august 27\",\"giants\",\"8 - 0\",\"lohse (1 - 1)\",\"39097\",\"67 - 64\"],[\"august 28\",\"dodgers\",\"6 - 5\",\"michalak (1 - 2)\",\"44176\",\"67 - 65\"],[\"august 29\",\"dodgers\",\"6 - 5\",\"franklin (5 - 7)\",\"44697\",\"67 - 66\"],[\"august 30\",\"dodgers\",\"7 - 3\",\"harang (13 - 10)\",\"47356\",\"67 - 67\"]]\nQuestion = Is it true that when the opponent was the giants and the record was 56 - 53 , the attendance was 33661?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    records = get_column_by_name(table_data, \"record\")\n    answer = False\n    for opponent, attendance, record in zip(opponents, attendances, records):\n        if opponent.lower() == \"giants\" and record == \"56 - 53\" and attendance == \"33661\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "3df6dfc8-6fa2-44e8-84cf-fc88156fd752", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = zorro (musical)\ntable_data = [[\"year\", \"award\", \"category\", \"nominee\", \"result\"],[\"2009\", \"laurence olivier award\", \"best new musical\", \"best new musical\", \"nominated\"],[\"2009\", \"laurence olivier award\", \"best actor in a musical\", \"matt rawle\", \"nominated\"],[\"2009\", \"laurence olivier award\", \"best actress in a musical\", \"emma williams\", \"nominated\"],[\"2009\", \"laurence olivier award\", \"best performance in a supporting role in a musical\", \"lesli margherita\", \"won\"],[\"2009\", \"laurence olivier award\", \"best theatre choreographer\", \"rafael amargo\", \"nominated\"]]\nQuestion = Is it true that leslie margherita received the nomination after 2009?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    nominees = get_column_by_name(table_data, \"nominee\")\n    for year, nominee in zip(years, nominees):\n        if \"lesli margherita\" in nominee.lower():\n            answer = greater(int(year), 2009)\n            break\n    return answer\n\n### END"}
{"id": "c1e221c6-7229-4517-aa8c-778c20007b9f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 14 icc world cricket league\ntable_data = [[\"details\",\"host nation (s)\",\"final venue\",\"winner\",\"result\",\"runner - up\"],[\"2009 division seven\",\"guernsey\",\"king george v sports ground , castel\",\"207 / 7 (46.1 overs)\",\"bahrain won by 3 wickets scorecard\",\"guernsey 204 / 9 (50.0 overs)\"],[\"2009 division six\",\"singapore\",\"kallang cricket ground , singapore\",\"242 / 8 (50.0 overs)\",\"singapore won by 68 runs scorecard\",\"174 all out (48.4 overs)\"],[\"2010 division one\",\"netherlands\",\"vra ground , amstelveen\",\"ireland 233 / 4 (44.5 overs)\",\"ireland won by 6 wickets scorecard\",\"232 all out (48.5 overs)\"],[\"2010 division four\",\"italy\",\"ovale di rastignano , pianoro\",\"united states 188 / 2 (21.4 overs)\",\"united states won by 8 wickets scorecard\",\"italy 185 / 9 (50 overs)\"],[\"2010 division eight\",\"kuwait\",\"kuwait oil company hubara ground , ahmadi city\",\"164 / 4 (33.1 overs)\",\"kuwait won by 6 wickets scorecard\",\"163 / 8 (50 overs)\"],[\"2011 division three\",\"hong kong\",\"kowloon cricket club\",\"hong kong 207 / 6 (47.1 overs)\",\"hong kong won by 4 wickets scorecard\",\"202 (50 overs)\"],[\"2011 division two\",\"united arab emirates\",\"dsc cricket stadium , dubai\",\"201 / 5 (45.3 overs)\",\"united arab emirates won by 5 wickets scorecard\",\"namibia 200 (49.3 overs)\"],[\"2011 division seven\",\"botswana\",\"botswana cricket association oval 1 , gaborone\",\"219 / 9 (50 overs)\",\"kuwait won by 72 runs scorecard\",\"147 (36.5 overs)\"],[\"2011 division six\",\"malaysia\",\"kinrara academy oval , kuala lumpur\",\"guernsey 211 / 8 (49.3 overs)\",\"guernsey won by 2 wickets scorecard\",\"208 / 9 (50 overs)\"],[\"2012 division five\",\"singapore\",\"kallang ground , singapore\",\"164 / 1 (26.4 overs)\",\"singapore won by 9 wickets scorecard\",\"159 (47 overs)\"],[\"2012 division four\",\"malaysia\",\"kinrara academy oval , kuala lumpur\",\"147 / 2 (28 overs)\",\"nepal won by 8 wickets scorecard\",\"united states 145 (48.1 overs)\"],[\"2012 division eight\",\"samoa\",\"faleata oval no 1 , apia\",\"222 / 9 (50 overs)\",\"vanuatu won by 39 runs scorecard\",\"183 (42.5 overs)\"],[\"2013 division seven\",\"botswana\",\"botswana cricket association oval 1 , gaborone\",\"134 / 4 (32.1 overs)\",\"nigeria won by 6 wickets ( d / l ) scorecard\",\"133 (38 , 4 overs)\"],[\"2013 division three\",\"bermuda\",\"national stadium , hamilton\",\"153 / 5 (39.2 overs)\",\"nepal won by 5 wickets scorecard\",\"151 / 8 (50.0 overs)\"],[\"2013 division six\",\"jersey\",\"grainville cricket ground , st saviour\",\"jersey 10 points\",\"jersey won on points table\",\"8 points\"]]\nQuestion = Is it true that at the national stadium , hamilton the results are nepal won by 8 wickets scorecard?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"final venue\")\n    results = get_column_by_name(table_data, \"result\")\n    for venue, result in zip(venues, results):\n        if \"national stadium , hamilton\" in venue.lower():\n            answer = equal_to(result, \"nepal won by 8 wickets scorecard\")\n            break \n    return answer\n\n### END"}
{"id": "29896e5d-fa29-4b73-b072-11437b026c88", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of how it 's made episodes\ntable_data = [[\"series ep\", \"episode\", \"segment a\", \"segment b\", \"segment c\", \"segment d\"],[\"20 - 01\", \"248\", \"native healing drums\", \"s raisin\", \"stereoscopic viewers\", \"ribbon microphones\"],[\"20 - 02\", \"249\", \"horse bits\", \"oat cereal\", \"turquoise jewellery\", \"electric scooters\"],[\"20 - 03\", \"250\", \"nail nippers\", \"jade putters\", \"ice cider\", \"water skis\"],[\"20 - 04\", \"251\", \"es stagecoach\", \"road reflectors\", \"fire baked pottery\", \"custom motorcycle tanks\"],[\"20 - 05\", \"252\", \"replica clay pipes\", \"drinking fountains\", \"orange liqueur\", \"compound bows\"],[\"20 - 06\", \"253\", \"tissues\", \"travel trailers\", \"s slipper\", \"motorcycle helmets\"],[\"20 - 07\", \"254\", \"u - locks\", \"tepees\", \"s croissant\", \"rolling luggage\"],[\"20 - 08\", \"255\", \"prams\", \"factory - built homes\", \"wood flutes\", \"bicycle tires\"],[\"20 - 09\", \"256\", \"thinning shears\", \"wagon wheels\", \"toaster pastries\", \"violin bows\"],[\"20 - 10\", \"257\", \"cast iron tubs\", \"hopi kachina dolls\", \"mine truck engine rebuild\", \"memory cards\"],[\"20 - 11\", \"258\", \"cycling shoes\", \"s yurt\", \"marine plywood\", \"oil & encaustic paint\"],[\"20 - 12\", \"259\", \"paper fans\", \"walnut oil\", \"copper (part 1)\", \"copper (part 2)\"]]\nQuestion = Is it true that in the episode where bicyce tires were the feature of segment d , segment c featured wood flutes?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    segment_c = get_column_by_name(table_data, \"segment c\")\n    segment_d = get_column_by_name(table_data, \"segment d\")\n    for c, d in zip(segment_c, segment_d):\n        if d.lower() == \"bicycle tires\":\n            answer = equal_to(c, \"wood flutes\")\n            break \n    return answer\n\n### END"}
{"id": "f12eecf5-a7b0-46c5-8c03-e48a1bd3ded1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1977 - 78 philadelphia flyers season\ntable_data = [[\"game\", \"october\", \"opponent\", \"score\", \"record\", \"points\"],[\"1\", \"13\", \"chicago black hawks\", \"5 - 1\", \"1 - 0 - 0\", \"2\"],[\"2\", \"15\", \"pittsburgh penguins\", \"8 - 2\", \"2 - 0 - 0\", \"4\"],[\"3\", \"16\", \"st louis blues\", \"7 - 0\", \"3 - 0 - 0\", \"6\"],[\"4\", \"20\", \"pittsburgh penguins\", \"11 - 0\", \"4 - 0 - 0\", \"8\"],[\"5\", \"22\", \"toronto maple leafs\", \"1 - 6\", \"4 - 1 - 0\", \"8\"],[\"6\", \"23\", \"toronto maple leafs\", \"3 - 6\", \"4 - 2 - 0\", \"8\"],[\"7\", \"26\", \"chicago black hawks\", \"2 - 2\", \"4 - 2 - 1\", \"9\"],[\"8\", \"29\", \"st louis blues\", \"7 - 3\", \"5 - 2 - 1\", \"11\"]]\nQuestion = Is it true that st louis blues opponent is on october of 29 in game 7?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    games = get_column_by_name(table_data, \"game\")\n    dates = get_column_by_name(table_data, \"october\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    for game, date, opponent in zip(games, dates, opponents):\n        if game == \"7\":\n            answer = equal_to(date, \"29\") and equal_to(opponent.lower(), \"st louis blues\")\n            break \n    return answer\n\n### END"}
{"id": "b2c355a9-3135-4b05-b804-625f26c36f93", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"position\", \"name\", \"played\", \"drawn\", \"lost\", \"points\"],[\"1\", \"tsv trostberg\", \"10\", \"1\", \"1\", \"17\"],[\"2\", \"esc riverrats geretsried\", \"10\", \"0\", \"3\", \"14\"],[\"3\", \"ersc ottobrunn\", \"10\", \"1\", \"4\", \"11\"],[\"4\", \"ec bad tãlz ii\", \"10\", \"0\", \"5\", \"10\"],[\"5\", \"ehc bad aibling\", \"10\", \"0\", \"7\", \"6\"],[\"6\", \"dec frillensee - inzell\", \"10\", \"0\", \"9\", \"2\"]]\nQuestion = Is it true that ersc ottobrunn played 10 , lost 4 , and had 11 points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    played = get_column_by_name(table_data, \"played\")\n    lost = get_column_by_name(table_data, \"lost\")\n    points = get_column_by_name(table_data, \"points\")\n    for name, play, lose, point in zip(names, played, lost, points):\n        if name.lower() == \"ersc ottobrunn\":\n            answer = equal_to(play, \"10\") and equal_to(lose, \"4\") and equal_to(point, \"11\")\n            break \n    return answer\n\n### END"}
{"id": "f900ad3c-c957-47f7-8be9-6fe19ecc85bb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of tallest buildings in germany\ntable_data = [[\"name\", \"city\", \"height (m)\", \"height (ft)\", \"floors\", \"years as tallest\"],[\"commerzbank tower\", \"frankfurt\", \"259\", \"850\", \"56\", \"1997 - present\"],[\"messeturm\", \"frankfurt\", \"257\", \"843\", \"55\", \"1990 - 1997\"],[\"silberturm\", \"frankfurt\", \"166\", \"545\", \"32\", \"1978 - 1990\"],[\"westend gate\", \"frankfurt\", \"159\", \"522\", \"47\", \"1976 - 1978\"],[\"colonia - hochhaus\", \"cologne\", \"147\", \"482\", \"42\", \"1973 - 1976\"],[\"city - hochhaus leipzig\", \"leipzig\", \"143\", \"468\", \"36\", \"1972 - 1973\"],[\"bayer - hochhaus\", \"leverkusen\", \"122\", \"400\", \"29\", \"1963 - 1972\"],[\"friedrich - engelhorn - hochhaus\", \"ludwigshafen\", \"102\", \"335\", \"28\", \"1957 - 1963\"]]\nQuestion = Is it true that for a height more than 122 meters , 335 is the greatest height in feet?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    heights_m = get_column_by_name(table_data, \"height (m)\")\n    heights_ft = get_column_by_name(table_data, \"height (ft)\")\n    for height_m, height_ft in zip(heights_m, heights_ft):\n        if int(height_m) > 122 and int(height_ft) == 335:\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "b66f4f11-5f3c-488a-91fe-3cada51517bd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = saori obata\ntable_data = [[\"date\", \"tournament\", \"surface\", \"opponent in the final\", \"score\"],[\"november 18 , 2001\", \"port pirie , australia\", \"hard\", \"pavlina nola\", \"6 - 1 , 6 - 2\"],[\"november 25 , 2001\", \"nuriootpa , australia\", \"hard\", \"yoon - jeong cho\", \"6 - 4 , 6 - 1\"],[\"may 11 , 2003\", \"fukuoka , japan\", \"clay\", \"maria elena camerin\", \"2 - 6 , 6 - 3 , 6 - 3\"],[\"april 3 , 2005\", \"augusta , united states\", \"hard\", \"victoria azarenka\", \"6 - 2 , 6 - 2\"],[\"may 8 , 2005\", \"gifu , japan\", \"hard\", \"shiho hisamatsu\", \"6 - 1 , 2 - 6 , 6 - 4\"]]\nQuestion = Is it true that in the final against shiho hisamatsu , the score was 6 - 1 , 2 - 6 , 6 - 4?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent in the final\")\n    scores = get_column_by_name(table_data, \"score\")\n    for opponent, score in zip(opponents, scores):\n        if opponent.lower() == \"shiho hisamatsu\":\n            answer = equal_to(score, \"6 - 1 , 2 - 6 , 6 - 4\")\n            break \n    return answer\n\n### END"}
{"id": "bce954c2-b674-46cd-9186-2b722dcdb13b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"d 47 +\", \"d 46 +\", \"d 45 +\", \"d 44 +\", \"d 43 o\", \"d 42 o\", \"d 41\", \"d 40\"],[\"d 8\", \"d 9\", \"d 10\", \"d 11\", \"d 12\", \"d 13\", \"d 14\", \"d 15\"],[\"d 27\", \"d 26\", \"d 25\", \"d 24\", \"d 23\", \"d 22\", \"d 21\", \"d 20\"],[\"d 28\", \"d 29\", \"d 30\", \"d 31\", \"d 32\", \"d 33\", \"d 34\", \"d 35\"],[\"d 47 +\", \"d 46 +\", \"d 45 +\", \"d 44 +\", \"d 43 o\", \"d 42 o\", \"d 41\", \"d 40\"],[\"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\"],[\"r 48 +\", \"r 47 +\", \"r 46 +\", \"r 45 +\", \"r 44 +\", \"r 43 +\", \"r 42 o\", \"r 41 o\"],[\"r 29\", \"r 30\", \"r 31\", \"r 32\", \"r 33\", \"r 34\", \"r 35\", \"r 36\"],[\"r 28\", \"r 27\", \"r 26\", \"r 25\", \"r 24\", \"r 23\", \"r 22\", \"r 21\"],[\"r 9\", \"r 10\", \"r 11\", \"r 12\", \"r 13\", \"r 14\", \"r 15\", \"r 16\"],[\"r 8\", \"r 7\", \"r 6\", \"r 5\", \"r 4\", \"r 3\", \"r 2\", \"r 1\"]]\nQuestion = Is it true that d 45 + of r 11 has a d 42 of r 2?\n\n### RESPONSE:\ndef get_cell_value(table, row_index, column_index):\n    return table[row_index][column_index]\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    d_45_plus_row_index = 0\n    d_45_plus_column_index = 2\n    d_45_plus_value = get_cell_value(table_data, d_45_plus_row_index, d_45_plus_column_index)\n    \n    r_11_row_index = 9\n    r_11_column_index = 2\n    r_11_value = get_cell_value(table_data, r_11_row_index, r_11_column_index)\n    \n    d_42_o_row_index = 0\n    d_42_o_column_index = 5\n    d_42_o_value = get_cell_value(table_data, d_42_o_row_index, d_42_o_column_index)\n    \n    r_2_row_index = 10\n    r_2_column_index = 6\n    r_2_value = get_cell_value(table_data, r_2_row_index, r_2_column_index)\n    \n    answer = equal_to(d_45_plus_value, r_11_value) and equal_to(d_42_o_value, r_2_value)\n    return answer\n\n### END"}
{"id": "8d1395af-7aba-45b2-8f1e-27e57e10645f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = atlanta falcons draft history\ntable_data = [[\"round\", \"pick\", \"overall\", \"name\", \"position\"],[\"1\", \"9\", \"9\", \"bubba bean\", \"running back\"],[\"2\", \"8\", \"36\", \"sonny collins\", \"running back\"],[\"3\", \"11\", \"71\", \"dave scott\", \"guard\"],[\"4\", \"10\", \"102\", \"walt brett\", \"defensive end\"],[\"6\", \"13\", \"169\", \"stan varner\", \"defensive tackle\"],[\"7\", \"11\", \"193\", \"karl farmer\", \"wide receiver\"],[\"8\", \"10\", \"219\", \"frank reed\", \"washington\"],[\"9\", \"9\", \"246\", \"phil mckinnely\", \"offensive tackle\"],[\"11\", \"11\", \"302\", \"chuck brislin\", \"offensive tackle\"],[\"12\", \"10\", \"329\", \"pat bolton\", \"kicker\"],[\"13\", \"9\", \"356\", \"mike williams\", \"offensive tackle\"],[\"14\", \"8\", \"383\", \"mark husfloen\", \"defensive end\"],[\"15\", \"11\", \"414\", \"ron olson\", \"defensive back\"],[\"16\", \"10\", \"441\", \"pat curto\", \"linebacker\"],[\"17\", \"9\", \"468\", \"tony green\", \"defensive back\"]]\nQuestion = Is it true that pat curto had an overall greater than 414 and a pick number greater than 9?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    picks = get_column_by_name(table_data, \"pick\")\n    overalls = get_column_by_name(table_data, \"overall\")\n    answer = False\n    for name, pick, overall in zip(names, picks, overalls):\n        if name.lower() == \"pat curto\":\n            if greater(int(pick), 9) and greater(int(overall), 414):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "b74e1ede-efee-4ad6-b14a-5403c991c02a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1997 new england patriots season\ntable_data = [[\"round\", \"overall\", \"player\", \"position\", \"college\"],[\"1\", \"29\", \"chris canty\", \"cornerback\", \"kansas state\"],[\"2\", \"59\", \"brandon mitchell\", \"defensive tackle\", \"texas a&m\"],[\"3\", \"61\", \"sedrick shaw\", \"running back\", \"iowa\"],[\"3\", \"89\", \"chris carter\", \"safety\", \"texas\"],[\"4\", \"97\", \"damon denson\", \"offensive guard\", \"michigan\"],[\"4\", \"125\", \"ed ellis\", \"offensive tackle\", \"buffalo\"],[\"5\", \"159\", \"vernon crawford\", \"linebacker\", \"florida state\"],[\"6\", \"192\", \"tony gaiter\", \"wide receiver\", \"miami (fl)\"],[\"7\", \"230\", \"scott rehberg\", \"offensive guard\", \"central michigan\"]]\nQuestion = Is it true that when vernon crawford , a florida state player was drafted , the sum of all the rounds highly 159?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    players = get_column_by_name(table_data, \"player\")\n    colleges = get_column_by_name(table_data, \"college\")\n    for round, player, college in zip(rounds, players, colleges):\n        if player.lower() == \"vernon crawford\" and college.lower() == \"florida state\":\n            answer = equal_to(sum(map(int, rounds)), 159)\n            break \n    return answer\n\n### END"}
{"id": "d751a5d0-3ccb-44da-a5a2-f50f8da620f4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = gilmour racing\ntable_data = [[\"season\", \"series\", \"points\", \"position\", \"driver\"],[\"2001\", \"queensland formula ford championship\", \"216\", \"2nd\", \"chris gilmour\"],[\"2002\", \"queensland formula ford championship\", \"234\", \"2nd\", \"chris gilmour\"],[\"2003\", \"queensland formula ford championship\", \"222\", \"1st\", \"chris gilmour\"],[\"2004\", \"australian formula 3 championship\", \"235\", \"2nd\", \"chris gilmour\"],[\"2005\", \"australian formula 3 championship\", \"142\", \"4th\", \"chris gilmour\"],[\"2006\", \"australian formula 3 championship\", \"150\", \"4th\", \"chris gilmour\"],[\"2007\", \"australian formula 3 championship\", \"52\", \"8th\", \"chris gilmour\"],[\"2008\", \"australian formula 3 championship - national class\", \"228\", \"1st\", \"chris gilmour\"],[\"2009\", \"australian formula 3 championship - national class\", \"93\", \"4th\", \"chris gilmour\"],[\"2010\", \"australian formula 3 championship\", \"90\", \"5th\", \"chris gilmour\"],[\"2011\", \"australian formula 3 championship\", \"210\", \"1st\", \"chris gilmour\"]]\nQuestion = Is it true that in 2001 , during the queensland formula ford championship , the driver with 234 points finished 2nd?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    series = get_column_by_name(table_data, \"series\")\n    points = get_column_by_name(table_data, \"points\")\n    positions = get_column_by_name(table_data, \"position\")\n    for season, serie, point, position in zip(seasons, series, points, positions):\n        if season == \"2001\" and serie.lower() == \"queensland formula ford championship\":\n            answer = equal_to(point, \"234\") and equal_to(position, \"2nd\")\n            break \n    return answer\n\n### END"}
{"id": "45960afe-4cbf-4287-9d0f-b57c1b9a33c4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 intercity football league\ntable_data = [[\"date\", \"team 1\", \"result\", \"team 2\", \"ground\"],[\"november 8 , 2008\", \"taipower\", \"0 - 1\", \"hun sing\", \"chungshan soccer stadium\"],[\"november 8 , 2008\", \"chia cheng hsin\", \"2 - 1\", \"tatung\", \"chungshan soccer stadium\"],[\"november 15 , 2008\", \"tatung\", \"0 - 1\", \"taipower\", \"pailing sport park\"],[\"november 15 , 2008\", \"hun sing\", \"0 - 4\", \"chia cheng hsin\", \"pailing sport park\"],[\"november 22 , 2008\", \"taipower\", \"1 - 0\", \"chia cheng hsin\", \"national pei men senior high school\"],[\"november 22 , 2008\", \"tatung\", \"1 - 1\", \"hun sing\", \"national pei men senior high school\"]]\nQuestion = Is it true that the game played with a result of 0 - 4 was certainly not located at pailing sport park?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    results = get_column_by_name(table_data, \"result\")\n    grounds = get_column_by_name(table_data, \"ground\")\n    for result, ground in zip(results, grounds):\n        if equal_to(result, \"0 - 4\"):\n            answer = equal_to(ground, \"pailing sport park\")\n            break \n    return not answer\n\n### END"}
{"id": "27c82ab5-8f9c-4a0e-bfe5-12f246f24045", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rowing at the 2008 summer olympics - women 's lightweight double sculls\ntable_data = [[\"rank\", \"rowers\", \"country\", \"time\", \"notes\"],[\"1\", \"melanie kok , tracy cameron\", \"canada\", \"7:10.70\", \"fa\"],[\"2\", \"xu dongxiang , chen haixia\", \"china\", \"7:11.59\", \"fa\"],[\"3\", \"chrysi biskitzi , alexandra tsiavou\", \"greece\", \"7:11.99\", \"fa\"],[\"4\", \"renee hykel , jennifer goldsack\", \"united states\", \"7:12.15\", \"fb\"],[\"5\", \"amber halliday , marguerite houston\", \"australia\", \"7:13.80\", \"fb\"],[\"6\", \"misaki kumakura , akiko iwamoto\", \"japan\", \"7:16.13\", \"fb\"]]\nQuestion = Is it true that the rank of the team who raced at a time of 7:16.13 was 6?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    times = get_column_by_name(table_data, \"time\")\n    for rank, time in zip(ranks, times):\n        if time == \"7:16.13\":\n            answer = equal_to(rank, \"6\")\n            break \n    return answer\n\n### END"}
{"id": "e1a06e86-cb77-46f5-9bd8-c031d51ad4c1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 fis ski jumping world cup\ntable_data = [[\"rank\", \"name\", \"nationality\", \"1st (m)\", \"2nd (m)\", \"points\", \"overall fht points\", \"overall wc points (rank)\"],[\"1\", \"thomas morgenstern\", \"austria\", \"133.0\", \"136.0\", \"264.7\", \"987.1 (6)\", \"440 (4)\"],[\"2\", \"janne ahonen\", \"finland\", \"134.0\", \"133.5\", \"264.0\", \"1013.9 (2)\", \"350 (7)\"],[\"3\", \"simon ammann\", \"switzerland\", \"136.0\", \"131.5\", \"261.5\", \"1008.3 (5)\", \"669 (1)\"],[\"4\", \"wolfgang loitzl\", \"austria\", \"130.5\", \"135.0\", \"260.9\", \"1011.6 (3)\", \"411 (5)\"],[\"5\", \"andreas kofler\", \"austria\", \"129.0\", \"133.5\", \"255.0\", \"1027.2 (1)\", \"521 (3)\"]]\nQuestion = Is it true that thomas morgenstern has 264.7 points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    points = get_column_by_name(table_data, \"points\")\n    for name, point in zip(names, points):\n        if name.lower() == \"thomas morgenstern\":\n            answer = equal_to(point, \"264.7\")\n            break \n    return answer\n\n### END"}
{"id": "3637541d-9d78-42e7-896a-a2256cb2a8dc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 fis ski jumping world cup\ntable_data = [[\"rank\",\"name\",\"nationality\",\"1st (m)\",\"2nd (m)\",\"points\",\"overall fht points\",\"overall wc points (rank)\"],[\"1\",\"thomas morgenstern\",\"austria\",\"133.0\",\"136.0\",\"264.7\",\"987.1 (6)\",\"440 (4)\"],[\"2\",\"janne ahonen\",\"finland\",\"134.0\",\"133.5\",\"264.0\",\"1013.9 (2)\",\"350 (7)\"],[\"3\",\"simon ammann\",\"switzerland\",\"136.0\",\"131.5\",\"261.5\",\"1008.3 (5)\",\"669 (1)\"],[\"4\",\"wolfgang loitzl\",\"austria\",\"130.5\",\"135.0\",\"260.9\",\"1011.6 (3)\",\"411 (5)\"],[\"5\",\"andreas kofler\",\"austria\",\"129.0\",\"133.5\",\"255.0\",\"1027.2 (1)\",\"521 (3)\"]]\nQuestion = Is it true that the overall fht points for the person from finland is 1013.9 (2) and the rank is 5?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    overall_fht_points = get_column_by_name(table_data, \"overall fht points\")\n    ranks = get_column_by_name(table_data, \"rank\")\n    for nationality, overall_fht_point, rank in zip(nationalities, overall_fht_points, ranks):\n        if nationality.lower() == \"finland\":\n            answer = equal_to(overall_fht_point, \"1013.9 (2)\") and equal_to(rank, \"5\")\n            break \n    return answer\n\n### END"}
{"id": "808790bd-be98-48cb-a471-fa7c3a561a8a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1989 pga championship\ntable_data = [[\"player\", \"country\", \"year (s) won\", \"total\", \"to par\", \"finish\"],[\"jeff sluman\", \"united states\", \"1988\", \"284\", \"- 4\", \"t24\"],[\"jack nicklaus\", \"united states\", \"1963 , 1971 , 1973 1975 , 1980\", \"285\", \"- 3\", \"t27\"],[\"larry nelson\", \"united states\", \"1981 , 1987\", \"288\", \"e\", \"t46\"],[\"raymond floyd\", \"united states\", \"1969 , 1982\", \"288\", \"e\", \"t46\"],[\"hubert green\", \"united states\", \"1985\", \"295\", \"+ 7\", \"66\"],[\"dave stockton\", \"united states\", \"1970 , 1976\", \"297\", \"+ 9\", \"68\"]]\nQuestion = Is it true that 1970 , 1976 were the years won with a finish of 61?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years_won = get_column_by_name(table_data, \"year (s) won\")\n    finishes = get_column_by_name(table_data, \"finish\")\n    for year, finish in zip(years_won, finishes):\n        if \"1970 , 1976\" in year:\n            answer = equal_to(finish, \"61\")\n            break \n    return answer\n\n### END"}
{"id": "5d3129e1-7d83-42c3-a2f3-9133294bea8c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 u.s. women 's open golf championship\ntable_data = [[\"place\", \"player\", \"country\", \"score\", \"to par\", \"money\"],[\"1\", \"cristie kerr\", \"united states\", \"71 + 72 + 66 + 70 = 279\", \"- 5\", \"560000\"],[\"t2\", \"angela park\", \"brazil\", \"68 + 69 + 74 + 70 = 281\", \"- 3\", \"271022\"],[\"t2\", \"lorena ochoa\", \"mexico\", \"71 + 71 + 68 + 71 = 281\", \"- 3\", \"271022\"],[\"t4\", \"se ri pak\", \"south korea\", \"74 + 72 + 68 + 68 = 282\", \"- 2\", \"130549\"],[\"t4\", \"inbee park\", \"south korea\", \"69 + 73 + 71 + 69 = 282\", \"- 2\", \"130549\"],[\"6\", \"jiyai shin\", \"south korea\", \"70 + 69 + 71 + 74 = 284\", \"e\", \"103581\"],[\"7\", \"jee young lee\", \"south korea\", \"72 + 71 + 71 + 71 = 285\", \"+ 1\", \"93031\"],[\"t8\", \"mi hyun kim\", \"south korea\", \"71 + 75 + 70 + 70 = 286\", \"+ 2\", \"82464\"],[\"t8\", \"jeong jang\", \"south korea\", \"72 + 71 + 70 + 73 = 286\", \"+ 2\", \"82464\"],[\"t10\", \"ai miyazato\", \"japan\", \"73 + 73 + 72 + 69 = 287\", \"+ 3\", \"66177\"],[\"t10\", \"kyeong bae\", \"south korea\", \"74 + 71 + 72 + 70 = 287\", \"+ 3\", \"66177\"],[\"t10\", \"julieta granada\", \"paraguay\", \"70 + 69 + 75 + 73 = 287\", \"+ 3\", \"66177\"],[\"t10\", \"morgan pressel\", \"united states\", \"71 + 70 + 69 + 77 = 287\", \"+ 3\", \"66177\"]]\nQuestion = Is it true that morgan pressel , made 66177?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    money = get_column_by_name(table_data, \"money\")\n    for player, money_made in zip(players, money):\n        if player.lower() == \"morgan pressel\":\n            answer = equal_to(money_made, \"66177\")\n            break \n    return answer\n\n### END"}
{"id": "609e0a33-fd33-47bd-a001-e470aef1fe4e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sanya\ntable_data = [[\"english name\", \"simplified\", \"traditional\", \"pinyin\", \"area\", \"population\", \"density\"],[\"hexi district\", \"河西区\", \"河西區\", \"héxī qū\", \"10\", \"134026\", \"13403\"],[\"hedong district\", \"河东区\", \"河東區\", \"hédōng qū\", \"35\", \"147944\", \"4227\"],[\"haitangwan\", \"海棠湾镇\", \"海棠灣鎮\", \"hǎitángwān zhèn\", \"254\", \"44617\", \"176\"],[\"jiyang\", \"吉阳镇\", \"吉陽鎮\", \"jíyáng zhèn\", \"199\", \"92316\", \"464\"],[\"fenghuang\", \"凤凰镇\", \"鳳凰鎮\", \"fènghuáng zhèn\", \"487\", \"66801\", \"137\"],[\"yacheng\", \"崖城镇\", \"崖城鎮\", \"yáchéng zhèn\", \"383\", \"74779\", \"195\"],[\"tianya\", \"天涯镇\", \"天涯鎮\", \"tiānyá zhèn\", \"269\", \"34934\", \"130\"],[\"yucai\", \"育才镇\", \"育才鎮\", \"yùcái zhèn\", \"315\", \"17515\", \"56\"],[\"nantian farm\", \"国营南田农场\", \"國營南田農場\", \"guóyíng nántián nóngchǎng\", \"nd\", \"24280\", \"nd\"],[\"nanxin farm\", \"国营南新农场\", \"國營南新農場\", \"guóyíng nánxīn nóngchǎng\", \"nd\", \"16801\", \"nd\"],[\"licai farm\", \"国营立才农场\", \"國營立才農場\", \"guóyíng lìcái nóngchǎng\", \"nd\", \"16659\", \"nd\"]]\nQuestion = Is it true that the area of fènghuáng zhèn is 487?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    pinyins = get_column_by_name(table_data, \"pinyin\")\n    areas = get_column_by_name(table_data, \"area\")\n    for pinyin, area in zip(pinyins, areas):\n        if pinyin.lower() == \"fènghuáng zhèn\":\n            answer = equal_to(area, \"487\")\n            break \n    return answer\n\n### END"}
{"id": "309fe85c-2c5d-4da9-90f2-dd04f35413c7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of rna structure prediction software\ntable_data = [[\"name\", \"species specific\", \"intra - molecular structure\", \"comparative\", \"link\"],[\"diana - microt\", \"human , mouse\", \"no\", \"yes\", \"webserver\"],[\"microtar\", \"no\", \"no\", \"no\", \"sourcecode\"],[\"mitarget\", \"no\", \"no\", \"no\", \"webserver\"],[\"mirror\", \"no\", \"no\", \"no\", \"webserver\"],[\"pictar\", \"8 vertebrates\", \"no\", \"yes\", \"predictions\"],[\"pita\", \"no\", \"yes\", \"no\", \"executable , webserver , predictions\"],[\"rna22\", \"no\", \"no\", \"no\", \"predictions custom\"],[\"rnahybrid\", \"no\", \"no\", \"no\", \"sourcecode , webserver\"],[\"sylamer\", \"no\", \"no\", \"no\", \"sourcecode webserver\"],[\"taref\", \"yes\", \"no\", \"no\", \"server / sourcecode\"],[\"p - taref\", \"yes\", \"no\", \"no\", \"server / standalone\"],[\"targetscan\", \"vertebrates , flies , nematodes\", \"evaluated indirectly\", \"yes\", \"sourcecode , webserver\"]]\nQuestion = Is it true that there is no species specific with no intra - molecular structure and no comparative with the link of sourcecode , webserver named taref?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    species_specifics = get_column_by_name(table_data, \"species specific\")\n    intra_molecular_structures = get_column_by_name(table_data, \"intra - molecular structure\")\n    comparatives = get_column_by_name(table_data, \"comparative\")\n    links = get_column_by_name(table_data, \"link\")\n    for name, species_specific, intra_molecular_structure, comparative, link in zip(names, species_specifics, intra_molecular_structures, comparatives, links):\n        if name.lower() == \"taref\":\n            answer = equal_to(species_specific, \"no\") and equal_to(intra_molecular_structure, \"no\") and equal_to(comparative, \"no\") and equal_to(link, \"sourcecode , webserver\")\n            break \n    return answer\n\n### END"}
{"id": "568fa612-c681-4906-aed3-3711624e6bd8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"title\", \"from album\", \"label\", \"label - nr\"],[\"1962\", \"tonight / sinnin' sam\", \"lookin' ahead\", \"pacific jazz\", \"x - 340\"],[\"1962\", \"the young rabbits / song of india\", \"lookin' ahead\", \"pacific jazz\", \"x - 342\"],[\"1962\", \"congolese sermon / weather beat\", \"(only on 45)\", \"pacific jazz\", \"x - 357\"],[\"1963\", \"no name samba / tough talk\", \"tough talk\", \"world pacific\", \"x - 371\"],[\"1963\", \"turkish black / boopie\", \"tough talk\", \"world pacific\", \"x - 388\"],[\"1963\", \"spanish castles / bluesette\", \"jazz waltz (w les mccann)\", \"world pacific\", \"406\"],[\"1964\", \"heat wave / on broadway\", \"heat wave\", \"world pacific\", \"401\"],[\"1964\", \"i remember tomorrow / long john\", \"stretchin' out\", \"world pacific\", \"412\"],[\"1965\", \"tough talk / the thing\", \"the thing\", \"world pacific\", \"77800\"],[\"1965\", \"aqua dulce / soul bourgeoisie\", \"chile con soul\", \"world pacific\", \"77806\"],[\"1966\", \"scratch / uptight\", \"talk that talk\", \"pacific jazz\", \"88125\"],[\"1968\", \"ooga - boo - ga - loo / eleanor rigby\", \"lighthouse '68\", \"pacific jazz\", \"88144\"],[\"1968\", \"hey jude / love and peace\", \"powerhouse\", \"pacific jazz\", \"88146\"],[\"1969\", \"get back / willie and laura mae jones\", \"lighthouse '69\", \"word pacific jazz\", \"88153\"],[\"1970\", \"way back home / jackson\", \"old socks , new shoes\", \"chisa\", \"c - 8010\"]]\nQuestion = Is it true that hey jude / love and peace was published by world pacific jazz?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    labels = get_column_by_name(table_data, \"label\")\n    for title, label in zip(titles, labels):\n        if \"hey jude / love and peace\" in title.lower():\n            answer = \"world pacific jazz\" in label.lower()\n            break\n    return answer\n\n### END"}
{"id": "3467453e-3db0-4600-b36b-1f970f93769a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united kingdom general election records\ntable_data = [[\"candidate\", \"party\", \"constituency\", \"year\", \"days\"],[\"alfred dobbs\", \"labour\", \"smethwick\", \"1945\", \"1 1\"],[\"john sunderland\", \"labour\", \"preston\", \"1945\", \"122 1\"],[\"john whittaker\", \"labour\", \"heywood and radcliffe\", \"1945\", \"137 1\"],[\"philip clarke\", \"sinn féin\", \"fermanagh and south tyrone\", \"1955\", \"152 3x\"],[\"thomas mitchell\", \"sinn féin\", \"mid - ulster\", \"1955\", \"152 3x\"],[\"harry west\", \"ulster unionist\", \"fermanagh and south tyrone\", \"february 1974\", \"224 2\"],[\"michael ancram\", \"conservative\", \"berwick and east lothian\", \"february 1974\", \"224 2a\"],[\"barry henderson\", \"conservative\", \"east dunbartonshire\", \"february 1974\", \"224 2a\"],[\"paul tyler\", \"liberal\", \"bodmin\", \"february 1974\", \"224 2a\"],[\"michael winstanley\", \"liberal\", \"hazel grove\", \"february 1974\", \"224 2b\"],[\"james godfrey macmanaway\", \"ulster unionist\", \"belfast west\", \"1950\", \"238 3\"],[\"judith chaplin\", \"conservative\", \"newbury\", \"1992\", \"316 1\"],[\"peter law\", \"independent\", \"blaenau gwent\", \"2005\", \"355 1\"]]\nQuestion = Is it true that 224 2 is the number of days that ulster unionist party had fermanagh and south tyrone constituents?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    parties = get_column_by_name(table_data, \"party\")\n    constituencies = get_column_by_name(table_data, \"constituency\")\n    days = get_column_by_name(table_data, \"days\")\n    for party, constituency, day in zip(parties, constituencies, days):\n        if party.lower() == \"ulster unionist\" and constituency.lower() == \"fermanagh and south tyrone\":\n            answer = equal_to(day, \"224 2\")\n            break \n    return answer\n\n### END"}
{"id": "c34b54c7-21f1-40be-8a3f-9b74257ae54c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rowing at the 2008 summer olympics - women 's lightweight double sculls\ntable_data = [[\"rank\", \"rowers\", \"country\", \"time\", \"notes\"],[\"1\", \"melanie kok , tracy cameron\", \"canada\", \"7:10.70\", \"fa\"],[\"2\", \"xu dongxiang , chen haixia\", \"china\", \"7:11.59\", \"fa\"],[\"3\", \"chrysi biskitzi , alexandra tsiavou\", \"greece\", \"7:11.99\", \"fa\"],[\"4\", \"renee hykel , jennifer goldsack\", \"united states\", \"7:12.15\", \"fb\"],[\"5\", \"amber halliday , marguerite houston\", \"australia\", \"7:13.80\", \"fb\"],[\"6\", \"misaki kumakura , akiko iwamoto\", \"japan\", \"7:16.13\", \"fb\"]]\nQuestion = Is it true that the united states were ranked 4th with a time of 7:12:15?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    countries = get_column_by_name(table_data, \"country\")\n    times = get_column_by_name(table_data, \"time\")\n    for rank, country, time in zip(ranks, countries, times):\n        if country.lower() == \"united states\":\n            answer = equal_to(rank, \"4\") and equal_to(time, \"7:12.15\")\n            break \n    return answer\n\n### END"}
{"id": "f4c10df5-9a32-447c-861a-2407a345ca90", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = galatasaray s.k. (superleague formula team)\ntable_data = [[\"sf round\", \"country\", \"location\", \"date\", \"driver\", \"race 1 (pts)\", \"race 2 (pts)\", \"race 3\", \"race total (pts)\"],[\"1\", \"france\", \"circuit de nevers magny - cours\", \"28 june 2009\", \"duncan tappy\", \"32\", \"16\", \"dnq\", \"48\"],[\"2\", \"belgium\", \"zolder\", \"19 july 2009\", \"duncan tappy\", \"20\", \"7\", \"n / a\", \"75\"],[\"3\", \"england\", \"donington park\", \"2 august 2009\", \"scott mansell\", \"12\", \"14\", \"dnq\", \"101\"],[\"4\", \"portugal\", \"estoril circuit\", \"6 september 2009\", \"ho pin tung\", \"17\", \"7\", \"dnq\", \"133\"],[\"5\", \"italy\", \"autodromo nazionale monza\", \"4 october 2009\", \"ho pin tung\", \"8\", \"7\", \"n / a\", \"182\"]]\nQuestion = Is it true that given sentence : duncan tappy drive in 2.0 round?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    answer = \"duncan tappy\" in drivers\n    return answer\n\n### END"}
{"id": "20e6573e-ca5a-4638-a9c0-113a0e3f16ea", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rowing at the 2008 summer olympics - women 's lightweight double sculls\ntable_data = [[\"rank\", \"rowers\", \"country\", \"time\", \"notes\"],[\"1\", \"melanie kok , tracy cameron\", \"canada\", \"7:10.70\", \"fa\"],[\"2\", \"xu dongxiang , chen haixia\", \"china\", \"7:11.59\", \"fa\"],[\"3\", \"chrysi biskitzi , alexandra tsiavou\", \"greece\", \"7:11.99\", \"fa\"],[\"4\", \"renee hykel , jennifer goldsack\", \"united states\", \"7:12.15\", \"fb\"],[\"5\", \"amber halliday , marguerite houston\", \"australia\", \"7:13.80\", \"fb\"],[\"6\", \"misaki kumakura , akiko iwamoto\", \"japan\", \"7:16.13\", \"fb\"]]\nQuestion = Is it true that amber halliday and marguerite houston are rowers for the country united states?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    rowers = get_column_by_name(table_data, \"rowers\")\n    countries = get_column_by_name(table_data, \"country\")\n    for rower, country in zip(rowers, countries):\n        if \"amber halliday\" in rower.lower() and \"marguerite houston\" in rower.lower():\n            answer = equal_to(country, \"united states\")\n            break \n    return answer\n\n### END"}
{"id": "5336f9c7-f3e6-48b7-891f-23bf525c1322", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of americas records in swimming\ntable_data = [[\"event\", \"time\", \"nationality\", \"date\", \"meet\", \"location\"],[\"50 m freestyle\", \"20.91\", \"brazil\", \"18 december 2009\", \"brazilian championships\", \"são paulo, brazil\"],[\"100 m freestyle\", \"46.91\", \"brazil\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m freestyle\", \"1:42.96\", \"united states\", \"12 august 2008\", \"olympic games\", \"beijing, china\"],[\"400 m freestyle\", \"3:42.78\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"800 m freestyle\", \"7:41.86\", \"canada\", \"27 july 2011\", \"world championships\", \"shanghai, china\"],[\"1500 m freestyle\", \"14:39.63\", \"canada\", \"4 august 2012\", \"olympic games\", \"london, united kingdom\"],[\"50 m backstroke\", \"24.33\", \"united states\", \"5 december 2008\", \"dutch swim cup\", \"eindhoven, netherlands\"],[\"100 m backstroke\", \"51.94\", \"united states\", \"8 july 2009\", \"us championships\", \"indianapolis, united states\"],[\"200 m backstroke\", \"1:51.92\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m breaststroke\", \"26.76\", \"brazil\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"100 m breaststroke\", \"58.96\", \"united states\", \"26 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m breaststroke\", \"2:07.42\", \"united states\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m butterfly\", \"22.76\", \"brazil\", \"26 april 2012\", \"maria lenk trophy\", \"rio de janeiro, brazil\"],[\"100 m butterfly\", \"49.82\", \"united states\", \"1 august 2009\", \"world championships\", \"rome, italy\"],[\"200 m butterfly\", \"1:51.51\", \"united states\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m individual medley\", \"1:54.00\", \"united states\", \"28 july 2011\", \"world championships\", \"shanghai, china\"],[\"400 m individual medley\", \"4:03.84\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"4100 m freestyle relay\", \"3:08.24\", \"united states\", \"11 august 2008\", \"olympic games\", \"beijing, china\"],[\"4200 m freestyle relay\", \"6:58.55\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"4100 m medley relay\", \"3:27.28\", \"united states\", \"2 august 2009\", \"world championships\", \"rome, italy\"]]\nQuestion = Is it true that the united states swam the 200 m butterfly in 1:51.51?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    times = get_column_by_name(table_data, \"time\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    for event, time, nationality in zip(events, times, nationalities):\n        if event.lower() == \"200 m butterfly\" and nationality.lower() == \"united states\":\n            answer = equal_to(time, \"1:51.51\")\n            break \n    return answer\n\n### END"}
{"id": "739e2e31-0826-4fdf-88c5-f261826cee92", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1966 dutch grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"jack brabham\", \"brabham - repco\", \"90\", \"2:20:32.5\", \"1\"],[\"graham hill\", \"brm\", \"89\", \"+ 1 lap\", \"7\"],[\"jim clark\", \"lotus - climax\", \"88\", \"+ 2 laps\", \"3\"],[\"jackie stewart\", \"brm\", \"88\", \"+ 2 laps\", \"8\"],[\"mike spence\", \"lotus - brm\", \"87\", \"+ 3 laps\", \"12\"],[\"lorenzo bandini\", \"ferrari\", \"87\", \"+ 3 laps\", \"9\"],[\"jo bonnier\", \"cooper - maserati\", \"84\", \"+ 6 laps\", \"13\"],[\"john taylor\", \"brabham - brm\", \"84\", \"+ 6 laps\", \"17\"],[\"guy ligier\", \"cooper - maserati\", \"84\", \"+ 6 laps\", \"16\"],[\"jo siffert\", \"cooper - maserati\", \"79\", \"engine\", \"11\"],[\"bob anderson\", \"brabham - climax\", \"73\", \"suspension\", \"14\"],[\"john surtees\", \"cooper - maserati\", \"44\", \"electrical\", \"10\"],[\"denny hulme\", \"brabham - repco\", \"37\", \"ignition\", \"2\"],[\"peter arundell\", \"lotus - brm\", \"28\", \"ignition\", \"15\"],[\"dan gurney\", \"eagle - climax\", \"26\", \"oil leak\", \"4\"],[\"mike parkes\", \"ferrari\", \"10\", \"accident\", \"5\"],[\"jochen rindt\", \"cooper - maserati\", \"2\", \"accident\", \"6\"]]\nQuestion = Is it true that bob anderson 's grid was between 10 and 13?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef between(num, num1, num2):\n    return num1 <= num <= num2\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    grids = get_column_by_name(table_data, \"grid\")\n    for driver, grid in zip(drivers, grids):\n        if driver.lower() == \"bob anderson\":\n            answer = between(int(grid), 10, 13)\n            break \n    return answer\n\n### END"}
{"id": "94e205d9-ba7d-415b-a47d-93448f7d7a83", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1999 tennessee titans season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 12 , 1999\", \"cincinnati bengals\", \"w 36 - 35\", \"65272\"],[\"2\", \"september 19 , 1999\", \"cleveland browns\", \"w 26 - 9\", \"65904\"],[\"3\", \"september 26 , 1999\", \"jacksonville jaguars\", \"w 20 - 19\", \"61502\"],[\"4\", \"october 3 , 1999\", \"san francisco 49ers\", \"l 22 - 24\", \"67447\"],[\"5\", \"october 10 , 1999\", \"baltimore ravens\", \"w 14 - 11\", \"65487\"],[\"6\", \"october 17 , 1999\", \"new orleans saints\", \"w 24 - 21\", \"51875\"],[\"8\", \"october 31 , 1999\", \"st louis rams\", \"w 24 - 21\", \"66415\"],[\"9\", \"november 7 , 1999\", \"miami dolphins\", \"l 0 - 17\", \"74109\"],[\"10\", \"november 14 , 1999\", \"cincinnati bengals\", \"w 24 - 14\", \"46017\"],[\"11\", \"november 21 , 1999\", \"pittsburgh steelers\", \"w 16 - 10\", \"66619\"],[\"12\", \"november 28 , 1999\", \"cleveland browns\", \"w 33 - 21\", \"72008\"],[\"13\", \"december 5 , 1999\", \"baltimore ravens\", \"l 14 - 41\", \"67854\"],[\"14\", \"december 9 , 1999\", \"oakland raiders\", \"w 21 - 14\", \"66357\"],[\"15\", \"december 19 , 1999\", \"atlanta falcons\", \"w 30 - 17\", \"66196\"],[\"16\", \"december 26 , 1999\", \"jacksonville jaguars\", \"w 41 - 14\", \"66641\"],[\"17\", \"january 2 , 2000\", \"pittsburgh steelers\", \"w 47 - 36\", \"48025\"]]\nQuestion = Is it true that the game on the week 13 had an attendance of 67854?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    for week, attendance in zip(weeks, attendances):\n        if week == \"13\":\n            answer = equal_to(attendance, \"67854\")\n            break \n    return answer\n\n### END"}
{"id": "44f1704a-4fb2-477e-94e0-bca5d03124ac", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of tvb series (2007)\ntable_data = [[\"rank\", \"english title\", \"chinese title\", \"average\", \"peak\", \"premiere\", \"finale\", \"hk viewers\"],[\"1\", \"the family link\", \"師奶兵團\", \"33\", \"42\", \"31\", \"33\", \"2.12 million\"],[\"2\", \"fathers and sons\", \"爸爸閉翳\", \"32\", \"40\", \"31\", \"37\", \"2.11 million\"],[\"3\", \"heart of greed\", \"溏心風暴\", \"32\", \"48\", \"29\", \"40\", \"2.08 million\"],[\"4\", \"ten brothers\", \"十兄弟\", \"32\", \"39\", \"29\", \"36\", \"2.05 million\"],[\"5\", \"on the first beat\", \"學警出更\", \"31\", \"38\", \"30\", \"35\", \"2.03 million\"],[\"6\", \"the green grass of home\", \"緣來自有機\", \"31\", \"36\", \"29\", \"33\", \"2.01 million\"],[\"7\", \"dicey business\", \"賭場風雲\", \"31\", \"37\", \"30\", \"34\", \"1.99 million\"],[\"8\", \"steps\", \"舞動全城\", \"31\", \"36\", \"31\", \"32\", \"1.98 million\"],[\"9\", \"the drive of life\", \"歲月風雲\", \"30\", \"39\", \"31\", \"33\", \"1.97 million\"]]\nQuestion = Is it true that the show whose premiere earned less than 30.0 , and finale more than 36.0 , had an english title of 'heart of greed'?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef greater_than(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    english_titles = get_column_by_name(table_data, \"english title\")\n    premieres = get_column_by_name(table_data, \"premiere\")\n    finales = get_column_by_name(table_data, \"finale\")\n    for english_title, premiere, finale in zip(english_titles, premieres, finales):\n        if english_title.lower() == \"heart of greed\":\n            answer = less_than(float(premiere), 30.0) and greater_than(float(finale), 36.0)\n            break \n    return answer\n\n### END"}
{"id": "29c66e58-c704-40a5-8d34-dfcf178420f9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = turkmenistan fed cup team\ntable_data = [[\"name\", \"tkm career\", \"ties\", \"dou w / l\", \"sin w / l\"],[\"anastasiya prenko\", \"2008 -\", \"18\", \"9 - 6\", \"10 - 7\"],[\"jenneta halliyeva\", \"2004 - 2013\", \"18\", \"5 - 6\", \"4 - 5\"],[\"ummarahmat hummetova\", \"2004 - 2012\", \"13\", \"3 - 8\", \"1 - 7\"],[\"ayna ereshova\", \"2011\", \"1\", \"1 - 0\", \"0 - 0\"],[\"guljahan kadryova\", \"2013\", \"2\", \"1 - 0\", \"0 - 1\"],[\"amangul mollayeva\", \"2011\", \"4\", \"1 - 0\", \"0 - 3\"],[\"jahana bayramova\", \"2013 -\", \"5\", \"1 - 1\", \"1 - 4\"],[\"veronika babayan\", \"2004\", \"3\", \"1 - 2\", \"0 - 1\"]]\nQuestion = Is it true that jahana bayramova has the highest ties?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef get_max_value(lst):\n    return max(lst)\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    ties = get_column_by_name(table_data, \"ties\")\n    max_ties = get_max_value(list(map(int, ties)))\n    jahana_ties = int(ties[names.index(\"jahana bayramova\")])\n    answer = jahana_ties == max_ties\n    return answer\n\n### END"}
{"id": "3a332d97-ff2e-419a-bd5b-c4803281cc55", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 toronto raptors season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"17\", \"december 2\", \"denver\", \"l 93 - 132 (ot)\", \"chris bosh (24)\", \"chris bosh (12)\", \"josé calderón (7)\", \"pepsi center 14243\", \"8 - 9\"],[\"18\", \"december 5\", \"utah\", \"l 87 - 114 (ot)\", \"chris bosh (18)\", \"chris bosh (11)\", \"josé calderón (8)\", \"energysolutions arena 19911\", \"8 - 10\"],[\"19\", \"december 7\", \"portland\", \"l 97 - 98 (ot)\", \"jermaine o'neal (24)\", \"jermaine o'neal (8)\", \"josé calderón (13)\", \"air canada centre 17671\", \"8 - 11\"],[\"20\", \"december 9\", \"cleveland\", \"l 94 - 114 (ot)\", \"joey graham (17)\", \"chris bosh (11)\", \"jermaine o'neal (4)\", \"quicken loans arena 20049\", \"8 - 12\"],[\"21\", \"december 10\", \"indiana\", \"w 101 - 88 (ot)\", \"jason kapono (25)\", \"chris bosh (10)\", \"josé calderón (14)\", \"air canada centre 17877\", \"9 - 12\"],[\"22\", \"december 12\", \"new jersey\", \"w 101 - 79 (ot)\", \"chris bosh (18)\", \"jamario moon (9)\", \"roko ukić (5)\", \"izod center 13926\", \"10 - 12\"],[\"23\", \"december 14\", \"new orleans\", \"l 91 - 99 (ot)\", \"chris bosh (25)\", \"chris bosh , jamario moon (8)\", \"josé calderón (7)\", \"air canada centre 18537\", \"10 - 13\"],[\"24\", \"december 15\", \"new jersey\", \"l 87 - 94 (ot)\", \"chris bosh , jason kapono (17)\", \"chris bosh , jamario moon (9)\", \"josé calderón (8)\", \"air canada centre 18561\", \"10 - 14\"],[\"25\", \"december 17\", \"dallas\", \"l 86 - 96 (ot)\", \"jermaine o'neal (19)\", \"chris bosh , jamario moon (9)\", \"josé calderón (10)\", \"air canada centre 18832\", \"10 - 15\"],[\"26\", \"december 19\", \"oklahoma city\", \"l 83 - 91 (ot)\", \"chris bosh (22)\", \"chris bosh (16)\", \"josé calderón (8)\", \"ford center 18806\", \"10 - 16\"],[\"27\", \"december 20\", \"san antonio\", \"l 97 - 107 (ot)\", \"jermaine o'neal (24)\", \"chris bosh , jermaine o'neal (10)\", \"chris bosh , josé calderón (4)\", \"at&t center 17227\", \"10 - 17\"],[\"28\", \"december 22\", \"la clippers\", \"w 97 - 75 (ot)\", \"chris bosh (31)\", \"jermaine o'neal (9)\", \"josé calderón (9)\", \"staples center 16094\", \"11 - 17\"],[\"29\", \"december 26\", \"sacramento\", \"w 107 - 101 (ot)\", \"jermaine o'neal (36)\", \"jermaine o'neal (9)\", \"josé calderón (6)\", \"arco arena 12059\", \"12 - 17\"],[\"30\", \"december 27\", \"portland\", \"l 89 - 102 (ot)\", \"chris bosh (29)\", \"chris bosh (9)\", \"josé calderón (8)\", \"rose garden 20588\", \"12 - 18\"],[\"31\", \"december 29\", \"golden state\", \"l 111 - 117 (ot)\", \"chris bosh (30)\", \"chris bosh (14)\", \"josé calderón (16)\", \"oracle arena 19596\", \"12 - 19\"]]\nQuestion = Is it true that the san antonio team scored l 97 - 107 (ot)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    scores = get_column_by_name(table_data, \"score\")\n    for team, score in zip(teams, scores):\n        if team.lower() == \"san antonio\":\n            answer = equal_to(score, \"l 97 - 107 (ot)\")\n            break \n    return answer\n\n### END"}
{"id": "bad9b591-4d48-481f-9426-d553ddc8fd28", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"title\", \"from album\", \"label\", \"label - nr\"],[\"1962\", \"tonight / sinnin' sam\", \"lookin' ahead\", \"pacific jazz\", \"x - 340\"],[\"1962\", \"the young rabbits / song of india\", \"lookin' ahead\", \"pacific jazz\", \"x - 342\"],[\"1962\", \"congolese sermon / weather beat\", \"(only on 45)\", \"pacific jazz\", \"x - 357\"],[\"1963\", \"no name samba / tough talk\", \"tough talk\", \"world pacific\", \"x - 371\"],[\"1963\", \"turkish black / boopie\", \"tough talk\", \"world pacific\", \"x - 388\"],[\"1963\", \"spanish castles / bluesette\", \"jazz waltz (w les mccann)\", \"world pacific\", \"406\"],[\"1964\", \"heat wave / on broadway\", \"heat wave\", \"world pacific\", \"401\"],[\"1964\", \"i remember tomorrow / long john\", \"stretchin' out\", \"world pacific\", \"412\"],[\"1965\", \"tough talk / the thing\", \"the thing\", \"world pacific\", \"77800\"],[\"1965\", \"aqua dulce / soul bourgeoisie\", \"chile con soul\", \"world pacific\", \"77806\"],[\"1966\", \"scratch / uptight\", \"talk that talk\", \"pacific jazz\", \"88125\"],[\"1968\", \"ooga - boo - ga - loo / eleanor rigby\", \"lighthouse '68\", \"pacific jazz\", \"88144\"],[\"1968\", \"hey jude / love and peace\", \"powerhouse\", \"pacific jazz\", \"88146\"],[\"1969\", \"get back / willie and laura mae jones\", \"lighthouse '69\", \"word pacific jazz\", \"88153\"],[\"1970\", \"way back home / jackson\", \"old socks , new shoes\", \"chisa\", \"c - 8010\"]]\nQuestion = Is it true that in the year 1968 hey jude / love and peace was from the album powerhouse in a world pacific label?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    titles = get_column_by_name(table_data, \"title\")\n    albums = get_column_by_name(table_data, \"from album\")\n    labels = get_column_by_name(table_data, \"label\")\n    for year, title, album, label in zip(years, titles, albums, labels):\n        if year == \"1968\" and title.lower() == \"hey jude / love and peace\" and album.lower() == \"powerhouse\" and label.lower() == \"world pacific\":\n            return True\n    return False\n\n### END"}
{"id": "27d785a8-12e8-4d22-ad94-670a21fd91d0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"satellite\",\"cospar id\",\"satcat no\",\"product number\",\"launch date\",\"estimated end date\",\"estimated operational life\"],[\"kosmos 2133\",\"1991 - 010a\",\"21111\",\"7120\",\"14 february 1991\",\"9 november 1995\",\"4 years 9 months\"],[\"kosmos 2224\",\"1992 - 088a\",\"22269\",\"7121\",\"17 december 1992\",\"17 june 1999\",\"6 years 6 months\"],[\"kosmos 2282\",\"1994 - 038a\",\"23168\",\"7123\",\"6 july 1994\",\"29 december 1995\",\"1 year 5 months\"],[\"kosmos 2350\",\"1998 - 025a\",\"25315\",\"7122\",\"29 april 1998\",\"29 june 1998\",\"2 months\"],[\"kosmos 2379\",\"2001 - 037a\",\"26892\",\"7124\",\"24 august 2001\",\"late 2009 / early 2010\",\"8 years\"],[\"kosmos 2397\",\"2003 - 015a\",\"27775\",\"7126\",\"24 april 2003\",\"june 2003\",\"2 months\"],[\"kosmos 2440\",\"2008 - 033a\",\"33108\",\"7127\",\"26 june 2008\",\"february 2010\",\"1 year 4 months\"]]\nQuestion = Is it true that the satellite with cospar id of 2001 - 037a is estimated to end in late 2009 to early 2010?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    cospar_ids = get_column_by_name(table_data, \"cospar id\")\n    estimated_end_dates = get_column_by_name(table_data, \"estimated end date\")\n    for cospar_id, estimated_end_date in zip(cospar_ids, estimated_end_dates):\n        if equal_to(cospar_id, \"2001 - 037a\"):\n            answer = equal_to(estimated_end_date, \"late 2009 / early 2010\")\n            break \n    return answer\n\n### END"}
{"id": "0e9abfa0-6d5b-4403-b337-e79532783363", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = algeria at the 2008 summer olympics\ntable_data = [[\"athlete\", \"event\", \"round of 32\", \"round of 16\", \"quarterfinals\", \"semifinals\"],[\"abdelhalim ouradi\", \"bantamweight\", \"nevin ( irl ) l 4 - 9\", \"did not advance\", \"did not advance\", \"did not advance\"],[\"abdelkader chadi\", \"featherweight\", \"bye\", \"adi ( tha ) w 7 - 6\", \"kılıç ( tur ) l 6 - 13\", \"did not advance\"],[\"hamza kramou\", \"lightweight\", \"ugás ( cub ) l 3 - 21\", \"did not advance\", \"did not advance\", \"did not advance\"],[\"nabil kassel\", \"middleweight\", \"bye\", \"sutherland ( irl ) l 14 - 21\", \"did not advance\", \"did not advance\"],[\"abdelhafid benchebla\", \"light heavyweight\", \"kumar ( ind ) w 23 - 3\", \"yasser ( egy ) w 13 - 6\", \"zhang xp ( chn ) l 7 - 12\", \"did not advance\"],[\"abdelaziz touilbini\", \"heavyweight\", \"n / a\", \"wilder ( usa ) l 4 - 10\", \"did not advance\", \"did not advance\"]]\nQuestion = Is it true that abdelhafid benchebla faced zhang xp ( chn ) l 7 - 12 in the quarterfinals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    athletes = get_column_by_name(table_data, \"athlete\")\n    quarterfinals = get_column_by_name(table_data, \"quarterfinals\")\n    for athlete, quarterfinal in zip(athletes, quarterfinals):\n        if athlete.lower() == \"abdelhafid benchebla\":\n            answer = equal_to(quarterfinal, \"zhang xp ( chn ) l 7 - 12\")\n            break \n    return answer\n\n### END"}
{"id": "f6bbb505-e542-40d5-8c3b-4ccfa8341e1a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = air macau destinations\ntable_data = [[\"city\", \"country\", \"iata\", \"icao\", \"airport\"],[\"bangkok\", \"thailand\", \"bkk\", \"vtbs\", \"suvarnabhumi airport\"],[\"beijing\", \"china\", \"pek\", \"zbaa\", \"beijing capital international airport\"],[\"changsha\", \"china\", \"csx\", \"zgha\", \"changsha huanghua international airport\"],[\"chengdu\", \"china\", \"ctu\", \"zuuu\", \"chengdu shuangliu international airport\"],[\"chongqing\", \"china\", \"ckg\", \"zuck\", \"chongqing jiangbei international airport\"],[\"hangzhou\", \"china\", \"hgh\", \"zshc\", \"hangzhou xiaoshan international airport\"],[\"hefei\", \"china\", \"hfe\", \"zsof\", \"hefei luogang international airport\"],[\"kaohsiung\", \"taiwan\", \"khh\", \"rckh\", \"kaohsiung international airport\"],[\"macau\", \"macau\", \"mfm\", \"vmmc\", \"macau international airport\"],[\"nanjing\", \"china\", \"nkg\", \"zsnj\", \"nanjing lukou international airport\"],[\"nanning\", \"china\", \"nng\", \"zgnn\", \"nanning wuxu international airport\"],[\"ningbo\", \"china\", \"ngb\", \"zsnb\", \"ningbo lishe international airport\"],[\"osaka\", \"japan\", \"kix\", \"rjbb\", \"kansai international airport\"],[\"seoul\", \"south korea\", \"icn\", \"rksi\", \"incheon international airport\"],[\"shanghai\", \"china\", \"sha\", \"zsss\", \"shanghai hongqiao international airport\"],[\"shanghai\", \"china\", \"pvg\", \"zspd\", \"shanghai pudong international airport\"],[\"shenyang\", \"china\", \"she\", \"zytx\", \"shenyang taoxian international airport\"],[\"shenzhen\", \"china\", \"szx\", \"zgsz\", \"shenzhen bao'an international airport\"],[\"singapore\", \"singapore\", \"sin\", \"wsss\", \"singapore changi airport\"],[\"taipei\", \"taiwan\", \"tpe\", \"rctp\", \"taiwan taoyuan international airport\"],[\"taiyuan\", \"china\", \"tyn\", \"zbyn\", \"taiyuan wusu airport\"],[\"tokyo\", \"japan\", \"nrt\", \"rjaa\", \"narita international airport\"],[\"xiamen\", \"china\", \"xmn\", \"zsam\", \"xiamen gaoqi international airport\"],[\"wenzhou\", \"china\", \"wnz\", \"zswz\", \"wenzhou yongqiang international airport\"]]\nQuestion = Is it true that macau international airport is macau 's airport?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    cities = get_column_by_name(table_data, \"city\")\n    airports = get_column_by_name(table_data, \"airport\")\n    answer = False\n    for city, airport in zip(cities, airports):\n        if city.lower() == \"macau\" and airport.lower() == \"macau international airport\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "674d6b50-4daf-4810-9448-90a561609840", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = chameleon\ntable_data = [[\"scientific name\", \"common name\", \"length (male)\", \"length (female)\", \"color\", \"lifespan (years)\"],[\"chamaeleo calyptratus\", \"veiled chameleon\", \"14 - 24 in\", \"10 - 13 in\", \"green and light colors\", \"about 5\"],[\"trioceros jacksonii\", \"jackson 's chameleon\", \"9 - 13 in\", \"10 - 13 in\", \"green and light colors\", \"5 - 10\"],[\"furcifer pardalis\", \"panther chameleon\", \"15 - 21 in\", \"9 - 13 in\", \"darker colors\", \"about 5 (2 - 3 for birthing females)\"],[\"rieppeleon brevicaudatus\", \"bearded pygmy chameleon\", \"2 - 3 in\", \"2 - 3 in\", \"brown , beige , green\", \"about 3 - 5\"],[\"rhampholeon spectrum\", \"spectral pygmy chameleon\", \"3 - 4 in\", \"2 - 4 in\", \"tan and gray\", \"3 - 5\"]]\nQuestion = Is it true that the scientific name for the veiled chameleon is chamaeleo calyptratus?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    common_names = get_column_by_name(table_data, \"common name\")\n    scientific_names = get_column_by_name(table_data, \"scientific name\")\n    for common_name, scientific_name in zip(common_names, scientific_names):\n        if common_name.lower() == \"veiled chameleon\":\n            answer = scientific_name.lower() == \"chamaeleo calyptratus\"\n            break\n    return answer\n\n### END"}
{"id": "053c87ef-6631-4c9e-a1ac-300bd2cbe218", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = daniel gimeno - traver\ntable_data = [[\"date\", \"tournament\", \"surface\", \"opponent\", \"score\"],[\"5 september 2005\", \"brasov\", \"clay\", \"daniel elsner\", \"5 - 7 , 2 - 6\"],[\"5 november 2007\", \"guayaquil\", \"clay\", \"nicolás lapentti\", \"3 - 6 , 7 - 6 (6) , 5 - 7\"],[\"10 march 2008\", \"tanger\", \"clay\", \"marcel granollers\", \"4 - 6 , 4 - 6\"],[\"15 september 2008\", \"banja luka\", \"clay\", \"ilija bozoljac\", \"4 - 6 , 4 - 6\"],[\"12 october 2009\", \"asunción\", \"clay\", \"ramón delgado\", \"6 - 7 (2 - 7) , 6 - 1 , 3 - 6\"],[\"5 july 2010\", \"san benedetto\", \"clay\", \"carlos berlocq\", \"3 - 6 , 6 - 4 , 4 - 6\"],[\"2 october 2011\", \"madrid\", \"clay\", \"jérémy chardy\", \"1 - 6 , 7 - 5 , 6 - 7 (3 - 7)\"],[\"12 august 2012\", \"cordenos\", \"clay\", \"paolo lorenzi\", \"6 - 7 (5 - 7) , 3 - 6\"]]\nQuestion = Is it true that the guayaquil tournament was played on 5 november 2007 with a score of 3 - 6 , 7 - 6 (6) , 4 - 7?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    tournaments = get_column_by_name(table_data, \"tournament\")\n    scores = get_column_by_name(table_data, \"score\")\n    for date, tournament, score in zip(dates, tournaments, scores):\n        if date.lower() == \"5 november 2007\" and tournament.lower() == \"guayaquil\":\n            answer = equal_to(score, \"3 - 6 , 7 - 6 (6) , 4 - 7\")\n            break \n    return answer\n\n### END"}
{"id": "0559b533-d878-44cc-b6d4-5c06e800f601", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 golden state warriors season\ntable_data = [[\"game\",\"date\",\"team\",\"score\",\"high points\",\"high rebounds\",\"high assists\",\"location attendance\",\"record\"],[\"18\",\"december 1\",\"miami\",\"l 129 - 130 (ot)\",\"jamal crawford (40)\",\"andris biedriņš (15)\",\"stephen jackson (11)\",\"oracle arena 18723\",\"5 - 13\"],[\"19\",\"december 5\",\"houston\",\"l 112 - 131 (ot)\",\"stephen jackson (26)\",\"corey maggette (10)\",\"stephen jackson (5)\",\"toyota center 14438\",\"5 - 14\"],[\"20\",\"december 6\",\"san antonio\",\"l 88 - 123 (ot)\",\"brandan wright (13)\",\"andris biedriņš (8)\",\"ronny turiaf (4)\",\"at&t center 17740\",\"5 - 15\"],[\"21\",\"december 8\",\"oklahoma city\",\"w 112 - 102 (ot)\",\"jamal crawford (19)\",\"andris biedriņš (21)\",\"jamal crawford (6)\",\"ford center 17854\",\"6 - 15\"],[\"22\",\"december 10\",\"milwaukee\",\"w 119 - 96 (ot)\",\"stephen jackson (21)\",\"andris biedriņš (14)\",\"stephen jackson (8)\",\"oracle arena 18375\",\"7 - 15\"],[\"23\",\"december 12\",\"houston\",\"l 108 - 119 (ot)\",\"andris biedriņš (18)\",\"andris biedriņš (12)\",\"stephen jackson (5)\",\"oracle arena 19276\",\"7 - 16\"],[\"24\",\"december 13\",\"denver\",\"l 105 - 123 (ot)\",\"jamal crawford (25)\",\"rob kurz , andris biedriņš (7)\",\"stephen jackson (5)\",\"pepsi center 15322\",\"7 - 17\"],[\"25\",\"december 15\",\"orlando\",\"l 98 - 109 (ot)\",\"andris biedriņš (23)\",\"kelenna azubuike (10)\",\"marco belinelli , jamal crawford (6)\",\"oracle arena 18844\",\"7 - 18\"],[\"27\",\"december 19\",\"atlanta\",\"l 99 - 115 (ot)\",\"marco belinelli (27)\",\"andris biedriņš (15)\",\"marco belinelli , andris biedriņš (6)\",\"philips arena 16768\",\"7 - 20\"],[\"28\",\"december 20\",\"charlotte\",\"w 110 - 103 (ot)\",\"jamal crawford (50)\",\"kelenna azubuike (13)\",\"jamal crawford , ronny turiaf (5)\",\"time warner cable arena 13068\",\"8 - 20\"],[\"29\",\"december 22\",\"orlando\",\"l 81 - 113 (ot)\",\"jamal crawford (18)\",\"anthony randolph (12)\",\"andris biedriņš (5)\",\"amway arena 17461\",\"8 - 21\"],[\"30\",\"december 23\",\"miami\",\"l 88 - 96 (ot)\",\"c j watson (18)\",\"kelenna azubuike , andris biedriņš (9)\",\"kelenna azubuike , marco belinelli (3)\",\"american airlines arena 17862\",\"8 - 22\"],[\"31\",\"december 26\",\"boston\",\"w 99 - 89 (ot)\",\"stephen jackson (28)\",\"ronny turiaf (8)\",\"stephen jackson , marco belinelli (4)\",\"oracle arena 19596\",\"9 - 22\"],[\"32\",\"december 28\",\"la lakers\",\"l 113 - 130 (ot)\",\"jamal crawford (22)\",\"andris biedriņš (17)\",\"jamal crawford , stephen jackson (5)\",\"staples center 18997\",\"9 - 23\"],[\"33\",\"december 29\",\"toronto\",\"w 117 - 111 (ot)\",\"stephen jackson (30)\",\"andris biedriņš (15)\",\"stephen jackson , jamal crawford (7)\",\"oracle arena 19596\",\"10 - 23\"]]\nQuestion = Is it true that the total number of attendees on december 29th was 19596?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    attendances = get_column_by_name(table_data, \"location attendance\")\n    for date, attendance in zip(dates, attendances):\n        if \"december 29\" in date.lower():\n            answer = equal_to(attendance, \"oracle arena 19596\")\n            break \n    return answer\n\n### END"}
{"id": "5beebab2-18ac-4e7b-9e2f-d5fe2eca846b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of americas records in swimming\ntable_data = [[\"event\", \"time\", \"nationality\", \"date\", \"meet\", \"location\"],[\"50 m freestyle\", \"20.91\", \"brazil\", \"18 december 2009\", \"brazilian championships\", \"são paulo, brazil\"],[\"100 m freestyle\", \"46.91\", \"brazil\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m freestyle\", \"1:42.96\", \"united states\", \"12 august 2008\", \"olympic games\", \"beijing, china\"],[\"400 m freestyle\", \"3:42.78\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"800 m freestyle\", \"7:41.86\", \"canada\", \"27 july 2011\", \"world championships\", \"shanghai, china\"],[\"1500 m freestyle\", \"14:39.63\", \"canada\", \"4 august 2012\", \"olympic games\", \"london, united kingdom\"],[\"50 m backstroke\", \"24.33\", \"united states\", \"5 december 2008\", \"dutch swim cup\", \"eindhoven, netherlands\"],[\"100 m backstroke\", \"51.94\", \"united states\", \"8 july 2009\", \"us championships\", \"indianapolis, united states\"],[\"200 m backstroke\", \"1:51.92\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m breaststroke\", \"26.76\", \"brazil\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"100 m breaststroke\", \"58.96\", \"united states\", \"26 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m breaststroke\", \"2:07.42\", \"united states\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m butterfly\", \"22.76\", \"brazil\", \"26 april 2012\", \"maria lenk trophy\", \"rio de janeiro, brazil\"],[\"100 m butterfly\", \"49.82\", \"united states\", \"1 august 2009\", \"world championships\", \"rome, italy\"],[\"200 m butterfly\", \"1:51.51\", \"united states\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m individual medley\", \"1:54.00\", \"united states\", \"28 july 2011\", \"world championships\", \"shanghai, china\"],[\"400 m individual medley\", \"4:03.84\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"4100 m freestyle relay\", \"3:08.24\", \"united states\", \"11 august 2008\", \"olympic games\", \"beijing, china\"],[\"4200 m freestyle relay\", \"6:58.55\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"4100 m medley relay\", \"3:27.28\", \"united states\", \"2 august 2009\", \"world championships\", \"rome, italy\"]]\nQuestion = Is it true that the united states swam the 100 m butterfly in 1:51.51?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    times = get_column_by_name(table_data, \"time\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    for event, time, nationality in zip(events, times, nationalities):\n        if event.lower() == \"100 m butterfly\" and nationality.lower() == \"united states\":\n            answer = equal_to(time, \"1:51.51\")\n            break \n    return answer\n\n### END"}
{"id": "05ab576b-c2c6-428b-b2cf-b32a9601008d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of how it 's made episodes\ntable_data = [[\"series ep\", \"episode\", \"segment a\", \"segment b\", \"segment c\", \"segment d\"],[\"20 - 01\", \"248\", \"native healing drums\", \"s raisin\", \"stereoscopic viewers\", \"ribbon microphones\"],[\"20 - 02\", \"249\", \"horse bits\", \"oat cereal\", \"turquoise jewellery\", \"electric scooters\"],[\"20 - 03\", \"250\", \"nail nippers\", \"jade putters\", \"ice cider\", \"water skis\"],[\"20 - 04\", \"251\", \"es stagecoach\", \"road reflectors\", \"fire baked pottery\", \"custom motorcycle tanks\"],[\"20 - 05\", \"252\", \"replica clay pipes\", \"drinking fountains\", \"orange liqueur\", \"compound bows\"],[\"20 - 06\", \"253\", \"tissues\", \"travel trailers\", \"s slipper\", \"motorcycle helmets\"],[\"20 - 07\", \"254\", \"u - locks\", \"tepees\", \"s croissant\", \"rolling luggage\"],[\"20 - 08\", \"255\", \"prams\", \"factory - built homes\", \"wood flutes\", \"bicycle tires\"],[\"20 - 09\", \"256\", \"thinning shears\", \"wagon wheels\", \"toaster pastries\", \"violin bows\"],[\"20 - 10\", \"257\", \"cast iron tubs\", \"hopi kachina dolls\", \"mine truck engine rebuild\", \"memory cards\"],[\"20 - 11\", \"258\", \"cycling shoes\", \"s yurt\", \"marine plywood\", \"oil & encaustic paint\"],[\"20 - 12\", \"259\", \"paper fans\", \"walnut oil\", \"copper (part 1)\", \"copper (part 2)\"]]\nQuestion = Is it true that episode 248 is the first described in the table?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    episodes = get_column_by_name(table_data, \"episode\")\n    first_episode = episodes[0]\n    answer = equal_to(first_episode, \"248\")\n    return answer\n\n### END"}
{"id": "b455427a-1afd-42a0-8f80-43be44439f7d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = orlando magic all - time roster\ntable_data = [[\"player\",\"nationality\",\"position\",\"years in orlando\",\"school / club team\"],[\"matt barnes\",\"united states\",\"guard - forward\",\"2009 - 2010\",\"ucla\"],[\"andre barrett\",\"united states\",\"guard\",\"2005\",\"seton hall\"],[\"brandon bass\",\"united states\",\"forward\",\"2009 - 2011\",\"louisiana state\"],[\"tony battie\",\"united states\",\"forward - center\",\"2004 - 2009\",\"texas tech\"],[\"david benoit\",\"united states\",\"forward\",\"1998\",\"alabama\"],[\"keith bogans\",\"united states\",\"guard\",\"2003 - 2004\",\"kentucky\"],[\"keith bogans\",\"united states\",\"guard\",\"2006 - 2009\",\"kentucky\"],[\"anthony bonner\",\"united states\",\"forward\",\"1995 - 1996\",\"st louis\"],[\"anthony bowie\",\"united states\",\"guard\",\"1991 - 1996\",\"oklahoma\"],[\"earl boykins\",\"united states\",\"guard\",\"1999\",\"eastern michigan\"],[\"michael bradley\",\"united states\",\"forward\",\"2004 - 2005\",\"villanova\"],[\"dee brown\",\"united states\",\"guard\",\"2000 - 2002\",\"jacksonville\"],[\"jud buechler\",\"united states\",\"guard - forward\",\"2001 - 2002\",\"arizona\"],[\"pat burke\",\"ireland\",\"center\",\"2002 - 2003\",\"auburn\"]]\nQuestion = Is it true that eastern michigan has a player of jud buechler?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    schools = get_column_by_name(table_data, \"school / club team\")\n    answer = False\n    for player, school in zip(players, schools):\n        if \"jud buechler\" in player.lower() and \"eastern michigan\" in school.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "c5a844da-5dad-4299-a7be-4d9fcfa44028", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"population (region total)\", \"population (stanthorpe)\", \"population (warwick)\", \"population (allora)\", \"population (glengallan)\", \"population (rosenthal)\"],[\"1933\", \"25016\", \"6934\", \"6664\", \"2624\", \"6334\", \"2460\"],[\"1947\", \"24009\", \"7419\", \"7129\", \"2217\", \"5269\", \"1975\"],[\"1954\", \"25862\", \"8335\", \"9151\", \"2106\", \"4639\", \"1631\"],[\"1961\", \"26288\", \"8514\", \"9843\", \"1961\", \"4388\", \"1582\"],[\"1966\", \"25917\", \"8503\", \"10065\", \"1890\", \"3906\", \"1553\"],[\"1971\", \"24115\", \"8189\", \"9303\", \"1719\", \"3410\", \"1494\"],[\"1976\", \"24583\", \"8709\", \"9169\", \"1666\", \"3491\", \"1548\"],[\"1981\", \"24300\", \"8576\", \"8853\", \"1679\", \"3611\", \"1581\"],[\"1986\", \"26270\", \"9143\", \"9435\", \"2041\", \"3688\", \"1963\"],[\"1991\", \"28288\", \"9556\", \"10393\", \"2132\", \"3966\", \"2241\"],[\"1996\", \"29563\", \"9596\", \"10896\", \"2234\", \"3990\", \"2742\"],[\"2001\", \"30554\", \"9860\", \"10956\", \"2439\", \"4088\", \"3129\"]]\nQuestion = Is it true that glengallen 's highest ever population was 6334?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(int(row[column_index]))\n    return column\n\ndef get_max_value(lst):\n    return max(lst)\n\ndef solution(table_data):\n    glengallan_population = get_column_by_name(table_data, \"population (glengallan)\")\n    max_population = get_max_value(glengallan_population)\n    answer = max_population == 6334\n    return answer\n\n### END"}
{"id": "7b0fbcd2-08f4-423b-870f-7898708e896b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of rna structure prediction software\ntable_data = [[\"name\", \"species specific\", \"intra - molecular structure\", \"comparative\", \"link\"],[\"diana - microt\", \"human , mouse\", \"no\", \"yes\", \"webserver\"],[\"microtar\", \"no\", \"no\", \"no\", \"sourcecode\"],[\"mitarget\", \"no\", \"no\", \"no\", \"webserver\"],[\"mirror\", \"no\", \"no\", \"no\", \"webserver\"],[\"pictar\", \"8 vertebrates\", \"no\", \"yes\", \"predictions\"],[\"pita\", \"no\", \"yes\", \"no\", \"executable , webserver , predictions\"],[\"rna22\", \"no\", \"no\", \"no\", \"predictions custom\"],[\"rnahybrid\", \"no\", \"no\", \"no\", \"sourcecode , webserver\"],[\"sylamer\", \"no\", \"no\", \"no\", \"sourcecode webserver\"],[\"taref\", \"yes\", \"no\", \"no\", \"server / sourcecode\"],[\"p - taref\", \"yes\", \"no\", \"no\", \"server / standalone\"],[\"targetscan\", \"vertebrates , flies , nematodes\", \"evaluated indirectly\", \"yes\", \"sourcecode , webserver\"]]\nQuestion = Is it true that the names , mitarget and mirror have an intra - molecular structure of no , and a link of webserver , and a comparative of no?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    intra_molecular_structures = get_column_by_name(table_data, \"intra - molecular structure\")\n    links = get_column_by_name(table_data, \"link\")\n    comparatives = get_column_by_name(table_data, \"comparative\")\n    answer = False\n    for name, intra_molecular_structure, link, comparative in zip(names, intra_molecular_structures, links, comparatives):\n        if name.lower() in [\"mitarget\", \"mirror\"]:\n            if equal_to(intra_molecular_structure, \"no\") and equal_to(link, \"webserver\") and equal_to(comparative, \"no\"):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "f578fa66-4a16-4172-9f56-2b419e256aa9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = papal election , 1292 - 94\ntable_data = [[\"elector\",\"nationality\",\"order\",\"title\",\"elevated\",\"elevator\"],[\"latino malabranca orsini , op\",\"roman\",\"cardinal - bishop\",\"bishop of ostia e velletri\",\"1278 , march 12\",\"nicholas iii\"],[\"gerardo bianchi\",\"parmigiani\",\"cardinal - bishop\",\"bishop of sabina\",\"1278 , march 12\",\"nicholas iii\"],[\"giovanni boccamazza\",\"roman\",\"cardinal - bishop\",\"bishop of frascati\",\"1285 , december 22\",\"honorius iv\"],[\"matteo d'acquasparta , ofm\",\"ni todi\",\"cardinal - bishop\",\"bishop of porto e santa rufina\",\"1288 , may 16\",\"nicholas iv\"],[\"jean cholet\",\"french\",\"cardinal - priest\",\"titulus s cecilia\",\"1281 , april 12\",\"martin iv\"],[\"benedetto caetani\",\"ni anagni ( n catalonia family)\",\"cardinal - priest\",\"titulus ss silvestro e martino ai monti\",\"1281 , april 12\",\"martin iv\"],[\"hugues aycelin de billom , op\",\"french\",\"cardinal - priest\",\"titulus s sabina\",\"1288 , may 16\",\"nicholas iv\"],[\"pietro peregrosso\",\"ese milan\",\"cardinal - priest\",\"titulus s marco\",\"1288 , may 16\",\"nicholas iv\"],[\"matteo orsini rosso\",\"roman\",\"cardinal - deacon\",\"deacon of s maria in portico\",\"1262 , may 22\",\"urban iv\"],[\"giacomo colonna\",\"roman\",\"cardinal - deacon\",\"deacon of s maria in via lata\",\"1278 , march 12\",\"nicholas iii\"],[\"napoleone orsini\",\"roman\",\"cardinal - deacon\",\"deacon of s adriano\",\"1288 , may 16\",\"nicholas iv\"],[\"pietro colonna\",\"roman\",\"cardinal - deacon\",\"deacon of s eustachio\",\"1288 , may 16\",\"nicholas iv\"]]\nQuestion = Is it true that hugues aycelin de billom , op was the french elector elevated on 1288 , may 16?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    electors = get_column_by_name(table_data, \"elector\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    elevated_dates = get_column_by_name(table_data, \"elevated\")\n    answer = False\n    for elector, nationality, elevated_date in zip(electors, nationalities, elevated_dates):\n        if elector.lower() == \"hugues aycelin de billom , op\" and nationality.lower() == \"french\" and elevated_date == \"1288 , may 16\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "94675abb-7037-419c-8d27-1a9e0c12986c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the howie carr show\ntable_data = [[\"calls\", \"frequency\", \"branding\", \"format\", \"timeslot\", \"group owner\"],[\"wgan\", \"560 khz\", \"news radio 560 wgan\", \"news / talk\", \"live 3p - 6p\", \"saga communications\"],[\"whyn\", \"560 khz\", \"news / talk 560 whyn\", \"news / talk\", \"live 3p - 7p\", \"clear channel communications\"],[\"wvmt\", \"620 khz\", \"news / talk 620 wvmt\", \"news / talk\", \"live 3p - 7p\", \"sison broadcasting\"],[\"wrko\", \"680 khz\", \"am 680 wrko\", \"news / talk\", \"live 3p - 7p\", \"entercom\"],[\"wcrn\", \"830 khz\", \"wcrn 830 true talk\", \"news / talk\", \"live 3p - 7p\", \"carter broadcasting\"],[\"wkbk\", \"1290 khz\", \"1290 wkbk w281au 104.1\", \"news / talk\", \"live 3p - 6p\", \"saga communications\"],[\"wegp\", \"1390 khz\", \"wegp 1390 am - the talk of the county\", \"news / talk\", \"live 3p - 6p\", \"decelles / media , inc\"],[\"wxtk\", \"95.1 mhz\", \"news radio 95 wxtk\", \"news / talk\", \"live 3p - 7p\", \"qantam of cape cod , llc\"],[\"wntk - fm\", \"99.7 mhz\", \"wntk talk radio\", \"news / talk\", \"live 3p - 6p\", \"koor communications\"],[\"wuvr\", \"1490 khz\", \"wntk talk radio\", \"news / talk\", \"live 3p - 6p\", \"koor communications\"],[\"wvom - fm / wvqm\", \"103.9 / 101.3 mhz\", \"the voice of maine\", \"news / talk\", \"live 3p - 7p\", \"blueberry broadcasting\"]]\nQuestion = Is it true that whyn 's timeslot is live 3p - 7p for calls?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    calls = get_column_by_name(table_data, \"calls\")\n    timeslots = get_column_by_name(table_data, \"timeslot\")\n    for call, timeslot in zip(calls, timeslots):\n        if call.lower() == \"whyn\":\n            answer = timeslot == \"live 3p - 7p\"\n            break\n    return answer\n\n### END"}
{"id": "e6d47bdb-48bc-45f6-a1cd-42dcb36acbc6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1965 american football league draft\ntable_data = [[\"pick\", \"team\", \"player\", \"position\", \"college\"],[\"9\", \"denver broncos\", \"dick butkus\", \"linebacker\", \"illinois\"],[\"10\", \"houston oilers\", \"malcolm walker\", \"center\", \"rice\"],[\"11\", \"oakland raiders\", \"fred biletnikoff\", \"wide receiver\", \"florida state\"],[\"12\", \"new york jets\", \"john huarte\", \"quarterback\", \"notre dame\"],[\"13\", \"kansas city chiefs\", \"jack chapple\", \"linebacker\", \"stanford\"],[\"14\", \"san diego chargers\", \"roy jefferson\", \"linebacker\", \"utah\"],[\"15\", \"houston oilers (from boston patriots)\", \"ralph neely\", \"tackle\", \"oklahoma\"],[\"16\", \"kansas city chiefs (from buffalo bills)\", \"ronnie caveness\", \"linebacker\", \"arkansas\"]]\nQuestion = Is it true that denver broncos chose a position of quarterback?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    positions = get_column_by_name(table_data, \"position\")\n    answer = False\n    for team, position in zip(teams, positions):\n        if \"denver broncos\" in team.lower() and \"quarterback\" in position.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "b154b4a2-a6b2-40e8-933e-108e4392cea2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = harald ertl\ntable_data = [[\"year\", \"entrant\", \"chassis\", \"engine\", \"points\"],[\"1975\", \"warsteiner brewery\", \"hesketh 308\", \"cosworth v8\", \"0\"],[\"1976\", \"hesketh racing\", \"hesketh 308d\", \"cosworth v8\", \"0\"],[\"1977\", \"hesketh racing\", \"hesketh 308e\", \"cosworth v8\", \"0\"],[\"1978\", \"sachs racing\", \"ensign n177\", \"cosworth v8\", \"0\"],[\"1978\", \"ats engineering\", \"ats hs1\", \"cosworth v8\", \"0\"],[\"1980\", \"team ats\", \"ats d4\", \"cosworth v8\", \"0\"]]\nQuestion = Is it true that in 1978 , the chassis ensign n177 has 0 points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    chassis = get_column_by_name(table_data, \"chassis\")\n    points = get_column_by_name(table_data, \"points\")\n    for year, chassis, point in zip(years, chassis, points):\n        if year == \"1978\" and chassis.lower() == \"ensign n177\":\n            answer = equal_to(point, \"0\")\n            break \n    return answer\n\n### END"}
{"id": "006f1fe5-7ede-4fe1-9e0f-c46e3ac6ce2d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glover teixeira\ntable_data = [[\"result\", \"opponent\", \"method\", \"event\", \"date\"],[\"loss\", \"gabriel vella\", \"points\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"armando sapo\", \"submission\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"salvador minnit\", \"submission\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"jorge bezerra\", \"points\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"loss\", \"vinny magalhães\", \"submission (armbar)\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"loss\", \"gerardi rinaldi\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"dean lister\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"vesa vuori\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"leonardo chocolate\", \"submission (rear naked choke)\", \"adcc brasil trails (under 99 kg)\", \"2009\"],[\"win\", \"renato ferreira\", \"points\", \"adcc brasil trails (under 99 kg)\", \"2009\"]]\nQuestion = Is it true that adcc barcelona (under 99 kg) was the event for vinny magalhães after 2009?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    dates = get_column_by_name(table_data, \"date\")\n    for event, date in zip(events, dates):\n        if \"vinny magalhães\" in event.lower() and int(date) > 2009:\n            answer = equal_to(event, \"adcc barcelona (under 99 kg)\")\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "283d56d3-a792-4baa-b144-9687294eca20", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = hey venus!\ntable_data = [[\"region\", \"date\", \"label\", \"format\", \"catalogue\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"vinyl record\", \"rtradlp 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"compact disc\", \"rtradcd 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"download\", \"-\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"vinyl record\", \"rt - 346 - 1\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"download\", \"rt - 346 - 5\"],[\"united states\", \"22 january 2008\", \"rough trade america\", \"double compact disc\", \"rtradcd 423\"],[\"japan\", \"12 september 2007\", \"rough trade japan\", \"compact disc\", \"xqcy - 1003\"]]\nQuestion = Is it true that the rough trade america label is registered in the united states?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    labels = get_column_by_name(table_data, \"label\")\n    regions = get_column_by_name(table_data, \"region\")\n    answer = \"rough trade america\" in labels and \"united states\" in regions\n    return answer\n\n### END"}
{"id": "7394451a-29b2-4025-a088-912dd8465a3d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glamorgan county cricket club\ntable_data = [[\"score\", \"batsmen\", \"against\", \"location\", \"year\"],[\"374\", \"matthew elliott and steve james\", \"sussex\", \"colwyn bay\", \"2000\"],[\"252\", \"matthew maynard and david hemp\", \"northamptonshire\", \"sophia gardens\", \"2002\"],[\"313\", \"emrys davies and willie jones\", \"essex\", \"brentwood\", \"1948\"],[\"425\", \"adrian dale and viv richards\", \"middlesex\", \"sophia gardens\", \"1993\"],[\"264\", \"maurice robinson and stan montgomery\", \"hampshire\", \"bournemouth\", \"1949\"],[\"240\", \"jim allenby and mark wallace\", \"surrey\", \"the brit oval\", \"2009\"],[\"211\", \"tony cottey and ottis gibson\", \"leicestershire\", \"swansea\", \"1996\"],[\"202\", \"dai davies and joe hills\", \"sussex\", \"eastbourne\", \"1928\"],[\"203\", \"joe hills and johnnie clay\", \"worcestershire\", \"swansea\", \"1929\"],[\"143\", \"terry davies and simon daniels\", \"gloucestershire\", \"swansea\", \"1982\"]]\nQuestion = Is it true that the batsman from the year 1983 is joe hills and johnnie clay?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    batsmen = get_column_by_name(table_data, \"batsmen\")\n    years = get_column_by_name(table_data, \"year\")\n    for batsman, year in zip(batsmen, years):\n        if year == \"1983\":\n            answer = equal_to(batsman, \"joe hills and johnnie clay\")\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "a9db9dc1-428a-4ef1-9c6d-fb35388424dc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = marsel ilhan\ntable_data = [[\"outcome\", \"date\", \"tournament\", \"surface\", \"opponent\", \"score\"],[\"runner - up\", \"august 20 , 2007\", \"karshi\", \"hard\", \"denis istomin\", \"1 - 6 , 4 - 6\"],[\"winner\", \"july 13 , 2008\", \"israel open\", \"hard\", \"ivo klec\", \"6 - 4 , 6 - 4\"],[\"runner - up\", \"may 17 , 2009\", \"izmir cup\", \"hard\", \"andrea stoppini\", \"6 - 7 , 2 - 6\"],[\"winner\", \"september 20 , 2010\", \"banja luka\", \"clay\", \"pere riba\", \"6 - 0 , 7 - 6 (7 - 4)\"],[\"runner - up\", \"september 26 , 2010\", \"izmir cup\", \"hard\", \"somdev devvarman\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 10 , 2011\", \"scheveningen\", \"clay\", \"steve darcis\", \"3 - 6 , 6 - 4 , 2 - 6\"],[\"runner - up\", \"september 25 , 2011\", \"izmir cup\", \"hard\", \"lukáš lacko\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 29 , 2012\", \"president 's cup (tennis)\", \"hard\", \"evgeny donskoy\", \"3 - 6 , 4 - 6\"]]\nQuestion = Is it true that ivo klec was the opponent in the september 20 , 2010 match?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    answer = False\n    for date, opponent in zip(dates, opponents):\n        if \"september 20 , 2010\" in date.lower():\n            if \"ivo klec\" in opponent.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "8071b01e-6e81-4ae9-8e2d-6ced155a43be", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\", \"10:30\"],[\"heartland\", \"heartland\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"cbc news : sunday night\", \"cbc news : sunday night\"],[\"law and order : criminal intent\", \"law and order : criminal intent\", \"cold case\", \"cold case\", \"desperate housewives\", \"desperate housewives\", \"dirty sexy money\", \"dirty sexy money\"],[\"the simpsons\", \"da kink in my hair\", \"the simpsons\", \"king of the hill\", \"family guy\", \"american dad!\", \"brothers & sisters\", \"brothers & sisters\"],[\"america 's funniest home videos\", \"america 's funniest home videos\", \"kyle xy\", \"kyle xy\", \"america 's next top model\", \"america 's next top model\", \"stargate sg - 1\", \"stargate sg - 1\"],[\"everybody hates chris\", \"speakers' corner\", \"behind the movies\", \"bravo!fact presents\", \"great movies\", \"great movies\", \"great movies\", \"great movies\"],[\"viva laughlin\", \"viva laughlin\", \"extreme makeover : home edition\", \"extreme makeover : home edition\", \"e! countdowns\", \"e! countdowns\", \"e! live encore\", \"e! live encore\"],[\"découverte\", \"et dieu créa laflaque\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"le téléjournal\", \"le téléjournal\"],[\"le banquier / dieu merci!\", \"le banquier / dieu merci!\", \"occupation double\", \"occupation double\", \"occupation double\", \"occupation double\", \"le tva week - end\", \"le tva week - end\"],[\"loft story\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal weekend\"]]\nQuestion = Is it true that brothers and sisters has a 7:30 of kyle xy?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    column_7_30 = get_column_by_index(table_data, 1)\n    column_10_00 = get_column_by_index(table_data, 6)\n    answer = equal_to(column_7_30[3], \"kyle xy\") and equal_to(column_10_00[3], \"brothers & sisters\")\n    return answer\n\n### END"}
{"id": "a1931234-74d3-47ae-82fc-3ed4707417c3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2000 - 01 prva hnl\ntable_data = [[\"team\",\"manager\",\"home city\",\"stadium\",\"capacity\"],[\"cibalia\",\"davor mladina\",\"vinkovci\",\"stadion hnk cibalia\",\"9920\"],[\"čakovec\",\"ilija lončarević\",\"čakovec\",\"stadion src mladost\",\"8000\"],[\"dinamo zagreb\",\"marijan vlak\",\"zagreb\",\"stadion maksimir\",\"37168\"],[\"hajduk split\",\"petar nadoveza\",\"split\",\"gradski stadion u poljudu\",\"35000\"],[\"hrvatski dragovoljac\",\"milivoj bračun\",\"zagreb\",\"stadion nšc stjepan spajić\",\"5000\"],[\"marsonia\",\"stjepan deverić\",\"slavonski brod\",\"gradski stadion uz savu\",\"10000\"],[\"osijek\",\"stanko mršić\",\"osijek\",\"stadion gradski vrt\",\"19500\"],[\"rijeka\",\"nenad gračan\",\"rijeka\",\"stadion na kantridi\",\"10275\"],[\"slaven belupo\",\"mladen frančić\",\"koprivnica\",\"gradski stadion u koprivnici\",\"4000\"],[\"šibenik\",\"milo nižetić\",\"šibenik\",\"stadion šubićevac\",\"8000\"],[\"varteks\",\"ivan katalinić\",\"varaždin\",\"stadion nk varteks\",\"10800\"],[\"nk zagreb\",\"branko karačić\",\"zagreb\",\"stadion u kranjčevićevoj ulici\",\"8850\"]]\nQuestion = Is it true that the team with home city koprivnica is nk zagreb?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    home_cities = get_column_by_name(table_data, \"home city\")\n    teams = get_column_by_name(table_data, \"team\")\n    for home_city, team in zip(home_cities, teams):\n        if equal_to(home_city, \"koprivnica\"):\n            answer = equal_to(team, \"nk zagreb\")\n            break \n    return answer\n\n### END"}
{"id": "274a21a9-8529-4efe-96e3-a203d0e676d3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = usa today all - usa high school baseball team\ntable_data = [[\"player\", \"position\", \"school\", \"hometown\", \"mlb draft\"],[\"delmon young\", \"outfielder\", \"camarillo high school\", \"camarillo , ca\", \"1st round - 1st pick of 2003 draft ( devil rays )\"],[\"chris lubanski\", \"outfielder\", \"kennedy - kenrick catholic high school\", \"norristown , pa\", \"1st round - 5th pick of 2003 draft ( royals )\"],[\"lastings milledge\", \"outfielder\", \"lakewood ranch high school\", \"bradenton , fl\", \"1st round - 12th pick of 2003 draft ( mets )\"],[\"brandon wood\", \"infielder\", \"horizon high school\", \"scottsdale , az\", \"1st round - 23rd pick of 2003 draft ( angels )\"],[\"john danks\", \"pitcher\", \"round rock high school\", \"round rock , tx\", \"1st round - 9th pick of 2003 draft ( rangers )\"],[\"jonathan fulton\", \"infielder\", \"george washington high school\", \"danville , va\", \"3rd round - 83rd pick of 2003 draft ( marlins )\"],[\"ian stewart\", \"infielder\", \"la quinta high school\", \"westminster , ca\", \"1st round - 10th pick of 2003 draft ( rockies )\"],[\"jeff allison\", \"pitcher\", \"veterans memorial high school\", \"peabody , ma\", \"1st round - 16th pick of 2003 draft ( marlins )\"],[\"daric barton\", \"catcher\", \"marina high school\", \"huntington beach , ca\", \"1st round - 28th pick of 2003 draft ( cardinals )\"],[\"eric duncan\", \"infielder\", \"seton hall preparatory school\", \"west orange , nj\", \"1st round - 27th pick of 2003 draft ( yankees )\"]]\nQuestion = Is it true that camarillo , ca is the hometown of delmon young?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    hometowns = get_column_by_name(table_data, \"hometown\")\n    answer = False\n    for player, hometown in zip(players, hometowns):\n        if player.lower() == \"delmon young\":\n            answer = hometown.lower() == \"camarillo , ca\"\n            break\n    return answer\n\n### END"}
{"id": "820217aa-16ec-43b8-a63e-8ce799aebe72", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of how it 's made episodes\ntable_data = [[\"series ep\", \"episode\", \"segment a\", \"segment b\", \"segment c\", \"segment d\"],[\"20 - 01\", \"248\", \"native healing drums\", \"s raisin\", \"stereoscopic viewers\", \"ribbon microphones\"],[\"20 - 02\", \"249\", \"horse bits\", \"oat cereal\", \"turquoise jewellery\", \"electric scooters\"],[\"20 - 03\", \"250\", \"nail nippers\", \"jade putters\", \"ice cider\", \"water skis\"],[\"20 - 04\", \"251\", \"es stagecoach\", \"road reflectors\", \"fire baked pottery\", \"custom motorcycle tanks\"],[\"20 - 05\", \"252\", \"replica clay pipes\", \"drinking fountains\", \"orange liqueur\", \"compound bows\"],[\"20 - 06\", \"253\", \"tissues\", \"travel trailers\", \"s slipper\", \"motorcycle helmets\"],[\"20 - 07\", \"254\", \"u - locks\", \"tepees\", \"s croissant\", \"rolling luggage\"],[\"20 - 08\", \"255\", \"prams\", \"factory - built homes\", \"wood flutes\", \"bicycle tires\"],[\"20 - 09\", \"256\", \"thinning shears\", \"wagon wheels\", \"toaster pastries\", \"violin bows\"],[\"20 - 10\", \"257\", \"cast iron tubs\", \"hopi kachina dolls\", \"mine truck engine rebuild\", \"memory cards\"],[\"20 - 11\", \"258\", \"cycling shoes\", \"s yurt\", \"marine plywood\", \"oil & encaustic paint\"],[\"20 - 12\", \"259\", \"paper fans\", \"walnut oil\", \"copper (part 1)\", \"copper (part 2)\"]]\nQuestion = Is it true that episode 251 had custom motorcycle tanks for segment d?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    episodes = get_column_by_name(table_data, \"episode\")\n    segment_d = get_column_by_name(table_data, \"segment d\")\n    for episode, segment in zip(episodes, segment_d):\n        if episode == \"251\":\n            answer = equal_to(segment, \"custom motorcycle tanks\")\n            break \n    return answer\n\n### END"}
{"id": "3305d83a-316c-47c0-8b10-b9fda03be967", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"order\",\"episode\",\"original airdate\",\"timeslot\",\"viewers (100000s)\",\"nightly rank\",\"weekly rank\"],[\"1\",\"818 - jklpuzo\",\"september 28 , 2009\",\"monday 8:00 pm - 8:30 pm\",\"13.27\",\"6\",\"16\"],[\"2\",\"whipped unto the third generation\",\"october 19 , 2009\",\"monday 7:30 pm - 8:00 pm\",\"14.36\",\"1\",\"3\"],[\"3\",\"mmm , fish yum\",\"october 26 , 2009\",\"monday 7:30 pm - 8:00 pm\",\"14.38\",\"2\",\"6\"],[\"4\",\"laxative tester , horse inseminator\",\"november 2 , 2009\",\"monday 7:30 pm - 8:00 pm\",\"13.69\",\"2\",\"8\"],[\"5\",\"for the sake of the child\",\"november 9 , 2009\",\"monday 7:30 pm - 8:00 pm\",\"14.55\",\"1\",\"4\"],[\"6\",\"give me your thumb\",\"november 16 , 2009\",\"monday 7:30 pm - 8:00 pm\",\"14.62\",\"1\",\"3\"],[\"7\",\"untainted by filth\",\"november 23 , 2009\",\"monday 7:30 pm - 8:00 pm\",\"12.76\",\"4\",\"10\"],[\"8\",\"gorp fnark shmegle\",\"february 1 , 2010\",\"monday 7:30 pm - 8:00 pm\",\"15.19\",\"1\",\"3\"],[\"9\",\"captain terry 's spray - on hair\",\"february 8 , 2010\",\"monday 7:30 pm - 8:00 pm\",\"14.20\",\"1\",\"2\"],[\"10\",\"that 's why they call it ball room\",\"february 15 , 2010\",\"monday 7:30 pm - 8:00 pm\",\"13.26\",\"3\",\"8\"],[\"11\",\"warning , it 's dirty\",\"february 22 , 2010\",\"monday 7:30 pm - 8:00 pm\",\"13.97\",\"1\",\"1\"]]\nQuestion = Is it true that 818 - jklpuzo has a nightly rank of 6th and a 3rd rank for weekly?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    episodes = get_column_by_name(table_data, \"episode\")\n    nightly_ranks = get_column_by_name(table_data, \"nightly rank\")\n    weekly_ranks = get_column_by_name(table_data, \"weekly rank\")\n    for episode, nightly_rank, weekly_rank in zip(episodes, nightly_ranks, weekly_ranks):\n        if episode.lower() == \"818 - jklpuzo\":\n            answer = equal_to(nightly_rank, \"6\") and equal_to(weekly_rank, \"3\")\n            break \n    return answer\n\n### END"}
{"id": "8adcc78a-fcee-4650-8e1b-4677d53264ec", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = usa today all - usa high school baseball team\ntable_data = [[\"player\",\"position\",\"school\",\"hometown\",\"mlb draft\"],[\"delmon young\",\"outfielder\",\"camarillo high school\",\"camarillo, ca\",\"1st round - 1st pick of 2003 draft (devil rays)\"],[\"chris lubanski\",\"outfielder\",\"kennedy - kenrick catholic high school\",\"norristown, pa\",\"1st round - 5th pick of 2003 draft (royals)\"],[\"lastings milledge\",\"outfielder\",\"lakewood ranch high school\",\"bradenton, fl\",\"1st round - 12th pick of 2003 draft (mets)\"],[\"brandon wood\",\"infielder\",\"horizon high school\",\"scottsdale, az\",\"1st round - 23rd pick of 2003 draft (angels)\"],[\"john danks\",\"pitcher\",\"round rock high school\",\"round rock, tx\",\"1st round - 9th pick of 2003 draft (rangers)\"],[\"jonathan fulton\",\"infielder\",\"george washington high school\",\"danville, va\",\"3rd round - 83rd pick of 2003 draft (marlins)\"],[\"ian stewart\",\"infielder\",\"la quinta high school\",\"westminster, ca\",\"1st round - 10th pick of 2003 draft (rockies)\"],[\"jeff allison\",\"pitcher\",\"veterans memorial high school\",\"peabody, ma\",\"1st round - 16th pick of 2003 draft (marlins)\"],[\"daric barton\",\"catcher\",\"marina high school\",\"huntington beach, ca\",\"1st round - 28th pick of 2003 draft (cardinals)\"],[\"eric duncan\",\"infielder\",\"seton hall preparatory school\",\"west orange, nj\",\"1st round - 27th pick of 2003 draft (yankees)\"]]\nQuestion = Is it true that the mlb draft status of eric duncan was 1st round - 28th pick of 2003 draft (cardinals)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    mlb_drafts = get_column_by_name(table_data, \"mlb draft\")\n    for player, mlb_draft in zip(players, mlb_drafts):\n        if player.lower() == \"eric duncan\":\n            answer = equal_to(mlb_draft, \"1st round - 28th pick of 2003 draft (cardinals)\")\n            break \n    return answer\n\n### END"}
{"id": "fc2c2408-35ab-465f-a5eb-cd38134cf43c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1990 formula one season\ntable_data = [[\"round\", \"grand prix\", \"date\", \"location\", \"pole position\", \"fastest lap\", \"winning driver\", \"winning constructor\", \"report\"],[\"1\", \"united states grand prix\", \"11 march\", \"phoenix\", \"gerhard berger\", \"gerhard berger\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"2\", \"brazilian grand prix\", \"25 march\", \"interlagos\", \"ayrton senna\", \"gerhard berger\", \"alain prost\", \"ferrari\", \"report\"],[\"3\", \"san marino grand prix\", \"13 may\", \"imola\", \"ayrton senna\", \"alessandro nannini\", \"riccardo patrese\", \"williams - renault\", \"report\"],[\"4\", \"monaco grand prix\", \"27 may\", \"monaco\", \"ayrton senna\", \"ayrton senna\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"5\", \"canadian grand prix\", \"10 june\", \"circuit gilles villeneuve\", \"ayrton senna\", \"gerhard berger\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"6\", \"mexican grand prix\", \"24 june\", \"hermanos rodrã­guez\", \"gerhard berger\", \"alain prost\", \"alain prost\", \"ferrari\", \"report\"],[\"7\", \"french grand prix\", \"8 july\", \"paul ricard\", \"nigel mansell\", \"nigel mansell\", \"alain prost\", \"ferrari\", \"report\"],[\"8\", \"british grand prix\", \"15 july\", \"silverstone\", \"nigel mansell\", \"nigel mansell\", \"alain prost\", \"ferrari\", \"report\"],[\"9\", \"german grand prix\", \"29 july\", \"hockenheimring\", \"ayrton senna\", \"thierry boutsen\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"10\", \"hungarian grand prix\", \"12 august\", \"hungaroring\", \"thierry boutsen\", \"riccardo patrese\", \"thierry boutsen\", \"williams - renault\", \"report\"],[\"11\", \"belgian grand prix\", \"26 august\", \"spa - francorchamps\", \"ayrton senna\", \"alain prost\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"12\", \"italian grand prix\", \"9 september\", \"monza\", \"ayrton senna\", \"ayrton senna\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"13\", \"portuguese grand prix\", \"23 september\", \"estoril\", \"nigel mansell\", \"riccardo patrese\", \"nigel mansell\", \"ferrari\", \"report\"],[\"14\", \"spanish grand prix\", \"30 september\", \"jerez\", \"ayrton senna\", \"riccardo patrese\", \"alain prost\", \"ferrari\", \"report\"],[\"15\", \"japanese grand prix\", \"21 october\", \"suzuka\", \"ayrton senna\", \"riccardo patrese\", \"nelson piquet\", \"benetton - ford\", \"report\"]]\nQuestion = Is it true that there is no number of pole position in the table?\n\n### RESPONSE:\ndef column_exists(table, column_name):\n    return column_name in table[0]\n\ndef solution(table_data):\n    column_name = \"number of pole position\"\n    answer = not column_exists(table_data, column_name)\n    return answer\n\n### END"}
{"id": "55199b3b-526d-4fda-bf59-9984cda59c0a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sandro cortese\ntable_data = [[\"season\", \"class\", \"team\", \"motorcycle\", \"type\", \"races\", \"wins\", \"podiums\", \"poles\", \"fastest laps\", \"pts\", \"position\"],[\"2005\", \"125cc\", \"kiefer - bos - castrol honda\", \"honda\", \"honda rs125r\", \"16\", \"0\", \"0\", \"0\", \"0\", \"8\", \"26th\"],[\"2006\", \"125cc\", \"elit - caffè latte\", \"honda\", \"honda rs125r\", \"16\", \"0\", \"0\", \"0\", \"0\", \"23\", \"17th\"],[\"2007\", \"125cc\", \"emmi - caffè latte\", \"aprilia\", \"aprilia rs 125\", \"17\", \"0\", \"0\", \"0\", \"0\", \"66\", \"14th\"],[\"2008\", \"125cc\", \"emmi - caffè latte\", \"aprilia\", \"aprilia rsa 125\", \"17\", \"0\", \"0\", \"0\", \"1\", \"141\", \"8th\"],[\"2009\", \"125cc\", \"ajo interwetten\", \"derbi\", \"derbi rsa 125\", \"16\", \"0\", \"3\", \"1\", \"2\", \"130\", \"6th\"],[\"2010\", \"125cc\", \"ajo motorsport\", \"derbi\", \"derbi rs 125 r\", \"17\", \"0\", \"2\", \"1\", \"2\", \"143\", \"7th\"],[\"2011\", \"125cc\", \"intact - racing team germany\", \"aprilia\", \"aprilia rsa 125\", \"17\", \"2\", \"6\", \"1\", \"2\", \"225\", \"4th\"],[\"2012\", \"moto3\", \"red bull ktm ajo\", \"ktm\", \"ktm m32\", \"17\", \"5\", \"15\", \"7\", \"4\", \"325\", \"1st\"],[\"2013\", \"moto2\", \"dynavolt intact gp\", \"kalex\", \"kalex moto2\", \"16\", \"0\", \"0\", \"0\", \"0\", \"19\", \"20th\"]]\nQuestion = Is it true that kiefer - bos - castrol honda scored half as many points as dynavolt intact gp?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef half_of(num1, num2):\n    return num1 == num2 / 2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    points = get_column_by_name(table_data, \"pts\")\n    kiefer_points = 0\n    dynavolt_points = 0\n    for team, point in zip(teams, points):\n        if \"kiefer - bos - castrol honda\" in team.lower():\n            kiefer_points = int(point)\n        elif \"dynavolt intact gp\" in team.lower():\n            dynavolt_points = int(point)\n    answer = half_of(kiefer_points, dynavolt_points)\n    return answer\n\n### END"}
{"id": "dc51b793-673a-4d06-8bbc-865ca5dd5ee5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"class\", \"part 1\", \"part 2\", \"part 3\", \"part 4\", \"verb meaning\"],[\"1\", \"rīdan\", \"rād\", \"ridon\", \"riden\", \"to ride\"],[\"2a\", \"frēosan\", \"frēas\", \"fruron\", \"froren\", \"to freeze\"],[\"2b\", \"lūcan\", \"lēac\", \"lucon\", \"locen\", \"to lock\"],[\"3a\", \"bindan\", \"band\", \"bundon\", \"bunden\", \"to bind\"],[\"3b\", \"weorþan\", \"wearþ\", \"wurdon\", \"worden\", \"to become\"],[\"4\", \"beran\", \"bær\", \"bǣron\", \"boren\", \"to bear\"],[\"5\", \"lesan\", \"læs\", \"lǣron\", \"leren\", \"to gather\"],[\"6\", \"alan\", \"ōl\", \"ōlon\", \"alen\", \"to nourish , to grow\"],[\"7a\", \"hātan\", \"hēt\", \"hēton\", \"hāten\", \"to call , to be called\"],[\"7b\", \"hlēapan\", \"hlēop\", \"hlēppon\", \"hlēapen\", \"to leap\"],[\"7c\", \"healdan\", \"hēold\", \"hēoldon\", \"healden\", \"to hold\"],[\"7d\", \"rǣdan\", \"rēd\", \"rēdon\", \"rǣden\", \"to advise , to interpret\"]]\nQuestion = Is it true that the part 3 of the verb in class 5 starts with an r?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef starts_with(string, char):\n    return string.startswith(char)\n\ndef solution(table_data):\n    classes = get_column_by_name(table_data, \"class\")\n    part_3s = get_column_by_name(table_data, \"part 3\")\n    for class_, part_3 in zip(classes, part_3s):\n        if class_ == \"5\":\n            answer = starts_with(part_3, \"r\")\n            break\n    return answer\n\n### END"}
{"id": "9e47be8e-afea-414c-990e-2a0c16a61aaa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1993 open championship\ntable_data = [[\"place\", \"player\", \"country\", \"score\", \"to par\"],[\"t1\", \"mark calcavecchia\", \"united states\", \"66\", \"- 4\"],[\"t1\", \"greg norman\", \"australia\", \"66\", \"- 4\"],[\"t1\", \"peter senior\", \"australia\", \"66\", \"- 4\"],[\"t1\", \"fuzzy zoeller\", \"united states\", \"66\", \"- 4\"],[\"t5\", \"stephen ames\", \"trinidad and tobago\", \"67\", \"- 3\"],[\"t5\", \"howard clark\", \"england\", \"67\", \"- 3\"],[\"t5\", \"glen day\", \"united states\", \"67\", \"- 3\"],[\"t5\", \"gary evans\", \"england\", \"67\", \"- 3\"],[\"t5\", \"bernhard langer\", \"germany\", \"67\", \"- 3\"],[\"t5\", \"mark mcnulty\", \"zimbabwe\", \"67\", \"- 3\"],[\"t5\", \"larry mize\", \"united states\", \"67\", \"- 3\"],[\"t5\", \"des smyth\", \"ireland\", \"67\", \"- 3\"],[\"t5\", \"greg turner\", \"new zealand\", \"67\", \"- 3\"],[\"t5\", \"wayne westner\", \"south africa\", \"67\", \"- 3\"]]\nQuestion = Is it true that howard clark is from the country of england?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    countries = get_column_by_name(table_data, \"country\")\n    answer = False\n    for player, country in zip(players, countries):\n        if player.lower() == \"howard clark\" and country.lower() == \"england\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "e4856004-3606-468c-993b-3188a49398e1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = south carolina gamecocks men 's soccer\ntable_data = [[\"rank\", \"player\", \"goals\", \"assists\", \"points\", \"years\"],[\"1\", \"doug allison\", \"63\", \"32\", \"158\", \"1984 - 87\"],[\"2\", \"chris faklaris\", \"55\", \"14\", \"124\", \"1991 - 94\"],[\"3\", \"clint mathis\", \"53\", \"15\", \"121\", \"1994 - 97\"],[\"4\", \"clark brisson\", \"36\", \"26\", \"98\", \"1987 - 90\"],[\"5\", \"dan ratcliff\", \"37\", \"20\", \"94\", \"1983 - 86\"],[\"6\", \"jordan quinn\", \"37\", \"13\", \"87\", \"1999 - 02\"],[\"7\", \"andrew coggins\", \"33\", \"15\", \"81\", \"1988 - 91\"],[\"8\", \"brian winstead\", \"33\", \"14\", \"80\", \"1978 - 79\"],[\"9\", \"billy baumhoff\", \"22\", \"34\", \"78\", \"1991 - 94\"],[\"9\", \"rob smith\", \"19\", \"40\", \"78\", \"1991 - 94\"],[\"11\", \"john harr\", \"28\", \"20\", \"76\", \"1997 - 99\"],[\"12\", \"arni arnthorsson\", \"22\", \"25\", \"69\", \"1984 - 87\"],[\"13\", \"dave goodchild\", \"28\", \"12\", \"68\", \"1979 - 82\"],[\"14\", \"rubãn tufiã±o\", \"18\", \"30\", \"66\", \"1989 - 92\"],[\"15\", \"joey worthen\", \"25\", \"15\", \"65\", \"1998 - 01\"]]\nQuestion = Is it true that when 158 points were collected , 76 goals were scored?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    goals = get_column_by_name(table_data, \"goals\")\n    points = get_column_by_name(table_data, \"points\")\n    for goal, point in zip(goals, points):\n        if equal_to(point, \"158\"):\n            answer = equal_to(goal, \"76\")\n            break \n    return answer\n\n### END"}
{"id": "6eccb1fe-fa1c-4a5a-8009-cf0f04dcc25e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states house of representatives elections , 2010\ntable_data = [[\"district\", \"incumbent\", \"party\", \"first elected\", \"result\", \"candidates\"],[\"pennsylvania 1\", \"bob brady\", \"democratic\", \"1998\", \"re - elected\", \"bob brady (d) unopposed\"],[\"pennsylvania 2\", \"chaka fattah\", \"democratic\", \"1994\", \"re - elected\", \"chaka fattah (d) 89.3% rick hellberg (r) 10.7%\"],[\"pennsylvania 3\", \"kathy dahlkemper\", \"democratic\", \"2008\", \"lost re - election republican gain\", \"mike kelly (r) 55.7% kathy dahlkemper (d) 44.3%\"],[\"pennsylvania 4\", \"jason altmire\", \"democratic\", \"2006\", \"re - elected\", \"jason altmire (d) 50.8% keith rothfuss (r) 49.2%\"],[\"pennsylvania 6\", \"jim gerlach\", \"republican\", \"2002\", \"re - elected\", \"jim gerlach (r) 57.1% manan trivedi (d) 42.9%\"],[\"pennsylvania 9\", \"bill shuster\", \"republican\", \"2001\", \"re - elected\", \"bill shuster (r) 73.1% tom conners (d) 26.9%\"],[\"pennsylvania 10\", \"chris carney\", \"democratic\", \"2006\", \"lost re - election republican gain\", \"tom marino (r) 55.2% chris carney (d) 44.8%\"],[\"pennsylvania 11\", \"paul kanjorski\", \"democratic\", \"1984\", \"lost re - election republican gain\", \"lou barletta (r) 54.7% paul kanjorski (d) 45.3%\"],[\"pennsylvania 12\", \"mark critz\", \"democratic\", \"2010\", \"re - elected\", \"mark critz (d) 50.8% tim burns (r) 49.2%\"],[\"pennsylvania 13\", \"allyson schwartz\", \"democratic\", \"2004\", \"re - elected\", \"allyson schwartz (d) 56.3% dee adcock (r) 43.7%\"],[\"pennsylvania 16\", \"joe pitts\", \"republican\", \"1996\", \"re - elected\", \"joe pitts (r) 65.4% lois herr (d) 34.6%\"],[\"pennsylvania 17\", \"tim holden\", \"democratic\", \"1992\", \"re - elected\", \"tim holden (d) 55.5% dave argall (r) 44.5%\"]]\nQuestion = Is it true that paul kanjorski was first elected in 1984?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    incumbents = get_column_by_name(table_data, \"incumbent\")\n    first_elected_years = get_column_by_name(table_data, \"first elected\")\n    for incumbent, first_elected_year in zip(incumbents, first_elected_years):\n        if incumbent.lower() == \"paul kanjorski\":\n            answer = first_elected_year == \"1984\"\n            break\n    return answer\n\n### END"}
{"id": "a82c5f0c-6e99-4b77-bc95-68594364451b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 3. liga\ntable_data = [[\"team\",\"outgoing manager\",\"manner of departure\",\"date of vacancy\",\"replaced by\",\"date of appointment\",\"position in table\"],[\"vfl osnabrück\",\"claus - dieter wollitz\",\"fc energie cottbus purchased rights\",\"30 june 2009\",\"karsten baumann\",\"1 july 2009\",\"pre - season\"],[\"fc carl zeiss jena\",\"marc fascher\",\"end of contract\",\"30 june 2009\",\"rené van eck\",\"1 july 2009\",\"pre - season\"],[\"fc rot - weiß erfurt\",\"henri fuchs\",\"end of tenure as caretaker\",\"30 june 2009\",\"rainer hörgl\",\"1 july 2009\",\"pre - season\"],[\"vfb stuttgart ii\",\"rainer adrion\",\"new coach of germany u - 21\",\"30 june 2009\",\"reiner geyer\",\"1 july 2009\",\"pre - season\"],[\"sv wacker burghausen\",\"ralf santelli\",\"end of contract\",\"30 june 2009\",\"jürgen press\",\"1 july 2009\",\"pre - season\"]]\nQuestion = Is it true that for fc carl zeiss jena , the outgoing manager is marc fascher?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    outgoing_managers = get_column_by_name(table_data, \"outgoing manager\")\n    for team, outgoing_manager in zip(teams, outgoing_managers):\n        if equal_to(team, \"fc carl zeiss jena\"):\n            answer = equal_to(outgoing_manager, \"marc fascher\")\n            break \n    return answer\n\n### END"}
{"id": "4d6f9ee9-18d7-49d5-95f9-14c6af02cca7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"domestic freight\", \"domestic mail\", \"international freight\", \"international mail\", \"total freight and mail\", \"change\"],[\"2006\", \"132\", \"260\", \"2883\", \"3\", \"3278\", \"+ 9 , 8%\"],[\"2007\", \"50\", \"102\", \"3304\", \"3\", \"3459\", \"+ 5 , 5%\"],[\"2008\", \"43\", \"0\", \"4650\", \"1\", \"4695\", \"+ 35 , 7%\"],[\"2009\", \"157\", \"0\", \"6761\", \"0\", \"6919\", \"+ 47 , 4%\"],[\"2010\", \"72\", \"0\", \"6988\", \"0\", \"7061\", \"+ 2 , 1%\"],[\"2011\", \"1\", \"1\", \"7852\", \"0\", \"7853\", \"+ 11 , 2%\"]]\nQuestion = Is it true that there are 260 international freights for domestic mail of 2883?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    domestic_mails = get_column_by_name(table_data, \"domestic mail\")\n    international_freights = get_column_by_name(table_data, \"international freight\")\n    for domestic_mail, international_freight in zip(domestic_mails, international_freights):\n        if equal_to(domestic_mail, \"2883\") and equal_to(international_freight, \"260\"):\n            return True\n    return False\n\n### END"}
{"id": "a8509f7b-b343-48ff-84b7-ee428270a0b7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = emergency shipbuilding program\ntable_data = [[\"yard name\", \"location (city , state)\", \"1st ship delivery date\", \"ship types delivered\", \"total number of ways\", \"total vessels built\"],[\"moore dry dock company\", \"oakland , california\", \"july 1940\", \"c2 type , r2 type , c3 type\", \"4 ways\", \"__ ships for usmc (remainder for usn)\"],[\"bethlehem steel corp\", \"san francisco , california\", \"february 1941\", \"c1 type\", \"number\", \"5 ships for usmc (remainder for usn)\"],[\"seattle - tacoma shipbuilding\", \"tacoma , washington\", \"april 1941\", \"c1 type , c3 type , t1 type\", \"8 ways\", \"__ ships for usmc (remainder for usn)\"],[\"western pipe & steel corp\", \"south san francisco , california\", \"april 1941\", \"c1 type , c3 type\", \"4 ways\", \"__ ships for usmc\"],[\"kaiser permanente (richmond yard 1)\", \"richmond , california\", \"august 1941\", \"british ocean type , ec2 type , vc2 type\", \"7 ways\", \"30 ships for uk , __ ships for usmc\"],[\"kaiser permanente (richmond yard 2)\", \"richmond , california\", \"september 1941\", \"ec2 type , vc2 type\", \"12 ways\", \"__ ships for usmc\"],[\"oregon shipbuilding co\", \"portland , oregon\", \"january 1942\", \"ec2 type , vc2 type\", \"11 ways\", \"__ ships for usmc\"],[\"california shipbuilding corp (calship)\", \"terminal island , los angeles , california\", \"february 1942\", \"ec2 type , vc2 type\", \"14 ways\", \"__ ships for usmc\"],[\"marinship corp\", \"sausalito , california\", \"october 1942\", \"ec2 type , t2 type\", \"6 ways\", \"__ ships for usmc\"],[\"pacific bridge co\", \"alameda , california\", \"december 1942\", \"n3 type\", \"2 ways (basins)\", \"9 ships for usmc (remainder for usn)\"],[\"kaiser company , inc\", \"swan island , portland , oregon\", \"december 1942\", \"t2 type\", \"8 ways\", \"__ ships for usmc\"],[\"kaiser cargo (richmond yard 4)\", \"richmond , california\", \"april 1943\", \"s2 (lst) type , s2 (frigate) type , c1 - m type\", \"3 ways\", \"__ ships for usmc\"],[\"kaiser shipbuilding (richmond yard 3)\", \"richmond , california\", \"august 1943\", \"c4 type\", \"5 ways (basins)\", \"__ ships for usmc\"]]\nQuestion = Is it true that british ocean type , ec2 type , vc2 type got delivered in april of 1943?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    delivery_dates = get_column_by_name(table_data, \"1st ship delivery date\")\n    ship_types = get_column_by_name(table_data, \"ship types delivered\")\n    for delivery_date, ship_type in zip(delivery_dates, ship_types):\n        if \"april 1943\" in delivery_date.lower() and \"british ocean type , ec2 type , vc2 type\" in ship_type.lower():\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "eb16a8b5-8222-4e05-a323-4cc0032a2c44", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = gilmour racing\ntable_data = [[\"season\", \"series\", \"points\", \"position\", \"driver\"],[\"2001\", \"queensland formula ford championship\", \"216\", \"2nd\", \"chris gilmour\"],[\"2002\", \"queensland formula ford championship\", \"234\", \"2nd\", \"chris gilmour\"],[\"2003\", \"queensland formula ford championship\", \"222\", \"1st\", \"chris gilmour\"],[\"2004\", \"australian formula 3 championship\", \"235\", \"2nd\", \"chris gilmour\"],[\"2005\", \"australian formula 3 championship\", \"142\", \"4th\", \"chris gilmour\"],[\"2006\", \"australian formula 3 championship\", \"150\", \"4th\", \"chris gilmour\"],[\"2007\", \"australian formula 3 championship\", \"52\", \"8th\", \"chris gilmour\"],[\"2008\", \"australian formula 3 championship - national class\", \"228\", \"1st\", \"chris gilmour\"],[\"2009\", \"australian formula 3 championship - national class\", \"93\", \"4th\", \"chris gilmour\"],[\"2010\", \"australian formula 3 championship\", \"90\", \"5th\", \"chris gilmour\"],[\"2011\", \"australian formula 3 championship\", \"210\", \"1st\", \"chris gilmour\"]]\nQuestion = Is it true that chris gilmour finished 2nd place during the 2001 season?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    positions = get_column_by_name(table_data, \"position\")\n    drivers = get_column_by_name(table_data, \"driver\")\n    for season, position, driver in zip(seasons, positions, drivers):\n        if season == \"2001\" and driver.lower() == \"chris gilmour\":\n            answer = equal_to(position, \"2nd\")\n            break \n    return answer\n\n### END"}
{"id": "917d3f14-9a43-458a-b142-d686bfc14007", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = marsel ilhan\ntable_data = [[\"outcome\", \"date\", \"tournament\", \"surface\", \"opponent\", \"score\"],[\"runner - up\", \"august 20 , 2007\", \"karshi\", \"hard\", \"denis istomin\", \"1 - 6 , 4 - 6\"],[\"winner\", \"july 13 , 2008\", \"israel open\", \"hard\", \"ivo klec\", \"6 - 4 , 6 - 4\"],[\"runner - up\", \"may 17 , 2009\", \"izmir cup\", \"hard\", \"andrea stoppini\", \"6 - 7 , 2 - 6\"],[\"winner\", \"september 20 , 2010\", \"banja luka\", \"clay\", \"pere riba\", \"6 - 0 , 7 - 6 (7 - 4)\"],[\"runner - up\", \"september 26 , 2010\", \"izmir cup\", \"hard\", \"somdev devvarman\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 10 , 2011\", \"scheveningen\", \"clay\", \"steve darcis\", \"3 - 6 , 6 - 4 , 2 - 6\"],[\"runner - up\", \"september 25 , 2011\", \"izmir cup\", \"hard\", \"lukáš lacko\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 29 , 2012\", \"president 's cup (tennis)\", \"hard\", \"evgeny donskoy\", \"3 - 6 , 4 - 6\"]]\nQuestion = Is it true that the august 20 , 2007 match had a score of 1 - 6 , 4 - 6?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    scores = get_column_by_name(table_data, \"score\")\n    for date, score in zip(dates, scores):\n        if \"august 20 , 2007\" in date.lower():\n            answer = equal_to(score, \"1 - 6 , 4 - 6\")\n            break \n    return answer\n\n### END"}
{"id": "2d34a416-d49b-4b67-b401-c9045c7382e0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"population (region total)\", \"population (stanthorpe)\", \"population (warwick)\", \"population (allora)\", \"population (glengallan)\", \"population (rosenthal)\"],[\"1933\", \"25016\", \"6934\", \"6664\", \"2624\", \"6334\", \"2460\"],[\"1947\", \"24009\", \"7419\", \"7129\", \"2217\", \"5269\", \"1975\"],[\"1954\", \"25862\", \"8335\", \"9151\", \"2106\", \"4639\", \"1631\"],[\"1961\", \"26288\", \"8514\", \"9843\", \"1961\", \"4388\", \"1582\"],[\"1966\", \"25917\", \"8503\", \"10065\", \"1890\", \"3906\", \"1553\"],[\"1971\", \"24115\", \"8189\", \"9303\", \"1719\", \"3410\", \"1494\"],[\"1976\", \"24583\", \"8709\", \"9169\", \"1666\", \"3491\", \"1548\"],[\"1981\", \"24300\", \"8576\", \"8853\", \"1679\", \"3611\", \"1581\"],[\"1986\", \"26270\", \"9143\", \"9435\", \"2041\", \"3688\", \"1963\"],[\"1991\", \"28288\", \"9556\", \"10393\", \"2132\", \"3966\", \"2241\"],[\"1996\", \"29563\", \"9596\", \"10896\", \"2234\", \"3990\", \"2742\"],[\"2001\", \"30554\", \"9860\", \"10956\", \"2439\", \"4088\", \"3129\"]]\nQuestion = Is it true that stanthorpe 's highest ever population is 9860?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(int(row[column_index]))\n    return column\n\ndef get_max_value(lst):\n    return max(lst)\n\ndef solution(table_data):\n    stanthorpe_population = get_column_by_name(table_data, \"population (stanthorpe)\")\n    max_population = get_max_value(stanthorpe_population)\n    answer = max_population == 9860\n    return answer\n\n### END"}
{"id": "a3cf3765-fffb-434a-8334-b5e07d3cb4aa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = somerset county cricket club in 2009\ntable_data = [[\"player\", \"matches\", \"innings\", \"wickets\", \"average\", \"bbi\", \"bbm\", \"5wi\"],[\"charl willoughby\", \"16\", \"26\", \"54\", \"30.03\", \"5 / 56\", \"7 / 170\", \"3\"],[\"david stiff\", \"10\", \"18\", \"31\", \"36.12\", \"5 / 91\", \"5 / 93\", \"1\"],[\"alfonso thomas\", \"14\", \"22\", \"35\", \"37.62\", \"5 / 53\", \"8 / 152\", \"1\"],[\"ben phillips\", \"7\", \"11\", \"12\", \"38.00\", \"4 / 46\", \"4 / 73\", \"0\"],[\"arul suppiah\", \"16\", \"19\", \"15\", \"45.46\", \"3 / 58\", \"5 / 85\", \"0\"],[\"peter trego\", \"16\", \"25\", \"19\", \"46.78\", \"3 / 53\", \"3 / 74\", \"0\"],[\"andrew caddick\", \"5\", \"8\", \"10\", \"52.50\", \"3 / 53\", \"4 / 95\", \"0\"]]\nQuestion = Is it true that 5 is the smallest number of matches?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(int(row[column_index]))\n    return column\n\ndef get_min_value(lst):\n    return min(lst)\n\ndef solution(table_data):\n    matches = get_column_by_name(table_data, \"matches\")\n    min_matches = get_min_value(matches)\n    answer = min_matches == 5\n    return answer\n\n### END"}
{"id": "f59e47cc-c29b-41bc-82b1-2743c8f00d49", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = peaches & herb\ntable_data = [[\"title\", \"label\", \"year of release\", \"country of release\", \"peaches :\"],[\"for your love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"let 's fall in love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"peaches & herb\", \"mca\", \"1977\", \"usa\", \"linda greene\"],[\"2 hot\", \"mvp / polydor\", \"1978\", \"usa\", \"linda greene\"],[\"twice the fire\", \"mvp / polydor\", \"1979\", \"usa\", \"linda greene\"],[\"demasiado candente\", \"mvp / polydor\", \"1979\", \"argentina\", \"linda greene\"],[\"worth the wait\", \"mvp / polydor\", \"1980\", \"usa\", \"linda greene\"],[\"sayin' something\", \"mvp / polydor\", \"1981\", \"usa\", \"linda greene\"],[\"remember\", \"the entertainment co / columbia\", \"1983\", \"usa\", \"linda greene\"],[\"colors of love\", \"imagen\", \"2009\", \"usa\", \"meritxell negre\"]]\nQuestion = Is it true that in the year 1997 when the label mca released the title peachie & herb in usa?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    labels = get_column_by_name(table_data, \"label\")\n    years = get_column_by_name(table_data, \"year of release\")\n    countries = get_column_by_name(table_data, \"country of release\")\n    for title, label, year, country in zip(titles, labels, years, countries):\n        if equal_to(title.lower(), \"peaches & herb\") and equal_to(label.lower(), \"mca\") and equal_to(year, \"1997\") and equal_to(country.lower(), \"usa\"):\n            return True\n    return False\n\n### END"}
{"id": "dab028fd-7183-4028-b2e1-df7bd5b37b77", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2006 cincinnati reds season\ntable_data = [[\"date\",\"opponent\",\"score\",\"loss\",\"attendance\",\"record\"],[\"august 1\",\"dodgers\",\"10 - 4\",\"bray (2 - 2)\",\"25127\",\"55 - 51\"],[\"august 2\",\"dodgers\",\"5 - 3\",\"ramírez (4 - 7)\",\"22110\",\"55 - 52\"],[\"august 3\",\"dodgers\",\"3 - 0\",\"milton (7 - 7)\",\"26053\",\"55 - 53\"],[\"august 4\",\"braves\",\"5 - 4\",\"james (4 - 3)\",\"33661\",\"56 - 53\"],[\"august 5\",\"braves\",\"8 - 6\",\"yates (1 - 2)\",\"33170\",\"57 - 53\"],[\"august 6\",\"braves\",\"6 - 4\",\"majewski (3 - 1)\",\"29660\",\"57 - 54\"],[\"august 7\",\"cardinals\",\"13 - 1\",\"ramírez (4 - 8)\",\"34262\",\"57 - 55\"],[\"august 8\",\"cardinals\",\"10 - 3\",\"marquis (12 - 10)\",\"40094\",\"58 - 55\"],[\"august 9\",\"cardinals\",\"8 - 7\",\"isringhausen (3 - 5)\",\"41649\",\"59 - 55\"],[\"august 10\",\"cardinals\",\"6 - 1\",\"arroyo (9 - 8)\",\"39591\",\"59 - 56\"],[\"august 11\",\"phillies\",\"6 - 5\",\"ramírez (4 - 9)\",\"41461\",\"59 - 57\"],[\"august 12\",\"phillies\",\"9 - 7\",\"gordon (3 - 0)\",\"39553\",\"60 - 57\"],[\"august 13\",\"phillies\",\"7 - 5\",\"madson (10 - 8)\",\"37677\",\"61 - 57\"],[\"august 15\",\"cardinals\",\"5 - 0\",\"harang (12 - 8)\",\"42761\",\"61 - 58\"],[\"august 16\",\"cardinals\",\"7 - 2\",\"reyes (4 - 6)\",\"42752\",\"62 - 58\"],[\"august 17\",\"cardinals\",\"2 - 1\",\"franklin (2 - 6)\",\"40346\",\"62 - 59\"],[\"august 18\",\"pirates\",\"7 - 3\",\"michalak (1 - 1)\",\"31718\",\"62 - 60\"],[\"august 19\",\"pirates\",\"14 - 7\",\"torres (3 - 6)\",\"34245\",\"63 - 60\"],[\"august 20\",\"pirates\",\"5 - 1\",\"santos (5 - 8)\",\"29935\",\"64 - 60\"],[\"august 21\",\"astros\",\"4 - 3\",\"qualls (4 - 3)\",\"24110\",\"65 - 60\"],[\"august 22\",\"astros\",\"14 - 0\",\"hirsh (1 - 2)\",\"22556\",\"66 - 60\"],[\"august 23\",\"astros\",\"7 - 3\",\"coffey (6 - 5)\",\"24873\",\"66 - 61\"],[\"august 24\",\"giants\",\"6 - 3\",\"chulk (0 - 2)\",\"38754\",\"67 - 61\"],[\"august 25\",\"giants\",\"4 - 1\",\"harang (13 - 9)\",\"37801\",\"67 - 62\"],[\"august 26\",\"giants\",\"4 - 1\",\"arroyo (10 - 9)\",\"41362\",\"67 - 63\"],[\"august 27\",\"giants\",\"8 - 0\",\"lohse (1 - 1)\",\"39097\",\"67 - 64\"],[\"august 28\",\"dodgers\",\"6 - 5\",\"michalak (1 - 2)\",\"44176\",\"67 - 65\"],[\"august 29\",\"dodgers\",\"6 - 5\",\"franklin (5 - 7)\",\"44697\",\"67 - 66\"],[\"august 30\",\"dodgers\",\"7 - 3\",\"harang (13 - 10)\",\"47356\",\"67 - 67\"]]\nQuestion = Is it true that the braves game on august 4th had an attendance of 33661 people?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    for date, opponent, attendance in zip(dates, opponents, attendances):\n        if date.lower() == \"august 4\" and opponent.lower() == \"braves\":\n            answer = equal_to(attendance, \"33661\")\n            break \n    return answer\n\n### END"}
{"id": "67fc9290-41da-40bf-a354-c411588bd162", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1930 grand prix season\ntable_data = [[\"name\",\"circuit\",\"date\",\"winning driver\",\"winning constructor\",\"report\"],[\"circuit d'esterel plage\",\"saint - raphaël\",\"2 march\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"tripoli grand prix\",\"tripoli\",\"23 march\",\"baconin borzacchini\",\"maserati\",\"report\"],[\"monaco grand prix\",\"monte carlo\",\"6 april\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"alessandria circuit\",\"bordino\",\"20 april\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"oran grand prix\",\"arcole\",\"27 april\",\"jean de maleplane\",\"bugatti\",\"report\"],[\"targa florio\",\"madonie\",\"4 may\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"picardy grand prix\",\"péronne\",\"18 may\",\"max fourny\",\"bugatti\",\"report\"],[\"rome grand prix\",\"tre fontane\",\"25 may\",\"luigi arcangeli\",\"maserati\",\"report\"],[\"grand prix des frontières\",\"chimay\",\"9 june\",\"georges de marotte\",\"salmson\",\"report\"],[\"lyon grand prix\",\"quincieux\",\"15 june\",\"louis chiron\",\"bugatti\",\"report\"],[\"grand prix de la marne\",\"reims\",\"29 june\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"eifelrennen\",\"nürburgring\",\"20 july\",\"heinrich - joachim von morgen\",\"bugatti\",\"report\"],[\"dieppe grand prix\",\"dieppe\",\"20 july\",\"marcel lehoux\",\"bugatti\",\"report\"],[\"coppa ciano\",\"montenero\",\"3 august\",\"luigi fagioli\",\"maserati\",\"report\"],[\"dauphiné circuit\",\"grenoble\",\"10 august\",\"philippe étancelin\",\"bugatti\",\"report\"],[\"coppa acerbo\",\"pescara\",\"17 august\",\"achille varzi\",\"maserati\",\"report\"],[\"grand prix du comminges\",\"saint - gaudens\",\"17 august\",\"françois miquel\",\"bugatti\",\"report\"],[\"monza grand prix\",\"monza\",\"7 september\",\"achille varzi\",\"maserati\",\"report\"],[\"lviv grand prix\",\"lviv\",\"8 september\",\"henryk liefeldt\",\"austro daimler\",\"report\"],[\"masaryk circuit\",\"brno\",\"28 september\",\"hermann of leiningen\",\"bugatti\",\"report\"],[\"san sebastián grand prix\",\"lasarte\",\"5 october\",\"achille varzi\",\"maserati\",\"report\"]]\nQuestion = Is it true that maserati was the winning constructor at monza grand prix?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_name = get_column_by_name(table_data, \"name\")\n    column_winning_constructor = get_column_by_name(table_data, \"winning constructor\")\n    answer = False\n    for name, winning_constructor in zip(column_name, column_winning_constructor):\n        if \"monza grand prix\" in name.lower() and \"maserati\" in winning_constructor.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "43fe0cd1-d1b7-4a56-b4e1-d77e0cf38a82", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1971 nhl amateur draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"15\", \"ken baird\", \"defence\", \"canada\", \"california golden seals\", \"flin flon bombers (wchl)\"],[\"16\", \"henry boucha\", \"centre\", \"united states\", \"detroit red wings\", \"us national development team\"],[\"17\", \"bobby lalonde\", \"centre\", \"canada\", \"vancouver canucks\", \"montreal junior canadiens (oha)\"],[\"18\", \"brian mckenzie\", \"left wing\", \"canada\", \"pittsburgh penguins\", \"st catharines black hawks (oha)\"],[\"19\", \"craig ramsay\", \"left wing\", \"canada\", \"buffalo sabres\", \"peterborough petes (oha)\"],[\"20\", \"larry robinson\", \"defence\", \"canada\", \"montreal canadiens\", \"kitchener rangers (oha)\"],[\"21\", \"rod norrish\", \"left wing\", \"canada\", \"minnesota north stars\", \"regina pats (wchl)\"],[\"22\", \"rick kehoe\", \"right wing\", \"canada\", \"toronto maple leafs\", \"hamilton red wings (oha)\"],[\"23\", \"dave fortier\", \"defence\", \"canada\", \"toronto maple leafs\", \"st catharines black hawks (oha)\"],[\"24\", \"michel deguise\", \"goaltender\", \"canada\", \"montreal canadiens\", \"sorel eperviers (qmjhl)\"],[\"25\", \"terry french\", \"centre\", \"canada\", \"montreal canadiens\", \"ottawa 67 's (oha)\"],[\"26\", \"dave kryskow\", \"left wing\", \"canada\", \"chicago black hawks\", \"edmonton oil kings (wchl)\"],[\"27\", \"tom williams\", \"left wing\", \"canada\", \"new york rangers\", \"hamilton red wings (oha)\"],[\"28\", \"curt ridley\", \"goaltender\", \"canada\", \"boston bruins\", \"portage terriers (mjhl)\"]]\nQuestion = Is it true that nhl team buffalo sabres are from canada?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    nhl_teams = get_column_by_name(table_data, \"nhl team\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    answer = False\n    for nhl_team, nationality in zip(nhl_teams, nationalities):\n        if \"buffalo sabres\" in nhl_team.lower() and \"canada\" in nationality.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "5d6df5ed-beb1-4b71-a056-70b8c926de56", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1965 american football league draft\ntable_data = [[\"pick\", \"team\", \"player\", \"position\", \"college\"],[\"9\", \"denver broncos\", \"dick butkus\", \"linebacker\", \"illinois\"],[\"10\", \"houston oilers\", \"malcolm walker\", \"center\", \"rice\"],[\"11\", \"oakland raiders\", \"fred biletnikoff\", \"wide receiver\", \"florida state\"],[\"12\", \"new york jets\", \"john huarte\", \"quarterback\", \"notre dame\"],[\"13\", \"kansas city chiefs\", \"jack chapple\", \"linebacker\", \"stanford\"],[\"14\", \"san diego chargers\", \"roy jefferson\", \"linebacker\", \"utah\"],[\"15\", \"houston oilers (from boston patriots)\", \"ralph neely\", \"tackle\", \"oklahoma\"],[\"16\", \"kansas city chiefs (from buffalo bills)\", \"ronnie caveness\", \"linebacker\", \"arkansas\"]]\nQuestion = Is it true that pick 14 played at the linebacker position?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    picks = get_column_by_name(table_data, \"pick\")\n    positions = get_column_by_name(table_data, \"position\")\n    for pick, position in zip(picks, positions):\n        if equal_to(pick, \"14\"):\n            answer = equal_to(position, \"linebacker\")\n            break \n    return answer\n\n### END"}
{"id": "651ab02c-5525-46f5-b058-5e56b15f7892", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1925 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"8.11 (59)\", \"st kilda\", \"8.8 (56)\", \"glenferrie oval\", \"10000\", \"8 august 1925\"],[\"geelong\", \"11.20 (86)\", \"richmond\", \"4.8 (32)\", \"corio oval\", \"13500\", \"8 august 1925\"],[\"fitzroy\", \"17.18 (120)\", \"north melbourne\", \"11.8 (74)\", \"brunswick street oval\", \"7000\", \"8 august 1925\"],[\"south melbourne\", \"13.14 (92)\", \"footscray\", \"12.15 (87)\", \"lake oval\", \"15000\", \"8 august 1925\"],[\"melbourne\", \"7.10 (52)\", \"collingwood\", \"9.11 (65)\", \"mcg\", \"33642\", \"8 august 1925\"],[\"essendon\", \"15.11 (101)\", \"carlton\", \"8.14 (62)\", \"windy hill\", \"10000\", \"8 august 1925\"]]\nQuestion = Is it true that corio oval is the venue where the home team score was 11.20 (86)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    venues = get_column_by_name(table_data, \"venue\")\n    for home_team_score, venue in zip(home_team_scores, venues):\n        if equal_to(home_team_score, \"11.20 (86)\") and equal_to(venue, \"corio oval\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "ccdf69f3-14a5-4b89-8070-2d5aab0233dd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"title\", \"from album\", \"label\", \"label - nr\"],[\"1962\", \"tonight / sinnin' sam\", \"lookin' ahead\", \"pacific jazz\", \"x - 340\"],[\"1962\", \"the young rabbits / song of india\", \"lookin' ahead\", \"pacific jazz\", \"x - 342\"],[\"1962\", \"congolese sermon / weather beat\", \"(only on 45)\", \"pacific jazz\", \"x - 357\"],[\"1963\", \"no name samba / tough talk\", \"tough talk\", \"world pacific\", \"x - 371\"],[\"1963\", \"turkish black / boopie\", \"tough talk\", \"world pacific\", \"x - 388\"],[\"1963\", \"spanish castles / bluesette\", \"jazz waltz (w les mccann)\", \"world pacific\", \"406\"],[\"1964\", \"heat wave / on broadway\", \"heat wave\", \"world pacific\", \"401\"],[\"1964\", \"i remember tomorrow / long john\", \"stretchin' out\", \"world pacific\", \"412\"],[\"1965\", \"tough talk / the thing\", \"the thing\", \"world pacific\", \"77800\"],[\"1965\", \"aqua dulce / soul bourgeoisie\", \"chile con soul\", \"world pacific\", \"77806\"],[\"1966\", \"scratch / uptight\", \"talk that talk\", \"pacific jazz\", \"88125\"],[\"1968\", \"ooga - boo - ga - loo / eleanor rigby\", \"lighthouse '68\", \"pacific jazz\", \"88144\"],[\"1968\", \"hey jude / love and peace\", \"powerhouse\", \"pacific jazz\", \"88146\"],[\"1969\", \"get back / willie and laura mae jones\", \"lighthouse '69\", \"word pacific jazz\", \"88153\"],[\"1970\", \"way back home / jackson\", \"old socks , new shoes\", \"chisa\", \"c - 8010\"]]\nQuestion = Is it true that the year 1968 has a label - nr of 88146?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    label_nrs = get_column_by_name(table_data, \"label - nr\")\n    for year, label_nr in zip(years, label_nrs):\n        if year == \"1968\" and equal_to(label_nr, \"88146\"):\n            return True\n    return False\n\n### END"}
{"id": "ddcb0fb7-8056-48be-8420-ba7dc0a73095", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1926 - 27 new york rangers season\ntable_data = [[\"game\", \"march\", \"opponent\", \"score\", \"record\"],[\"36\", \"1\", \"chicago black hawks\", \"3 - 0\", \"20 - 12 - 4\"],[\"37\", \"5\", \"montreal maroons\", \"0 - 0 ot\", \"20 - 12 - 5\"],[\"38\", \"13\", \"detroit cougars\", \"2 - 2 ot\", \"20 - 12 - 6\"],[\"39\", \"15\", \"pittsburgh pirates\", \"5 - 0\", \"21 - 12 - 6\"],[\"40\", \"17\", \"detroit cougars\", \"2 - 0\", \"22 - 12 - 6\"],[\"41\", \"20\", \"new york americans\", \"2 - 1\", \"23 - 12 - 6\"],[\"42\", \"22\", \"pittsburgh pirates\", \"4 - 1\", \"24 - 12 - 6\"],[\"43\", \"25\", \"chicago black hawks\", \"4 - 0\", \"25 - 12 - 6\"],[\"44\", \"26\", \"boston bruins\", \"4 - 3 ot\", \"25 - 13 - 6\"]]\nQuestion = Is it true that after the game on march 26 , the team 's record was 25 - 13 - 6?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"march\")\n    records = get_column_by_name(table_data, \"record\")\n    for date, record in zip(dates, records):\n        if date == \"26\":\n            answer = equal_to(record, \"25 - 13 - 6\")\n            break \n    return answer\n\n### END"}
{"id": "a4f9ad76-c9e8-4f8c-b2dc-60958755a608", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1984 u.s. open (golf)\ntable_data = [[\"place\", \"player\", \"country\", \"score\", \"to par\"],[\"1\", \"hale irwin\", \"united states\", \"68 + 68 = 136\", \"- 4\"],[\"2\", \"fuzzy zoeller\", \"united states\", \"71 + 66 = 137\", \"-- 3\"],[\"t3\", \"david canipe\", \"united states\", \"69 + 69 = 138\", \"- 2\"],[\"t3\", \"greg norman\", \"australia\", \"70 + 68 = 138\", \"- 2\"],[\"t5\", \"curtis strange\", \"united states\", \"70 + 69 = 139\", \"- 1\"],[\"t5\", \"jim thorpe\", \"united states\", \"68 + 71 = 139\", \"- 1\"],[\"7\", \"fred couples\", \"united states\", \"69 + 71 = 140\", \"e\"],[\"t8\", \"andy bean\", \"united states\", \"70 + 71 = 141\", \"+ 1\"],[\"t8\", \"jay sigel (a)\", \"united states\", \"69 + 72 = 141\", \"+ 1\"],[\"t10\", \"isao aoki\", \"japan\", \"72 + 70 = 142\", \"+ 2\"],[\"t10\", \"seve ballesteros\", \"spain\", \"69 + 73 = 142\", \"+ 2\"],[\"t10\", \"johnny miller\", \"united states\", \"74 + 68 = 142\", \"+ 2\"],[\"t10\", \"jack nicklaus\", \"united states\", \"71 + 71 = 142\", \"+ 2\"],[\"t10\", \"mike reid\", \"united states\", \"70 + 72 = 142\", \"+ 2\"]]\nQuestion = Is it true that seve ballesteros of spain has + 2 to par?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    countries = get_column_by_name(table_data, \"country\")\n    to_pars = get_column_by_name(table_data, \"to par\")\n    for player, country, to_par in zip(players, countries, to_pars):\n        if player.lower() == \"seve ballesteros\" and country.lower() == \"spain\":\n            answer = equal_to(to_par, \"+ 2\")\n            break \n    return answer\n\n### END"}
{"id": "1b4d3676-5b9b-443b-9aff-730d5d074e04", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"population (region total)\", \"population (stanthorpe)\", \"population (warwick)\", \"population (allora)\", \"population (glengallan)\", \"population (rosenthal)\"],[\"1933\", \"25016\", \"6934\", \"6664\", \"2624\", \"6334\", \"2460\"],[\"1947\", \"24009\", \"7419\", \"7129\", \"2217\", \"5269\", \"1975\"],[\"1954\", \"25862\", \"8335\", \"9151\", \"2106\", \"4639\", \"1631\"],[\"1961\", \"26288\", \"8514\", \"9843\", \"1961\", \"4388\", \"1582\"],[\"1966\", \"25917\", \"8503\", \"10065\", \"1890\", \"3906\", \"1553\"],[\"1971\", \"24115\", \"8189\", \"9303\", \"1719\", \"3410\", \"1494\"],[\"1976\", \"24583\", \"8709\", \"9169\", \"1666\", \"3491\", \"1548\"],[\"1981\", \"24300\", \"8576\", \"8853\", \"1679\", \"3611\", \"1581\"],[\"1986\", \"26270\", \"9143\", \"9435\", \"2041\", \"3688\", \"1963\"],[\"1991\", \"28288\", \"9556\", \"10393\", \"2132\", \"3966\", \"2241\"],[\"1996\", \"29563\", \"9596\", \"10896\", \"2234\", \"3990\", \"2742\"],[\"2001\", \"30554\", \"9860\", \"10956\", \"2439\", \"4088\", \"3129\"]]\nQuestion = Is it true that in the year 2001 , the population of glengallen is 4088?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    populations_glengallan = get_column_by_name(table_data, \"population (glengallan)\")\n    for year, population_glengallan in zip(years, populations_glengallan):\n        if year == \"2001\":\n            answer = equal_to(population_glengallan, \"4088\")\n            break \n    return answer\n\n### END"}
{"id": "f9ba1ef7-0b51-43a3-93d7-8f723f960626", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"poll source\",\"sample size\",\"date\",\"democrat\",\"republican\"],[\"survey usa\",\"520\",\"mar 14 - 16 , 2008\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"520\",\"mar 14 - 16 , 2008\",\"barack obama\",\"john mccain\"],[\"rasmussen reports\",\"500\",\"feb 17 - 18 , 2008\",\"hillary clinton\",\"john mccain\"],[\"rasmussen reports\",\"500\",\"feb 17 - 18 , 2008\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"506\",\"feb 15 - 17 , 2008\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"506\",\"feb 15 - 17 , 2008\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"hillary clinton\",\"rudy giuliani\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"hillary clinton\",\"mike huckabee\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"hillary clinton\",\"mitt romney\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"barack obama\",\"rudy giuliani\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"barack obama\",\"mike huckabee\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"barack obama\",\"mitt romney\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"hillary clinton\",\"rudy giuliani\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"hillary clinton\",\"mike huckabee\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"hillary clinton\",\"mitt romney\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"barack obama\",\"rudy giuliani\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"barack obama\",\"mike huckabee\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"barack obama\",\"mitt romney\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"hillary clinton\",\"rudy giuliani\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"hillary clinton\",\"mike huckabee\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"hillary clinton\",\"mitt romney\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"barack obama\",\"rudy giuliani\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"barack obama\",\"mike huckabee\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"barack obama\",\"mitt romney\"],[\"survey usa\",\"495\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"rudy giuliani\"],[\"survey usa\",\"472\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"mike huckabee\"],[\"survey usa\",\"468\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"464\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"ron paul\"],[\"survey usa\",\"482\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"mitt romney\"],[\"survey usa\",\"492\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"fred thompson\"]]\nQuestion = Is it true that hillary clinton was not the democratic candidate when mike huckabee was republican candidate and the sample size was less than 495?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    sample_sizes = get_column_by_name(table_data, \"sample size\")\n    democrats = get_column_by_name(table_data, \"democrat\")\n    republicans = get_column_by_name(table_data, \"republican\")\n    answer = True\n    for sample_size, democrat, republican in zip(sample_sizes, democrats, republicans):\n        if democrat.lower() == \"hillary clinton\" and republican.lower() == \"mike huckabee\" and less_than(int(sample_size), 495):\n            answer = False\n            break\n    return answer\n\n### END"}
{"id": "f928f637-71b3-453e-a25e-da1b9c6d4627", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = usa today all - usa high school baseball team\ntable_data = [[\"player\",\"position\",\"school\",\"hometown\",\"mlb draft\"],[\"delmon young\",\"outfielder\",\"camarillo high school\",\"camarillo, ca\",\"1st round - 1st pick of 2003 draft ( devil rays )\"],[\"chris lubanski\",\"outfielder\",\"kennedy - kenrick catholic high school\",\"norristown, pa\",\"1st round - 5th pick of 2003 draft ( royals )\"],[\"lastings milledge\",\"outfielder\",\"lakewood ranch high school\",\"bradenton, fl\",\"1st round - 12th pick of 2003 draft ( mets )\"],[\"brandon wood\",\"infielder\",\"horizon high school\",\"scottsdale, az\",\"1st round - 23rd pick of 2003 draft ( angels )\"],[\"john danks\",\"pitcher\",\"round rock high school\",\"round rock, tx\",\"1st round - 9th pick of 2003 draft ( rangers )\"],[\"jonathan fulton\",\"infielder\",\"george washington high school\",\"danville, va\",\"3rd round - 83rd pick of 2003 draft ( marlins )\"],[\"ian stewart\",\"infielder\",\"la quinta high school\",\"westminster, ca\",\"1st round - 10th pick of 2003 draft ( rockies )\"],[\"jeff allison\",\"pitcher\",\"veterans memorial high school\",\"peabody, ma\",\"1st round - 16th pick of 2003 draft ( marlins )\"],[\"daric barton\",\"catcher\",\"marina high school\",\"huntington beach, ca\",\"1st round - 28th pick of 2003 draft ( cardinals )\"],[\"eric duncan\",\"infielder\",\"seton hall preparatory school\",\"west orange, nj\",\"1st round - 27th pick of 2003 draft ( yankees )\"]]\nQuestion = Is it true that jonathan fulton attended george washington high school?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_player = get_column_by_name(table_data, \"player\")\n    column_school = get_column_by_name(table_data, \"school\")\n    answer = \"george washington high school\" in column_school and \"jonathan fulton\" in column_player\n    return answer\n\n### END"}
{"id": "1fc55361-f751-411b-adfd-81c94f455157", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1990 toronto blue jays season\ntable_data = [[\"date\",\"opponent\",\"score\",\"loss\",\"attendance\",\"record\"],[\"may 1\",\"indians\",\"4 - 3\",\"candiotti (3 - 1)\",\"5111\",\"13 - 9\"],[\"may 2\",\"indians\",\"3 - 0\",\"cerutti (1 - 4)\",\"8801\",\"13 - 10\"],[\"may 4\",\"tigers\",\"3 - 1\",\"flanagan (2 - 2)\",\"49146\",\"13 - 11\"],[\"may 5\",\"tigers\",\"5 - 1\",\"robinson (1 - 3)\",\"49219\",\"14 - 11\"],[\"may 6\",\"tigers\",\"11 - 7\",\"dubois (0 - 1)\",\"49206\",\"15 - 11\"],[\"may 7\",\"white sox\",\"6 - 1\",\"mcdowell (1 - 2)\",\"41384\",\"16 - 11\"],[\"may 8\",\"white sox\",\"4 - 1\",\"cerutti (1 - 5)\",\"41101\",\"16 - 12\"],[\"may 9\",\"white sox\",\"4 - 3\",\"edwards (0 - 1)\",\"43128\",\"17 - 12\"],[\"may 10\",\"tigers\",\"10 - 5\",\"stottlemyre (4 - 3)\",\"11296\",\"17 - 13\"],[\"may 11\",\"tigers\",\"4 - 2\",\"dubois (0 - 2)\",\"17376\",\"18 - 13\"],[\"may 12\",\"tigers\",\"postponed (rain) rescheduled for may 14\",\"postponed (rain) rescheduled for may 14\",\"postponed (rain) rescheduled for may 14\",\"postponed (rain) rescheduled for may 14\"],[\"may 13\",\"tigers\",\"6 - 3\",\"morris (2 - 5)\",\"17068\",\"19 - 13\"],[\"may 14\",\"tigers\",\"8 - 3 (10)\",\"henneman (0 - 3)\",\"10833\",\"20 - 13\"],[\"may 15\",\"mariners\",\"4 - 3 (10)\",\"acker (0 - 1)\",\"41108\",\"20 - 14\"],[\"may 16\",\"mariners\",\"4 - 2\",\"stottlemyre (4 - 4)\",\"45640\",\"20 - 15\"],[\"may 17\",\"mariners\",\"14 - 6\",\"key (4 - 2)\",\"47283\",\"20 - 16\"],[\"may 18\",\"angels\",\"4 - 2\",\"stieb (5 - 2)\",\"49339\",\"20 - 17\"],[\"may 19\",\"angels\",\"11 - 9\",\"ward (1 - 1)\",\"49335\",\"20 - 18\"],[\"may 20\",\"angels\",\"5 - 1\",\"langston (3 - 4)\",\"49421\",\"21 - 18\"],[\"may 21\",\"athletics\",\"4 - 1\",\"stottlemyre (4 - 5)\",\"49471\",\"21 - 19\"],[\"may 22\",\"athletics\",\"5 - 4\",\"wills (3 - 2)\",\"49559\",\"21 - 20\"],[\"may 23\",\"angels\",\"5 - 4\",\"ward (1 - 2)\",\"25179\",\"21 - 21\"],[\"may 24\",\"angels\",\"4 - 3 (11)\",\"henke (0 - 1)\",\"24460\",\"21 - 22\"],[\"may 25\",\"mariners\",\"3 - 1 (11)\",\"swift (2 - 2)\",\"15334\",\"22 - 22\"],[\"may 26\",\"mariners\",\"11 - 4\",\"holman (6 - 3)\",\"25004\",\"23 - 22\"],[\"may 27\",\"mariners\",\"5 - 1\",\"johnson (3 - 3)\",\"25858\",\"24 - 22\"],[\"may 28\",\"athletics\",\"1 - 0\",\"moore (4 - 4)\",\"45005\",\"25 - 22\"],[\"may 29\",\"athletics\",\"2 - 1\",\"stewart (8 - 2)\",\"25255\",\"26 - 22\"],[\"may 30\",\"athletics\",\"8 - 5\",\"blair (0 - 1)\",\"24257\",\"26 - 23\"]]\nQuestion = Is it true that on may 28 , moore (4 - 4) lost the game with a record of 25 - 22?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    losses = get_column_by_name(table_data, \"loss\")\n    records = get_column_by_name(table_data, \"record\")\n    answer = False\n    for date, loss, record in zip(dates, losses, records):\n        if date == \"may 28\" and loss == \"moore (4 - 4)\" and record == \"25 - 22\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "22b7a1b9-e026-49b0-82ef-fa97d742ae70", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = busiest airports in the united kingdom by total passenger traffic\ntable_data = [[\"rank\", \"airport\", \"total passengers\", \"% change 2006 / 2007\", \"international passengers\", \"domestic passengers\", \"transit passengers\", \"aircraft movements\", \"freight (metric tonnes)\"],[\"1\", \"london heathrow\", \"68066028\", \"0.8%\", \"62098911\", \"5753476\", \"213641\", \"481476\", \"1310987\"],[\"2\", \"london gatwick\", \"35216113\", \"3.1%\", \"31142002\", \"4023402\", \"50709\", \"266550\", \"171078\"],[\"3\", \"london stansted\", \"23779697\", \"0.4%\", \"21204946\", \"2554304\", \"20447\", \"208462\", \"203747\"],[\"4\", \"manchester\", \"22112625\", \"1.5%\", \"18662468\", \"3229255\", \"220902\", \"222703\", \"165366\"],[\"5\", \"london luton\", \"9927321\", \"5.3%\", \"8427894\", \"1491467\", \"7960\", \"120238\", \"38095\"],[\"6\", \"birmingham airport\", \"9226340\", \"0.9%\", \"7592240\", \"1541815\", \"92285\", \"114679\", \"13585\"],[\"7\", \"edinburgh\", \"9047558\", \"5.1%\", \"3417891\", \"5619309\", \"10358\", \"128172\", \"19292\"],[\"8\", \"glasgow international\", \"8795727\", \"0.6%\", \"4131512\", \"4594575\", \"69640\", \"108305\", \"4276\"],[\"9\", \"bristol\", \"5926774\", \"2.9%\", \"4608290\", \"1275566\", \"42918\", \"76428\", \"20\"],[\"10\", \"newcastle\", \"5650716\", \"4.0%\", \"3948594\", \"1675013\", \"27109\", \"79200\", \"785\"],[\"11\", \"liverpool\", \"5468510\", \"10.2%\", \"4636149\", \"827085\", \"5276\", \"86668\", \"3709\"],[\"12\", \"east midlands\", \"5413360\", \"14.5%\", \"4709855\", \"696649\", \"6856\", \"93989\", \"274753\"],[\"13\", \"belfast international\", \"5272664\", \"4.6%\", \"1788807\", \"3447248\", \"36609\", \"77395\", \"38429\"],[\"14\", \"aberdeen\", \"3412257\", \"7.8%\", \"1475988\", \"1935152\", \"1117\", \"121927\", \"3434\"],[\"15\", \"london city\", \"2912123\", \"23.5%\", \"2214884\", \"697239\", \"0\", \"91177\", \"0\"],[\"16\", \"leeds bradford\", \"2881539\", \"3.2%\", \"2229283\", \"630575\", \"21681\", \"65249\", \"109\"],[\"17\", \"glasgow prestwick\", \"2422332\", \"1.0%\", \"1827592\", \"593117\", \"1623\", \"47910\", \"31517\"],[\"18\", \"belfast city\", \"2186993\", \"3.9%\", \"93547\", \"2093320\", \"126\", \"43022\", \"1057\"],[\"19\", \"cardiff\", \"2111148\", \"4.3%\", \"1665247\", \"428260\", \"17641\", \"43963\", \"2391\"]]\nQuestion = Is it true that the rank of cardiff is six?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    airports = get_column_by_name(table_data, \"airport\")\n    for rank, airport in zip(ranks, airports):\n        if airport.lower() == \"cardiff\":\n            answer = equal_to(rank, \"6\")\n            break \n    return answer\n\n### END"}
{"id": "6c3e39d2-3099-4212-b4ca-db1a2ed8484b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = harald ertl\ntable_data = [[\"year\", \"entrant\", \"chassis\", \"engine\", \"points\"],[\"1975\", \"warsteiner brewery\", \"hesketh 308\", \"cosworth v8\", \"0\"],[\"1976\", \"hesketh racing\", \"hesketh 308d\", \"cosworth v8\", \"0\"],[\"1977\", \"hesketh racing\", \"hesketh 308e\", \"cosworth v8\", \"0\"],[\"1978\", \"sachs racing\", \"ensign n177\", \"cosworth v8\", \"0\"],[\"1978\", \"ats engineering\", \"ats hs1\", \"cosworth v8\", \"0\"],[\"1980\", \"team ats\", \"ats d4\", \"cosworth v8\", \"0\"]]\nQuestion = Is it true that warsteiner brewery scored 0 points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    entrants = get_column_by_name(table_data, \"entrant\")\n    points = get_column_by_name(table_data, \"points\")\n    for entrant, point in zip(entrants, points):\n        if entrant.lower() == \"warsteiner brewery\":\n            answer = equal_to(point, \"0\")\n            break \n    return answer\n\n### END"}
{"id": "9014a861-e1e6-43ee-b860-017887e58224", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = new york city mayoral elections\ntable_data = [[\"1953\", \"party\", \"manhattan\", \"the bronx\", \"brooklyn\", \"queens\", \"richmond\", \"total\"],[\"robert f wagner , jr\", \"democratic\", \"236960\", \"206771\", \"339970\", \"207918\", \"31007\", \"1022626\"],[\"robert f wagner , jr\", \"democratic\", \"47.9%\", \"46.2%\", \"46.6%\", \"40.6%\", \"51.8%\", \"1022626\"],[\"harold riegelman\", \"republican\", \"147876\", \"97224\", \"183968\", \"208829\", \"23694\", \"661591\"],[\"harold riegelman\", \"republican\", \"29.9%\", \"21.7%\", \"25.2%\", \"40.8%\", \"39.6%\", \"661591\"],[\"rudolph halley\", \"liberal\", \"76884\", \"112825\", \"162275\", \"73192\", \"3514\", \"428690\"],[\"rudolph halley\", \"independent\", \"7648\", \"9853\", \"13264\", \"7356\", \"295\", \"38416\"],[\"rudolph halley\", \"total\", \"84532\", \"122678\", \"175539\", \"80548\", \"3809\", \"467106\"],[\"rudolph halley\", \"total\", \"17.1%\", \"27.4%\", \"24.1%\", \"15.7%\", \"6.4%\", \"467106\"],[\"clifford t mcavoy\", \"american labor party\", \"14904\", \"13290\", \"17337\", \"7182\", \"332\", \"53045\"],[\"david l weiss\", \"socialist workers\", \"10683\", \"7760\", \"13062\", \"7254\", \"1019\", \"2054\"],[\"nathan karp\", \"industrial gov't\", \"10683\", \"7760\", \"13062\", \"7254\", \"1019\", \"916\"],[\"scattered\", \"scattered\", \"10683\", \"7760\", \"13062\", \"7254\", \"1019\", \"180\"],[\"unrecorded (blank , spoiled , etc)\", \"unrecorded (blank , spoiled , etc)\", \"10683\", \"7760\", \"13062\", \"7254\", \"1019\", \"36630\"],[\"t o t a l\", \"t o t a l\", \"494955\", \"447723\", \"729876\", \"511731\", \"59861\", \"2244146\"]]\nQuestion = Is it true that either david l weiss or nathan karp or scattered or unrecorded (blank , spoiled , etc) was the candidate that got 332 votes for staten island?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    candidates = get_column_by_name(table_data, \"1953\")\n    votes = get_column_by_name(table_data, \"richmond\")\n    answer = False\n    for candidate, vote in zip(candidates, votes):\n        if candidate.lower() in [\"david l weiss\", \"nathan karp\", \"scattered\", \"unrecorded (blank , spoiled , etc)\"]:\n            if equal_to(vote, \"332\"):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "db055e04-edd1-4684-9ec0-35bbac66f7fb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rivers state\ntable_data = [[\"lga name\", \"area (km 2 )\", \"census 2006 population\", \"administrative capital\", \"postal code\"],[\"port harcourt\", \"109\", \"541115\", \"port harcourt\", \"500\"],[\"obio - akpor\", \"260\", \"464789\", \"rumuodumaya\", \"500\"],[\"okrika\", \"222\", \"222026\", \"okrika\", \"500\"],[\"ogu / bolo\", \"89\", \"74683\", \"ogu\", \"500\"],[\"eleme\", \"138\", \"190884\", \"eleme\", \"501\"],[\"tai\", \"159\", \"117797\", \"sakpenwa\", \"501\"],[\"gokana\", \"126\", \"228828\", \"kpor\", \"501\"],[\"khana\", \"560\", \"294217\", \"bori\", \"502\"],[\"oyigbo\", \"248\", \"122687\", \"afam\", \"502\"],[\"opobo / nkoro\", \"130\", \"151511\", \"opobo town\", \"503\"],[\"andoni\", \"233\", \"211009\", \"ngo\", \"503\"],[\"bonny\", \"642\", \"215358\", \"bonny\", \"503\"],[\"degema\", \"1011\", \"249773\", \"degema\", \"504\"],[\"asari - toru\", \"113\", \"220100\", \"buguma\", \"504\"],[\"akuku - toru\", \"1443\", \"156006\", \"abonnema\", \"504\"],[\"abua / odual\", \"704\", \"282988\", \"abua\", \"510\"],[\"ahoada west\", \"403\", \"249425\", \"akinima\", \"510\"],[\"ahoada east\", \"341\", \"166747\", \"ahoada\", \"510\"],[\"ogba / egbema / ndoni\", \"969\", \"284010\", \"omuku\", \"510\"],[\"emohua\", \"831\", \"201901\", \"emohua\", \"511\"],[\"ikwerre\", \"655\", \"189726\", \"isiokpo\", \"511\"],[\"etche\", \"805\", \"249454\", \"okehi\", \"512\"]]\nQuestion = Is it true that lga name was port harcourt when the 2006 census population is less than 425208 and administrative capital was port harcourt?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    lga_names = get_column_by_name(table_data, \"lga name\")\n    populations = get_column_by_name(table_data, \"census 2006 population\")\n    capitals = get_column_by_name(table_data, \"administrative capital\")\n    answer = False\n    for lga_name, population, capital in zip(lga_names, populations, capitals):\n        if lga_name.lower() == \"port harcourt\" and capital.lower() == \"port harcourt\":\n            if less_than(int(population), 425208):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "f7defee2-51fc-432a-97f7-24707fd3eaaa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of americas records in swimming\ntable_data = [[\"event\", \"time\", \"nationality\", \"date\", \"meet\", \"location\"],[\"50 m freestyle\", \"20.91\", \"brazil\", \"18 december 2009\", \"brazilian championships\", \"são paulo, brazil\"],[\"100 m freestyle\", \"46.91\", \"brazil\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m freestyle\", \"1:42.96\", \"united states\", \"12 august 2008\", \"olympic games\", \"beijing, china\"],[\"400 m freestyle\", \"3:42.78\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"800 m freestyle\", \"7:41.86\", \"canada\", \"27 july 2011\", \"world championships\", \"shanghai, china\"],[\"1500 m freestyle\", \"14:39.63\", \"canada\", \"4 august 2012\", \"olympic games\", \"london, united kingdom\"],[\"50 m backstroke\", \"24.33\", \"united states\", \"5 december 2008\", \"dutch swim cup\", \"eindhoven, netherlands\"],[\"100 m backstroke\", \"51.94\", \"united states\", \"8 july 2009\", \"us championships\", \"indianapolis, united states\"],[\"200 m backstroke\", \"1:51.92\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m breaststroke\", \"26.76\", \"brazil\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"100 m breaststroke\", \"58.96\", \"united states\", \"26 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m breaststroke\", \"2:07.42\", \"united states\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m butterfly\", \"22.76\", \"brazil\", \"26 april 2012\", \"maria lenk trophy\", \"rio de janeiro, brazil\"],[\"100 m butterfly\", \"49.82\", \"united states\", \"1 august 2009\", \"world championships\", \"rome, italy\"],[\"200 m butterfly\", \"1:51.51\", \"united states\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m individual medley\", \"1:54.00\", \"united states\", \"28 july 2011\", \"world championships\", \"shanghai, china\"],[\"400 m individual medley\", \"4:03.84\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"4100 m freestyle relay\", \"3:08.24\", \"united states\", \"11 august 2008\", \"olympic games\", \"beijing, china\"],[\"4200 m freestyle relay\", \"6:58.55\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"4100 m medley relay\", \"3:27.28\", \"united states\", \"2 august 2009\", \"world championships\", \"rome, italy\"]]\nQuestion = Is it true that the winning time for the 50 m butterfly was 49.82 and was won by an american?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    times = get_column_by_name(table_data, \"time\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    for event, time, nationality in zip(events, times, nationalities):\n        if event.lower() == \"50 m butterfly\":\n            answer = equal_to(time, \"49.82\") and equal_to(nationality.lower(), \"united states\")\n            break \n    return answer\n\n### END"}
{"id": "6a58da2e-cf2e-44e5-9e6f-438ff6d7c3da", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of new jersey transit stations\ntable_data = [[\"station\", \"municipality\", \"county\", \"former railroad\", \"closed\"],[\"ampere\", \"east orange\", \"essex , nj\", \"lackawanna\", \"1991\"],[\"arlington\", \"kearney\", \"hudson , nj\", \"erie\", \"2002\"],[\"benson street\", \"glen ridge\", \"essex , nj\", \"erie\", \"2002\"],[\"fairmount avenue\", \"hackensack\", \"bergen , nj\", \"erie\", \"1983\"],[\"finderne\", \"finderne\", \"somerset , nj\", \"jersey central\", \"2006\"],[\"great notch\", \"great notch\", \"passaic , nj\", \"erie\", \"2010\"],[\"grove street\", \"east orange\", \"essex , nj\", \"lackawanna\", \"1991\"],[\"harmon cove\", \"secaucus\", \"hudson , nj\", \"erie\", \"2003\"],[\"harrison\", \"harrison\", \"hudson , nj\", \"lackawanna\", \"1984\"],[\"north newark\", \"newark\", \"essex , nj\", \"lackawanna\", \"1984\"],[\"north rahway\", \"rahway\", \"fairfield , nj\", \"pennsylvania\", \"1993\"],[\"roseville avenue\", \"newark\", \"essex , nj\", \"lackawanna\", \"1984\"],[\"rowe street\", \"bloomfield township\", \"essex , nj\", \"erie\", \"2002\"]]\nQuestion = Is it true that the benson street station is in glen ridge municipality?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    stations = get_column_by_name(table_data, \"station\")\n    municipalities = get_column_by_name(table_data, \"municipality\")\n    for station, municipality in zip(stations, municipalities):\n        if equal_to(station, \"benson street\"):\n            answer = equal_to(municipality, \"glen ridge\")\n            break \n    return answer\n\n### END"}
{"id": "0cd7a466-08ae-4833-a8fd-89577e108058", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"player\", \"minutes\", \"field goals\", \"rebounds\", \"assists\", \"steals\", \"blocks\", \"points\"],[\"andrea stinson\", \"1006\", \"179\", \"137\", \"88\", \"43\", \"19\", \"450\"],[\"allison feaster\", \"1007\", \"126\", \"153\", \"46\", \"29\", \"10\", \"365\"],[\"dawn staley\", \"1152\", \"107\", \"71\", \"179\", \"52\", \"1\", \"298\"],[\"tammy sutton - brown\", \"602\", \"72\", \"129\", \"11\", \"21\", \"39\", \"196\"],[\"tonya edwards\", \"580\", \"60\", \"62\", \"48\", \"19\", \"7\", \"194\"],[\"shalonda enis\", \"623\", \"66\", \"113\", \"14\", \"10\", \"5\", \"191\"],[\"charlotte smith\", \"678\", \"57\", \"101\", \"50\", \"16\", \"13\", \"171\"],[\"clarisse machanguana\", \"580\", \"63\", \"121\", \"17\", \"16\", \"16\", \"163\"],[\"summer erb\", \"148\", \"18\", \"35\", \"4\", \"1\", \"5\", \"54\"],[\"kelly miller\", \"225\", \"22\", \"28\", \"14\", \"9\", \"0\", \"55\"]]\nQuestion = Is it true that the table doesn't provide information about tonya edwards' long range shots?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    if column_name in table[0]:\n        column_index = table[0].index(column_name)\n        column = []\n        for row in table[1:]:\n            column.append(row[column_index])\n        return column\n    else:\n        return None\n\ndef solution(table_data):\n    column_long_range_shots = get_column_by_name(table_data, \"long range shots\")\n    answer = column_long_range_shots is None\n    return answer\n\n### END"}
{"id": "1babd0fb-2b7d-42c5-88bc-5c0ec45ed07c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = türk telekom arena\ntable_data = [[\"project\", \"year\", \"location\", \"capacity\", \"suites\", \"architect\", \"cost\"],[\"faruk süren project\", \"1997 - 2001\", \"mecidiyeköy\", \"40482\", \"125 + 72 boxes without outside seating\", \"bbb architects\", \"118.5 million ( in 2014 dollars)\"],[\"mehmet cansun project\", \"2001\", \"mecidiyeköy\", \"35000\", \"132\", \"gs member architecture group\", \"35 million ( in 2014 dollars)\"],[\"özhan canaydın : back to süren 's project\", \"2002 - 2005\", \"aslantepe\", \"40482\", \"125\", \"bbb architects\", \"90 million ( in 2014 dollars)\"],[\"eren talu bidding project\", \"2007\", \"aslantepe\", \"52000\", \"150\", \"populous\", \"n / a\"],[\"özhan canaydın project\", \"2007\", \"aslantepe\", \"52652\", \"157\", \"asp stuttgart\", \"250 million ( in 2014 dollars)\"]]\nQuestion = Is it true that Özhan canaydın : back to süren 's project is located at mecidiyeköy?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    projects = get_column_by_name(table_data, \"project\")\n    locations = get_column_by_name(table_data, \"location\")\n    for project, location in zip(projects, locations):\n        if \"özhan canaydın : back to süren 's project\" in project.lower():\n            answer = equal_to(location, \"mecidiyeköy\")\n            break \n    return answer\n\n### END"}
{"id": "c9849d84-fd47-4b9f-902c-0004f485775c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"name\", \"latitude\", \"longitude\", \"diameter (km)\", \"year named\", \"name origin\"],[\"fornax rupes\", \"30.3n\", \"201.1e\", \"729.0\", \"1985\", \"roman goddess of hearth and baking of bread\"],[\"gabie rupes\", \"67.5n\", \"109.9e\", \"350.0\", \"1985\", \"lithuanian goddess of fire and hearth\"],[\"hestia rupes\", \"6.0n\", \"71.1e\", \"588.0\", \"1982\", \"greek hearth goddess\"],[\"uorsar rupes\", \"76.8n\", \"341.2e\", \"820.0\", \"1985\", \"adygan (caucasus) goddess of hearth\"],[\"ut rupes\", \"55.3n\", \"321.9e\", \"676.0\", \"1982\", \"siberian , turco - tatar goddess of the hearth fire\"],[\"vaidilute rupes\", \"43.5s\", \"22.0e\", \"2000.0\", \"1997\", \"lithuanian hearth goddess\"],[\"vesta rupes\", \"58.3n\", \"323.9e\", \"788.0\", \"1982\", \"roman hearth goddess\"]]\nQuestion = Is it true that in 1985 , the fornax rupes' diameter was 729 km?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    diameters = get_column_by_name(table_data, \"diameter (km)\")\n    years = get_column_by_name(table_data, \"year named\")\n    for name, diameter, year in zip(names, diameters, years):\n        if name.lower() == \"fornax rupes\" and year == \"1985\":\n            answer = equal_to(diameter, \"729.0\")\n            break \n    return answer\n\n### END"}
{"id": "ab7e91c9-37a6-4c0a-97db-7c95fe8bfa8d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1989 all - ireland senior hurling championship\ntable_data = [[\"rank\", \"player\", \"county\", \"tally\", \"total\", \"matches\", \"average\"],[\"1\", \"nicky english\", \"tipperary\", \"4 - 38\", \"50\", \"4\", \"12.50\"],[\"2\", \"adrian ronan\", \"kilkenny\", \"1 - 21\", \"24\", \"3\", \"8.00\"],[\"2\", \"mark corrigan\", \"offaly\", \"4 - 12\", \"24\", \"3\", \"8.00\"],[\"4\", \"finbarr delaney\", \"cork\", \"1 - 19\", \"23\", \"2\", \"8.00\"],[\"5\", \"pat fox\", \"tipperary\", \"3 - 11\", \"20\", \"4\", \"5.00\"]]\nQuestion = Is it true that the average total in the tipperary county with a rank bigger than 1 is 0?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    counties = get_column_by_name(table_data, \"county\")\n    averages = get_column_by_name(table_data, \"average\")\n    for rank, county, average in zip(ranks, counties, averages):\n        if county.lower() == \"tipperary\" and int(rank) > 1:\n            answer = equal_to(float(average), 0)\n            break \n    return answer\n\n### END"}
{"id": "2f1a7991-ae12-4aeb-9bdc-e59c5f42b38e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = toronto , grey and bruce railway\ntable_data = [[\"number\",\"name\",\"builder\",\"type\",\"date\",\"works number\"],[\"1\",\"gordon\",\"avonside engine company\",\"4 - 6 - 0\",\"aug 1870\",\"799\"],[\"2\",\"ar mcmaster\",\"avonside engine company\",\"4 - 4 - 0\",\"aug 1870\",\"800\"],[\"3\",\"kincardine\",\"avonside engine company\",\"4 - 4 - 0\",\"september 1870\",\"809\"],[\"4\",\"r walker & sons\",\"avonside engine company\",\"4 - 4 - 0\",\"may 1871\",\"838\"],[\"5\",\"albion\",\"avonside engine company\",\"4 - 4 - 0\",\"july 1871\",\"839\"],[\"6\",\"rice lewis & son\",\"avonside engine company\",\"4 - 4 - 0\",\"mid 1871\",\"840\"],[\"7\",\"caledon\",\"avonside engine company\",\"0 - 6 - 6 - 0 fairlie type\",\"late 1872\",\"862 & 863\"],[\"8\",\"mono\",\"avonside engine company\",\"4 - 6 - 0\",\"late 1871\",\"866\"],[\"9\",\"toronto\",\"baldwin locomotive works\",\"2 - 6 - 0\",\"september 1871\",\"2534\"],[\"10\",\"amaranth\",\"baldwin locomotive works\",\"2 - 6 - 0\",\"september 1871\",\"2538\"],[\"11\",\"holland\",\"avonside engine company\",\"4 - 6 - 0\",\"early 1873\",\"one of 935 - 939\"],[\"12\",\"sydenham\",\"avonside engine company\",\"4 - 6 - 0\",\"early 1873\",\"one of 935 - 939\"],[\"13\",\"artemisia\",\"avonside engine company\",\"4 - 6 - 0\",\"early 1873\",\"one of 935 - 939\"],[\"14\",\"owen sound\",\"avonside engine company\",\"4 - 6 - 0\",\"early 1873\",\"one of 931932933 , or 934\"],[\"15\",\"mount forest\",\"baldwin locomotive works\",\"2 - 8 - 0\",\"february 1874\",\"3524\"],[\"16\",\"orangeville\",\"baldwin locomotive works\",\"2 - 8 - 0\",\"february 1874\",\"3525\"],[\"17\",\"sarawak\",\"baldwin locomotive works\",\"2 - 8 - 0\",\"april 1874\",\"3551\"],[\"18\",\"melancthon\",\"baldwin locomotive works\",\"2 - 8 - 0\",\"april 1874\",\"3552\"],[\"19\",\"howick\",\"baldwin locomotive works\",\"2 - 8 - 0\",\"september 1874\",\"3636\"],[\"20\",\"culross\",\"baldwin locomotive works\",\"2 - 8 - 0\",\"september 1874\",\"3640\"]]\nQuestion = Is it true that culcross had a type of 2 - 8 - 0 and a number of 20?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    types = get_column_by_name(table_data, \"type\")\n    numbers = get_column_by_name(table_data, \"number\")\n    for name, type_, number in zip(names, types, numbers):\n        if name.lower() == \"culross\":\n            answer = equal_to(type_, \"2 - 8 - 0\") and equal_to(number, \"20\")\n            break \n    return answer\n\n### END"}
{"id": "0b40f903-0f05-4ce0-9745-c8beb2f84863", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2011 the dominion tankard\ntable_data = [[\"skip (club)\", \"w\", \"l\", \"pf\", \"pa\", \"ends won\", \"ends lost\", \"blank ends\", \"stolen ends\"],[\"peter corner (brampton)\", \"8\", \"2\", \"69\", \"54\", \"41\", \"36\", \"8\", \"11\"],[\"glenn howard (coldwater)\", \"8\", \"2\", \"79\", \"35\", \"40\", \"22\", \"8\", \"11\"],[\"greg balsdon (loonie)\", \"7\", \"3\", \"80\", \"57\", \"46\", \"37\", \"5\", \"12\"],[\"john epping (donalda)\", \"7\", \"3\", \"76\", \"64\", \"43\", \"41\", \"5\", \"10\"],[\"mark bice (sarnia)\", \"6\", \"4\", \"70\", \"76\", \"45\", \"44\", \"8\", \"7\"],[\"chris gardner (renfrew)\", \"5\", \"5\", \"73\", \"72\", \"47\", \"41\", \"7\", \"16\"],[\"dale matchett (bradford)\", \"4\", \"6\", \"57\", \"75\", \"35\", \"42\", \"7\", \"7\"],[\"mark kean (annandale)\", \"3\", \"7\", \"53\", \"67\", \"43\", \"35\", \"12\", \"8\"],[\"howard rajala (rideau)\", \"3\", \"7\", \"67\", \"71\", \"43\", \"48\", \"5\", \"9\"],[\"nick rizzo (brantford)\", \"3\", \"7\", \"56\", \"74\", \"35\", \"42\", \"4\", \"5\"]]\nQuestion = Is it true that the most stolen ends was 11?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(int(row[column_index]))\n    return column\n\ndef get_max_value(lst):\n    return max(lst)\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    stolen_ends = get_column_by_name(table_data, \"stolen ends\")\n    max_stolen_ends = get_max_value(stolen_ends)\n    answer = equal_to(max_stolen_ends, 11)\n    return answer\n\n### END"}
{"id": "2885fd93-5338-4e6c-9dc4-bf6d98f85d20", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1974 formula one season\ntable_data = [[\"race\",\"circuit\",\"date\",\"pole position\",\"fastest lap\",\"winning driver\",\"constructor\",\"tyre\",\"report\"],[\"argentine grand prix\",\"buenos aires\",\"13 january\",\"ronnie peterson\",\"clay regazzoni\",\"denny hulme\",\"mclaren - ford\",\"g\",\"report\"],[\"brazilian grand prix\",\"interlagos\",\"27 january\",\"emerson fittipaldi\",\"clay regazzoni\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"south african grand prix\",\"kyalami\",\"30 march\",\"niki lauda\",\"carlos reutemann\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"],[\"spanish grand prix\",\"jarama\",\"28 april\",\"niki lauda\",\"niki lauda\",\"niki lauda\",\"ferrari\",\"g\",\"report\"],[\"belgian grand prix\",\"nivelles - baulers\",\"12 may\",\"clay regazzoni\",\"denny hulme\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"monaco grand prix\",\"monaco\",\"26 may\",\"niki lauda\",\"ronnie peterson\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"swedish grand prix\",\"anderstorp\",\"9 june\",\"patrick depailler\",\"patrick depailler\",\"jody scheckter\",\"tyrrell - ford\",\"g\",\"report\"],[\"dutch grand prix\",\"zandvoort\",\"23 june\",\"niki lauda\",\"ronnie peterson\",\"niki lauda\",\"ferrari\",\"g\",\"report\"],[\"french grand prix\",\"dijon - prenois\",\"7 july\",\"niki lauda\",\"jody scheckter\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"british grand prix\",\"brands hatch\",\"20 july\",\"niki lauda\",\"niki lauda\",\"jody scheckter\",\"tyrrell - ford\",\"g\",\"report\"],[\"german grand prix\",\"nürburgring\",\"4 august\",\"niki lauda\",\"jody scheckter\",\"clay regazzoni\",\"ferrari\",\"g\",\"report\"],[\"austrian grand prix\",\"österreichring\",\"18 august\",\"niki lauda\",\"clay regazzoni\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"],[\"italian grand prix\",\"monza\",\"8 september\",\"niki lauda\",\"carlos pace\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"canadian grand prix\",\"mosport park\",\"22 september\",\"emerson fittipaldi\",\"niki lauda\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"united states grand prix\",\"watkins glen\",\"6 october\",\"carlos reutemann\",\"carlos pace\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"]]\nQuestion = Is it true that the winning driver for circuit of monza is denny hulme?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    circuits = get_column_by_name(table_data, \"circuit\")\n    winning_drivers = get_column_by_name(table_data, \"winning driver\")\n    for circuit, winning_driver in zip(circuits, winning_drivers):\n        if circuit.lower() == \"monza\":\n            answer = winning_driver.lower() == \"denny hulme\"\n            break\n    return answer\n\n### END"}
{"id": "60423ce7-3696-40fa-9c16-06715b465882", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 football league one\ntable_data = [[\"team\",\"outgoing manager\",\"manner of departure\",\"date of vacancy\",\"replaced by\",\"date of appointment\",\"position in table\"],[\"milton keynes dons\",\"paul ince\",\"signed by blackburn rovers (mutual consent)\",\"22 june 2008\",\"roberto di matteo\",\"2 july 2008\",\"pre - season\"],[\"cheltenham town\",\"keith downing\",\"mutual consent\",\"13 september 2008\",\"martin allen\",\"15 september 2008\",\"24th\"],[\"colchester united\",\"geraint williams\",\"mutual consent\",\"22 september 2008\",\"paul lambert\",\"24 september 2008\",\"23rd\"],[\"carlisle united\",\"john ward\",\"mutual consent\",\"3 november 2008\",\"greg abbott\",\"5 december 2008\",\"20th\"],[\"huddersfield town\",\"stan ternent\",\"mutual consent\",\"4 november 2008\",\"lee clark\",\"11 december 2008\",\"16th\"],[\"swindon town\",\"maurice malpas\",\"mutual consent\",\"14 november 2008\",\"danny wilson\",\"26 december 2008\",\"16th\"],[\"crewe alexandra\",\"steve holland\",\"contract terminated\",\"18 november 2008\",\"guðjón þórðarson\",\"24 december 2008\",\"24th\"],[\"hartlepool united\",\"danny wilson\",\"contract terminated\",\"15 december 2008\",\"chris turner\",\"15 december 2008\",\"13th\"],[\"leeds united\",\"gary mcallister\",\"contract terminated\",\"21 december 2008\",\"simon grayson\",\"23 december 2008\",\"9th\"],[\"walsall\",\"jimmy mullen\",\"contract terminated\",\"10 january 2009\",\"chris hutchings\",\"20 january 2009\",\"12th\"],[\"leyton orient\",\"martin ling\",\"mutual consent\",\"18 january 2009\",\"geraint williams\",\"5 february 2009\",\"21st\"],[\"yeovil town\",\"russell slade\",\"contract terminated\",\"16 february 2009\",\"terry skiverton\",\"18 february 2009\",\"16th\"],[\"brighton & hove albion\",\"micky adams\",\"contract terminated\",\"21 february 2009\",\"russell slade\",\"6 march 2009\",\"21st\"]]\nQuestion = Is it true that simon grayson was appointed to leeds united on 23 december 2008?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    replaced_by = get_column_by_name(table_data, \"replaced by\")\n    date_of_appointment = get_column_by_name(table_data, \"date of appointment\")\n    team = get_column_by_name(table_data, \"team\")\n    for i in range(len(replaced_by)):\n        if replaced_by[i].lower() == \"simon grayson\" and date_of_appointment[i] == \"23 december 2008\" and team[i].lower() == \"leeds united\":\n            return True\n    return False\n\n### END"}
{"id": "d1750644-6403-4969-9d98-db4417b2eaa5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 seattle supersonics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"47\", \"february 2\", \"new york\", \"w 86 - 85 (ot)\", \"kevin durant (21)\", \"nick collison (12)\", \"earl watson (8)\", \"keyarena 12783\", \"12 - 35\"],[\"48\", \"february 4\", \"chicago\", \"l 108 - 118 (ot)\", \"wally szczerbiak (21)\", \"nick collison (9)\", \"earl watson (8)\", \"keyarena 10935\", \"12 - 36\"],[\"49\", \"february 6\", \"sacramento\", \"w 105 - 92 (ot)\", \"earl watson (23)\", \"earl watson chris wilcox (10)\", \"earl watson (10)\", \"arco arena 13136\", \"13 - 36\"],[\"50\", \"february 8\", \"phoenix\", \"l 99 - 103 (ot)\", \"chris wilcox (22)\", \"chris wilcox (15)\", \"earl watson (5)\", \"us airways center 18422\", \"13 - 37\"],[\"51\", \"february 13\", \"utah\", \"l 93 - 112 (ot)\", \"kevin durant (19)\", \"kurt thomas (13)\", \"earl watson (14)\", \"keyarena 10618\", \"13 - 38\"],[\"52\", \"february 19\", \"memphis\", \"w 108 - 101 (ot)\", \"earl watson (26)\", \"nick collison jeff green (9)\", \"earl watson (9)\", \"keyarena 11391\", \"14 - 38\"],[\"53\", \"february 21\", \"portland\", \"l 88 - 92 (ot)\", \"kevin durant (20)\", \"nick collison (14)\", \"earl watson (9)\", \"rose garden 20168\", \"14 - 39\"],[\"54\", \"february 22\", \"portland\", \"w 99 - 87 (ot)\", \"kevin durant (17)\", \"jeff green (9)\", \"earl watson (4)\", \"keyarena 16640\", \"15 - 39\"],[\"55\", \"february 24\", \"l a lakers\", \"l 91 - 111 (ot)\", \"mickaël gelabale (21)\", \"johan petro (10)\", \"earl watson (8)\", \"keyarena 17072\", \"15 - 40\"],[\"56\", \"february 26\", \"golden state\", \"l 99 - 105 (ot)\", \"kevin durant jeff green (21)\", \"nick collison (13)\", \"luke ridnour (15)\", \"oracle arena 19412\", \"15 - 41\"],[\"57\", \"february 27\", \"denver\", \"l 96 - 138 (ot)\", \"kevin durant mickaël gelabale (16)\", \"johan petro (8)\", \"mickaël gelabale (6)\", \"keyarena 13627\", \"15 - 42\"]]\nQuestion = Is it true that nick collison had 14 rebounds at the game played at rose garden on february 21?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    high_rebounds = get_column_by_name(table_data, \"high rebounds\")\n    locations = get_column_by_name(table_data, \"location attendance\")\n    for date, high_rebound, location in zip(dates, high_rebounds, locations):\n        if \"february 21\" in date.lower() and \"rose garden\" in location.lower():\n            answer = equal_to(high_rebound, \"nick collison (14)\")\n            break \n    return answer\n\n### END"}
{"id": "50136582-df97-4dfd-81f7-861009863ea7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 atlanta hawks season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"series\"],[\"1\", \"april 20\", \"boston\", \"81 - 104\", \"a horford (20)\", \"a horford (10)\", \"j johnson (7)\", \"td banknorth garden 18624\", \"0 - 1\"],[\"2\", \"april 23\", \"boston\", \"77 - 96\", \"two - way tie (13)\", \"a horford (9)\", \"two - way tie (3)\", \"td banknorth garden 18624\", \"0 - 2\"],[\"3\", \"april 26\", \"boston\", \"102 - 93\", \"j smith (27)\", \"a horford (10)\", \"m bibby (8)\", \"philips arena 19725\", \"1 - 2\"],[\"4\", \"april 28\", \"boston\", \"97 - 92\", \"j johnson (35)\", \"a horford (13)\", \"j johnson (6)\", \"philips arena 20016\", \"2 - 2\"],[\"5\", \"april 30\", \"boston\", \"85 - 110\", \"j johnson (21)\", \"a horford (10)\", \"a horford (5)\", \"td banknorth garden 18624\", \"2 - 3\"],[\"6\", \"may 2\", \"boston\", \"103 - 100\", \"m williams (18)\", \"four - way tie (6)\", \"m bibby (7)\", \"philips arena 20425\", \"3 - 3\"],[\"7\", \"may 4\", \"boston\", \"99 - 65\", \"j johnson (16)\", \"a horford (12)\", \"a horford (3)\", \"td banknorth garden 18624\", \"3 - 4\"]]\nQuestion = Is it true that they played against boston in game 4?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    games = get_column_by_name(table_data, \"game\")\n    teams = get_column_by_name(table_data, \"team\")\n    for game, team in zip(games, teams):\n        if equal_to(game, \"4\") and equal_to(team, \"boston\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "ae56da2e-1c5b-40e5-b6f6-077673fa1917", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1925 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"8.11 (59)\", \"st kilda\", \"8.8 (56)\", \"glenferrie oval\", \"10000\", \"8 august 1925\"],[\"geelong\", \"11.20 (86)\", \"richmond\", \"4.8 (32)\", \"corio oval\", \"13500\", \"8 august 1925\"],[\"fitzroy\", \"17.18 (120)\", \"north melbourne\", \"11.8 (74)\", \"brunswick street oval\", \"7000\", \"8 august 1925\"],[\"south melbourne\", \"13.14 (92)\", \"footscray\", \"12.15 (87)\", \"lake oval\", \"15000\", \"8 august 1925\"],[\"melbourne\", \"7.10 (52)\", \"collingwood\", \"9.11 (65)\", \"mcg\", \"33642\", \"8 august 1925\"],[\"essendon\", \"15.11 (101)\", \"carlton\", \"8.14 (62)\", \"windy hill\", \"10000\", \"8 august 1925\"]]\nQuestion = Is it true that the home team score of 17.18 (120) had a crowd of 7000?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    for home_team_score, crowd in zip(home_team_scores, crowds):\n        if home_team_score == \"17.18 (120)\":\n            answer = equal_to(crowd, \"7000\")\n            break \n    return answer\n\n### END"}
{"id": "56f554a9-36c4-479e-b754-3a5b800b9f5b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = turkmenistan fed cup team\ntable_data = [[\"name\", \"tkm career\", \"ties\", \"dou w / l\", \"sin w / l\"],[\"anastasiya prenko\", \"2008 -\", \"18\", \"9 - 6\", \"10 - 7\"],[\"jenneta halliyeva\", \"2004 - 2013\", \"18\", \"5 - 6\", \"4 - 5\"],[\"ummarahmat hummetova\", \"2004 - 2012\", \"13\", \"3 - 8\", \"1 - 7\"],[\"ayna ereshova\", \"2011\", \"1\", \"1 - 0\", \"0 - 0\"],[\"guljahan kadryova\", \"2013\", \"2\", \"1 - 0\", \"0 - 1\"],[\"amangul mollayeva\", \"2011\", \"4\", \"1 - 0\", \"0 - 3\"],[\"jahana bayramova\", \"2013 -\", \"5\", \"1 - 1\", \"1 - 4\"],[\"veronika babayan\", \"2004\", \"3\", \"1 - 2\", \"0 - 1\"]]\nQuestion = Is it true that jahana bayramova had 5 ties?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    ties = get_column_by_name(table_data, \"ties\")\n    for name, tie in zip(names, ties):\n        if name.lower() == \"jahana bayramova\":\n            answer = equal_to(tie, \"5\")\n            break \n    return answer\n\n### END"}
{"id": "3a7141fe-325e-40a0-8b33-9911ee485549", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = peaches & herb\ntable_data = [[\"title\", \"label\", \"year of release\", \"country of release\", \"peaches :\"],[\"for your love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"let 's fall in love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"peaches & herb\", \"mca\", \"1977\", \"usa\", \"linda greene\"],[\"2 hot\", \"mvp / polydor\", \"1978\", \"usa\", \"linda greene\"],[\"twice the fire\", \"mvp / polydor\", \"1979\", \"usa\", \"linda greene\"],[\"demasiado candente\", \"mvp / polydor\", \"1979\", \"argentina\", \"linda greene\"],[\"worth the wait\", \"mvp / polydor\", \"1980\", \"usa\", \"linda greene\"],[\"sayin' something\", \"mvp / polydor\", \"1981\", \"usa\", \"linda greene\"],[\"remember\", \"the entertainment co / columbia\", \"1983\", \"usa\", \"linda greene\"],[\"colors of love\", \"imagen\", \"2009\", \"usa\", \"meritxell negre\"]]\nQuestion = Is it true that linda green is the peaches for the song sayn' something , relased in 1981?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    years = get_column_by_name(table_data, \"year of release\")\n    peaches = get_column_by_name(table_data, \"peaches :\")\n    for title, year, peach in zip(titles, years, peaches):\n        if title.lower() == \"sayin' something\" and year == \"1981\":\n            answer = equal_to(peach.lower(), \"linda greene\")\n            break \n    return answer\n\n### END"}
{"id": "bd39d08a-6a61-44cb-8593-f9b8b58313cf", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = comparison of e - book formats\ntable_data = [[\"format\", \"filename extension\", \"image support\", \"interactivity support\", \"word wrap support\", \"open standard\"],[\"djvu\", \"djvu\", \"yes\", \"no\", \"no\", \"yes\"],[\"epub (idpf)\", \"epub\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"fictionbook\", \"fb2\", \"yes\", \"no\", \"yes\", \"yes\"],[\"html\", \"html\", \"yes\", \"no\", \"yes\", \"yes\"],[\"kindle\", \"azw\", \"yes\", \"yes\", \"yes\", \"no\"],[\"microsoft reader\", \"lit\", \"yes\", \"no\", \"yes\", \"no\"],[\"mobipocket\", \"prc , mobi\", \"yes\", \"yes\", \"yes\", \"no\"],[\"multimedia ebook\", \"exe\", \"yes\", \"yes\", \"no\", \"yes\"],[\"newton book\", \"pkg\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ereader\", \"pdb\", \"yes\", \"no\", \"yes\", \"no\"],[\"plain text\", \"txt\", \"no\", \"no\", \"yes\", \"yes\"],[\"plucker\", \"pdb\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"portable document format\", \"pdf\", \"yes\", \"yes\", \"yes though not all readers implement support\", \"yes\"],[\"postscript\", \"ps\", \"yes\", \"no\", \"no\", \"yes\"],[\"tome raider\", \"tr2 , tr3\", \"yes\", \"no\", \"yes\", \"no\"],[\"openxps\", \"oxps , xps\", \"yes\", \"no\", \"no\", \"yes\"]]\nQuestion = Is it true that file extensions azw , prc and mobi doesn't have open standard but it does support both interactivity and word wrap?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    filename_extensions = get_column_by_name(table_data, \"filename extension\")\n    interactivity_supports = get_column_by_name(table_data, \"interactivity support\")\n    word_wrap_supports = get_column_by_name(table_data, \"word wrap support\")\n    open_standards = get_column_by_name(table_data, \"open standard\")\n    for filename_extension, interactivity_support, word_wrap_support, open_standard in zip(filename_extensions, interactivity_supports, word_wrap_supports, open_standards):\n        if \"azw\" in filename_extension.lower() or \"prc\" in filename_extension.lower() or \"mobi\" in filename_extension.lower():\n            if equal_to(interactivity_support, \"yes\") and equal_to(word_wrap_support, \"yes\") and equal_to(open_standard, \"no\"):\n                return True\n    return False\n\n### END"}
{"id": "8a212261-e96a-4ad8-b1b2-281ea082ff01", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = coppa italia\ntable_data = [[\"phase\", \"round\", \"clubs remaining\", \"clubs involved\", \"winners from previous round\", \"new entries this round\", \"leagues entering at this round\"],[\"first phase\", \"first round\", \"78\", \"36\", \"none\", \"36\", \"teams from lega pro and serie d\"],[\"first phase\", \"second round\", \"60\", \"40\", \"18\", \"22\", \"serie b\"],[\"first phase\", \"third round\", \"40\", \"32\", \"20\", \"12\", \"lowest - ranked serie a teams\"],[\"first phase\", \"fourth round\", \"24\", \"16\", \"16\", \"none\", \"none\"],[\"second phase\", \"round of 16\", \"16\", \"16\", \"8\", \"8\", \"highest - ranked serie a teams\"],[\"second phase\", \"quarter - finals\", \"8\", \"8\", \"8\", \"none\", \"none\"],[\"second phase\", \"semi - finals\", \"4\", \"4\", \"4\", \"none\", \"none\"],[\"second phase\", \"final\", \"2\", \"2\", \"2\", \"none\", \"none\"]]\nQuestion = Is it true that the fourth round of the first phase has 24 clubs remaining and no new leagues entering?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    phases = get_column_by_name(table_data, \"phase\")\n    rounds = get_column_by_name(table_data, \"round\")\n    clubs_remaining = get_column_by_name(table_data, \"clubs remaining\")\n    new_entries = get_column_by_name(table_data, \"new entries this round\")\n    leagues_entering = get_column_by_name(table_data, \"leagues entering at this round\")\n    for phase, round, clubs, new_entry, league in zip(phases, rounds, clubs_remaining, new_entries, leagues_entering):\n        if phase.lower() == \"first phase\" and round.lower() == \"fourth round\":\n            answer = equal_to(clubs, \"24\") and equal_to(new_entry, \"none\") and equal_to(league, \"none\")\n            break \n    return answer\n\n### END"}
{"id": "2fcfe6c4-5079-4f92-9d9b-9713e17c92e5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = jonathan cochet\ntable_data = [[\"season\", \"series\", \"team\", \"races\", \"wins\", \"fast laps\", \"points\", \"pos\"],[\"2001\", \"formula one\", \"prost\", \"test driver\", \"test driver\", \"test driver\", \"test driver\", \"test driver\"],[\"2001\", \"formula 3000 international\", \"gd racing\", \"4\", \"0\", \"0\", \"0\", \"nc\"],[\"2001\", \"world series by nissan\", \"gd racing\", \"6\", \"0\", \"1\", \"51\", \"9th\"],[\"2002\", \"world series by nissan\", \"gd racing\", \"6\", \"0\", \"0\", \"30\", \"13th\"],[\"2003\", \"world series by nissan\", \"gd racing\", \"2\", \"0\", \"0\", \"0\", \"nc\"],[\"2006\", \"formula one\", \"renault\", \"test driver\", \"test driver\", \"test driver\", \"test driver\", \"test driver\"],[\"200708\", \"a1 grand prix\", \"a1 team france\", \"2\", \"0\", \"0\", \"0\", \"4th\"]]\nQuestion = Is it true that a1 team france was in 4th position in the 2007 - 08 season and earned 0 points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    teams = get_column_by_name(table_data, \"team\")\n    points = get_column_by_name(table_data, \"points\")\n    positions = get_column_by_name(table_data, \"pos\")\n    for season, team, point, position in zip(seasons, teams, points, positions):\n        if season == \"200708\" and team.lower() == \"a1 team france\":\n            answer = equal_to(point, \"0\") and equal_to(position, \"4th\")\n            break \n    return answer\n\n### END"}
{"id": "96984e16-5d94-421f-a438-ed101448dad0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sinta ozoliņa - kovala\ntable_data = [[\"year\", \"competition\", \"venue\", \"position\", \"notes\"],[\"2005\", \"world youth championships\", \"marrakesh, morocco\", \"25th\", \"39.34 m\"],[\"2006\", \"world junior championships\", \"beijing, china\", \"6th\", \"56.38 m\"],[\"2007\", \"european junior championships\", \"hengelo, netherlands\", \"2nd\", \"57.01 m\"],[\"2008\", \"olympic games\", \"beijing, china\", \"11th\", \"53.38 m\"],[\"2010\", \"european championships\", \"barcelona, spain\", \"13th\", \"56.11 m\"]]\nQuestion = Is it true that the finish position in 2010 was the 13th?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    positions = get_column_by_name(table_data, \"position\")\n    for year, position in zip(years, positions):\n        if year == \"2010\":\n            answer = equal_to(position, \"13th\")\n            break \n    return answer\n\n### END"}
{"id": "c77d28b6-2b3f-4574-9b7e-04691ea3f100", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"position\", \"name\", \"played\", \"drawn\", \"lost\", \"points\"],[\"1\", \"tsv trostberg\", \"10\", \"1\", \"1\", \"17\"],[\"2\", \"esc riverrats geretsried\", \"10\", \"0\", \"3\", \"14\"],[\"3\", \"ersc ottobrunn\", \"10\", \"1\", \"4\", \"11\"],[\"4\", \"ec bad tãlz ii\", \"10\", \"0\", \"5\", \"10\"],[\"5\", \"ehc bad aibling\", \"10\", \"0\", \"7\", \"6\"],[\"6\", \"dec frillensee - inzell\", \"10\", \"0\", \"9\", \"2\"]]\nQuestion = Is it true that ersc ottobrunn played 10 , lost 4 , and had 11 points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    played = get_column_by_name(table_data, \"played\")\n    lost = get_column_by_name(table_data, \"lost\")\n    points = get_column_by_name(table_data, \"points\")\n    for name, play, lose, point in zip(names, played, lost, points):\n        if name.lower() == \"ersc ottobrunn\":\n            answer = equal_to(play, \"10\") and equal_to(lose, \"4\") and equal_to(point, \"11\")\n            break \n    return answer\n\n### END"}
{"id": "6bc38bc4-8b6b-452b-a9d6-08d19b4c9a77", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = jewelpet universe\ntable_data = [[\"name\",\"sweet\",\"species\",\"gender\",\"attribute\",\"birthday\",\"media debut\",\"voice actor\"],[\"sakuran ( さくらん )\",\"sakuramochi\",\"brown bear\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"rina hidaka\"],[\"melorina ( メロリーナ )\",\"melonpan\",\"poodle\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"asuka ōgame (sweets dance princess)\"],[\"eclan ( エクレン )\",\"eclair\",\"rex rabbit\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"chiwa saito (sweets dance princess)\"],[\"macaronia ( マカロニア )\",\"macaron\",\"holland lop\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"miyu matsuki (sweets dance princess)\"],[\"donadona ( ドナドナ )\",\"donut\",\"golden hamster\",\"male\",\"magical red\",\"unknown\",\"jps ep 38\",\"saki fujita (sweets dance princess)\"],[\"honey ( ハニー )\",\"honey waffles\",\"flying squirrel\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"megumi mukai (sweets dance princess)\"],[\"purinki ( プリンキー )\",\"crème caramel\",\"common squirrel monkey\",\"female\",\"magical green\",\"unknown\",\"jps ep 38\",\"mana matsufuji (sweets dance princess)\"],[\"chocolat ( ショコラ )\",\"chocolate ice cream\",\"asian black bear\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"marie miyake (sweets dance princess)\"],[\"maco ( マコ )\",\"macaron\",\"roborovski hamster\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"mako\"],[\"kaco ( カコ )\",\"macaron\",\"roborovski hamster\",\"male\",\"magical green\",\"unknown\",\"jps ep 38\",\"asuka ōgame\"],[\"roco ( ロコ )\",\"macaron\",\"roborovski hamster\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"marie miyake\"],[\"coron ( コロン )\",\"macaron\",\"roborovski hamster\",\"male\",\"magical red\",\"unknown\",\"jps ep 38\",\"saki fujita\"]]\nQuestion = Is it true that the media debut of the asian black bear was jps ep 38?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    species = get_column_by_name(table_data, \"species\")\n    media_debuts = get_column_by_name(table_data, \"media debut\")\n    for specie, media_debut in zip(species, media_debuts):\n        if \"asian black bear\" in specie.lower():\n            answer = media_debut.lower() == \"jps ep 38\"\n            break\n    return answer\n\n### END"}
{"id": "c81961f6-c5a6-4872-a09f-10b699dfb2d3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = cultural interest fraternities and sororities\ntable_data = [[\"letters\", \"organization\", \"nickname\", \"founding date\", \"founding university\", \"type\"],[\"δλφ\", \"delta lambda phi\", \"dlp , deltas' , or lambda men\", \"1986 - 10 - 15\", \"washington , dc\", \"fraternity\"],[\"κψκ\", \"kappa psi kappa\", \"canes , k - psis , diamonds , or angels\", \"2001 - 08 - 17\", \"tallahassee , florida\", \"fraternity\"],[\"οεπ\", \"omicron epsilon pi\", \"the epps\", \"2000 - 12 - 07\", \"tallahassee , florida\", \"sorority\"],[\"γρλ\", \"gamma rho lambda 1\", \"grl\", \"2003 - 08 - 25\", \"tempe , arizona\", \"sorority\"],[\"αλζ\", \"alpha lambda zeta\", \"the regal alphas\", \"2006 - 01 - 09\", \"houston , texas and atlanta , georgia\", \"fraternity\"],[\"καλ\", \"kappa alpha lambda\", \"the kappas\", \"2003 - 10 - 19\", \"clark atlanta university\", \"sorority\"],[\"φαν\", \"phi alpha nu\", \"phi - nomenal gentlewomen\", \"2006 - 07 - 30\", \"charlotte , nc\", \"fraternity\"]]\nQuestion = Is it true that the organization kappa psi kappa has a founding date of 2006 - 07 - 30?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    organizations = get_column_by_name(table_data, \"organization\")\n    founding_dates = get_column_by_name(table_data, \"founding date\")\n    for organization, founding_date in zip(organizations, founding_dates):\n        if organization.lower() == \"kappa psi kappa\":\n            answer = equal_to(founding_date, \"2006 - 07 - 30\")\n            break \n    return answer\n\n### END"}
{"id": "0ac54ee1-0923-4d2d-b352-536004eb87b9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states house of representatives elections , 1984\ntable_data = [[\"district\",\"incumbent\",\"party\",\"first elected\",\"result\",\"candidates\"],[\"florida 1\",\"earl dewitt hutto\",\"democratic\",\"1978\",\"re - elected\",\"earl dewitt hutto (d) unopposed\"],[\"florida 2\",\"don fuqua\",\"democratic\",\"1962\",\"re - elected\",\"don fuqua (d) unopposed\"],[\"florida 3\",\"charles edward bennett\",\"democratic\",\"1948\",\"re - elected\",\"charles edward bennett (d) unopposed\"],[\"florida 5\",\"bill mccollum\",\"republican\",\"1980\",\"re - elected\",\"bill mccollum (r) unopposed\"],[\"florida 6\",\"buddy mackay\",\"democratic\",\"1982\",\"re - elected\",\"buddy mackay (d) 99.3% others 0.7%\"],[\"florida 8\",\"bill young\",\"republican\",\"1970\",\"re - elected\",\"bill young (r) 80.3% robert kent (d) 19.7%\"],[\"florida 9\",\"michael bilirakis\",\"republican\",\"1982\",\"re - elected\",\"michael bilirakis (r) 78.6% jack wilson (d) 21.4%\"],[\"florida 10\",\"andy ireland\",\"republican\",\"1976\",\"re - elected\",\"andy ireland (r) 61.9% patricia m glass (d) 38.1%\"],[\"florida 11\",\"bill nelson\",\"democratic\",\"1978\",\"re - elected\",\"bill nelson (d) 60.5% rob quartel (r) 39.5%\"],[\"florida 12\",\"tom lewis\",\"republican\",\"1982\",\"re - elected\",\"tom lewis (r) unopposed\"],[\"florida 13\",\"connie mack\",\"republican\",\"1982\",\"re - elected\",\"connie mack (r) unopposed\"],[\"florida 14\",\"dan mica\",\"democratic\",\"1978\",\"re - elected\",\"dan mica (d) 55.4% don ross (r) 44.6%\"],[\"florida 16\",\"lawrence j smith\",\"democratic\",\"1982\",\"re - elected\",\"lawrence j smith (d) 56.4% tom bush (r) 43.6%\"],[\"florida 17\",\"william lehman\",\"democratic\",\"1972\",\"re - elected\",\"william lehman (d) unopposed\"],[\"florida 18\",\"claude pepper\",\"democratic\",\"1962\",\"re - elected\",\"claude pepper (d) 60.5% ricardo nunez (r) 39.5%\"]]\nQuestion = Is it true that florida 18 elected a new congressman?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    districts = get_column_by_name(table_data, \"district\")\n    results = get_column_by_name(table_data, \"result\")\n    for district, result in zip(districts, results):\n        if equal_to(district, \"florida 18\"):\n            answer = not equal_to(result, \"re - elected\")\n            break\n    return answer\n\n### END"}
{"id": "88c6054f-4044-4a31-9ad1-d893a986345d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = bcs national championship game\ntable_data = [[\"year\", \"network (s)\", \"bowl\", \"play - by - play announcer\", \"color analyst (s)\", \"sideline reporter (s)\", \"studio host (s)\", \"studio analyst (s)\", \"tv rating\"],[\"1999\", \"abc\", \"fiesta bowl\", \"keith jackson\", \"bob griese\", \"lynn swann\", \"john saunders\", \"todd blackledge\", \"17.2\"],[\"2000\", \"abc\", \"sugar bowl\", \"brent musburger\", \"gary danielson\", \"lynn swann and jack arute\", \"john saunders\", \"terry bowden\", \"17.5\"],[\"2001\", \"abc\", \"orange bowl\", \"brad nessler\", \"bob griese\", \"lynn swann and jack arute\", \"john saunders\", \"terry bowden\", \"17.8\"],[\"2002\", \"abc\", \"rose bowl\", \"keith jackson\", \"tim brant\", \"lynn swann and todd harris\", \"john saunders\", \"terry bowden\", \"13.9\"],[\"2003\", \"abc\", \"fiesta bowl\", \"keith jackson\", \"dan fouts\", \"lynn swann and todd harris\", \"john saunders\", \"terry bowden\", \"17.2\"],[\"2004\", \"abc\", \"sugar bowl\", \"brent musburger\", \"gary danielson\", \"lynn swann and jack arute\", \"john saunders\", \"terry bowden and craig james\", \"14.5\"],[\"2005\", \"abc\", \"orange bowl\", \"brad nessler\", \"bob griese\", \"lynn swann and todd harris\", \"john saunders\", \"craig james and aaron taylor\", \"13.7\"],[\"2006\", \"abc\", \"rose bowl\", \"keith jackson\", \"dan fouts\", \"todd harris and holly rowe\", \"john saunders\", \"craig james and aaron taylor\", \"21.7\"],[\"2007\", \"fox\", \"2007 bcs national championship game\", \"thom brennaman\", \"barry alvarez and charles davis\", \"chris myers\", \"chris rose\", \"eddie george , emmitt smith and jimmy johnson\", \"17.4\"],[\"2008\", \"fox\", \"2008 bcs national championship game\", \"thom brennaman\", \"charles davis\", \"chris myers\", \"chris rose\", \"eddie george , urban meyer and jimmy johnson\", \"17.4\"],[\"2009\", \"fox\", \"2009 bcs national championship game\", \"thom brennaman\", \"charles davis\", \"chris myers\", \"chris rose\", \"eddie george , barry switzer and jimmy johnson\", \"15.8\"],[\"2011\", \"espn espn 3d\", \"2011 bcs national championship game\", \"brent musburger\", \"kirk herbstreit\", \"erin andrews and tom rinaldi\", \"chris fowler\", \"desmond howard , urban meyer and nick saban\", \"16.1\"],[\"2012\", \"espn\", \"2012 bcs national championship game\", \"brent musburger\", \"kirk herbstreit\", \"erin andrews and tom rinaldi\", \"chris fowler\", \"lee corso , gene chizik and chip kelly\", \"14.0\"],[\"2013\", \"espn\", \"2013 bcs national championship game\", \"brent musburger\", \"kirk herbstreit\", \"heather cox and tom rinaldi\", \"chris fowler\", \"urban meyer and desmond howard\", \"17.5\"]]\nQuestion = Is it true that the number of bowl games for lee corso , gene chizik an chip kelly is one?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(lst, string):\n    return lst.count(string)\n\ndef solution(table_data):\n    studio_analysts = get_column_by_name(table_data, \"studio analyst (s)\")\n    count = count_occurrences(studio_analysts, \"lee corso , gene chizik and chip kelly\")\n    return count == 1\n\n### END"}
{"id": "0da7cf4e-90fe-4b16-a6ff-017af4c245f6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2005 new orleans saints season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"venue\", \"attendance\"],[\"1\", \"september 11 , 2005\", \"carolina panthers\", \"w 23 - 20\", \"bank of america stadium\", \"72920\"],[\"2\", \"september 19 , 2005\", \"new york giants\", \"l 27 - 10\", \"giants stadium (home game)\", \"68031\"],[\"3\", \"september 25 , 2005\", \"minnesota vikings\", \"l 33 - 16\", \"hubert h humphrey metrodome\", \"63952\"],[\"4\", \"october 2 , 2005\", \"buffalo bills\", \"w 19 - 7\", \"alamodome (home game)\", \"58688\"],[\"5\", \"october 9 , 2005\", \"green bay packers\", \"l 52 - 3\", \"lambeau field\", \"70580\"],[\"6\", \"october 16 , 2005\", \"atlanta falcons\", \"l 34 - 31\", \"alamodome (home game)\", \"65562\"],[\"7\", \"october 23 , 2005\", \"st louis rams\", \"l 28 - 17\", \"edward jones dome\", \"64586\"],[\"8\", \"october 30 , 2005\", \"miami dolphins\", \"l 21 - 6\", \"tiger stadium (home game)\", \"61643\"],[\"9\", \"november 6 , 2005\", \"chicago bears\", \"l 20 - 17\", \"tiger stadium (home game)\", \"32637\"],[\"10\", \"-\", \"-\", \"-\", \"-\", \"\"],[\"11\", \"november 20 , 2005\", \"new england patriots\", \"l 24 - 17\", \"gillette stadium\", \"68756\"],[\"12\", \"november 27 , 2005\", \"new york jets\", \"w 21 - 19\", \"the meadowlands\", \"77152\"],[\"13\", \"december 4 , 2005\", \"tampa bay buccaneers\", \"l 10 - 3\", \"tiger stadium (home game)\", \"34411\"],[\"14\", \"december 12 , 2005\", \"atlanta falcons\", \"l 36 - 17\", \"georgia dome\", \"70083\"],[\"15\", \"december 18 , 2005\", \"carolina panthers\", \"l 27 - 10\", \"tiger stadium (home game)\", \"32551\"],[\"16\", \"december 24 , 2005\", \"detroit lions\", \"l 13 - 12\", \"alamodome (home game)\", \"63747\"],[\"17\", \"january 1 , 2006\", \"tampa bay buccaneers\", \"l 27 - 13\", \"raymond james stadium\", \"65379\"]]\nQuestion = Is it true that the date of week 7 is october 23 , 2005?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    dates = get_column_by_name(table_data, \"date\")\n    for week, date in zip(weeks, dates):\n        if week == \"7\":\n            answer = equal_to(date, \"october 23 , 2005\")\n            break \n    return answer\n\n### END"}
{"id": "f930bc2c-ef6d-40a7-bc6e-09af3aebe0dc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1993 tampa bay buccaneers season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"kickoff\", \"game site\", \"attendance\", \"record\"],[\"1\", \"september 5 , 1993\", \"kansas city chiefs\", \"l 27 - 3\", \"1:00\", \"tampa stadium\", \"63378\", \"0 - 1\"],[\"2\", \"september 12 , 1993\", \"new york giants\", \"l 23 - 7\", \"1:00\", \"giants stadium\", \"75891\", \"0 - 2\"],[\"4\", \"september 26 , 1993\", \"chicago bears\", \"l 47 - 17\", \"1:00\", \"soldier field\", \"58329\", \"0 - 3\"],[\"5\", \"october 3 , 1993\", \"detroit lions\", \"w 27 - 10\", \"1:00\", \"tampa stadium\", \"40794\", \"1 - 3\"],[\"6\", \"october 10 , 1993\", \"minnesota vikings\", \"l 15 - 0\", \"1:00\", \"hubert h humphrey metrodome\", \"54215\", \"1 - 4\"],[\"8\", \"october 24 , 1993\", \"green bay packers\", \"l 37 - 14\", \"1:00\", \"tampa stadium\", \"47354\", \"1 - 5\"],[\"9\", \"october 31 , 1993\", \"atlanta falcons\", \"w 31 - 24\", \"1:00\", \"georgia dome\", \"50647\", \"2 - 5\"],[\"10\", \"november 7 , 1993\", \"detroit lions\", \"l 23 - 0\", \"1:00\", \"pontiac silverdome\", \"65295\", \"2 - 6\"],[\"11\", \"november 14 , 1993\", \"san francisco 49ers\", \"l 45 - 21\", \"1:00\", \"tampa stadium\", \"43835\", \"2 - 7\"],[\"12\", \"november 21 , 1993\", \"minnesota vikings\", \"w 23 - 10\", \"8:00\", \"tampa stadium\", \"40848\", \"3 - 7\"],[\"13\", \"november 28 , 1993\", \"green bay packers\", \"l 13 - 10\", \"1:00\", \"lambeau field\", \"56995\", \"3 - 8\"],[\"14\", \"december 5 , 1993\", \"washington redskins\", \"l 23 - 17\", \"1:00\", \"tampa stadium\", \"49035\", \"3 - 9\"],[\"15\", \"december 12 , 1993\", \"chicago bears\", \"w 13 - 10\", \"1:00\", \"tampa stadium\", \"56667\", \"4 - 9\"],[\"16\", \"december 19 , 1993\", \"los angeles raiders\", \"l 27 - 20\", \"4:00\", \"los angeles memorial coliseum\", \"40532\", \"4 - 10\"],[\"17\", \"december 26 , 1993\", \"denver broncos\", \"w 17 - 10\", \"4:00\", \"mile high stadium\", \"73434\", \"5 - 10\"],[\"18\", \"january 2 , 1994\", \"san diego chargers\", \"l 32 - 17\", \"4:00\", \"tampa stadium\", \"35587\", \"5 - 11\"]]\nQuestion = Is it true that week 18 was when the san diego charges played a game at tampa stadium?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    game_sites = get_column_by_name(table_data, \"game site\")\n    answer = False\n    for week, opponent, game_site in zip(weeks, opponents, game_sites):\n        if week == \"18\" and opponent.lower() == \"san diego chargers\" and game_site.lower() == \"tampa stadium\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "c6e168a2-5caa-41e1-bca2-624be4d322e1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 issf world cup final (rifle and pistol)\ntable_data = [[\"shooter\", \"event\", \"rank points\", \"score points\", \"total\"],[\"zhu qinan ( chn )\", \"wcf 2007\", \"defending champion\", \"defending champion\", \"defending champion\"],[\"abhinav bindra ( ind )\", \"og beijing\", \"olympic gold medalist\", \"olympic gold medalist\", \"olympic gold medalist\"],[\"henri häkkinen ( fin )\", \"og beijing\", \"olympic bronze medalist\", \"olympic bronze medalist\", \"olympic bronze medalist\"],[\"alin george moldoveanu ( rou )\", \"wc munich\", \"15\", \"14\", \"29\"],[\"péter sidi ( hun )\", \"wc rio de janeiro\", \"15\", \"13\", \"28\"],[\"matthew emmons ( usa )\", \"wc beijing\", \"10\", \"14\", \"24\"],[\"cao yifei ( chn )\", \"wc milan\", \"10\", \"11\", \"21\"],[\"gagan narang ( ind )\", \"wc beijing\", \"8\", \"12\", \"20\"],[\"thomas farnik ( aut )\", \"wc munich\", \"8\", \"12\", \"20\"],[\"nemanja mirosavljev ( srb )\", \"wc rio de janeiro\", \"8\", \"11\", \"19\"],[\"artur ayvazyan ( ukr )\", \"wc milan\", \"5\", \"12\", \"17\"]]\nQuestion = Is it true that an olympic gold medalist is listed as both having the rank and score points when the shooter was abhinav bindra (ind)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    shooters = get_column_by_name(table_data, \"shooter\")\n    rank_points = get_column_by_name(table_data, \"rank points\")\n    score_points = get_column_by_name(table_data, \"score points\")\n    for shooter, rank_point, score_point in zip(shooters, rank_points, score_points):\n        if equal_to(shooter, \"abhinav bindra ( ind )\") and equal_to(rank_point, \"olympic gold medalist\") and equal_to(score_point, \"olympic gold medalist\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "c0715813-8dd3-4831-93f5-b2154378acaa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of tvb series (2007)\ntable_data = [[\"rank\",\"english title\",\"chinese title\",\"average\",\"peak\",\"premiere\",\"finale\",\"hk viewers\"],[\"1\",\"the family link\",\"師奶兵團\",\"33\",\"42\",\"31\",\"33\",\"2.12 million\"],[\"2\",\"fathers and sons\",\"爸爸閉翳\",\"32\",\"40\",\"31\",\"37\",\"2.11 million\"],[\"3\",\"heart of greed\",\"溏心風暴\",\"32\",\"48\",\"29\",\"40\",\"2.08 million\"],[\"4\",\"ten brothers\",\"十兄弟\",\"32\",\"39\",\"29\",\"36\",\"2.05 million\"],[\"5\",\"on the first beat\",\"學警出更\",\"31\",\"38\",\"30\",\"35\",\"2.03 million\"],[\"6\",\"the green grass of home\",\"緣來自有機\",\"31\",\"36\",\"29\",\"33\",\"2.01 million\"],[\"7\",\"dicey business\",\"賭場風雲\",\"31\",\"37\",\"30\",\"34\",\"1.99 million\"],[\"8\",\"steps\",\"舞動全城\",\"31\",\"36\",\"31\",\"32\",\"1.98 million\"],[\"9\",\"the drive of life\",\"歲月風雲\",\"30\",\"39\",\"31\",\"33\",\"1.97 million\"]]\nQuestion = Is it true that the show with a chinese title of 緣來自有機 had a rank of 6?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    chinese_titles = get_column_by_name(table_data, \"chinese title\")\n    for rank, chinese_title in zip(ranks, chinese_titles):\n        if chinese_title == \"緣來自有機\":\n            answer = equal_to(rank, \"6\")\n            break \n    return answer\n\n### END"}
{"id": "a7268d95-bce7-4664-ae37-15883d57a62d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 miller superbike world championship round\ntable_data = [[\"rider\", \"bike\", \"laps\", \"time\", \"grid\"],[\"carlos checa\", \"honda cbr1000rr\", \"20\", \"37:04.991\", \"1\"],[\"troy corser\", \"yamaha yzf - r1\", \"20\", \"+ 2.809\", \"5\"],[\"michel fabrizio\", \"ducati 1098 f08\", \"20\", \"+ 6.546\", \"4\"],[\"max neukirchner\", \"suzuki gsx - r1000\", \"20\", \"+ 7.764\", \"2\"],[\"fonsi nieto\", \"suzuki gsx - r1000\", \"20\", \"+ 16.475\", \"13\"],[\"jakub smrz\", \"ducati 1098 rs 08\", \"20\", \"+ 17.126\", \"11\"],[\"karl muggeridge\", \"honda cbr1000rr\", \"20\", \"+ 17.284\", \"12\"],[\"yukio kagayama\", \"suzuki gsx - r1000\", \"20\", \"+ 17.416\", \"8\"],[\"max biaggi\", \"ducati 1098 rs 08\", \"20\", \"+ 18.117\", \"9\"],[\"ryuichi kiyonari\", \"honda cbr1000rr\", \"20\", \"+ 20.467\", \"20\"],[\"lorenzo lanzi\", \"ducati 1098 rs 08\", \"20\", \"+ 21.742\", \"15\"],[\"kenan sofuoğlu\", \"honda cbr1000rr\", \"20\", \"+ 27.533\", \"25\"],[\"gregorio lavilla\", \"honda cbr1000rr\", \"20\", \"+ 32.609\", \"23\"],[\"ruben xaus\", \"ducati 1098 rs 08\", \"20\", \"+ 33.165\", \"6\"],[\"russell holland\", \"honda cbr1000rr\", \"20\", \"+ 34.182\", \"17\"],[\"shinichi nakatomi\", \"yamaha yzf - r1\", \"20\", \"+ 34.500\", \"22\"],[\"ayrton badovini\", \"kawasaki zx - 10r\", \"20\", \"+ 36.155\", \"16\"],[\"sébastien gimbert\", \"yamaha yzf - r1\", \"20\", \"+ 41.685\", \"24\"],[\"makoto tamada\", \"kawasaki zx - 10r\", \"20\", \"+ 43.579\", \"18\"],[\"roberto rolfo\", \"honda cbr1000rr\", \"20\", \"+ 54.195\", \"28\"],[\"jason pridmore\", \"honda cbr1000rr\", \"20\", \"+ 1:00.388\", \"19\"],[\"vittorio iannuzzo\", \"kawasaki zx - 10r\", \"20\", \"+ 1:02.104\", \"21\"],[\"scott jensen\", \"suzuki gsx - r1000 k8\", \"20\", \"+ 1:09.953\", \"29\"],[\"loic napoleone\", \"yamaha yzf - r1\", \"20\", \"+ 1:12.258\", \"27\"],[\"shuhei aoyama\", \"honda cbr1000rr\", \"14\", \"retirement\", \"14\"],[\"david checa\", \"yamaha yzf - r1\", \"6\", \"retirement\", \"26\"],[\"noriyuki haga\", \"yamaha yzf - r1\", \"5\", \"accident\", \"10\"],[\"troy bayliss\", \"ducati 1098 f08\", \"4\", \"accident\", \"3\"],[\"régis laconi\", \"kawasaki zx - 10r\", \"4\", \"retirement\", \"7\"]]\nQuestion = Is it true that the most laps completed before a retirement is 6?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    laps = get_column_by_name(table_data, \"laps\")\n    time = get_column_by_name(table_data, \"time\")\n    max_laps_before_retirement = 0\n    for lap, t in zip(laps, time):\n        if \"retirement\" in t.lower():\n            if int(lap) > max_laps_before_retirement:\n                max_laps_before_retirement = int(lap)\n    answer = equal_to(max_laps_before_retirement, 6)\n    return answer\n\n### END"}
{"id": "b3cfc838-0f64-4877-a242-30fe3d90e23e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1950 world figure skating championships\ntable_data = [[\"rank\", \"name\", \"nation\", \"placings\", \"total\"],[\"1\", \"karol kennedy / peter kennedy\", \"united states\", \"15\", \"96.07\"],[\"2\", \"jennifer nicks / john nicks\", \"united kingdom\", \"28.5\", \"92.70\"],[\"3\", \"marianne nagy / lászló nagy\", \"hungary\", \"32\", \"92.25\"],[\"4\", \"elianne steineman / andré calamé\", \"switzerland\", \"44.5\", \"90.00\"],[\"5\", \"suzanne gheldorf / jacques rénard\", \"belgium\", \"48.5\", \"89.43\"],[\"6\", \"elly stärck / harry gareis\", \"austria\", \"61\", \"88.08\"],[\"7\", \"marlene smith / donald gilchrist\", \"canada\", \"63\", \"87.07\"],[\"8\", \"joan waterhouse / gordon holloway\", \"united kingdom\", \"62\", \"88.31\"],[\"9\", \"liliane de becker / edmund verbustel\", \"belgium\", \"64\", \"88.42\"],[\"10\", \"irene maguire / walter muehlbronner\", \"united states\", \"82\", \"84.26\"],[\"11\", \"sybil cooke / bob hudson\", \"united kingdom\", \"93.5\", \"83.47\"],[\"12\", \"denise favart / jacques favart\", \"france\", \"108\", \"77.73\"]]\nQuestion = Is it true that the total for switzerland is 90?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    nations = get_column_by_name(table_data, \"nation\")\n    totals = get_column_by_name(table_data, \"total\")\n    for nation, total in zip(nations, totals):\n        if nation.lower() == \"switzerland\":\n            answer = equal_to(float(total), 90)\n            break \n    return answer\n\n### END"}
{"id": "b4b8fad4-deb4-4e9c-aabc-0093f17c1c56", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1971 nhl amateur draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"15\", \"ken baird\", \"defence\", \"canada\", \"california golden seals\", \"flin flon bombers (wchl)\"],[\"16\", \"henry boucha\", \"centre\", \"united states\", \"detroit red wings\", \"us national development team\"],[\"17\", \"bobby lalonde\", \"centre\", \"canada\", \"vancouver canucks\", \"montreal junior canadiens (oha)\"],[\"18\", \"brian mckenzie\", \"left wing\", \"canada\", \"pittsburgh penguins\", \"st catharines black hawks (oha)\"],[\"19\", \"craig ramsay\", \"left wing\", \"canada\", \"buffalo sabres\", \"peterborough petes (oha)\"],[\"20\", \"larry robinson\", \"defence\", \"canada\", \"montreal canadiens\", \"kitchener rangers (oha)\"],[\"21\", \"rod norrish\", \"left wing\", \"canada\", \"minnesota north stars\", \"regina pats (wchl)\"],[\"22\", \"rick kehoe\", \"right wing\", \"canada\", \"toronto maple leafs\", \"hamilton red wings (oha)\"],[\"23\", \"dave fortier\", \"defence\", \"canada\", \"toronto maple leafs\", \"st catharines black hawks (oha)\"],[\"24\", \"michel deguise\", \"goaltender\", \"canada\", \"montreal canadiens\", \"sorel eperviers (qmjhl)\"],[\"25\", \"terry french\", \"centre\", \"canada\", \"montreal canadiens\", \"ottawa 67 's (oha)\"],[\"26\", \"dave kryskow\", \"left wing\", \"canada\", \"chicago black hawks\", \"edmonton oil kings (wchl)\"],[\"27\", \"tom williams\", \"left wing\", \"canada\", \"new york rangers\", \"hamilton red wings (oha)\"],[\"28\", \"curt ridley\", \"goaltender\", \"canada\", \"boston bruins\", \"portage terriers (mjhl)\"]]\nQuestion = Is it true that the player picked by the new york rangers was tom williams?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    nhl_teams = get_column_by_name(table_data, \"nhl team\")\n    players = get_column_by_name(table_data, \"player\")\n    answer = False\n    for nhl_team, player in zip(nhl_teams, players):\n        if \"new york rangers\" in nhl_team.lower() and \"tom williams\" in player.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "4019b632-01d7-4def-b4d4-3b5d70de8db1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1926 grand prix season\ntable_data = [[\"name\", \"circuit\", \"date\", \"winning drivers\", \"winning constructor\", \"report\"],[\"indianapolis 500\", \"indianapolis\", \"31 may\", \"frank lockhart\", \"miller\", \"report\"],[\"french grand prix\", \"miramas\", \"27 june\", \"jules goux\", \"bugatti\", \"report\"],[\"san sebastián grand prix / european grand prix\", \"lasarte\", \"18 july\", \"jules goux\", \"bugatti\", \"report\"],[\"british grand prix\", \"brooklands\", \"7 august\", \"robert sénéchal louis wagner\", \"delage\", \"report\"],[\"italian grand prix\", \"monza\", \"5 september\", \"louis charavel\", \"bugatti\", \"report\"]]\nQuestion = Is it true that on 31 may , delage was the winning constructor for the brooklands circuit , at the british grand prix race?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    circuits = get_column_by_name(table_data, \"circuit\")\n    constructors = get_column_by_name(table_data, \"winning constructor\")\n    races = get_column_by_name(table_data, \"name\")\n    for date, circuit, constructor, race in zip(dates, circuits, constructors, races):\n        if date == \"31 may\" and circuit == \"brooklands\" and race == \"british grand prix\" and constructor == \"delage\":\n            return True\n    return False\n\n### END"}
{"id": "f27e095b-880a-457d-929b-27035d6802fa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2011 the dominion tankard\ntable_data = [[\"skip (club)\", \"w\", \"l\", \"pf\", \"pa\", \"ends won\", \"ends lost\", \"blank ends\", \"stolen ends\"],[\"peter corner (brampton)\", \"8\", \"2\", \"69\", \"54\", \"41\", \"36\", \"8\", \"11\"],[\"glenn howard (coldwater)\", \"8\", \"2\", \"79\", \"35\", \"40\", \"22\", \"8\", \"11\"],[\"greg balsdon (loonie)\", \"7\", \"3\", \"80\", \"57\", \"46\", \"37\", \"5\", \"12\"],[\"john epping (donalda)\", \"7\", \"3\", \"76\", \"64\", \"43\", \"41\", \"5\", \"10\"],[\"mark bice (sarnia)\", \"6\", \"4\", \"70\", \"76\", \"45\", \"44\", \"8\", \"7\"],[\"chris gardner (renfrew)\", \"5\", \"5\", \"73\", \"72\", \"47\", \"41\", \"7\", \"16\"],[\"dale matchett (bradford)\", \"4\", \"6\", \"57\", \"75\", \"35\", \"42\", \"7\", \"7\"],[\"mark kean (annandale)\", \"3\", \"7\", \"53\", \"67\", \"43\", \"35\", \"12\", \"8\"],[\"howard rajala (rideau)\", \"3\", \"7\", \"67\", \"71\", \"43\", \"48\", \"5\", \"9\"],[\"nick rizzo (brantford)\", \"3\", \"7\", \"56\", \"74\", \"35\", \"42\", \"4\", \"5\"]]\nQuestion = Is it true that when pa is more than 73 , the pf is 72?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef greater_than(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    pf_values = get_column_by_name(table_data, \"pf\")\n    pa_values = get_column_by_name(table_data, \"pa\")\n    answer = False\n    for pf, pa in zip(pf_values, pa_values):\n        if greater_than(int(pa), 73) and equal_to(int(pf), 72):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "00f82ba2-be4d-414e-ac1a-d7aa1f93ef6f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = algeria at the 2008 summer olympics\ntable_data = [[\"athlete\", \"event\", \"round of 32\", \"round of 16\", \"quarterfinals\", \"semifinals\"],[\"abdelhalim ouradi\", \"bantamweight\", \"nevin ( irl ) l 4 - 9\", \"did not advance\", \"did not advance\", \"did not advance\"],[\"abdelkader chadi\", \"featherweight\", \"bye\", \"adi ( tha ) w 7 - 6\", \"kılıç ( tur ) l 6 - 13\", \"did not advance\"],[\"hamza kramou\", \"lightweight\", \"ugás ( cub ) l 3 - 21\", \"did not advance\", \"did not advance\", \"did not advance\"],[\"nabil kassel\", \"middleweight\", \"bye\", \"sutherland ( irl ) l 14 - 21\", \"did not advance\", \"did not advance\"],[\"abdelhafid benchebla\", \"light heavyweight\", \"kumar ( ind ) w 23 - 3\", \"yasser ( egy ) w 13 - 6\", \"zhang xp ( chn ) l 7 - 12\", \"did not advance\"],[\"abdelaziz touilbini\", \"heavyweight\", \"n / a\", \"wilder ( usa ) l 4 - 10\", \"did not advance\", \"did not advance\"]]\nQuestion = Is it true that hamza kramou did not advance to the semifinals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    athletes = get_column_by_name(table_data, \"athlete\")\n    semifinals = get_column_by_name(table_data, \"semifinals\")\n    for athlete, semifinal in zip(athletes, semifinals):\n        if athlete.lower() == \"hamza kramou\":\n            answer = equal_to(semifinal, \"did not advance\")\n            break \n    return answer\n\n### END"}
{"id": "f61d5f04-6838-4f2a-b339-51611a926383", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"season\", \"record\", \"pct\", \"games\", \"attendance\", \"average\", \"sellouts\"],[\"2011 - 12\", \"13 - 3\", \"813\", \"16\", \"162474\", \"10155\", \"10\"],[\"2010 - 11\", \"15 - 1\", \"933\", \"16\", \"151475\", \"10098\", \"9\"],[\"2009 - 10\", \"15 - 0\", \"1.000\", \"15\", \"151843\", \"10123\", \"7\"],[\"2008 - 09\", \"14 - 1\", \"933\", \"15\", \"151456\", \"10097\", \"11\"],[\"2007 - 08\", \"16 - 1\", \"941\", \"17\", \"170133\", \"10008\", \"9\"],[\"2006 - 07\", \"14 - 1\", \"933\", \"15\", \"148650\", \"9910\", \"5\"],[\"2005 - 06\", \"11 - 4\", \"733\", \"15\", \"146615\", \"9775\", \"4\"],[\"2004 - 05\", \"12 - 4\", \"750\", \"16\", \"160429\", \"10027\", \"7\"],[\"2003 - 04\", \"13 - 3\", \"813\", \"16\", \"158432\", \"9902\", \"8\"],[\"2002 - 03\", \"14 - 1\", \"933\", \"15\", \"152714\", \"10181\", \"14\"],[\"2001 - 02\", \"13 - 1\", \"929\", \"14\", \"143129\", \"10224\", \"13\"],[\"2000 - 01\", \"13 - 1\", \"929\", \"14\", \"141011\", \"10072\", \"12\"]]\nQuestion = Is it true that during the 2011 - 12 season , there were 10 sellouts , and the attendance was 162474 while the average was 10155?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    sellouts = get_column_by_name(table_data, \"sellouts\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    averages = get_column_by_name(table_data, \"average\")\n    for season, sellout, attendance, average in zip(seasons, sellouts, attendances, averages):\n        if season == \"2011 - 12\":\n            answer = equal_to(sellout, \"10\") and equal_to(attendance, \"162474\") and equal_to(average, \"10155\")\n            break \n    return answer\n\n### END"}
{"id": "a8ca4f00-049b-40d0-9832-2deafa677477", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"singular abbreviation\", \"singular word\", \"plural abbreviation\", \"plural word\", \"discipline\"],[\"d\", \"didot\", \"dd\", \"didots\", \"typography\"],[\"f\", \"following line or page\", \"ff\", \"following lines or pages\", \"notes\"],[\"f\", \"folio\", \"ff\", \"folios\", \"literature\"],[\"h\", \"hand\", \"hh\", \"hands\", \"horse height\"],[\"l\", \"line\", \"ll\", \"lines\", \"notes\"],[\"ms\", \"manuscript\", \"mss\", \"manuscripts\", \"notes\"],[\"op\", \"opus\", \"opp\", \"opera\", \"notes\"],[\"p\", \"page\", \"pp\", \"pages\", \"notes\"],[\"q\", \"quarto\", \"qq\", \"quartos\", \"literature\"],[\"s (or §)\", \"section\", \"ss (or §§)\", \"sections\", \"notes\"],[\"v\", \"volume\", \"vv\", \"volumes\", \"notes\"]]\nQuestion = Is it true that a singular abbreviation of m is used for the singular word manuscript?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    singular_abbreviations = get_column_by_name(table_data, \"singular abbreviation\")\n    singular_words = get_column_by_name(table_data, \"singular word\")\n    for singular_abbreviation, singular_word in zip(singular_abbreviations, singular_words):\n        if singular_word.lower() == \"manuscript\":\n            answer = equal_to(singular_abbreviation, \"m\")\n            break \n    return answer\n\n### END"}
{"id": "734f6e9a-7bcd-4834-a840-dfa6f496ec82", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = türk telekom arena\ntable_data = [[\"project\", \"year\", \"location\", \"capacity\", \"suites\", \"architect\", \"cost\"],[\"faruk süren project\", \"1997 - 2001\", \"mecidiyeköy\", \"40482\", \"125 + 72 boxes without outside seating\", \"bbb architects\", \"118.5 million ( in 2014 dollars)\"],[\"mehmet cansun project\", \"2001\", \"mecidiyeköy\", \"35000\", \"132\", \"gs member architecture group\", \"35 million ( in 2014 dollars)\"],[\"özhan canaydın : back to süren 's project\", \"2002 - 2005\", \"aslantepe\", \"40482\", \"125\", \"bbb architects\", \"90 million ( in 2014 dollars)\"],[\"eren talu bidding project\", \"2007\", \"aslantepe\", \"52000\", \"150\", \"populous\", \"n / a\"],[\"özhan canaydın project\", \"2007\", \"aslantepe\", \"52652\", \"157\", \"asp stuttgart\", \"250 million ( in 2014 dollars)\"]]\nQuestion = Is it true that the capacity for 150 suites is 52000?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    capacities = get_column_by_name(table_data, \"capacity\")\n    suites = get_column_by_name(table_data, \"suites\")\n    for capacity, suite in zip(capacities, suites):\n        if suite == \"150\":\n            answer = equal_to(capacity, \"52000\")\n            break \n    return answer\n\n### END"}
{"id": "c25f3bb2-153c-478d-8dbf-de00f1256d20", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 issf world cup final (shotgun)\ntable_data = [[\"shooter\", \"event\", \"rank points\", \"score points\", \"total\"],[\"georgios achilleos ( cyp )\", \"wcf 2007\", \"defending champion\", \"defending champion\", \"defending champion\"],[\"vincent hancock ( usa )\", \"og beijing\", \"olympic gold medalist\", \"olympic gold medalist\", \"olympic gold medalist\"],[\"tore brovold ( nor )\", \"og beijing\", \"olympic silver medalist\", \"olympic silver medalist\", \"olympic silver medalist\"],[\"anthony terras ( fra )\", \"og beijing\", \"olympic bronze medalist\", \"olympic bronze medalist\", \"olympic bronze medalist\"],[\"ariel mauricio flores ( mex )\", \"wc kerrville\", \"15\", \"12\", \"27\"],[\"qu ridong ( chn )\", \"wc beijing\", \"15\", \"10\", \"25\"],[\"andrea benelli ( ita )\", \"wc belgrade\", \"10\", \"13\", \"23\"],[\"konstantin tsuranov ( rus )\", \"wc beijing\", \"10\", \"10\", \"20\"],[\"jan sychra ( cze )\", \"wc belgrade\", \"5\", \"13\", \"18\"],[\"valerio luchini ( ita )\", \"wc kerrville\", \"8\", \"10\", \"18\"],[\"leos hlavacek ( cze )\", \"wc suhl\", \"5\", \"11\", \"16\"],[\"abdullah alrashidi ( kuw )\", \"wc belgrade\", \"3\", \"12\", \"15\"]]\nQuestion = Is it true that andrea benelli earned 10 rank points with a total of 23 in the wc belgrade event?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    shooters = get_column_by_name(table_data, \"shooter\")\n    events = get_column_by_name(table_data, \"event\")\n    rank_points = get_column_by_name(table_data, \"rank points\")\n    totals = get_column_by_name(table_data, \"total\")\n    for shooter, event, rank_point, total in zip(shooters, events, rank_points, totals):\n        if shooter.lower() == \"andrea benelli ( ita )\" and event.lower() == \"wc belgrade\":\n            answer = equal_to(rank_point, \"10\") and equal_to(total, \"23\")\n            break \n    return answer\n\n### END"}
{"id": "d0366119-2126-41f1-aabe-ab3622568f81", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 uci track cycling world cup classics\ntable_data = [[\"rank\", \"team\", \"round1\", \"round2\", \"round3\", \"round4\", \"round5\", \"total points\"],[\"1\", \"germany\", \"92\", \"56\", \"62\", \"52\", \"74\", \"336\"],[\"2\", \"netherlands\", \"41\", \"60\", \"17\", \"72\", \"99\", \"289\"],[\"3\", \"great britain\", \"133\", \"36\", \"15\", \"32\", \"57\", \"273\"],[\"4\", \"france\", \"24\", \"25\", \"65\", \"64\", \"71\", \"249\"],[\"5\", \"spain\", \"49\", \"66\", \"78\", \"17\", \"31\", \"241\"],[\"6\", \"china\", \"41\", \"38\", \"23\", \"108\", \"31\", \"241\"],[\"7\", \"team toshiba\", \"12\", \"98\", \"38\", \"29\", \"35\", \"212\"],[\"8\", \"russia\", \"45\", \"55\", \"51\", \"37\", \"11\", \"199\"],[\"9\", \"ukraine\", \"51\", \"67\", \"22\", \"30\", \"24\", \"194\"]]\nQuestion = Is it true that the highest score for round 2 was 55?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(int(row[column_index]))\n    return column\n\ndef get_max_value(lst):\n    return max(lst)\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    round2_scores = get_column_by_name(table_data, \"round2\")\n    max_score = get_max_value(round2_scores)\n    answer = equal_to(max_score, 55)\n    return answer\n\n### END"}
{"id": "77f5ce25-3087-490f-aa91-a9cfd9ae045b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = provinces of korea\ntable_data = [[\"japanese name\",\"kana\",\"hanja / kanji\",\"korean name\",\"hangul\"],[\"chūsei - hokudō\",\"ちゅうせいほくどう\",\"忠清北道\",\"chungcheong - bukdo\",\"충청북도\"],[\"keishō - hokudō\",\"けいしょうほくどう\",\"慶尚北道\",\"gyeongsang - bukdo\",\"경상북도\"],[\"chūsei - nandō\",\"ちゅうせいなんどう\",\"忠淸南道\",\"chungcheong - namdo\",\"충청남도\"],[\"keishō - nandō\",\"けいしょうなんどう\",\"慶尚南道\",\"gyeongsang - namdo\",\"경상남도\"],[\"heian - hokudō\",\"へいあんほくどう\",\"平安北道\",\"pyeongan - bukdo\",\"평안북도\"],[\"kōgendō\",\"こうげんどう\",\"江原道\",\"gangwondo\",\"강원도\"],[\"heian - nandō\",\"へいあんなんどう\",\"平安南道\",\"pyeongan - namdo\",\"평안남도\"],[\"kōkaidō\",\"こうかいどう\",\"黃海道\",\"hwanghaedo\",\"황해도\"],[\"kankyō - hokudo\",\"かんきょうほくどう\",\"咸鏡北道\",\"hamgyeong - bukdo\",\"함경북도\"],[\"zenra - hokudō\",\"ぜんらほくどう\",\"全羅北道\",\"jeolla - bukdo\",\"전라북도\"],[\"kankyō - nandō\",\"かんきょうなんどう\",\"咸鏡南道\",\"hamgyeong - namdo\",\"함경남도\"],[\"zenra - nandō\",\"ぜんらなんどう\",\"全羅南道\",\"jeolla - namdo\",\"전라남도\"],[\"keikidō\",\"けいきどう\",\"京畿道\",\"gyeonggido\",\"경기도\"]]\nQuestion = Is it true that ちゅうせいなんどう is the kana of the province with a korean name of chungcheong - namdo?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    kana_column = get_column_by_name(table_data, \"kana\")\n    korean_name_column = get_column_by_name(table_data, \"korean name\")\n    for kana, korean_name in zip(kana_column, korean_name_column):\n        if korean_name.lower() == \"chungcheong - namdo\":\n            answer = equal_to(kana, \"ちゅうせいなんどう\")\n            break \n    return answer\n\n### END"}
{"id": "570f4605-f5c4-47d3-ada3-d97ee250271b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"auckland\",\"canterbury\",\"central districts\",\"otago\",\"wellington\"],[\"286 b sutcliffe & dd taylor v (c) 1948 / 49\",\"306 la duff & jd lawrence v (a) 1893 / 94\",\"428 pj ingram & jm how , v (w) 2009 / 10\",\"373 b sutcliffe & l watt v (a) 1950 / 51\",\"333 ba edgar & ah jones v (a) 1988 / 89\"],[\"241 tj franklin & jj crowe v (w) 1988 / 89\",\"243 mhw papps & jg myburgh v (cd) 2007 / 08\",\"317 rt hart & ps briasco v (c) 1983 / 84\",\"254 kj burns & kr rutherford v (w) 1987 / 88\",\"287 md bell & jd wells v (a) 1997 / 98\"],[\"445 pe whitelaw & wn carson v (o) 1936 / 37\",\"394 pg kennedy & rt latham v (nd) 1990 / 91\",\"264 pjingram & ms sinclair v (nd) 2008 / 09\",\"306 sb haig v nt broom (cd) 2009 / 10\",\"346 gp burnett v ra verry (nd) 1991 / 92\"],[\"280 jj crowe & dn patel v (nd) 1991 / 92\",\"278 ml page & aw roberts v (w) 1931 / 32\",\"276 md crowe & ps briasco v (c) 1986 / 87\",\"235 kj burns & rn hoskin v (nd) 1987 / 88\",\"310 jd ryder & nr parlane v (cd) 2004 / 05\"],[\"347 mj horne & ac barnes v (nd) 2003 / 04\",\"290 gr stead & cz harris v (cd) 1996 / 97\",\"301 ji englefield & rl taylor v (w) 2004 / 05\",\"266 b sutcliffe & ws haig v (a) 1952 / 53\",\"341 gr larsen & eb mcsweeney (cd) 1987 / 88\"],[\"377 c munro & craig cachopa , v (w) 2012 / 13\",\"379 sl stewart & cfk van wyk v (cd) 2009 / 10\",\"235 ms sinclair & bbj griggs v (w) 2008 / 09\",\"165 gm turner & wk lees v (w) 1975 / 76\",\"226 ej gray & rw ormiston v (cd) 1981 / 82\"],[\"224 vj scott & am matheson v (c) 1937 / 38\",\"265 jl powell & n dorreen v (o) 1929 / 30\",\"219 bw yuile & bl hampton v (c) 1967 / 68\",\"182 b sutcliffe & aw gilbertson v (c) 1952 / 53\",\"250 cj nevin & mdj walker v (o) 2003 / 04\"],[\"189 wn carson & am matheson v (w) 1938 / 39\",\"220 pj wiseman & bc hiini v (nd) 2005 / 06\",\"173 ids smith & gk robertson v (nd) 192 / 83\",\"165 jn crawford & ag eckhold v (w) 1914 / 15\",\"180 rg twose & mc goodson v (o) 1994 / 95\"],[\"151 ra young & gj morgan v (nd) 2007 / 08\",\"182 lk germon & rm ford v (w) 1989 / 90\",\"239 hb cave & ib leggat v (o) 1952 / 53\",\"208 wc mcskimming & be scott v (a) 2004 / 05\",\"225 lj woodcock & mj tugaga v (cd) 2009 / 10\"],[\"119 wn carson & j cowie v (w) 1937 / 38\",\"160 lk germon & wa wisneski v (nd) 1997 / 98\",\"133 ga bartlett & ia colquuhoun v (a) 1959 / 60\",\"184 rc blunt & w hawksworth v (c) 1931 / 32\",\"138 kc james & aws brice v (w) 1926 / 27\"]]\nQuestion = Is it true that 278 ml page & aw roberts v (w) 1931 / 32 is from canterbury , and 276 md crowe and ps briasco v (c) 1986 / 87 is from central districts?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    canterbury = get_column_by_name(table_data, \"canterbury\")\n    central_districts = get_column_by_name(table_data, \"central districts\")\n    answer = \"278 ml page & aw roberts v (w) 1931 / 32\" in canterbury and \"276 md crowe & ps briasco v (c) 1986 / 87\" in central_districts\n    return answer\n\n### END"}
{"id": "16121930-b1d7-4705-9bc7-033304f3064d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = galatasaray s.k. (superleague formula team)\ntable_data = [[\"sf round\", \"country\", \"location\", \"date\", \"driver\", \"race 1 (pts)\", \"race 2 (pts)\", \"race 3\", \"race total (pts)\"],[\"1\", \"france\", \"circuit de nevers magny - cours\", \"28 june 2009\", \"duncan tappy\", \"32\", \"16\", \"dnq\", \"48\"],[\"2\", \"belgium\", \"zolder\", \"19 july 2009\", \"duncan tappy\", \"20\", \"7\", \"n / a\", \"75\"],[\"3\", \"england\", \"donington park\", \"2 august 2009\", \"scott mansell\", \"12\", \"14\", \"dnq\", \"101\"],[\"4\", \"portugal\", \"estoril circuit\", \"6 september 2009\", \"ho pin tung\", \"17\", \"7\", \"dnq\", \"133\"],[\"5\", \"italy\", \"autodromo nazionale monza\", \"4 october 2009\", \"ho pin tung\", \"8\", \"7\", \"n / a\", \"182\"]]\nQuestion = Is it true that england got 101.0 racing points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    countries = get_column_by_name(table_data, \"country\")\n    race_totals = get_column_by_name(table_data, \"race total (pts)\")\n    for country, race_total in zip(countries, race_totals):\n        if country.lower() == \"england\":\n            answer = equal_to(float(race_total), 101.0)\n            break \n    return answer\n\n### END"}
{"id": "b2e881bd-5413-4373-8928-868e07816fe0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = skal vi danse? (season 6)\ntable_data = [[\"couple\", \"style\", \"music\", \"trine dehli cleve\", \"tor fløysvik\", \"karianne gulliksen\", \"christer tornell\", \"total\"],[\"håvard & elena\", \"samba\", \"livin' la vida loca - ricky martin\", \"8\", \"7\", \"7\", \"7\", \"29\"],[\"stine & tom - erik\", \"slowfox\", \"why don't you do right - julie london\", \"8\", \"7\", \"8\", \"7\", \"30\"],[\"aylar & egor\", \"samba\", \"whenever , wherever - shakira\", \"7\", \"8\", \"8\", \"8\", \"31\"],[\"tommy & rakel\", \"slowfox\", \"ain't that a kick in the head - robbie williams\", \"6\", \"3\", \"5\", \"6\", \"20\"],[\"maria & asmund\", \"samba\", \"mas que nada - salomé de bahia\", \"8\", \"7\", \"8\", \"8\", \"31\"],[\"cecilie & tobias\", \"samba\", \"conga - gloria estefan\", \"5\", \"5\", \"6\", \"6\", \"22\"]]\nQuestion = Is it true that when tor fløysvik gave a score of 3 the music was by robbie williams?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    music = get_column_by_name(table_data, \"music\")\n    tor_floysvik_scores = get_column_by_name(table_data, \"tor fløysvik\")\n    for score, song in zip(tor_floysvik_scores, music):\n        if equal_to(score, \"3\") and \"robbie williams\" in song.lower():\n            return True\n    return False\n\n### END"}
{"id": "2ab68053-0433-4853-adf1-4be73ebbbd9f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"\", \"original title\", \"directed by\", \"written by\", \"original airdate\", \"prod code\", \"viewers\"],[\"1 - 1\", \"tracy returns\", \"susan tully\", \"elly brewer\", \"8 july 2002\", \"1.1\", \"267000\"],[\"1 - 2\", \"dares\", \"david skynner\", \"elly brewer\", \"15 july 2002\", \"1.2\", \"363000\"],[\"1 - 3\", \"sneaking in ben\", \"susan tully\", \"andy walker\", \"22 july 2002\", \"1.3\", \"499000\"],[\"1 - 4\", \"cam 's first visit\", \"susan tully\", \"elly brewer\", \"29 july 2002\", \"1.4\", \"233000\"],[\"1 - 5\", \"child of the week\", \"susan tully\", \"elly brewer\", \"29 july 2002\", \"1.5\", \"278000\"],[\"1 - 6\", \"the truth is revealed\", \"susan tully\", \"carol russell\", \"5 august 2002\", \"1.6\", \"315000\"],[\"1 - 7\", \"never ever wanna see him again\", \"susan tully\", \"mary morris\", \"5 august 2002\", \"1.7\", \"221000\"],[\"1 - 8\", \"1000 words about tracy\", \"susan tully\", \"arnold evans\", \"12 august 2002\", \"1.8\", \"261000\"],[\"1 - 9\", \"bad peter\", \"susan tully\", \"mary morris\", \"12 august 2002\", \"1.9\", \"242000\"],[\"1 - 10\", \"cam 's place\", \"susan tully\", \"andy walker\", \"19 august 2002\", \"1.10\", \"423000\"],[\"1 - 11\", \"dumping ground virus\", \"david skynner\", \"elly brewer\", \"19 august 2002\", \"1.11\", \"444000\"],[\"1 - 12\", \"justine 's tv\", \"susan tully\", \"elly brewer\", \"26 august 2002\", \"1.12\", \"417000\"],[\"1 - 13\", \"tracy and cam row\", \"susan tully\", \"elly brewer\", \"26 august 2002\", \"1.13\", \"526000\"],[\"1 - 14\", \"sleepover\", \"david skynner\", \"mary morris\", \"3 september 2002\", \"1.14\", \"658000\"],[\"1 - 15\", \"parent 's evening\", \"susan tully\", \"laura summers\", \"3 september 2002\", \"1.15\", \"215000\"],[\"1 - 16\", \"the postcard\", \"susan tully\", \"roger griffiths\", \"10 september 2002\", \"1.16\", \"215000\"],[\"1 - 18\", \"helpful tracy\", \"david skynner\", \"mary morris\", \"10 september 2002\", \"1.17\", \"145000\"],[\"1 - 19\", \"friend\", \"david skynner\", \"laura summers\", \"17 september 2002\", \"1.19\", \"815000\"],[\"1 - 20\", \"treasure hunt\", \"david skynner\", \"laura summers\", \"24 september 2002\", \"1.20\", \"234000\"],[\"1 - 21\", \"romance\", \"david skynner\", \"elly brewer\", \"24 september 2002\", \"1.21\", \"415000\"],[\"1 - 22\", \"temporary care worker\", \"david skynner\", \"othniel smith\", \"1 october 2002\", \"1.22\", \"615000\"],[\"1 - 23\", \"cut the weed\", \"david skynner\", \"graham alborough\", \"1 october 2002\", \"1.23\", \"522000\"],[\"1 - 24\", \"need armbands\", \"david skynner\", \"laura summers\", \"8 october 2002\", \"1.24\", \"195000\"],[\"1 - 25\", \"miss you\", \"david skynner\", \"mary morris\", \"8 october 2002\", \"1.25\", \"395000\"]]\nQuestion = Is it true that helpful tracy originally aired on september 10th 2002 with 145000 viewers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    original_titles = get_column_by_name(table_data, \"original title\")\n    original_airdates = get_column_by_name(table_data, \"original airdate\")\n    viewers = get_column_by_name(table_data, \"viewers\")\n    for original_title, original_airdate, viewer in zip(original_titles, original_airdates, viewers):\n        if original_title.lower() == \"helpful tracy\":\n            answer = equal_to(original_airdate, \"10 september 2002\") and equal_to(viewer, \"145000\")\n            break \n    return answer\n\n### END"}
{"id": "5299f346-4d00-4077-a185-fba57ff7f81f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2002 - 03 boston celtics season\ntable_data = [[\"game\", \"date\", \"opponent\", \"score\", \"location\", \"record\"],[\"47\", \"february 1\", \"indiana pacers\", \"l 100 - 109\", \"conseco fieldhouse\", \"26 - 21\"],[\"48\", \"february 3\", \"new orleans hornets\", \"l 96 - 103\", \"new orleans arena\", \"26 - 22\"],[\"49\", \"february 5\", \"seattle supersonics\", \"w 114 - 74\", \"fleetcenter\", \"27 - 22\"],[\"50\", \"february 11\", \"seattle supersonics\", \"w 82 - 76\", \"keyarena at seattle center\", \"28 - 22\"],[\"51\", \"february 13\", \"portland trail blazers\", \"w 100 - 92\", \"rose garden\", \"29 - 22\"],[\"52\", \"february 15\", \"los angeles clippers\", \"w 92 - 84\", \"staples center\", \"30 - 22\"],[\"53\", \"february 16\", \"phoenix suns\", \"l 92 - 102\", \"america west arena\", \"30 - 23\"],[\"54\", \"february 18\", \"golden state warriors\", \"w 125 - 117\", \"the arena in oakland\", \"31 - 23\"],[\"55\", \"february 20\", \"sacramento kings\", \"l 83 - 105\", \"arco arena\", \"31 - 24\"],[\"56\", \"february 24\", \"houston rockets\", \"l 95 - 101 (ot)\", \"fleetcenter\", \"31 - 25\"],[\"57\", \"february 26\", \"indiana pacers\", \"w 71 - 69\", \"fleetcenter\", \"32 - 25\"],[\"58\", \"february 28\", \"toronto raptors\", \"w 90 - 85\", \"fleetcenter\", \"33 - 25\"]]\nQuestion = Is it true that game 52 's record is 30 - 22?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    games = get_column_by_name(table_data, \"game\")\n    records = get_column_by_name(table_data, \"record\")\n    for game, record in zip(games, records):\n        if game == \"52\":\n            answer = equal_to(record, \"30 - 22\")\n            break \n    return answer\n\n### END"}
{"id": "4ccb45eb-2bf3-47e7-a660-128a39f7c157", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2005 japanese television dramas\ntable_data = [[\"japanese title\", \"romaji title\", \"tv station\", \"episodes\", \"average ratings\"],[\"電車男\", \"densha otoko\", \"fuji tv\", \"11\", \"21.0%\"],[\"海猿 umizaru evolution\", \"umizaru evolution\", \"fuji tv\", \"11\", \"13.2%\"],[\"スローダンス\", \"slow dance\", \"fuji tv\", \"11\", \"16.8%\"],[\"がんばっていきまっしょい\", \"ganbatte ikimasshoi\", \"fuji tv\", \"10\", \"12.4%\"],[\"幸せになりたい!\", \"shiawase ni naritai!\", \"tbs\", \"10\", \"11.8%\"],[\"女系家族\", \"nyokei kazoku\", \"tbs\", \"11\", \"13.85%\"],[\"いま、会いにゆきます\", \"ima , ai ni yukimasu\", \"tbs\", \"10\", \"11%\"],[\"ドラゴン桜\", \"dragon zakura\", \"tbs\", \"11\", \"16.4%\"],[\"はるか17\", \"haruka seventeen\", \"tv asahi\", \"10\", \"8.9%\"],[\"菊次郎とさき 2\", \"kikujirou to saki 2\", \"ntv\", \"9\", \"14.9%\"],[\"女王の教室\", \"joou no kyoushitsu\", \"ntv\", \"11\", \"15.7%\"]]\nQuestion = Is it true that one episode has a romaji title of dragon zakura and had average ratings of 16.4% on fuji tv?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    romaji_titles = get_column_by_name(table_data, \"romaji title\")\n    tv_stations = get_column_by_name(table_data, \"tv station\")\n    average_ratings = get_column_by_name(table_data, \"average ratings\")\n    for romaji_title, tv_station, average_rating in zip(romaji_titles, tv_stations, average_ratings):\n        if romaji_title.lower() == \"dragon zakura\" and tv_station.lower() == \"fuji tv\" and average_rating == \"16.4%\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "f9aaf36b-823f-42c9-906b-9128e06e8ba7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = leonardo de souza\ntable_data = [[\"season\", \"series\", \"team name\", \"races\", \"poles\", \"wins\", \"podiums\", \"f / laps\", \"points\", \"final placing\"],[\"2005\", \"formula renault brasil\", \"kemba racing\", \"14\", \"0\", \"0\", \"0\", \"0\", \"18\", \"21st\"],[\"2006\", \"formula renault brasil\", \"eng makers\", \"10\", \"0\", \"0\", \"0\", \"0\", \"8\", \"18th\"],[\"2008\", \"formula three sudamericana\", \"kemba racing\", \"14\", \"0\", \"0\", \"0\", \"0\", \"24\", \"8th\"],[\"2009\", \"formula three sudamericana\", \"kemba racing\", \"14\", \"0\", \"1\", \"2\", \"0\", \"33\", \"9th\"],[\"2010\", \"formula three sudamericana\", \"kemba racing\", \"20\", \"0\", \"1\", \"4\", \"1\", \"171\", \"5th\"]]\nQuestion = Is it true that the points are twenty for final placing being 5th?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    points = get_column_by_name(table_data, \"points\")\n    final_placings = get_column_by_name(table_data, \"final placing\")\n    for point, final_placing in zip(points, final_placings):\n        if final_placing.lower() == \"5th\":\n            answer = equal_to(point, \"20\")\n            break \n    return answer\n\n### END"}
{"id": "1b9d1618-947c-4fef-a7f2-d0dc61338d13", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of collaborative software\ntable_data = [[\"name\", \"e - mail server\", \"faxing\", \"instant messaging\", \"telephony\", \"videoconferencing\", \"web conferencing\", \"data conferencing\", \"application sharing\", \"electronic meeting system\", \"synchronous conferencing\"],[\"ibm sametime\", \"no , integrated with lotus domino\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ibm lotus domino\", \"yes\", \"yes\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"no\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"no\"],[\"microsoft exchange server\", \"yes\", \"yes\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"],[\"microsoft lync server\", \"no , integrated with exchange server\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"microsoft sharepoint\", \"no , integrated with exchange server\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"],[\"name\", \"e - mail server\", \"faxing\", \"instant messaging\", \"telephony\", \"videoconferencing\", \"web conferencing\", \"data conferencing\", \"application sharing\", \"electronic meeting system\", \"synchronous conferencing\"]]\nQuestion = Is it true that ibm lotus domino has instant messaging and telephony both with integrated sametime?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    instant_messaging = get_column_by_name(table_data, \"instant messaging\")\n    telephony = get_column_by_name(table_data, \"telephony\")\n    for name, im, tele in zip(names, instant_messaging, telephony):\n        if name.lower() == \"ibm lotus domino\":\n            answer = equal_to(im, \"yes with integrated sametime\") and equal_to(tele, \"yes with integrated sametime\")\n            break \n    return answer\n\n### END"}
{"id": "f4496650-7e7c-487e-98ad-00881bf97557", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = orlando magic all - time roster\ntable_data = [[\"player\", \"nationality\", \"position\", \"years in orlando\", \"school / club team\"],[\"matt barnes\", \"united states\", \"guard - forward\", \"2009 - 2010\", \"ucla\"],[\"andre barrett\", \"united states\", \"guard\", \"2005\", \"seton hall\"],[\"brandon bass\", \"united states\", \"forward\", \"2009 - 2011\", \"louisiana state\"],[\"tony battie\", \"united states\", \"forward - center\", \"2004 - 2009\", \"texas tech\"],[\"david benoit\", \"united states\", \"forward\", \"1998\", \"alabama\"],[\"keith bogans\", \"united states\", \"guard\", \"2003 - 2004\", \"kentucky\"],[\"keith bogans\", \"united states\", \"guard\", \"2006 - 2009\", \"kentucky\"],[\"anthony bonner\", \"united states\", \"forward\", \"1995 - 1996\", \"st louis\"],[\"anthony bowie\", \"united states\", \"guard\", \"1991 - 1996\", \"oklahoma\"],[\"earl boykins\", \"united states\", \"guard\", \"1999\", \"eastern michigan\"],[\"michael bradley\", \"united states\", \"forward\", \"2004 - 2005\", \"villanova\"],[\"dee brown\", \"united states\", \"guard\", \"2000 - 2002\", \"jacksonville\"],[\"jud buechler\", \"united states\", \"guard - forward\", \"2001 - 2002\", \"arizona\"],[\"pat burke\", \"ireland\", \"center\", \"2002 - 2003\", \"auburn\"]]\nQuestion = Is it true that pat burke 's nationality is united states?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    for player, nationality in zip(players, nationalities):\n        if player.lower() == \"pat burke\":\n            answer = nationality.lower() == \"united states\"\n            break\n    return answer\n\n### END"}
{"id": "59a5d23f-ac03-465c-a03a-1e29e581ad15", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1926 grand prix season\ntable_data = [[\"name\", \"circuit\", \"date\", \"winning drivers\", \"winning constructor\", \"report\"],[\"indianapolis 500\", \"indianapolis\", \"31 may\", \"frank lockhart\", \"miller\", \"report\"],[\"french grand prix\", \"miramas\", \"27 june\", \"jules goux\", \"bugatti\", \"report\"],[\"san sebastián grand prix / european grand prix\", \"lasarte\", \"18 july\", \"jules goux\", \"bugatti\", \"report\"],[\"british grand prix\", \"brooklands\", \"7 august\", \"robert sénéchal louis wagner\", \"delage\", \"report\"],[\"italian grand prix\", \"monza\", \"5 september\", \"louis charavel\", \"bugatti\", \"report\"]]\nQuestion = Is it true that french grand prix race was in the miramas circuit?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    circuits = get_column_by_name(table_data, \"circuit\")\n    for name, circuit in zip(names, circuits):\n        if equal_to(name, \"french grand prix\"):\n            answer = equal_to(circuit, \"miramas\")\n            break \n    return answer\n\n### END"}
{"id": "bdc28c93-c297-41fd-8042-ef677b47953f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mike hailwood\ntable_data = [[\"year\", \"entrant\", \"chassis\", \"engine\", \"pts\"],[\"1963\", \"reg parnell racing\", \"lotus 24\", \"climax\", \"0\"],[\"1963\", \"reg parnell racing\", \"lola mk4\", \"climax\", \"0\"],[\"1964\", \"reg parnell racing\", \"lotus 25\", \"brm\", \"1\"],[\"1965\", \"reg parnell racing\", \"lotus 25\", \"brm\", \"0\"],[\"1971\", \"team surtees\", \"surtees ts9\", \"ford\", \"3\"],[\"1972\", \"brooke bond oxo team surtees\", \"surtees ts9b\", \"ford\", \"13\"],[\"1973\", \"brooke bond oxo team surtees\", \"surtees ts14a\", \"ford\", \"0\"],[\"1974\", \"yardley team mclaren\", \"mclaren m23\", \"ford\", \"12\"]]\nQuestion = Is it true that surtees ts9b chassis has a year later than 1964 , a ford engine , and 12 points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    chassis = get_column_by_name(table_data, \"chassis\")\n    engines = get_column_by_name(table_data, \"engine\")\n    points = get_column_by_name(table_data, \"pts\")\n    for year, chassi, engine, point in zip(years, chassis, engines, points):\n        if chassi.lower() == \"surtees ts9b\" and engine.lower() == \"ford\" and greater(int(year), 1964) and equal_to(int(point), 12):\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "e7341992-f957-463c-8357-a7074767cdf2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"singular abbreviation\", \"singular word\", \"plural abbreviation\", \"plural word\", \"discipline\"],[\"d\", \"didot\", \"dd\", \"didots\", \"typography\"],[\"f\", \"following line or page\", \"ff\", \"following lines or pages\", \"notes\"],[\"f\", \"folio\", \"ff\", \"folios\", \"literature\"],[\"h\", \"hand\", \"hh\", \"hands\", \"horse height\"],[\"l\", \"line\", \"ll\", \"lines\", \"notes\"],[\"ms\", \"manuscript\", \"mss\", \"manuscripts\", \"notes\"],[\"op\", \"opus\", \"opp\", \"opera\", \"notes\"],[\"p\", \"page\", \"pp\", \"pages\", \"notes\"],[\"q\", \"quarto\", \"qq\", \"quartos\", \"literature\"],[\"s (or §)\", \"section\", \"ss (or §§)\", \"sections\", \"notes\"],[\"v\", \"volume\", \"vv\", \"volumes\", \"notes\"]]\nQuestion = Is it true that the plural abbreviation of ll uses the plural word line?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    plural_abbreviations = get_column_by_name(table_data, \"plural abbreviation\")\n    plural_words = get_column_by_name(table_data, \"plural word\")\n    for plural_abbreviation, plural_word in zip(plural_abbreviations, plural_words):\n        if plural_abbreviation.lower() == \"ll\":\n            answer = equal_to(plural_word, \"line\")\n            break \n    return answer\n\n### END"}
{"id": "73847273-8555-4f5b-ad82-5a575904b076", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glamorgan county cricket club\ntable_data = [[\"score\", \"batsmen\", \"against\", \"location\", \"year\"],[\"374\", \"matthew elliott and steve james\", \"sussex\", \"colwyn bay\", \"2000\"],[\"252\", \"matthew maynard and david hemp\", \"northamptonshire\", \"sophia gardens\", \"2002\"],[\"313\", \"emrys davies and willie jones\", \"essex\", \"brentwood\", \"1948\"],[\"425\", \"adrian dale and viv richards\", \"middlesex\", \"sophia gardens\", \"1993\"],[\"264\", \"maurice robinson and stan montgomery\", \"hampshire\", \"bournemouth\", \"1949\"],[\"240\", \"jim allenby and mark wallace\", \"surrey\", \"the brit oval\", \"2009\"],[\"211\", \"tony cottey and ottis gibson\", \"leicestershire\", \"swansea\", \"1996\"],[\"202\", \"dai davies and joe hills\", \"sussex\", \"eastbourne\", \"1928\"],[\"203\", \"joe hills and johnnie clay\", \"worcestershire\", \"swansea\", \"1929\"],[\"143\", \"terry davies and simon daniels\", \"gloucestershire\", \"swansea\", \"1982\"]]\nQuestion = Is it true that the batsmen from the year 1948 had a score of 313?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    scores = get_column_by_name(table_data, \"score\")\n    years = get_column_by_name(table_data, \"year\")\n    for score, year in zip(scores, years):\n        if year == \"1948\":\n            answer = equal_to(score, \"313\")\n            break \n    return answer\n\n### END"}
{"id": "6f0e616a-7fbf-4019-8495-ff24578b402e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mercedes - benz r170\ntable_data = [[\"model\", \"years\", \"engine\", \"power\", \"0 - 100 km / h (62 mph)\", \"top speed\"],[\"slk200\", \"1997 - 2004\", \"2l m111.946 l4\", \"102 kw (136hp)\", \"9.3 seconds\", \"208 km / h (129 mph)\"],[\"slk200k\", \"1997 - 2000\", \"2l m111.943 l4\", \"143 kw (192hp)\", \"6.8 seconds\", \"236 km / h (147 mph)\"],[\"slk200k\", \"2001 - 2004\", \"2l m111.958 l4\", \"122 kw (163hp)\", \"7.4 seconds\", \"223 km / h (138 mph)\"],[\"slk230k\", \"1996 - 2000\", \"2.3l m111.973 l4\", \"144 kw (193hp)\", \"6.9 seconds\", \"231 km / h (143 mph)\"],[\"slk230k\", \"2001 - 2004\", \"2.3l m111.983 l4\", \"147 kw (197hp)\", \"6.8 seconds\", \"240 km / h (148 mph)\"],[\"slk320\", \"2001 - 2004\", \"3.2l m112.947 v6\", \"162 kw (218hp)\", \"6.5 seconds\", \"250 / 276 km / h (155 / 171 mph)\"],[\"slk32 amg\", \"2001 - 2004\", \"3.2l m112.960 v6\", \"264 kw (354hp)\", \"5.2 seconds\", \"250 / 280 / 310 km / h (155 / 174 / 193 mph)\"]]\nQuestion = Is it true that the top speed of the slk200k that produces 122 kw (163hp) of power is 223 km / h (138 mph)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    models = get_column_by_name(table_data, \"model\")\n    powers = get_column_by_name(table_data, \"power\")\n    top_speeds = get_column_by_name(table_data, \"top speed\")\n    for model, power, top_speed in zip(models, powers, top_speeds):\n        if model.lower() == \"slk200k\" and power.lower() == \"122 kw (163hp)\":\n            answer = equal_to(top_speed, \"223 km / h (138 mph)\")\n            break \n    return answer\n\n### END"}
{"id": "b978baeb-aec4-4b10-a443-26bce1cd6a6c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states presidential election in nevada , 2008\ntable_data = [[\"county\", \"mccain\", \"mccain %\", \"obama\", \"obama %\"],[\"carson city\", \"11419\", \"48.2%\", \"11623\", \"49.1%\"],[\"churchill\", \"6832\", \"64.4%\", \"3494\", \"33.0%\"],[\"clark\", \"257078\", \"39.5%\", \"380765\", \"58.5%\"],[\"douglas\", \"14648\", \"56.6%\", \"10672\", \"41.2%\"],[\"elko\", \"10969\", \"68.5%\", \"4541\", \"28.4%\"],[\"esmeralda\", \"303\", \"69.0%\", \"104\", \"23.7%\"],[\"eureka\", \"564\", \"75.7%\", \"144\", \"19.3%\"],[\"humboldt\", \"3586\", \"63.3%\", \"1909\", \"33.7%\"],[\"lander\", \"1466\", \"69.7%\", \"577\", \"27.5%\"],[\"lincoln\", \"1498\", \"71.1%\", \"518\", \"24.6%\"],[\"lyon\", \"12154\", \"57.6%\", \"8405\", \"39.8%\"],[\"mineral\", \"1131\", \"49.0%\", \"1082\", \"46.9%\"],[\"nye\", \"9537\", \"54.5%\", \"7226\", \"41.3%\"],[\"pershing\", \"1075\", \"58.6%\", \"673\", \"36.7%\"],[\"storey\", \"1247\", \"51.6%\", \"1102\", \"45.6%\"],[\"washoe\", \"76880\", \"42.6%\", \"99671\", \"55.3%\"]]\nQuestion = Is it true that in nye obama received 41.3% of the votes?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    counties = get_column_by_name(table_data, \"county\")\n    obama_percentages = get_column_by_name(table_data, \"obama %\")\n    for county, obama_percentage in zip(counties, obama_percentages):\n        if county.lower() == \"nye\":\n            answer = equal_to(obama_percentage, \"41.3%\")\n            break \n    return answer\n\n### END"}
{"id": "aa653605-e297-43d8-a8ff-47ce888160dd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 uci track cycling world cup classics\ntable_data = [[\"rank\", \"team\", \"round1\", \"round2\", \"round3\", \"round4\", \"round5\", \"total points\"],[\"1\", \"germany\", \"92\", \"56\", \"62\", \"52\", \"74\", \"336\"],[\"2\", \"netherlands\", \"41\", \"60\", \"17\", \"72\", \"99\", \"289\"],[\"3\", \"great britain\", \"133\", \"36\", \"15\", \"32\", \"57\", \"273\"],[\"4\", \"france\", \"24\", \"25\", \"65\", \"64\", \"71\", \"249\"],[\"5\", \"spain\", \"49\", \"66\", \"78\", \"17\", \"31\", \"241\"],[\"6\", \"china\", \"41\", \"38\", \"23\", \"108\", \"31\", \"241\"],[\"7\", \"team toshiba\", \"12\", \"98\", \"38\", \"29\", \"35\", \"212\"],[\"8\", \"russia\", \"45\", \"55\", \"51\", \"37\", \"11\", \"199\"],[\"9\", \"ukraine\", \"51\", \"67\", \"22\", \"30\", \"24\", \"194\"]]\nQuestion = Is it true that great britain had a score of 133 in round 1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    round1_scores = get_column_by_name(table_data, \"round1\")\n    for team, round1_score in zip(teams, round1_scores):\n        if team.lower() == \"great britain\":\n            answer = equal_to(round1_score, \"133\")\n            break \n    return answer\n\n### END"}
{"id": "d94ca0d3-7a7f-4eb8-9caf-63428fa25261", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"model type\",\"model designation\",\"engine\",\"wheelbase (mm / inch)\",\"gvw (kg / ton)\",\"axle ratio\"],[\"cf220\",\"97100\",\"1759 cc (107.5 cu in) gasoline\",\"2692 / 106\",\"2235 / 2.2\",\"8 / 37\"],[\"cf220\",\"97f00\",\"1998 cc (121.9 cu in) diesel\",\"2692 / 106\",\"2235 / 2.2\",\"8 / 37\"],[\"cf250\",\"97300\",\"2279 cc (139 cu in) gasoline\",\"2692 / 106\",\"2500 / 2.46\",\"8 / 37\"],[\"cf250\",\"97 g00\",\"1998 cc (121.9 cu in) diesel\",\"2692 / 106\",\"2500 / 2.46\",\"8 / 37\"],[\"cf280\",\"97500\",\"2279 cc (139 cu in) gasoline\",\"3200 / 126\",\"2828 / 2.78\",\"11 / 49\"],[\"cf280\",\"97h00\",\"1998 cc (121.9 cu in) diesel\",\"3200 / 126\",\"2828 / 2.78\",\"9 / 47\"],[\"cf340\",\"97700\",\"2279 cc (139 cu in) gasoline\",\"3200 / 126\",\"3375 / 3.32\",\"9 / 47\"],[\"cf340\",\"97k00\",\"1998 cc (121.9 cu in) diesel\",\"3200 / 126\",\"3375 / 3.32\",\"9 / 47\"],[\"cf350\",\"97700\",\"2279 cc (139 cu in) gasoline\",\"3200 / 126\",\"3375 / 3.32\",\"9 / 47\"]]\nQuestion = Is it true that model cf250 97 g00 has a 2692 / 106 mm / inch wheelbase?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    model_designations = get_column_by_name(table_data, \"model designation\")\n    wheelbases = get_column_by_name(table_data, \"wheelbase (mm / inch)\")\n    for model_designation, wheelbase in zip(model_designations, wheelbases):\n        if model_designation.lower() == \"97 g00\":\n            answer = equal_to(wheelbase, \"2692 / 106\")\n            break \n    return answer\n\n### END"}
{"id": "526964d8-0833-4b4e-8476-53f22f79c5e0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1974 formula one season\ntable_data = [[\"race\",\"circuit\",\"date\",\"pole position\",\"fastest lap\",\"winning driver\",\"constructor\",\"tyre\",\"report\"],[\"argentine grand prix\",\"buenos aires\",\"13 january\",\"ronnie peterson\",\"clay regazzoni\",\"denny hulme\",\"mclaren - ford\",\"g\",\"report\"],[\"brazilian grand prix\",\"interlagos\",\"27 january\",\"emerson fittipaldi\",\"clay regazzoni\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"south african grand prix\",\"kyalami\",\"30 march\",\"niki lauda\",\"carlos reutemann\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"],[\"spanish grand prix\",\"jarama\",\"28 april\",\"niki lauda\",\"niki lauda\",\"niki lauda\",\"ferrari\",\"g\",\"report\"],[\"belgian grand prix\",\"nivelles - baulers\",\"12 may\",\"clay regazzoni\",\"denny hulme\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"monaco grand prix\",\"monaco\",\"26 may\",\"niki lauda\",\"ronnie peterson\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"swedish grand prix\",\"anderstorp\",\"9 june\",\"patrick depailler\",\"patrick depailler\",\"jody scheckter\",\"tyrrell - ford\",\"g\",\"report\"],[\"dutch grand prix\",\"zandvoort\",\"23 june\",\"niki lauda\",\"ronnie peterson\",\"niki lauda\",\"ferrari\",\"g\",\"report\"],[\"french grand prix\",\"dijon - prenois\",\"7 july\",\"niki lauda\",\"jody scheckter\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"british grand prix\",\"brands hatch\",\"20 july\",\"niki lauda\",\"niki lauda\",\"jody scheckter\",\"tyrrell - ford\",\"g\",\"report\"],[\"german grand prix\",\"nürburgring\",\"4 august\",\"niki lauda\",\"jody scheckter\",\"clay regazzoni\",\"ferrari\",\"g\",\"report\"],[\"austrian grand prix\",\"österreichring\",\"18 august\",\"niki lauda\",\"clay regazzoni\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"],[\"italian grand prix\",\"monza\",\"8 september\",\"niki lauda\",\"carlos pace\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"canadian grand prix\",\"mosport park\",\"22 september\",\"emerson fittipaldi\",\"niki lauda\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"united states grand prix\",\"watkins glen\",\"6 october\",\"carlos reutemann\",\"carlos pace\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"]]\nQuestion = Is it true that ronnie peterson was the winning driver at the monza circuit?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    circuits = get_column_by_name(table_data, \"circuit\")\n    winning_drivers = get_column_by_name(table_data, \"winning driver\")\n    answer = False\n    for circuit, winning_driver in zip(circuits, winning_drivers):\n        if \"monza\" in circuit.lower() and \"ronnie peterson\" in winning_driver.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "b0347ae5-f71a-41d0-8529-c652ba8276d0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = westinghouse broadcasting\ntable_data = [[\"city of license / market\", \"station\", \"channel tv ( dt )\", \"years owned\", \"current affiliation\"],[\"san francisco - oakland - san jose\", \"kpix\", \"5 (29)\", \"1954 - 1995\", \"cbs owned - and - operated ( o&o )\"],[\"baltimore\", \"wjz - tv\", \"13 (13)\", \"1957 - 1995\", \"cbs owned - and - operated (o&o)\"],[\"boston\", \"wbz - tv\", \"4 (30)\", \"1948 - 1995\", \"cbs owned - and - operated (o&o)\"],[\"charlotte\", \"wpcq - tv (now wcnc - tv )\", \"36 (22)\", \"1980 - 1985\", \"nbc affiliate owned by belo corporation\"],[\"cleveland\", \"kyw - tv (now wkyc - tv )\", \"3 (17)\", \"1956 - 1965\", \"nbc affiliate owned by gannett company\"],[\"philadelphia\", \"wptz / kyw - tv\", \"3 (26)\", \"1953 - 1956 1965 - 1995\", \"cbs owned - and - operated (o&o)\"]]\nQuestion = Is it true that its said that the license / market city of philadelphia plays on channel 3 (26)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    cities = get_column_by_name(table_data, \"city of license / market\")\n    channels = get_column_by_name(table_data, \"channel tv ( dt )\")\n    for city, channel in zip(cities, channels):\n        if \"philadelphia\" in city.lower():\n            answer = equal_to(channel, \"3 (26)\")\n            break \n    return answer\n\n### END"}
{"id": "b373f082-51ac-4d61-8fc4-7ede402037a0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1971 nhl amateur draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"15\", \"ken baird\", \"defence\", \"canada\", \"california golden seals\", \"flin flon bombers (wchl)\"],[\"16\", \"henry boucha\", \"centre\", \"united states\", \"detroit red wings\", \"us national development team\"],[\"17\", \"bobby lalonde\", \"centre\", \"canada\", \"vancouver canucks\", \"montreal junior canadiens (oha)\"],[\"18\", \"brian mckenzie\", \"left wing\", \"canada\", \"pittsburgh penguins\", \"st catharines black hawks (oha)\"],[\"19\", \"craig ramsay\", \"left wing\", \"canada\", \"buffalo sabres\", \"peterborough petes (oha)\"],[\"20\", \"larry robinson\", \"defence\", \"canada\", \"montreal canadiens\", \"kitchener rangers (oha)\"],[\"21\", \"rod norrish\", \"left wing\", \"canada\", \"minnesota north stars\", \"regina pats (wchl)\"],[\"22\", \"rick kehoe\", \"right wing\", \"canada\", \"toronto maple leafs\", \"hamilton red wings (oha)\"],[\"23\", \"dave fortier\", \"defence\", \"canada\", \"toronto maple leafs\", \"st catharines black hawks (oha)\"],[\"24\", \"michel deguise\", \"goaltender\", \"canada\", \"montreal canadiens\", \"sorel eperviers (qmjhl)\"],[\"25\", \"terry french\", \"centre\", \"canada\", \"montreal canadiens\", \"ottawa 67 's (oha)\"],[\"26\", \"dave kryskow\", \"left wing\", \"canada\", \"chicago black hawks\", \"edmonton oil kings (wchl)\"],[\"27\", \"tom williams\", \"left wing\", \"canada\", \"new york rangers\", \"hamilton red wings (oha)\"],[\"28\", \"curt ridley\", \"goaltender\", \"canada\", \"boston bruins\", \"portage terriers (mjhl)\"]]\nQuestion = Is it true that defence player dave fortier 's pick number is 23?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    picks = get_column_by_name(table_data, \"pick\")\n    for player, pick in zip(players, picks):\n        if player.lower() == \"dave fortier\":\n            answer = equal_to(pick, \"23\")\n            break \n    return answer\n\n### END"}
{"id": "a8767c31-972b-46a7-bb41-08a79701145a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2002 - 03 boston celtics season\ntable_data = [[\"game\", \"date\", \"opponent\", \"score\", \"location\", \"record\"],[\"47\", \"february 1\", \"indiana pacers\", \"l 100 - 109\", \"conseco fieldhouse\", \"26 - 21\"],[\"48\", \"february 3\", \"new orleans hornets\", \"l 96 - 103\", \"new orleans arena\", \"26 - 22\"],[\"49\", \"february 5\", \"seattle supersonics\", \"w 114 - 74\", \"fleetcenter\", \"27 - 22\"],[\"50\", \"february 11\", \"seattle supersonics\", \"w 82 - 76\", \"keyarena at seattle center\", \"28 - 22\"],[\"51\", \"february 13\", \"portland trail blazers\", \"w 100 - 92\", \"rose garden\", \"29 - 22\"],[\"52\", \"february 15\", \"los angeles clippers\", \"w 92 - 84\", \"staples center\", \"30 - 22\"],[\"53\", \"february 16\", \"phoenix suns\", \"l 92 - 102\", \"america west arena\", \"30 - 23\"],[\"54\", \"february 18\", \"golden state warriors\", \"w 125 - 117\", \"the arena in oakland\", \"31 - 23\"],[\"55\", \"february 20\", \"sacramento kings\", \"l 83 - 105\", \"arco arena\", \"31 - 24\"],[\"56\", \"february 24\", \"houston rockets\", \"l 95 - 101 (ot)\", \"fleetcenter\", \"31 - 25\"],[\"57\", \"february 26\", \"indiana pacers\", \"w 71 - 69\", \"fleetcenter\", \"32 - 25\"],[\"58\", \"february 28\", \"toronto raptors\", \"w 90 - 85\", \"fleetcenter\", \"33 - 25\"]]\nQuestion = Is it true that the record games score of 29 - 22 was played at staples center?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"location\")\n    records = get_column_by_name(table_data, \"record\")\n    for location, record in zip(locations, records):\n        if record == \"29 - 22\":\n            answer = equal_to(location, \"staples center\")\n            break \n    return answer\n\n### END"}
{"id": "7b97e1ea-87dc-4db6-b2d4-4c186126aaec", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1929 in brazilian football\ntable_data = [[\"position\", \"team\", \"points\", \"played\", \"drawn\", \"lost\", \"against\", \"difference\"],[\"1\", \"paulistano\", \"30\", \"19\", \"2\", \"3\", \"15\", \"38\"],[\"2\", \"ponte preta\", \"26\", \"20\", \"2\", \"6\", \"36\", \"19\"],[\"3\", \"sc internacional de são paulo\", \"23\", \"18\", \"5\", \"4\", \"23\", \"11\"],[\"4\", \"independência\", \"23\", \"20\", \"5\", \"7\", \"37\", \"5\"],[\"5\", \"hespanha\", \"22\", \"20\", \"6\", \"6\", \"35\", \"11\"],[\"6\", \"atlético santista\", \"19\", \"19\", \"5\", \"7\", \"28\", \"6\"],[\"7\", \"germnia\", \"18\", \"18\", \"2\", \"8\", \"45\", \"- 7\"],[\"8\", \"portuguesa santista\", \"18\", \"21\", \"4\", \"10\", \"40\", \"- 3\"],[\"9\", \"antártica\", \"17\", \"21\", \"7\", \"9\", \"47\", \"- 17\"],[\"10\", \"aa são bento\", \"16\", \"19\", \"6\", \"8\", \"32\", \"- 12\"],[\"11\", \"aa das palmeiras\", \"11\", \"17\", \"1\", \"11\", \"50\", \"- 22\"],[\"12\", \"ca paulista\", \"11\", \"20\", \"1\", \"14\", \"58\", \"- 29\"]]\nQuestion = Is it true that team paulistano has drawn less than 7 , but scored more than 22 points in 19 games against 15 other teams?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef greater_than(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    points = get_column_by_name(table_data, \"points\")\n    played = get_column_by_name(table_data, \"played\")\n    drawn = get_column_by_name(table_data, \"drawn\")\n    against = get_column_by_name(table_data, \"against\")\n    for team, point, play, draw, against in zip(teams, points, played, drawn, against):\n        if team.lower() == \"paulistano\":\n            answer = less_than(int(draw), 7) and greater_than(int(point), 22) and equal_to(int(play), 19) and equal_to(int(against), 15)\n            break \n    return answer\n\n### END"}
{"id": "6dab57f1-c79b-42dd-afbc-3e9b06ce835f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the howie carr show\ntable_data = [[\"calls\", \"frequency\", \"branding\", \"format\", \"timeslot\", \"group owner\"],[\"wgan\", \"560 khz\", \"news radio 560 wgan\", \"news / talk\", \"live 3p - 6p\", \"saga communications\"],[\"whyn\", \"560 khz\", \"news / talk 560 whyn\", \"news / talk\", \"live 3p - 7p\", \"clear channel communications\"],[\"wvmt\", \"620 khz\", \"news / talk 620 wvmt\", \"news / talk\", \"live 3p - 7p\", \"sison broadcasting\"],[\"wrko\", \"680 khz\", \"am 680 wrko\", \"news / talk\", \"live 3p - 7p\", \"entercom\"],[\"wcrn\", \"830 khz\", \"wcrn 830 true talk\", \"news / talk\", \"live 3p - 7p\", \"carter broadcasting\"],[\"wkbk\", \"1290 khz\", \"1290 wkbk w281au 104.1\", \"news / talk\", \"live 3p - 6p\", \"saga communications\"],[\"wegp\", \"1390 khz\", \"wegp 1390 am - the talk of the county\", \"news / talk\", \"live 3p - 6p\", \"decelles / media , inc\"],[\"wxtk\", \"95.1 mhz\", \"news radio 95 wxtk\", \"news / talk\", \"live 3p - 7p\", \"qantam of cape cod , llc\"],[\"wntk - fm\", \"99.7 mhz\", \"wntk talk radio\", \"news / talk\", \"live 3p - 6p\", \"koor communications\"],[\"wuvr\", \"1490 khz\", \"wntk talk radio\", \"news / talk\", \"live 3p - 6p\", \"koor communications\"],[\"wvom - fm / wvqm\", \"103.9 / 101.3 mhz\", \"the voice of maine\", \"news / talk\", \"live 3p - 7p\", \"blueberry broadcasting\"]]\nQuestion = Is it true that the frequency of 720 khz is used for wcrn 830 true talk?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    brandings = get_column_by_name(table_data, \"branding\")\n    for frequency, branding in zip(frequencies, brandings):\n        if branding.lower() == \"wcrn 830 true talk\":\n            answer = equal_to(frequency, \"720 khz\")\n            break \n    return answer\n\n### END"}
{"id": "9bece20a-aaa5-4828-a9dc-9dbe585c0bdc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2005 japanese television dramas\ntable_data = [[\"japanese title\", \"romaji title\", \"tv station\", \"episodes\", \"average ratings\"],[\"電車男\", \"densha otoko\", \"fuji tv\", \"11\", \"21.0%\"],[\"海猿 umizaru evolution\", \"umizaru evolution\", \"fuji tv\", \"11\", \"13.2%\"],[\"スローダンス\", \"slow dance\", \"fuji tv\", \"11\", \"16.8%\"],[\"がんばっていきまっしょい\", \"ganbatte ikimasshoi\", \"fuji tv\", \"10\", \"12.4%\"],[\"幸せになりたい!\", \"shiawase ni naritai!\", \"tbs\", \"10\", \"11.8%\"],[\"女系家族\", \"nyokei kazoku\", \"tbs\", \"11\", \"13.85%\"],[\"いま、会いにゆきます\", \"ima , ai ni yukimasu\", \"tbs\", \"10\", \"11%\"],[\"ドラゴン桜\", \"dragon zakura\", \"tbs\", \"11\", \"16.4%\"],[\"はるか17\", \"haruka seventeen\", \"tv asahi\", \"10\", \"8.9%\"],[\"菊次郎とさき 2\", \"kikujirou to saki 2\", \"ntv\", \"9\", \"14.9%\"],[\"女王の教室\", \"joou no kyoushitsu\", \"ntv\", \"11\", \"15.7%\"]]\nQuestion = Is it true that joou no kyoushitsu was the romaji title that has a japanese title of 女王の教室 on tv asahi?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    japanese_titles = get_column_by_name(table_data, \"japanese title\")\n    romaji_titles = get_column_by_name(table_data, \"romaji title\")\n    tv_stations = get_column_by_name(table_data, \"tv station\")\n    for japanese_title, romaji_title, tv_station in zip(japanese_titles, romaji_titles, tv_stations):\n        if japanese_title == \"女王の教室\" and romaji_title == \"joou no kyoushitsu\" and tv_station == \"tv asahi\":\n            return True\n    return False\n\n### END"}
{"id": "1e7510c2-7b5c-483b-92ce-8c16930988b2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = dock jumping\ntable_data = [[\"date\", \"distance\", \"handler\", \"event\", \"location\"],[\"7 july 2000\", \"ft4in (m)\", \"beth gutteridge\", \"espn great outdoor games\", \"lake placid , ny\"],[\"8 july 2001\", \"ft1in (m)\", \"mike wallace\", \"espn great outdoor games\", \"lake placid , ny\"],[\"20 february 2002\", \"ft3in (m)\", \"mike jackson\", \"indianapolis boat , sport & travel show\", \"indianapolis , in\"],[\"1 may 2002\", \"ft4in (m)\", \"john kline\", \"espn2 super retriever series\", \"northfield , mn\"],[\"6 july 2002\", \"ft6in (m)\", \"mike jackson\", \"espn great outdoor games\", \"lake placid , ny\"],[\"7 august 2005\", \"ft5in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"21 august 2005\", \"ft7in (m)\", \"kevin meese\", \"big nickle time cabela 's\", \"hamburg , pa\"],[\"9 october 2005\", \"ft10in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"30 may 2010\", \"ft11.59in (m)\", \"rande murphy\", \"super retriever series crown championship\", \"little rock , ar\"],[\"11 july 2010\", \"ft1in (m)\", \"melissa ness\", \"2010 ukc premier\", \"richmond , in\"],[\"29 may 2011\", \"ft7in (m)\", \"tony lampert\", \"super retriever series crown championship\", \"little rock , ar\"],[\"07 oct 2011\", \"ft11in (m)\", \"tony lampert\", \"david letterman show , october 7 2011\", \"new york , ny\"]]\nQuestion = Is it true that the event located in northfield , mn is espn great outdoor games?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    locations = get_column_by_name(table_data, \"location\")\n    answer = False\n    for event, location in zip(events, locations):\n        if \"northfield , mn\" in location.lower():\n            if \"espn great outdoor games\" in event.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "9fc3eafd-ebb4-4459-b5ed-bc6697606e6f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = american dad! (season 1)\ntable_data = [[\"no in series\", \"title\", \"directed by\", \"written by\", \"original air date\", \"production code\", \"us viewers (millions)\"],[\"1\", \"pilot\", \"ron hughart\", \"seth macfarlane , mike barker & matt weitzman\", \"february 6 , 2005\", \"1ajn01\", \"15.10\"],[\"2\", \"threat levels\", \"brent woods\", \"david zuckerman\", \"may 1 , 2005\", \"1ajn02\", \"9.47\"],[\"3\", \"stan knows best\", \"pam cooke\", \"mike barker & matt weitzman\", \"may 8 , 2005\", \"1ajn03\", \"8.23\"],[\"4\", \"francine 's flashback\", \"caleb meurer & brent woods\", \"rick wiener & kenny schwartz\", \"may 15 , 2005\", \"1ajn05\", \"7.84\"],[\"5\", \"roger codger\", \"albert calleros\", \"dan vebber\", \"june 5 , 2005\", \"1ajn04\", \"6.09\"],[\"6\", \"homeland insecurity\", \"rodney clouden\", \"neal boushell & sam o'neal\", \"june 12 , 2005\", \"1ajn06\", \"6.85\"]]\nQuestion = Is it true that there is 1 seen by more than 7.84 million people in the us?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    viewers = get_column_by_name(table_data, \"us viewers (millions)\")\n    viewers = [float(viewer) for viewer in viewers]\n    count = sum([1 for viewer in viewers if greater(viewer, 7.84)])\n    answer = equal_to(count, 1)\n    return answer\n\n### END"}
{"id": "28e68a29-dbe2-4705-b2c5-d8a90d28962a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = american dad! (season 1)\ntable_data = [[\"no in series\", \"title\", \"directed by\", \"written by\", \"original air date\", \"production code\", \"us viewers (millions)\"],[\"1\", \"pilot\", \"ron hughart\", \"seth macfarlane , mike barker & matt weitzman\", \"february 6 , 2005\", \"1ajn01\", \"15.10\"],[\"2\", \"threat levels\", \"brent woods\", \"david zuckerman\", \"may 1 , 2005\", \"1ajn02\", \"9.47\"],[\"3\", \"stan knows best\", \"pam cooke\", \"mike barker & matt weitzman\", \"may 8 , 2005\", \"1ajn03\", \"8.23\"],[\"4\", \"francine 's flashback\", \"caleb meurer & brent woods\", \"rick wiener & kenny schwartz\", \"may 15 , 2005\", \"1ajn05\", \"7.84\"],[\"5\", \"roger codger\", \"albert calleros\", \"dan vebber\", \"june 5 , 2005\", \"1ajn04\", \"6.09\"],[\"6\", \"homeland insecurity\", \"rodney clouden\", \"neal boushell & sam o'neal\", \"june 12 , 2005\", \"1ajn06\", \"6.85\"]]\nQuestion = Is it true that francine 's flashback had 7.84 million us viewers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    viewers = get_column_by_name(table_data, \"us viewers (millions)\")\n    for title, viewer in zip(titles, viewers):\n        if title.lower() == \"francine 's flashback\":\n            answer = equal_to(viewer, \"7.84\")\n            break \n    return answer\n\n### END"}
{"id": "0a018069-fb38-4382-8c63-ae59adddcbad", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the sunday night project\ntable_data = [[\"episode number\", \"air date\", \"guest host\", \"musical guest (song performed)\", \"who knows the most about the guest host panelists\", \"coat of cash wearing celebrity\"],[\"1\", \"8 june 2008\", \"katie price and peter andre\", \"the courteeners ( no you didn't , no you don't )\", \"cerys matthews and michelle dewberry\", \"andy abraham\"],[\"2\", \"15 june 2008\", \"pamela anderson\", \"five o'clock heroes feat agyness deyn ( who )\", \"paul daniels and danny dyer\", \"ricky whittle\"],[\"3\", \"22 june 2008\", \"mark ronson\", \"nerd ( everyone nose )\", \"pharrell williams and miquita oliver\", \"stephanie mcmichael\"],[\"4\", \"29 june 2008\", \"ronan keating , stephen gately , and shane lynch\", \"estelle ( no substitute love )\", \"lulu and estelle\", \"carly stratton\"],[\"5\", \"6 july 2008\", \"david hasselhoff\", \"the feeling ( turn it up )\", \"scott mills and sally lindsay\", \"sylvia barrie\"],[\"6\", \"13 july 2008\", \"barbara windsor\", \"the ting tings ( shut up and let me go )\", \"patsy palmer and anna karen\", \"jennifer clark\"]]\nQuestion = Is it true that pamela anderson was the guest host on the episode that aired 8 june 2008?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    air_dates = get_column_by_name(table_data, \"air date\")\n    guest_hosts = get_column_by_name(table_data, \"guest host\")\n    answer = False\n    for air_date, guest_host in zip(air_dates, guest_hosts):\n        if \"8 june 2008\" in air_date.lower():\n            if \"pamela anderson\" in guest_host.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "84a5cde8-6570-4f5a-82cd-977a6f497827", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\", \"10:30\"],[\"heartland\", \"heartland\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"cbc news : sunday night\", \"cbc news : sunday night\"],[\"law and order : criminal intent\", \"law and order : criminal intent\", \"cold case\", \"cold case\", \"desperate housewives\", \"desperate housewives\", \"dirty sexy money\", \"dirty sexy money\"],[\"the simpsons\", \"da kink in my hair\", \"the simpsons\", \"king of the hill\", \"family guy\", \"american dad!\", \"brothers & sisters\", \"brothers & sisters\"],[\"america 's funniest home videos\", \"america 's funniest home videos\", \"kyle xy\", \"kyle xy\", \"america 's next top model\", \"america 's next top model\", \"stargate sg - 1\", \"stargate sg - 1\"],[\"everybody hates chris\", \"speakers' corner\", \"behind the movies\", \"bravo!fact presents\", \"great movies\", \"great movies\", \"great movies\", \"great movies\"],[\"viva laughlin\", \"viva laughlin\", \"extreme makeover : home edition\", \"extreme makeover : home edition\", \"e! countdowns\", \"e! countdowns\", \"e! live encore\", \"e! live encore\"],[\"découverte\", \"et dieu créa laflaque\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"le téléjournal\", \"le téléjournal\"],[\"le banquier / dieu merci!\", \"le banquier / dieu merci!\", \"occupation double\", \"occupation double\", \"occupation double\", \"occupation double\", \"le tva week - end\", \"le tva week - end\"],[\"loft story\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal weekend\"]]\nQuestion = Is it true that great movies takes up five time slots : 8:30 , 9:00 , 9:30 , 10:00 , and 10:30?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef solution(table_data):\n    time_slots = [\"8:30\", \"9:00\", \"9:30\", \"10:00\", \"10:30\"]\n    count = 0\n    for time_slot in time_slots:\n        column_index = table_data[0].index(time_slot)\n        column = get_column_by_index(table_data, column_index)\n        count += count_occurrences(\"great movies\", column)\n    answer = count == 5\n    return answer\n\n### END"}
{"id": "d123e3de-5354-4fce-85b4-4b6ff350cb4e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1990 toronto blue jays season\ntable_data = [[\"date\",\"opponent\",\"score\",\"loss\",\"attendance\",\"record\"],[\"may 1\",\"indians\",\"4 - 3\",\"candiotti (3 - 1)\",\"5111\",\"13 - 9\"],[\"may 2\",\"indians\",\"3 - 0\",\"cerutti (1 - 4)\",\"8801\",\"13 - 10\"],[\"may 4\",\"tigers\",\"3 - 1\",\"flanagan (2 - 2)\",\"49146\",\"13 - 11\"],[\"may 5\",\"tigers\",\"5 - 1\",\"robinson (1 - 3)\",\"49219\",\"14 - 11\"],[\"may 6\",\"tigers\",\"11 - 7\",\"dubois (0 - 1)\",\"49206\",\"15 - 11\"],[\"may 7\",\"white sox\",\"6 - 1\",\"mcdowell (1 - 2)\",\"41384\",\"16 - 11\"],[\"may 8\",\"white sox\",\"4 - 1\",\"cerutti (1 - 5)\",\"41101\",\"16 - 12\"],[\"may 9\",\"white sox\",\"4 - 3\",\"edwards (0 - 1)\",\"43128\",\"17 - 12\"],[\"may 10\",\"tigers\",\"10 - 5\",\"stottlemyre (4 - 3)\",\"11296\",\"17 - 13\"],[\"may 11\",\"tigers\",\"4 - 2\",\"dubois (0 - 2)\",\"17376\",\"18 - 13\"],[\"may 12\",\"tigers\",\"postponed (rain) rescheduled for may 14\",\"postponed (rain) rescheduled for may 14\",\"postponed (rain) rescheduled for may 14\",\"postponed (rain) rescheduled for may 14\"],[\"may 13\",\"tigers\",\"6 - 3\",\"morris (2 - 5)\",\"17068\",\"19 - 13\"],[\"may 14\",\"tigers\",\"8 - 3 (10)\",\"henneman (0 - 3)\",\"10833\",\"20 - 13\"],[\"may 15\",\"mariners\",\"4 - 3 (10)\",\"acker (0 - 1)\",\"41108\",\"20 - 14\"],[\"may 16\",\"mariners\",\"4 - 2\",\"stottlemyre (4 - 4)\",\"45640\",\"20 - 15\"],[\"may 17\",\"mariners\",\"14 - 6\",\"key (4 - 2)\",\"47283\",\"20 - 16\"],[\"may 18\",\"angels\",\"4 - 2\",\"stieb (5 - 2)\",\"49339\",\"20 - 17\"],[\"may 19\",\"angels\",\"11 - 9\",\"ward (1 - 1)\",\"49335\",\"20 - 18\"],[\"may 20\",\"angels\",\"5 - 1\",\"langston (3 - 4)\",\"49421\",\"21 - 18\"],[\"may 21\",\"athletics\",\"4 - 1\",\"stottlemyre (4 - 5)\",\"49471\",\"21 - 19\"],[\"may 22\",\"athletics\",\"5 - 4\",\"wills (3 - 2)\",\"49559\",\"21 - 20\"],[\"may 23\",\"angels\",\"5 - 4\",\"ward (1 - 2)\",\"25179\",\"21 - 21\"],[\"may 24\",\"angels\",\"4 - 3 (11)\",\"henke (0 - 1)\",\"24460\",\"21 - 22\"],[\"may 25\",\"mariners\",\"3 - 1 (11)\",\"swift (2 - 2)\",\"15334\",\"22 - 22\"],[\"may 26\",\"mariners\",\"11 - 4\",\"holman (6 - 3)\",\"25004\",\"23 - 22\"],[\"may 27\",\"mariners\",\"5 - 1\",\"johnson (3 - 3)\",\"25858\",\"24 - 22\"],[\"may 28\",\"athletics\",\"1 - 0\",\"moore (4 - 4)\",\"45005\",\"25 - 22\"],[\"may 29\",\"athletics\",\"2 - 1\",\"stewart (8 - 2)\",\"25255\",\"26 - 22\"],[\"may 30\",\"athletics\",\"8 - 5\",\"blair (0 - 1)\",\"24257\",\"26 - 23\"]]\nQuestion = Is it true that with a record of 20 - 13 , henneman (0 - 3) lost the game?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    losses = get_column_by_name(table_data, \"loss\")\n    records = get_column_by_name(table_data, \"record\")\n    for loss, record in zip(losses, records):\n        if record == \"20 - 13\" and loss == \"henneman (0 - 3)\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "2917f472-f7da-4cb2-a4f9-bed957aaeb18", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 fc schalke 04 season\ntable_data = [[\"nat\", \"name\", \"moving from\", \"type\", \"transfer window\", \"ends\", \"transfer fee\"],[\"ned\", \"engelaar\", \"twente\", \"transfer\", \"summer\", \"2011\", \"6 m\"],[\"per\", \"farfán\", \"psv\", \"transfer\", \"summer\", \"2012\", \"10 m\"],[\"mar\", \"amsif\", \"youth system\", \"promotion\", \"summer\", \"2010\", \"n / a\"],[\"geo\", \"kenia\", \"youth system\", \"promotion\", \"summer\", \"2012\", \"n / a\"],[\"per\", \"zambrano\", \"youth system\", \"promotion\", \"summer\", \"2012\", \"n / a\"]]\nQuestion = Is it true that the nat of ned moved from twente?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    nats = get_column_by_name(table_data, \"nat\")\n    moving_froms = get_column_by_name(table_data, \"moving from\")\n    answer = False\n    for nat, moving_from in zip(nats, moving_froms):\n        if nat.lower() == \"ned\" and moving_from.lower() == \"twente\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "99c11fe8-23d2-4fb3-99b9-e390a1429f8c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1989 all - ireland senior hurling championship\ntable_data = [[\"rank\", \"player\", \"county\", \"tally\", \"total\", \"matches\", \"average\"],[\"1\", \"nicky english\", \"tipperary\", \"4 - 38\", \"50\", \"4\", \"12.50\"],[\"2\", \"adrian ronan\", \"kilkenny\", \"1 - 21\", \"24\", \"3\", \"8.00\"],[\"2\", \"mark corrigan\", \"offaly\", \"4 - 12\", \"24\", \"3\", \"8.00\"],[\"4\", \"finbarr delaney\", \"cork\", \"1 - 19\", \"23\", \"2\", \"8.00\"],[\"5\", \"pat fox\", \"tipperary\", \"3 - 11\", \"20\", \"4\", \"5.00\"]]\nQuestion = Is it true that for the tally 1 - 19 , the number of matches is 2?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    tallies = get_column_by_name(table_data, \"tally\")\n    matches = get_column_by_name(table_data, \"matches\")\n    for tally, match in zip(tallies, matches):\n        if tally == \"1 - 19\":\n            answer = equal_to(match, \"2\")\n            break \n    return answer\n\n### END"}
{"id": "f9d622cc-0ee9-457b-b11b-4917d0436cc0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 issf world cup final (shotgun)\ntable_data = [[\"shooter\", \"event\", \"rank points\", \"score points\", \"total\"],[\"georgios achilleos ( cyp )\", \"wcf 2007\", \"defending champion\", \"defending champion\", \"defending champion\"],[\"vincent hancock ( usa )\", \"og beijing\", \"olympic gold medalist\", \"olympic gold medalist\", \"olympic gold medalist\"],[\"tore brovold ( nor )\", \"og beijing\", \"olympic silver medalist\", \"olympic silver medalist\", \"olympic silver medalist\"],[\"anthony terras ( fra )\", \"og beijing\", \"olympic bronze medalist\", \"olympic bronze medalist\", \"olympic bronze medalist\"],[\"ariel mauricio flores ( mex )\", \"wc kerrville\", \"15\", \"12\", \"27\"],[\"qu ridong ( chn )\", \"wc beijing\", \"15\", \"10\", \"25\"],[\"andrea benelli ( ita )\", \"wc belgrade\", \"10\", \"13\", \"23\"],[\"konstantin tsuranov ( rus )\", \"wc beijing\", \"10\", \"10\", \"20\"],[\"jan sychra ( cze )\", \"wc belgrade\", \"5\", \"13\", \"18\"],[\"valerio luchini ( ita )\", \"wc kerrville\", \"8\", \"10\", \"18\"],[\"leos hlavacek ( cze )\", \"wc suhl\", \"5\", \"11\", \"16\"],[\"abdullah alrashidi ( kuw )\", \"wc belgrade\", \"3\", \"12\", \"15\"]]\nQuestion = Is it true that the total for tore brovold (nor) is listed as olympic gold medalist?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    shooters = get_column_by_name(table_data, \"shooter\")\n    totals = get_column_by_name(table_data, \"total\")\n    for shooter, total in zip(shooters, totals):\n        if \"tore brovold ( nor )\" in shooter.lower():\n            answer = equal_to(total, \"olympic gold medalist\")\n            break \n    return answer\n\n### END"}
{"id": "adcbda2c-5a54-4586-9d47-ccf38811247d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"10:00\", \"10:30\"],[\"coronation street\", \"marketplace\", \"little mosque on the prairie\", \"no opportunity wasted\", \"the fifth estate\", \"the national\", \"the national\"],[\"etalk\", \"jeopardy!\", \"private practice\", \"private practice\", \"criminal minds\", \"csi : ny\", \"csi : ny\"],[\"et canada\", \"entertainment tonight\", \"back to you\", \"'til death\", \"bones\", \"life\", \"life\"],[\"wheel of fortune\", \"e2\", \"smallville\", \"smallville\", \"the big picture\", \"the big picture\", \"the big picture\"],[\"friends\", \"access hollywood\", \"america 's next top model\", \"america 's next top model\", \"great movies\", \"great movies\", \"great movies\"],[\"the insider\", \"e! news\", \"kid nation\", \"kid nation\", \"bionic woman\", \"the simple life\", \"sunset tan\"],[\"virginie\", \"l'épicerie\", \"le match des étoiles\", \"le match des étoiles\", \"enquête\", \"le téléjournal\", \"le téléjournal\"],[\"star système\", \"la poule aux oeufs d'or\", \"destinées\", \"destinées\", \"les soeurs elliot\", \"le tva 22 heures\", \"le tva 22 heures\"],[\"loft story\", \"450 , chemin du golf\", \"movie\", \"movie\", \"movie\", \"le journal du soir\", \"le journal du soir\"]]\nQuestion = Is it true that 8:00 is the time for kid nation when bionic woman goes on at 9:00?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    column_8 = get_column_by_index(table_data, 2)\n    column_9 = get_column_by_index(table_data, 4)\n    answer = equal_to(\"kid nation\" in column_8, \"bionic woman\" in column_9)\n    return answer\n\n### END"}
{"id": "cc8b2a28-6f80-4a1b-ab96-70ef5a81f433", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 boston celtics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"74\", \"april 1\", \"chicago\", \"106 - 92\", \"allen (22)\", \"perkins (9)\", \"rondo (10)\", \"united center 22225\", \"59 - 15\"],[\"75\", \"april 2\", \"indiana\", \"92 - 77\", \"garnett (20)\", \"garnett (11)\", \"rondo (6)\", \"td banknorth garden 18624\", \"60 - 15\"],[\"76\", \"april 5\", \"charlotte\", \"101 - 78\", \"powe (22)\", \"powe (9)\", \"rondo (5)\", \"charlotte bobcats arena 19403\", \"61 - 15\"],[\"77\", \"april 8\", \"milwaukee\", \"107 - 104 (ot)\", \"garnett (21)\", \"perkins (10)\", \"pierce (4)\", \"bradley center 15921\", \"62 - 15\"],[\"78\", \"april 9\", \"washington\", \"95 - 109\", \"pierce (28)\", \"garnett (14)\", \"pierce , rondo (7)\", \"verizon center 20173\", \"62 - 16\"],[\"79\", \"april 11\", \"milwaukee\", \"102 - 86\", \"rondo (16)\", \"garnett , posey (8)\", \"rondo (10)\", \"td banknorth garden 18624\", \"63 - 16\"],[\"80\", \"april 12\", \"atlanta\", \"99 - 89\", \"garnett (24)\", \"davis (10)\", \"cassell , rondo (5)\", \"philips arena 20098\", \"64 - 16\"],[\"81\", \"april 14\", \"new york\", \"99 - 93\", \"rondo (23)\", \"rondo (10)\", \"rondo (5)\", \"madison square garden 19763\", \"65 - 16\"],[\"82\", \"april 16\", \"new jersey\", \"105 - 94\", \"powe (27)\", \"powe (11)\", \"cassell (4)\", \"td banknorth garden 18624\", \"66 - 16\"]]\nQuestion = Is it true that rondo had high points of 16 during the game played on april 11?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef in_string(str1, str2):\n    return str1 in str2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    high_points = get_column_by_name(table_data, \"high points\")\n    for date, high_point in zip(dates, high_points):\n        if date == \"april 11\" and in_string(\"rondo (16)\", high_point):\n            return True\n    return False\n\n### END"}
{"id": "ae0337f1-c5c4-49a0-b5db-7c94ecd11945", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sinta ozoliņa - kovala\ntable_data = [[\"year\", \"competition\", \"venue\", \"position\", \"notes\"],[\"2005\", \"world youth championships\", \"marrakesh , morocco\", \"25th\", \"39.34 m\"],[\"2006\", \"world junior championships\", \"beijing , china\", \"6th\", \"56.38 m\"],[\"2007\", \"european junior championships\", \"hengelo , netherlands\", \"2nd\", \"57.01 m\"],[\"2008\", \"olympic games\", \"beijing , china\", \"11th\", \"53.38 m\"],[\"2010\", \"european championships\", \"barcelona , spain\", \"13th\", \"56.11 m\"]]\nQuestion = Is it true that in 2010 the finish position was 11th?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    positions = get_column_by_name(table_data, \"position\")\n    for year, position in zip(years, positions):\n        if year == \"2010\":\n            answer = equal_to(position, \"11th\")\n            break \n    return answer\n\n### END"}
{"id": "1916d5a8-61dd-49e6-86d5-b102bb588cc4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = extreme engineering\ntable_data = [[\"no in series\",\"no in season\",\"title\",\"country\",\"project\",\"status at production\",\"original air date\"],[\"70\",\"1\",\"rebuilding new york city 's subway\",\"united states\",\"new york city subway expansion\",\"under construction\",\"april 8 , 2011\"],[\"71\",\"2\",\"drought - proofing australia\",\"australia\",\"wonthaggi desalination plant\",\"under construction\",\"april 15 , 2011\"],[\"72\",\"3\",\"azerbaijan 's amazing transformation\",\"azerbaijan\",\"flame towers and heydar aliyev cultural centre\",\"under construction\",\"april 22 , 2011\"],[\"73\",\"4\",\"london 's olympic aquatic stadium\",\"united kingdom\",\"london aquatics centre\",\"under construction\",\"april 29 , 2011\"],[\"74\",\"5\",\"constructing serbia 's largest bridge\",\"serbia\",\"ada bridge\",\"under construction\",\"june 18 , 2011\"],[\"75\",\"6\",\"amsterdam 's futuristic floating city\",\"netherlands\",\"netherlands land expansion\",\"under construction\",\"june 25 , 2011\"],[\"76\",\"7\",\"building mumbai 's modern airport\",\"india\",\"chhatrapati shivaji international airport\",\"under construction\",\"july 2 , 2011\"]]\nQuestion = Is it true that amsterdam 's futurist floating city project took place in the serbia?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    countries = get_column_by_name(table_data, \"country\")\n    answer = False\n    for title, country in zip(titles, countries):\n        if \"amsterdam 's futuristic floating city\" in title.lower() and \"serbia\" in country.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "3c496213-0bf6-4f58-a389-3a7486be32d0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of venezuelan submissions for the academy award for best foreign language film\ntable_data = [[\"year (ceremony)\", \"original title\", \"film title used in nomination\", \"director\", \"result\"],[\"1978 (50th)\", \"el pez que fuma\", \"el pez que fuma\", \"román chalbaud\", \"not nominated\"],[\"1984 (57th)\", \"la casa de agua\", \"the house of water\", \"jacobo penzo\", \"not nominated\"],[\"1985 (58th)\", \"oriana\", \"oriana\", \"fina torres\", \"not nominated\"],[\"1991 (64th)\", \"jericó\", \"jericho\", \"luis alberto lamata\", \"not nominated\"],[\"1994 (67th)\", \"golpes a mi puerta\", \"knocks at my door\", \"alejandro saderman\", \"not nominated\"],[\"1995 (68th)\", \"sicario\", \"sicario\", \"josé ramón novoa\", \"not nominated\"],[\"1997 (70th)\", \"una vida y dos mandados\", \"one life and two trails\", \"alberto aruelo\", \"not nominated\"],[\"1998 (71st)\", \"rizo\", \"loop\", \"julio sosa\", \"not nominated\"],[\"1999 (72nd)\", \"huelepega : ley de la calle\", \"huelepega\", \"elia schneider\", \"not nominated\"],[\"2000 (73rd)\", \"oro diablo\", \"oro diablo\", \"josé ramón novoa\", \"not nominated\"],[\"2001 (74th)\", \"una casa con vista al mar\", \"a house with a view of the sea\", \"alberto aruelo\", \"not nominated\"],[\"2002 (75th)\", \"la pluma del arcángel\", \"the archangel 's feather\", \"luis manzo\", \"not nominated\"],[\"2003 (76th)\", \"sangrador\", \"sangrador\", \"leonardo henriquez\", \"not nominated\"],[\"2004 (77th)\", \"punto y raya\", \"punto y raya\", \"elia schneider\", \"not nominated\"],[\"2005 (78th)\", \"1888: el extraordinario viaje de santa isabel\", \"1888: the extraordinary voyage of the santa isabel\", \"alfredo anzola\", \"disqualified\"],[\"2006 (79th)\", \"maroa : una niña de la calle\", \"maroa\", \"solveig hoogesteijn\", \"not nominated\"],[\"2007 (80th)\", \"postales de leningrado\", \"postcards from leningrad\", \"mariana rondon\", \"not nominated\"],[\"2008 (81st)\", \"el tinte de la fama\", \"the color of fame\", \"alberto bellame\", \"not nominated\"],[\"2009 (82nd)\", \"libertador morales , el justiciero\", \"libertador morales , el justiciero\", \"efterpi charalambidis\", \"not nominated\"],[\"2010 (83rd)\", \"hermano\", \"hermano\", \"marcel rasquin\", \"not nominated\"],[\"2011 (84th)\", \"the rumble of the stones\", \"el rumor de las piedras\", \"alejandro bellame\", \"not nominated\"],[\"2012 (85th)\", \"rock , paper , scissors\", \"piedra , papel o tijera\", \"hernán jabes\", \"not nominated\"],[\"2013 (86th)\", \"breach in the silence\", \"brecha en el silencio\", \"luis rodríguez , andrés rodríguez\", \"tbd\"]]\nQuestion = Is it true that director elia schneider 's punto y raya 's result is not nominated?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    directors = get_column_by_name(table_data, \"director\")\n    film_titles = get_column_by_name(table_data, \"film title used in nomination\")\n    results = get_column_by_name(table_data, \"result\")\n    for director, film_title, result in zip(directors, film_titles, results):\n        if equal_to(director, \"elia schneider\") and equal_to(film_title, \"punto y raya\"):\n            answer = equal_to(result, \"not nominated\")\n            break \n    return answer\n\n### END"}
{"id": "72e2b6b7-334e-4ebd-b6a5-c6493ae84a25", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = dock jumping\ntable_data = [[\"date\", \"distance\", \"handler\", \"event\", \"location\"],[\"7 july 2000\", \"ft4in (m)\", \"beth gutteridge\", \"espn great outdoor games\", \"lake placid , ny\"],[\"8 july 2001\", \"ft1in (m)\", \"mike wallace\", \"espn great outdoor games\", \"lake placid , ny\"],[\"20 february 2002\", \"ft3in (m)\", \"mike jackson\", \"indianapolis boat , sport & travel show\", \"indianapolis , in\"],[\"1 may 2002\", \"ft4in (m)\", \"john kline\", \"espn2 super retriever series\", \"northfield , mn\"],[\"6 july 2002\", \"ft6in (m)\", \"mike jackson\", \"espn great outdoor games\", \"lake placid , ny\"],[\"7 august 2005\", \"ft5in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"21 august 2005\", \"ft7in (m)\", \"kevin meese\", \"big nickle time cabela 's\", \"hamburg , pa\"],[\"9 october 2005\", \"ft10in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"30 may 2010\", \"ft11.59in (m)\", \"rande murphy\", \"super retriever series crown championship\", \"little rock , ar\"],[\"11 july 2010\", \"ft1in (m)\", \"melissa ness\", \"2010 ukc premier\", \"richmond , in\"],[\"29 may 2011\", \"ft7in (m)\", \"tony lampert\", \"super retriever series crown championship\", \"little rock , ar\"],[\"07 oct 2011\", \"ft11in (m)\", \"tony lampert\", \"david letterman show , october 7 2011\", \"new york , ny\"]]\nQuestion = Is it true that bass pro shops events had distances of ft5in (m) and ft10in (m)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    distances = get_column_by_name(table_data, \"distance\")\n    answer = False\n    for event, distance in zip(events, distances):\n        if \"bass pro shops\" in event.lower():\n            if equal_to(distance, \"ft5in (m)\") or equal_to(distance, \"ft10in (m)\"):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "fb2d1d5e-b568-46da-bf1d-8b10e642ca3d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2003 - 04 isu junior grand prix\ntable_data = [[\"rank\", \"nation\", \"gold\", \"silver\", \"bronze\", \"total\"],[\"1\", \"russia\", \"10\", \"14\", \"8\", \"32\"],[\"2\", \"united states\", \"9\", \"6\", \"7\", \"22\"],[\"3\", \"canada\", \"4\", \"2\", \"10\", \"16\"],[\"4\", \"japan\", \"4\", \"5\", \"4\", \"13\"],[\"5\", \"hungary\", \"4\", \"0\", \"2\", \"6\"],[\"6\", \"czech republic\", \"2\", \"1\", \"1\", \"4\"],[\"6\", \"ukraine\", \"1\", \"3\", \"0\", \"4\"],[\"6\", \"italy\", \"0\", \"1\", \"3\", \"4\"],[\"7\", \"sweden\", \"1\", \"2\", \"0\", \"3\"],[\"8\", \"israel\", \"1\", \"1\", \"0\", \"2\"],[\"9\", \"finland\", \"0\", \"0\", \"1\", \"1\"],[\"9\", \"france\", \"0\", \"1\", \"0\", \"1\"]]\nQuestion = Is it true that the nation of ukraine has 0 bronze medals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    nations = get_column_by_name(table_data, \"nation\")\n    bronzes = get_column_by_name(table_data, \"bronze\")\n    for nation, bronze in zip(nations, bronzes):\n        if nation.lower() == \"ukraine\":\n            answer = equal_to(bronze, \"0\")\n            break \n    return answer\n\n### END"}
{"id": "e68c529f-ed2c-411c-9043-1064367332da", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1925 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"8.11 (59)\", \"st kilda\", \"8.8 (56)\", \"glenferrie oval\", \"10000\", \"8 august 1925\"],[\"geelong\", \"11.20 (86)\", \"richmond\", \"4.8 (32)\", \"corio oval\", \"13500\", \"8 august 1925\"],[\"fitzroy\", \"17.18 (120)\", \"north melbourne\", \"11.8 (74)\", \"brunswick street oval\", \"7000\", \"8 august 1925\"],[\"south melbourne\", \"13.14 (92)\", \"footscray\", \"12.15 (87)\", \"lake oval\", \"15000\", \"8 august 1925\"],[\"melbourne\", \"7.10 (52)\", \"collingwood\", \"9.11 (65)\", \"mcg\", \"33642\", \"8 august 1925\"],[\"essendon\", \"15.11 (101)\", \"carlton\", \"8.14 (62)\", \"windy hill\", \"10000\", \"8 august 1925\"]]\nQuestion = Is it true that mcg was the venue on the list that had a crowd size of 33642?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"venue\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    for venue, crowd in zip(venues, crowds):\n        if venue.lower() == \"mcg\":\n            answer = equal_to(crowd, \"33642\")\n            break \n    return answer\n\n### END"}
{"id": "54ceac6e-79e8-4887-b9b7-5a0004f31d49", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1979 new orleans saints season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 2 , 1979\", \"atlanta falcons\", \"l 40 - 34\", \"70940\"],[\"2\", \"september 9 , 1979\", \"green bay packers\", \"l 28 - 19\", \"53184\"],[\"3\", \"september 16 , 1979\", \"philadelphia eagles\", \"l 26 - 14\", \"54212\"],[\"4\", \"september 23 , 1979\", \"san francisco 49ers\", \"w 30 - 21\", \"39727\"],[\"5\", \"september 30 , 1979\", \"new york giants\", \"w 24 - 14\", \"51543\"],[\"6\", \"october 7 , 1979\", \"los angeles rams\", \"l 35 - 17\", \"68986\"],[\"7\", \"october 14 , 1979\", \"tampa bay buccaneers\", \"w 42 - 14\", \"67640\"],[\"8\", \"october 21 , 1979\", \"detroit lions\", \"w 17 - 7\", \"57428\"],[\"9\", \"october 28 , 1979\", \"washington redskins\", \"w 14 - 10\", \"52133\"],[\"10\", \"november 4 , 1979\", \"denver broncos\", \"l 10 - 3\", \"74482\"],[\"11\", \"november 11 , 1979\", \"san francisco 49ers\", \"w 31 - 20\", \"65551\"],[\"12\", \"november 18 , 1979\", \"seattle seahawks\", \"l 38 - 24\", \"60055\"],[\"13\", \"november 25 , 1979\", \"atlanta falcons\", \"w 37 - 6\", \"42815\"],[\"14\", \"december 3 , 1979\", \"oakland raiders\", \"l 42 - 35\", \"65541\"],[\"15\", \"december 9 , 1979\", \"san diego chargers\", \"l 35 - 0\", \"61059\"],[\"16\", \"december 16 , 1979\", \"los angeles rams\", \"w 29 - 14\", \"53879\"]]\nQuestion = Is it true that the attendance of the game after week 12 was 60055?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    week_12_index = weeks.index(\"12\")\n    week_13_attendance = attendances[week_12_index + 1]\n    answer = equal_to(week_13_attendance, \"60055\")\n    return answer\n\n### END"}
{"id": "1e2f8de9-1d5b-4b0e-8d86-ad28966ee02b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = longyan\ntable_data = [[\"english name\", \"simplified\", \"traditional\", \"pinyin\", \"hakka\", \"area\", \"population\", \"density\"],[\"xinluo district\", \"新罗区\", \"新羅區\", \"xīnluó qū\", \"sîn - lò - khî\", \"2685\", \"662429\", \"247\"],[\"zhangping city\", \"漳平市\", \"漳平市\", \"zhāngpíng shì\", \"chông - phìn - sṳ\", \"2975\", \"240194\", \"81\"],[\"changting county\", \"长汀县\", \"長汀縣\", \"chángtīng xiàn\", \"tshòng - tin - yen\", \"3099\", \"393390\", \"127\"],[\"yongding county\", \"永定县\", \"永定縣\", \"yǒngdìng xiàn\", \"yún - thin - yen\", \"2216\", \"362658\", \"164\"],[\"shanghang county\", \"上杭县\", \"上杭縣\", \"shàngháng xiàn\", \"sông - hông - yen\", \"2879\", \"374047\", \"130\"],[\"wuping county\", \"武平县\", \"武平縣\", \"wǔpíng xiàn\", \"vú - phìn - yen\", \"2630\", \"278182\", \"106\"],[\"liancheng county\", \"连城县\", \"連城縣\", \"liánchéng xiàn\", \"lièn - sàng - yen\", \"2596\", \"248645\", \"96\"]]\nQuestion = Is it true that the area for the xinluo district is 2685?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    english_names = get_column_by_name(table_data, \"english name\")\n    areas = get_column_by_name(table_data, \"area\")\n    for english_name, area in zip(english_names, areas):\n        if english_name.lower() == \"xinluo district\":\n            answer = equal_to(area, \"2685\")\n            break \n    return answer\n\n### END"}
{"id": "5c02e793-3967-4ec6-b4ae-1f11e3228cb6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1959 chicago cardinals season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"venue\", \"attendance\"],[\"1\", \"september 27 , 1959\", \"washington redskins\", \"w 49 - 21\", \"soldier field\", \"21892\"],[\"2\", \"october 4 , 1959\", \"cleveland browns\", \"l 34 - 7\", \"soldier field\", \"19935\"],[\"3\", \"october 11 , 1959\", \"washington redskins\", \"l 23 - 14\", \"griffith stadium\", \"25937\"],[\"4\", \"october 18 , 1959\", \"cleveland browns\", \"l 17 - 7\", \"cleveland stadium\", \"46422\"],[\"5\", \"october 25 , 1959\", \"philadelphia eagles\", \"l 28 - 24\", \"metropolitan stadium\", \"20112\"],[\"6\", \"november 1 , 1959\", \"pittsburgh steelers\", \"w 45 - 24\", \"soldier field\", \"23187\"],[\"7\", \"november 8 , 1959\", \"new york giants\", \"l 9 - 3\", \"yankee stadium\", \"56779\"],[\"8\", \"november 15 , 1959\", \"philadelphia eagles\", \"l 27 - 17\", \"franklin field\", \"28887\"],[\"9\", \"november 22 , 1959\", \"new york giants\", \"l 30 - 20\", \"metropolitan stadium\", \"26625\"],[\"10\", \"november 29 , 1959\", \"chicago bears\", \"l 31 - 7\", \"soldier field\", \"48687\"],[\"11\", \"december 6 , 1959\", \"detroit lions\", \"l 45 - 21\", \"briggs stadium\", \"45811\"],[\"12\", \"december 13 , 1959\", \"pittsburgh steelers\", \"l 35 - 20\", \"forbes field\", \"19011\"]]\nQuestion = Is it true that cleveland browns was week 2 's opponent?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    answer = False\n    for week, opponent in zip(weeks, opponents):\n        if week == \"2\" and opponent.lower() == \"cleveland browns\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "bbebfce2-ab25-4302-a186-fb70ff9dbc31", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1950 french grand prix\ntable_data = [[\"driver\",\"entrant\",\"constructor\",\"chassis\",\"engine\",\"tyre\"],[\"nino farina\",\"sa alfa romeo\",\"alfa romeo\",\"alfa romeo 158\",\"alfa romeo l8s\",\"p\"],[\"luigi fagioli\",\"sa alfa romeo\",\"alfa romeo\",\"alfa romeo 158\",\"alfa romeo l8s\",\"p\"],[\"juan manuel fangio\",\"sa alfa romeo\",\"alfa romeo\",\"alfa romeo 158\",\"alfa romeo l8s\",\"p\"],[\"luigi villoresi\",\"scuderia ferrari\",\"ferrari\",\"ferrari 125\",\"ferrari v12s\",\"p\"],[\"alberto ascari\",\"scuderia ferrari\",\"ferrari\",\"ferrari 125\",\"ferrari v12s\",\"p\"],[\"raymond sommer\",\"automobiles talbot - darracq sa\",\"talbot - lago\",\"talbot - lago t26c - gs\",\"talbot l6\",\"d\"],[\"peter whitehead\",\"private\",\"ferrari\",\"ferrari 125\",\"ferrari v12s\",\"p\"],[\"philippe étancelin\",\"private\",\"talbot - lago\",\"talbot - lago t26c - da\",\"talbot l6\",\"d\"],[\"yves giraud cabantous\",\"automobiles talbot - darracq sa\",\"talbot - lago\",\"talbot - lago t26c - da\",\"talbot l6\",\"d\"],[\"louis rosier\",\"automobiles talbot - darracq sa\",\"talbot - lago\",\"talbot - lago t26c - da\",\"talbot l6\",\"d\"],[\"pierre levegh\",\"private\",\"talbot - lago\",\"talbot - lago t26c\",\"talbot l6\",\"d\"],[\"eugène chaboud\",\"ecurie lutetia\",\"talbot - lago\",\"talbot - lago t26c\",\"talbot l6\",\"d\"],[\"charles pozzi\",\"private\",\"talbot - lago\",\"talbot - lago t26c\",\"talbot l6\",\"d\"],[\"franco rol\",\"officine alfieri maserati\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"p\"],[\"louis chiron\",\"officine alfieri maserati\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"p\"],[\"reg parnell\",\"scuderia ambrosiana\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"d\"],[\"david hampshire\",\"scuderia ambrosiana\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"d\"],[\"josé froilán gonzález\",\"scuderia achille varzi\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"p\"],[\"gianfranco comotti\",\"scuderia achille varzi\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"p\"],[\"felice bonetto\",\"scuderia milano\",\"maserati\",\"maserati 4clt - 50\",\"milano l4s\",\"p\"],[\"johnny claes\",\"ecurie belge\",\"talbot - lago\",\"talbot - lago t26c\",\"talbot l6\",\"d\"],[\"robert manzon\",\"equipe gordini\",\"simca - gordini\",\"simca - gordini t15\",\"gordini l4s\",\"e\"]]\nQuestion = Is it true that alfa romeo constructed 7 different sa alfa romeo with a e tyre?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    entrants = get_column_by_name(table_data, \"entrant\")\n    constructors = get_column_by_name(table_data, \"constructor\")\n    tyres = get_column_by_name(table_data, \"tyre\")\n    count = 0\n    for entrant, constructor, tyre in zip(entrants, constructors, tyres):\n        if entrant.lower() == \"sa alfa romeo\" and constructor.lower() == \"alfa romeo\" and tyre.lower() == \"e\":\n            count += 1\n    answer = equal_to(count, 7)\n    return answer\n\n### END"}
{"id": "4a2f2650-4fd5-4b78-ae85-1baeed4e22a2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of rna structure prediction software\ntable_data = [[\"name\", \"species specific\", \"intra - molecular structure\", \"comparative\", \"link\"],[\"diana - microt\", \"human , mouse\", \"no\", \"yes\", \"webserver\"],[\"microtar\", \"no\", \"no\", \"no\", \"sourcecode\"],[\"mitarget\", \"no\", \"no\", \"no\", \"webserver\"],[\"mirror\", \"no\", \"no\", \"no\", \"webserver\"],[\"pictar\", \"8 vertebrates\", \"no\", \"yes\", \"predictions\"],[\"pita\", \"no\", \"yes\", \"no\", \"executable , webserver , predictions\"],[\"rna22\", \"no\", \"no\", \"no\", \"predictions custom\"],[\"rnahybrid\", \"no\", \"no\", \"no\", \"sourcecode , webserver\"],[\"sylamer\", \"no\", \"no\", \"no\", \"sourcecode webserver\"],[\"taref\", \"yes\", \"no\", \"no\", \"server / sourcecode\"],[\"p - taref\", \"yes\", \"no\", \"no\", \"server / standalone\"],[\"targetscan\", \"vertebrates , flies , nematodes\", \"evaluated indirectly\", \"yes\", \"sourcecode , webserver\"]]\nQuestion = Is it true that pictar has a comparative of yes?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    comparatives = get_column_by_name(table_data, \"comparative\")\n    for name, comparative in zip(names, comparatives):\n        if name.lower() == \"pictar\":\n            answer = equal_to(comparative, \"yes\")\n            break \n    return answer\n\n### END"}
{"id": "c93d0578-e6ed-4404-a210-c1f37b7290ed", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of south american countries by gdp (ppp) per capita\ntable_data = [[\"south american rank\", \"world rank\", \"nation\", \"2011 (imf)\", \"2008 (cia factbook)\"],[\"1\", \"51\", \"argentina\", \"17376\", \"14500\"],[\"2\", \"55\", \"chile\", \"16171\", \"15400\"],[\"3\", \"59\", \"uruguay\", \"15469\", \"12300\"],[\"4\", \"71\", \"venezuela\", \"12407\", \"13500\"],[\"5\", \"74\", \"brazil\", \"11845\", \"10513\"],[\"6\", \"82\", \"colombia\", \"10155\", \"9000\"],[\"7\", \"83\", \"peru\", \"10000\", \"8500\"],[\"8\", \"86\", \"suriname\", \"9492\", \"8900\"],[\"9\", \"91\", \"ecuador\", \"8335\", \"7700\"],[\"10\", \"96\", \"guyana\", \"7541\", \"4000\"],[\"11\", \"110\", \"paraguay\", \"5548\", \"4400\"]]\nQuestion = Is it true that venezuela was ranked 4th in south american and 74th in the world?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    south_american_ranks = get_column_by_name(table_data, \"south american rank\")\n    world_ranks = get_column_by_name(table_data, \"world rank\")\n    nations = get_column_by_name(table_data, \"nation\")\n    for south_american_rank, world_rank, nation in zip(south_american_ranks, world_ranks, nations):\n        if nation.lower() == \"venezuela\":\n            answer = equal_to(south_american_rank, \"4\") and equal_to(world_rank, \"74\")\n            break \n    return answer\n\n### END"}
{"id": "6c385b82-afe6-4eb5-9901-7a04acd116cc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = orlando magic all - time roster\ntable_data = [[\"player\",\"nationality\",\"position\",\"years in orlando\",\"school / club team\"],[\"matt barnes\",\"united states\",\"guard - forward\",\"2009 - 2010\",\"ucla\"],[\"andre barrett\",\"united states\",\"guard\",\"2005\",\"seton hall\"],[\"brandon bass\",\"united states\",\"forward\",\"2009 - 2011\",\"louisiana state\"],[\"tony battie\",\"united states\",\"forward - center\",\"2004 - 2009\",\"texas tech\"],[\"david benoit\",\"united states\",\"forward\",\"1998\",\"alabama\"],[\"keith bogans\",\"united states\",\"guard\",\"2003 - 2004\",\"kentucky\"],[\"keith bogans\",\"united states\",\"guard\",\"2006 - 2009\",\"kentucky\"],[\"anthony bonner\",\"united states\",\"forward\",\"1995 - 1996\",\"st louis\"],[\"anthony bowie\",\"united states\",\"guard\",\"1991 - 1996\",\"oklahoma\"],[\"earl boykins\",\"united states\",\"guard\",\"1999\",\"eastern michigan\"],[\"michael bradley\",\"united states\",\"forward\",\"2004 - 2005\",\"villanova\"],[\"dee brown\",\"united states\",\"guard\",\"2000 - 2002\",\"jacksonville\"],[\"jud buechler\",\"united states\",\"guard - forward\",\"2001 - 2002\",\"arizona\"],[\"pat burke\",\"ireland\",\"center\",\"2002 - 2003\",\"auburn\"]]\nQuestion = Is it true that the unites states has a player of keith bogans in the years 2006 - 2009 in orlando?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    years_in_orlando = get_column_by_name(table_data, \"years in orlando\")\n    answer = False\n    for player, nationality, year in zip(players, nationalities, years_in_orlando):\n        if player.lower() == \"keith bogans\" and nationality.lower() == \"united states\" and year == \"2006 - 2009\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "94679212-62cf-42af-acdf-7987397688bd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of south american countries by gdp (ppp) per capita\ntable_data = [[\"south american rank\", \"world rank\", \"nation\", \"2011 (imf)\", \"2008 (cia factbook)\"],[\"1\", \"51\", \"argentina\", \"17376\", \"14500\"],[\"2\", \"55\", \"chile\", \"16171\", \"15400\"],[\"3\", \"59\", \"uruguay\", \"15469\", \"12300\"],[\"4\", \"71\", \"venezuela\", \"12407\", \"13500\"],[\"5\", \"74\", \"brazil\", \"11845\", \"10513\"],[\"6\", \"82\", \"colombia\", \"10155\", \"9000\"],[\"7\", \"83\", \"peru\", \"10000\", \"8500\"],[\"8\", \"86\", \"suriname\", \"9492\", \"8900\"],[\"9\", \"91\", \"ecuador\", \"8335\", \"7700\"],[\"10\", \"96\", \"guyana\", \"7541\", \"4000\"],[\"11\", \"110\", \"paraguay\", \"5548\", \"4400\"]]\nQuestion = Is it true that the south american rank for venezuela is 4 when 2011 (imf) more than 12407?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    nations = get_column_by_name(table_data, \"nation\")\n    imf_2011 = get_column_by_name(table_data, \"2011 (imf)\")\n    ranks = get_column_by_name(table_data, \"south american rank\")\n    for nation, imf, rank in zip(nations, imf_2011, ranks):\n        if nation.lower() == \"venezuela\" and int(rank) == 4:\n            answer = greater(int(imf), 12407)\n            break \n    return answer\n\n### END"}
{"id": "4d55fd72-bc42-4d21-b61f-ec68486bc38b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = high jump\ntable_data = [[\"pos\", \"mark\", \"athlete\", \"nationality\", \"venue\", \"date\"],[\"1\", \"2.09 m (6ft10¼in)\", \"stefka kostadinova\", \"bulgaria\", \"rome\", \"30 august 1987\"],[\"2\", \"2.08 m (6ft9¾in)\", \"blanka vlašić\", \"croatia\", \"zagreb\", \"31 august 2009\"],[\"3\", \"2.07 m (6ft9¼in)\", \"lyudmila andonova\", \"bulgaria\", \"berlin\", \"20 july 1984\"],[\"3\", \"2.07 m (6ft9¼in)\", \"anna chicherova\", \"russia\", \"cheboksary\", \"22 july 2011\"],[\"5\", \"2.06 m (6ft9in)\", \"kajsa bergqvist\", \"sweden\", \"eberstadt\", \"26 july 2003\"],[\"5\", \"2.06 m (6ft9in)\", \"hestrie cloete\", \"south africa\", \"paris\", \"31 august 2003\"],[\"5\", \"2.06 m (6ft9in)\", \"yelena slesarenko\", \"russia\", \"athens\", \"28 august 2004\"],[\"5\", \"2.06 m (6ft9in)\", \"ariane friedrich\", \"germany\", \"berlin\", \"14 june 2009\"],[\"9\", \"2.05 m (6ft8½in)\", \"tamara bykova\", \"soviet union\", \"kiev\", \"22 june 1984\"],[\"9\", \"2.05 m (6ft8½in)\", \"heike henkel\", \"germany\", \"tokyo\", \"31 august 1991\"],[\"9\", \"2.05 m (6ft8½in)\", \"inha babakova\", \"ukraine\", \"tokyo\", \"15 september 1995\"],[\"9\", \"2.05 m (6ft8½in)\", \"tia hellebaut\", \"belgium\", \"beijing\", \"23 august 2008\"],[\"9\", \"2.05 m (6ft8½in)\", \"chaunté lowe\", \"usa\", \"des moines\", \"26 june 2010\"]]\nQuestion = Is it true that the athlete from ukraine played at the venue in tokyo?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    venues = get_column_by_name(table_data, \"venue\")\n    answer = False\n    for nationality, venue in zip(nationalities, venues):\n        if \"ukraine\" in nationality.lower() and \"tokyo\" in venue.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "e386aca0-c4ea-4c8e-9598-a5a0a90d03f6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 nbl season\ntable_data = [[\"date\",\"home team\",\"score\",\"away team\",\"venue\",\"crowd\",\"box score\",\"report\"],[\"24 february\",\"south dragons\",\"94 - 81\",\"townsville crocodiles\",\"hisense arena\",\"3613\",\"box score\",\"-\"],[\"25 february\",\"melbourne tigers\",\"117 - 99\",\"new zealand breakers\",\"state netball and hockey centre\",\"2998\",\"box score\",\"-\"],[\"26 february\",\"townsville crocodiles\",\"82 - 77\",\"south dragons\",\"townsville entertainment centre\",\"4505\",\"box score\",\"-\"],[\"27 february\",\"new zealand breakers\",\"97 - 103\",\"melbourne tigers\",\"north shore events centre\",\"4500\",\"box score\",\"-\"],[\"28 february\",\"south dragons\",\"101 - 78\",\"townsville crocodiles\",\"hisense arena\",\"3007\",\"box score\",\"-\"]]\nQuestion = Is it true that the townsville crocodiles and south dragons played at the townsville entertainment centre?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    answer = False\n    for home_team, away_team, venue in zip(home_teams, away_teams, venues):\n        if home_team.lower() == \"townsville crocodiles\" and away_team.lower() == \"south dragons\" and venue.lower() == \"townsville entertainment centre\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "4dd9d533-c370-486a-a87e-329bf81fd4aa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = anna kournikova career statistics\ntable_data = [[\"outcome\", \"year\", \"championship\", \"surface\", \"partner\", \"opponents in final\", \"score in final\"],[\"winners\", \"1999\", \"indian wells\", \"hard\", \"martina hingis\", \"mary joe fernández jana novotná\", \"6 - 2 , 6 - 2\"],[\"winners\", \"1999\", \"rome\", \"clay\", \"martina hingis\", \"alexandra fusai nathalie tauziat\", \"6 - 2 , 6 - 2\"],[\"runner - up\", \"2000\", \"indian wells\", \"hard\", \"natasha zvereva\", \"lindsay davenport corina morariu\", \"6 - 3 , 6 - 2\"],[\"runner - up\", \"2000\", \"moscow\", \"carpet\", \"martina hingis\", \"julie halard - decugis ai sugiyama\", \"4 - 6 , 6 - 4 , 7 - 6 (7 - 5)\"],[\"winners\", \"2000\", \"zürich\", \"carpet\", \"martina hingis\", \"kimberly po anne - gaëlle sidot\", \"6 - 3 , 6 - 4\"],[\"runner - up\", \"2001\", \"tokyo\", \"hard\", \"iroda tulyaganova\", \"lisa raymond rennae stubbs\", \"7 - 6 (7 - 5) , 6 - 2 , 7 - 6 (8 - 6)\"]]\nQuestion = Is it true that natasha zvereva was the partner when they played on carpet in tokyo?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    championships = get_column_by_name(table_data, \"championship\")\n    surfaces = get_column_by_name(table_data, \"surface\")\n    partners = get_column_by_name(table_data, \"partner\")\n    answer = False\n    for championship, surface, partner in zip(championships, surfaces, partners):\n        if championship.lower() == \"tokyo\" and surface.lower() == \"carpet\":\n            if partner.lower() == \"natasha zvereva\":\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "7e124cdf-71d2-454a-a0c4-91f467b05bb5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 - 02 prva hnl\ntable_data = [[\"team\",\"manager\",\"home city\",\"stadium\",\"capacity\"],[\"cibalia\",\"davor čop\",\"vinkovci\",\"stadion hnk cibalia\",\"9920\"],[\"čakovec\",\"rajko magić\",\"čakovec\",\"stadion src mladost\",\"8000\"],[\"dinamo zagreb\",\"ilija lončarević\",\"zagreb\",\"stadion maksimir\",\"37168\"],[\"hajduk split\",\"nenad gračan\",\"split\",\"gradski stadion u poljudu\",\"35000\"],[\"hrvatski dragovoljac\",\"luka bonačić\",\"zagreb\",\"stadion nšc stjepan spajić\",\"5000\"],[\"kamen ingrad\",\"tomislav radić\",\"velika\",\"stadion kamen ingrada\",\"8000\"],[\"marsonia\",\"milo nižetić\",\"slavonski brod\",\"gradski stadion uz savu\",\"10000\"],[\"osijek\",\"vlado bilić\",\"osijek\",\"stadion gradski vrt\",\"19500\"],[\"pomorac\",\"predrag stilinović\",\"kostrena\",\"stadion žuknica\",\"3000\"],[\"rijeka\",\"ivan katalinić\",\"rijeka\",\"stadion na kantridi\",\"10275\"],[\"slaven belupo\",\"dražen besek\",\"koprivnica\",\"gradski stadion u koprivnici\",\"4000\"],[\"šibenik\",\"vjekoslav lokica\",\"šibenik\",\"stadion šubićevac\",\"8000\"],[\"tšk topolovac\",\"ivica vidović\",\"topolovac\",\"gradski stadion sisak\",\"8000\"],[\"varteks\",\"branko janžek\",\"varaždin\",\"stadion nk varteks\",\"10800\"],[\"zadar\",\"stanko mršić\",\"zadar\",\"stadion stanovi\",\"5860\"],[\"nk zagreb\",\"zlatko kranjčar\",\"zagreb\",\"stadion u kranjčevićevoj ulici\",\"8850\"]]\nQuestion = Is it true that slaven belupo plays at the stadion src mladost?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    for team, stadium in zip(teams, stadiums):\n        if team.lower() == \"slaven belupo\":\n            answer = stadium.lower() == \"stadion src mladost\"\n            break\n    return answer\n\n### END"}
{"id": "f6f06442-e379-46a7-93b7-c48f4ab365ee", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 issf world cup final (rifle and pistol)\ntable_data = [[\"shooter\", \"event\", \"rank points\", \"score points\", \"total\"],[\"zhu qinan ( chn )\", \"wcf 2007\", \"defending champion\", \"defending champion\", \"defending champion\"],[\"abhinav bindra ( ind )\", \"og beijing\", \"olympic gold medalist\", \"olympic gold medalist\", \"olympic gold medalist\"],[\"henri häkkinen ( fin )\", \"og beijing\", \"olympic bronze medalist\", \"olympic bronze medalist\", \"olympic bronze medalist\"],[\"alin george moldoveanu ( rou )\", \"wc munich\", \"15\", \"14\", \"29\"],[\"péter sidi ( hun )\", \"wc rio de janeiro\", \"15\", \"13\", \"28\"],[\"matthew emmons ( usa )\", \"wc beijing\", \"10\", \"14\", \"24\"],[\"cao yifei ( chn )\", \"wc milan\", \"10\", \"11\", \"21\"],[\"gagan narang ( ind )\", \"wc beijing\", \"8\", \"12\", \"20\"],[\"thomas farnik ( aut )\", \"wc munich\", \"8\", \"12\", \"20\"],[\"nemanja mirosavljev ( srb )\", \"wc rio de janeiro\", \"8\", \"11\", \"19\"],[\"artur ayvazyan ( ukr )\", \"wc milan\", \"5\", \"12\", \"17\"]]\nQuestion = Is it true that péter sidi ( hun ) is the shooter who has wc munich as the event , and 5 as the rank points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    shooters = get_column_by_name(table_data, \"shooter\")\n    events = get_column_by_name(table_data, \"event\")\n    rank_points = get_column_by_name(table_data, \"rank points\")\n    for shooter, event, rank_point in zip(shooters, events, rank_points):\n        if shooter.lower() == \"péter sidi ( hun )\" and event.lower() == \"wc munich\" and equal_to(rank_point, \"5\"):\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "9ef1e474-c2ce-4c50-ade3-1047b4297d01", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of rna structure prediction software\ntable_data = [[\"name\", \"species specific\", \"intra - molecular structure\", \"comparative\", \"link\"],[\"diana - microt\", \"human , mouse\", \"no\", \"yes\", \"webserver\"],[\"microtar\", \"no\", \"no\", \"no\", \"sourcecode\"],[\"mitarget\", \"no\", \"no\", \"no\", \"webserver\"],[\"mirror\", \"no\", \"no\", \"no\", \"webserver\"],[\"pictar\", \"8 vertebrates\", \"no\", \"yes\", \"predictions\"],[\"pita\", \"no\", \"yes\", \"no\", \"executable , webserver , predictions\"],[\"rna22\", \"no\", \"no\", \"no\", \"predictions custom\"],[\"rnahybrid\", \"no\", \"no\", \"no\", \"sourcecode , webserver\"],[\"sylamer\", \"no\", \"no\", \"no\", \"sourcecode webserver\"],[\"taref\", \"yes\", \"no\", \"no\", \"server / sourcecode\"],[\"p - taref\", \"yes\", \"no\", \"no\", \"server / standalone\"],[\"targetscan\", \"vertebrates , flies , nematodes\", \"evaluated indirectly\", \"yes\", \"sourcecode , webserver\"]]\nQuestion = Is it true that pita has a comparative of yes?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    comparatives = get_column_by_name(table_data, \"comparative\")\n    for name, comparative in zip(names, comparatives):\n        if name.lower() == \"pita\":\n            answer = equal_to(comparative, \"yes\")\n            break \n    return answer\n\n### END"}
{"id": "870a1ed1-9334-4b30-9f81-a454b1a520ff", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2003 - 04 isu junior grand prix\ntable_data = [[\"rank\", \"nation\", \"gold\", \"silver\", \"bronze\", \"total\"],[\"1\", \"russia\", \"10\", \"14\", \"8\", \"32\"],[\"2\", \"united states\", \"9\", \"6\", \"7\", \"22\"],[\"3\", \"canada\", \"4\", \"2\", \"10\", \"16\"],[\"4\", \"japan\", \"4\", \"5\", \"4\", \"13\"],[\"5\", \"hungary\", \"4\", \"0\", \"2\", \"6\"],[\"6\", \"czech republic\", \"2\", \"1\", \"1\", \"4\"],[\"6\", \"ukraine\", \"1\", \"3\", \"0\", \"4\"],[\"6\", \"italy\", \"0\", \"1\", \"3\", \"4\"],[\"7\", \"sweden\", \"1\", \"2\", \"0\", \"3\"],[\"8\", \"israel\", \"1\", \"1\", \"0\", \"2\"],[\"9\", \"finland\", \"0\", \"0\", \"1\", \"1\"],[\"9\", \"france\", \"0\", \"1\", \"0\", \"1\"]]\nQuestion = Is it true that japan fills the second spot on this category?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    nations = get_column_by_name(table_data, \"nation\")\n    answer = equal_to(nations[1], \"japan\")\n    return answer\n\n### END"}
{"id": "9a456334-9034-43b6-a13a-6d3d8b7e49ca", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2000 - 01 prva hnl\ntable_data = [[\"team\",\"manager\",\"home city\",\"stadium\",\"capacity\"],[\"cibalia\",\"davor mladina\",\"vinkovci\",\"stadion hnk cibalia\",\"9920\"],[\"čakovec\",\"ilija lončarević\",\"čakovec\",\"stadion src mladost\",\"8000\"],[\"dinamo zagreb\",\"marijan vlak\",\"zagreb\",\"stadion maksimir\",\"37168\"],[\"hajduk split\",\"petar nadoveza\",\"split\",\"gradski stadion u poljudu\",\"35000\"],[\"hrvatski dragovoljac\",\"milivoj bračun\",\"zagreb\",\"stadion nšc stjepan spajić\",\"5000\"],[\"marsonia\",\"stjepan deverić\",\"slavonski brod\",\"gradski stadion uz savu\",\"10000\"],[\"osijek\",\"stanko mršić\",\"osijek\",\"stadion gradski vrt\",\"19500\"],[\"rijeka\",\"nenad gračan\",\"rijeka\",\"stadion na kantridi\",\"10275\"],[\"slaven belupo\",\"mladen frančić\",\"koprivnica\",\"gradski stadion u koprivnici\",\"4000\"],[\"šibenik\",\"milo nižetić\",\"šibenik\",\"stadion šubićevac\",\"8000\"],[\"varteks\",\"ivan katalinić\",\"varaždin\",\"stadion nk varteks\",\"10800\"],[\"nk zagreb\",\"branko karačić\",\"zagreb\",\"stadion u kranjčevićevoj ulici\",\"8850\"]]\nQuestion = Is it true that dinamo zagreb is the team played at stadion maksimir?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    answer = False\n    for team, stadium in zip(teams, stadiums):\n        if team.lower() == \"dinamo zagreb\" and stadium.lower() == \"stadion maksimir\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "fabefc67-99df-40c8-8956-3891ff0d85f7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = radio iq\ntable_data = [[\"call sign\", \"frequency mhz\", \"city of license\", \"erp w\", \"class\", \"fcc info\"],[\"wvtw\", \"88.5\", \"charlottesville , virginia\", \"1000\", \"b1\", \"fcc\"],[\"wffc\", \"89.9\", \"ferrum , virginia\", \"1100\", \"a\", \"fcc\"],[\"wqiq\", \"88.3\", \"spotsylvania , virginia\", \"3500\", \"a\", \"fcc\"],[\"wriq\", \"88.7\", \"lexington , virginia\", \"3900\", \"a\", \"fcc\"],[\"wwvt\", \"1260\", \"christiansburg , virginia\", \"5000 day 25 night\", \"d\", \"fcc\"]]\nQuestion = Is it true that wriq has the same class as wwvt?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    call_signs = get_column_by_name(table_data, \"call sign\")\n    classes = get_column_by_name(table_data, \"class\")\n    wriq_class = classes[call_signs.index(\"wriq\")]\n    wwvt_class = classes[call_signs.index(\"wwvt\")]\n    answer = equal_to(wriq_class, wwvt_class)\n    return answer\n\n### END"}
{"id": "27603a1d-fb4e-472e-9d3f-e9c1055b04eb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1944 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"st kilda\", \"7.12 (54)\", \"south melbourne\", \"10.19 (79)\", \"junction oval\", \"8000\", \"5 august 1944\"],[\"geelong\", \"11.20 (86)\", \"hawthorn\", \"9.7 (61)\", \"kardinia park\", \"7000\", \"5 august 1944\"],[\"collingwood\", \"8.12 (60)\", \"footscray\", \"15.9 (99)\", \"victoria park\", \"9000\", \"5 august 1944\"],[\"carlton\", \"4.14 (38)\", \"melbourne\", \"8.6 (54)\", \"princes park\", \"10000\", \"5 august 1944\"],[\"north melbourne\", \"11.12 (78)\", \"fitzroy\", \"15.11 (101)\", \"arden street oval\", \"14000\", \"5 august 1944\"],[\"richmond\", \"11.17 (83)\", \"essendon\", \"12.15 (87)\", \"punt road oval\", \"26000\", \"5 august 1944\"]]\nQuestion = Is it true that when the away team named footscray scored 15.9 (99) , the home team collingwood scored 8.12 (60)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    away_team_scores = get_column_by_name(table_data, \"away team score\")\n    for home_team, home_team_score, away_team, away_team_score in zip(home_teams, home_team_scores, away_teams, away_team_scores):\n        if home_team.lower() == \"collingwood\" and away_team.lower() == \"footscray\":\n            answer = equal_to(home_team_score, \"8.12 (60)\") and equal_to(away_team_score, \"15.9 (99)\")\n            break \n    return answer\n\n### END"}
{"id": "527ed2f6-d4a4-4b80-9d7e-2e3fa9c1f019", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = malayalam calendar\ntable_data = [[\"months in malayalam era\", \"in malayalam\", \"gregorian calendar\", \"tamil calendar\", \"saka era\", \"sign of zodiac\"],[\"chingam\", \"ചിങ്ങം\", \"august - september\", \"aavani\", \"sravan - bhadrapada\", \"leo\"],[\"kanni\", \"കന്നി\", \"september - october\", \"purattasi\", \"bhadrapada - asvina\", \"virgo\"],[\"tulam\", \"തുലാം\", \"october - november\", \"aippasi\", \"asvina - kartika\", \"libra\"],[\"vrscikam\", \"വൃശ്ചികം\", \"november - december\", \"karthigai\", \"kartika - agrahayana\", \"scorpio\"],[\"dhanu\", \"ധനു\", \"december - january\", \"margazhi\", \"agrahayana - pausa\", \"sagittarius\"],[\"makaram\", \"മകരം\", \"january - february\", \"thai\", \"pausa - magha\", \"capricon\"],[\"kumbham\", \"കുംഭം\", \"february - march\", \"maasi\", \"magha - phalguna\", \"aquarius\"],[\"minam\", \"മീനം\", \"march - april\", \"panguni\", \"phalguna - chaitra\", \"pisces\"],[\"medam\", \"മേടം\", \"april - may\", \"chithirai\", \"chaitra - vaisakha\", \"aries\"],[\"edavam (idavam)\", \"ഇടവം\", \"may - june\", \"vaikasi\", \"vaisakha - jyaistha\", \"taurus\"],[\"mithunam\", \"മിഥുനം\", \"june - july\", \"aani\", \"jyaistha - asada\", \"gemini\"],[\"karkadakam\", \"കര്‍ക്കടകം\", \"july - august\", \"aadi\", \"asada - sravana\", \"cancer\"]]\nQuestion = Is it true that in the chaitra - vaisakha saka era , the months in malayalam era was medam?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    malayalam_months = get_column_by_name(table_data, \"months in malayalam era\")\n    saka_era = get_column_by_name(table_data, \"saka era\")\n    for malayalam_month, saka in zip(malayalam_months, saka_era):\n        if equal_to(saka, \"chaitra - vaisakha\"):\n            answer = equal_to(malayalam_month, \"medam\")\n            break \n    return answer\n\n### END"}
{"id": "80d43d2c-4e89-4709-8931-1ae6c6a019d4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2005 japanese television dramas\ntable_data = [[\"japanese title\", \"romaji title\", \"tv station\", \"episodes\", \"average ratings\"],[\"電車男\", \"densha otoko\", \"fuji tv\", \"11\", \"21.0%\"],[\"海猿 umizaru evolution\", \"umizaru evolution\", \"fuji tv\", \"11\", \"13.2%\"],[\"スローダンス\", \"slow dance\", \"fuji tv\", \"11\", \"16.8%\"],[\"がんばっていきまっしょい\", \"ganbatte ikimasshoi\", \"fuji tv\", \"10\", \"12.4%\"],[\"幸せになりたい!\", \"shiawase ni naritai!\", \"tbs\", \"10\", \"11.8%\"],[\"女系家族\", \"nyokei kazoku\", \"tbs\", \"11\", \"13.85%\"],[\"いま、会いにゆきます\", \"ima , ai ni yukimasu\", \"tbs\", \"10\", \"11%\"],[\"ドラゴン桜\", \"dragon zakura\", \"tbs\", \"11\", \"16.4%\"],[\"はるか17\", \"haruka seventeen\", \"tv asahi\", \"10\", \"8.9%\"],[\"菊次郎とさき 2\", \"kikujirou to saki 2\", \"ntv\", \"9\", \"14.9%\"],[\"女王の教室\", \"joou no kyoushitsu\", \"ntv\", \"11\", \"15.7%\"]]\nQuestion = Is it true that joou no kyoushitsu was the romaji title that has a japanese title of 女王の教室?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    japanese_titles = get_column_by_name(table_data, \"japanese title\")\n    romaji_titles = get_column_by_name(table_data, \"romaji title\")\n    for japanese_title, romaji_title in zip(japanese_titles, romaji_titles):\n        if japanese_title == \"女王の教室\":\n            answer = equal_to(romaji_title, \"joou no kyoushitsu\")\n            break \n    return answer\n\n### END"}
{"id": "4933f4b6-7125-4113-b0c2-8ba199367cf4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"population (region total)\", \"population (stanthorpe)\", \"population (warwick)\", \"population (allora)\", \"population (glengallan)\", \"population (rosenthal)\"],[\"1933\", \"25016\", \"6934\", \"6664\", \"2624\", \"6334\", \"2460\"],[\"1947\", \"24009\", \"7419\", \"7129\", \"2217\", \"5269\", \"1975\"],[\"1954\", \"25862\", \"8335\", \"9151\", \"2106\", \"4639\", \"1631\"],[\"1961\", \"26288\", \"8514\", \"9843\", \"1961\", \"4388\", \"1582\"],[\"1966\", \"25917\", \"8503\", \"10065\", \"1890\", \"3906\", \"1553\"],[\"1971\", \"24115\", \"8189\", \"9303\", \"1719\", \"3410\", \"1494\"],[\"1976\", \"24583\", \"8709\", \"9169\", \"1666\", \"3491\", \"1548\"],[\"1981\", \"24300\", \"8576\", \"8853\", \"1679\", \"3611\", \"1581\"],[\"1986\", \"26270\", \"9143\", \"9435\", \"2041\", \"3688\", \"1963\"],[\"1991\", \"28288\", \"9556\", \"10393\", \"2132\", \"3966\", \"2241\"],[\"1996\", \"29563\", \"9596\", \"10896\", \"2234\", \"3990\", \"2742\"],[\"2001\", \"30554\", \"9860\", \"10956\", \"2439\", \"4088\", \"3129\"]]\nQuestion = Is it true that in 1991 , allora 's population was 2132 , which made it smaller than rosenthal?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    allora_populations = get_column_by_name(table_data, \"population (allora)\")\n    rosenthal_populations = get_column_by_name(table_data, \"population (rosenthal)\")\n    for year, allora_population, rosenthal_population in zip(years, allora_populations, rosenthal_populations):\n        if year == \"1991\":\n            answer = less_than(int(allora_population), int(rosenthal_population))\n            break \n    return answer\n\n### END"}
{"id": "73cf333a-bdde-475a-8ad5-31d8d6e06498", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1950 world figure skating championships\ntable_data = [[\"rank\", \"name\", \"nation\", \"placings\", \"total\"],[\"1\", \"karol kennedy / peter kennedy\", \"united states\", \"15\", \"96.07\"],[\"2\", \"jennifer nicks / john nicks\", \"united kingdom\", \"28.5\", \"92.70\"],[\"3\", \"marianne nagy / lászló nagy\", \"hungary\", \"32\", \"92.25\"],[\"4\", \"elianne steineman / andré calamé\", \"switzerland\", \"44.5\", \"90.00\"],[\"5\", \"suzanne gheldorf / jacques rénard\", \"belgium\", \"48.5\", \"89.43\"],[\"6\", \"elly stärck / harry gareis\", \"austria\", \"61\", \"88.08\"],[\"7\", \"marlene smith / donald gilchrist\", \"canada\", \"63\", \"87.07\"],[\"8\", \"joan waterhouse / gordon holloway\", \"united kingdom\", \"62\", \"88.31\"],[\"9\", \"liliane de becker / edmund verbustel\", \"belgium\", \"64\", \"88.42\"],[\"10\", \"irene maguire / walter muehlbronner\", \"united states\", \"82\", \"84.26\"],[\"11\", \"sybil cooke / bob hudson\", \"united kingdom\", \"93.5\", \"83.47\"],[\"12\", \"denise favart / jacques favart\", \"france\", \"108\", \"77.73\"]]\nQuestion = Is it true that karol kennedy / peter kennedy are from the united states nation?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    nations = get_column_by_name(table_data, \"nation\")\n    answer = False\n    for name, nation in zip(names, nations):\n        if \"karol kennedy / peter kennedy\" in name.lower() and \"united states\" in nation.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "4e74cd67-d0dd-4a59-b47a-c668eae89610", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of ministers for energy of luxembourg\ntable_data = [[\"minister\", \"party\", \"start date\", \"end date\", \"prime minister\"],[\"antoine wehenkel\", \"lsap\", \"15 july 1964\", \"6 february 1969\", \"pierre werner\"],[\"marcel mart\", \"dp\", \"6 february 1969\", \"15 june 1974\", \"pierre werner\"],[\"marcel mart\", \"dp\", \"15 june 1974\", \"16 september 1977\", \"gaston thorn\"],[\"josy barthel\", \"dp\", \"16 september 1977\", \"16 july 1979\", \"gaston thorn\"],[\"josy barthel\", \"dp\", \"16 july 1979\", \"20 july 1984\", \"pierre werner\"],[\"marcel schlechter\", \"lsap\", \"20 july 1984\", \"14 july 1989\", \"jacques santer\"],[\"alex bodry\", \"lsap\", \"14 july 1989\", \"13 july 1994\", \"jacques santer\"],[\"robert goebbels\", \"lsap\", \"13 july 1994\", \"26 january 1995\", \"jacques santer\"],[\"robert goebbels\", \"lsap\", \"26 january 1995\", \"7 august 1999\", \"jean - claude juncker\"]]\nQuestion = Is it true that pierre werner was the prime minister from july 15 , 1964 to february 6 , 1969?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    start_dates = get_column_by_name(table_data, \"start date\")\n    end_dates = get_column_by_name(table_data, \"end date\")\n    prime_ministers = get_column_by_name(table_data, \"prime minister\")\n    for start_date, end_date, prime_minister in zip(start_dates, end_dates, prime_ministers):\n        if equal_to(start_date, \"15 july 1964\") and equal_to(end_date, \"6 february 1969\") and equal_to(prime_minister, \"pierre werner\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "3f799ab7-a7cb-468f-baeb-5bb6bbb3b9ce", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of all that episodes\ntable_data = [[\"season\", \"series\", \"episode title\", \"original air date\", \"nick prod\"],[\"1\", \"139\", \"lillix\", \"october 11 , 2003\", \"941\"],[\"2\", \"140\", \"nodesha\", \"october 18 , 2003\", \"942\"],[\"3\", \"141\", \"da razkalz cru\", \"october 25 , 2003\", \"943\"],[\"4\", \"142\", \"third eye blind\", \"november 1 , 2003\", \"944\"],[\"5\", \"143\", \"fefe dobson\", \"november 22 , 2003\", \"945\"],[\"7\", \"145\", \"drake bell\", \"january 10 , 2004\", \"947\"],[\"8\", \"146\", \"ok go\", \"january 24 , 2004\", \"948\"],[\"9\", \"147\", \"britney spears / nick cannon\", \"january 31 , 2004\", \"949\"],[\"10\", \"148\", \"brittany snow / wakefield\", \"february 7 , 2004\", \"950\"],[\"11\", \"149\", \"boomkat\", \"february 14 , 2004\", \"951\"],[\"12\", \"150\", \"nick lachey\", \"april 17 , 2004\", \"952\"],[\"13\", \"151\", \"avril lavigne\", \"june 12 , 2004\", \"953\"],[\"14\", \"152\", \"substitute jack\", \"june 19 , 2004\", \"954\"],[\"15\", \"153\", \"aaron carter\", \"june 26 , 2004\", \"955\"]]\nQuestion = Is it true that nodesha was in season 2 , and had a nick production number of 942?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    episode_titles = get_column_by_name(table_data, \"episode title\")\n    nick_prods = get_column_by_name(table_data, \"nick prod\")\n    for season, episode_title, nick_prod in zip(seasons, episode_titles, nick_prods):\n        if episode_title.lower() == \"nodesha\":\n            answer = equal_to(season, \"2\") and equal_to(nick_prod, \"942\")\n            break \n    return answer\n\n### END"}
{"id": "0dccef0c-8dc6-4b06-8d74-eb1debcd0c4e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = marlboro challenge\ntable_data = [[\"season\", \"date\", \"location\", \"driver\", \"chassis\", \"engine\", \"team\"],[\"1987\", \"october 31\", \"tamiami park\", \"bobby rahal\", \"lola\", \"cosworth\", \"truesports\"],[\"1988\", \"november 5\", \"tamiami park\", \"michael andretti\", \"lola\", \"cosworth\", \"kraco racing\"],[\"1989\", \"october 14\", \"laguna seca\", \"al unser , jr\", \"lola\", \"chevrolet\", \"galles racing\"],[\"1990\", \"october 6\", \"nazareth\", \"rick mears\", \"penske\", \"chevrolet\", \"penske racing\"],[\"1991\", \"october 19\", \"laguna seca\", \"michael andretti\", \"lola\", \"chevrolet\", \"newman / haas racing\"],[\"1992\", \"october 3\", \"nazareth\", \"emerson fittipaldi\", \"penske\", \"chevrolet\", \"penske racing\"]]\nQuestion = Is it true that the chevrolet engine with the lola chassis , was used by driver bobby rahal of galles racing?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    chassis = get_column_by_name(table_data, \"chassis\")\n    engines = get_column_by_name(table_data, \"engine\")\n    teams = get_column_by_name(table_data, \"team\")\n    answer = False\n    for driver, chassis, engine, team in zip(drivers, chassis, engines, teams):\n        if driver.lower() == \"bobby rahal\" and chassis.lower() == \"lola\" and engine.lower() == \"chevrolet\" and team.lower() == \"galles racing\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "863ebfd6-0639-419e-85a4-8382f0d0e04c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = big day out lineups by year\ntable_data = [[\"sydney\", \"melbourne\", \"perth\", \"adelaide\", \"gold coast\", \"auckland\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"cancelled\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\"],[\"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"no\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"no\"],[\"no\", \"yes\", \"no\", \"no\", \"no\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"]]\nQuestion = Is it true that melbourne was yes when when sydney was cancelled and perth was yes?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    sydney = get_column_by_name(table_data, \"sydney\")\n    melbourne = get_column_by_name(table_data, \"melbourne\")\n    perth = get_column_by_name(table_data, \"perth\")\n    for s, m, p in zip(sydney, melbourne, perth):\n        if s.lower() == \"cancelled\" and m.lower() == \"yes\" and p.lower() == \"yes\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "b9af8e35-7bb9-4acc-b049-e43595f40725", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glover teixeira\ntable_data = [[\"result\", \"opponent\", \"method\", \"event\", \"date\"],[\"loss\", \"gabriel vella\", \"points\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"armando sapo\", \"submission\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"salvador minnit\", \"submission\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"jorge bezerra\", \"points\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"loss\", \"vinny magalhães\", \"submission (armbar)\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"loss\", \"gerardi rinaldi\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"dean lister\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"vesa vuori\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"leonardo chocolate\", \"submission (rear naked choke)\", \"adcc brasil trails (under 99 kg)\", \"2009\"],[\"win\", \"renato ferreira\", \"points\", \"adcc brasil trails (under 99 kg)\", \"2009\"]]\nQuestion = Is it true that in the 2009 adcc brasil trails event participant leonardo chocolate registered a win using the rear naked choke method?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    results = get_column_by_name(table_data, \"result\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    methods = get_column_by_name(table_data, \"method\")\n    events = get_column_by_name(table_data, \"event\")\n    for result, opponent, method, event in zip(results, opponents, methods, events):\n        if equal_to(result, \"win\") and equal_to(opponent, \"leonardo chocolate\") and equal_to(method, \"submission (rear naked choke)\") and equal_to(event, \"adcc brasil trails (under 99 kg)\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "9cda1b99-cdf7-4880-bf58-3b23dcee275e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = x factor (czech tv series)\ntable_data = [[\"name\",\"category\",\"eliminated\",\"date\",\"special guest\"],[\"jiří zonyga\",\"24 + years\",\"winner\",\"june 1\",\"see the next line\"],[\"ondřej ruml\",\"24 + years\",\"final night\",\"june 1\",\"5angels , olympic\"],[\"all x\",\"vocal groups\",\"james bond night\",\"may 25\",\"mta + čhave jilestar\"],[\"martina pártlová\",\"24 + years\",\"american night\",\"may 18\",\"láďa kerndl and henry lee\"],[\"kamila nývltová\",\"15 - 24 years\",\"night of revived legends\",\"may 11\",\"zombies (dancing on michael jackson 's thriller)\"],[\"za 5 dvanáct\",\"vocal groups\",\"czechoslovak night\",\"may 4\",\"miro žbirka\"],[\"david gránský\",\"15 - 24 years\",\"banana night\",\"april 27\",\"karl wolf\"],[\"anna ungrová\",\"15 - 24 years\",\"night of broken hearts\",\"april 20\",\"helena zeťová\"],[\"pavlína ďuriačová\",\"15 - 24 years\",\"tribute to karel\",\"april 13\",\"karel gott\"],[\"divoký kočky + dante\",\"vocal groups\",\"popcorn night\",\"april 6\",\"iva frühlingová\"],[\"lukáš javůrek\",\"24 + years\",\"chocolate night\",\"march 30\",\"gipsycz\"],[\"romantic\",\"vocal groups\",\"fire night\",\"march 23\",\"shayne ward\"]]\nQuestion = Is it true that on april 27 , david gránský was eliminated on banana night?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    dates = get_column_by_name(table_data, \"date\")\n    eliminated = get_column_by_name(table_data, \"eliminated\")\n    for name, date, elimination in zip(names, dates, eliminated):\n        if name.lower() == \"david gránský\" and date.lower() == \"april 27\":\n            answer = equal_to(elimination, \"banana night\")\n            break \n    return answer\n\n### END"}
{"id": "e12d7bb6-76c4-46ab-a599-5334da9cfc58", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = media in fargo - moorhead\ntable_data = [[\"frequency\", \"call sign\", \"name\", \"format\", \"owner\"],[\"88.7 fm\", \"kfbn\", \"heaven 88.7\", \"christian\", \"fargo baptist church\"],[\"90.3 fm\", \"kccd\", \"minnesota public radio / npr\", \"news / talk\", \"minnesota public radio\"],[\"91.1 fm\", \"kccm\", \"minnesota public radio / npr\", \"classical\", \"minnesota public radio\"],[\"91.9 fm\", \"kdsu\", \"prairie public / npr\", \"adult album alternative\", \"north dakota state university\"],[\"92.7 fm\", \"kzdr\", \"92.7 the bone\", \"active rock\", \"mediactive\"],[\"93.7 fm\", \"wday - fm\", \"y94\", \"top 40 (chr)\", \"radio fargo - moorhead\"],[\"95.1 fm\", \"kbvb\", \"bob 95 fm\", \"country\", \"radio fargo - moorhead\"],[\"95.9 fm\", \"kxbq - lp\", \"dive 95.9\", \"alternative\", \"women 's care clinic\"],[\"96.3 fm\", \"knds - lp\", \"thunderradio radio free fargo\", \"college\", \"north dakota state university\"],[\"97.9 fm\", \"kfnw - fm\", \"life 97.9\", \"contemporary christian music\", \"northwestern college\"],[\"98.7 fm\", \"klta\", \"big 98.7\", \"adult chr\", \"triad broadcasting\"],[\"99.3 fm\", \"k257ep\", \"k - love\", \"contemporary christian music ( kklq translator )\", \"educational media foundation\"],[\"99.9 fm\", \"kvox - fm\", \"froggy 99.9\", \"country\", \"triad broadcasting\"],[\"100.7 fm\", \"kklq\", \"k - love\", \"contemporary christian music\", \"educational media foundation\"],[\"101.9 fm\", \"krwk\", \"101.9 talk fm\", \"talk\", \"radio fargo - moorhead\"],[\"103.3 fm\", \"kzcr\", \"z 103.3\", \"rock / aaa\", \"jerry papenfuss\"],[\"103.9 fm\", \"kvmi\", \"103.9 the truck\", \"country\", \"vision media incorporated\"],[\"104.1 fm\", \"kbot\", \"104.1 the wave\", \"adult contemporary\", \"leighton broadcasting\"],[\"104.7 fm\", \"kmjo\", \"104.7 popster fm\", \"adult hits\", \"radio fargo - moorhead\"],[\"105.1 fm\", \"kqwb\", \"q 105.1\", \"active rock\", \"triad broadcasting\"],[\"106.1 fm\", \"kqlx - fm\", \"thunder 106.1\", \"classic country\", \"great plains integrated marketing\"],[\"106.5 fm\", \"krjb\", \"krjb 106.5\", \"country\", \"r&j broadcasting\"],[\"106.9 fm\", \"kegk\", \"eagle 106.9\", \"classic hits\", \"great plains integrated marketing\"],[\"107.9 fm\", \"kpfx\", \"107.9 the fox\", \"classic rock\", \"triad broadcasting\"]]\nQuestion = Is it true that the call sign kdsu is owned by triad broadcasting?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    call_signs = get_column_by_name(table_data, \"call sign\")\n    owners = get_column_by_name(table_data, \"owner\")\n    answer = False\n    for call_sign, owner in zip(call_signs, owners):\n        if call_sign.lower() == \"kdsu\" and owner.lower() == \"triad broadcasting\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "3f163f04-4042-42fa-a07f-93f9a17c6048", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the simpsons (season 21)\ntable_data = [[\"-\", \"-\", \"title\", \"directed by\", \"written by\", \"original air date\", \"production code\", \"us viewers (millions)\"],[\"442\", \"1\", \"homer the whopper\", \"lance kramer\", \"seth rogen & evan goldberg\", \"september 27 , 2009\", \"labf13\", \"8.31\"],[\"443\", \"2\", \"bart gets a 'z'\", \"mark kirkland\", \"matt selman\", \"october 4 , 2009\", \"labf15\", \"9.32\"],[\"444\", \"3\", \"the great wife hope\", \"matthew faughnan\", \"carolyn omine\", \"october 11 , 2009\", \"labf16\", \"7.5\"],[\"446\", \"5\", \"the devil wears nada\", \"nancy kruse\", \"tim long\", \"november 15 , 2009\", \"labf17\", \"9.04\"],[\"447\", \"6\", \"pranks and greens\", \"chuck sheetz\", \"jeff westbrook\", \"november 22 , 2009\", \"labf18\", \"7.03\"],[\"448\", \"7\", \"rednecks and broomsticks\", \"bob anderson & rob oliver\", \"kevin curran\", \"november 29 , 2009\", \"labf19\", \"9.02\"],[\"449\", \"8\", \"o brother , where bart thou\", \"steven dean moore\", \"matt selman\", \"december 13 , 2009\", \"mabf01\", \"7.11\"],[\"450\", \"9\", \"thursdays with abie\", \"michael polcino\", \"don payne & mitchell h glazer\", \"january 3 , 2010\", \"mabf02\", \"8.65\"],[\"451\", \"10\", \"once upon a time in springfield\", \"matthew nastuk\", \"stephanie gillis\", \"january 10 , 2010\", \"labf20\", \"21.01\"],[\"452\", \"11\", \"million dollar maybe\", \"chris clements\", \"bill odenkirk\", \"january 31 , 2010\", \"mabf03\", \"5.11\"],[\"453\", \"12\", \"boy meets curl\", \"chuck sheetz\", \"rob lazebnik\", \"february 14 , 2010\", \"mabf05\", \"5.87\"],[\"454\", \"13\", \"the color yellow\", \"raymond s persi\", \"billy kimball & ian maxtone - graham\", \"february 21 , 2010\", \"mabf06\", \"6.08\"],[\"455\", \"14\", \"postcards from the wedge\", \"mark kirkland\", \"brian kelley\", \"march 14 , 2010\", \"mabf04\", \"5.23\"],[\"456\", \"15\", \"stealing first base\", \"steven dean moore\", \"john frink\", \"march 21 , 2010\", \"mabf07\", \"5.69\"],[\"457\", \"16\", \"the greatest story ever d'ohed\", \"michael polcino\", \"kevin curran\", \"march 28 , 2010\", \"mabf10\", \"5.69\"],[\"458\", \"17\", \"american history x - cellent\", \"bob anderson\", \"michael price\", \"april 11 , 2010\", \"mabf08\", \"5.65\"],[\"459\", \"18\", \"chief of hearts\", \"chris clements\", \"carolyn omine & william wright\", \"april 18 , 2010\", \"mabf09\", \"5.93\"],[\"460\", \"19\", \"the squirt and the whale\", \"mark kirkland\", \"matt warburton\", \"april 25 , 2010\", \"mabf14\", \"5.94\"],[\"461\", \"20\", \"to surveil with love\", \"lance kramer\", \"michael nobori\", \"may 2 , 2010\", \"mabf12\", \"6.06\"],[\"462\", \"21\", \"moe letter blues\", \"matthew nastuk\", \"stephanie gillis\", \"may 9 , 2010\", \"mabf13\", \"5.66\"],[\"463\", \"22\", \"the bob next door\", \"nancy kruse\", \"john frink\", \"may 16 , 2010\", \"mabf11\", \"6.26\"]]\nQuestion = Is it true that the episode with production code labf15 had more than 9 million viewers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    production_codes = get_column_by_name(table_data, \"production code\")\n    viewers = get_column_by_name(table_data, \"us viewers (millions)\")\n    answer = False\n    for code, viewer in zip(production_codes, viewers):\n        if code.lower() == \"labf15\":\n            if greater(float(viewer), 9):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "72efd8dc-d54a-4fb4-9a3a-34d6e8e98430", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = media in fargo - moorhead\ntable_data = [[\"frequency\", \"call sign\", \"name\", \"format\", \"owner\"],[\"88.7 fm\", \"kfbn\", \"heaven 88.7\", \"christian\", \"fargo baptist church\"],[\"90.3 fm\", \"kccd\", \"minnesota public radio / npr\", \"news / talk\", \"minnesota public radio\"],[\"91.1 fm\", \"kccm\", \"minnesota public radio / npr\", \"classical\", \"minnesota public radio\"],[\"91.9 fm\", \"kdsu\", \"prairie public / npr\", \"adult album alternative\", \"north dakota state university\"],[\"92.7 fm\", \"kzdr\", \"92.7 the bone\", \"active rock\", \"mediactive\"],[\"93.7 fm\", \"wday - fm\", \"y94\", \"top 40 (chr)\", \"radio fargo - moorhead\"],[\"95.1 fm\", \"kbvb\", \"bob 95 fm\", \"country\", \"radio fargo - moorhead\"],[\"95.9 fm\", \"kxbq - lp\", \"dive 95.9\", \"alternative\", \"women 's care clinic\"],[\"96.3 fm\", \"knds - lp\", \"thunderradio radio free fargo\", \"college\", \"north dakota state university\"],[\"97.9 fm\", \"kfnw - fm\", \"life 97.9\", \"contemporary christian music\", \"northwestern college\"],[\"98.7 fm\", \"klta\", \"big 98.7\", \"adult chr\", \"triad broadcasting\"],[\"99.3 fm\", \"k257ep\", \"k - love\", \"contemporary christian music ( kklq translator )\", \"educational media foundation\"],[\"99.9 fm\", \"kvox - fm\", \"froggy 99.9\", \"country\", \"triad broadcasting\"],[\"100.7 fm\", \"kklq\", \"k - love\", \"contemporary christian music\", \"educational media foundation\"],[\"101.9 fm\", \"krwk\", \"101.9 talk fm\", \"talk\", \"radio fargo - moorhead\"],[\"103.3 fm\", \"kzcr\", \"z 103.3\", \"rock / aaa\", \"jerry papenfuss\"],[\"103.9 fm\", \"kvmi\", \"103.9 the truck\", \"country\", \"vision media incorporated\"],[\"104.1 fm\", \"kbot\", \"104.1 the wave\", \"adult contemporary\", \"leighton broadcasting\"],[\"104.7 fm\", \"kmjo\", \"104.7 popster fm\", \"adult hits\", \"radio fargo - moorhead\"],[\"105.1 fm\", \"kqwb\", \"q 105.1\", \"active rock\", \"triad broadcasting\"],[\"106.1 fm\", \"kqlx - fm\", \"thunder 106.1\", \"classic country\", \"great plains integrated marketing\"],[\"106.5 fm\", \"krjb\", \"krjb 106.5\", \"country\", \"r&j broadcasting\"],[\"106.9 fm\", \"kegk\", \"eagle 106.9\", \"classic hits\", \"great plains integrated marketing\"],[\"107.9 fm\", \"kpfx\", \"107.9 the fox\", \"classic rock\", \"triad broadcasting\"]]\nQuestion = Is it true that the call sign for thunder 106.1 is kqlx - fm?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    call_signs = get_column_by_name(table_data, \"call sign\")\n    for name, call_sign in zip(names, call_signs):\n        if name.lower() == \"thunder 106.1\":\n            answer = equal_to(call_sign, \"kqlx - fm\")\n            break \n    return answer\n\n### END"}
{"id": "747de2f5-1263-46b9-9e49-cf36590967e8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 cleveland cavaliers season\ntable_data = [[\"game\",\"date\",\"team\",\"score\",\"high points\",\"high rebounds\",\"high assists\",\"location attendance\",\"record\"],[\"18\",\"december 2\",\"phoenix suns\",\"w 107 - 90 (ot)\",\"zydrunas ilgauskas (14)\",\"shaquille o'neal (9)\",\"lebron james (10)\",\"quicken loans arena 20562\",\"13 - 5\"],[\"19\",\"december 4\",\"chicago bulls\",\"w 101 - 87 (ot)\",\"lebron james (23)\",\"zydrunas ilgauskas , shaquille o'neal (7)\",\"lebron james (11)\",\"quicken loans arena 20562\",\"14 - 5\"],[\"20\",\"december 6\",\"milwaukee bucks\",\"w 101 - 86 (ot)\",\"delonte west (21)\",\"anderson varejão (12)\",\"lebron james (10)\",\"bradley center 16625\",\"15 - 5\"],[\"21\",\"december 8\",\"memphis grizzlies\",\"l 109 - 111 (ot)\",\"lebron james (43)\",\"lebron james (13)\",\"mo williams (8)\",\"fedex forum 16325\",\"15 - 6\"],[\"22\",\"december 9\",\"houston rockets\",\"l 85 - 95 (ot)\",\"lebron james (27)\",\"shaquille o'neal , j j hickson (10)\",\"lebron james (7)\",\"toyota center 18200\",\"15 - 7\"],[\"23\",\"december 11\",\"portland trail blazers\",\"w 104 - 99 (ot)\",\"lebron james (33)\",\"shaquille o'neal (11)\",\"mo williams (10)\",\"quicken loans arena 20562\",\"16 - 7\"],[\"24\",\"december 13\",\"oklahoma city thunder\",\"w 102 - 89 (ot)\",\"lebron james (44)\",\"anderson varejão (10)\",\"lebron james (6)\",\"ford center 18203\",\"17 - 7\"],[\"25\",\"december 15\",\"new jersey nets\",\"w 99 - 89 (ot)\",\"lebron james (23)\",\"mo williams , jamario moon (8)\",\"lebron james (7)\",\"quicken loans arena 20562\",\"18 - 7\"],[\"26\",\"december 16\",\"philadelphia 76ers\",\"w 108 - 101 (ot)\",\"lebron james (36)\",\"shaquille o'neal (9)\",\"lebron james (7)\",\"wachovia center 19517\",\"19 - 7\"],[\"27\",\"december 18\",\"milwaukee bucks\",\"w 85 - 82 (ot)\",\"lebron james (26)\",\"lebron james (10)\",\"lebron james (8)\",\"quicken loans arena 20562\",\"20 - 7\"],[\"28\",\"december 20\",\"dallas mavericks\",\"l 95 - 102 (ot)\",\"lebron james (25)\",\"anderson varejão , shaquille o'neal (8)\",\"lebron james (6)\",\"american airlines center 20346\",\"20 - 8\"],[\"29\",\"december 21\",\"phoenix suns\",\"w 109 - 91 (ot)\",\"lebron james (29)\",\"mo williams , lebron james , jj hickson (6)\",\"delonte west (6)\",\"us airways center 18221\",\"21 - 8\"],[\"30\",\"december 23\",\"sacramento kings\",\"w 117 - 104 (ot)\",\"lebron james (34)\",\"lebron james (16)\",\"lebron james (10)\",\"arco arena 16407\",\"22 - 8\"],[\"31\",\"december 25\",\"la lakers\",\"w 102 - 87 (ot)\",\"mo williams (28)\",\"anderson varejão , zydrunas ilgauskas (9)\",\"lebron james (9)\",\"staples center 18997\",\"23 - 8\"],[\"32\",\"december 27\",\"houston rockets\",\"w 108 - 83 (ot)\",\"lebron james (29)\",\"shaquille o'neal (11)\",\"lebron james (6)\",\"quicken loans arena 20562\",\"24 - 8\"]]\nQuestion = Is it true that arco arena was the location having 16407 people in attendance for the record 22 - 8?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"location attendance\")\n    records = get_column_by_name(table_data, \"record\")\n    for location, record in zip(locations, records):\n        if \"arco arena 16407\" in location.lower() and \"22 - 8\" in record.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "99417404-2824-437a-9db6-a6aa0169c30f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = air macau destinations\ntable_data = [[\"city\",\"country\",\"iata\",\"icao\",\"airport\"],[\"bangkok\",\"thailand\",\"bkk\",\"vtbs\",\"suvarnabhumi airport\"],[\"beijing\",\"china\",\"pek\",\"zbaa\",\"beijing capital international airport\"],[\"changsha\",\"china\",\"csx\",\"zgha\",\"changsha huanghua international airport\"],[\"chengdu\",\"china\",\"ctu\",\"zuuu\",\"chengdu shuangliu international airport\"],[\"chongqing\",\"china\",\"ckg\",\"zuck\",\"chongqing jiangbei international airport\"],[\"hangzhou\",\"china\",\"hgh\",\"zshc\",\"hangzhou xiaoshan international airport\"],[\"hefei\",\"china\",\"hfe\",\"zsof\",\"hefei luogang international airport\"],[\"kaohsiung\",\"taiwan\",\"khh\",\"rckh\",\"kaohsiung international airport\"],[\"macau\",\"macau\",\"mfm\",\"vmmc\",\"macau international airport\"],[\"nanjing\",\"china\",\"nkg\",\"zsnj\",\"nanjing lukou international airport\"],[\"nanning\",\"china\",\"nng\",\"zgnn\",\"nanning wuxu international airport\"],[\"ningbo\",\"china\",\"ngb\",\"zsnb\",\"ningbo lishe international airport\"],[\"osaka\",\"japan\",\"kix\",\"rjbb\",\"kansai international airport\"],[\"seoul\",\"south korea\",\"icn\",\"rksi\",\"incheon international airport\"],[\"shanghai\",\"china\",\"sha\",\"zsss\",\"shanghai hongqiao international airport\"],[\"shanghai\",\"china\",\"pvg\",\"zspd\",\"shanghai pudong international airport\"],[\"shenyang\",\"china\",\"she\",\"zytx\",\"shenyang taoxian international airport\"],[\"shenzhen\",\"china\",\"szx\",\"zgsz\",\"shenzhen bao'an international airport\"],[\"singapore\",\"singapore\",\"sin\",\"wsss\",\"singapore changi airport\"],[\"taipei\",\"taiwan\",\"tpe\",\"rctp\",\"taiwan taoyuan international airport\"],[\"taiyuan\",\"china\",\"tyn\",\"zbyn\",\"taiyuan wusu airport\"],[\"tokyo\",\"japan\",\"nrt\",\"rjaa\",\"narita international airport\"],[\"xiamen\",\"china\",\"xmn\",\"zsam\",\"xiamen gaoqi international airport\"],[\"wenzhou\",\"china\",\"wnz\",\"zswz\",\"wenzhou yongqiang international airport\"]]\nQuestion = Is it true that shanghai pudong international airport is in taiwan?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    airports = get_column_by_name(table_data, \"airport\")\n    countries = get_column_by_name(table_data, \"country\")\n    for airport, country in zip(airports, countries):\n        if \"shanghai pudong international airport\" in airport.lower():\n            answer = country.lower() == \"taiwan\"\n            break\n    return answer\n\n### END"}
{"id": "817637a2-1de1-4ce9-a010-7f81e2b4532b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = usa today all - usa high school baseball team\ntable_data = [[\"player\", \"position\", \"school\", \"hometown\", \"mlb draft\"],[\"delmon young\", \"outfielder\", \"camarillo high school\", \"camarillo , ca\", \"1st round - 1st pick of 2003 draft ( devil rays )\"],[\"chris lubanski\", \"outfielder\", \"kennedy - kenrick catholic high school\", \"norristown , pa\", \"1st round - 5th pick of 2003 draft ( royals )\"],[\"lastings milledge\", \"outfielder\", \"lakewood ranch high school\", \"bradenton , fl\", \"1st round - 12th pick of 2003 draft ( mets )\"],[\"brandon wood\", \"infielder\", \"horizon high school\", \"scottsdale , az\", \"1st round - 23rd pick of 2003 draft ( angels )\"],[\"john danks\", \"pitcher\", \"round rock high school\", \"round rock , tx\", \"1st round - 9th pick of 2003 draft ( rangers )\"],[\"jonathan fulton\", \"infielder\", \"george washington high school\", \"danville , va\", \"3rd round - 83rd pick of 2003 draft ( marlins )\"],[\"ian stewart\", \"infielder\", \"la quinta high school\", \"westminster , ca\", \"1st round - 10th pick of 2003 draft ( rockies )\"],[\"jeff allison\", \"pitcher\", \"veterans memorial high school\", \"peabody , ma\", \"1st round - 16th pick of 2003 draft ( marlins )\"],[\"daric barton\", \"catcher\", \"marina high school\", \"huntington beach , ca\", \"1st round - 28th pick of 2003 draft ( cardinals )\"],[\"eric duncan\", \"infielder\", \"seton hall preparatory school\", \"west orange , nj\", \"1st round - 27th pick of 2003 draft ( yankees )\"]]\nQuestion = Is it true that the outfielder from norristown , pa attended kennedy - kenrick catholic high school?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    positions = get_column_by_name(table_data, \"position\")\n    schools = get_column_by_name(table_data, \"school\")\n    hometowns = get_column_by_name(table_data, \"hometown\")\n    for position, school, hometown in zip(positions, schools, hometowns):\n        if position.lower() == \"outfielder\" and hometown.lower() == \"norristown , pa\":\n            answer = school.lower() == \"kennedy - kenrick catholic high school\"\n            break\n    return answer\n\n### END"}
{"id": "13d5ec5e-7fa5-4963-a52c-5dc7ca767b4d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = south carolina gamecocks men 's soccer\ntable_data = [[\"rank\", \"player\", \"goals\", \"assists\", \"points\", \"years\"],[\"1\", \"doug allison\", \"63\", \"32\", \"158\", \"1984 - 87\"],[\"2\", \"chris faklaris\", \"55\", \"14\", \"124\", \"1991 - 94\"],[\"3\", \"clint mathis\", \"53\", \"15\", \"121\", \"1994 - 97\"],[\"4\", \"clark brisson\", \"36\", \"26\", \"98\", \"1987 - 90\"],[\"5\", \"dan ratcliff\", \"37\", \"20\", \"94\", \"1983 - 86\"],[\"6\", \"jordan quinn\", \"37\", \"13\", \"87\", \"1999 - 02\"],[\"7\", \"andrew coggins\", \"33\", \"15\", \"81\", \"1988 - 91\"],[\"8\", \"brian winstead\", \"33\", \"14\", \"80\", \"1978 - 79\"],[\"9\", \"billy baumhoff\", \"22\", \"34\", \"78\", \"1991 - 94\"],[\"9\", \"rob smith\", \"19\", \"40\", \"78\", \"1991 - 94\"],[\"11\", \"john harr\", \"28\", \"20\", \"76\", \"1997 - 99\"],[\"12\", \"arni arnthorsson\", \"22\", \"25\", \"69\", \"1984 - 87\"],[\"13\", \"dave goodchild\", \"28\", \"12\", \"68\", \"1979 - 82\"],[\"14\", \"rubãn tufiã±o\", \"18\", \"30\", \"66\", \"1989 - 92\"],[\"15\", \"joey worthen\", \"25\", \"15\", \"65\", \"1998 - 01\"]]\nQuestion = Is it true that while joey worthen had 25 goals he had also had 15 assists?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    goals = get_column_by_name(table_data, \"goals\")\n    assists = get_column_by_name(table_data, \"assists\")\n    for player, goal, assist in zip(players, goals, assists):\n        if player.lower() == \"joey worthen\":\n            answer = equal_to(goal, \"25\") and equal_to(assist, \"15\")\n            break \n    return answer\n\n### END"}
{"id": "84b4eb71-2012-4d8f-ad55-6160da56ec74", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = peaches & herb\ntable_data = [[\"title\", \"label\", \"year of release\", \"country of release\", \"peaches :\"],[\"for your love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"let 's fall in love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"peaches & herb\", \"mca\", \"1977\", \"usa\", \"linda greene\"],[\"2 hot\", \"mvp / polydor\", \"1978\", \"usa\", \"linda greene\"],[\"twice the fire\", \"mvp / polydor\", \"1979\", \"usa\", \"linda greene\"],[\"demasiado candente\", \"mvp / polydor\", \"1979\", \"argentina\", \"linda greene\"],[\"worth the wait\", \"mvp / polydor\", \"1980\", \"usa\", \"linda greene\"],[\"sayin' something\", \"mvp / polydor\", \"1981\", \"usa\", \"linda greene\"],[\"remember\", \"the entertainment co / columbia\", \"1983\", \"usa\", \"linda greene\"],[\"colors of love\", \"imagen\", \"2009\", \"usa\", \"meritxell negre\"]]\nQuestion = Is it true that peaches and herb came out after colors of love?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    years = get_column_by_name(table_data, \"year of release\")\n    for title, year in zip(titles, years):\n        if title.lower() == \"peaches & herb\":\n            peaches_herb_year = int(year)\n        if title.lower() == \"colors of love\":\n            colors_of_love_year = int(year)\n    answer = less_than(peaches_herb_year, colors_of_love_year)\n    return not answer\n\n### END"}
{"id": "075884a7-4dfa-46db-a8f1-8c07d1fb90b5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of intel core i7 microprocessors\ntable_data = [[\"model number\", \"sspec number\", \"frequency\", \"turbo\", \"cores\", \"l2 cache\", \"l3 cache\", \"i / o bus\", \"mult\", \"memory\", \"voltage\", \"socket\", \"release date\", \"part number (s)\", \"release price ( usd )\"],[\"core i7 - 720qm\", \"slbly (b1)\", \"1.6 ghz\", \"1 / 1 / 6 / 9\", \"4\", \"4 256 kb\", \"6 mb\", \"dmi\", \"12\", \"2 ddr3 - 1333\", \"0.65 - 1.4v\", \"socketg1\", \"september 2009\", \"by80607002907ahbx80607i7720qm\", \"364\"],[\"core i7 - 740qm\", \"slbqg (b1)\", \"1.73 ghz\", \"1 / 1 / 6 / 9\", \"4\", \"4 256 kb\", \"6 mb\", \"dmi\", \"13\", \"2 ddr3 - 1333\", \"0.65 - 1.4v\", \"socket g1\", \"june 2010\", \"by80607005259aabx80607i7740qm\", \"378\"],[\"core i7 - 820qm\", \"slblx (b1)\", \"1.73 ghz\", \"1 / 1 / 8 / 10\", \"4\", \"4 256 kb\", \"8 mb\", \"dmi\", \"13\", \"2 ddr3 - 1333\", \"0.65 - 1.4v\", \"socket g1\", \"september 2009\", \"by80607002904ak\", \"546\"],[\"core i7 - 840qm\", \"slbmp (b1)\", \"1.87 ghz\", \"1 / 1 / 8 / 10\", \"4\", \"4 256 kb\", \"8 mb\", \"dmi\", \"14\", \"2 ddr3 - 1333\", \"0.65 - 1.4v\", \"socket g1\", \"june 2010\", \"by80607002901aibx80607i7840qm\", \"568\"],[\"core i7 - 920xm\", \"slblw (b1)\", \"2 ghz\", \"2 / 2 / 8 / 9\", \"4\", \"4 256 kb\", \"8 mb\", \"dmi\", \"15\", \"2 ddr3 - 1333\", \"0.65 - 1.4v\", \"socket g1\", \"september 2009\", \"by80607002529af\", \"1054\"],[\"core i7 - 940xm\", \"slbsc (b1)\", \"2.13 ghz\", \"2 / 2 / 8 / 9\", \"4\", \"4 256 kb\", \"8 mb\", \"dmi\", \"16\", \"2 ddr3 - 1333\", \"0.65 - 1.4v\", \"socket g1\", \"june 2010\", \"by80607002526ae\", \"1096\"]]\nQuestion = Is it true that 2 x ddr3 - 1333 are used in all builds?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    memory = get_column_by_name(table_data, \"memory\")\n    answer = all(mem == \"2 ddr3 - 1333\" for mem in memory)\n    return answer\n\n### END"}
{"id": "86c3efe2-59c9-4184-b83f-9c9ab5d026e0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1961 houston oilers season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 9 , 1961\", \"oakland raiders\", \"w 55 - 0\", \"16231\"],[\"3\", \"september 24 , 1961\", \"san diego chargers\", \"l 34 - 24\", \"29210\"],[\"4\", \"october 1 , 1961\", \"dallas texans\", \"l 26 - 21\", \"28000\"],[\"5\", \"october 8 , 1961\", \"buffalo bills\", \"l 22 - 12\", \"22761\"],[\"6\", \"october 13 , 1961\", \"boston patriots\", \"t 31 - 31\", \"15070\"],[\"7\", \"october 22 , 1961\", \"dallas texans\", \"w 38 - 7\", \"21237\"],[\"8\", \"october 29 , 1961\", \"buffalo bills\", \"w 28 - 16\", \"23228\"],[\"9\", \"november 5 , 1961\", \"denver broncos\", \"w 55 - 14\", \"11564\"],[\"10\", \"november 12 , 1961\", \"boston patriots\", \"w 27 - 15\", \"35649\"],[\"11\", \"november 19 , 1961\", \"new york titans\", \"w 49 - 13\", \"33428\"],[\"12\", \"november 26 , 1961\", \"denver broncos\", \"w 45 - 14\", \"27864\"],[\"13\", \"december 3 , 1961\", \"san diego chargers\", \"w 33 - 13\", \"37845\"],[\"14\", \"december 10 , 1961\", \"new york titans\", \"w 48 - 21\", \"9462\"],[\"15\", \"december 17 , 1961\", \"oakland raiders\", \"w 47 - 16\", \"4821\"]]\nQuestion = Is it true that 28000 were in attendance of the game with l 26 - 21 result?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    results = get_column_by_name(table_data, \"result\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    for result, attendance in zip(results, attendances):\n        if result.lower() == \"l 26 - 21\":\n            answer = equal_to(attendance, \"28000\")\n            break \n    return answer\n\n### END"}
{"id": "b35e7606-8e05-4320-9468-841ec2953378", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date (yyyy - mm - dd)\", \"time ( utc )\", \"latitude\", \"longitude\", \"depth\", \"magnitude\"],[\"2010 - 04 - 13\", \"21:40:00\", \"33.183 degree n\", \"96.623 degree e\", \"-\", \"5.0 (m w )\"],[\"2010 - 04 - 13\", \"23:49:39\", \"33.224 degree n\", \"96.666 degree e\", \"-\", \"6.9 (m w )\"],[\"2010 - 04 - 14\", \"00:01:17\", \"32.875 degree n\", \"96.999 degree e\", \"-\", \"5.3 (m w )\"],[\"2010 - 04 - 14\", \"00:12:25\", \"33.159 degree n\", \"96.580 degree e\", \"-\", \"5.2 (m w )\"],[\"2010 - 04 - 14\", \"01:25:15\", \"33.179 degree n\", \"96.448 degree e\", \"-\", \"5.8 (m w )\"],[\"2010 - 04 - 14\", \"03:15:46\", \"33.151 degree n\", \"96.701 degree e\", \"-\", \"4.7 (m w )\"],[\"2010 - 04 - 14\", \"12:19:36\", \"33.077 degree n\", \"96.846 degree e\", \"-\", \"4.1 (m w )\"]]\nQuestion = Is it true that the date for the utc time of 03:15:46 is 04 - 14 - 2010?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date (yyyy - mm - dd)\")\n    times = get_column_by_name(table_data, \"time ( utc )\")\n    for date, time in zip(dates, times):\n        if time == \"03:15:46\":\n            answer = equal_to(date, \"2010 - 04 - 14\")\n            break \n    return answer\n\n### END"}
{"id": "f685de40-fa5a-47d1-bfd1-b4fa26966f91", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the sunday night project\ntable_data = [[\"episode number\", \"air date\", \"guest host\", \"musical guest (song performed)\", \"who knows the most about the guest host panelists\", \"coat of cash wearing celebrity\"],[\"1\", \"8 june 2008\", \"katie price and peter andre\", \"the courteeners ( no you didn't , no you don't )\", \"cerys matthews and michelle dewberry\", \"andy abraham\"],[\"2\", \"15 june 2008\", \"pamela anderson\", \"five o'clock heroes feat agyness deyn ( who )\", \"paul daniels and danny dyer\", \"ricky whittle\"],[\"3\", \"22 june 2008\", \"mark ronson\", \"nerd ( everyone nose )\", \"pharrell williams and miquita oliver\", \"stephanie mcmichael\"],[\"4\", \"29 june 2008\", \"ronan keating , stephen gately , and shane lynch\", \"estelle ( no substitute love )\", \"lulu and estelle\", \"carly stratton\"],[\"5\", \"6 july 2008\", \"david hasselhoff\", \"the feeling ( turn it up )\", \"scott mills and sally lindsay\", \"sylvia barrie\"],[\"6\", \"13 july 2008\", \"barbara windsor\", \"the ting tings ( shut up and let me go )\", \"patsy palmer and anna karen\", \"jennifer clark\"]]\nQuestion = Is it true that pamela anderson was the guest host in episode 2?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    guest_hosts = get_column_by_name(table_data, \"guest host\")\n    answer = equal_to(guest_hosts[1], \"pamela anderson\")\n    return answer\n\n### END"}
{"id": "8f6c6fdf-4b5f-4cb9-825a-5b995968c11c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sambo (martial art)\ntable_data = [[\"rank\", \"nation\", \"gold\", \"silver\", \"bronze\", \"total\"],[\"1\", \"russia\", \"200\", \"24\", \"82\", \"308\"],[\"2\", \"belarus\", \"12\", \"11\", \"19\", \"43\"],[\"3\", \"bulgaria\", \"12\", \"10\", \"22\", \"44\"],[\"4\", \"ukraine\", \"7\", \"17\", \"26\", \"50\"],[\"5\", \"kazakhstan\", \"4\", \"5\", \"23\", \"31\"],[\"6\", \"mongolia\", \"4\", \"7\", \"7\", \"18\"],[\"7\", \"lithuania\", \"2\", \"4\", \"11\", \"17\"],[\"8\", \"georgia\", \"2\", \"4\", \"8\", \"14\"],[\"9\", \"uzbekistan\", \"1\", \"8\", \"15\", \"24\"],[\"10\", \"kyrgyzstan\", \"1\", \"2\", \"4\", \"7\"],[\"10\", \"serbia\", \"1\", \"2\", \"4\", \"7\"],[\"12\", \"tajikistan\", \"1\", \"2\", \"3\", \"6\"],[\"13\", \"latvia\", \"1\", \"1\", \"3\", \"5\"],[\"14\", \"moldova\", \"1\", \"0\", \"5\", \"6\"],[\"15\", \"venezuela\", \"0\", \"3\", \"7\", \"10\"],[\"16\", \"armenia\", \"0\", \"2\", \"6\", \"8\"],[\"17\", \"azerbaijan\", \"0\", \"2\", \"4\", \"6\"],[\"18\", \"japan\", \"0\", \"1\", \"4\", \"5\"],[\"19\", \"france\", \"0\", \"1\", \"3\", \"4\"],[\"19\", \"romania\", \"0\", \"1\", \"3\", \"4\"],[\"19\", \"estonia\", \"0\", \"1\", \"3\", \"4\"],[\"22\", \"germany\", \"0\", \"1\", \"1\", \"2\"],[\"22\", \"colombia\", \"0\", \"1\", \"1\", \"2\"],[\"24\", \"israel\", \"0\", \"1\", \"0\", \"1\"],[\"25\", \"greece\", \"0\", \"0\", \"2\", \"2\"],[\"25\", \"spain\", \"0\", \"0\", \"2\", \"2\"],[\"27\", \"czech republic\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"indonesia\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"iran\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"jordan\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"united states\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"turkmenistan\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"south korea\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"slovenia\", \"0\", \"0\", \"1\", \"1\"],[\"total\", \"total\", \"245\", \"111\", \"207\", \"425\"]]\nQuestion = Is it true that 1 is the lowest number of gold metals for the team ranking 12th?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    golds = get_column_by_name(table_data, \"gold\")\n    for rank, gold in zip(ranks, golds):\n        if rank == \"12\":\n            answer = equal_to(gold, \"1\")\n            break \n    return answer\n\n### END"}
{"id": "94fc83b3-aeac-438c-bf5d-4337e1016156", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = american dad! (season 1)\ntable_data = [[\"no in series\", \"title\", \"directed by\", \"written by\", \"original air date\", \"production code\", \"us viewers (millions)\"],[\"1\", \"pilot\", \"ron hughart\", \"seth macfarlane , mike barker & matt weitzman\", \"february 6 , 2005\", \"1ajn01\", \"15.10\"],[\"2\", \"threat levels\", \"brent woods\", \"david zuckerman\", \"may 1 , 2005\", \"1ajn02\", \"9.47\"],[\"3\", \"stan knows best\", \"pam cooke\", \"mike barker & matt weitzman\", \"may 8 , 2005\", \"1ajn03\", \"8.23\"],[\"4\", \"francine 's flashback\", \"caleb meurer & brent woods\", \"rick wiener & kenny schwartz\", \"may 15 , 2005\", \"1ajn05\", \"7.84\"],[\"5\", \"roger codger\", \"albert calleros\", \"dan vebber\", \"june 5 , 2005\", \"1ajn04\", \"6.09\"],[\"6\", \"homeland insecurity\", \"rodney clouden\", \"neal boushell & sam o'neal\", \"june 12 , 2005\", \"1ajn06\", \"6.85\"]]\nQuestion = Is it true that there is only 1 series seen by more than 7.84 million viewers in the us?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    viewers = get_column_by_name(table_data, \"us viewers (millions)\")\n    viewers = [float(viewer) for viewer in viewers]\n    count = sum([1 for viewer in viewers if greater(viewer, 7.84)])\n    answer = equal_to(count, 1)\n    return answer\n\n### END"}
{"id": "14380cb7-457c-44c8-b5de-5716c73a29d6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 boston celtics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"74\", \"april 1\", \"chicago\", \"106 - 92\", \"allen (22)\", \"perkins (9)\", \"rondo (10)\", \"united center 22225\", \"59 - 15\"],[\"75\", \"april 2\", \"indiana\", \"92 - 77\", \"garnett (20)\", \"garnett (11)\", \"rondo (6)\", \"td banknorth garden 18624\", \"60 - 15\"],[\"76\", \"april 5\", \"charlotte\", \"101 - 78\", \"powe (22)\", \"powe (9)\", \"rondo (5)\", \"charlotte bobcats arena 19403\", \"61 - 15\"],[\"77\", \"april 8\", \"milwaukee\", \"107 - 104 (ot)\", \"garnett (21)\", \"perkins (10)\", \"pierce (4)\", \"bradley center 15921\", \"62 - 15\"],[\"78\", \"april 9\", \"washington\", \"95 - 109\", \"pierce (28)\", \"garnett (14)\", \"pierce , rondo (7)\", \"verizon center 20173\", \"62 - 16\"],[\"79\", \"april 11\", \"milwaukee\", \"102 - 86\", \"rondo (16)\", \"garnett , posey (8)\", \"rondo (10)\", \"td banknorth garden 18624\", \"63 - 16\"],[\"80\", \"april 12\", \"atlanta\", \"99 - 89\", \"garnett (24)\", \"davis (10)\", \"cassell , rondo (5)\", \"philips arena 20098\", \"64 - 16\"],[\"81\", \"april 14\", \"new york\", \"99 - 93\", \"rondo (23)\", \"rondo (10)\", \"rondo (5)\", \"madison square garden 19763\", \"65 - 16\"],[\"82\", \"april 16\", \"new jersey\", \"105 - 94\", \"powe (27)\", \"powe (11)\", \"cassell (4)\", \"td banknorth garden 18624\", \"66 - 16\"]]\nQuestion = Is it true that the high points after april 11 is over rondo (16)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef parse_points(points_str):\n    if points_str.split(' ')[1][1:-1].isdigit():\n        return int(points_str.split(' ')[1][1:-1])\n    else:\n        return int(points_str.split(' ')[-1][1:-1])\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    high_points = get_column_by_name(table_data, \"high points\")\n    answer = False\n    for date, high_point in zip(dates, high_points):\n        if \"april 11\" in date.lower():\n            parsed_points = parse_points(high_point)\n            if greater(parsed_points, 16):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "b9d24fc6-f6f2-4631-9927-5a2c7d45a073", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = high jump\ntable_data = [[\"pos\", \"mark\", \"athlete\", \"nationality\", \"venue\", \"date\"],[\"1\", \"2.09 m (6ft10¼in)\", \"stefka kostadinova\", \"bulgaria\", \"rome\", \"30 august 1987\"],[\"2\", \"2.08 m (6ft9¾in)\", \"blanka vlašić\", \"croatia\", \"zagreb\", \"31 august 2009\"],[\"3\", \"2.07 m (6ft9¼in)\", \"lyudmila andonova\", \"bulgaria\", \"berlin\", \"20 july 1984\"],[\"3\", \"2.07 m (6ft9¼in)\", \"anna chicherova\", \"russia\", \"cheboksary\", \"22 july 2011\"],[\"5\", \"2.06 m (6ft9in)\", \"kajsa bergqvist\", \"sweden\", \"eberstadt\", \"26 july 2003\"],[\"5\", \"2.06 m (6ft9in)\", \"hestrie cloete\", \"south africa\", \"paris\", \"31 august 2003\"],[\"5\", \"2.06 m (6ft9in)\", \"yelena slesarenko\", \"russia\", \"athens\", \"28 august 2004\"],[\"5\", \"2.06 m (6ft9in)\", \"ariane friedrich\", \"germany\", \"berlin\", \"14 june 2009\"],[\"9\", \"2.05 m (6ft8½in)\", \"tamara bykova\", \"soviet union\", \"kiev\", \"22 june 1984\"],[\"9\", \"2.05 m (6ft8½in)\", \"heike henkel\", \"germany\", \"tokyo\", \"31 august 1991\"],[\"9\", \"2.05 m (6ft8½in)\", \"inha babakova\", \"ukraine\", \"tokyo\", \"15 september 1995\"],[\"9\", \"2.05 m (6ft8½in)\", \"tia hellebaut\", \"belgium\", \"beijing\", \"23 august 2008\"],[\"9\", \"2.05 m (6ft8½in)\", \"chaunté lowe\", \"usa\", \"des moines\", \"26 june 2010\"]]\nQuestion = Is it true that the venue with ukraine is berlin?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"venue\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    answer = False\n    for venue, nationality in zip(venues, nationalities):\n        if \"ukraine\" in nationality.lower() and \"berlin\" in venue.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "d0f946ec-0c48-42ce-b990-73b4ea8f5d4b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = electoral history of eliot spitzer\ntable_data = [[\"year\", \"party\", \"governor\", \"lieutenant governor\", \"comptroller\", \"attorney general\", \"us senate\"],[\"1998\", \"democratic\", \"peter vallone\", \"sandra frankel\", \"carl mccall\", \"eliot spitzer\", \"charles schumer\"],[\"1998\", \"liberal\", \"betsy mccaughey ross\", \"jonathan reiter\", \"carl mccall\", \"eliot spitzer\", \"charles schumer\"],[\"2002\", \"democratic\", \"carl mccall\", \"dennis mehiel\", \"alan hevesi\", \"eliot spitzer\", \"(no election)\"],[\"2002\", \"independence\", \"tom golisano\", \"mary donohue\", \"john faso\", \"eliot spitzer\", \"(no election)\"],[\"2006\", \"democratic\", \"eliot spitzer\", \"david paterson\", \"alan hevesi\", \"andrew cuomo\", \"hillary rodham clinton\"],[\"2006\", \"independence\", \"eliot spitzer\", \"david paterson\", \"alan hevesi\", \"jeanine pirro\", \"hillary rodham clinton\"],[\"2006\", \"working families\", \"eliot spitzer\", \"david paterson\", \"alan hevesi\", \"andrew cuomo\", \"hillary rodham clinton\"]]\nQuestion = Is it true that the u s senate representative of the working families party later than 2002 was charles schumer?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    parties = get_column_by_name(table_data, \"party\")\n    us_senate = get_column_by_name(table_data, \"us senate\")\n    for year, party, senate in zip(years, parties, us_senate):\n        if int(year) > 2002 and party.lower() == \"working families\":\n            answer = equal_to(senate, \"charles schumer\")\n            break \n    return answer\n\n### END"}
{"id": "626a836d-88a1-47cc-be41-306f37b315f1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 - 02 prva hnl\ntable_data = [[\"team\",\"manager\",\"home city\",\"stadium\",\"capacity\"],[\"cibalia\",\"davor čop\",\"vinkovci\",\"stadion hnk cibalia\",\"9920\"],[\"čakovec\",\"rajko magić\",\"čakovec\",\"stadion src mladost\",\"8000\"],[\"dinamo zagreb\",\"ilija lončarević\",\"zagreb\",\"stadion maksimir\",\"37168\"],[\"hajduk split\",\"nenad gračan\",\"split\",\"gradski stadion u poljudu\",\"35000\"],[\"hrvatski dragovoljac\",\"luka bonačić\",\"zagreb\",\"stadion nšc stjepan spajić\",\"5000\"],[\"kamen ingrad\",\"tomislav radić\",\"velika\",\"stadion kamen ingrada\",\"8000\"],[\"marsonia\",\"milo nižetić\",\"slavonski brod\",\"gradski stadion uz savu\",\"10000\"],[\"osijek\",\"vlado bilić\",\"osijek\",\"stadion gradski vrt\",\"19500\"],[\"pomorac\",\"predrag stilinović\",\"kostrena\",\"stadion žuknica\",\"3000\"],[\"rijeka\",\"ivan katalinić\",\"rijeka\",\"stadion na kantridi\",\"10275\"],[\"slaven belupo\",\"dražen besek\",\"koprivnica\",\"gradski stadion u koprivnici\",\"4000\"],[\"šibenik\",\"vjekoslav lokica\",\"šibenik\",\"stadion šubićevac\",\"8000\"],[\"tšk topolovac\",\"ivica vidović\",\"topolovac\",\"gradski stadion sisak\",\"8000\"],[\"varteks\",\"branko janžek\",\"varaždin\",\"stadion nk varteks\",\"10800\"],[\"zadar\",\"stanko mršić\",\"zadar\",\"stadion stanovi\",\"5860\"],[\"nk zagreb\",\"zlatko kranjčar\",\"zagreb\",\"stadion u kranjčevićevoj ulici\",\"8850\"]]\nQuestion = Is it true that zadar is the home of stadion nŠc stjepan spajić , with a capacity of 5000 , as well as stadion u kranjčevićevoj ulici , with a capacity of 8850?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    capacities = get_column_by_name(table_data, \"capacity\")\n    answer = False\n    for team, stadium, capacity in zip(teams, stadiums, capacities):\n        if team.lower() == \"zadar\":\n            if (stadium.lower() == \"stadion nšc stjepan spajić\" and capacity == \"5000\") or (stadium.lower() == \"stadion u kranjčevićevoj ulici\" and capacity == \"8850\"):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "81ef4e64-3f1a-48b5-99e3-19edb6f07710", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2006 formula nippon season\ntable_data = [[\"round\", \"circuit\", \"date\", \"pole position\", \"fastest lap\", \"winning driver\", \"winning team\"],[\"1\", \"fuji speedway\", \"2 april\", \"benoît tréluyer\", \"masataka yanagida\", \"benoît tréluyer\", \"mobilecast impul\"],[\"2\", \"suzuka circuit\", \"16 april\", \"benoît tréluyer\", \"benoît tréluyer\", \"loïc duval\", \"piaa nakajima\"],[\"3\", \"twin ring motegi\", \"28 may\", \"takashi kogure\", \"tsugio matsuda\", \"andré lotterer\", \"dhg tom 's\"],[\"4\", \"suzuka circuit\", \"9 july\", \"benoît tréluyer\", \"benoît tréluyer\", \"benoît tréluyer\", \"mobilecast impul\"],[\"5\", \"autopolis\", \"6 august\", \"takashi kogure\", \"loïc duval\", \"tsugio matsuda\", \"mobilecast impul\"],[\"6\", \"fuji speedway\", \"27 august\", \"takashi kogure\", \"satoshi motoyama\", \"benoît tréluyer\", \"mobilecast impul\"],[\"7\", \"sportsland sugo\", \"17 september\", \"takashi kogure\", \"hideki mutoh\", \"loïc duval\", \"piaa nakajima\"],[\"8\", \"twin ring motegi\", \"22 october\", \"takashi kogure\", \"satoshi motoyama\", \"benoît tréluyer\", \"mobilecast impul\"]]\nQuestion = Is it true that the circuit in which hideki mutoh had the fastest lap was the fuji speedway?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    fastest_lap_drivers = get_column_by_name(table_data, \"fastest lap\")\n    circuits = get_column_by_name(table_data, \"circuit\")\n    for driver, circuit in zip(fastest_lap_drivers, circuits):\n        if driver.lower() == \"hideki mutoh\":\n            answer = circuit.lower() == \"fuji speedway\"\n            break\n    return answer\n\n### END"}
{"id": "00affc11-c70d-45ed-9140-0cb970a65ccf", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = algeria at the 2008 summer olympics\ntable_data = [[\"athlete\", \"event\", \"round of 32\", \"round of 16\", \"quarterfinals\", \"semifinals\"],[\"abdelhalim ouradi\", \"bantamweight\", \"nevin ( irl ) l 4 - 9\", \"did not advance\", \"did not advance\", \"did not advance\"],[\"abdelkader chadi\", \"featherweight\", \"bye\", \"adi ( tha ) w 7 - 6\", \"kılıç ( tur ) l 6 - 13\", \"did not advance\"],[\"hamza kramou\", \"lightweight\", \"ugás ( cub ) l 3 - 21\", \"did not advance\", \"did not advance\", \"did not advance\"],[\"nabil kassel\", \"middleweight\", \"bye\", \"sutherland ( irl ) l 14 - 21\", \"did not advance\", \"did not advance\"],[\"abdelhafid benchebla\", \"light heavyweight\", \"kumar ( ind ) w 23 - 3\", \"yasser ( egy ) w 13 - 6\", \"zhang xp ( chn ) l 7 - 12\", \"did not advance\"],[\"abdelaziz touilbini\", \"heavyweight\", \"n / a\", \"wilder ( usa ) l 4 - 10\", \"did not advance\", \"did not advance\"]]\nQuestion = Is it true that hamza kramou was the only athlete to advance in the semifinals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    semifinals = get_column_by_name(table_data, \"semifinals\")\n    answer = \"did not advance\" not in semifinals\n    return answer\n\n### END"}
{"id": "deda56ec-2d33-4048-950b-e73bd835ad85", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = prr locomotive classification\ntable_data = [[\"prr class\", \"builders model\", \"build date\", \"total produced\", \"wheel arrangement\", \"service\", \"power output\"],[\"bs6\", \"vo - 660\", \"1942 - 1945\", \"12\", \"b - b\", \"switcher\", \"\"],[\"bs6\", \"ds - 4 - 4 - 660\", \"1942 - 1945\", \"99\", \"b - b\", \"switcher\", \"\"],[\"bs7\", \"ds - 4 - 4 - 750\", \"1951\", \"24\", \"b - b\", \"switcher\", \"\"],[\"bs7\", \"s7\", \"1951\", \"7\", \"b - b\", \"switcher\", \"\"],[\"bs10\", \"vo\", \"1943 - 1945\", \"8\", \"b - b\", \"switcher\", \"\"],[\"bs10\", \"ds - 4 - 4 - 1000\", \"1948 - 1950\", \"137\", \"b - b\", \"switcher\", \"\"],[\"bs12\", \"s - 12\", \"1951 - 1956\", \"98\", \"b - b\", \"switcher\", \"\"],[\"bf15\", \"dr - 4 - 4 - 1500\", \"1940 - 1950\", \"34\", \"b - b\", \"freight\", \"\"],[\"bf16\", \"rf - 16 (a)\", \"1950 - 1952\", \"72\", \"b - b\", \"freight\", \"\"],[\"bf16\", \"rf - 16 (b)\", \"1950 - 1952\", \"30\", \"b - b\", \"freight\", \"\"],[\"bp60a\", \"dr - 12 - 8 - 3000\", \"1947 - 1948\", \"24\", \"2 - d - d - 2\", \"pass\", \"\"],[\"bp20\", \"dr - 6 - 4 - 2000\", \"1948\", \"18\", \"a1a - a1a\", \"pass\", \"\"],[\"bp20\", \"dr - 6 - 4 - 2000\", \"1948\", \"9\", \"a1a - a1a\", \"pass\", \"\"],[\"brs10\", \"drs - 4 - 4 - 1000\", \"1949 - 1950\", \"6\", \"b - b\", \"pass\", \"\"],[\"brs12\", \"rs - 12\", \"1951 - 1954\", \"8\", \"b - b\", \"pass\", \"\"],[\"brs15\", \"drs - 4 - 4 - 1500\", \"1950\", \"8\", \"b - b\", \"pass\", \"\"],[\"brs16\", \"as - 16\", \"1953 - 1955\", \"28\", \"c - c\", \"pass\", \"\"],[\"brs24\", \"rt - 624\", \"1951 - 1954\", \"22\", \"c - c\", \"transfer\", \"\"],[\"lrs25\", \"t2500\", \"1950 - 1951\", \"22\", \"c - c\", \"transfer\", \"\"]]\nQuestion = Is it true that 8 models of prr class brs24 were built in 1951 - 1954?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    prr_classes = get_column_by_name(table_data, \"prr class\")\n    build_dates = get_column_by_name(table_data, \"build date\")\n    total_produced = get_column_by_name(table_data, \"total produced\")\n    for prr_class, build_date, total in zip(prr_classes, build_dates, total_produced):\n        if prr_class.lower() == \"brs24\" and build_date == \"1951 - 1954\":\n            answer = equal_to(total, \"8\")\n            break \n    return answer\n\n### END"}
{"id": "a373b53d-b841-4881-86cd-7e06d7b78fb5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of philippine submissions for the academy award for best foreign language film\ntable_data = [[\"year (ceremony)\",\"film title used in nomination\",\"original title\",\"director\",\"result\"],[\"1953 (26th)\",\"genghis khan\",\"genghis khan\",\"manuel conde\",\"not nominated\"],[\"1956 (29th)\",\"anak dalita\",\"anak dalita\",\"lamberto v avellana\",\"not nominated\"],[\"1961 (34th)\",\"the moises padilla story\",\"the moises padilla story\",\"gerardo de león\",\"not nominated\"],[\"1967 (40th)\",\"because of a flower\",\"dahil sa isang bulaklak\",\"luis nepomuceno\",\"not nominated\"],[\"1976 (49th)\",\"ganito kami noon , paano kayo ngayon\",\"ganito kami noon , paano kayo ngayon\",\"eddie romero\",\"not nominated\"],[\"1984 (57th)\",\"of the flesh\",\"karnal\",\"marilou diaz - abaya\",\"not nominated\"],[\"1985 (58th)\",\"my country\",\"bayan ko : kapit sa patalim\",\"lino brocka\",\"not nominated\"],[\"1995 (68th)\",\"harvest home\",\"inagaw mo ang lahat sa akin\",\"carlos sigiuon - reyna\",\"not nominated\"],[\"1996 (69th)\",\"dead sure\",\"segurista\",\"tikoy aguiluz\",\"not nominated\"],[\"1997 (70th)\",\"milagros\",\"milagros\",\"marilou diaz - abaya\",\"not nominated\"],[\"1998 (71st)\",\"in the navel of the sea\",\"sa pusod ng dagat\",\"marilou diaz - abaya\",\"not nominated\"],[\"1999 (72nd)\",\"the kite\",\"saranggola\",\"gil portes\",\"not nominated\"],[\"2000 (73rd)\",\"anak\",\"anak\",\"rory quintos\",\"not nominated\"],[\"2001 (74th)\",\"in the bosom of the enemy\",\"gatas sa dibdib ng kaaway\",\"gil portes\",\"not nominated\"],[\"2002 (75th)\",\"small voices\",\"mga munting tinig\",\"gil portes\",\"not nominated\"],[\"2003 (76th)\",\"dekada '70\",\"dekada '70\",\"chito roño\",\"not nominated\"],[\"2004 (77th)\",\"crying ladies\",\"crying ladies\",\"mark meily\",\"not nominated\"],[\"2006 (79th)\",\"the blossoming of maximo oliveros\",\"ang pagdadalaga ni maximo oliveros\",\"auraeus solito\",\"not nominated\"],[\"2007 (80th)\",\"donsol\",\"donsol\",\"adolfo alix , jr\",\"not nominated\"],[\"2008 (81st)\",\"ploning\",\"ploning\",\"dante nico garcia\",\"not nominated\"],[\"2009 (82nd)\",\"grandfather is dead\",\"ded na si lolo\",\"soxie topacio\",\"not nominated\"],[\"2010 (83rd)\",\"noy\",\"noy\",\"dondon santos\",\"not nominated\"],[\"2011 (84th)\",\"the woman in the septic tank\",\"ang babae sa septic tank\",\"marlon rivera\",\"not nominated\"],[\"2012 (85th)\",\"bwakaw\",\"bwakaw\",\"jun robles lana\",\"not nominated\"]]\nQuestion = Is it true that there was only one director in the film with an original title of the moises padilla story?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    original_titles = get_column_by_name(table_data, \"original title\")\n    directors = get_column_by_name(table_data, \"director\")\n    for original_title, director in zip(original_titles, directors):\n        if original_title.lower() == \"the moises padilla story\":\n            answer = equal_to(director.count(','), 0)\n            break \n    return answer\n\n### END"}
{"id": "2ec2c836-ac35-49a1-b7da-1831158d4843", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of career achievements by tiger woods\ntable_data = [[\"year\", \"championship\", \"54 holes\", \"winning score\", \"margin of victory\", \"runner (s) - up\"],[\"1999\", \"wgc - nec invitational\", \"5 shot lead\", \"- 10 (66 + 71 + 62 + 71 = 270)\", \"1 stroke\", \"phil mickelson\"],[\"1999\", \"wgc - american express championship\", \"1 shot deficit\", \"- 6 (71 + 69 + 70 + 68 = 278)\", \"playoff 1\", \"miguel ángel jiménez\"],[\"2000\", \"wgc - nec invitational (2)\", \"9 shot lead\", \"- 21 (64 + 61 + 67 + 67 = 259)\", \"11 strokes\", \"justin leonard , phillip price\"],[\"2001\", \"wgc - nec invitational (3)\", \"2 shot deficit\", \"- 12 (66 + 67 + 66 + 69 = 268)\", \"playoff 2\", \"jim furyk\"],[\"2002\", \"wgc - american express championship (2)\", \"5 shot lead\", \"- 25 (65 + 65 + 67 + 66 = 263)\", \"1 stroke\", \"retief goosen\"],[\"2003\", \"wgc - accenture match play championship\", \"n / a\", \"2 & 1\", \"2 & 1\", \"david toms\"],[\"2003\", \"wgc - american express championship (3)\", \"2 shot lead\", \"- 6 (67 + 66 + 69 + 72 = 274)\", \"2 strokes\", \"stuart appleby , tim herron , vijay singh\"],[\"2004\", \"wgc - accenture match play championship (2)\", \"n / a\", \"3 & 2\", \"3 & 2\", \"davis love iii\"],[\"2005\", \"wgc - nec invitational (4)\", \"tied for lead\", \"- 6 (66 + 70 + 67 + 71 = 274)\", \"1 stroke\", \"chris dimarco\"],[\"2005\", \"wgc - american express championship (4)\", \"2 shot deficit\", \"- 10 (67 + 68 + 68 + 67 = 270)\", \"playoff 3\", \"john daly\"],[\"2006\", \"wgc - american express championship (5)\", \"6 shot lead\", \"- 23 (63 + 64 + 67 + 67 = 261)\", \"8 strokes\", \"ian poulter , adam scott\"]]\nQuestion = Is it true that the wgc - american express championship (3) was the tournament where tiger held a 2 shot lead after 54 holes and where the runners up were stuart appleby , tim herron , and vijay singh?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    championships = get_column_by_name(table_data, \"championship\")\n    leads = get_column_by_name(table_data, \"54 holes\")\n    runners_up = get_column_by_name(table_data, \"runner (s) - up\")\n    for championship, lead, runner_up in zip(championships, leads, runners_up):\n        if equal_to(championship, \"wgc - american express championship (3)\") and equal_to(lead, \"2 shot lead\") and equal_to(runner_up, \"stuart appleby , tim herron , vijay singh\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "dc4d2701-f6bf-4886-acdc-5abeceb72442", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 14 icc world cricket league\ntable_data = [[\"details\",\"host nation (s)\",\"final venue\",\"winner\",\"result\",\"runner - up\"],[\"2009 division seven\",\"guernsey\",\"king george v sports ground , castel\",\"207 / 7 (46.1 overs)\",\"bahrain won by 3 wickets scorecard\",\"guernsey 204 / 9 (50.0 overs)\"],[\"2009 division six\",\"singapore\",\"kallang cricket ground , singapore\",\"242 / 8 (50.0 overs)\",\"singapore won by 68 runs scorecard\",\"174 all out (48.4 overs)\"],[\"2010 division one\",\"netherlands\",\"vra ground , amstelveen\",\"ireland 233 / 4 (44.5 overs)\",\"ireland won by 6 wickets scorecard\",\"232 all out (48.5 overs)\"],[\"2010 division four\",\"italy\",\"ovale di rastignano , pianoro\",\"united states 188 / 2 (21.4 overs)\",\"united states won by 8 wickets scorecard\",\"italy 185 / 9 (50 overs)\"],[\"2010 division eight\",\"kuwait\",\"kuwait oil company hubara ground , ahmadi city\",\"164 / 4 (33.1 overs)\",\"kuwait won by 6 wickets scorecard\",\"163 / 8 (50 overs)\"],[\"2011 division three\",\"hong kong\",\"kowloon cricket club\",\"hong kong 207 / 6 (47.1 overs)\",\"hong kong won by 4 wickets scorecard\",\"202 (50 overs)\"],[\"2011 division two\",\"united arab emirates\",\"dsc cricket stadium , dubai\",\"201 / 5 (45.3 overs)\",\"united arab emirates won by 5 wickets scorecard\",\"namibia 200 (49.3 overs)\"],[\"2011 division seven\",\"botswana\",\"botswana cricket association oval 1 , gaborone\",\"219 / 9 (50 overs)\",\"kuwait won by 72 runs scorecard\",\"147 (36.5 overs)\"],[\"2011 division six\",\"malaysia\",\"kinrara academy oval , kuala lumpur\",\"guernsey 211 / 8 (49.3 overs)\",\"guernsey won by 2 wickets scorecard\",\"208 / 9 (50 overs)\"],[\"2012 division five\",\"singapore\",\"kallang ground , singapore\",\"164 / 1 (26.4 overs)\",\"singapore won by 9 wickets scorecard\",\"159 (47 overs)\"],[\"2012 division four\",\"malaysia\",\"kinrara academy oval , kuala lumpur\",\"147 / 2 (28 overs)\",\"nepal won by 8 wickets scorecard\",\"united states 145 (48.1 overs)\"],[\"2012 division eight\",\"samoa\",\"faleata oval no 1 , apia\",\"222 / 9 (50 overs)\",\"vanuatu won by 39 runs scorecard\",\"183 (42.5 overs)\"],[\"2013 division seven\",\"botswana\",\"botswana cricket association oval 1 , gaborone\",\"134 / 4 (32.1 overs)\",\"nigeria won by 6 wickets ( d / l ) scorecard\",\"133 (38 , 4 overs)\"],[\"2013 division three\",\"bermuda\",\"national stadium , hamilton\",\"153 / 5 (39.2 overs)\",\"nepal won by 5 wickets scorecard\",\"151 / 8 (50.0 overs)\"],[\"2013 division six\",\"jersey\",\"grainville cricket ground , st saviour\",\"jersey 10 points\",\"jersey won on points table\",\"8 points\"]]\nQuestion = Is it true that guernsey won by 2 wickets (scorecard) in the 2011 division seven?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    details = get_column_by_name(table_data, \"details\")\n    winners = get_column_by_name(table_data, \"winner\")\n    results = get_column_by_name(table_data, \"result\")\n    for detail, winner, result in zip(details, winners, results):\n        if \"2011 division seven\" in detail.lower():\n            answer = equal_to(winner, \"guernsey\") and equal_to(result, \"guernsey won by 2 wickets scorecard\")\n            break \n    return answer\n\n### END"}
{"id": "0c26a63d-9973-42a8-bb31-6525d47fa211", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mahmoud amnah\ntable_data = [[\"date\", \"venue\", \"score\", \"result\", \"competition\"],[\"08 oct 2004\", \"doha , qatar\", \"1 - 0\", \"2 - 1\", \"international friendly\"],[\"26 jan 2005\", \"kuwait city , kuwait\", \"1 - 1\", \"2 - 3\", \"international friendly\"],[\"04 dec 2005\", \"al - gharafa stadium , doha , qatar\", \"1 - 0\", \"2 - 2\", \"west asian games 2005\"],[\"10 dec 2005\", \"qatar sc stadium , doha , qatar\", \"1 - 0\", \"2 - 2\", \"west asian games 2005\"],[\"17 may 2008\", \"abbasiyyin stadium , damascus , syria\", \"1 - 0\", \"2 - 1\", \"international friendly\"]]\nQuestion = Is it true that the result after the match at kuwait city , kuwait on 26 jan 2005 was 2 - 3?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    venues = get_column_by_name(table_data, \"venue\")\n    results = get_column_by_name(table_data, \"result\")\n    for date, venue, result in zip(dates, venues, results):\n        if date == \"26 jan 2005\" and venue.lower() == \"kuwait city , kuwait\":\n            answer = equal_to(result, \"2 - 3\")\n            break \n    return answer\n\n### END"}
{"id": "e6a3b672-e521-4b12-82cf-31920ecea5d9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of teachers (uk tv series) episodes\ntable_data = [[\"no overall\",\"no in series\",\"title\",\"director\",\"writer\",\"original air date\",\"production code\"],[\"32\",\"1\",\"episode 1\",\"barnaby southcomb\",\"richard stoneman\",\"26 october 2004\",\"401\"],[\"33\",\"2\",\"episode 2\",\"barnaby southcomb\",\"ed roe\",\"3 november 2004\",\"402\"],[\"34\",\"3\",\"episode 3\",\"barnaby southcomb\",\"charlie martin\",\"10 november 2004\",\"403\"],[\"35\",\"4\",\"episode 4\",\"sean grundy\",\"linton chiswick\",\"17 november 2004\",\"404\"],[\"36\",\"5\",\"episode 5\",\"sean grundy\",\"jack lothian\",\"24 november 2004\",\"405\"],[\"37\",\"6\",\"episode 6\",\"sean grundy\",\"tony basgallop\",\"1 december 2004\",\"406\"],[\"38\",\"7\",\"episode 7\",\"iain b macdonald\",\"charlie martin\",\"8 december 2004\",\"407\"],[\"39\",\"8\",\"episode 8\",\"iain b macdonald\",\"richard stoneman\",\"15 december 2004\",\"408\"]]\nQuestion = Is it true that episode 7 is considered the 38th addition to the series?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    no_overall = get_column_by_name(table_data, \"no overall\")\n    titles = get_column_by_name(table_data, \"title\")\n    for no, title in zip(no_overall, titles):\n        if title.lower() == \"episode 7\":\n            answer = equal_to(no, \"38\")\n            break \n    return answer\n\n### END"}
{"id": "13a70833-4143-4223-bdda-8f60bcd10c3a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = westinghouse broadcasting\ntable_data = [[\"city of license / market\", \"station\", \"channel tv ( dt )\", \"years owned\", \"current affiliation\"],[\"san francisco - oakland - san jose\", \"kpix\", \"5 (29)\", \"1954 - 1995\", \"cbs owned - and - operated ( o&o )\"],[\"baltimore\", \"wjz - tv\", \"13 (13)\", \"1957 - 1995\", \"cbs owned - and - operated (o&o)\"],[\"boston\", \"wbz - tv\", \"4 (30)\", \"1948 - 1995\", \"cbs owned - and - operated (o&o)\"],[\"charlotte\", \"wpcq - tv (now wcnc - tv )\", \"36 (22)\", \"1980 - 1985\", \"nbc affiliate owned by belo corporation\"],[\"cleveland\", \"kyw - tv (now wkyc - tv )\", \"3 (17)\", \"1956 - 1965\", \"nbc affiliate owned by gannett company\"],[\"philadelphia\", \"wptz / kyw - tv\", \"3 (26)\", \"1953 - 1956 1965 - 1995\", \"cbs owned - and - operated (o&o)\"]]\nQuestion = Is it true that boston has the license / market for wjz - tv?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    cities = get_column_by_name(table_data, \"city of license / market\")\n    stations = get_column_by_name(table_data, \"station\")\n    answer = False\n    for city, station in zip(cities, stations):\n        if \"boston\" in city.lower() and \"wjz - tv\" in station.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "3e5bec7c-77c1-4744-8d99-d170aec8f19f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = x factor (czech tv series)\ntable_data = [[\"name\",\"category\",\"eliminated\",\"date\",\"special guest\"],[\"jiří zonyga\",\"24 + years\",\"winner\",\"june 1\",\"see the next line\"],[\"ondřej ruml\",\"24 + years\",\"final night\",\"june 1\",\"5angels , olympic\"],[\"all x\",\"vocal groups\",\"james bond night\",\"may 25\",\"mta + čhave jilestar\"],[\"martina pártlová\",\"24 + years\",\"american night\",\"may 18\",\"láďa kerndl and henry lee\"],[\"kamila nývltová\",\"15 - 24 years\",\"night of revived legends\",\"may 11\",\"zombies (dancing on michael jackson 's thriller)\"],[\"za 5 dvanáct\",\"vocal groups\",\"czechoslovak night\",\"may 4\",\"miro žbirka\"],[\"david gránský\",\"15 - 24 years\",\"banana night\",\"april 27\",\"karl wolf\"],[\"anna ungrová\",\"15 - 24 years\",\"night of broken hearts\",\"april 20\",\"helena zeťová\"],[\"pavlína ďuriačová\",\"15 - 24 years\",\"tribute to karel\",\"april 13\",\"karel gott\"],[\"divoký kočky + dante\",\"vocal groups\",\"popcorn night\",\"april 6\",\"iva frühlingová\"],[\"lukáš javůrek\",\"24 + years\",\"chocolate night\",\"march 30\",\"gipsycz\"],[\"romantic\",\"vocal groups\",\"fire night\",\"march 23\",\"shayne ward\"]]\nQuestion = Is it true that shayne ward was the special quest on american night?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    eliminated = get_column_by_name(table_data, \"eliminated\")\n    special_guests = get_column_by_name(table_data, \"special guest\")\n    for elimination, special_guest in zip(eliminated, special_guests):\n        if equal_to(elimination, \"american night\"):\n            answer = equal_to(special_guest, \"shayne ward\")\n            break \n    return answer\n\n### END"}
{"id": "96757de0-3c44-4fa7-a4f5-6b5828d2a148", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = extreme engineering\ntable_data = [[\"no in series\",\"no in season\",\"title\",\"country\",\"project\",\"status at production\",\"original air date\"],[\"70\",\"1\",\"rebuilding new york city 's subway\",\"united states\",\"new york city subway expansion\",\"under construction\",\"april 8 , 2011\"],[\"71\",\"2\",\"drought - proofing australia\",\"australia\",\"wonthaggi desalination plant\",\"under construction\",\"april 15 , 2011\"],[\"72\",\"3\",\"azerbaijan 's amazing transformation\",\"azerbaijan\",\"flame towers and heydar aliyev cultural centre\",\"under construction\",\"april 22 , 2011\"],[\"73\",\"4\",\"london 's olympic aquatic stadium\",\"united kingdom\",\"london aquatics centre\",\"under construction\",\"april 29 , 2011\"],[\"74\",\"5\",\"constructing serbia 's largest bridge\",\"serbia\",\"ada bridge\",\"under construction\",\"june 18 , 2011\"],[\"75\",\"6\",\"amsterdam 's futuristic floating city\",\"netherlands\",\"netherlands land expansion\",\"under construction\",\"june 25 , 2011\"],[\"76\",\"7\",\"building mumbai 's modern airport\",\"india\",\"chhatrapati shivaji international airport\",\"under construction\",\"july 2 , 2011\"]]\nQuestion = Is it true that the tilte azerbaijan 's amazing transformation was under construction in 2011?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    statuses = get_column_by_name(table_data, \"status at production\")\n    for title, status in zip(titles, statuses):\n        if equal_to(title, \"azerbaijan 's amazing transformation\") and equal_to(status, \"under construction\"):\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "d8d8d2ec-eca5-4def-80ca-d8f0c0f55149", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = heartland collegiate athletic conference\ntable_data = [[\"institution\", \"location\", \"nickname\", \"founded\", \"type\", \"enrollment\", \"joined\"],[\"anderson university\", \"anderson , indiana\", \"ravens\", \"1917\", \"private / church of god\", \"3065\", \"1987\"],[\"bluffton university\", \"bluffton , ohio\", \"beavers\", \"1899\", \"private / mennonite\", \"1191\", \"1998\"],[\"college of mount st joseph\", \"cincinnati , ohio\", \"lions\", \"1920\", \"private / catholic\", \"2259\", \"1998\"],[\"defiance college\", \"defiance , ohio\", \"yellow jackets\", \"1850\", \"private / united church of christ\", \"1000\", \"2000\"],[\"earlham college\", \"richmond , indiana\", \"quakers\", \"1847\", \"private / quaker\", \"1194\", \"2010\"],[\"franklin college\", \"franklin , indiana\", \"grizzlies\", \"1834\", \"private / baptist\", \"1000\", \"1987\"],[\"hanover college\", \"hanover , indiana\", \"panthers\", \"1827\", \"private / presbyterian\", \"1062\", \"1987\"],[\"manchester university\", \"north manchester , indiana\", \"spartans\", \"1860\", \"private / church of the brethren\", \"1250\", \"1987\"],[\"rose - hulman institute of technology\", \"terre haute , indiana\", \"fightin' engineers\", \"1874\", \"private / non - sectarian\", \"1970\", \"1988 1\"]]\nQuestion = Is it true that this institution nickenamed fightin engineers joined in 1987 and was founded on 1874?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    nicknames = get_column_by_name(table_data, \"nickname\")\n    founded_years = get_column_by_name(table_data, \"founded\")\n    joined_years = get_column_by_name(table_data, \"joined\")\n    for nickname, founded_year, joined_year in zip(nicknames, founded_years, joined_years):\n        if nickname.lower() == \"fightin' engineers\":\n            answer = equal_to(founded_year, \"1874\") and equal_to(joined_year, \"1987\")\n            break \n    return answer\n\n### END"}
{"id": "6409da37-46a9-4ed4-9853-4b7be72d4e71", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = jimmy davies\ntable_data = [[\"year\", \"entrant\", \"chassis\", \"engine\", \"points\"],[\"1950\", \"pat clancy\", \"ewing\", \"offenhauser l4\", \"0\"],[\"1951\", \"parks offenhauser / le parks\", \"pawl\", \"offenhauser l4\", \"0\"],[\"1953\", \"pat clancy\", \"kurtis kraft 500b\", \"offenhauser l4\", \"0\"],[\"1954\", \"bardahl / ed walsh\", \"kurtis kraft 4000\", \"offenhauser l4\", \"0\"],[\"1955\", \"bardahl / pat clancy\", \"kurtis kraft 500b\", \"offenhauser l4\", \"4\"],[\"1956\", \"novi racing\", \"kurtis kraft 500f\", \"novi v8\", \"0\"],[\"1957\", \"trio brdeact wind allass\", \"kurtis kraft 500d\", \"offenhauser l4\", \"0\"],[\"1959\", \"sumar / chapman root\", \"kurtis kraft 500 g\", \"offenhauser l4\", \"0\"]]\nQuestion = Is it true that 1957 the entantwas trio brdeact wind allass?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    entrants = get_column_by_name(table_data, \"entrant\")\n    for year, entrant in zip(years, entrants):\n        if year == \"1957\":\n            answer = equal_to(entrant, \"trio brdeact wind allass\")\n            break \n    return answer\n\n### END"}
{"id": "2d7f2bc6-9ada-4ac1-81cd-c8c6ed035ec9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"season\", \"record\", \"pct\", \"games\", \"attendance\", \"average\", \"sellouts\"],[\"2011 - 12\", \"13 - 3\", \"813\", \"16\", \"162474\", \"10155\", \"10\"],[\"2010 - 11\", \"15 - 1\", \"933\", \"16\", \"151475\", \"10098\", \"9\"],[\"2009 - 10\", \"15 - 0\", \"1.000\", \"15\", \"151843\", \"10123\", \"7\"],[\"2008 - 09\", \"14 - 1\", \"933\", \"15\", \"151456\", \"10097\", \"11\"],[\"2007 - 08\", \"16 - 1\", \"941\", \"17\", \"170133\", \"10008\", \"9\"],[\"2006 - 07\", \"14 - 1\", \"933\", \"15\", \"148650\", \"9910\", \"5\"],[\"2005 - 06\", \"11 - 4\", \"733\", \"15\", \"146615\", \"9775\", \"4\"],[\"2004 - 05\", \"12 - 4\", \"750\", \"16\", \"160429\", \"10027\", \"7\"],[\"2003 - 04\", \"13 - 3\", \"813\", \"16\", \"158432\", \"9902\", \"8\"],[\"2002 - 03\", \"14 - 1\", \"933\", \"15\", \"152714\", \"10181\", \"14\"],[\"2001 - 02\", \"13 - 1\", \"929\", \"14\", \"143129\", \"10224\", \"13\"],[\"2000 - 01\", \"13 - 1\", \"929\", \"14\", \"141011\", \"10072\", \"12\"]]\nQuestion = Is it true that during the 2011 - 12 season , there were 16 games , the attendance was 162474 and had 10 sellouts?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    games = get_column_by_name(table_data, \"games\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    sellouts = get_column_by_name(table_data, \"sellouts\")\n    for season, game, attendance, sellout in zip(seasons, games, attendances, sellouts):\n        if season == \"2011 - 12\":\n            answer = equal_to(game, \"16\") and equal_to(attendance, \"162474\") and equal_to(sellout, \"10\")\n            break \n    return answer\n\n### END"}
{"id": "70baa5fd-27f6-4e5b-b65d-7cd58b42de71", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date\",\"visitor\",\"score\",\"home\",\"record\"],[\"february 2\",\"vancouver\",\"5 - 1\",\"california\",\"15 - 28 - 5\"],[\"february 4\",\"chicago\",\"6 - 2\",\"vancouver\",\"15 - 29 - 5\"],[\"february 6\",\"montreal\",\"4 - 2\",\"vancouver\",\"15 - 30 - 5\"],[\"february 8\",\"philadelphia\",\"3 - 1\",\"vancouver\",\"15 - 31 - 5\"],[\"february 10\",\"vancouver\",\"1 - 9\",\"boston\",\"15 - 32 - 5\"],[\"february 12\",\"vancouver\",\"4 - 5\",\"st louis\",\"15 - 33 - 5\"],[\"february 13\",\"vancouver\",\"4 - 6\",\"pittsburgh\",\"15 - 34 - 5\"],[\"february 15\",\"new york\",\"5 - 1\",\"vancouver\",\"15 - 35 - 5\"],[\"february 18\",\"st louis\",\"2 - 5\",\"vancouver\",\"16 - 35 - 5\"],[\"february 19\",\"vancouver\",\"3 - 5\",\"los angeles\",\"16 - 36 - 5\"],[\"february 22\",\"boston\",\"4 - 3\",\"vancouver\",\"16 - 37 - 5\"],[\"february 24\",\"vancouver\",\"0 - 2\",\"detroit\",\"16 - 38 - 5\"],[\"february 26\",\"vancouver\",\"1 - 7\",\"toronto\",\"16 - 39 - 5\"],[\"february 27\",\"vancouver\",\"3 - 3\",\"chicago\",\"16 - 39 - 6\"],[\"february 29\",\"vancouver\",\"2 - 8\",\"detroit\",\"16 - 40 - 6\"]]\nQuestion = Is it true that the score was 2 - 8 with a record of 16 - 39 - 5?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    scores = get_column_by_name(table_data, \"score\")\n    records = get_column_by_name(table_data, \"record\")\n    for score, record in zip(scores, records):\n        if equal_to(score, \"2 - 8\") and equal_to(record, \"16 - 39 - 5\"):\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "675d4402-c2be-428d-80c9-e8529eecf431", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = bmw m1 procar championship\ntable_data = [[\"round\", \"date\", \"event\", \"circuit\", \"winning driver\", \"winning team\"],[\"1\", \"may 12\", \"belgian grand prix\", \"circuit zolder\", \"elio de angelis\", \"squadra osella corse\"],[\"2\", \"may 26\", \"monaco grand prix\", \"circuit de monaco\", \"niki lauda\", \"project four\"],[\"-\", \"june 3\", \"gunnar nilsson trophy\", \"donington park\", \"nelson piquet\", \"bmw motorsport\"],[\"3\", \"june 30\", \"french grand prix\", \"dijon - prenois\", \"nelson piquet\", \"bmw motorsport\"],[\"4\", \"july 13\", \"british grand prix\", \"silverstone circuit\", \"niki lauda\", \"project four\"],[\"5\", \"july 28\", \"german grand prix\", \"hockenheimring\", \"niki lauda\", \"project four\"],[\"6\", \"august 11\", \"austrian grand prix\", \"österreichring\", \"jacques laffite\", \"bmw motorsport\"],[\"7\", \"august 25\", \"dutch grand prix\", \"circuit zandvoort\", \"hans - joachim stuck\", \"cassani racing\"],[\"8\", \"september 8\", \"italian grand prix\", \"autodromo nazionale monza\", \"hans - joachim stuck\", \"cassani racing\"]]\nQuestion = Is it true that the winning team for round 3 was project four?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    winning_teams = get_column_by_name(table_data, \"winning team\")\n    for round, winning_team in zip(rounds, winning_teams):\n        if round == \"3\":\n            answer = equal_to(winning_team, \"project four\")\n            break \n    return answer\n\n### END"}
{"id": "8bb3297b-6453-4cf6-b79a-1a74332058b0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1970 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"footscray\", \"10.23 (83)\", \"north melbourne\", \"11.15 (81)\", \"western oval\", \"13118\", \"8 august 1970\"],[\"essendon\", \"12.16 (88)\", \"fitzroy\", \"14.10 (94)\", \"windy hill\", \"13572\", \"8 august 1970\"],[\"richmond\", \"9.10 (64)\", \"melbourne\", \"18.10 (118)\", \"mcg\", \"25158\", \"8 august 1970\"],[\"south melbourne\", \"16.7 (103)\", \"hawthorn\", \"13.8 (86)\", \"lake oval\", \"17437\", \"8 august 1970\"],[\"collingwood\", \"13.23 (101)\", \"carlton\", \"2.12 (24)\", \"victoria park\", \"39959\", \"8 august 1970\"],[\"st kilda\", \"12.16 (88)\", \"geelong\", \"5.7 (37)\", \"vfl park\", \"29667\", \"8 august 1970\"]]\nQuestion = Is it true that st kilda scored 12.16 (88) as the team against geelong?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    for home_team, home_team_score, away_team in zip(home_teams, home_team_scores, away_teams):\n        if home_team.lower() == \"st kilda\" and away_team.lower() == \"geelong\":\n            answer = equal_to(home_team_score, \"12.16 (88)\")\n            break \n    return answer\n\n### END"}
{"id": "19168266-56b7-4496-95e1-1cdfc888da27", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1974 formula one season\ntable_data = [[\"race\",\"circuit\",\"date\",\"pole position\",\"fastest lap\",\"winning driver\",\"constructor\",\"tyre\",\"report\"],[\"argentine grand prix\",\"buenos aires\",\"13 january\",\"ronnie peterson\",\"clay regazzoni\",\"denny hulme\",\"mclaren - ford\",\"g\",\"report\"],[\"brazilian grand prix\",\"interlagos\",\"27 january\",\"emerson fittipaldi\",\"clay regazzoni\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"south african grand prix\",\"kyalami\",\"30 march\",\"niki lauda\",\"carlos reutemann\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"],[\"spanish grand prix\",\"jarama\",\"28 april\",\"niki lauda\",\"niki lauda\",\"niki lauda\",\"ferrari\",\"g\",\"report\"],[\"belgian grand prix\",\"nivelles - baulers\",\"12 may\",\"clay regazzoni\",\"denny hulme\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"monaco grand prix\",\"monaco\",\"26 may\",\"niki lauda\",\"ronnie peterson\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"swedish grand prix\",\"anderstorp\",\"9 june\",\"patrick depailler\",\"patrick depailler\",\"jody scheckter\",\"tyrrell - ford\",\"g\",\"report\"],[\"dutch grand prix\",\"zandvoort\",\"23 june\",\"niki lauda\",\"ronnie peterson\",\"niki lauda\",\"ferrari\",\"g\",\"report\"],[\"french grand prix\",\"dijon - prenois\",\"7 july\",\"niki lauda\",\"jody scheckter\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"british grand prix\",\"brands hatch\",\"20 july\",\"niki lauda\",\"niki lauda\",\"jody scheckter\",\"tyrrell - ford\",\"g\",\"report\"],[\"german grand prix\",\"nürburgring\",\"4 august\",\"niki lauda\",\"jody scheckter\",\"clay regazzoni\",\"ferrari\",\"g\",\"report\"],[\"austrian grand prix\",\"österreichring\",\"18 august\",\"niki lauda\",\"clay regazzoni\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"],[\"italian grand prix\",\"monza\",\"8 september\",\"niki lauda\",\"carlos pace\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"canadian grand prix\",\"mosport park\",\"22 september\",\"emerson fittipaldi\",\"niki lauda\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"united states grand prix\",\"watkins glen\",\"6 october\",\"carlos reutemann\",\"carlos pace\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"]]\nQuestion = Is it true that jody scheckter had the fastest lap on 7 july at the french grand prix?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    races = get_column_by_name(table_data, \"race\")\n    dates = get_column_by_name(table_data, \"date\")\n    fastest_laps = get_column_by_name(table_data, \"fastest lap\")\n    answer = False\n    for race, date, fastest_lap in zip(races, dates, fastest_laps):\n        if \"french grand prix\" in race.lower() and \"7 july\" in date.lower():\n            answer = \"jody scheckter\" in fastest_lap.lower()\n            break\n    return answer\n\n### END"}
{"id": "f19c4eda-3b6b-4b31-8eac-3ae51853039b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"10:00\", \"10:30\"],[\"coronation street\", \"marketplace\", \"little mosque on the prairie\", \"no opportunity wasted\", \"the fifth estate\", \"the national\", \"the national\"],[\"etalk\", \"jeopardy!\", \"private practice\", \"private practice\", \"criminal minds\", \"csi : ny\", \"csi : ny\"],[\"et canada\", \"entertainment tonight\", \"back to you\", \"'til death\", \"bones\", \"life\", \"life\"],[\"wheel of fortune\", \"e2\", \"smallville\", \"smallville\", \"the big picture\", \"the big picture\", \"the big picture\"],[\"friends\", \"access hollywood\", \"america 's next top model\", \"america 's next top model\", \"great movies\", \"great movies\", \"great movies\"],[\"the insider\", \"e! news\", \"kid nation\", \"kid nation\", \"bionic woman\", \"the simple life\", \"sunset tan\"],[\"virginie\", \"l'épicerie\", \"le match des étoiles\", \"le match des étoiles\", \"enquête\", \"le téléjournal\", \"le téléjournal\"],[\"star système\", \"la poule aux oeufs d'or\", \"destinées\", \"destinées\", \"les soeurs elliot\", \"le tva 22 heures\", \"le tva 22 heures\"],[\"loft story\", \"450 , chemin du golf\", \"movie\", \"movie\", \"movie\", \"le journal du soir\", \"le journal du soir\"]]\nQuestion = Is it true that access hollywood plays at 7:30 , great movies plays at 10:00 , and america 's next top model plays at 10:30?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    column_730 = get_column_by_name(table_data, \"7:30\")\n    column_1000 = get_column_by_name(table_data, \"10:00\")\n    column_1030 = get_column_by_name(table_data, \"10:30\")\n    answer = equal_to(\"access hollywood\" in column_730, True) and equal_to(\"great movies\" in column_1000, True) and equal_to(\"america 's next top model\" in column_1030, True)\n    return answer\n\n### END"}
{"id": "4c5f09dd-8966-42c0-ba5f-2088487e8f57", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = golden gate transit\ntable_data = [[\"make\", \"year placed in service\", \"quantity\", \"number of seats\", \"wheelchair accessible\", \"current status\"],[\"gm new look\", \"1971 , 1972\", \"132\", \"45\", \"no\", \"retired , one bus retained for historical purposes\"],[\"gm advanced design\", \"1981\", \"16\", \"43\", \"yes\", \"retired\"],[\"gm advanced design\", \"1983\", \"50\", \"41\", \"yes\", \"retired\"],[\"gillig\", \"1986\", \"4\", \"26\", \"yes\", \"retired\"],[\"mci\", \"1987\", \"21\", \"45\", \"yes\", \"retired\"],[\"tmc\", \"1990\", \"48\", \"39\", \"yes\", \"retired\"],[\"tmc\", \"1991\", \"49\", \"40\", \"yes\", \"retired (26) , reserve fleet (10) , for sale (13)\"],[\"flxible\", \"1994\", \"40\", \"45\", \"yes\", \"retired\"],[\"mci\", \"1996 , 1997\", \"32\", \"57\", \"yes\", \"for sale (21) , unknown (11)\"],[\"novabus\", \"1997\", \"10\", \"43\", \"yes\", \"retired\"],[\"new flyer\", \"2003\", \"8\", \"62\", \"yes\", \"retired\"]]\nQuestion = Is it true that mci has the least amount of seats and a quantity of 32?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef is_minimum(num, num_list):\n    return num == min(num_list)\n\ndef solution(table_data):\n    makes = get_column_by_name(table_data, \"make\")\n    quantities = get_column_by_name(table_data, \"quantity\")\n    seats = get_column_by_name(table_data, \"number of seats\")\n    for make, quantity, seat in zip(makes, quantities, seats):\n        if make.lower() == \"mci\" and equal_to(quantity, \"32\"):\n            answer = is_minimum(int(seat), [int(s) for s in seats])\n            break \n    return answer\n\n### END"}
{"id": "b0b582f5-182c-4222-9d9a-a7190185e37b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1969 new york jets season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"game site\", \"attendance\"],[\"1\", \"1969 - 09 - 14\", \"buffalo bills\", \"w 33 - 19\", \"war memorial stadium\", \"46165\"],[\"2\", \"1969 - 09 - 21\", \"denver broncos\", \"l 21 - 19\", \"mile high stadium\", \"50583\"],[\"3\", \"1969 - 09 - 28\", \"san diego chargers\", \"l 34 - 27\", \"san diego stadium\", \"54042\"],[\"4\", \"1969 - 10 - 05\", \"boston patriots\", \"w 23 - 14\", \"alumni stadium\", \"25584\"],[\"5\", \"1969 - 10 - 12\", \"cincinnati bengals\", \"w 21 - 7\", \"nippert stadium\", \"27927\"],[\"6\", \"1969 - 10 - 20\", \"houston oilers\", \"w 26 - 17\", \"shea stadium\", \"63841\"],[\"7\", \"1969 - 10 - 26\", \"boston patriots\", \"w 23 - 17\", \"shea stadium\", \"62298\"],[\"8\", \"1969 - 11 - 02\", \"miami dolphins\", \"w 34 - 31\", \"shea stadium\", \"61761\"],[\"9\", \"1969 - 11 - 09\", \"buffalo bills\", \"w 16 - 6\", \"shea stadium\", \"62680\"],[\"10\", \"1969 - 11 - 16\", \"kansas city chiefs\", \"l 34 - 16\", \"shea stadium\", \"63849\"],[\"11\", \"1969 - 11 - 23\", \"cincinnati bengals\", \"w 40 - 7\", \"shea stadium\", \"62128\"],[\"12\", \"1969 - 11 - 30\", \"oakland raiders\", \"l 27 - 14\", \"shea stadium\", \"63865\"],[\"13\", \"1969 - 12 - 06\", \"houston oilers\", \"w 34 - 26\", \"astrodome\", \"51923\"],[\"14\", \"1969 - 12 - 14\", \"miami dolphins\", \"w 27 - 9\", \"miami orange bowl\", \"48108\"]]\nQuestion = Is it true that the week 9 game was played at shea stadium on 1969 - 11 - 09?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    dates = get_column_by_name(table_data, \"date\")\n    game_sites = get_column_by_name(table_data, \"game site\")\n    for week, date, game_site in zip(weeks, dates, game_sites):\n        if week == \"9\":\n            answer = equal_to(date, \"1969 - 11 - 09\") and equal_to(game_site, \"shea stadium\")\n            break \n    return answer\n\n### END"}
{"id": "ec5189c8-5d1e-4273-9ca9-f20b253d30c3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 46th united states congress\ntable_data = [[\"district\", \"vacator\", \"reason for change\", \"successor\", \"date successor seated\"],[\"iowa 5th\", \"rush clark (r)\", \"died april 29 , 1879\", \"william g thompson (r)\", \"october 14 , 1879\"],[\"ohio 19th\", \"james a garfield (r)\", \"resigned 1880\", \"ezra b taylor (r)\", \"december 13 , 1880\"],[\"missouri 7th\", \"alfred m lay (d)\", \"died december 8 , 1879\", \"john f philips (d)\", \"january 10 , 1880\"],[\"new york 32nd\", \"ray v pierce (r)\", \"resigned september 18 , 1880\", \"jonathan scoville (d)\", \"november 12 , 1880\"],[\"new hampshire 3rd\", \"evarts w farr (r)\", \"died november 30 , 1880\", \"ossian ray (r)\", \"january 8 , 1881\"],[\"florida 2nd\", \"noble a hull (d)\", \"lost contested election january 22 , 1881\", \"horatio bisbee , jr (r)\", \"january 22 , 1881\"],[\"north carolina 1st\", \"joseph j martin (r)\", \"lost contested election january 29 , 1881\", \"jesse j yeates (d)\", \"january 29 , 1881\"]]\nQuestion = Is it true that in 1882 james a garfield left the district under questionable circumstances?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef in_string(str1, str2):\n    return str1 in str2\n\ndef solution(table_data):\n    vacators = get_column_by_name(table_data, \"vacator\")\n    reasons = get_column_by_name(table_data, \"reason for change\")\n    for vacator, reason in zip(vacators, reasons):\n        if \"james a garfield\" in vacator.lower() and \"1882\" in reason.lower():\n            answer = in_string(\"questionable circumstances\", reason.lower())\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "dcc3e7ff-2234-48b0-a272-9276f5fb675a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = india national under - 23 football team results\ntable_data = [[\"date\", \"tournament\", \"location\", \"opponent\", \"stadium\", \"score\", \"indian scorers\"],[\"23 february 2011\", \"2012 olympic qualifier\", \"pune, india\", \"myanmar\", \"balewadi sports complex\", \"2 - 1\", \"jeje lalpekhlua, malsawmfela\"],[\"9 march 2011\", \"2012 olympic qualifier\", \"yangon, myanmar\", \"myanmar\", \"thuwunna stadium\", \"1 - 1\", \"chinadorai sabeeth\"],[\"19 june 2011\", \"2012 olympic qualifier\", \"doha, qatar\", \"qatar\", \"jassim bin hamad stadium\", \"1 - 3\", \"jeje lalpekhlua\"],[\"23 june 2011\", \"2012 olympic qualifier\", \"pune, india\", \"qatar\", \"balewadi sports complex\", \"1 - 1\", \"own goal\"],[\"25 june 2012\", \"2014 afc u - 22 asian cup qualifiers\", \"muscat, oman\", \"iraq\", \"royal oman police stadium\", \"1 - 2\", \"alwyn george\"],[\"28 june 2012\", \"2014 afc u - 22 asian cup qualifiers\", \"muscat, oman\", \"united arab emirates\", \"royal oman police stadium\", \"1 - 1\", \"romeo fernandes\"]]\nQuestion = Is it true that 9 march 2011 is the date if the stadium name is thuwunna stadium and the score is 2 - 1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    scores = get_column_by_name(table_data, \"score\")\n    for date, stadium, score in zip(dates, stadiums, scores):\n        if stadium.lower() == \"thuwunna stadium\" and score == \"2 - 1\":\n            answer = equal_to(date, \"9 march 2011\")\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "72fed45c-ef6c-4a01-9c3d-6d9875bd5af1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = emergency shipbuilding program\ntable_data = [[\"yard name\", \"location (city , state)\", \"1st ship delivery date\", \"ship types delivered\", \"total number of ways\", \"total vessels built\"],[\"moore dry dock company\", \"oakland , california\", \"july 1940\", \"c2 type , r2 type , c3 type\", \"4 ways\", \"__ ships for usmc (remainder for usn)\"],[\"bethlehem steel corp\", \"san francisco , california\", \"february 1941\", \"c1 type\", \"number\", \"5 ships for usmc (remainder for usn)\"],[\"seattle - tacoma shipbuilding\", \"tacoma , washington\", \"april 1941\", \"c1 type , c3 type , t1 type\", \"8 ways\", \"__ ships for usmc (remainder for usn)\"],[\"western pipe & steel corp\", \"south san francisco , california\", \"april 1941\", \"c1 type , c3 type\", \"4 ways\", \"__ ships for usmc\"],[\"kaiser permanente (richmond yard 1)\", \"richmond , california\", \"august 1941\", \"british ocean type , ec2 type , vc2 type\", \"7 ways\", \"30 ships for uk , __ ships for usmc\"],[\"kaiser permanente (richmond yard 2)\", \"richmond , california\", \"september 1941\", \"ec2 type , vc2 type\", \"12 ways\", \"__ ships for usmc\"],[\"oregon shipbuilding co\", \"portland , oregon\", \"january 1942\", \"ec2 type , vc2 type\", \"11 ways\", \"__ ships for usmc\"],[\"california shipbuilding corp (calship)\", \"terminal island , los angeles , california\", \"february 1942\", \"ec2 type , vc2 type\", \"14 ways\", \"__ ships for usmc\"],[\"marinship corp\", \"sausalito , california\", \"october 1942\", \"ec2 type , t2 type\", \"6 ways\", \"__ ships for usmc\"],[\"pacific bridge co\", \"alameda , california\", \"december 1942\", \"n3 type\", \"2 ways (basins)\", \"9 ships for usmc (remainder for usn)\"],[\"kaiser company , inc\", \"swan island , portland , oregon\", \"december 1942\", \"t2 type\", \"8 ways\", \"__ ships for usmc\"],[\"kaiser cargo (richmond yard 4)\", \"richmond , california\", \"april 1943\", \"s2 (lst) type , s2 (frigate) type , c1 - m type\", \"3 ways\", \"__ ships for usmc\"],[\"kaiser shipbuilding (richmond yard 3)\", \"richmond , california\", \"august 1943\", \"c4 type\", \"5 ways (basins)\", \"__ ships for usmc\"]]\nQuestion = Is it true that in october of 1942 the ships delivered were s2 (lst) type , s2 (frigate) type , c1 - m type?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    delivery_dates = get_column_by_name(table_data, \"1st ship delivery date\")\n    ship_types = get_column_by_name(table_data, \"ship types delivered\")\n    for delivery_date, ship_type in zip(delivery_dates, ship_types):\n        if \"october 1942\" in delivery_date.lower():\n            answer = equal_to(ship_type, \"s2 (lst) type , s2 (frigate) type , c1 - m type\")\n            break \n    return answer\n\n### END"}
{"id": "dac50539-015e-4556-8fe4-2f1bddb9fc89", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glamorgan county cricket club\ntable_data = [[\"score\", \"batsmen\", \"against\", \"location\", \"year\"],[\"374\", \"matthew elliott and steve james\", \"sussex\", \"colwyn bay\", \"2000\"],[\"252\", \"matthew maynard and david hemp\", \"northamptonshire\", \"sophia gardens\", \"2002\"],[\"313\", \"emrys davies and willie jones\", \"essex\", \"brentwood\", \"1948\"],[\"425\", \"adrian dale and viv richards\", \"middlesex\", \"sophia gardens\", \"1993\"],[\"264\", \"maurice robinson and stan montgomery\", \"hampshire\", \"bournemouth\", \"1949\"],[\"240\", \"jim allenby and mark wallace\", \"surrey\", \"the brit oval\", \"2009\"],[\"211\", \"tony cottey and ottis gibson\", \"leicestershire\", \"swansea\", \"1996\"],[\"202\", \"dai davies and joe hills\", \"sussex\", \"eastbourne\", \"1928\"],[\"203\", \"joe hills and johnnie clay\", \"worcestershire\", \"swansea\", \"1929\"],[\"143\", \"terry davies and simon daniels\", \"gloucestershire\", \"swansea\", \"1982\"]]\nQuestion = Is it true that the batsmen at the brit oval location in 2009 were jim allenby and mark wallace?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    batsmen = get_column_by_name(table_data, \"batsmen\")\n    locations = get_column_by_name(table_data, \"location\")\n    years = get_column_by_name(table_data, \"year\")\n    for batsman, location, year in zip(batsmen, locations, years):\n        if equal_to(location, \"the brit oval\") and equal_to(year, \"2009\"):\n            answer = equal_to(batsman, \"jim allenby and mark wallace\")\n            break \n    return answer\n\n### END"}
{"id": "6b4d5efb-b6f9-472c-b073-efc0511e589a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1968 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"17.24 (126)\", \"south melbourne\", \"19.12 (126)\", \"glenferrie oval\", \"13536\", \"20 april 1968\"],[\"st kilda\", \"16.22 (118)\", \"melbourne\", \"9.8 (62)\", \"moorabbin oval\", \"21758\", \"20 april 1968\"],[\"geelong\", \"9.17 (71)\", \"footscray\", \"6.11 (47)\", \"kardinia park\", \"14589\", \"20 april 1968\"],[\"north melbourne\", \"9.9 (63)\", \"essendon\", \"10.22 (82)\", \"arden street oval\", \"14810\", \"20 april 1968\"],[\"fitzroy\", \"14.16 (100)\", \"collingwood\", \"10.11 (71)\", \"princes park\", \"17149\", \"20 april 1968\"],[\"richmond\", \"17.16 (118)\", \"carlton\", \"10.12 (72)\", \"mcg\", \"51889\", \"20 april 1968\"]]\nQuestion = Is it true that on 20 april 1968 , the away team scored 10.11 (71) in front of a crowd of more than 17149?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    away_team_scores = get_column_by_name(table_data, \"away team score\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for away_team_score, crowd, date in zip(away_team_scores, crowds, dates):\n        if date == \"20 april 1968\" and away_team_score == \"10.11 (71)\":\n            if greater(int(crowd), 17149):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "5c15b694-fd83-456c-b341-3500ace89abb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 uci track cycling world cup classics\ntable_data = [[\"rank\", \"team\", \"round1\", \"round2\", \"round3\", \"round4\", \"round5\", \"total points\"],[\"1\", \"germany\", \"92\", \"56\", \"62\", \"52\", \"74\", \"336\"],[\"2\", \"netherlands\", \"41\", \"60\", \"17\", \"72\", \"99\", \"289\"],[\"3\", \"great britain\", \"133\", \"36\", \"15\", \"32\", \"57\", \"273\"],[\"4\", \"france\", \"24\", \"25\", \"65\", \"64\", \"71\", \"249\"],[\"5\", \"spain\", \"49\", \"66\", \"78\", \"17\", \"31\", \"241\"],[\"6\", \"china\", \"41\", \"38\", \"23\", \"108\", \"31\", \"241\"],[\"7\", \"team toshiba\", \"12\", \"98\", \"38\", \"29\", \"35\", \"212\"],[\"8\", \"russia\", \"45\", \"55\", \"51\", \"37\", \"11\", \"199\"],[\"9\", \"ukraine\", \"51\", \"67\", \"22\", \"30\", \"24\", \"194\"]]\nQuestion = Is it true that team toshiba 's round 5 score is 55 with total points of 199?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    round5_scores = get_column_by_name(table_data, \"round5\")\n    total_points = get_column_by_name(table_data, \"total points\")\n    for team, round5_score, total_point in zip(teams, round5_scores, total_points):\n        if team.lower() == \"team toshiba\":\n            answer = equal_to(round5_score, \"55\") and equal_to(total_point, \"199\")\n            break \n    return answer\n\n### END"}
{"id": "ac08e112-aab0-43f9-b3f3-56d1ff4f4c65", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sinta ozoliņa - kovala\ntable_data = [[\"year\", \"competition\", \"venue\", \"position\", \"notes\"],[\"2005\", \"world youth championships\", \"marrakesh, morocco\", \"25th\", \"39.34 m\"],[\"2006\", \"world junior championships\", \"beijing, china\", \"6th\", \"56.38 m\"],[\"2007\", \"european junior championships\", \"hengelo, netherlands\", \"2nd\", \"57.01 m\"],[\"2008\", \"olympic games\", \"beijing, china\", \"11th\", \"53.38 m\"],[\"2010\", \"european championships\", \"barcelona, spain\", \"13th\", \"56.11 m\"]]\nQuestion = Is it true that the average year of the olympic games was 2008 its venue being barcelona?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    competitions = get_column_by_name(table_data, \"competition\")\n    years = get_column_by_name(table_data, \"year\")\n    venues = get_column_by_name(table_data, \"venue\")\n    for competition, year, venue in zip(competitions, years, venues):\n        if competition.lower() == \"olympic games\":\n            answer = equal_to(year, \"2008\") and equal_to(venue, \"barcelona, spain\")\n            break \n    return answer\n\n### END"}
{"id": "b14245ca-a6c6-4518-96e2-742c73c82a56", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = peaches & herb\ntable_data = [[\"title\", \"label\", \"year of release\", \"country of release\", \"peaches :\"],[\"for your love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"let 's fall in love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"peaches & herb\", \"mca\", \"1977\", \"usa\", \"linda greene\"],[\"2 hot\", \"mvp / polydor\", \"1978\", \"usa\", \"linda greene\"],[\"twice the fire\", \"mvp / polydor\", \"1979\", \"usa\", \"linda greene\"],[\"demasiado candente\", \"mvp / polydor\", \"1979\", \"argentina\", \"linda greene\"],[\"worth the wait\", \"mvp / polydor\", \"1980\", \"usa\", \"linda greene\"],[\"sayin' something\", \"mvp / polydor\", \"1981\", \"usa\", \"linda greene\"],[\"remember\", \"the entertainment co / columbia\", \"1983\", \"usa\", \"linda greene\"],[\"colors of love\", \"imagen\", \"2009\", \"usa\", \"meritxell negre\"]]\nQuestion = Is it true that peaches & herb was released in the usa in 1977?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    years = get_column_by_name(table_data, \"year of release\")\n    countries = get_column_by_name(table_data, \"country of release\")\n    for title, year, country in zip(titles, years, countries):\n        if title.lower() == \"peaches & herb\" and country.lower() == \"usa\":\n            answer = equal_to(year, \"1977\")\n            break \n    return answer\n\n### END"}
{"id": "89aed847-7548-4462-be19-e1e0a8556f74", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\", \"10:30\"],[\"heartland\", \"heartland\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"cbc news : sunday night\", \"cbc news : sunday night\"],[\"law and order : criminal intent\", \"law and order : criminal intent\", \"cold case\", \"cold case\", \"desperate housewives\", \"desperate housewives\", \"dirty sexy money\", \"dirty sexy money\"],[\"the simpsons\", \"da kink in my hair\", \"the simpsons\", \"king of the hill\", \"family guy\", \"american dad!\", \"brothers & sisters\", \"brothers & sisters\"],[\"america 's funniest home videos\", \"america 's funniest home videos\", \"kyle xy\", \"kyle xy\", \"america 's next top model\", \"america 's next top model\", \"stargate sg - 1\", \"stargate sg - 1\"],[\"everybody hates chris\", \"speakers' corner\", \"behind the movies\", \"bravo!fact presents\", \"great movies\", \"great movies\", \"great movies\", \"great movies\"],[\"viva laughlin\", \"viva laughlin\", \"extreme makeover : home edition\", \"extreme makeover : home edition\", \"e! countdowns\", \"e! countdowns\", \"e! live encore\", \"e! live encore\"],[\"découverte\", \"et dieu créa laflaque\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"le téléjournal\", \"le téléjournal\"],[\"le banquier / dieu merci!\", \"le banquier / dieu merci!\", \"occupation double\", \"occupation double\", \"occupation double\", \"occupation double\", \"le tva week - end\", \"le tva week - end\"],[\"loft story\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal weekend\"]]\nQuestion = Is it true that there are movies & specials on at 8:00 pm , at 10:00 pm cbc news : sunday night , is on?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef in_string(str1, str2):\n    return str1 in str2\n\ndef solution(table_data):\n    column_8pm = get_column_by_index(table_data, 2)\n    column_10pm = get_column_by_index(table_data, 6)\n    answer = in_string(\"movies & specials\", str(column_8pm)) and in_string(\"cbc news : sunday night\", str(column_10pm))\n    return answer\n\n### END"}
{"id": "217184b0-7ec7-433b-811e-50dd5706c549", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1967 - 68 new york rangers season\ntable_data = [[\"game\", \"october\", \"opponent\", \"score\", \"record\"],[\"1\", \"11\", \"chicago black hawks\", \"6 - 3\", \"1 - 0 - 0\"],[\"2\", \"15\", \"detroit red wings\", \"3 - 2\", \"1 - 1 - 0\"],[\"3\", \"18\", \"montreal canadiens\", \"2 - 2\", \"1 - 1 - 1\"],[\"4\", \"21\", \"toronto maple leafs\", \"5 - 3\", \"2 - 1 - 1\"],[\"5\", \"22\", \"pittsburgh penguins\", \"6 - 4\", \"3 - 1 - 1\"],[\"6\", \"25\", \"chicago black hawks\", \"2 - 2\", \"3 - 1 - 2\"],[\"7\", \"26\", \"montreal canadiens\", \"1 - 1\", \"3 - 1 - 3\"],[\"8\", \"29\", \"toronto maple leafs\", \"3 - 2\", \"4 - 1 - 3\"],[\"9\", \"31\", \"los angeles kings\", \"6 - 1\", \"5 - 1 - 3\"]]\nQuestion = Is it true that pittsburgh penguins was the opponent on october 22?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"october\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    answer = False\n    for date, opponent in zip(dates, opponents):\n        if date == \"22\" and opponent.lower() == \"pittsburgh penguins\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "c4739980-666d-4c75-bdcc-96ddb263eea2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = somerset county cricket club in 2009\ntable_data = [[\"player\", \"matches\", \"innings\", \"wickets\", \"average\", \"bbi\", \"bbm\", \"5wi\"],[\"charl willoughby\", \"16\", \"26\", \"54\", \"30.03\", \"5 / 56\", \"7 / 170\", \"3\"],[\"david stiff\", \"10\", \"18\", \"31\", \"36.12\", \"5 / 91\", \"5 / 93\", \"1\"],[\"alfonso thomas\", \"14\", \"22\", \"35\", \"37.62\", \"5 / 53\", \"8 / 152\", \"1\"],[\"ben phillips\", \"7\", \"11\", \"12\", \"38.00\", \"4 / 46\", \"4 / 73\", \"0\"],[\"arul suppiah\", \"16\", \"19\", \"15\", \"45.46\", \"3 / 58\", \"5 / 85\", \"0\"],[\"peter trego\", \"16\", \"25\", \"19\", \"46.78\", \"3 / 53\", \"3 / 74\", \"0\"],[\"andrew caddick\", \"5\", \"8\", \"10\", \"52.50\", \"3 / 53\", \"4 / 95\", \"0\"]]\nQuestion = Is it true that andrew caddick participated in over 10 matches?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    matches = get_column_by_name(table_data, \"matches\")\n    for player, match in zip(players, matches):\n        if player.lower() == \"andrew caddick\":\n            answer = greater(int(match), 10)\n            break \n    return answer\n\n### END"}
{"id": "17433055-8afc-4ab9-b67b-ec59c7390f81", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\"],[\"coronation street\", \"who do you think you are\", \"the nature of things\", \"the nature of things\", \"doc zone\", \"doc zone\", \"the national\"],[\"etalk\", \"jeopardy!\", \"csi\", \"csi\", \"grey 's anatomy\", \"grey 's anatomy\", \"er\"],[\"et canada\", \"entertainment tonight\", \"survivor : china\", \"survivor : china\", \"the office\", \"my name is earl\", \"shark\"],[\"wheel of fortune\", \"e2\", \"scrubs\", \"30 rock\", \"don't forget the lyrics!\", \"don't forget the lyrics!\", \"big shots\"],[\"friends\", \"access hollywood\", \"ugly betty\", \"ugly betty\", \"supernatural\", \"supernatural\", \"terminal city\"],[\"the insider\", \"e! news\", \"are you smarter than a 5th grader\", \"are you smarter than a 5th grader\", \"e! movies we love\", \"e! movies we love\", \"e! movies we love\"],[\"virginie\", \"infoman\", \"le moment de vérité\", \"le moment de vérité\", \"tous pour un\", \"tous pour un\", \"le téléjournal\"],[\"la fièvre de la danse\", \"la fièvre de la danse\", \"le banquier\", \"le banquier\", \"taxi 0 - 22\", \"taxi 0 - 22\", \"le tva 22 heures\"],[\"loft story\", \"criss angel\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal du soir\"]]\nQuestion = Is it true that et canada was on tv at 7:00 on the same channel that had survivor : china at 8:00?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    column_7 = get_column_by_index(table_data, 0)\n    column_8 = get_column_by_index(table_data, 2)\n    for show_7, show_8 in zip(column_7, column_8):\n        if show_7.lower() == \"et canada\" and show_8.lower() == \"survivor : china\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "739eeb21-4df8-4523-9d11-20eb7e13d6b3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2005 - 06 coventry city f.c. season\ntable_data = [[\"name\",\"championship\",\"league cup\",\"fa cup\",\"total\"],[\"gary mcsheffrey\",\"10\",\"1\",\"0\",\"11\"],[\"michael doyle\",\"9\",\"0\",\"0\",\"9\"],[\"richard duffy\",\"7\",\"0\",\"1\",\"8\"],[\"robert page\",\"8\",\"0\",\"0\",\"8\"],[\"dennis wise\",\"7\",\"0\",\"0\",\"7\"],[\"dele adebola\",\"4\",\"0\",\"1\",\"5\"],[\"don hutchison\",\"4\",\"0\",\"1\",\"5\"],[\"stern john\",\"4\",\"1\",\"0\",\"5\"],[\"marcus hall\",\"3\",\"1\",\"0\",\"4\"],[\"matt heath\",\"4\",\"0\",\"0\",\"4\"],[\"james scowcroft\",\"3\",\"0\",\"1\",\"4\"],[\"adrian williams\",\"4\",\"0\",\"0\",\"4\"],[\"stephen hughes\",\"2\",\"0\",\"1\",\"3\"],[\"richard shaw\",\"3\",\"0\",\"0\",\"3\"],[\"willo flood\",\"2\",\"0\",\"0\",\"2\"],[\"claus bech jãrgensen\",\"2\",\"0\",\"0\",\"2\"],[\"isaac osbourne\",\"1\",\"1\",\"0\",\"2\"],[\"kevin thornton\",\"2\",\"0\",\"0\",\"2\"],[\"andrew whing\",\"2\",\"0\",\"0\",\"2\"]]\nQuestion = Is it true that names that have a championship above 2 , a total above 4 and a fa cup above 0 are : richard duffy , dele adebola and don hutchinson?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    championships = get_column_by_name(table_data, \"championship\")\n    totals = get_column_by_name(table_data, \"total\")\n    fa_cups = get_column_by_name(table_data, \"fa cup\")\n    answer = []\n    for name, championship, total, fa_cup in zip(names, championships, totals, fa_cups):\n        if greater(int(championship), 2) and greater(int(total), 4) and greater(int(fa_cup), 0):\n            answer.append(name)\n    return sorted(answer) == sorted([\"richard duffy\", \"dele adebola\", \"don hutchison\"])\n\n### END"}
{"id": "651a87c7-930c-4d36-b58f-c49a2d1b43a5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = marsel ilhan\ntable_data = [[\"outcome\", \"date\", \"tournament\", \"surface\", \"opponent\", \"score\"],[\"runner - up\", \"august 20 , 2007\", \"karshi\", \"hard\", \"denis istomin\", \"1 - 6 , 4 - 6\"],[\"winner\", \"july 13 , 2008\", \"israel open\", \"hard\", \"ivo klec\", \"6 - 4 , 6 - 4\"],[\"runner - up\", \"may 17 , 2009\", \"izmir cup\", \"hard\", \"andrea stoppini\", \"6 - 7 , 2 - 6\"],[\"winner\", \"september 20 , 2010\", \"banja luka\", \"clay\", \"pere riba\", \"6 - 0 , 7 - 6 (7 - 4)\"],[\"runner - up\", \"september 26 , 2010\", \"izmir cup\", \"hard\", \"somdev devvarman\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 10 , 2011\", \"scheveningen\", \"clay\", \"steve darcis\", \"3 - 6 , 6 - 4 , 2 - 6\"],[\"runner - up\", \"september 25 , 2011\", \"izmir cup\", \"hard\", \"lukáš lacko\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 29 , 2012\", \"president 's cup (tennis)\", \"hard\", \"evgeny donskoy\", \"3 - 6 , 4 - 6\"]]\nQuestion = Is it true that the august 20 , 2007 match had an outcome of runner - up?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    outcomes = get_column_by_name(table_data, \"outcome\")\n    dates = get_column_by_name(table_data, \"date\")\n    for outcome, date in zip(outcomes, dates):\n        if date.lower() == \"august 20 , 2007\":\n            answer = equal_to(outcome, \"runner - up\")\n            break \n    return answer\n\n### END"}
{"id": "e6449ed9-fb40-4f5a-9c2d-7f8f0f008196", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = good news network\ntable_data = [[\"call sign\", \"frequency mhz\", \"city of license\", \"erp w\", \"class\", \"fcc info\"],[\"wlpe\", \"91.7\", \"augusta , ga\", \"1150\", \"a\", \"fcc\"],[\"wgph\", \"91.5\", \"vidalia , ga\", \"31000\", \"c2\", \"fcc\"],[\"wwgf\", \"107.5\", \"donalsonville , ga\", \"6000\", \"a\", \"fcc\"],[\"wpwb\", \"90.5\", \"byron , ga\", \"16500\", \"c2\", \"fcc\"],[\"wlpf\", \"98.5\", \"ocilla , ga\", \"2300\", \"a\", \"fcc\"],[\"wziq\", \"106.5\", \"smithville , ga\", \"2450\", \"a\", \"fcc\"],[\"wlpg\", \"91.7\", \"florence , sc\", \"20000\", \"c2\", \"fcc\"],[\"wpma\", \"102.7\", \"greensboro , ga\", \"7500\", \"c3\", \"fcc\"],[\"wthp\", \"94.3\", \"gibson , ga\", \"6300\", \"c3\", \"fcc\"],[\"wlpt\", \"88.3\", \"jesup , ga\", \"20000\", \"c1\", \"fcc\"],[\"wsja\", \"91.3\", \"york , al\", \"5000\", \"a\", \"fcc\"],[\"wlgp\", \"100.3\", \"jacksonville , nc\", \"100000\", \"c1\", \"fcc\"]]\nQuestion = Is it true that call sign wwgf uses class a with a frequency mhz of 107.5?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    call_signs = get_column_by_name(table_data, \"call sign\")\n    frequencies = get_column_by_name(table_data, \"frequency mhz\")\n    classes = get_column_by_name(table_data, \"class\")\n    for call_sign, frequency, class_ in zip(call_signs, frequencies, classes):\n        if call_sign.lower() == \"wwgf\":\n            answer = equal_to(frequency, \"107.5\") and equal_to(class_, \"a\")\n            break \n    return answer\n\n### END"}
{"id": "fecfe106-7c7e-4e2a-895b-fd0d12185308", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"title\", \"from album\", \"label\", \"label - nr\"],[\"1962\", \"tonight / sinnin' sam\", \"lookin' ahead\", \"pacific jazz\", \"x - 340\"],[\"1962\", \"the young rabbits / song of india\", \"lookin' ahead\", \"pacific jazz\", \"x - 342\"],[\"1962\", \"congolese sermon / weather beat\", \"(only on 45)\", \"pacific jazz\", \"x - 357\"],[\"1963\", \"no name samba / tough talk\", \"tough talk\", \"world pacific\", \"x - 371\"],[\"1963\", \"turkish black / boopie\", \"tough talk\", \"world pacific\", \"x - 388\"],[\"1963\", \"spanish castles / bluesette\", \"jazz waltz (w les mccann)\", \"world pacific\", \"406\"],[\"1964\", \"heat wave / on broadway\", \"heat wave\", \"world pacific\", \"401\"],[\"1964\", \"i remember tomorrow / long john\", \"stretchin' out\", \"world pacific\", \"412\"],[\"1965\", \"tough talk / the thing\", \"the thing\", \"world pacific\", \"77800\"],[\"1965\", \"aqua dulce / soul bourgeoisie\", \"chile con soul\", \"world pacific\", \"77806\"],[\"1966\", \"scratch / uptight\", \"talk that talk\", \"pacific jazz\", \"88125\"],[\"1968\", \"ooga - boo - ga - loo / eleanor rigby\", \"lighthouse '68\", \"pacific jazz\", \"88144\"],[\"1968\", \"hey jude / love and peace\", \"powerhouse\", \"pacific jazz\", \"88146\"],[\"1969\", \"get back / willie and laura mae jones\", \"lighthouse '69\", \"word pacific jazz\", \"88153\"],[\"1970\", \"way back home / jackson\", \"old socks , new shoes\", \"chisa\", \"c - 8010\"]]\nQuestion = Is it true that turkish black / boopie was featured on lookin' ahead?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    albums = get_column_by_name(table_data, \"from album\")\n    answer = False\n    for title, album in zip(titles, albums):\n        if \"turkish black / boopie\" in title.lower():\n            if \"lookin' ahead\" in album.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "5a74f092-bc9d-46ec-803a-5f7938657e56", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = good news network\ntable_data = [[\"call sign\", \"frequency mhz\", \"city of license\", \"erp w\", \"class\", \"fcc info\"],[\"wlpe\", \"91.7\", \"augusta , ga\", \"1150\", \"a\", \"fcc\"],[\"wgph\", \"91.5\", \"vidalia , ga\", \"31000\", \"c2\", \"fcc\"],[\"wwgf\", \"107.5\", \"donalsonville , ga\", \"6000\", \"a\", \"fcc\"],[\"wpwb\", \"90.5\", \"byron , ga\", \"16500\", \"c2\", \"fcc\"],[\"wlpf\", \"98.5\", \"ocilla , ga\", \"2300\", \"a\", \"fcc\"],[\"wziq\", \"106.5\", \"smithville , ga\", \"2450\", \"a\", \"fcc\"],[\"wlpg\", \"91.7\", \"florence , sc\", \"20000\", \"c2\", \"fcc\"],[\"wpma\", \"102.7\", \"greensboro , ga\", \"7500\", \"c3\", \"fcc\"],[\"wthp\", \"94.3\", \"gibson , ga\", \"6300\", \"c3\", \"fcc\"],[\"wlpt\", \"88.3\", \"jesup , ga\", \"20000\", \"c1\", \"fcc\"],[\"wsja\", \"91.3\", \"york , al\", \"5000\", \"a\", \"fcc\"],[\"wlgp\", \"100.3\", \"jacksonville , nc\", \"100000\", \"c1\", \"fcc\"]]\nQuestion = Is it true that call sign wsja uses a 5000 erp w and a frequency mhz of 91.3?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    call_signs = get_column_by_name(table_data, \"call sign\")\n    frequencies = get_column_by_name(table_data, \"frequency mhz\")\n    erp_ws = get_column_by_name(table_data, \"erp w\")\n    for call_sign, frequency, erp_w in zip(call_signs, frequencies, erp_ws):\n        if call_sign.lower() == \"wsja\":\n            answer = equal_to(frequency, \"91.3\") and equal_to(erp_w, \"5000\")\n            break \n    return answer\n\n### END"}
{"id": "13f4747b-694f-441e-b1d4-9ed4a79f2232", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = vern schuppan\ntable_data = [[\"year\", \"chassis\", \"engine\", \"start\", \"finish\"],[\"1976\", \"eagle\", \"offy\", \"17th\", \"18th\"],[\"1977\", \"wildcat\", \"offy\", \"dnq\", \"dnq\"],[\"1979\", \"wildcat\", \"dgs\", \"22nd\", \"21st\"],[\"1981\", \"mclaren\", \"cosworth\", \"18th\", \"3rd\"],[\"1982\", \"penske\", \"cosworth\", \"dnq\", \"dnq\"]]\nQuestion = Is it true that offy was the engine in the year 1977?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    engines = get_column_by_name(table_data, \"engine\")\n    answer = False\n    for year, engine in zip(years, engines):\n        if year == \"1977\" and engine == \"offy\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "d1b19644-f196-4473-af82-b4b0ee4c805b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rivers state\ntable_data = [[\"lga name\", \"area (km 2 )\", \"census 2006 population\", \"administrative capital\", \"postal code\"],[\"port harcourt\", \"109\", \"541115\", \"port harcourt\", \"500\"],[\"obio - akpor\", \"260\", \"464789\", \"rumuodumaya\", \"500\"],[\"okrika\", \"222\", \"222026\", \"okrika\", \"500\"],[\"ogu / bolo\", \"89\", \"74683\", \"ogu\", \"500\"],[\"eleme\", \"138\", \"190884\", \"eleme\", \"501\"],[\"tai\", \"159\", \"117797\", \"sakpenwa\", \"501\"],[\"gokana\", \"126\", \"228828\", \"kpor\", \"501\"],[\"khana\", \"560\", \"294217\", \"bori\", \"502\"],[\"oyigbo\", \"248\", \"122687\", \"afam\", \"502\"],[\"opobo / nkoro\", \"130\", \"151511\", \"opobo town\", \"503\"],[\"andoni\", \"233\", \"211009\", \"ngo\", \"503\"],[\"bonny\", \"642\", \"215358\", \"bonny\", \"503\"],[\"degema\", \"1011\", \"249773\", \"degema\", \"504\"],[\"asari - toru\", \"113\", \"220100\", \"buguma\", \"504\"],[\"akuku - toru\", \"1443\", \"156006\", \"abonnema\", \"504\"],[\"abua / odual\", \"704\", \"282988\", \"abua\", \"510\"],[\"ahoada west\", \"403\", \"249425\", \"akinima\", \"510\"],[\"ahoada east\", \"341\", \"166747\", \"ahoada\", \"510\"],[\"ogba / egbema / ndoni\", \"969\", \"284010\", \"omuku\", \"510\"],[\"emohua\", \"831\", \"201901\", \"emohua\", \"511\"],[\"ikwerre\", \"655\", \"189726\", \"isiokpo\", \"511\"],[\"etche\", \"805\", \"249454\", \"okehi\", \"512\"]]\nQuestion = Is it true that the administrative capital that has a 2006 census population of 249425 is ahoada?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    populations = get_column_by_name(table_data, \"census 2006 population\")\n    capitals = get_column_by_name(table_data, \"administrative capital\")\n    for population, capital in zip(populations, capitals):\n        if equal_to(population, \"249425\"):\n            answer = equal_to(capital.lower(), \"ahoada\")\n            break \n    return answer\n\n### END"}
{"id": "92183e07-a5a2-4ce8-bde0-3029822a537d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = gambrinus liga\ntable_data = [[\"season\", \"champions\", \"runner - up\", \"third place\", \"top goalscorer\", \"club\"],[\"1993 - 94\", \"sparta prague (1)\", \"slavia prague\", \"baník ostrava\", \"horst siegl (20)\", \"sparta prague\"],[\"1994 - 95\", \"sparta prague (2)\", \"slavia prague\", \"fc brno\", \"radek drulák (15)\", \"drnovice\"],[\"1995 - 96\", \"slavia prague (1)\", \"sigma olomouc\", \"baumit jablonec\", \"radek drulák (22)\", \"drnovice\"],[\"1996 - 97\", \"sparta prague (3)\", \"slavia prague\", \"baumit jablonec\", \"horst siegl (19)\", \"sparta prague\"],[\"1997 - 98\", \"sparta prague (4)\", \"slavia prague\", \"sigma olomouc\", \"horst siegl (13)\", \"sparta prague\"],[\"1998 - 99\", \"sparta prague (5)\", \"teplice\", \"slavia prague\", \"horst siegl (18)\", \"sparta prague\"],[\"1999 - 00\", \"sparta prague (6)\", \"slavia prague\", \"drnovice\", \"vratislav lokvenc (21)\", \"sparta prague\"],[\"2000 - 01\", \"sparta prague (7)\", \"slavia prague\", \"sigma olomouc\", \"vítězslav tuma (15)\", \"drnovice\"],[\"2001 - 02\", \"slovan liberec (1)\", \"sparta prague\", \"viktoria žižkov\", \"jiří štajner (15)\", \"slovan liberec\"],[\"2002 - 03\", \"sparta prague (8)\", \"slavia prague\", \"viktoria žižkov\", \"jiří kowalík (16)\", \"1. fc synot\"],[\"2003 - 04\", \"baník ostrava (1)\", \"sparta prague\", \"sigma olomouc\", \"marek heinz (19)\", \"baník ostrava\"],[\"2004 - 05\", \"sparta prague (9)\", \"slavia prague\", \"teplice\", \"tomáš jun (14)\", \"sparta prague\"],[\"2005 - 06\", \"slovan liberec (2)\", \"mladá boleslav\", \"slavia prague\", \"milan ivana (11)\", \"fc slovácko\"],[\"2006 - 07\", \"sparta prague (10)\", \"slavia prague\", \"mladá boleslav\", \"luboš pecka (16)\", \"mladá boleslav\"],[\"2007 - 08\", \"slavia prague (2)\", \"sparta prague\", \"baník ostrava\", \"václav svěrkoš (15)\", \"baník ostrava\"],[\"2008 - 09\", \"slavia prague (3)\", \"sparta prague\", \"slovan liberec\", \"andrej kerić (15)\", \"slovan liberec\"],[\"2009 - 10\", \"sparta prague (11)\", \"jablonec\", \"baník ostrava\", \"michal ordoš (12)\", \"sigma olomouc\"],[\"2010 - 11\", \"viktoria plzeň (1)\", \"sparta prague\", \"jablonec\", \"david lafata (19)\", \"jablonec\"],[\"2011 - 12\", \"slovan liberec (3)\", \"sparta prague\", \"viktoria plzeň\", \"david lafata (25)\", \"jablonec\"]]\nQuestion = Is it true that jiří Štajner (15) played for jablonec and was the top goalscorer for the 2001 - 02 season?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    top_goalscorers = get_column_by_name(table_data, \"top goalscorer\")\n    clubs = get_column_by_name(table_data, \"club\")\n    seasons = get_column_by_name(table_data, \"season\")\n    answer = False\n    for top_goalscorer, club, season in zip(top_goalscorers, clubs, seasons):\n        if \"jiří štajner (15)\" in top_goalscorer.lower() and \"2001 - 02\" in season.lower():\n            if \"jablonec\" in club.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "78b28af2-b666-4db3-92a2-87330cf13ced", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = south carolina gamecocks men 's soccer\ntable_data = [[\"rank\", \"player\", \"goals\", \"assists\", \"points\", \"years\"],[\"1\", \"doug allison\", \"63\", \"32\", \"158\", \"1984 - 87\"],[\"2\", \"chris faklaris\", \"55\", \"14\", \"124\", \"1991 - 94\"],[\"3\", \"clint mathis\", \"53\", \"15\", \"121\", \"1994 - 97\"],[\"4\", \"clark brisson\", \"36\", \"26\", \"98\", \"1987 - 90\"],[\"5\", \"dan ratcliff\", \"37\", \"20\", \"94\", \"1983 - 86\"],[\"6\", \"jordan quinn\", \"37\", \"13\", \"87\", \"1999 - 02\"],[\"7\", \"andrew coggins\", \"33\", \"15\", \"81\", \"1988 - 91\"],[\"8\", \"brian winstead\", \"33\", \"14\", \"80\", \"1978 - 79\"],[\"9\", \"billy baumhoff\", \"22\", \"34\", \"78\", \"1991 - 94\"],[\"9\", \"rob smith\", \"19\", \"40\", \"78\", \"1991 - 94\"],[\"11\", \"john harr\", \"28\", \"20\", \"76\", \"1997 - 99\"],[\"12\", \"arni arnthorsson\", \"22\", \"25\", \"69\", \"1984 - 87\"],[\"13\", \"dave goodchild\", \"28\", \"12\", \"68\", \"1979 - 82\"],[\"14\", \"rubãn tufiã±o\", \"18\", \"30\", \"66\", \"1989 - 92\"],[\"15\", \"joey worthen\", \"25\", \"15\", \"65\", \"1998 - 01\"]]\nQuestion = Is it true that when joey worthen had 15 assists , he had 34 goals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    goals = get_column_by_name(table_data, \"goals\")\n    assists = get_column_by_name(table_data, \"assists\")\n    for player, goal, assist in zip(players, goals, assists):\n        if player.lower() == \"joey worthen\" and assist == \"15\":\n            answer = equal_to(goal, \"34\")\n            break \n    return answer\n\n### END"}
{"id": "007d18e9-84d0-4085-ae18-cf1bd103c2cb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = comparison of e - book formats\ntable_data = [[\"format\", \"filename extension\", \"image support\", \"interactivity support\", \"word wrap support\", \"open standard\"],[\"djvu\", \"djvu\", \"yes\", \"no\", \"no\", \"yes\"],[\"epub (idpf)\", \"epub\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"fictionbook\", \"fb2\", \"yes\", \"no\", \"yes\", \"yes\"],[\"html\", \"html\", \"yes\", \"no\", \"yes\", \"yes\"],[\"kindle\", \"azw\", \"yes\", \"yes\", \"yes\", \"no\"],[\"microsoft reader\", \"lit\", \"yes\", \"no\", \"yes\", \"no\"],[\"mobipocket\", \"prc , mobi\", \"yes\", \"yes\", \"yes\", \"no\"],[\"multimedia ebook\", \"exe\", \"yes\", \"yes\", \"no\", \"yes\"],[\"newton book\", \"pkg\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ereader\", \"pdb\", \"yes\", \"no\", \"yes\", \"no\"],[\"plain text\", \"txt\", \"no\", \"no\", \"yes\", \"yes\"],[\"plucker\", \"pdb\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"portable document format\", \"pdf\", \"yes\", \"yes\", \"yes though not all readers implement support\", \"yes\"],[\"postscript\", \"ps\", \"yes\", \"no\", \"no\", \"yes\"],[\"tome raider\", \"tr2 , tr3\", \"yes\", \"no\", \"yes\", \"no\"],[\"openxps\", \"oxps , xps\", \"yes\", \"no\", \"no\", \"yes\"]]\nQuestion = Is it true that fictionbook is the only file format the has an interactivity support?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    interactivity_support = get_column_by_name(table_data, \"interactivity support\")\n    answer = interactivity_support.count(\"yes\") == 1 and \"yes\" in interactivity_support[2]\n    return answer\n\n### END"}
{"id": "9be847df-0841-4052-8758-5691a561bc76", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1998 masters tournament\ntable_data = [[\"place\", \"player\", \"country\", \"score\", \"to par\"],[\"t1\", \"fred couples\", \"united states\", \"69 + 70 = 139\", \"- 5\"],[\"t1\", \"david duval\", \"united states\", \"71 + 68 = 139\", \"- 5\"],[\"3\", \"scott hoch\", \"united states\", \"70 + 71 = 141\", \"- 3\"],[\"t4\", \"paul azinger\", \"united states\", \"71 + 72 = 143\", \"- 1\"],[\"t4\", \"jay haas\", \"united states\", \"72 + 71 = 143\", \"- 1\"],[\"t4\", \"phil mickelson\", \"united states\", \"74 + 69 = 143\", \"- 1\"],[\"t4\", \"josé maría olazábal\", \"spain\", \"70 + 73 = 143\", \"- 1\"],[\"t4\", \"tiger woods\", \"united states\", \"71 + 72 = 143\", \"- 1\"],[\"t9\", \"scott mccarron\", \"united states\", \"73 + 71 = 144\", \"e\"],[\"t9\", \"mark o'meara\", \"united states\", \"74 + 70 = 144\", \"e\"]]\nQuestion = Is it true that player scott mccarron is from the united states?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    countries = get_column_by_name(table_data, \"country\")\n    answer = False\n    for player, country in zip(players, countries):\n        if player.lower() == \"scott mccarron\" and country.lower() == \"united states\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "6e11c80d-f65b-47bd-9a19-385d8b9037e5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"class\", \"part 1\", \"part 2\", \"part 3\", \"part 4\", \"verb meaning\"],[\"1\", \"rīdan\", \"rād\", \"ridon\", \"riden\", \"to ride\"],[\"2a\", \"frēosan\", \"frēas\", \"fruron\", \"froren\", \"to freeze\"],[\"2b\", \"lūcan\", \"lēac\", \"lucon\", \"locen\", \"to lock\"],[\"3a\", \"bindan\", \"band\", \"bundon\", \"bunden\", \"to bind\"],[\"3b\", \"weorþan\", \"wearþ\", \"wurdon\", \"worden\", \"to become\"],[\"4\", \"beran\", \"bær\", \"bǣron\", \"boren\", \"to bear\"],[\"5\", \"lesan\", \"læs\", \"lǣron\", \"leren\", \"to gather\"],[\"6\", \"alan\", \"ōl\", \"ōlon\", \"alen\", \"to nourish , to grow\"],[\"7a\", \"hātan\", \"hēt\", \"hēton\", \"hāten\", \"to call , to be called\"],[\"7b\", \"hlēapan\", \"hlēop\", \"hlēppon\", \"hlēapen\", \"to leap\"],[\"7c\", \"healdan\", \"hēold\", \"hēoldon\", \"healden\", \"to hold\"],[\"7d\", \"rǣdan\", \"rēd\", \"rēdon\", \"rǣden\", \"to advise , to interpret\"]]\nQuestion = Is it true that the verb lǣron is part 3 of class 5?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    classes = get_column_by_name(table_data, \"class\")\n    part_3s = get_column_by_name(table_data, \"part 3\")\n    for class_, part_3 in zip(classes, part_3s):\n        if class_.lower() == \"5\" and part_3.lower() == \"lǣron\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "0af516d0-4015-4de2-9f2b-d2306efbce4f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\", \"10:30\"],[\"heartland\", \"heartland\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"cbc news : sunday night\", \"cbc news : sunday night\"],[\"law and order : criminal intent\", \"law and order : criminal intent\", \"cold case\", \"cold case\", \"desperate housewives\", \"desperate housewives\", \"dirty sexy money\", \"dirty sexy money\"],[\"the simpsons\", \"da kink in my hair\", \"the simpsons\", \"king of the hill\", \"family guy\", \"american dad!\", \"brothers & sisters\", \"brothers & sisters\"],[\"america 's funniest home videos\", \"america 's funniest home videos\", \"kyle xy\", \"kyle xy\", \"america 's next top model\", \"america 's next top model\", \"stargate sg - 1\", \"stargate sg - 1\"],[\"everybody hates chris\", \"speakers' corner\", \"behind the movies\", \"bravo!fact presents\", \"great movies\", \"great movies\", \"great movies\", \"great movies\"],[\"viva laughlin\", \"viva laughlin\", \"extreme makeover : home edition\", \"extreme makeover : home edition\", \"e! countdowns\", \"e! countdowns\", \"e! live encore\", \"e! live encore\"],[\"découverte\", \"et dieu créa laflaque\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"le téléjournal\", \"le téléjournal\"],[\"le banquier / dieu merci!\", \"le banquier / dieu merci!\", \"occupation double\", \"occupation double\", \"occupation double\", \"occupation double\", \"le tva week - end\", \"le tva week - end\"],[\"loft story\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal weekend\"]]\nQuestion = Is it true that great movies is on at 9:00 when the show , behind the movies , is on at 8:00?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    column_8 = get_column_by_index(table_data, 2)\n    column_9 = get_column_by_index(table_data, 4)\n    answer = equal_to(\"behind the movies\" in column_8, \"great movies\" in column_9)\n    return answer\n\n### END"}
{"id": "edcf1ae8-7cfb-4be7-b434-0e6e3c0c8461", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = israeli football league\ntable_data = [[\"season\", \"champion\", \"runner up\", \"israel bowl\", \"venue\", \"date\", \"finals mvp\"],[\"2007 - 08\", \"jerusalem lions\", \"haifa underdogs\", \"i\", \"kraft stadium , jerusalem\", \"march 28 , 2008\", \"moshe horowitz (lions)\"],[\"2008 - 09\", \"modi'in pioneers\", \"jerusalem lions\", \"ii\", \"kraft stadium , jerusalem\", \"april 3 , 2009\", \"assaf katz (pioneers)\"],[\"2009 - 10\", \"tel aviv sabres\", \"jerusalem lions\", \"iii\", \"kraft stadium , jerusalem\", \"march 26 , 2010\", \"evan reshef (sabres)\"],[\"2010 - 11\", \"judean rebels\", \"tel aviv sabres\", \"iv\", \"kraft stadium , jerusalem\", \"march 18 , 2011\", \"zack miller (rebels)\"],[\"2011 - 12\", \"tel aviv sabres\", \"tel aviv pioneers\", \"v\", \"kraft stadium , jerusalem\", \"march 30 , 2012\", \"adi hakami and jonathan curran (sabres)\"],[\"2012 - 13\", \"tel aviv sabres\", \"judean rebels\", \"vi\", \"kraft stadium , jerusalem\", \"march 22 , 2013\", \"jonathan curran and banning fudge (sabres)\"]]\nQuestion = Is it true that the champion for israel bowl of iii is judean rebels?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    champions = get_column_by_name(table_data, \"champion\")\n    israel_bowls = get_column_by_name(table_data, \"israel bowl\")\n    for champion, israel_bowl in zip(champions, israel_bowls):\n        if israel_bowl.lower() == \"iii\":\n            answer = equal_to(champion, \"judean rebels\")\n            break \n    return answer\n\n### END"}
{"id": "a1b1c604-2cd3-41c0-868d-a8f5f01365f0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = radio iq\ntable_data = [[\"call sign\", \"frequency mhz\", \"city of license\", \"erp w\", \"class\", \"fcc info\"],[\"wvtw\", \"88.5\", \"charlottesville , virginia\", \"1000\", \"b1\", \"fcc\"],[\"wffc\", \"89.9\", \"ferrum , virginia\", \"1100\", \"a\", \"fcc\"],[\"wqiq\", \"88.3\", \"spotsylvania , virginia\", \"3500\", \"a\", \"fcc\"],[\"wriq\", \"88.7\", \"lexington , virginia\", \"3900\", \"a\", \"fcc\"],[\"wwvt\", \"1260\", \"christiansburg , virginia\", \"5000 day 25 night\", \"d\", \"fcc\"]]\nQuestion = Is it true that the call sign wriq has a class a and a frequency mhz of 88.7?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    call_signs = get_column_by_name(table_data, \"call sign\")\n    frequencies = get_column_by_name(table_data, \"frequency mhz\")\n    classes = get_column_by_name(table_data, \"class\")\n    for call_sign, frequency, class_ in zip(call_signs, frequencies, classes):\n        if call_sign.lower() == \"wriq\":\n            answer = equal_to(frequency, \"88.7\") and equal_to(class_, \"a\")\n            break \n    return answer\n\n### END"}
{"id": "16132470-ac94-4853-8a4a-3cf27f57ff37", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states house of representatives elections , 1812\ntable_data = [[\"district\", \"incumbent\", \"party\", \"first elected\", \"result\", \"candidates\"],[\"north carolina 2\", \"willis alston\", \"democratic - republican\", \"1798\", \"re - elected\", \"willis alston (dr) 56.0% daniel mason (f) 44.0%\"],[\"north carolina 5\", \"william r king\", \"democratic - republican\", \"1810\", \"re - elected\", \"william r king (dr) 100%\"],[\"north carolina 6\", \"nathaniel macon\", \"democratic - republican\", \"1791\", \"re - elected\", \"nathaniel macon (dr)\"],[\"north carolina 9\", \"none (district created)\", \"none (district created)\", \"none (district created)\", \"new seat democratic - republican gain\", \"bartlett yancey (dr) 61.1% james martin (f) 38.9%\"],[\"north carolina 10\", \"joseph pearson\", \"federalist\", \"1808\", \"re - elected\", \"joseph pearson (f) 54.1% alexander gary (dr) 45.9%\"]]\nQuestion = Is it true that nathaniel macon (dr) was the incumbent candidate in the north carolina 6 district?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef in_string(str1, str2):\n    return str1 in str2\n\ndef solution(table_data):\n    districts = get_column_by_name(table_data, \"district\")\n    incumbents = get_column_by_name(table_data, \"incumbent\")\n    for district, incumbent in zip(districts, incumbents):\n        if district.lower() == \"north carolina 6\":\n            answer = in_string(\"nathaniel macon\", incumbent.lower())\n            break \n    return answer\n\n### END"}
{"id": "ae55a96d-afa7-4b59-8fec-2850ad9d0597", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = comparison of e - book formats\ntable_data = [[\"format\", \"filename extension\", \"image support\", \"interactivity support\", \"word wrap support\", \"open standard\"],[\"djvu\", \"djvu\", \"yes\", \"no\", \"no\", \"yes\"],[\"epub (idpf)\", \"epub\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"fictionbook\", \"fb2\", \"yes\", \"no\", \"yes\", \"yes\"],[\"html\", \"html\", \"yes\", \"no\", \"yes\", \"yes\"],[\"kindle\", \"azw\", \"yes\", \"yes\", \"yes\", \"no\"],[\"microsoft reader\", \"lit\", \"yes\", \"no\", \"yes\", \"no\"],[\"mobipocket\", \"prc , mobi\", \"yes\", \"yes\", \"yes\", \"no\"],[\"multimedia ebook\", \"exe\", \"yes\", \"yes\", \"no\", \"yes\"],[\"newton book\", \"pkg\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ereader\", \"pdb\", \"yes\", \"no\", \"yes\", \"no\"],[\"plain text\", \"txt\", \"no\", \"no\", \"yes\", \"yes\"],[\"plucker\", \"pdb\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"portable document format\", \"pdf\", \"yes\", \"yes\", \"yes though not all readers implement support\", \"yes\"],[\"postscript\", \"ps\", \"yes\", \"no\", \"no\", \"yes\"],[\"tome raider\", \"tr2 , tr3\", \"yes\", \"no\", \"yes\", \"no\"],[\"openxps\", \"oxps , xps\", \"yes\", \"no\", \"no\", \"yes\"]]\nQuestion = Is it true that the file format mobipocket comes with all three support 's?\n\n### RESPONSE:\ndef get_row_by_name(table, row_name):\n    row_index = [row[0] for row in table].index(row_name)\n    return table[row_index]\n\ndef solution(table_data):\n    mobipocket_row = get_row_by_name(table_data, \"mobipocket\")\n    answer = all(support == \"yes\" for support in mobipocket_row[2:5])\n    return answer\n\n### END"}
{"id": "7cef717b-897f-4beb-8197-b3a7770cefbb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of radio stations in tamaulipas\ntable_data = [[\"frequency\", \"callsign\", \"brand\", \"city of license\", \"type\"],[\"580\", \"xehp\", \"la mas prendida\", \"ciudad victoria\", \"norteño\"],[\"640\", \"xetam\", \"la poderosa\", \"santa elena\", \"norteño\"],[\"970\", \"xebj - am\", \"radio 970\", \"ciudad victoria\", \"contemporary\"],[\"1340\", \"xerpv - am\", \"la cotorra\", \"ciudad victoria\", \"norteño\"],[\"1380\", \"xegw\", \"planeta w 1380\", \"ciudad victoria\", \"christian pop\"],[\"1480\", \"xevic\", \"radio tamaulipas\", \"ciudad victoria\", \"state government\"]]\nQuestion = Is it true that on frequency 1480 , the type of radio is state government?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    types = get_column_by_name(table_data, \"type\")\n    for frequency, type in zip(frequencies, types):\n        if frequency == \"1480\":\n            answer = equal_to(type, \"state government\")\n            break \n    return answer\n\n### END"}
{"id": "d558c760-aca3-4906-825c-3ac012d2f071", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = atlanta falcons draft history\ntable_data = [[\"round\", \"pick\", \"overall\", \"name\", \"position\", \"college\"],[\"1\", \"6\", \"6\", \"warren bryant\", \"offensive tackle\", \"kentucky\"],[\"1\", \"20\", \"20\", \"wilson faumuina\", \"defensive tackle\", \"san josã state\"],[\"2\", \"8\", \"36\", \"r c thielemann\", \"guard\", \"arkansas\"],[\"4\", \"6\", \"90\", \"allan leavitt\", \"kicker\", \"georgia\"],[\"5\", \"8\", \"120\", \"shelton diggs\", \"wide receiver\", \"usc\"],[\"6\", \"22\", \"161\", \"keith jenkins\", \"defensive back\", \"cincinnati\"],[\"8\", \"8\", \"203\", \"walter packer\", \"wide receiver\", \"mississippi state\"],[\"9\", \"7\", \"230\", \"john maxwell\", \"offensive tackle\", \"boston college\"],[\"9\", \"19\", \"242\", \"robert speer\", \"defensive end\", \"arkansas state\"],[\"10\", \"6\", \"257\", \"billy ryckman\", \"wide receiver\", \"louisiana tech\"],[\"11\", \"8\", \"287\", \"dave farmer\", \"running back\", \"usc\"],[\"12\", \"7\", \"312\", \"don parrish\", \"defensive tackle\", \"pittsburgh\"]]\nQuestion = Is it true that allan leavitt was a kicker drafted in the fourth round , pick 6 , and overall 90?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    picks = get_column_by_name(table_data, \"pick\")\n    overalls = get_column_by_name(table_data, \"overall\")\n    names = get_column_by_name(table_data, \"name\")\n    positions = get_column_by_name(table_data, \"position\")\n    for round, pick, overall, name, position in zip(rounds, picks, overalls, names, positions):\n        if name.lower() == \"allan leavitt\" and position.lower() == \"kicker\":\n            answer = equal_to(round, \"4\") and equal_to(pick, \"6\") and equal_to(overall, \"90\")\n            break \n    return answer\n\n### END"}
{"id": "90d490aa-bcd1-48a9-99c4-caad8a117b59", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = lynyrd skynyrd\ntable_data = [[\"date of release\", \"title\", \"billboard peak\", \"riaa cert\", \"label\"],[\"august 13 , 1973\", \"(pronounced 'lĕh - 'nérd 'skin - 'nérd)\", \"27\", \"2 platinum\", \"mca\"],[\"april 15 , 1974\", \"second helping\", \"12\", \"2 platinum\", \"mca\"],[\"march 24 , 1975\", \"nuthin' fancy\", \"9\", \"platinum\", \"mca\"],[\"february 2 , 1976\", \"gimme back my bullets\", \"20\", \"gold\", \"mca\"],[\"october 17 , 1977\", \"street survivors\", \"5\", \"2 platinum\", \"mca\"],[\"june 11 , 1991\", \"lynyrd skynyrd 1991\", \"64\", \"-\", \"atlantic\"],[\"february 16 , 1993\", \"the last rebel\", \"64\", \"-\", \"atlantic\"],[\"august 9 , 1994\", \"endangered species\", \"-\", \"-\", \"capricorn\"],[\"april 29 , 1997\", \"twenty\", \"97\", \"-\", \"cmc\"],[\"august 10 , 1999\", \"edge of forever\", \"96\", \"-\", \"cmc\"],[\"september 12 , 2000\", \"christmas time again\", \"38\", \"-\", \"sanctuary\"],[\"may 20 , 2003\", \"vicious cycle\", \"30\", \"-\", \"sanctuary\"],[\"september 29 , 2009\", \"god & guns\", \"18\", \"-\", \"roadrunner\"],[\"august 21 , 2012\", \"last of a dyin' breed\", \"14\", \"-\", \"roadrunner\"]]\nQuestion = Is it true that god & guns stopped at 18 the charts?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    billboard_peaks = get_column_by_name(table_data, \"billboard peak\")\n    for title, billboard_peak in zip(titles, billboard_peaks):\n        if title.lower() == \"god & guns\":\n            answer = equal_to(billboard_peak, \"18\")\n            break \n    return answer\n\n### END"}
{"id": "360e30f3-7f4e-45ec-b1fb-2cdc4b11c78a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = emergency shipbuilding program\ntable_data = [[\"yard name\", \"location (city , state)\", \"1st ship delivery date\", \"ship types delivered\", \"total number of ways\", \"total vessels built\"],[\"moore dry dock company\", \"oakland , california\", \"july 1940\", \"c2 type , r2 type , c3 type\", \"4 ways\", \"__ ships for usmc (remainder for usn)\"],[\"bethlehem steel corp\", \"san francisco , california\", \"february 1941\", \"c1 type\", \"number\", \"5 ships for usmc (remainder for usn)\"],[\"seattle - tacoma shipbuilding\", \"tacoma , washington\", \"april 1941\", \"c1 type , c3 type , t1 type\", \"8 ways\", \"__ ships for usmc (remainder for usn)\"],[\"western pipe & steel corp\", \"south san francisco , california\", \"april 1941\", \"c1 type , c3 type\", \"4 ways\", \"__ ships for usmc\"],[\"kaiser permanente (richmond yard 1)\", \"richmond , california\", \"august 1941\", \"british ocean type , ec2 type , vc2 type\", \"7 ways\", \"30 ships for uk , __ ships for usmc\"],[\"kaiser permanente (richmond yard 2)\", \"richmond , california\", \"september 1941\", \"ec2 type , vc2 type\", \"12 ways\", \"__ ships for usmc\"],[\"oregon shipbuilding co\", \"portland , oregon\", \"january 1942\", \"ec2 type , vc2 type\", \"11 ways\", \"__ ships for usmc\"],[\"california shipbuilding corp (calship)\", \"terminal island , los angeles , california\", \"february 1942\", \"ec2 type , vc2 type\", \"14 ways\", \"__ ships for usmc\"],[\"marinship corp\", \"sausalito , california\", \"october 1942\", \"ec2 type , t2 type\", \"6 ways\", \"__ ships for usmc\"],[\"pacific bridge co\", \"alameda , california\", \"december 1942\", \"n3 type\", \"2 ways (basins)\", \"9 ships for usmc (remainder for usn)\"],[\"kaiser company , inc\", \"swan island , portland , oregon\", \"december 1942\", \"t2 type\", \"8 ways\", \"__ ships for usmc\"],[\"kaiser cargo (richmond yard 4)\", \"richmond , california\", \"april 1943\", \"s2 (lst) type , s2 (frigate) type , c1 - m type\", \"3 ways\", \"__ ships for usmc\"],[\"kaiser shipbuilding (richmond yard 3)\", \"richmond , california\", \"august 1943\", \"c4 type\", \"5 ways (basins)\", \"__ ships for usmc\"]]\nQuestion = Is it true that the delivery having the total of 12 numbered ways was delivered in the september of 1941?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    delivery_dates = get_column_by_name(table_data, \"1st ship delivery date\")\n    total_ways = get_column_by_name(table_data, \"total number of ways\")\n    for delivery_date, total_way in zip(delivery_dates, total_ways):\n        if \"september 1941\" in delivery_date.lower() and \"12 ways\" in total_way.lower():\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "1014c1da-c43c-45d6-bcb6-725f713627bb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 - 02 prva hnl\ntable_data = [[\"team\", \"manager\", \"home city\", \"stadium\", \"capacity\"],[\"cibalia\", \"davor čop\", \"vinkovci\", \"stadion hnk cibalia\", \"9920\"],[\"čakovec\", \"rajko magić\", \"čakovec\", \"stadion src mladost\", \"8000\"],[\"dinamo zagreb\", \"ilija lončarević\", \"zagreb\", \"stadion maksimir\", \"37168\"],[\"hajduk split\", \"nenad gračan\", \"split\", \"gradski stadion u poljudu\", \"35000\"],[\"hrvatski dragovoljac\", \"luka bonačić\", \"zagreb\", \"stadion nšc stjepan spajić\", \"5000\"],[\"kamen ingrad\", \"tomislav radić\", \"velika\", \"stadion kamen ingrada\", \"8000\"],[\"marsonia\", \"milo nižetić\", \"slavonski brod\", \"gradski stadion uz savu\", \"10000\"],[\"osijek\", \"vlado bilić\", \"osijek\", \"stadion gradski vrt\", \"19500\"],[\"pomorac\", \"predrag stilinović\", \"kostrena\", \"stadion žuknica\", \"3000\"],[\"rijeka\", \"ivan katalinić\", \"rijeka\", \"stadion na kantridi\", \"10275\"],[\"slaven belupo\", \"dražen besek\", \"koprivnica\", \"gradski stadion u koprivnici\", \"4000\"],[\"šibenik\", \"vjekoslav lokica\", \"šibenik\", \"stadion šubićevac\", \"8000\"],[\"tšk topolovac\", \"ivica vidović\", \"topolovac\", \"gradski stadion sisak\", \"8000\"],[\"varteks\", \"branko janžek\", \"varaždin\", \"stadion nk varteks\", \"10800\"],[\"zadar\", \"stanko mršić\", \"zadar\", \"stadion stanovi\", \"5860\"],[\"nk zagreb\", \"zlatko kranjčar\", \"zagreb\", \"stadion u kranjčevićevoj ulici\", \"8850\"]]\nQuestion = Is it true that cakovec plays at the stadion src mladost?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    answer = False\n    for team, stadium in zip(teams, stadiums):\n        if team.lower() == \"čakovec\" and stadium.lower() == \"stadion src mladost\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "ae71c624-2605-408f-8dcb-e5b682e346c1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = jonathan cochet\ntable_data = [[\"season\", \"series\", \"team\", \"races\", \"wins\", \"fast laps\", \"points\", \"pos\"],[\"2001\", \"formula one\", \"prost\", \"test driver\", \"test driver\", \"test driver\", \"test driver\", \"test driver\"],[\"2001\", \"formula 3000 international\", \"gd racing\", \"4\", \"0\", \"0\", \"0\", \"nc\"],[\"2001\", \"world series by nissan\", \"gd racing\", \"6\", \"0\", \"1\", \"51\", \"9th\"],[\"2002\", \"world series by nissan\", \"gd racing\", \"6\", \"0\", \"0\", \"30\", \"13th\"],[\"2003\", \"world series by nissan\", \"gd racing\", \"2\", \"0\", \"0\", \"0\", \"nc\"],[\"2006\", \"formula one\", \"renault\", \"test driver\", \"test driver\", \"test driver\", \"test driver\", \"test driver\"],[\"200708\", \"a1 grand prix\", \"a1 team france\", \"2\", \"0\", \"0\", \"0\", \"4th\"]]\nQuestion = Is it true that a1 team france had 0 wins over 2 races in 2007 - 08 , with a pos of 4th?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    teams = get_column_by_name(table_data, \"team\")\n    races = get_column_by_name(table_data, \"races\")\n    wins = get_column_by_name(table_data, \"wins\")\n    positions = get_column_by_name(table_data, \"pos\")\n    for season, team, race, win, pos in zip(seasons, teams, races, wins, positions):\n        if season == \"200708\" and team.lower() == \"a1 team france\":\n            answer = equal_to(race, \"2\") and equal_to(win, \"0\") and equal_to(pos, \"4th\")\n            break \n    return answer\n\n### END"}
{"id": "ff0d0662-ceaa-4fb0-a947-24026b763872", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = extreme engineering\ntable_data = [[\"no in series\",\"no in season\",\"title\",\"country\",\"project\",\"status at production\",\"original air date\"],[\"70\", \"1\", \"rebuilding new york city 's subway\", \"united states\", \"new york city subway expansion\", \"under construction\", \"april 8 , 2011\"],[\"71\", \"2\", \"drought - proofing australia\", \"australia\", \"wonthaggi desalination plant\", \"under construction\", \"april 15 , 2011\"],[\"72\", \"3\", \"azerbaijan 's amazing transformation\", \"azerbaijan\", \"flame towers and heydar aliyev cultural centre\", \"under construction\", \"april 22 , 2011\"],[\"73\", \"4\", \"london 's olympic aquatic stadium\", \"united kingdom\", \"london aquatics centre\", \"under construction\", \"april 29 , 2011\"],[\"74\", \"5\", \"constructing serbia 's largest bridge\", \"serbia\", \"ada bridge\", \"under construction\", \"june 18 , 2011\"],[\"75\", \"6\", \"amsterdam 's futuristic floating city\", \"netherlands\", \"netherlands land expansion\", \"under construction\", \"june 25 , 2011\"],[\"76\", \"7\", \"building mumbai 's modern airport\", \"india\", \"chhatrapati shivaji international airport\", \"under construction\", \"july 2 , 2011\"]]\nQuestion = Is it true that the london aquatic center was under construction in 2011?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    projects = get_column_by_name(table_data, \"project\")\n    statuses = get_column_by_name(table_data, \"status at production\")\n    answer = False\n    for project, status in zip(projects, statuses):\n        if \"london aquatics centre\" in project.lower() and \"under construction\" in status.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "969a4a03-f062-45aa-b5b6-92b9f5c6051a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = big day out lineups by year\ntable_data = [[\"sydney\", \"melbourne\", \"perth\", \"adelaide\", \"gold coast\", \"auckland\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"cancelled\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\"],[\"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"no\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"no\"],[\"no\", \"yes\", \"no\", \"no\", \"no\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"]]\nQuestion = Is it true that whenever melbourne and sydney have a yes , auckland and adelaide have a no?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    sydney = get_column_by_name(table_data, \"sydney\")\n    melbourne = get_column_by_name(table_data, \"melbourne\")\n    adelaide = get_column_by_name(table_data, \"adelaide\")\n    auckland = get_column_by_name(table_data, \"auckland\")\n    for s, m, a, au in zip(sydney, melbourne, adelaide, auckland):\n        if s == \"yes\" and m == \"yes\":\n            if a == \"yes\" or au == \"yes\":\n                return False\n    return True\n\n### END"}
{"id": "9201db91-97a6-4ecb-b4bd-8249f3d9f339", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1997 major league baseball draft\ntable_data = [[\"pick\", \"player\", \"team\", \"position\", \"school\"],[\"1\", \"matt anderson\", \"detroit tigers\", \"p\", \"rice university\"],[\"2\", \"jd drew\", \"philadelphia phillies\", \"of\", \"florida state university\"],[\"3\", \"troy glaus\", \"anaheim angels\", \"3b , p\", \"ucla\"],[\"4\", \"jason grilli\", \"san francisco giants\", \"p\", \"seton hall university\"],[\"5\", \"vernon wells\", \"toronto blue jays\", \"of\", \"bowie hs (arlington , texas)\"],[\"6\", \"geoff goetz\", \"new york mets\", \"p\", \"jesuit hs (tampa , florida)\"],[\"7\", \"dan reichert\", \"kansas city royals\", \"p\", \"university of the pacific\"],[\"8\", \"jj davis\", \"pittsburgh pirates\", \"of\", \"baldwin park hs (pomona , california)\"],[\"9\", \"michael cuddyer\", \"minnesota twins\", \"ss , p\", \"great bridge hs (chesapeake , virginia)\"],[\"10\", \"jon garland\", \"chicago cubs\", \"p\", \"kennedy hs (granada hills , california)\"],[\"11\", \"chris enochs\", \"oakland athletics\", \"p\", \"west virginia university\"],[\"12\", \"aaron akin\", \"florida marlins\", \"p\", \"cowley county community college\"],[\"13\", \"kyle peterson\", \"milwaukee brewers\", \"p\", \"stanford university\"],[\"14\", \"brandon larson\", \"cincinnati reds\", \"ss\", \"louisiana state university\"],[\"15\", \"jason dellaero\", \"chicago white sox\", \"ss , p\", \"university of south florida\"],[\"16\", \"lance berkman\", \"houston astros\", \"1b\", \"rice university\"],[\"17\", \"john curtice\", \"boston red sox\", \"p\", \"great bridge hs (chesapeake , virginia)\"],[\"18\", \"mark mangum\", \"colorado rockies\", \"p\", \"kingwood hs (kingwood , texas)\"],[\"19\", \"ryan anderson\", \"seattle mariners\", \"p\", \"divine child hs (westland , michigan)\"],[\"20\", \"adam kennedy\", \"st louis cardinals\", \"ss\", \"cal state northridge university\"],[\"21\", \"eric dubose\", \"oakland athletics\", \"p\", \"mississippi state university\"],[\"22\", \"jayson werth\", \"baltimore orioles\", \"c , of\", \"glenwood hs (chatham , illinois)\"],[\"23\", \"donnie bridges\", \"montreal expos\", \"p\", \"oak grove hs (hattiesburg , mississippi)\"],[\"24\", \"tyrell godwin\", \"new york yankees\", \"of\", \"east bladen hs (elizabethtown , north carolina)\"],[\"25\", \"glenn davis\", \"los angeles dodgers\", \"1b\", \"vanderbilt university\"],[\"26\", \"darnell mcdonald\", \"baltimore orioles\", \"of\", \"cherry creek hs (englewood , colorado)\"],[\"27\", \"kevin nicholson\", \"san diego padres\", \"ss\", \"stetson university\"],[\"28\", \"tim drew\", \"cleveland indians\", \"p , of\", \"lowndes county hs (valdosta , georgia)\"],[\"29\", \"troy cameron\", \"atlanta braves\", \"ss\", \"st thomas aquinas hs (fort lauderdale , florida)\"],[\"30\", \"jack cust\", \"arizona diamondbacks\", \"1b\", \"immaculata hs (somerville , new jersey)\"],[\"31\", \"jason standridge\", \"tampa bay devil rays\", \"p\", \"hewitt - trussville hs (trussville , al)\"]]\nQuestion = Is it true that jason grilli from seton hall university held the p position while playing for the san francisco giants?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    teams = get_column_by_name(table_data, \"team\")\n    positions = get_column_by_name(table_data, \"position\")\n    schools = get_column_by_name(table_data, \"school\")\n    for player, team, position, school in zip(players, teams, positions, schools):\n        if player.lower() == \"jason grilli\" and team.lower() == \"san francisco giants\" and position.lower() == \"p\" and school.lower() == \"seton hall university\":\n            return True\n    return False\n\n### END"}
{"id": "204d6277-70f2-4c4a-8486-bb980a73e471", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1977 - 78 philadelphia flyers season\ntable_data = [[\"game\", \"october\", \"opponent\", \"score\", \"record\", \"points\"],[\"1\", \"13\", \"chicago black hawks\", \"5 - 1\", \"1 - 0 - 0\", \"2\"],[\"2\", \"15\", \"pittsburgh penguins\", \"8 - 2\", \"2 - 0 - 0\", \"4\"],[\"3\", \"16\", \"st louis blues\", \"7 - 0\", \"3 - 0 - 0\", \"6\"],[\"4\", \"20\", \"pittsburgh penguins\", \"11 - 0\", \"4 - 0 - 0\", \"8\"],[\"5\", \"22\", \"toronto maple leafs\", \"1 - 6\", \"4 - 1 - 0\", \"8\"],[\"6\", \"23\", \"toronto maple leafs\", \"3 - 6\", \"4 - 2 - 0\", \"8\"],[\"7\", \"26\", \"chicago black hawks\", \"2 - 2\", \"4 - 2 - 1\", \"9\"],[\"8\", \"29\", \"st louis blues\", \"7 - 3\", \"5 - 2 - 1\", \"11\"]]\nQuestion = Is it true that the record on october 13 was 1 - 0 - 0?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"october\")\n    records = get_column_by_name(table_data, \"record\")\n    for date, record in zip(dates, records):\n        if date == \"13\":\n            answer = equal_to(record, \"1 - 0 - 0\")\n            break \n    return answer\n\n### END"}
{"id": "0491b718-ff5b-48f1-8370-a196389dd37e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"game\", \"date\", \"home team\", \"result\", \"road team\"],[\"game 1\", \"april 14\", \"boston\", \"117 - 114\", \"los angeles\"],[\"game 2\", \"april 16\", \"boston\", \"113 - 106\", \"los angeles\"],[\"game 3\", \"april 17\", \"los angeles\", \"119 - 99\", \"boston\"],[\"game 4\", \"april 19\", \"los angeles\", \"105 - 108\", \"boston\"],[\"game 5\", \"april 21\", \"boston\", \"119 - 126\", \"los angeles\"],[\"game 6\", \"april 24\", \"los angeles\", \"109 - 112\", \"boston\"]]\nQuestion = Is it true that the road team from los angeles has a result of 117 - 114?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    road_teams = get_column_by_name(table_data, \"road team\")\n    results = get_column_by_name(table_data, \"result\")\n    for road_team, result in zip(road_teams, results):\n        if road_team.lower() == \"los angeles\":\n            answer = equal_to(result, \"117 - 114\")\n            break \n    return answer\n\n### END"}
{"id": "e86336fe-a6b7-4f21-8138-3455aee6643d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 veikkausliiga\ntable_data = [[\"club\", \"location\", \"stadium\", \"capacity\", \"manager\", \"kitmaker\"],[\"ac oulu\", \"oulu\", \"castrén\", \"4000\", \"juha malinen\", \"umbro\"],[\"fc honka\", \"espoo\", \"tapiolan urheilupuisto\", \"6000\", \"mika lehkosuo\", \"kappa\"],[\"fc inter\", \"turku\", \"veritas stadion\", \"9372\", \"job dragtsma\", \"nike\"],[\"fc lahti\", \"lahti\", \"lahden stadion\", \"15000\", \"ilkka mäkelä\", \"umbro\"],[\"ff jaro\", \"jakobstad\", \"jakobstads centralplan\", \"5000\", \"alexei eremenko sr\", \"errea\"],[\"haka\", \"valkeakoski\", \"tehtaan kenttä\", \"3516\", \"sami ristilä\", \"umbro\"],[\"hjk\", \"helsinki\", \"sonera stadium\", \"10770\", \"antti muurinen\", \"adidas\"],[\"ifk mariehamn\", \"mariehamn\", \"wiklöf holding arena\", \"4000\", \"pekka lyyski\", \"puma\"],[\"jjk\", \"jyväskylä\", \"harjun stadion\", \"3000\", \"kari martonen\", \"legea\"],[\"kups\", \"kuopio\", \"kuopion keskuskenttä\", \"5000\", \"esa pekonen\", \"puma\"],[\"mypa\", \"anjalankoski\", \"saviniemi\", \"4167\", \"janne lindberg\", \"puma\"],[\"tampere united\", \"tampere\", \"ratina stadion\", \"17000\", \"ari hjelm\", \"puma\"],[\"tps\", \"turku\", \"veritas stadion\", \"9372\", \"marko rajamäki\", \"puma\"]]\nQuestion = Is it true that the largest capacity for a stadium , on the chart , is 17000?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef get_max_value(lst):\n    return max(lst)\n\ndef solution(table_data):\n    capacities = get_column_by_name(table_data, \"capacity\")\n    capacities = [int(capacity) for capacity in capacities]\n    max_capacity = get_max_value(capacities)\n    answer = max_capacity == 17000\n    return answer\n\n### END"}
{"id": "b300a13a-65b5-48fc-8219-5a968d03fb0a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2005 - 06 toronto raptors season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"57\", \"march 1\", \"atlanta\", \"l 111 - 113 (ot)\", \"chris bosh (27)\", \"charlie villanueva (11)\", \"chris bosh (5)\", \"air canada centre 15137\", \"20 - 37\"],[\"58\", \"march 4\", \"new jersey\", \"l 100 - 105 (ot)\", \"morris peterson (25)\", \"chris bosh , charlie villanueva (11)\", \"mike james (7)\", \"continental airlines arena 16215\", \"20 - 38\"],[\"59\", \"march 5\", \"boston\", \"w 111 - 105 (ot)\", \"morris peterson (27)\", \"chris bosh (10)\", \"mike james (6)\", \"air canada centre 16623\", \"21 - 38\"],[\"60\", \"march 7\", \"cleveland\", \"l 99 - 106 (ot)\", \"mike james (31)\", \"charlie villanueva (11)\", \"mike james (8)\", \"quicken loans arena 18077\", \"21 - 39\"],[\"61\", \"march 8\", \"cleveland\", \"l 97 - 98 (ot)\", \"morris peterson (31)\", \"chris bosh (14)\", \"mike james (7)\", \"air canada centre 19800\", \"21 - 40\"],[\"62\", \"march 10\", \"denver\", \"l 97 - 108 (ot)\", \"mike james (26)\", \"chris bosh (15)\", \"josé calderón (5)\", \"air canada centre 17806\", \"21 - 41\"],[\"63\", \"march 12\", \"indiana\", \"w 93 - 89 (ot)\", \"morris peterson (25)\", \"chris bosh (8)\", \"mike james (4)\", \"air canada centre 17573\", \"22 - 41\"],[\"64\", \"march 14\", \"philadelphia\", \"w 111 - 97 (ot)\", \"chris bosh (31)\", \"charlie villanueva (10)\", \"darrick martin (12)\", \"wachovia center 14917\", \"23 - 41\"],[\"65\", \"march 15\", \"detroit\", \"l 98 - 105 (ot)\", \"mike james (24)\", \"chris bosh (11)\", \"mike james (11)\", \"air canada centre 19800\", \"23 - 42\"],[\"66\", \"march 17\", \"milwaukee\", \"w 97 - 96 (ot)\", \"chris bosh (27)\", \"chris bosh (10)\", \"mike james (6)\", \"air canada centre 17273\", \"24 - 42\"],[\"67\", \"march 21\", \"new york\", \"w 114 - 109 (ot)\", \"mike james (37)\", \"mike james , charlie villanueva (8)\", \"mike james (5)\", \"madison square garden 18131\", \"25 - 42\"],[\"68\", \"march 22\", \"boston\", \"l 96 - 110 (ot)\", \"mike james (31)\", \"chris bosh (11)\", \"chris bosh (8)\", \"td banknorth garden 18624\", \"25 - 43\"],[\"69\", \"march 24\", \"minnesota\", \"w 97 - 77 (ot)\", \"morris peterson (21)\", \"chris bosh (15)\", \"mike james (5)\", \"air canada centre 17493\", \"26 - 43\"],[\"70\", \"march 26\", \"milwaukee\", \"l 116 - 125 (ot)\", \"charlie villanueva (48)\", \"charlie villanueva (9)\", \"mike james (10)\", \"bradley center 16317\", \"26 - 44\"],[\"71\", \"march 29\", \"miami\", \"l 94 - 98 (ot)\", \"morris peterson (28)\", \"charlie villanueva (13)\", \"mike james (12)\", \"air canada centre 19973\", \"26 - 45\"],[\"72\", \"march 31\", \"phoenix\", \"l 126 - 140 (ot)\", \"morris peterson (38)\", \"pape sow (15)\", \"mike james (10)\", \"air canada centre 19800\", \"26 - 46\"]]\nQuestion = Is it true that the game that was played on march 12 went into overtime with a final score of w 93 - 89 (ot)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    scores = get_column_by_name(table_data, \"score\")\n    for date, score in zip(dates, scores):\n        if date.lower() == \"march 12\":\n            answer = equal_to(score, \"w 93 - 89 (ot)\")\n            break \n    return answer\n\n### END"}
{"id": "38004d15-475a-42e8-99b0-950d415d0f06", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\",\"title\",\"from album\",\"label\",\"label - nr\"],[\"1962\",\"tonight / sinnin' sam\",\"lookin' ahead\",\"pacific jazz\",\"x - 340\"],[\"1962\",\"the young rabbits / song of india\",\"lookin' ahead\",\"pacific jazz\",\"x - 342\"],[\"1962\",\"congolese sermon / weather beat\",\"(only on 45)\",\"pacific jazz\",\"x - 357\"],[\"1963\",\"no name samba / tough talk\",\"tough talk\",\"world pacific\",\"x - 371\"],[\"1963\",\"turkish black / boopie\",\"tough talk\",\"world pacific\",\"x - 388\"],[\"1963\",\"spanish castles / bluesette\",\"jazz waltz (w les mccann)\",\"world pacific\",\"406\"],[\"1964\",\"heat wave / on broadway\",\"heat wave\",\"world pacific\",\"401\"],[\"1964\",\"i remember tomorrow / long john\",\"stretchin' out\",\"world pacific\",\"412\"],[\"1965\",\"tough talk / the thing\",\"the thing\",\"world pacific\",\"77800\"],[\"1965\",\"aqua dulce / soul bourgeoisie\",\"chile con soul\",\"world pacific\",\"77806\"],[\"1966\",\"scratch / uptight\",\"talk that talk\",\"pacific jazz\",\"88125\"],[\"1968\",\"ooga - boo - ga - loo / eleanor rigby\",\"lighthouse '68\",\"pacific jazz\",\"88144\"],[\"1968\",\"hey jude / love and peace\",\"powerhouse\",\"pacific jazz\",\"88146\"],[\"1969\",\"get back / willie and laura mae jones\",\"lighthouse '69\",\"word pacific jazz\",\"88153\"],[\"1970\",\"way back home / jackson\",\"old socks , new shoes\",\"chisa\",\"c - 8010\"]]\nQuestion = Is it true that get back / willie and laura mae jones was released in 1968?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    years = get_column_by_name(table_data, \"year\")\n    answer = False\n    for title, year in zip(titles, years):\n        if \"get back / willie and laura mae jones\" in title.lower():\n            if year == \"1968\":\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "50964356-ff92-4759-8c68-1b11986a3e70", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"d 47 +\", \"d 46 +\", \"d 45 +\", \"d 44 +\", \"d 43 o\", \"d 42 o\", \"d 41\", \"d 40\"],[\"d 8\", \"d 9\", \"d 10\", \"d 11\", \"d 12\", \"d 13\", \"d 14\", \"d 15\"],[\"d 27\", \"d 26\", \"d 25\", \"d 24\", \"d 23\", \"d 22\", \"d 21\", \"d 20\"],[\"d 28\", \"d 29\", \"d 30\", \"d 31\", \"d 32\", \"d 33\", \"d 34\", \"d 35\"],[\"d 47 +\", \"d 46 +\", \"d 45 +\", \"d 44 +\", \"d 43 o\", \"d 42 o\", \"d 41\", \"d 40\"],[\"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\"],[\"r 48 +\", \"r 47 +\", \"r 46 +\", \"r 45 +\", \"r 44 +\", \"r 43 +\", \"r 42 o\", \"r 41 o\"],[\"r 29\", \"r 30\", \"r 31\", \"r 32\", \"r 33\", \"r 34\", \"r 35\", \"r 36\"],[\"r 28\", \"r 27\", \"r 26\", \"r 25\", \"r 24\", \"r 23\", \"r 22\", \"r 21\"],[\"r 9\", \"r 10\", \"r 11\", \"r 12\", \"r 13\", \"r 14\", \"r 15\", \"r 16\"],[\"r 8\", \"r 7\", \"r 6\", \"r 5\", \"r 4\", \"r 3\", \"r 2\", \"r 1\"]]\nQuestion = Is it true that d 41 of r 15 for having d 25 of r 13?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef get_column_cell_value(row_index, column):\n    return column[row_index]\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    column_index = 6\n    column_6 = get_column_by_index(table_data, column_index)\n    d_41 = get_column_cell_value(5, column_6)\n    expected_d_41 = \"d 41\"\n    column_index = 2\n    column_2 = get_column_by_index(table_data, column_index)\n    r_15 = get_column_cell_value(9, column_2)\n    expected_r_15 = \"r 15\"\n    column_index = 4\n    column_4 = get_column_by_index(table_data, column_index)\n    d_25 = get_column_cell_value(2, column_4)\n    expected_d_25 = \"d 25\"\n    column_index = 1\n    column_1 = get_column_by_index(table_data, column_index)\n    r_13 = get_column_cell_value(9, column_1)\n    expected_r_13 = \"r 13\"\n    answer = equal_to(d_41, expected_d_41) and equal_to(r_15, expected_r_15) and equal_to(d_25, expected_d_25) and equal_to(r_13, expected_r_13)\n    return answer\n\n### END"}
{"id": "5b626d5e-4c69-4383-8ba3-4f18926a6913", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = boise state broncos men 's basketball\ntable_data = [[\"year\", \"round\", \"opponent\", \"result\", \"bsu head coach\"],[\"1976\", \"first round\", \"unlv\", \"l 78 - 103\", \"bus conner\"],[\"1988\", \"first round\", \"michigan\", \"l 58 - 63\", \"bobby dye\"],[\"1993\", \"first round\", \"vanderbilt\", \"l 72 - 92\", \"bobby dye\"],[\"1994\", \"first round\", \"louisville\", \"l 58 - 67\", \"bobby dye\"],[\"2008\", \"first round\", \"louisville\", \"l 61 - 79\", \"greg graham\"],[\"2013\", \"first four\", \"la salle\", \"l 71 - 80\", \"leon rice\"]]\nQuestion = Is it true that l 71 - 80 was the result before 1993 of the first four rounds?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    results = get_column_by_name(table_data, \"result\")\n    rounds = get_column_by_name(table_data, \"round\")\n    answer = False\n    for year, result, round in zip(years, results, rounds):\n        if int(year) < 1993 and \"first four\" in round.lower():\n            if equal_to(result, \"l 71 - 80\"):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "11d988b3-a276-40a0-9717-770bd46da8ff", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 manchester city f.c. season\ntable_data = [[\"exit date\", \"pos\", \"player\", \"to club\", \"transfer fee\"],[\"15 may 2007\", \"df\", \"hatem trabelsi\", \"al - hilal\", \"released\"],[\"23 may 2007\", \"df\", \"sylvain distin\", \"portsmouth\", \"free\"],[\"14 june 2007\", \"mf\", \"joey barton\", \"newcastle united\", \"5.8 m\"],[\"4 july 2007\", \"gk\", \"nicky weaver\", \"charlton athletic\", \"free\"],[\"10 july 2007\", \"mf\", \"trevor sinclair\", \"cardiff city\", \"free\"],[\"16 july 2007\", \"df\", \"stephen jordan\", \"burnley\", \"free\"],[\"31 jan 2008\", \"mf\", \"ousmane dabo\", \"lazio\", \"free\"],[\"31 jan 2008\", \"fw\", \"ishmael miller\", \"west brom albion\", \"9 m - 1.4 m\"]]\nQuestion = Is it true that 23 may 2007 is the exit date of hatem trabelsi who was transferred to portsmouth?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    exit_dates = get_column_by_name(table_data, \"exit date\")\n    players = get_column_by_name(table_data, \"player\")\n    to_clubs = get_column_by_name(table_data, \"to club\")\n    answer = False\n    for exit_date, player, to_club in zip(exit_dates, players, to_clubs):\n        if exit_date == \"23 may 2007\" and player.lower() == \"hatem trabelsi\" and to_club.lower() == \"portsmouth\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "103b08a6-cc1b-441d-9a2b-f809d510b8c1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the howie carr show\ntable_data = [[\"calls\",\"frequency\",\"branding\",\"format\",\"timeslot\",\"group owner\"],[\"wgan\",\"560 khz\",\"news radio 560 wgan\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"whyn\",\"560 khz\",\"news / talk 560 whyn\",\"news / talk\",\"live 3p - 7p\",\"clear channel communications\"],[\"wvmt\",\"620 khz\",\"news / talk 620 wvmt\",\"news / talk\",\"live 3p - 7p\",\"sison broadcasting\"],[\"wrko\",\"680 khz\",\"am 680 wrko\",\"news / talk\",\"live 3p - 7p\",\"entercom\"],[\"wcrn\",\"830 khz\",\"wcrn 830 true talk\",\"news / talk\",\"live 3p - 7p\",\"carter broadcasting\"],[\"wkbk\",\"1290 khz\",\"1290 wkbk w281au 104.1\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"wegp\",\"1390 khz\",\"wegp 1390 am - the talk of the county\",\"news / talk\",\"live 3p - 6p\",\"decelles / media , inc\"],[\"wxtk\",\"95.1 mhz\",\"news radio 95 wxtk\",\"news / talk\",\"live 3p - 7p\",\"qantam of cape cod , llc\"],[\"wntk - fm\",\"99.7 mhz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wuvr\",\"1490 khz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wvom - fm / wvqm\",\"103.9 / 101.3 mhz\",\"the voice of maine\",\"news / talk\",\"live 3p - 7p\",\"blueberry broadcasting\"]]\nQuestion = Is it true that am 680 wrko is the branding for frequncy of 680 khz formatted as news / talk?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    brandings = get_column_by_name(table_data, \"branding\")\n    formats = get_column_by_name(table_data, \"format\")\n    for frequency, branding, format in zip(frequencies, brandings, formats):\n        if equal_to(frequency, \"680 khz\") and equal_to(branding, \"am 680 wrko\") and equal_to(format, \"news / talk\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "ae3c999c-4613-4d12-bfc1-56ef63a23338", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1973 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"geelong\", \"14.11 (95)\", \"hawthorn\", \"14.10 (94)\", \"kardinia park\", \"13546\", \"4 august 1973\"],[\"st kilda\", \"15.20 (110)\", \"footscray\", \"12.14 (86)\", \"moorabbin oval\", \"15217\", \"4 august 1973\"],[\"richmond\", \"15.14 (104)\", \"fitzroy\", \"13.14 (92)\", \"mcg\", \"20578\", \"4 august 1973\"],[\"north melbourne\", \"13.13 (91)\", \"essendon\", \"14.10 (94)\", \"arden street oval\", \"21071\", \"4 august 1973\"],[\"collingwood\", \"19.7 (121)\", \"carlton\", \"15.16 (106)\", \"victoria park\", \"37660\", \"4 august 1973\"],[\"south melbourne\", \"12.14 (86)\", \"melbourne\", \"11.12 (78)\", \"vfl park\", \"15255\", \"4 august 1973\"]]\nQuestion = Is it true that richmond , being the home team , played against fitzroy , the away team , at mcg?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    for home_team, away_team, venue in zip(home_teams, away_teams, venues):\n        if home_team.lower() == \"richmond\" and away_team.lower() == \"fitzroy\" and venue.lower() == \"mcg\":\n            return True\n    return False\n\n### END"}
{"id": "43482b22-18e2-4402-8b35-4dcf53309511", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 veikkausliiga\ntable_data = [[\"club\", \"location\", \"stadium\", \"capacity\", \"manager\", \"kitmaker\"],[\"ac oulu\", \"oulu\", \"castrén\", \"4000\", \"juha malinen\", \"umbro\"],[\"fc honka\", \"espoo\", \"tapiolan urheilupuisto\", \"6000\", \"mika lehkosuo\", \"kappa\"],[\"fc inter\", \"turku\", \"veritas stadion\", \"9372\", \"job dragtsma\", \"nike\"],[\"fc lahti\", \"lahti\", \"lahden stadion\", \"15000\", \"ilkka mäkelä\", \"umbro\"],[\"ff jaro\", \"jakobstad\", \"jakobstads centralplan\", \"5000\", \"alexei eremenko sr\", \"errea\"],[\"haka\", \"valkeakoski\", \"tehtaan kenttä\", \"3516\", \"sami ristilä\", \"umbro\"],[\"hjk\", \"helsinki\", \"sonera stadium\", \"10770\", \"antti muurinen\", \"adidas\"],[\"ifk mariehamn\", \"mariehamn\", \"wiklöf holding arena\", \"4000\", \"pekka lyyski\", \"puma\"],[\"jjk\", \"jyväskylä\", \"harjun stadion\", \"3000\", \"kari martonen\", \"legea\"],[\"kups\", \"kuopio\", \"kuopion keskuskenttä\", \"5000\", \"esa pekonen\", \"puma\"],[\"mypa\", \"anjalankoski\", \"saviniemi\", \"4167\", \"janne lindberg\", \"puma\"],[\"tampere united\", \"tampere\", \"ratina stadion\", \"17000\", \"ari hjelm\", \"puma\"],[\"tps\", \"turku\", \"veritas stadion\", \"9372\", \"marko rajamäki\", \"puma\"]]\nQuestion = Is it true that the kitmaker for tps is puma and the manager 's name is an hjelm?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    clubs = get_column_by_name(table_data, \"club\")\n    kitmakers = get_column_by_name(table_data, \"kitmaker\")\n    managers = get_column_by_name(table_data, \"manager\")\n    for club, kitmaker, manager in zip(clubs, kitmakers, managers):\n        if equal_to(club, \"tps\"):\n            answer = equal_to(kitmaker, \"puma\") and equal_to(manager, \"ari hjelm\")\n            break \n    return answer\n\n### END"}
{"id": "592871a9-168e-40de-82d5-6f20f76c3514", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 british grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"kimi räikkönen\", \"ferrari\", \"59\", \"1:21:43.074\", \"2\"],[\"fernando alonso\", \"mclaren - mercedes\", \"59\", \"+ 2.459\", \"3\"],[\"lewis hamilton\", \"mclaren - mercedes\", \"59\", \"+ 39.373\", \"1\"],[\"robert kubica\", \"bmw sauber\", \"59\", \"+ 53.319\", \"5\"],[\"felipe massa\", \"ferrari\", \"59\", \"+ 54.063\", \"4\"],[\"nick heidfeld\", \"bmw sauber\", \"59\", \"+ 56.336\", \"9\"],[\"heikki kovalainen\", \"renault\", \"58\", \"+ 1 lap\", \"7\"],[\"giancarlo fisichella\", \"renault\", \"58\", \"+ 1 lap\", \"8\"],[\"rubens barrichello\", \"honda\", \"58\", \"+ 1 lap\", \"14\"],[\"jenson button\", \"honda\", \"58\", \"+ 1 lap\", \"18\"],[\"david coulthard\", \"red bull - renault\", \"58\", \"+ 1 lap\", \"12\"],[\"nico rosberg\", \"williams - toyota\", \"58\", \"+ 1 lap\", \"17\"],[\"alexander wurz\", \"williams - toyota\", \"58\", \"+ 1 lap\", \"13\"],[\"takuma sato\", \"super aguri - honda\", \"57\", \"+ 2 laps\", \"21\"],[\"christijan albers\", \"spyker - ferrari\", \"57\", \"+ 2 laps\", \"22\"],[\"vitantonio liuzzi\", \"toro rosso - ferrari\", \"53\", \"gearbox\", \"16\"],[\"jarno trulli\", \"toyota\", \"43\", \"handling\", \"10\"],[\"anthony davidson\", \"super aguri - honda\", \"35\", \"mechanical\", \"19\"],[\"scott speed\", \"toro rosso - ferrari\", \"29\", \"collision\", \"15\"],[\"ralf schumacher\", \"toyota\", \"22\", \"wheel\", \"6\"],[\"adrian sutil\", \"spyker - ferrari\", \"16\", \"engine\", \"20\"],[\"mark webber\", \"red bull - renault\", \"8\", \"hydraulics\", \"11\"]]\nQuestion = Is it true that jenson button had a honda constructor?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    constructors = get_column_by_name(table_data, \"constructor\")\n    answer = False\n    for driver, constructor in zip(drivers, constructors):\n        if driver.lower() == \"jenson button\" and constructor.lower() == \"honda\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "1b83f23c-2be6-4692-8b0b-2ea1a818099f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1971 nhl amateur draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"15\", \"ken baird\", \"defence\", \"canada\", \"california golden seals\", \"flin flon bombers (wchl)\"],[\"16\", \"henry boucha\", \"centre\", \"united states\", \"detroit red wings\", \"us national development team\"],[\"17\", \"bobby lalonde\", \"centre\", \"canada\", \"vancouver canucks\", \"montreal junior canadiens (oha)\"],[\"18\", \"brian mckenzie\", \"left wing\", \"canada\", \"pittsburgh penguins\", \"st catharines black hawks (oha)\"],[\"19\", \"craig ramsay\", \"left wing\", \"canada\", \"buffalo sabres\", \"peterborough petes (oha)\"],[\"20\", \"larry robinson\", \"defence\", \"canada\", \"montreal canadiens\", \"kitchener rangers (oha)\"],[\"21\", \"rod norrish\", \"left wing\", \"canada\", \"minnesota north stars\", \"regina pats (wchl)\"],[\"22\", \"rick kehoe\", \"right wing\", \"canada\", \"toronto maple leafs\", \"hamilton red wings (oha)\"],[\"23\", \"dave fortier\", \"defence\", \"canada\", \"toronto maple leafs\", \"st catharines black hawks (oha)\"],[\"24\", \"michel deguise\", \"goaltender\", \"canada\", \"montreal canadiens\", \"sorel eperviers (qmjhl)\"],[\"25\", \"terry french\", \"centre\", \"canada\", \"montreal canadiens\", \"ottawa 67 's (oha)\"],[\"26\", \"dave kryskow\", \"left wing\", \"canada\", \"chicago black hawks\", \"edmonton oil kings (wchl)\"],[\"27\", \"tom williams\", \"left wing\", \"canada\", \"new york rangers\", \"hamilton red wings (oha)\"],[\"28\", \"curt ridley\", \"goaltender\", \"canada\", \"boston bruins\", \"portage terriers (mjhl)\"]]\nQuestion = Is it true that tom williams is a player for new york rangers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    teams = get_column_by_name(table_data, \"nhl team\")\n    answer = False\n    for player, team in zip(players, teams):\n        if player.lower() == \"tom williams\" and team.lower() == \"new york rangers\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "6f6397d3-f92b-4c05-b5de-54715bcbb8a5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1973 all - ireland senior hurling championship\ntable_data = [[\"player\", \"team\", \"last game\", \"date\", \"opposition\", \"début\"],[\"jimmy doyle\", \"tipperary\", \"munster quarter - final\", \"may 20\", \"waterford\", \"1957\"],[\"mick culligan\", \"clare\", \"munster semi - final\", \"june 24\", \"limerick\", \"1973\"],[\"mick kilmartin\", \"clare\", \"munster semi - final\", \"june 24\", \"limerick\", \"1971\"],[\"michael o'connor\", \"clare\", \"munster semi - final\", \"june 24\", \"limerick\", \"1973\"],[\"tim ryan\", \"clare\", \"munster semi - final\", \"june 24\", \"limerick\", \"1973\"],[\"jimmy crampton\", \"tipperary\", \"july 29\", \"munster final\", \"waterford\", \"1973\"],[\"len gaynor\", \"tipperary\", \"july 29\", \"munster final\", \"waterford\", \"1973\"],[\"christy jacob\", \"wexford\", \"leinster final\", \"august 5\", \"kilkenny\", \"1966\"],[\"éamonn morrissey\", \"kilkenny\", \"leinster final\", \"august 5\", \"wexford\", \"1972\"],[\"martin coogan\", \"kilkenny\", \"all - ireland final\", \"september 2\", \"limerick\", \"1961\"],[\"john kinsella\", \"kilkenny\", \"all - ireland final\", \"september 2\", \"limerick\", \"1967\"]]\nQuestion = Is it true that mick culligan , michael o'connor , and tim ryan all debuted after 1972 on june 24 against limerick?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    dates = get_column_by_name(table_data, \"date\")\n    oppositions = get_column_by_name(table_data, \"opposition\")\n    debuts = get_column_by_name(table_data, \"début\")\n    answer = False\n    for player, date, opposition, debut in zip(players, dates, oppositions, debuts):\n        if player.lower() in [\"mick culligan\", \"michael o'connor\", \"tim ryan\"] and date.lower() == \"june 24\" and opposition.lower() == \"limerick\":\n            if greater(int(debut), 1972):\n                answer = True\n            else:\n                answer = False\n                break\n    return answer\n\n### END"}
{"id": "b987d25f-73f1-430e-b452-779eee9c7de3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1971 u.s. open (golf)\ntable_data = [[\"place\", \"player\", \"country\", \"score\", \"to par\", \"money\"],[\"t1\", \"lee trevino\", \"united states\", \"70 + 72 + 69 + 69 = 280\", \"e\", \"playoff\"],[\"t1\", \"jack nicklaus\", \"united states\", \"69 + 72 + 68 + 71 = 280\", \"e\", \"playoff\"],[\"t3\", \"jim colbert\", \"united states\", \"69 + 69 + 73 + 71 = 282\", \"+ 2\", \"9000\"],[\"t3\", \"bob rosburg\", \"united states\", \"71 + 72 + 70 + 69 = 282\", \"+ 2\", \"9000\"],[\"t5\", \"george archer\", \"united states\", \"71 + 70 + 70 + 72 = 283\", \"+ 3\", \"6500\"],[\"t5\", \"johnny miller\", \"united states\", \"70 + 73 + 70 + 70 = 283\", \"+ 3\", \"6500\"],[\"t5\", \"jim simons (a)\", \"united states\", \"71 + 71 + 65 + 76 = 283\", \"+ 3\", \"0\"],[\"8\", \"raymond floyd\", \"united states\", \"71 + 75 + 67 + 71 = 284\", \"+ 4\", \"5000\"],[\"t9\", \"gay brewer\", \"united states\", \"70 + 70 + 73 + 72 = 285\", \"+ 5\", \"3325\"],[\"t9\", \"larry hinson\", \"united states\", \"71 + 71 + 70 + 73 = 285\", \"+ 5\", \"3325\"],[\"t9\", \"bobby nichols\", \"united states\", \"69 + 72 + 69 + 75 = 285\", \"+ 5\", \"3325\"],[\"t9\", \"bert yancey\", \"united states\", \"75 + 69 + 69 + 72 = 285\", \"+ 5\", \"3325\"]]\nQuestion = Is it true that raymond floyd was the player who finished at + 4?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    to_pars = get_column_by_name(table_data, \"to par\")\n    for player, to_par in zip(players, to_pars):\n        if player.lower() == \"raymond floyd\":\n            answer = equal_to(to_par, \"+ 4\")\n            break \n    return answer\n\n### END"}
{"id": "ab642bf0-57b0-4e86-bd43-ad7406b4a024", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 football league one\ntable_data = [[\"team\",\"outgoing manager\",\"manner of departure\",\"date of vacancy\",\"replaced by\",\"date of appointment\",\"position in table\"],[\"milton keynes dons\",\"paul ince\",\"signed by blackburn rovers (mutual consent)\",\"22 june 2008\",\"roberto di matteo\",\"2 july 2008\",\"pre - season\"],[\"cheltenham town\",\"keith downing\",\"mutual consent\",\"13 september 2008\",\"martin allen\",\"15 september 2008\",\"24th\"],[\"colchester united\",\"geraint williams\",\"mutual consent\",\"22 september 2008\",\"paul lambert\",\"24 september 2008\",\"23rd\"],[\"carlisle united\",\"john ward\",\"mutual consent\",\"3 november 2008\",\"greg abbott\",\"5 december 2008\",\"20th\"],[\"huddersfield town\",\"stan ternent\",\"mutual consent\",\"4 november 2008\",\"lee clark\",\"11 december 2008\",\"16th\"],[\"swindon town\",\"maurice malpas\",\"mutual consent\",\"14 november 2008\",\"danny wilson\",\"26 december 2008\",\"16th\"],[\"crewe alexandra\",\"steve holland\",\"contract terminated\",\"18 november 2008\",\"guðjón þórðarson\",\"24 december 2008\",\"24th\"],[\"hartlepool united\",\"danny wilson\",\"contract terminated\",\"15 december 2008\",\"chris turner\",\"15 december 2008\",\"13th\"],[\"leeds united\",\"gary mcallister\",\"contract terminated\",\"21 december 2008\",\"simon grayson\",\"23 december 2008\",\"9th\"],[\"walsall\",\"jimmy mullen\",\"contract terminated\",\"10 january 2009\",\"chris hutchings\",\"20 january 2009\",\"12th\"],[\"leyton orient\",\"martin ling\",\"mutual consent\",\"18 january 2009\",\"geraint williams\",\"5 february 2009\",\"21st\"],[\"yeovil town\",\"russell slade\",\"contract terminated\",\"16 february 2009\",\"terry skiverton\",\"18 february 2009\",\"16th\"],[\"brighton & hove albion\",\"micky adams\",\"contract terminated\",\"21 february 2009\",\"russell slade\",\"6 march 2009\",\"21st\"]]\nQuestion = Is it true that micky adams vacated his position on february 21 , 2009?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_outgoing_manager = get_column_by_name(table_data, \"outgoing manager\")\n    column_date_of_vacancy = get_column_by_name(table_data, \"date of vacancy\")\n    answer = \"micky adams\" in column_outgoing_manager and \"21 february 2009\" in column_date_of_vacancy\n    return answer\n\n### END"}
{"id": "fcf9a8bc-0aa6-4c4f-94a7-e990ddc2dea7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 honda indy 300\ntable_data = [[\"driver\", \"team\", \"laps\", \"time / retired\", \"grid\"],[\"cristiano da matta\", \"newman - haas racing\", \"65\", \"1:51:47.260\", \"3\"],[\"michael andretti\", \"team green\", \"65\", \"+ 5.8 secs\", \"6\"],[\"alex tagliani\", \"forsythe racing\", \"65\", \"+ 7.5 secs\", \"7\"],[\"gil de ferran\", \"team penske\", \"65\", \"+ 20.9 secs\", \"2\"],[\"kenny brack\", \"team rahal\", \"65\", \"+ 22.6 secs\", \"13\"],[\"jimmy vasser\", \"patrick racing\", \"65\", \"+ 24.7 secs\", \"10\"],[\"michel jourdain , jr\", \"bettenhausen racing\", \"65\", \"+ 39.5 secs\", \"16\"],[\"christian fittipaldi\", \"newman - haas racing\", \"65\", \"+ 40.5 secs\", \"15\"],[\"max papis\", \"team rahal\", \"65\", \"+ 42.6 secs\", \"14\"],[\"memo gidley\", \"chip ganassi racing\", \"65\", \"+ 42.9 secs\", \"23\"],[\"patrick carpentier\", \"forsythe racing\", \"65\", \"+ 46.7 secs\", \"9\"],[\"shinji nakano\", \"fernández racing\", \"65\", \"+ 46.9 secs\", \"18\"],[\"alex barron\", \"arciero - blair racing\", \"65\", \"+ 46.9 secs\", \"26\"],[\"paul tracy\", \"team green\", \"65\", \"+ 62.6 secs\", \"4\"],[\"scott dixon\", \"pacwest racing\", \"65\", \"+ 72.0 secs\", \"8\"],[\"tora takagi\", \"walker racing\", \"65\", \"+ 81.8 secs\", \"20\"],[\"tony kanaan\", \"mo nunn racing\", \"65\", \"+ 82.0 secs\", \"3\"],[\"bryan herta\", \"forsythe racing\", \"65\", \"+ 82.4 secs\", \"22\"],[\"adrián fernández\", \"fernández racing\", \"65\", \"+ 100.3 secs\", \"17\"],[\"hélio castroneves\", \"team penske\", \"64\", \"+ 1 lap\", \"11\"],[\"bruno junqueira\", \"chip ganassi racing\", \"56\", \"contact\", \"21\"],[\"roberto moreno\", \"patrick racing\", \"54\", \"mechanical\", \"1\"],[\"dario franchitti\", \"team green\", \"35\", \"mechanical\", \"5\"],[\"maurício gugelmin\", \"pacwest racing\", \"34\", \"mechanical\", \"25\"],[\"oriol servià\", \"sigma autosport\", \"10\", \"mechanical\", \"12\"],[\"casey mears\", \"mo nunn racing\", \"0\", \"contact\", \"24\"]]\nQuestion = Is it true that oriol servià made only 10 laps in the race , for sigma autosport?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    teams = get_column_by_name(table_data, \"team\")\n    laps = get_column_by_name(table_data, \"laps\")\n    for driver, team, lap in zip(drivers, teams, laps):\n        if driver.lower() == \"oriol servià\" and team.lower() == \"sigma autosport\":\n            answer = equal_to(lap, \"10\")\n            break \n    return answer\n\n### END"}
{"id": "c8dc12d2-874e-431a-b8aa-3981ae875868", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1965 detroit lions season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 19 , 1965\", \"los angeles rams\", \"w 20 - 0\", \"46941\"],[\"2\", \"september 26 , 1965\", \"minnesota vikings\", \"w 31 - 29\", \"46826\"],[\"3\", \"october 3 , 1965\", \"washington redskins\", \"w 14 - 10\", \"52627\"],[\"4\", \"october 10 , 1965\", \"baltimore colts\", \"l 31 - 7\", \"60238\"],[\"5\", \"october 17 , 1965\", \"green bay packers\", \"l 31 - 21\", \"56712\"],[\"6\", \"october 24 , 1965\", \"chicago bears\", \"l 38 - 10\", \"45658\"],[\"7\", \"october 31 , 1965\", \"los angeles rams\", \"w 31 - 7\", \"35137\"],[\"8\", \"november 7 , 1965\", \"green bay packers\", \"w 12 - 7\", \"50852\"],[\"9\", \"november 14 , 1965\", \"san francisco 49ers\", \"l 27 - 21\", \"54534\"],[\"10\", \"november 21 , 1965\", \"chicago bears\", \"l 17 - 10\", \"51499\"],[\"11\", \"november 25 , 1965\", \"baltimore colts\", \"t 24 - 24\", \"55036\"],[\"12\", \"december 5 , 1965\", \"san francisco 49ers\", \"l 17 - 14\", \"38463\"],[\"13\", \"december 12 , 1965\", \"minnesota vikings\", \"l 29 - 7\", \"45420\"],[\"14\", \"december 19 , 1965\", \"philadelphia eagles\", \"w 35 - 28\", \"56718\"]]\nQuestion = Is it true that game 10 , which was played against the baltimore colts and saw an attendance greater than 45658 , ended with a result of t 24 - 24?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    results = get_column_by_name(table_data, \"result\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    for opponent, result, attendance in zip(opponents, results, attendances):\n        if opponent.lower() == \"baltimore colts\" and greater(int(attendance), 45658):\n            answer = equal_to(result, \"t 24 - 24\")\n            break \n    return answer\n\n### END"}
{"id": "ed90abd9-0592-4378-a9a8-e965a37b453c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glamorgan county cricket club\ntable_data = [[\"score\", \"batsmen\", \"against\", \"location\", \"year\"],[\"374\", \"matthew elliott and steve james\", \"sussex\", \"colwyn bay\", \"2000\"],[\"252\", \"matthew maynard and david hemp\", \"northamptonshire\", \"sophia gardens\", \"2002\"],[\"313\", \"emrys davies and willie jones\", \"essex\", \"brentwood\", \"1948\"],[\"425\", \"adrian dale and viv richards\", \"middlesex\", \"sophia gardens\", \"1993\"],[\"264\", \"maurice robinson and stan montgomery\", \"hampshire\", \"bournemouth\", \"1949\"],[\"240\", \"jim allenby and mark wallace\", \"surrey\", \"the brit oval\", \"2009\"],[\"211\", \"tony cottey and ottis gibson\", \"leicestershire\", \"swansea\", \"1996\"],[\"202\", \"dai davies and joe hills\", \"sussex\", \"eastbourne\", \"1928\"],[\"203\", \"joe hills and johnnie clay\", \"worcestershire\", \"swansea\", \"1929\"],[\"143\", \"terry davies and simon daniels\", \"gloucestershire\", \"swansea\", \"1982\"]]\nQuestion = Is it true that in 1948 , the score was 313?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    scores = get_column_by_name(table_data, \"score\")\n    years = get_column_by_name(table_data, \"year\")\n    for score, year in zip(scores, years):\n        if year == \"1948\":\n            answer = equal_to(score, \"313\")\n            break \n    return answer\n\n### END"}
{"id": "77163d76-9ece-4b72-82df-6a5918b819f4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sandro cortese\ntable_data = [[\"season\", \"class\", \"team\", \"motorcycle\", \"type\", \"races\", \"wins\", \"podiums\", \"poles\", \"fastest laps\", \"pts\", \"position\"],[\"2005\", \"125cc\", \"kiefer - bos - castrol honda\", \"honda\", \"honda rs125r\", \"16\", \"0\", \"0\", \"0\", \"0\", \"8\", \"26th\"],[\"2006\", \"125cc\", \"elit - caffè latte\", \"honda\", \"honda rs125r\", \"16\", \"0\", \"0\", \"0\", \"0\", \"23\", \"17th\"],[\"2007\", \"125cc\", \"emmi - caffè latte\", \"aprilia\", \"aprilia rs 125\", \"17\", \"0\", \"0\", \"0\", \"0\", \"66\", \"14th\"],[\"2008\", \"125cc\", \"emmi - caffè latte\", \"aprilia\", \"aprilia rsa 125\", \"17\", \"0\", \"0\", \"0\", \"1\", \"141\", \"8th\"],[\"2009\", \"125cc\", \"ajo interwetten\", \"derbi\", \"derbi rsa 125\", \"16\", \"0\", \"3\", \"1\", \"2\", \"130\", \"6th\"],[\"2010\", \"125cc\", \"ajo motorsport\", \"derbi\", \"derbi rs 125 r\", \"17\", \"0\", \"2\", \"1\", \"2\", \"143\", \"7th\"],[\"2011\", \"125cc\", \"intact - racing team germany\", \"aprilia\", \"aprilia rsa 125\", \"17\", \"2\", \"6\", \"1\", \"2\", \"225\", \"4th\"],[\"2012\", \"moto3\", \"red bull ktm ajo\", \"ktm\", \"ktm m32\", \"17\", \"5\", \"15\", \"7\", \"4\", \"325\", \"1st\"],[\"2013\", \"moto2\", \"dynavolt intact gp\", \"kalex\", \"kalex moto2\", \"16\", \"0\", \"0\", \"0\", \"0\", \"19\", \"20th\"]]\nQuestion = Is it true that in 2005 , 2006 , 2007 , 2008 , and 2013 , there were zero poles?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    poles = get_column_by_name(table_data, \"poles\")\n    years = [\"2005\", \"2006\", \"2007\", \"2008\", \"2013\"]\n    answer = True\n    for season, pole in zip(seasons, poles):\n        if season in years:\n            if not equal_to(pole, \"0\"):\n                answer = False\n                break\n    return answer\n\n### END"}
{"id": "7f5d6755-cc90-4a24-850c-3f91e8c1c9ef", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1926 grand prix season\ntable_data = [[\"name\", \"circuit\", \"date\", \"winning drivers\", \"winning constructor\", \"report\"],[\"indianapolis 500\", \"indianapolis\", \"31 may\", \"frank lockhart\", \"miller\", \"report\"],[\"french grand prix\", \"miramas\", \"27 june\", \"jules goux\", \"bugatti\", \"report\"],[\"san sebastián grand prix / european grand prix\", \"lasarte\", \"18 july\", \"jules goux\", \"bugatti\", \"report\"],[\"british grand prix\", \"brooklands\", \"7 august\", \"robert sénéchal louis wagner\", \"delage\", \"report\"],[\"italian grand prix\", \"monza\", \"5 september\", \"louis charavel\", \"bugatti\", \"report\"]]\nQuestion = Is it true that french grand prix is on date 27th june?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    dates = get_column_by_name(table_data, \"date\")\n    for name, date in zip(names, dates):\n        if name.lower() == \"french grand prix\":\n            answer = equal_to(date, \"27 june\")\n            break \n    return answer\n\n### END"}
{"id": "f6e6835e-6501-4374-9412-c5e8ec37e1d2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = heartland collegiate athletic conference\ntable_data = [[\"institution\", \"location\", \"nickname\", \"founded\", \"type\", \"enrollment\", \"joined\"],[\"anderson university\", \"anderson , indiana\", \"ravens\", \"1917\", \"private / church of god\", \"3065\", \"1987\"],[\"bluffton university\", \"bluffton , ohio\", \"beavers\", \"1899\", \"private / mennonite\", \"1191\", \"1998\"],[\"college of mount st joseph\", \"cincinnati , ohio\", \"lions\", \"1920\", \"private / catholic\", \"2259\", \"1998\"],[\"defiance college\", \"defiance , ohio\", \"yellow jackets\", \"1850\", \"private / united church of christ\", \"1000\", \"2000\"],[\"earlham college\", \"richmond , indiana\", \"quakers\", \"1847\", \"private / quaker\", \"1194\", \"2010\"],[\"franklin college\", \"franklin , indiana\", \"grizzlies\", \"1834\", \"private / baptist\", \"1000\", \"1987\"],[\"hanover college\", \"hanover , indiana\", \"panthers\", \"1827\", \"private / presbyterian\", \"1062\", \"1987\"],[\"manchester university\", \"north manchester , indiana\", \"spartans\", \"1860\", \"private / church of the brethren\", \"1250\", \"1987\"],[\"rose - hulman institute of technology\", \"terre haute , indiana\", \"fightin' engineers\", \"1874\", \"private / non - sectarian\", \"1970\", \"1988 1\"]]\nQuestion = Is it true that rose - hulman institute of technology was founded in 1874?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    institutions = get_column_by_name(table_data, \"institution\")\n    founded_years = get_column_by_name(table_data, \"founded\")\n    for institution, founded_year in zip(institutions, founded_years):\n        if institution.lower() == \"rose - hulman institute of technology\":\n            answer = equal_to(founded_year, \"1874\")\n            break \n    return answer\n\n### END"}
{"id": "a871d086-ec64-4dd2-ad71-c397020913e4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"series number\",\"number of episodes\",\"original air date\",\"dvd region 2 release date\",\"dvd region 1 release date\"],[\"1\",\"6\",\"1973\",\"2 september 2002\",\"tba\"],[\"2\",\"7\",\"1975\",\"2 september 2002\",\"tba\"],[\"3\",\"7\",\"1976\",\"26 july 2004\",\"11 march 2008\"],[\"4\",\"7\",\"1977\",\"26 july 2004\",\"9 september 2008\"],[\"5\",\"7\",\"1979\",\"5 march 2007\",\"6 september 2009\"],[\"6\",\"7\",\"1982\",\"5 march 2007\",\"27 april 2010\"],[\"7\",\"6\",\"1983\",\"3 march 2008\",\"27 april 2010\"],[\"8\",\"6\",\"1985\",\"3 march 2008\",\"9 july 2010\"],[\"9\",\"12\",\"1987\",\"5 may 2008\",\"18 january 2011\"],[\"10\",\"6\",\"1988\",\"22 september 2008\",\"12 april 2011\"],[\"11\",\"7\",\"1989\",\"22 september 2008\",\"12 april 2011\"],[\"12\",\"10\",\"1990\",\"26 december 2008\",\"12 july 2011\"],[\"13\",\"6\",\"1991\",\"26 december 2008\",\"21 february 2012\"],[\"14\",\"9\",\"1992\",\"26 october 2009\",\"17 april 2012\"],[\"15\",\"9\",\"1993\",\"26 october 2009\",\"24 july 2012\"],[\"16\",\"8\",\"1995\",\"27 december 2010\",\"tba\"],[\"17\",\"10\",\"1995\",\"27 december 2010\",\"15 june 2004\"],[\"18\",\"10\",\"1997\",\"7 february 2011\",\"15 january 2013\"],[\"19\",\"10\",\"1998\",\"7 february 2011\",\"16 april 2013\"],[\"20\",\"10\",\"1999\",\"26 march 2012\",\"9 july 2013\"],[\"21\",\"10\",\"2000\",\"26 march 2012\",\"15 october 2013\"],[\"22\",\"10\",\"2001\",\"23 april 2012\",\"14 january 2014\"],[\"23\",\"10\",\"2002\",\"23 april 2012\",\"tba\"],[\"24\",\"10\",\"2003\",\"tba\",\"tba\"],[\"25\",\"10\",\"2004\",\"tba\",\"tba\"],[\"26\",\"10\",\"2005\",\"tba\",\"tba\"],[\"27\",\"9\",\"2006\",\"tba\",\"tba\"],[\"28\",\"10\",\"2007\",\"tba\",\"tba\"],[\"29\",\"11\",\"2008\",\"tba\",\"tba\"],[\"30\",\"10\",\"2009\",\"tba\",\"tba\"],[\"31\",\"6\",\"2010\",\"tba\",\"tba\"]]\nQuestion = Is it true that the sum of the number of episodes that originally aired before 1991 with a series number smaller than 21 and a dvd region 2 release date of 26 march 2012 is 10.0?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef parse_year(date_str):\n    return int(date_str.split()[-1])\n\ndef smaller(num1, num2):\n    return num1 < num2\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    series_numbers = get_column_by_name(table_data, \"series number\")\n    number_of_episodes = get_column_by_name(table_data, \"number of episodes\")\n    original_air_dates = get_column_by_name(table_data, \"original air date\")\n    dvd_region_2_release_dates = get_column_by_name(table_data, \"dvd region 2 release date\")\n    sum_of_episodes = 0\n    for series_number, number_of_episode, original_air_date, dvd_region_2_release_date in zip(series_numbers, number_of_episodes, original_air_dates, dvd_region_2_release_dates):\n        if smaller(int(series_number), 21) and parse_year(original_air_date) < 1991 and dvd_region_2_release_date == \"26 march 2012\":\n            sum_of_episodes += int(number_of_episode)\n    answer = equal_to(sum_of_episodes, 10.0)\n    return answer\n\n### END"}
{"id": "30fa1e08-a294-4b95-ac98-56611ca8f237", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1935 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"16.18 (114)\", \"north melbourne\", \"6.10 (46)\", \"glenferrie oval\", \"4000\", \"13 july 1935\"],[\"fitzroy\", \"9.10 (64)\", \"st kilda\", \"12.12 (84)\", \"brunswick street oval\", \"15000\", \"13 july 1935\"],[\"essendon\", \"10.14 (74)\", \"melbourne\", \"12.21 (93)\", \"windy hill\", \"8000\", \"13 july 1935\"],[\"richmond\", \"16.10 (106)\", \"footscray\", \"3.11 (29)\", \"punt road oval\", \"16000\", \"13 july 1935\"],[\"south melbourne\", \"18.16 (124)\", \"collingwood\", \"10.11 (71)\", \"lake oval\", \"31000\", \"13 july 1935\"],[\"geelong\", \"6.7 (43)\", \"carlton\", \"11.10 (76)\", \"corio oval\", \"14500\", \"13 july 1935\"]]\nQuestion = Is it true that when the home team scored 6.7 (43) , the away team 's score was 3.11 (29)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    away_team_scores = get_column_by_name(table_data, \"away team score\")\n    for home_team_score, away_team_score in zip(home_team_scores, away_team_scores):\n        if home_team_score == \"6.7 (43)\":\n            answer = equal_to(away_team_score, \"3.11 (29)\")\n            break \n    return answer\n\n### END"}
{"id": "702fe418-630a-47e8-9be9-4fcd36b577af", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"class\", \"part 1\", \"part 2\", \"part 3\", \"part 4\", \"verb meaning\"],[\"1\", \"rīdan\", \"rād\", \"ridon\", \"riden\", \"to ride\"],[\"2a\", \"frēosan\", \"frēas\", \"fruron\", \"froren\", \"to freeze\"],[\"2b\", \"lūcan\", \"lēac\", \"lucon\", \"locen\", \"to lock\"],[\"3a\", \"bindan\", \"band\", \"bundon\", \"bunden\", \"to bind\"],[\"3b\", \"weorþan\", \"wearþ\", \"wurdon\", \"worden\", \"to become\"],[\"4\", \"beran\", \"bær\", \"bǣron\", \"boren\", \"to bear\"],[\"5\", \"lesan\", \"læs\", \"lǣron\", \"leren\", \"to gather\"],[\"6\", \"alan\", \"ōl\", \"ōlon\", \"alen\", \"to nourish , to grow\"],[\"7a\", \"hātan\", \"hēt\", \"hēton\", \"hāten\", \"to call , to be called\"],[\"7b\", \"hlēapan\", \"hlēop\", \"hlēppon\", \"hlēapen\", \"to leap\"],[\"7c\", \"healdan\", \"hēold\", \"hēoldon\", \"healden\", \"to hold\"],[\"7d\", \"rǣdan\", \"rēd\", \"rēdon\", \"rǣden\", \"to advise , to interpret\"]]\nQuestion = Is it true that beran is the 3rd part of the verb in class 5?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    classes = get_column_by_name(table_data, \"class\")\n    part_3s = get_column_by_name(table_data, \"part 3\")\n    for class_, part_3 in zip(classes, part_3s):\n        if class_.lower() == \"5\":\n            answer = equal_to(part_3, \"beran\")\n            break \n    return answer\n\n### END"}
{"id": "e3ecce48-118b-4c55-a481-e7d0358a2c74", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = cultural interest fraternities and sororities\ntable_data = [[\"letters\", \"organization\", \"nickname\", \"founding date\", \"founding university\", \"type\"],[\"δλφ\", \"delta lambda phi\", \"dlp , deltas' , or lambda men\", \"1986 - 10 - 15\", \"washington , dc\", \"fraternity\"],[\"κψκ\", \"kappa psi kappa\", \"canes , k - psis , diamonds , or angels\", \"2001 - 08 - 17\", \"tallahassee , florida\", \"fraternity\"],[\"οεπ\", \"omicron epsilon pi\", \"the epps\", \"2000 - 12 - 07\", \"tallahassee , florida\", \"sorority\"],[\"γρλ\", \"gamma rho lambda 1\", \"grl\", \"2003 - 08 - 25\", \"tempe , arizona\", \"sorority\"],[\"αλζ\", \"alpha lambda zeta\", \"the regal alphas\", \"2006 - 01 - 09\", \"houston , texas and atlanta , georgia\", \"fraternity\"],[\"καλ\", \"kappa alpha lambda\", \"the kappas\", \"2003 - 10 - 19\", \"clark atlanta university\", \"sorority\"],[\"φαν\", \"phi alpha nu\", \"phi - nomenal gentlewomen\", \"2006 - 07 - 30\", \"charlotte , nc\", \"fraternity\"]]\nQuestion = Is it true that the founding date for kappa psi kappa , with the nickname canes , k - psis , diamonds , or angels is 2001 - 08 - 17?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    organizations = get_column_by_name(table_data, \"organization\")\n    nicknames = get_column_by_name(table_data, \"nickname\")\n    founding_dates = get_column_by_name(table_data, \"founding date\")\n    for organization, nickname, founding_date in zip(organizations, nicknames, founding_dates):\n        if organization.lower() == \"kappa psi kappa\" and nickname.lower() == \"canes , k - psis , diamonds , or angels\":\n            answer = equal_to(founding_date, \"2001 - 08 - 17\")\n            break \n    return answer\n\n### END"}
{"id": "6c83b990-0841-4e2a-bd29-7b77d38d2679", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = kansas jayhawk community college conference\ntable_data = [[\"institution\", \"main campus location\", \"founded\", \"mascot\", \"school colors\"],[\"allen community college\", \"iola\", \"1923\", \"red devils\", \"scarlet & black\"],[\"coffeyville community college\", \"coffeyville\", \"1923\", \"red ravens\", \"red & white\"],[\"cowley college\", \"arkansas city\", \"1922\", \"tigers\", \"orange & black\"],[\"fort scott community college\", \"fort scott\", \"1919\", \"greyhounds\", \"maroon & grey\"],[\"highland community college\", \"highland\", \"1858\", \"scotties\", \"navy & gold\"],[\"independence community college\", \"independence\", \"1925\", \"pirates\", \"navy blue & vegas gold\"],[\"johnson county community college\", \"overland park\", \"1967\", \"cavaliers\", \"maroon & gold\"],[\"kansas city kansas community college\", \"kansas city\", \"1923\", \"blue devils\", \"blue , red & white\"],[\"labette community college\", \"parsons\", \"1923\", \"cardinals\", \"red & white\"],[\"neosho county community college\", \"chanute\", \"1936\", \"panthers\", \"orange & black\"]]\nQuestion = Is it true that the college in overland park was founded in 1923?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"main campus location\")\n    founded_years = get_column_by_name(table_data, \"founded\")\n    for location, founded_year in zip(locations, founded_years):\n        if location.lower() == \"overland park\":\n            answer = equal_to(founded_year, \"1923\")\n            break \n    return answer\n\n### END"}
{"id": "ff496cb6-6368-41e2-8519-fe7df6ef8800", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1980 - 81 philadelphia flyers season\ntable_data = [[\"game\", \"december\", \"opponent\", \"score\", \"record\", \"points\"],[\"27\", \"4\", \"chicago black hawks\", \"7 - 5\", \"18 - 5 - 4\", \"40\"],[\"28\", \"6\", \"detroit red wings\", \"2 - 4\", \"18 - 6 - 4\", \"40\"],[\"29\", \"7\", \"colorado rockies\", \"4 - 2\", \"19 - 6 - 4\", \"42\"],[\"30\", \"10\", \"chicago black hawks\", \"2 - 2\", \"19 - 6 - 5\", \"43\"],[\"31\", \"13\", \"pittsburgh penguins\", \"6 - 5\", \"20 - 6 - 5\", \"45\"],[\"32\", \"14\", \"st louis blues\", \"5 - 4\", \"21 - 6 - 5\", \"47\"],[\"33\", \"18\", \"colorado rockies\", \"2 - 0\", \"22 - 6 - 5\", \"49\"],[\"34\", \"20\", \"washington capitals\", \"5 - 2\", \"23 - 6 - 5\", \"51\"],[\"35\", \"21\", \"washington capitals\", \"0 - 6\", \"23 - 7 - 5\", \"51\"],[\"36\", \"27\", \"calgary flames\", \"1 - 2\", \"23 - 8 - 5\", \"51\"],[\"37\", \"28\", \"edmonton oilers\", \"2 - 1\", \"24 - 8 - 5\", \"53\"],[\"38\", \"30\", \"minnesota north stars\", \"5 - 6\", \"24 - 9 - 5\", \"53\"]]\nQuestion = Is it true that the st louis blues had a record of 21 - 6 - 5 as of dec 14?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"december\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    records = get_column_by_name(table_data, \"record\")\n    for date, opponent, record in zip(dates, opponents, records):\n        if date == \"14\" and opponent.lower() == \"st louis blues\":\n            answer = equal_to(record, \"21 - 6 - 5\")\n            break \n    return answer\n\n### END"}
{"id": "f217f00e-202d-4fea-9f9c-3e9573221eee", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = marsel ilhan\ntable_data = [[\"outcome\", \"date\", \"tournament\", \"surface\", \"opponent\", \"score\"],[\"runner - up\", \"august 20 , 2007\", \"karshi\", \"hard\", \"denis istomin\", \"1 - 6 , 4 - 6\"],[\"winner\", \"july 13 , 2008\", \"israel open\", \"hard\", \"ivo klec\", \"6 - 4 , 6 - 4\"],[\"runner - up\", \"may 17 , 2009\", \"izmir cup\", \"hard\", \"andrea stoppini\", \"6 - 7 , 2 - 6\"],[\"winner\", \"september 20 , 2010\", \"banja luka\", \"clay\", \"pere riba\", \"6 - 0 , 7 - 6 (7 - 4)\"],[\"runner - up\", \"september 26 , 2010\", \"izmir cup\", \"hard\", \"somdev devvarman\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 10 , 2011\", \"scheveningen\", \"clay\", \"steve darcis\", \"3 - 6 , 6 - 4 , 2 - 6\"],[\"runner - up\", \"september 25 , 2011\", \"izmir cup\", \"hard\", \"lukáš lacko\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 29 , 2012\", \"president 's cup (tennis)\", \"hard\", \"evgeny donskoy\", \"3 - 6 , 4 - 6\"]]\nQuestion = Is it true that in july 13th , 2008 , the israel open tournament was held?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    tournaments = get_column_by_name(table_data, \"tournament\")\n    answer = False\n    for date, tournament in zip(dates, tournaments):\n        if \"july 13 , 2008\" in date.lower() and \"israel open\" in tournament.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "5212ce15-1438-410f-a7e4-562aa1833afc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = melanie oudin\ntable_data = [[\"tournament\", \"2007\", \"2010\", \"2011\", \"2012\", \"2013\"],[\"australian open\", \"-\", \"1r\", \"1r\", \"-\", \"-\"],[\"french open\", \"-\", \"2r\", \"1r\", \"-\", \"1r\"],[\"wimbledon\", \"-\", \"1r\", \"1r\", \"-\", \"1r\"],[\"us open\", \"1r\", \"2r\", \"1r\", \"1r\", \"2r\"],[\"win - loss\", \"0 - 1\", \"2 - 4\", \"0 - 4\", \"0 - 1\", \"1 - 3\"]]\nQuestion = Is it true that 1r is the 2007 result when the 2010 result was 2r , and the 2011 result was 2r , at us open?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    tournaments = get_column_by_name(table_data, \"tournament\")\n    results_2007 = get_column_by_name(table_data, \"2007\")\n    results_2010 = get_column_by_name(table_data, \"2010\")\n    results_2011 = get_column_by_name(table_data, \"2011\")\n    for tournament, result_2007, result_2010, result_2011 in zip(tournaments, results_2007, results_2010, results_2011):\n        if tournament.lower() == \"us open\":\n            answer = equal_to(result_2007, \"1r\") and equal_to(result_2010, \"2r\") and equal_to(result_2011, \"2r\")\n            break \n    return answer\n\n### END"}
{"id": "36ac2ab4-47a8-44e0-9cee-26819dec2713", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = malayalam calendar\ntable_data = [[\"months in malayalam era\", \"in malayalam\", \"gregorian calendar\", \"tamil calendar\", \"saka era\", \"sign of zodiac\"],[\"chingam\", \"ചിങ്ങം\", \"august - september\", \"aavani\", \"sravan - bhadrapada\", \"leo\"],[\"kanni\", \"കന്നി\", \"september - october\", \"purattasi\", \"bhadrapada - asvina\", \"virgo\"],[\"tulam\", \"തുലാം\", \"october - november\", \"aippasi\", \"asvina - kartika\", \"libra\"],[\"vrscikam\", \"വൃശ്ചികം\", \"november - december\", \"karthigai\", \"kartika - agrahayana\", \"scorpio\"],[\"dhanu\", \"ധനു\", \"december - january\", \"margazhi\", \"agrahayana - pausa\", \"sagittarius\"],[\"makaram\", \"മകരം\", \"january - february\", \"thai\", \"pausa - magha\", \"capricon\"],[\"kumbham\", \"കുംഭം\", \"february - march\", \"maasi\", \"magha - phalguna\", \"aquarius\"],[\"minam\", \"മീനം\", \"march - april\", \"panguni\", \"phalguna - chaitra\", \"pisces\"],[\"medam\", \"മേടം\", \"april - may\", \"chithirai\", \"chaitra - vaisakha\", \"aries\"],[\"edavam (idavam)\", \"ഇടവം\", \"may - june\", \"vaikasi\", \"vaisakha - jyaistha\", \"taurus\"],[\"mithunam\", \"മിഥുനം\", \"june - july\", \"aani\", \"jyaistha - asada\", \"gemini\"],[\"karkadakam\", \"കര്‍ക്കടകം\", \"july - august\", \"aadi\", \"asada - sravana\", \"cancer\"]]\nQuestion = Is it true that in malayalam , വൃശ്ചികം is implied by the kartika - agrahayana in the saka era?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    malayalam = get_column_by_name(table_data, \"in malayalam\")\n    saka_era = get_column_by_name(table_data, \"saka era\")\n    for mal, saka in zip(malayalam, saka_era):\n        if mal == \"വൃശ്ചികം\":\n            answer = equal_to(saka, \"kartika - agrahayana\")\n            break \n    return answer\n\n### END"}
{"id": "2b2c43a6-f318-411d-b109-3795cd1f9be9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2002 french motorcycle grand prix\ntable_data = [[\"rider\", \"manufacturer\", \"laps\", \"time / retired\", \"grid\"],[\"valentino rossi\", \"honda\", \"21\", \"34:22.335\", \"1\"],[\"tohru ukawa\", \"honda\", \"21\", \"+ 0.217\", \"4\"],[\"max biaggi\", \"yamaha\", \"21\", \"+ 0.604\", \"3\"],[\"norifumi abe\", \"yamaha\", \"21\", \"+ 1.701\", \"11\"],[\"kenny roberts , jr\", \"suzuki\", \"21\", \"+ 8.464\", \"9\"],[\"nobuatsu aoki\", \"proton kr\", \"21\", \"+ 10.212\", \"10\"],[\"loris capirossi\", \"honda\", \"21\", \"+ 12.437\", \"7\"],[\"alex barros\", \"honda\", \"21\", \"+ 15.231\", \"15\"],[\"régis laconi\", \"aprilia\", \"21\", \"+ 17.155\", \"14\"],[\"jeremy mcwilliams\", \"proton kr\", \"21\", \"+ 21.847\", \"6\"],[\"john hopkins\", \"yamaha\", \"21\", \"+ 25.121\", \"19\"],[\"sete gibernau\", \"suzuki\", \"21\", \"+ 25.919\", \"16\"],[\"shinya nakano\", \"yamaha\", \"21\", \"+ 26.227\", \"13\"],[\"jean - michel bayle\", \"yamaha\", \"21\", \"+ 27.011\", \"18\"],[\"jurgen vd goorbergh\", \"honda\", \"21\", \"+ 30.342\", \"17\"],[\"josé luis cardoso\", \"yamaha\", \"21\", \"+ 36.574\", \"20\"],[\"daijiro kato\", \"honda\", \"11\", \"accident\", \"5\"],[\"olivier jacque\", \"yamaha\", \"10\", \"retirement\", \"12\"],[\"tetsuya harada\", \"honda\", \"10\", \"retirement\", \"8\"],[\"carlos checa\", \"yamaha\", \"8\", \"accident\", \"2\"]]\nQuestion = Is it true that the time on grid 1 was 34:22.335?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    times = get_column_by_name(table_data, \"time / retired\")\n    grids = get_column_by_name(table_data, \"grid\")\n    for time, grid in zip(times, grids):\n        if grid == \"1\":\n            answer = equal_to(time, \"34:22.335\")\n            break \n    return answer\n\n### END"}
{"id": "2accf8e8-c012-4b72-ba3d-09b546772a7f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1961 british saloon car championship season\ntable_data = [[\"round\", \"circuit\", \"date\", \"class a winner\", \"class b winner\", \"class c winner\", \"class d winner\"],[\"1\", \"snetterton motor racing circuit , norfolk\", \"25 march\", \"george 'doc' shepherd\", \"alan hutcheson\", \"none (no entries)\", \"gawaine baillie\"],[\"2\", \"goodwood circuit , west sussex\", \"3 april\", \"john whitmore\", \"bill blydenstein\", \"ellis cuff - miller\", \"mike parkes\"],[\"3\", \"aintree motor racing circuit , liverpool\", \"22 april\", \"john whitmore\", \"alan hutcheson\", \"chris kerrison\", \"roy salvadori\"],[\"4\", \"silverstone circuit , northamptonshire\", \"6 may\", \"bill aston\", \"peter harper\", \"chris kerrison\", \"graham hill\"],[\"5\", \"crystal palace , london\", \"22 may\", \"george 'doc' shepherd\", \"bill blydenstein\", \"none (no entries)\", \"roy salvadori\"],[\"6\", \"silverstone circuit , northamptonshire\", \"8 july\", \"herbert linge\", \"ellis cuff - miller\", \"chris kerrison\", \"mike parkes\"],[\"7\", \"brands hatch , kent\", \"7 august\", \"frank hamlin\", \"alan hutcheson\", \"chris kerrison\", \"mike parkes\"],[\"8\", \"oulton park , cheshire\", \"23 september\", \"john whitmore\", \"peter harper\", \"none (no entries)\", \"roy salvadori\"]]\nQuestion = Is it true that george 'doc' shepherd was the class a winner at the silverstone circuit , northamptonshire?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    circuits = get_column_by_name(table_data, \"circuit\")\n    class_a_winners = get_column_by_name(table_data, \"class a winner\")\n    answer = False\n    for circuit, winner in zip(circuits, class_a_winners):\n        if \"silverstone circuit , northamptonshire\" in circuit.lower() and \"george 'doc' shepherd\" in winner.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "af5a5400-3dfa-4fb7-96b5-8e09d42c0e30", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1996 - 97 montreal canadiens season\ntable_data = [[\"round\", \"player\", \"position\", \"nationality\", \"college / junior / club team\"],[\"1\", \"matt higgins\", \"center\", \"canada\", \"moose jaw warriors (whl)\"],[\"2\", \"mathieu garon\", \"goalie\", \"canada\", \"victoriaville tigres (qmjhl)\"],[\"3\", \"arron asham\", \"right wing\", \"canada\", \"red deer rebels (whl)\"],[\"4\", \"kim staal\", \"left wing\", \"denmark\", \"malmã if (sweden)\"],[\"4\", \"etienne drapeau\", \"center\", \"canada\", \"beauport harfangs (qmjhl)\"],[\"5\", \"daniel archambault\", \"defence\", \"canada\", \"val - d'or foreurs (qmjhl)\"],[\"6\", \"brett clark\", \"defenceman\", \"canada\", \"university of maine (ncaa)\"],[\"7\", \"timo vertala\", \"left wing\", \"finland\", \"jyp (finland)\"],[\"8\", \"mattia baldi\", \"left wing\", \"switzerland\", \"ambri - piotta (swiss)\"],[\"9\", \"michel tremblay\", \"left wing\", \"canada\", \"shawinigan cataractes (qmjhl)\"]]\nQuestion = Is it true that goalie is the position for round 2?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    positions = get_column_by_name(table_data, \"position\")\n    for round, position in zip(rounds, positions):\n        if round == \"2\":\n            answer = equal_to(position, \"goalie\")\n            break \n    return answer\n\n### END"}
{"id": "f2fc1f3c-ea56-4fab-b21a-ca65dd10e1ba", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of flashpoint episodes\ntable_data = [[\"no\", \"-\", \"title\", \"directed by\", \"written by\", \"canadian air date\", \"us air date\", \"production code\", \"canadian viewers (million)\"],[\"45\", \"1\", \"personal effects (part 2)\", \"kelly makin\", \"mark ellis & stephanie morgenstern\", \"july 8 , 2011\", \"july 8 , 2011\", \"401\", \"1.369\"],[\"46\", \"2\", \"good cop\", \"john fawcett\", \"michael maclennan\", \"july 15 , 2011\", \"july 15 , 2011\", \"402\", \"1.508\"],[\"47\", \"3\", \"run , jaime , run\", \"kelly makin\", \"ian weir\", \"july 22 , 2011\", \"july 22 , 2011\", \"403\", \"1.537\"],[\"48\", \"4\", \"through a glass darkly\", \"john fawcett\", \"andrew wreggitt\", \"july 29 , 2011\", \"july 29 , 2011\", \"404\", \"1.430\"],[\"49\", \"5\", \"the better man\", \"david frazee\", \"michael maclennan\", \"august 5 , 2011\", \"august 5 , 2011\", \"405\", \"1.254\"],[\"50\", \"6\", \"a day in the life\", \"jim donovan\", \"mark ellis & stephanie morgenstern\", \"august 12 , 2011\", \"august 12 , 2011\", \"406\", \"1.406\"],[\"51\", \"7\", \"shockwave\", \"david frazee\", \"larry bambrick\", \"august 19 , 2011\", \"august 19 , 2011\", \"407\", \"1.313\"],[\"52\", \"8\", \"grounded\", \"david frazee\", \"karen walton\", \"september 19 , 2011\", \"october 18 , 2011\", \"412\", \"1.536\"],[\"53\", \"9\", \"the war within\", \"david frazee\", \"daniel godwin & michael maclennan\", \"september 27 , 2011\", \"december 13 , 2011\", \"408\", \"1.349\"],[\"54\", \"10\", \"the cost of doing business\", \"david frazee\", \"larry bambrick\", \"october 4 , 2011\", \"october 25 , 2011\", \"409\", \"1.309\"],[\"55\", \"11\", \"wild card\", \"brett sullivan\", \"karen walton\", \"october 11 , 2011\", \"november 1 , 2011\", \"410\", \"1.263\"],[\"56\", \"12\", \"a new life\", \"kelly makin\", \"adam barken\", \"november 1 , 2011\", \"november 8 , 2011\", \"411\", \"1.293\"],[\"57\", \"13\", \"a call to arms\", \"ã‰rik canuel\", \"alex levine\", \"november 8 , 2011\", \"november 22 , 2011\", \"413\", \"1.215\"],[\"58\", \"14\", \"day game\", \"kelly makin\", \"aubrey nealon\", \"november 15 , 2011\", \"november 29 , 2011\", \"415\", \"1.191\"],[\"59\", \"15\", \"blue on blue\", \"stefan pleszczynski\", \"adam barken\", \"november 22 , 2011\", \"december 6 , 2011\", \"416\", \"1.229\"],[\"60\", \"16\", \"team player\", \"kelly makin\", \"michael maclennan\", \"november 28 , 2011\", \"january 10 , 2012\", \"414\", \"1.452\"],[\"61\", \"17\", \"priority of life\", \"david frazee\", \"mark ellis , stephanie morgenstern & alex levine\", \"december 6 , 2011\", \"january 17 , 2012\", \"417\", \"1.317\"]]\nQuestion = Is it true that john fawcett directed the episode that aired on july 29 , 2011?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    directors = get_column_by_name(table_data, \"directed by\")\n    air_dates = get_column_by_name(table_data, \"canadian air date\")\n    answer = False\n    for director, air_date in zip(directors, air_dates):\n        if \"john fawcett\" in director.lower() and \"july 29 , 2011\" in air_date.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "0b18ab69-4db7-4199-90ee-ab60625a3794", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = american dad! (season 1)\ntable_data = [[\"no in series\", \"title\", \"directed by\", \"written by\", \"original air date\", \"production code\", \"us viewers (millions)\"],[\"1\", \"pilot\", \"ron hughart\", \"seth macfarlane , mike barker & matt weitzman\", \"february 6 , 2005\", \"1ajn01\", \"15.10\"],[\"2\", \"threat levels\", \"brent woods\", \"david zuckerman\", \"may 1 , 2005\", \"1ajn02\", \"9.47\"],[\"3\", \"stan knows best\", \"pam cooke\", \"mike barker & matt weitzman\", \"may 8 , 2005\", \"1ajn03\", \"8.23\"],[\"4\", \"francine 's flashback\", \"caleb meurer & brent woods\", \"rick wiener & kenny schwartz\", \"may 15 , 2005\", \"1ajn05\", \"7.84\"],[\"5\", \"roger codger\", \"albert calleros\", \"dan vebber\", \"june 5 , 2005\", \"1ajn04\", \"6.09\"],[\"6\", \"homeland insecurity\", \"rodney clouden\", \"neal boushell & sam o'neal\", \"june 12 , 2005\", \"1ajn06\", \"6.85\"]]\nQuestion = Is it true that on june 5 , 2005 , 6.09 million people in the us saw the original airing of an episode of the show?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    air_dates = get_column_by_name(table_data, \"original air date\")\n    viewers = get_column_by_name(table_data, \"us viewers (millions)\")\n    for air_date, viewer in zip(air_dates, viewers):\n        if air_date.lower() == \"june 5 , 2005\":\n            answer = equal_to(viewer, \"6.09\")\n            break \n    return answer\n\n### END"}
{"id": "fdc350bf-5af3-48fa-b203-320129522380", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = orlando magic all - time roster\ntable_data = [[\"player\",\"nationality\",\"position\",\"years in orlando\",\"school / club team\"],[\"matt barnes\",\"united states\",\"guard - forward\",\"2009 - 2010\",\"ucla\"],[\"andre barrett\",\"united states\",\"guard\",\"2005\",\"seton hall\"],[\"brandon bass\",\"united states\",\"forward\",\"2009 - 2011\",\"louisiana state\"],[\"tony battie\",\"united states\",\"forward - center\",\"2004 - 2009\",\"texas tech\"],[\"david benoit\",\"united states\",\"forward\",\"1998\",\"alabama\"],[\"keith bogans\",\"united states\",\"guard\",\"2003 - 2004\",\"kentucky\"],[\"keith bogans\",\"united states\",\"guard\",\"2006 - 2009\",\"kentucky\"],[\"anthony bonner\",\"united states\",\"forward\",\"1995 - 1996\",\"st louis\"],[\"anthony bowie\",\"united states\",\"guard\",\"1991 - 1996\",\"oklahoma\"],[\"earl boykins\",\"united states\",\"guard\",\"1999\",\"eastern michigan\"],[\"michael bradley\",\"united states\",\"forward\",\"2004 - 2005\",\"villanova\"],[\"dee brown\",\"united states\",\"guard\",\"2000 - 2002\",\"jacksonville\"],[\"jud buechler\",\"united states\",\"guard - forward\",\"2001 - 2002\",\"arizona\"],[\"pat burke\",\"ireland\",\"center\",\"2002 - 2003\",\"auburn\"]]\nQuestion = Is it true that tony battie from texas tech was in orlando from 2004 to 2009?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    years_in_orlando = get_column_by_name(table_data, \"years in orlando\")\n    schools = get_column_by_name(table_data, \"school / club team\")\n    for player, year, school in zip(players, years_in_orlando, schools):\n        if player.lower() == \"tony battie\" and school.lower() == \"texas tech\":\n            answer = equal_to(year, \"2004 - 2009\")\n            break \n    return answer\n\n### END"}
{"id": "ebf30899-c63a-48a5-8f26-e5b3cc4deda5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mike hailwood\ntable_data = [[\"year\", \"entrant\", \"chassis\", \"engine\", \"pts\"],[\"1963\", \"reg parnell racing\", \"lotus 24\", \"climax\", \"0\"],[\"1963\", \"reg parnell racing\", \"lola mk4\", \"climax\", \"0\"],[\"1964\", \"reg parnell racing\", \"lotus 25\", \"brm\", \"1\"],[\"1965\", \"reg parnell racing\", \"lotus 25\", \"brm\", \"0\"],[\"1971\", \"team surtees\", \"surtees ts9\", \"ford\", \"3\"],[\"1972\", \"brooke bond oxo team surtees\", \"surtees ts9b\", \"ford\", \"13\"],[\"1973\", \"brooke bond oxo team surtees\", \"surtees ts14a\", \"ford\", \"0\"],[\"1974\", \"yardley team mclaren\", \"mclaren m23\", \"ford\", \"12\"]]\nQuestion = Is it true that in 1972 , entrant brooke bond oxo team surtees had 13 points with a ford engine?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    entrants = get_column_by_name(table_data, \"entrant\")\n    engines = get_column_by_name(table_data, \"engine\")\n    points = get_column_by_name(table_data, \"pts\")\n    for year, entrant, engine, point in zip(years, entrants, engines, points):\n        if year == \"1972\" and entrant.lower() == \"brooke bond oxo team surtees\" and engine.lower() == \"ford\":\n            answer = equal_to(point, \"13\")\n            break \n    return answer\n\n### END"}
{"id": "adb7bc25-9cb5-48a8-9807-dc90cdbc3eed", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of largest airlines in central america & the caribbean\ntable_data = [[\"rank\", \"airline\", \"country\", \"fleet size\", \"remarks\"],[\"1\", \"caribbean airlines\", \"trinidad and tobago\", \"22\", \"largest airline in the caribbean\"],[\"2\", \"liat\", \"antigua and barbuda\", \"17\", \"second largest airline in the caribbean\"],[\"3\", \"cubana de aviaciã cubicn\", \"cuba\", \"14\", \"operational since 1929\"],[\"4\", \"inselair\", \"curacao\", \"12\", \"operational since 2006\"],[\"5\", \"dutch antilles express\", \"curacao\", \"4\", \"curacao second national carrier\"],[\"6\", \"air jamaica\", \"trinidad and tobago\", \"5\", \"parent company is caribbean airlines\"],[\"7\", \"tiara air\", \"aruba\", \"3\", \"aruba 's national airline\"]]\nQuestion = Is it true that the remark on airline of dutch antilles express with fleet size over 4 is curacao second national carrier?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    airlines = get_column_by_name(table_data, \"airline\")\n    fleet_sizes = get_column_by_name(table_data, \"fleet size\")\n    remarks = get_column_by_name(table_data, \"remarks\")\n    for airline, fleet_size, remark in zip(airlines, fleet_sizes, remarks):\n        if airline.lower() == \"dutch antilles express\":\n            answer = equal_to(remark, \"curacao second national carrier\") and greater(int(fleet_size), 4)\n            break \n    return answer\n\n### END"}
{"id": "feddfaf0-9383-4f3b-8290-eded3aea5847", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 malaysian grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"michael schumacher\", \"ferrari\", \"55\", \"1:47:34.801\", \"1\"],[\"rubens barrichello\", \"ferrari\", \"55\", \"+ 23.660\", \"2\"],[\"david coulthard\", \"mclaren - mercedes\", \"55\", \"+ 28.555\", \"8\"],[\"heinz - harald frentzen\", \"jordan - honda\", \"55\", \"+ 46.543\", \"9\"],[\"ralf schumacher\", \"williams - bmw\", \"55\", \"+ 48.233\", \"3\"],[\"mika häkkinen\", \"mclaren - mercedes\", \"55\", \"+ 48.606\", \"4\"],[\"jos verstappen\", \"arrows - asiatech\", \"55\", \"+ 1:21.560\", \"18\"],[\"jarno trulli\", \"jordan - honda\", \"54\", \"+ 1 lap\", \"5\"],[\"jean alesi\", \"prost - acer\", \"54\", \"+ 1 lap\", \"13\"],[\"luciano burti\", \"jaguar - cosworth\", \"54\", \"+ 1 lap\", \"15\"],[\"jenson button\", \"benetton - renault\", \"53\", \"+ 2 laps\", \"17\"],[\"gastón mazzacane\", \"prost - acer\", \"53\", \"+ 2 laps\", \"19\"],[\"fernando alonso\", \"minardi - european\", \"52\", \"+ 3 laps\", \"21\"],[\"tarso marques\", \"minardi - european\", \"51\", \"+ 4 laps\", \"20\"],[\"giancarlo fisichella\", \"benetton - renault\", \"31\", \"fuel pressure\", \"16\"],[\"jacques villeneuve\", \"bar - honda\", \"3\", \"spun off\", \"7\"],[\"nick heidfeld\", \"sauber - petronas\", \"3\", \"spun off\", \"11\"],[\"enrique bernoldi\", \"arrows - asiatech\", \"3\", \"spun off\", \"22\"],[\"juan pablo montoya\", \"williams - bmw\", \"3\", \"spun off\", \"6\"],[\"eddie irvine\", \"jaguar - cosworth\", \"3\", \"water leak\", \"12\"],[\"olivier panis\", \"bar - honda\", \"1\", \"oil leak\", \"10\"],[\"kimi räikkönen\", \"sauber - petronas\", \"0\", \"driveshaft\", \"14\"]]\nQuestion = Is it true that the sum grid number when the driver was luciano burti was 15?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    grids = get_column_by_name(table_data, \"grid\")\n    for driver, grid in zip(drivers, grids):\n        if driver.lower() == \"luciano burti\":\n            answer = equal_to(int(grid), 15)\n            break \n    return answer\n\n### END"}
{"id": "450da2fd-81bb-4edd-bcb7-770e4c654e9d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"team\",\"outgoing manager\",\"manner of departure\",\"date of vacancy\",\"replaced by\",\"position in the table\"],[\"getafe\",\"bernd schuster\",\"resigned\",\"9 july 2007\",\"michael laudrup\",\"9th (2006 - 2007)\"],[\"betis\",\"paco chaparro\",\"end of tenure as caretaker\",\"3 july 2007\",\"hector cuper\",\"16th (2006 - 2007)\"],[\"racing santander\",\"miguel ángel portugal\",\"end of contract\",\"30 june 2007\",\"marcelino garcía toral\",\"10th (2006 - 2007 )\"],[\"levante\",\"abel resino\",\"sacked\",\"8 october 2007\",\"gianni de biasi\",\"20th\"],[\"sevilla\",\"juande ramos\",\"resigned\",\"27 october 2007\",\"manolo jiménez\",\"10th\"],[\"valencia\",\"quique sánchez\",\"sacked\",\"29 october 2007\",\"ronald koeman\",\"4th\"],[\"betis\",\"hector cuper\",\"sacked\",\"3 december 2007\",\"paco chaparro\",\"19th\"],[\"real zaragoza\",\"víctor fernández\",\"sacked\",\"14 january 2008\",\"ander garitano\",\"12th\"],[\"real zaragoza\",\"ander garitano\",\"resigned\",\"22 january 2008\",\"javier irureta\",\"11th\"],[\"recreativo\",\"víctor muñoz\",\"sacked\",\"4 february 2008\",\"manolo zambrano\",\"19th\"],[\"real zaragoza\",\"javier irureta\",\"resigned\",\"3 march 2008\",\"manolo villanova\",\"17th\"]]\nQuestion = Is it true that when the manager for real zaragoza , javier irureta , resigned , he was replaced by manolo villanovo?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    outgoing_managers = get_column_by_name(table_data, \"outgoing manager\")\n    replaced_bys = get_column_by_name(table_data, \"replaced by\")\n    answer = False\n    for team, outgoing_manager, replaced_by in zip(teams, outgoing_managers, replaced_bys):\n        if team.lower() == \"real zaragoza\" and outgoing_manager.lower() == \"javier irureta\" and replaced_by.lower() == \"manolo villanova\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "3ce3e15d-9232-4aac-ac5d-cf6d48f9374f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"order\", \"episode\", \"air date\", \"us timeslot (est)\", \"18 - 49\", \"viewers\"],[\"16\", \"so i think i can dance\", \"october 13 , 2008\", \"monday 9:30 pm\", \"3.1\", \"11.45\"],[\"17\", \"out of africa\", \"october 20 , 2008\", \"monday 9:30 pm\", \"3.0\", \"9.64\"],[\"18\", \"the pill\", \"october 27 , 2008\", \"monday 9:30 pm\", \"3.0\", \"10.45\"],[\"19\", \"the building\", \"november 3 , 2008\", \"monday 9:30 pm\", \"2.7\", \"9.71\"],[\"20\", \"help\", \"november 10 , 2008\", \"monday 9:30 pm\", \"3.0\", \"11.03\"],[\"21\", \"the - ex\", \"november 17 , 2008\", \"monday 9:30 pm\", \"3.0\", \"11.12\"],[\"22\", \"the farm\", \"november 24 , 2008\", \"monday 9:30 pm\", \"3.2\", \"11.93\"],[\"23\", \"the park\", \"december 1 , 2008\", \"monday 9:00 pm\", \"2.2\", \"6.70\"],[\"24\", \"the family vacation\", \"december 1 , 2008\", \"monday 9:30 pm\", \"2.1\", \"6.79\"],[\"25\", \"my best friends boyfriend\", \"march 26 , 2009\", \"thursday 8:30 pm\", \"2.2\", \"6.57\"],[\"26\", \"the dog\", \"april 2 , 2009\", \"thursday 8:30 pm\", \"1.4\", \"4.90\"],[\"27\", \"the amazing racist\", \"april 9 , 2009\", \"thursday 8:30 pm\", \"1.4\", \"4.87\"],[\"28\", \"the debt\", \"april 16 , 2009\", \"thursday 8:30 pm\", \"1.5\", \"4.96\"],[\"29\", \"the rock star\", \"june 25 , 2009\", \"thursday 8:00 pm\", \"1.0\", \"3.72\"],[\"30\", \"todd 's job\", \"july 2 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"1.0\", \"3.50\"],[\"31\", \"the sister\", \"july 2 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"1.0\", \"3.28\"],[\"32\", \"the dream job\", \"july 9 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"1.0\", \"3.59\"],[\"33\", \"the first date\", \"july 9 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"1.0\", \"3.23\"],[\"34\", \"the other woman\", \"july 23 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"0.9\", \"3.46\"],[\"35\", \"with this ring\", \"july 23 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"0.9\", \"3.31\"]]\nQuestion = Is it true that the timeslot in the us for the episode , the farm was monday at 9:30 pm?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    episodes = get_column_by_name(table_data, \"episode\")\n    timeslots = get_column_by_name(table_data, \"us timeslot (est)\")\n    for episode, timeslot in zip(episodes, timeslots):\n        if equal_to(episode, \"the farm\"):\n            answer = equal_to(timeslot, \"monday 9:30 pm\")\n            break \n    return answer\n\n### END"}
{"id": "a7d8fc26-0eff-48ef-94e8-d1963ca63cac", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rowing at the 2008 summer olympics - women 's lightweight double sculls\ntable_data = [[\"rank\", \"rowers\", \"country\", \"time\", \"notes\"],[\"1\", \"melanie kok , tracy cameron\", \"canada\", \"7:10.70\", \"fa\"],[\"2\", \"xu dongxiang , chen haixia\", \"china\", \"7:11.59\", \"fa\"],[\"3\", \"chrysi biskitzi , alexandra tsiavou\", \"greece\", \"7:11.99\", \"fa\"],[\"4\", \"renee hykel , jennifer goldsack\", \"united states\", \"7:12.15\", \"fb\"],[\"5\", \"amber halliday , marguerite houston\", \"australia\", \"7:13.80\", \"fb\"],[\"6\", \"misaki kumakura , akiko iwamoto\", \"japan\", \"7:16.13\", \"fb\"]]\nQuestion = Is it true that the rowers for the united states were ranked 4th with a note of fb?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    countries = get_column_by_name(table_data, \"country\")\n    notes = get_column_by_name(table_data, \"notes\")\n    for rank, country, note in zip(ranks, countries, notes):\n        if country.lower() == \"united states\":\n            answer = equal_to(rank, \"4\") and equal_to(note, \"fb\")\n            break \n    return answer\n\n### END"}
{"id": "59ff97a5-667e-4f29-9b12-71430c0decc1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"order\", \"episode\", \"air date\", \"us timeslot (est)\", \"18 - 49\", \"viewers\"],[\"16\", \"so i think i can dance\", \"october 13 , 2008\", \"monday 9:30 pm\", \"3.1\", \"11.45\"],[\"17\", \"out of africa\", \"october 20 , 2008\", \"monday 9:30 pm\", \"3.0\", \"9.64\"],[\"18\", \"the pill\", \"october 27 , 2008\", \"monday 9:30 pm\", \"3.0\", \"10.45\"],[\"19\", \"the building\", \"november 3 , 2008\", \"monday 9:30 pm\", \"2.7\", \"9.71\"],[\"20\", \"help\", \"november 10 , 2008\", \"monday 9:30 pm\", \"3.0\", \"11.03\"],[\"21\", \"the - ex\", \"november 17 , 2008\", \"monday 9:30 pm\", \"3.0\", \"11.12\"],[\"22\", \"the farm\", \"november 24 , 2008\", \"monday 9:30 pm\", \"3.2\", \"11.93\"],[\"23\", \"the park\", \"december 1 , 2008\", \"monday 9:00 pm\", \"2.2\", \"6.70\"],[\"24\", \"the family vacation\", \"december 1 , 2008\", \"monday 9:30 pm\", \"2.1\", \"6.79\"],[\"25\", \"my best friends boyfriend\", \"march 26 , 2009\", \"thursday 8:30 pm\", \"2.2\", \"6.57\"],[\"26\", \"the dog\", \"april 2 , 2009\", \"thursday 8:30 pm\", \"1.4\", \"4.90\"],[\"27\", \"the amazing racist\", \"april 9 , 2009\", \"thursday 8:30 pm\", \"1.4\", \"4.87\"],[\"28\", \"the debt\", \"april 16 , 2009\", \"thursday 8:30 pm\", \"1.5\", \"4.96\"],[\"29\", \"the rock star\", \"june 25 , 2009\", \"thursday 8:00 pm\", \"1.0\", \"3.72\"],[\"30\", \"todd 's job\", \"july 2 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"1.0\", \"3.50\"],[\"31\", \"the sister\", \"july 2 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"1.0\", \"3.28\"],[\"32\", \"the dream job\", \"july 9 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"1.0\", \"3.59\"],[\"33\", \"the first date\", \"july 9 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"1.0\", \"3.23\"],[\"34\", \"the other woman\", \"july 23 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"0.9\", \"3.46\"],[\"35\", \"with this ring\", \"july 23 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"0.9\", \"3.31\"]]\nQuestion = Is it true that the 18 - 49 total for the episode that aired on july 2 , 2009 with 3.50 viewers is 1.5?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    air_dates = get_column_by_name(table_data, \"air date\")\n    viewers = get_column_by_name(table_data, \"viewers\")\n    ratings = get_column_by_name(table_data, \"18 - 49\")\n    for air_date, viewer, rating in zip(air_dates, viewers, ratings):\n        if air_date.lower() == \"july 2 , 2009\" and viewer == \"3.50\":\n            answer = equal_to(rating, \"1.5\")\n            break \n    return answer\n\n### END"}
{"id": "876fb236-0a9a-4829-9a8b-2859d0bc73bc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"name\", \"latitude\", \"longitude\", \"diameter (km)\", \"year named\", \"name origin\"],[\"fornax rupes\", \"30.3n\", \"201.1e\", \"729.0\", \"1985\", \"roman goddess of hearth and baking of bread\"],[\"gabie rupes\", \"67.5n\", \"109.9e\", \"350.0\", \"1985\", \"lithuanian goddess of fire and hearth\"],[\"hestia rupes\", \"6.0n\", \"71.1e\", \"588.0\", \"1982\", \"greek hearth goddess\"],[\"uorsar rupes\", \"76.8n\", \"341.2e\", \"820.0\", \"1985\", \"adygan (caucasus) goddess of hearth\"],[\"ut rupes\", \"55.3n\", \"321.9e\", \"676.0\", \"1982\", \"siberian , turco - tatar goddess of the hearth fire\"],[\"vaidilute rupes\", \"43.5s\", \"22.0e\", \"2000.0\", \"1997\", \"lithuanian hearth goddess\"],[\"vesta rupes\", \"58.3n\", \"323.9e\", \"788.0\", \"1982\", \"roman hearth goddess\"]]\nQuestion = Is it true that the year when the diameter was 729 km is 1982?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    diameters = get_column_by_name(table_data, \"diameter (km)\")\n    years = get_column_by_name(table_data, \"year named\")\n    for diameter, year in zip(diameters, years):\n        if equal_to(diameter, \"729.0\"):\n            answer = equal_to(year, \"1982\")\n            break \n    return answer\n\n### END"}
{"id": "518a3cee-7a38-4f59-8be4-24688d3c2087", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1966 american football league draft\ntable_data = [[\"pick\", \"afl team\", \"player\", \"position\", \"college\"],[\"1\", \"miami dolphins\", \"jim grabowski\", \"running back\", \"illinois\"],[\"2\", \"miami dolphins\", \"rick norton\", \"quarterback\", \"kentucky\"],[\"3\", \"boston patriots\", \"karl singer\", \"offensive tackle\", \"purdue\"],[\"4\", \"denver broncos\", \"jerry shay\", \"offensive tackle\", \"purdue\"],[\"5\", \"houston oilers\", \"tommy nobis\", \"linebacker\", \"texas\"],[\"6\", \"kansas city chiefs\", \"aaron brown\", \"end\", \"minnesota\"],[\"7\", \"san diego chargers\", \"don davis\", \"offensive tackle\", \"cal state - la\"],[\"8\", \"buffalo bills\", \"mike dennis\", \"running back\", \"ole 'miss\"],[\"9\", \"new york jets\", \"bill yearby\", \"offensive tackle\", \"michigan\"],[\"10\", \"oakland raiders\", \"rodger bird\", \"running back\", \"kentucky\"]]\nQuestion = Is it true that bill yearby plays as offensive tackle for new york jets?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    positions = get_column_by_name(table_data, \"position\")\n    teams = get_column_by_name(table_data, \"afl team\")\n    for player, position, team in zip(players, positions, teams):\n        if player.lower() == \"bill yearby\" and position.lower() == \"offensive tackle\" and team.lower() == \"new york jets\":\n            return True\n    return False\n\n### END"}
{"id": "0f4fa4a9-79ca-4e1a-9926-0e3277b06b1b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of rna structure prediction software\ntable_data = [[\"name\", \"species specific\", \"intra - molecular structure\", \"comparative\", \"link\"],[\"diana - microt\", \"human , mouse\", \"no\", \"yes\", \"webserver\"],[\"microtar\", \"no\", \"no\", \"no\", \"sourcecode\"],[\"mitarget\", \"no\", \"no\", \"no\", \"webserver\"],[\"mirror\", \"no\", \"no\", \"no\", \"webserver\"],[\"pictar\", \"8 vertebrates\", \"no\", \"yes\", \"predictions\"],[\"pita\", \"no\", \"yes\", \"no\", \"executable , webserver , predictions\"],[\"rna22\", \"no\", \"no\", \"no\", \"predictions custom\"],[\"rnahybrid\", \"no\", \"no\", \"no\", \"sourcecode , webserver\"],[\"sylamer\", \"no\", \"no\", \"no\", \"sourcecode webserver\"],[\"taref\", \"yes\", \"no\", \"no\", \"server / sourcecode\"],[\"p - taref\", \"yes\", \"no\", \"no\", \"server / standalone\"],[\"targetscan\", \"vertebrates , flies , nematodes\", \"evaluated indirectly\", \"yes\", \"sourcecode , webserver\"]]\nQuestion = Is it true that pictar had a comparative?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    comparatives = get_column_by_name(table_data, \"comparative\")\n    for name, comparative in zip(names, comparatives):\n        if name.lower() == \"pictar\":\n            answer = comparative.lower() == \"yes\"\n            break\n    return answer\n\n### END"}
{"id": "20ee6739-8f36-443a-9b4b-5b88ad259279", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 big ten conference football season\ntable_data = [[\"bowl game\",\"date\",\"stadium\",\"city\",\"television\",\"conference matchups\",\"payout ( us )\"],[\"insight bowl\",\"december 31 , 2008\",\"sun devil stadium\",\"tempe , arizona\",\"nfl\",\"minnesota vs kansas\",\"1.2 million\"],[\"champs sports bowl\",\"december 27 , 2008\",\"citrus bowl\",\"orlando , florida\",\"espn\",\"wisconsin vs florida state\",\"2.25 million\"],[\"alamo bowl\",\"december 29 , 2008\",\"alamodome\",\"san antonio , texas\",\"espn\",\"northwestern vs missouri\",\"2.2 million\"],[\"outback bowl\",\"january 1 , 2009\",\"raymond james stadium\",\"tampa , florida\",\"espn\",\"iowa vs south carolina\",\"3 million\"],[\"capital one\",\"january 1 , 2009\",\"citrus bowl\",\"orlando , florida\",\"abc\",\"michigan state vs georgia\",\"4.25 million\"],[\"fiesta bowl\",\"january 5 , 2009\",\"university of phoenix stadium\",\"glendale , arizona\",\"fox\",\"ohio state vs texas\",\"17.5 million\"]]\nQuestion = Is it true that the teams who played in the capital one bowl game on january 1 , 2009 were michigan state and georgia?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    bowl_games = get_column_by_name(table_data, \"bowl game\")\n    dates = get_column_by_name(table_data, \"date\")\n    matchups = get_column_by_name(table_data, \"conference matchups\")\n    for bowl_game, date, matchup in zip(bowl_games, dates, matchups):\n        if bowl_game.lower() == \"capital one\" and date.lower() == \"january 1 , 2009\":\n            answer = equal_to(matchup, \"michigan state vs georgia\")\n            break \n    return answer\n\n### END"}
{"id": "ab0ca9cc-9869-4127-aaf5-0b49e45674d1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\", \"10:30\"],[\"heartland\", \"heartland\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"cbc news : sunday night\", \"cbc news : sunday night\"],[\"law and order : criminal intent\", \"law and order : criminal intent\", \"cold case\", \"cold case\", \"desperate housewives\", \"desperate housewives\", \"dirty sexy money\", \"dirty sexy money\"],[\"the simpsons\", \"da kink in my hair\", \"the simpsons\", \"king of the hill\", \"family guy\", \"american dad!\", \"brothers & sisters\", \"brothers & sisters\"],[\"america 's funniest home videos\", \"america 's funniest home videos\", \"kyle xy\", \"kyle xy\", \"america 's next top model\", \"america 's next top model\", \"stargate sg - 1\", \"stargate sg - 1\"],[\"everybody hates chris\", \"speakers' corner\", \"behind the movies\", \"bravo!fact presents\", \"great movies\", \"great movies\", \"great movies\", \"great movies\"],[\"viva laughlin\", \"viva laughlin\", \"extreme makeover : home edition\", \"extreme makeover : home edition\", \"e! countdowns\", \"e! countdowns\", \"e! live encore\", \"e! live encore\"],[\"découverte\", \"et dieu créa laflaque\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"le téléjournal\", \"le téléjournal\"],[\"le banquier / dieu merci!\", \"le banquier / dieu merci!\", \"occupation double\", \"occupation double\", \"occupation double\", \"occupation double\", \"le tva week - end\", \"le tva week - end\"],[\"loft story\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal weekend\"]]\nQuestion = Is it true that decouverte has a 9:30 of da kink in my hair?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef get_column_cell_value(row_index, column):\n    return column[row_index]\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    column_index = 1\n    column_1 = get_column_by_index(table_data, column_index)\n    decouverte_730 = get_column_cell_value(7, column_1)\n    expected_show = \"da kink in my hair\"\n    answer = equal_to(decouverte_730, expected_show)\n    return answer\n\n### END"}
{"id": "8e296958-2de5-4ab6-98d6-ae247a6bfec3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states presidential election in nevada , 2008\ntable_data = [[\"county\", \"mccain\", \"mccain %\", \"obama\", \"obama %\"],[\"carson city\", \"11419\", \"48.2%\", \"11623\", \"49.1%\"],[\"churchill\", \"6832\", \"64.4%\", \"3494\", \"33.0%\"],[\"clark\", \"257078\", \"39.5%\", \"380765\", \"58.5%\"],[\"douglas\", \"14648\", \"56.6%\", \"10672\", \"41.2%\"],[\"elko\", \"10969\", \"68.5%\", \"4541\", \"28.4%\"],[\"esmeralda\", \"303\", \"69.0%\", \"104\", \"23.7%\"],[\"eureka\", \"564\", \"75.7%\", \"144\", \"19.3%\"],[\"humboldt\", \"3586\", \"63.3%\", \"1909\", \"33.7%\"],[\"lander\", \"1466\", \"69.7%\", \"577\", \"27.5%\"],[\"lincoln\", \"1498\", \"71.1%\", \"518\", \"24.6%\"],[\"lyon\", \"12154\", \"57.6%\", \"8405\", \"39.8%\"],[\"mineral\", \"1131\", \"49.0%\", \"1082\", \"46.9%\"],[\"nye\", \"9537\", \"54.5%\", \"7226\", \"41.3%\"],[\"pershing\", \"1075\", \"58.6%\", \"673\", \"36.7%\"],[\"storey\", \"1247\", \"51.6%\", \"1102\", \"45.6%\"],[\"washoe\", \"76880\", \"42.6%\", \"99671\", \"55.3%\"]]\nQuestion = Is it true that mccain got higher than 60.0% in lyon?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef parse_percentage(percentage_str):\n    return float(percentage_str.strip('%'))\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    counties = get_column_by_name(table_data, \"county\")\n    mccain_percentages = get_column_by_name(table_data, \"mccain %\")\n    answer = False\n    for county, mccain_percentage in zip(counties, mccain_percentages):\n        if county.lower() == \"lyon\":\n            parsed_percentage = parse_percentage(mccain_percentage)\n            if greater(parsed_percentage, 60.0):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "deb1b7ea-2717-45dd-86e8-1946e6ea1b9c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = algeria at the 2008 summer olympics\ntable_data = [[\"athlete\", \"event\", \"round of 32\", \"round of 16\", \"quarterfinals\", \"semifinals\"],[\"abdelhalim ouradi\", \"bantamweight\", \"nevin ( irl ) l 4 - 9\", \"did not advance\", \"did not advance\", \"did not advance\"],[\"abdelkader chadi\", \"featherweight\", \"bye\", \"adi ( tha ) w 7 - 6\", \"kılıç ( tur ) l 6 - 13\", \"did not advance\"],[\"hamza kramou\", \"lightweight\", \"ugás ( cub ) l 3 - 21\", \"did not advance\", \"did not advance\", \"did not advance\"],[\"nabil kassel\", \"middleweight\", \"bye\", \"sutherland ( irl ) l 14 - 21\", \"did not advance\", \"did not advance\"],[\"abdelhafid benchebla\", \"light heavyweight\", \"kumar ( ind ) w 23 - 3\", \"yasser ( egy ) w 13 - 6\", \"zhang xp ( chn ) l 7 - 12\", \"did not advance\"],[\"abdelaziz touilbini\", \"heavyweight\", \"n / a\", \"wilder ( usa ) l 4 - 10\", \"did not advance\", \"did not advance\"]]\nQuestion = Is it true that hamza kramou did not advance in the semifinals and lost to ugas (cub) by a score of 3 - 21 in the round of 32?\n\n### RESPONSE:\ndef get_row_by_name(table, row_name):\n    for row in table[1:]:\n        if row[0].lower() == row_name.lower():\n            return row\n    return None\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    row_name = \"hamza kramou\"\n    row = get_row_by_name(table_data, row_name)\n    if row is None:\n        return False\n    round_of_32 = row[2]\n    semifinals = row[5]\n    answer = equal_to(round_of_32, \"ugás ( cub ) l 3 - 21\") and equal_to(semifinals, \"did not advance\")\n    return answer\n\n### END"}
{"id": "2285102c-c33c-4f98-af82-ab39a12fe88b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = marsel ilhan\ntable_data = [[\"outcome\", \"date\", \"tournament\", \"surface\", \"opponent\", \"score\"],[\"runner - up\", \"august 20 , 2007\", \"karshi\", \"hard\", \"denis istomin\", \"1 - 6 , 4 - 6\"],[\"winner\", \"july 13 , 2008\", \"israel open\", \"hard\", \"ivo klec\", \"6 - 4 , 6 - 4\"],[\"runner - up\", \"may 17 , 2009\", \"izmir cup\", \"hard\", \"andrea stoppini\", \"6 - 7 , 2 - 6\"],[\"winner\", \"september 20 , 2010\", \"banja luka\", \"clay\", \"pere riba\", \"6 - 0 , 7 - 6 (7 - 4)\"],[\"runner - up\", \"september 26 , 2010\", \"izmir cup\", \"hard\", \"somdev devvarman\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 10 , 2011\", \"scheveningen\", \"clay\", \"steve darcis\", \"3 - 6 , 6 - 4 , 2 - 6\"],[\"runner - up\", \"september 25 , 2011\", \"izmir cup\", \"hard\", \"lukáš lacko\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 29 , 2012\", \"president 's cup (tennis)\", \"hard\", \"evgeny donskoy\", \"3 - 6 , 4 - 6\"]]\nQuestion = Is it true that somdev devvarman was the opponent in the izmir cup tournament on september 26 , 2010?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    tournaments = get_column_by_name(table_data, \"tournament\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    answer = False\n    for date, tournament, opponent in zip(dates, tournaments, opponents):\n        if \"september 26 , 2010\" in date.lower() and \"izmir cup\" in tournament.lower():\n            if \"somdev devvarman\" in opponent.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "2c0e5167-95ee-4d32-a055-1cc29ff678a9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 veikkausliiga\ntable_data = [[\"club\", \"location\", \"stadium\", \"capacity\", \"manager\", \"kitmaker\"],[\"ac oulu\", \"oulu\", \"castrén\", \"4000\", \"juha malinen\", \"umbro\"],[\"fc honka\", \"espoo\", \"tapiolan urheilupuisto\", \"6000\", \"mika lehkosuo\", \"kappa\"],[\"fc inter\", \"turku\", \"veritas stadion\", \"9372\", \"job dragtsma\", \"nike\"],[\"fc lahti\", \"lahti\", \"lahden stadion\", \"15000\", \"ilkka mäkelä\", \"umbro\"],[\"ff jaro\", \"jakobstad\", \"jakobstads centralplan\", \"5000\", \"alexei eremenko sr\", \"errea\"],[\"haka\", \"valkeakoski\", \"tehtaan kenttä\", \"3516\", \"sami ristilä\", \"umbro\"],[\"hjk\", \"helsinki\", \"sonera stadium\", \"10770\", \"antti muurinen\", \"adidas\"],[\"ifk mariehamn\", \"mariehamn\", \"wiklöf holding arena\", \"4000\", \"pekka lyyski\", \"puma\"],[\"jjk\", \"jyväskylä\", \"harjun stadion\", \"3000\", \"kari martonen\", \"legea\"],[\"kups\", \"kuopio\", \"kuopion keskuskenttä\", \"5000\", \"esa pekonen\", \"puma\"],[\"mypa\", \"anjalankoski\", \"saviniemi\", \"4167\", \"janne lindberg\", \"puma\"],[\"tampere united\", \"tampere\", \"ratina stadion\", \"17000\", \"ari hjelm\", \"puma\"],[\"tps\", \"turku\", \"veritas stadion\", \"9372\", \"marko rajamäki\", \"puma\"]]\nQuestion = Is it true that the stadium capacity for ff jaro club is 5000?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    clubs = get_column_by_name(table_data, \"club\")\n    capacities = get_column_by_name(table_data, \"capacity\")\n    for club, capacity in zip(clubs, capacities):\n        if club.lower() == \"ff jaro\":\n            answer = equal_to(capacity, \"5000\")\n            break \n    return answer\n\n### END"}
{"id": "4cecf9b8-51f0-4514-bf44-dbf16424db11", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = x factor (czech tv series)\ntable_data = [[\"name\", \"category\", \"eliminated\", \"date\", \"special guest\"],[\"jiří zonyga\", \"24 + years\", \"winner\", \"june 1\", \"see the next line\"],[\"ondřej ruml\", \"24 + years\", \"final night\", \"june 1\", \"5angels , olympic\"],[\"all x\", \"vocal groups\", \"james bond night\", \"may 25\", \"mta + čhave jilestar\"],[\"martina pártlová\", \"24 + years\", \"american night\", \"may 18\", \"láďa kerndl and henry lee\"],[\"kamila nývltová\", \"15 - 24 years\", \"night of revived legends\", \"may 11\", \"zombies (dancing on michael jackson 's thriller)\"],[\"za 5 dvanáct\", \"vocal groups\", \"czechoslovak night\", \"may 4\", \"miro žbirka\"],[\"david gránský\", \"15 - 24 years\", \"banana night\", \"april 27\", \"karl wolf\"],[\"anna ungrová\", \"15 - 24 years\", \"night of broken hearts\", \"april 20\", \"helena zeťová\"],[\"pavlína ďuriačová\", \"15 - 24 years\", \"tribute to karel\", \"april 13\", \"karel gott\"],[\"divoký kočky + dante\", \"vocal groups\", \"popcorn night\", \"april 6\", \"iva frühlingová\"],[\"lukáš javůrek\", \"24 + years\", \"chocolate night\", \"march 30\", \"gipsycz\"],[\"romantic\", \"vocal groups\", \"fire night\", \"march 23\", \"shayne ward\"]]\nQuestion = Is it true that jiří zonyga was announced winner on june 1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    eliminated = get_column_by_name(table_data, \"eliminated\")\n    dates = get_column_by_name(table_data, \"date\")\n    for name, elimination, date in zip(names, eliminated, dates):\n        if name.lower() == \"jiří zonyga\":\n            answer = equal_to(elimination.lower(), \"winner\") and equal_to(date.lower(), \"june 1\")\n            break \n    return answer\n\n### END"}
{"id": "3e357e09-0fde-49c8-a5ac-fca6b3ef080f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 seattle supersonics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"47\", \"february 2\", \"new york\", \"w 86 - 85 (ot)\", \"kevin durant (21)\", \"nick collison (12)\", \"earl watson (8)\", \"keyarena 12783\", \"12 - 35\"],[\"48\", \"february 4\", \"chicago\", \"l 108 - 118 (ot)\", \"wally szczerbiak (21)\", \"nick collison (9)\", \"earl watson (8)\", \"keyarena 10935\", \"12 - 36\"],[\"49\", \"february 6\", \"sacramento\", \"w 105 - 92 (ot)\", \"earl watson (23)\", \"earl watson chris wilcox (10)\", \"earl watson (10)\", \"arco arena 13136\", \"13 - 36\"],[\"50\", \"february 8\", \"phoenix\", \"l 99 - 103 (ot)\", \"chris wilcox (22)\", \"chris wilcox (15)\", \"earl watson (5)\", \"us airways center 18422\", \"13 - 37\"],[\"51\", \"february 13\", \"utah\", \"l 93 - 112 (ot)\", \"kevin durant (19)\", \"kurt thomas (13)\", \"earl watson (14)\", \"keyarena 10618\", \"13 - 38\"],[\"52\", \"february 19\", \"memphis\", \"w 108 - 101 (ot)\", \"earl watson (26)\", \"nick collison jeff green (9)\", \"earl watson (9)\", \"keyarena 11391\", \"14 - 38\"],[\"53\", \"february 21\", \"portland\", \"l 88 - 92 (ot)\", \"kevin durant (20)\", \"nick collison (14)\", \"earl watson (9)\", \"rose garden 20168\", \"14 - 39\"],[\"54\", \"february 22\", \"portland\", \"w 99 - 87 (ot)\", \"kevin durant (17)\", \"jeff green (9)\", \"earl watson (4)\", \"keyarena 16640\", \"15 - 39\"],[\"55\", \"february 24\", \"l a lakers\", \"l 91 - 111 (ot)\", \"mickaël gelabale (21)\", \"johan petro (10)\", \"earl watson (8)\", \"keyarena 17072\", \"15 - 40\"],[\"56\", \"february 26\", \"golden state\", \"l 99 - 105 (ot)\", \"kevin durant jeff green (21)\", \"nick collison (13)\", \"luke ridnour (15)\", \"oracle arena 19412\", \"15 - 41\"],[\"57\", \"february 27\", \"denver\", \"l 96 - 138 (ot)\", \"kevin durant mickaël gelabale (16)\", \"johan petro (8)\", \"mickaël gelabale (6)\", \"keyarena 13627\", \"15 - 42\"]]\nQuestion = Is it true that mickaël gelabale scored 21 points against the la lakers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    high_points = get_column_by_name(table_data, \"high points\")\n    answer = False\n    for team, high_point in zip(teams, high_points):\n        if \"l a lakers\" in team.lower() and \"mickaël gelabale (21)\" in high_point.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "b803926a-81ce-4949-9121-0bccf084621a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1989 all - ireland senior hurling championship\ntable_data = [[\"rank\", \"player\", \"county\", \"tally\", \"total\", \"matches\", \"average\"],[\"1\", \"nicky english\", \"tipperary\", \"4 - 38\", \"50\", \"4\", \"12.50\"],[\"2\", \"adrian ronan\", \"kilkenny\", \"1 - 21\", \"24\", \"3\", \"8.00\"],[\"2\", \"mark corrigan\", \"offaly\", \"4 - 12\", \"24\", \"3\", \"8.00\"],[\"4\", \"finbarr delaney\", \"cork\", \"1 - 19\", \"23\", \"2\", \"8.00\"],[\"5\", \"pat fox\", \"tipperary\", \"3 - 11\", \"20\", \"4\", \"5.00\"]]\nQuestion = Is it true that finbarr delaney had a tally of 1 - 19 with 2 matches?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    tallies = get_column_by_name(table_data, \"tally\")\n    matches = get_column_by_name(table_data, \"matches\")\n    for player, tally, match in zip(players, tallies, matches):\n        if player.lower() == \"finbarr delaney\":\n            answer = equal_to(tally, \"1 - 19\") and equal_to(match, \"2\")\n            break \n    return answer\n\n### END"}
{"id": "d49b1441-ab54-4bba-9297-5d780dfaf482", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of superfund sites in alabama\ntable_data = [[\"cerclis id\", \"name\", \"county\", \"proposed\", \"listed\", \"construction completed\", \"partially deleted\", \"deleted\"],[\"al6210020008\", \"alabama army ammunition plant\", \"talladega\", \"10 / 15 / 1984\", \"07 / 22 / 1987\", \"-\", \"-\", \"-\"],[\"ald004022448\", \"alabama plating company\", \"shelby\", \"08 / 24 / 2000\", \"09 / 18 / 2012\", \"-\", \"-\", \"-\"],[\"ald981868466\", \"american brass\", \"henry\", \"01 / 19 / 1999\", \"05 / 10 / 1999\", \"09 / 01 / 2009\", \"-\", \"-\"],[\"al3210020027\", \"anniston army depot (se industrial area)\", \"calhoun\", \"10 / 15 / 1984\", \"03 / 13 / 1989\", \"-\", \"-\", \"-\"],[\"al0001058056\", \"capitol city plume\", \"montgomery\", \"05 / 11 / 2000\", \"-\", \"-\", \"-\", \"-\"],[\"ald001221902\", \"ciba - geigy corp ( mcintosh plant)\", \"washington\", \"09 / 08 / 1983\", \"09 / 21 / 1984\", \"07 / 19 / 2000\", \"-\", \"-\"],[\"ald041906173\", \"interstate lead company (ilco)\", \"jefferson\", \"09 / 18 / 1985\", \"06 / 10 / 1986\", \"-\", \"-\", \"-\"],[\"ald031618069\", \"mowbray engineering\", \"butler\", \"12 / 30 / 1982\", \"09 / 08 / 1983\", \"09 / 16 / 1991\", \"-\", \"12 / 30 / 1993\"],[\"ald008188708\", \"olin corp ( mcintosh plant)\", \"washington\", \"09 / 08 / 1983\", \"09 / 21 / 1984\", \"-\", \"-\", \"-\"],[\"ald980728703\", \"perdido ground water contamination\", \"baldwin\", \"12 / 30 / 1982\", \"09 / 08 / 1983\", \"07 / 30 / 1993\", \"-\", \"-\"],[\"al7210020742\", \"redstone arsenal ( us army / nasa )\", \"madison\", \"06 / 23 / 1993\", \"05 / 31 / 1994\", \"-\", \"-\", \"-\"],[\"ald980844385\", \"redwing carriers incorporated (saraland)\", \"mobile\", \"06 / 24 / 1988\", \"02 / 21 / 1990\", \"09 / 03 / 2009\", \"-\", \"-\"],[\"ald095688875\", \"stauffer chemical company (cold creek plant)\", \"mobile\", \"09 / 08 / 1983\", \"09 / 21 / 1984\", \"-\", \"-\", \"-\"],[\"ald008161176\", \"stauffer chemical company (lemoyne plant)\", \"mobile\", \"09 / 08 / 1983\", \"09 / 21 / 1984\", \"-\", \"-\", \"-\"],[\"ald007454085\", \"th agriculture & nutrition (montgomery)\", \"montgomery\", \"06 / 24 / 1988\", \"08 / 30 / 1990\", \"09 / 27 / 2002\", \"-\", \"-\"],[\"ald983166299\", \"triana / tennessee river\", \"morgan , limestone , and madison\", \"12 / 30 / 1982\", \"09 / 08 / 1983\", \"12 / 18 / 1991\", \"-\", \"-\"]]\nQuestion = Is it true that washington county is the entry that has a construction completed date of 07 / 19 / 2001 and a listed date of 09 / 21 / 1984 located?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    counties = get_column_by_name(table_data, \"county\")\n    listed_dates = get_column_by_name(table_data, \"listed\")\n    construction_completed_dates = get_column_by_name(table_data, \"construction completed\")\n    answer = False\n    for county, listed_date, construction_completed_date in zip(counties, listed_dates, construction_completed_dates):\n        if county.lower() == \"washington\" and listed_date == \"09 / 21 / 1984\" and construction_completed_date == \"07 / 19 / 2001\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "9aca4fbc-8610-4205-8be5-ba7c39223c25", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sanya\ntable_data = [[\"english name\", \"simplified\", \"traditional\", \"pinyin\", \"area\", \"population\", \"density\"],[\"hexi district\", \"河西区\", \"河西區\", \"héxī qū\", \"10\", \"134026\", \"13403\"],[\"hedong district\", \"河东区\", \"河東區\", \"hédōng qū\", \"35\", \"147944\", \"4227\"],[\"haitangwan\", \"海棠湾镇\", \"海棠灣鎮\", \"hǎitángwān zhèn\", \"254\", \"44617\", \"176\"],[\"jiyang\", \"吉阳镇\", \"吉陽鎮\", \"jíyáng zhèn\", \"199\", \"92316\", \"464\"],[\"fenghuang\", \"凤凰镇\", \"鳳凰鎮\", \"fènghuáng zhèn\", \"487\", \"66801\", \"137\"],[\"yacheng\", \"崖城镇\", \"崖城鎮\", \"yáchéng zhèn\", \"383\", \"74779\", \"195\"],[\"tianya\", \"天涯镇\", \"天涯鎮\", \"tiānyá zhèn\", \"269\", \"34934\", \"130\"],[\"yucai\", \"育才镇\", \"育才鎮\", \"yùcái zhèn\", \"315\", \"17515\", \"56\"],[\"nantian farm\", \"国营南田农场\", \"國營南田農場\", \"guóyíng nántián nóngchǎng\", \"nd\", \"24280\", \"nd\"],[\"nanxin farm\", \"国营南新农场\", \"國營南新農場\", \"guóyíng nánxīn nóngchǎng\", \"nd\", \"16801\", \"nd\"],[\"licai farm\", \"国营立才农场\", \"國營立才農場\", \"guóyíng lìcái nóngchǎng\", \"nd\", \"16659\", \"nd\"]]\nQuestion = Is it true that in english , 崖城镇 is translated as yacheng which has a population of 34934?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    english_names = get_column_by_name(table_data, \"english name\")\n    simplified_names = get_column_by_name(table_data, \"simplified\")\n    populations = get_column_by_name(table_data, \"population\")\n    for english_name, simplified_name, population in zip(english_names, simplified_names, populations):\n        if simplified_name == \"崖城镇\":\n            answer = equal_to(english_name, \"yacheng\") and equal_to(population, \"34934\")\n            break \n    return answer\n\n### END"}
{"id": "e3bfb5f7-cf64-479a-ab15-1ea14b1072a3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"title\", \"from album\", \"label\", \"label - nr\"],[\"1962\", \"tonight / sinnin' sam\", \"lookin' ahead\", \"pacific jazz\", \"x - 340\"],[\"1962\", \"the young rabbits / song of india\", \"lookin' ahead\", \"pacific jazz\", \"x - 342\"],[\"1962\", \"congolese sermon / weather beat\", \"(only on 45)\", \"pacific jazz\", \"x - 357\"],[\"1963\", \"no name samba / tough talk\", \"tough talk\", \"world pacific\", \"x - 371\"],[\"1963\", \"turkish black / boopie\", \"tough talk\", \"world pacific\", \"x - 388\"],[\"1963\", \"spanish castles / bluesette\", \"jazz waltz (w les mccann)\", \"world pacific\", \"406\"],[\"1964\", \"heat wave / on broadway\", \"heat wave\", \"world pacific\", \"401\"],[\"1964\", \"i remember tomorrow / long john\", \"stretchin' out\", \"world pacific\", \"412\"],[\"1965\", \"tough talk / the thing\", \"the thing\", \"world pacific\", \"77800\"],[\"1965\", \"aqua dulce / soul bourgeoisie\", \"chile con soul\", \"world pacific\", \"77806\"],[\"1966\", \"scratch / uptight\", \"talk that talk\", \"pacific jazz\", \"88125\"],[\"1968\", \"ooga - boo - ga - loo / eleanor rigby\", \"lighthouse '68\", \"pacific jazz\", \"88144\"],[\"1968\", \"hey jude / love and peace\", \"powerhouse\", \"pacific jazz\", \"88146\"],[\"1969\", \"get back / willie and laura mae jones\", \"lighthouse '69\", \"word pacific jazz\", \"88153\"],[\"1970\", \"way back home / jackson\", \"old socks , new shoes\", \"chisa\", \"c - 8010\"]]\nQuestion = Is it true that in 1965 , the thing had an album?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    titles = get_column_by_name(table_data, \"title\")\n    albums = get_column_by_name(table_data, \"from album\")\n    answer = False\n    for year, title, album in zip(years, titles, albums):\n        if \"1965\" in year and \"the thing\" in title.lower() and album != \"\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "e0a990b5-592e-4dc3-b200-d965b6c16cf0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sambo (martial art)\ntable_data = [[\"rank\", \"nation\", \"gold\", \"silver\", \"bronze\", \"total\"],[\"1\", \"russia\", \"200\", \"24\", \"82\", \"308\"],[\"2\", \"belarus\", \"12\", \"11\", \"19\", \"43\"],[\"3\", \"bulgaria\", \"12\", \"10\", \"22\", \"44\"],[\"4\", \"ukraine\", \"7\", \"17\", \"26\", \"50\"],[\"5\", \"kazakhstan\", \"4\", \"5\", \"23\", \"31\"],[\"6\", \"mongolia\", \"4\", \"7\", \"7\", \"18\"],[\"7\", \"lithuania\", \"2\", \"4\", \"11\", \"17\"],[\"8\", \"georgia\", \"2\", \"4\", \"8\", \"14\"],[\"9\", \"uzbekistan\", \"1\", \"8\", \"15\", \"24\"],[\"10\", \"kyrgyzstan\", \"1\", \"2\", \"4\", \"7\"],[\"10\", \"serbia\", \"1\", \"2\", \"4\", \"7\"],[\"12\", \"tajikistan\", \"1\", \"2\", \"3\", \"6\"],[\"13\", \"latvia\", \"1\", \"1\", \"3\", \"5\"],[\"14\", \"moldova\", \"1\", \"0\", \"5\", \"6\"],[\"15\", \"venezuela\", \"0\", \"3\", \"7\", \"10\"],[\"16\", \"armenia\", \"0\", \"2\", \"6\", \"8\"],[\"17\", \"azerbaijan\", \"0\", \"2\", \"4\", \"6\"],[\"18\", \"japan\", \"0\", \"1\", \"4\", \"5\"],[\"19\", \"france\", \"0\", \"1\", \"3\", \"4\"],[\"19\", \"romania\", \"0\", \"1\", \"3\", \"4\"],[\"19\", \"estonia\", \"0\", \"1\", \"3\", \"4\"],[\"22\", \"germany\", \"0\", \"1\", \"1\", \"2\"],[\"22\", \"colombia\", \"0\", \"1\", \"1\", \"2\"],[\"24\", \"israel\", \"0\", \"1\", \"0\", \"1\"],[\"25\", \"greece\", \"0\", \"0\", \"2\", \"2\"],[\"25\", \"spain\", \"0\", \"0\", \"2\", \"2\"],[\"27\", \"czech republic\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"indonesia\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"iran\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"jordan\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"united states\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"turkmenistan\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"south korea\", \"0\", \"0\", \"1\", \"1\"],[\"27\", \"slovenia\", \"0\", \"0\", \"1\", \"1\"],[\"total\", \"total\", \"245\", \"111\", \"207\", \"425\"]]\nQuestion = Is it true that there is only 1 team with more than 8 silver metal and a total of 50 metals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    silver_medals = get_column_by_name(table_data, \"silver\")\n    total_medals = get_column_by_name(table_data, \"total\")\n    count = 0\n    for silver, total in zip(silver_medals, total_medals):\n        if greater(int(silver), 8) and int(total) == 50:\n            count += 1\n    answer = count == 1\n    return answer\n\n### END"}
{"id": "22cc5b0b-64d9-4ec4-8039-3ed4dcc564af", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date\", \"visitor\", \"score\", \"home\", \"record\"],[\"february 2\", \"vancouver\", \"5 - 1\", \"california\", \"15 - 28 - 5\"],[\"february 4\", \"chicago\", \"6 - 2\", \"vancouver\", \"15 - 29 - 5\"],[\"february 6\", \"montreal\", \"4 - 2\", \"vancouver\", \"15 - 30 - 5\"],[\"february 8\", \"philadelphia\", \"3 - 1\", \"vancouver\", \"15 - 31 - 5\"],[\"february 10\", \"vancouver\", \"1 - 9\", \"boston\", \"15 - 32 - 5\"],[\"february 12\", \"vancouver\", \"4 - 5\", \"st louis\", \"15 - 33 - 5\"],[\"february 13\", \"vancouver\", \"4 - 6\", \"pittsburgh\", \"15 - 34 - 5\"],[\"february 15\", \"new york\", \"5 - 1\", \"vancouver\", \"15 - 35 - 5\"],[\"february 18\", \"st louis\", \"2 - 5\", \"vancouver\", \"16 - 35 - 5\"],[\"february 19\", \"vancouver\", \"3 - 5\", \"los angeles\", \"16 - 36 - 5\"],[\"february 22\", \"boston\", \"4 - 3\", \"vancouver\", \"16 - 37 - 5\"],[\"february 24\", \"vancouver\", \"0 - 2\", \"detroit\", \"16 - 38 - 5\"],[\"february 26\", \"vancouver\", \"1 - 7\", \"toronto\", \"16 - 39 - 5\"],[\"february 27\", \"vancouver\", \"3 - 3\", \"chicago\", \"16 - 39 - 6\"],[\"february 29\", \"vancouver\", \"2 - 8\", \"detroit\", \"16 - 40 - 6\"]]\nQuestion = Is it true that vancouver only played against chicago at home?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    visitors = get_column_by_name(table_data, \"visitor\")\n    homes = get_column_by_name(table_data, \"home\")\n    answer = \"vancouver\" in visitors and \"chicago\" in homes\n    return not answer\n\n### END"}
{"id": "0f0fa511-26a1-4da0-ba6a-ff20cf0a9a25", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date\",\"visitor\",\"score\",\"home\",\"decision\",\"record\"],[\"february 2\",\"phoenix\",\"2 - 3\",\"nashville\",\"ellis\",\"27 - 21 - 5\"],[\"february 5\",\"carolina\",\"0 - 1\",\"nashville\",\"ellis\",\"28 - 21 - 5\"],[\"february 7\",\"tampa bay\",\"2 - 1\",\"nashville\",\"ellis\",\"28 - 21 - 6\"],[\"february 9\",\"nashville\",\"3 - 4\",\"san jose\",\"ellis\",\"28 - 22 - 6\"],[\"february 10\",\"nashville\",\"6 - 3\",\"phoenix\",\"ellis\",\"29 - 22 - 6\"],[\"february 12\",\"detroit\",\"2 - 4\",\"nashville\",\"ellis\",\"30 - 22 - 6\"],[\"february 14\",\"chicago\",\"6 - 1\",\"nashville\",\"mason\",\"30 - 23 - 6\"],[\"february 16\",\"st louis\",\"1 - 2\",\"nashville\",\"ellis\",\"31 - 23 - 6\"],[\"february 17\",\"nashville\",\"4 - 5\",\"minnesota\",\"ellis\",\"31 - 23 - 7\"],[\"february 19\",\"edmonton\",\"4 - 5\",\"nashville\",\"ellis\",\"32 - 23 - 7\"],[\"february 21\",\"vancouver\",\"3 - 2\",\"nashville\",\"ellis\",\"32 - 23 - 8\"],[\"february 23\",\"dallas\",\"6 - 3\",\"nashville\",\"ellis\",\"32 - 24 - 8\"],[\"february 27\",\"nashville\",\"4 - 8\",\"buffalo\",\"mason\",\"32 - 25 - 8\"]]\nQuestion = Is it true that nashville played st louis at home with ellis as the decision on february 16th?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    visitors = get_column_by_name(table_data, \"visitor\")\n    homes = get_column_by_name(table_data, \"home\")\n    decisions = get_column_by_name(table_data, \"decision\")\n    for date, visitor, home, decision in zip(dates, visitors, homes, decisions):\n        if date.lower() == \"february 16\" and visitor.lower() == \"st louis\" and home.lower() == \"nashville\" and decision.lower() == \"ellis\":\n            return True\n    return False\n\n### END"}
{"id": "85989dff-eb84-4c1e-adc1-4246d5ec7de9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1974 formula one season\ntable_data = [[\"race\",\"circuit\",\"date\",\"pole position\",\"fastest lap\",\"winning driver\",\"constructor\",\"tyre\",\"report\"],[\"argentine grand prix\",\"buenos aires\",\"13 january\",\"ronnie peterson\",\"clay regazzoni\",\"denny hulme\",\"mclaren - ford\",\"g\",\"report\"],[\"brazilian grand prix\",\"interlagos\",\"27 january\",\"emerson fittipaldi\",\"clay regazzoni\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"south african grand prix\",\"kyalami\",\"30 march\",\"niki lauda\",\"carlos reutemann\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"],[\"spanish grand prix\",\"jarama\",\"28 april\",\"niki lauda\",\"niki lauda\",\"niki lauda\",\"ferrari\",\"g\",\"report\"],[\"belgian grand prix\",\"nivelles - baulers\",\"12 may\",\"clay regazzoni\",\"denny hulme\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"monaco grand prix\",\"monaco\",\"26 may\",\"niki lauda\",\"ronnie peterson\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"swedish grand prix\",\"anderstorp\",\"9 june\",\"patrick depailler\",\"patrick depailler\",\"jody scheckter\",\"tyrrell - ford\",\"g\",\"report\"],[\"dutch grand prix\",\"zandvoort\",\"23 june\",\"niki lauda\",\"ronnie peterson\",\"niki lauda\",\"ferrari\",\"g\",\"report\"],[\"french grand prix\",\"dijon - prenois\",\"7 july\",\"niki lauda\",\"jody scheckter\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"british grand prix\",\"brands hatch\",\"20 july\",\"niki lauda\",\"niki lauda\",\"jody scheckter\",\"tyrrell - ford\",\"g\",\"report\"],[\"german grand prix\",\"nürburgring\",\"4 august\",\"niki lauda\",\"jody scheckter\",\"clay regazzoni\",\"ferrari\",\"g\",\"report\"],[\"austrian grand prix\",\"österreichring\",\"18 august\",\"niki lauda\",\"clay regazzoni\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"],[\"italian grand prix\",\"monza\",\"8 september\",\"niki lauda\",\"carlos pace\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"canadian grand prix\",\"mosport park\",\"22 september\",\"emerson fittipaldi\",\"niki lauda\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"united states grand prix\",\"watkins glen\",\"6 october\",\"carlos reutemann\",\"carlos pace\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"]]\nQuestion = Is it true that jody scheckter had the fastest lap on 7 july at the french grand prix?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    races = get_column_by_name(table_data, \"race\")\n    dates = get_column_by_name(table_data, \"date\")\n    fastest_laps = get_column_by_name(table_data, \"fastest lap\")\n    answer = False\n    for race, date, fastest_lap in zip(races, dates, fastest_laps):\n        if \"french grand prix\" in race.lower() and \"7 july\" in date.lower():\n            if \"jody scheckter\" in fastest_lap.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "574b84b2-ea69-4c7e-9ef0-b26bea107a60", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = chameleon\ntable_data = [[\"scientific name\", \"common name\", \"length (male)\", \"length (female)\", \"color\", \"lifespan (years)\"],[\"chamaeleo calyptratus\", \"veiled chameleon\", \"14 - 24 in\", \"10 - 13 in\", \"green and light colors\", \"about 5\"],[\"trioceros jacksonii\", \"jackson 's chameleon\", \"9 - 13 in\", \"10 - 13 in\", \"green and light colors\", \"5 - 10\"],[\"furcifer pardalis\", \"panther chameleon\", \"15 - 21 in\", \"9 - 13 in\", \"darker colors\", \"about 5 (2 - 3 for birthing females)\"],[\"rieppeleon brevicaudatus\", \"bearded pygmy chameleon\", \"2 - 3 in\", \"2 - 3 in\", \"brown , beige , green\", \"about 3 - 5\"],[\"rhampholeon spectrum\", \"spectral pygmy chameleon\", \"3 - 4 in\", \"2 - 4 in\", \"tan and gray\", \"3 - 5\"]]\nQuestion = Is it true that furcifer pradalis aka panther chameleon has a length of 15 - 21 in for male and 9 - 13 in for female?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    scientific_names = get_column_by_name(table_data, \"scientific name\")\n    common_names = get_column_by_name(table_data, \"common name\")\n    male_lengths = get_column_by_name(table_data, \"length (male)\")\n    female_lengths = get_column_by_name(table_data, \"length (female)\")\n    for scientific_name, common_name, male_length, female_length in zip(scientific_names, common_names, male_lengths, female_lengths):\n        if scientific_name.lower() == \"furcifer pardalis\" or common_name.lower() == \"panther chameleon\":\n            answer = equal_to(male_length, \"15 - 21 in\") and equal_to(female_length, \"9 - 13 in\")\n            break \n    return answer\n\n### END"}
{"id": "f37a5a93-e2f6-4a89-bb29-b4ae223c282b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 u.s. women 's open golf championship\ntable_data = [[\"place\", \"player\", \"country\", \"score\", \"to par\", \"money\"],[\"1\", \"cristie kerr\", \"united states\", \"71 + 72 + 66 + 70 = 279\", \"- 5\", \"560000\"],[\"t2\", \"angela park\", \"brazil\", \"68 + 69 + 74 + 70 = 281\", \"- 3\", \"271022\"],[\"t2\", \"lorena ochoa\", \"mexico\", \"71 + 71 + 68 + 71 = 281\", \"- 3\", \"271022\"],[\"t4\", \"se ri pak\", \"south korea\", \"74 + 72 + 68 + 68 = 282\", \"- 2\", \"130549\"],[\"t4\", \"inbee park\", \"south korea\", \"69 + 73 + 71 + 69 = 282\", \"- 2\", \"130549\"],[\"6\", \"jiyai shin\", \"south korea\", \"70 + 69 + 71 + 74 = 284\", \"e\", \"103581\"],[\"7\", \"jee young lee\", \"south korea\", \"72 + 71 + 71 + 71 = 285\", \"+ 1\", \"93031\"],[\"t8\", \"mi hyun kim\", \"south korea\", \"71 + 75 + 70 + 70 = 286\", \"+ 2\", \"82464\"],[\"t8\", \"jeong jang\", \"south korea\", \"72 + 71 + 70 + 73 = 286\", \"+ 2\", \"82464\"],[\"t10\", \"ai miyazato\", \"japan\", \"73 + 73 + 72 + 69 = 287\", \"+ 3\", \"66177\"],[\"t10\", \"kyeong bae\", \"south korea\", \"74 + 71 + 72 + 70 = 287\", \"+ 3\", \"66177\"],[\"t10\", \"julieta granada\", \"paraguay\", \"70 + 69 + 75 + 73 = 287\", \"+ 3\", \"66177\"],[\"t10\", \"morgan pressel\", \"united states\", \"71 + 70 + 69 + 77 = 287\", \"+ 3\", \"66177\"]]\nQuestion = Is it true that 66177 was made in total by cristie kerr?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    money = get_column_by_name(table_data, \"money\")\n    for player, money_made in zip(players, money):\n        if player.lower() == \"cristie kerr\":\n            answer = equal_to(money_made, \"66177\")\n            break \n    return answer\n\n### END"}
{"id": "76d51adb-ef24-4419-8dde-f795f194fffb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = anna kournikova career statistics\ntable_data = [[\"outcome\", \"year\", \"championship\", \"surface\", \"partner\", \"opponents in final\", \"score in final\"],[\"winners\", \"1999\", \"indian wells\", \"hard\", \"martina hingis\", \"mary joe fernández jana novotná\", \"6 - 2 , 6 - 2\"],[\"winners\", \"1999\", \"rome\", \"clay\", \"martina hingis\", \"alexandra fusai nathalie tauziat\", \"6 - 2 , 6 - 2\"],[\"runner - up\", \"2000\", \"indian wells\", \"hard\", \"natasha zvereva\", \"lindsay davenport corina morariu\", \"6 - 3 , 6 - 2\"],[\"runner - up\", \"2000\", \"moscow\", \"carpet\", \"martina hingis\", \"julie halard - decugis ai sugiyama\", \"4 - 6 , 6 - 4 , 7 - 6 (7 - 5)\"],[\"winners\", \"2000\", \"zürich\", \"carpet\", \"martina hingis\", \"kimberly po anne - gaëlle sidot\", \"6 - 3 , 6 - 4\"],[\"runner - up\", \"2001\", \"tokyo\", \"hard\", \"iroda tulyaganova\", \"lisa raymond rennae stubbs\", \"7 - 6 (7 - 5) , 6 - 2 , 7 - 6 (8 - 6)\"]]\nQuestion = Is it true that the score in final of the moscow championship was 4 - 6 , 6 - 4 , 7 - 6 (7 - 5)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    championships = get_column_by_name(table_data, \"championship\")\n    scores = get_column_by_name(table_data, \"score in final\")\n    for championship, score in zip(championships, scores):\n        if championship.lower() == \"moscow\":\n            answer = equal_to(score, \"4 - 6 , 6 - 4 , 7 - 6 (7 - 5)\")\n            break \n    return answer\n\n### END"}
{"id": "fcbff322-e1e5-481d-b1fb-399460b13653", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = media in fargo - moorhead\ntable_data = [[\"frequency\", \"call sign\", \"name\", \"format\", \"owner\"],[\"88.7 fm\", \"kfbn\", \"heaven 88.7\", \"christian\", \"fargo baptist church\"],[\"90.3 fm\", \"kccd\", \"minnesota public radio / npr\", \"news / talk\", \"minnesota public radio\"],[\"91.1 fm\", \"kccm\", \"minnesota public radio / npr\", \"classical\", \"minnesota public radio\"],[\"91.9 fm\", \"kdsu\", \"prairie public / npr\", \"adult album alternative\", \"north dakota state university\"],[\"92.7 fm\", \"kzdr\", \"92.7 the bone\", \"active rock\", \"mediactive\"],[\"93.7 fm\", \"wday - fm\", \"y94\", \"top 40 (chr)\", \"radio fargo - moorhead\"],[\"95.1 fm\", \"kbvb\", \"bob 95 fm\", \"country\", \"radio fargo - moorhead\"],[\"95.9 fm\", \"kxbq - lp\", \"dive 95.9\", \"alternative\", \"women 's care clinic\"],[\"96.3 fm\", \"knds - lp\", \"thunderradio radio free fargo\", \"college\", \"north dakota state university\"],[\"97.9 fm\", \"kfnw - fm\", \"life 97.9\", \"contemporary christian music\", \"northwestern college\"],[\"98.7 fm\", \"klta\", \"big 98.7\", \"adult chr\", \"triad broadcasting\"],[\"99.3 fm\", \"k257ep\", \"k - love\", \"contemporary christian music ( kklq translator )\", \"educational media foundation\"],[\"99.9 fm\", \"kvox - fm\", \"froggy 99.9\", \"country\", \"triad broadcasting\"],[\"100.7 fm\", \"kklq\", \"k - love\", \"contemporary christian music\", \"educational media foundation\"],[\"101.9 fm\", \"krwk\", \"101.9 talk fm\", \"talk\", \"radio fargo - moorhead\"],[\"103.3 fm\", \"kzcr\", \"z 103.3\", \"rock / aaa\", \"jerry papenfuss\"],[\"103.9 fm\", \"kvmi\", \"103.9 the truck\", \"country\", \"vision media incorporated\"],[\"104.1 fm\", \"kbot\", \"104.1 the wave\", \"adult contemporary\", \"leighton broadcasting\"],[\"104.7 fm\", \"kmjo\", \"104.7 popster fm\", \"adult hits\", \"radio fargo - moorhead\"],[\"105.1 fm\", \"kqwb\", \"q 105.1\", \"active rock\", \"triad broadcasting\"],[\"106.1 fm\", \"kqlx - fm\", \"thunder 106.1\", \"classic country\", \"great plains integrated marketing\"],[\"106.5 fm\", \"krjb\", \"krjb 106.5\", \"country\", \"r&j broadcasting\"],[\"106.9 fm\", \"kegk\", \"eagle 106.9\", \"classic hits\", \"great plains integrated marketing\"],[\"107.9 fm\", \"kpfx\", \"107.9 the fox\", \"classic rock\", \"triad broadcasting\"]]\nQuestion = Is it true that mediactive owns the call sign kpfx?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    call_signs = get_column_by_name(table_data, \"call sign\")\n    owners = get_column_by_name(table_data, \"owner\")\n    answer = False\n    for call_sign, owner in zip(call_signs, owners):\n        if call_sign.lower() == \"kpfx\" and owner.lower() == \"mediactive\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "d6280c87-a271-48e8-8843-103e7c48dc67", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = air macau destinations\ntable_data = [[\"city\",\"country\",\"iata\",\"icao\",\"airport\"],[\"bangkok\",\"thailand\",\"bkk\",\"vtbs\",\"suvarnabhumi airport\"],[\"beijing\",\"china\",\"pek\",\"zbaa\",\"beijing capital international airport\"],[\"changsha\",\"china\",\"csx\",\"zgha\",\"changsha huanghua international airport\"],[\"chengdu\",\"china\",\"ctu\",\"zuuu\",\"chengdu shuangliu international airport\"],[\"chongqing\",\"china\",\"ckg\",\"zuck\",\"chongqing jiangbei international airport\"],[\"hangzhou\",\"china\",\"hgh\",\"zshc\",\"hangzhou xiaoshan international airport\"],[\"hefei\",\"china\",\"hfe\",\"zsof\",\"hefei luogang international airport\"],[\"kaohsiung\",\"taiwan\",\"khh\",\"rckh\",\"kaohsiung international airport\"],[\"macau\",\"macau\",\"mfm\",\"vmmc\",\"macau international airport\"],[\"nanjing\",\"china\",\"nkg\",\"zsnj\",\"nanjing lukou international airport\"],[\"nanning\",\"china\",\"nng\",\"zgnn\",\"nanning wuxu international airport\"],[\"ningbo\",\"china\",\"ngb\",\"zsnb\",\"ningbo lishe international airport\"],[\"osaka\",\"japan\",\"kix\",\"rjbb\",\"kansai international airport\"],[\"seoul\",\"south korea\",\"icn\",\"rksi\",\"incheon international airport\"],[\"shanghai\",\"china\",\"sha\",\"zsss\",\"shanghai hongqiao international airport\"],[\"shanghai\",\"china\",\"pvg\",\"zspd\",\"shanghai pudong international airport\"],[\"shenyang\",\"china\",\"she\",\"zytx\",\"shenyang taoxian international airport\"],[\"shenzhen\",\"china\",\"szx\",\"zgsz\",\"shenzhen bao'an international airport\"],[\"singapore\",\"singapore\",\"sin\",\"wsss\",\"singapore changi airport\"],[\"taipei\",\"taiwan\",\"tpe\",\"rctp\",\"taiwan taoyuan international airport\"],[\"taiyuan\",\"china\",\"tyn\",\"zbyn\",\"taiyuan wusu airport\"],[\"tokyo\",\"japan\",\"nrt\",\"rjaa\",\"narita international airport\"],[\"xiamen\",\"china\",\"xmn\",\"zsam\",\"xiamen gaoqi international airport\"],[\"wenzhou\",\"china\",\"wnz\",\"zswz\",\"wenzhou yongqiang international airport\"]]\nQuestion = Is it true that the shanghai pudong international airport is in china?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    airports = get_column_by_name(table_data, \"airport\")\n    countries = get_column_by_name(table_data, \"country\")\n    answer = False\n    for airport, country in zip(airports, countries):\n        if \"shanghai pudong international airport\" in airport.lower():\n            if \"china\" in country.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "fdbd6e1e-2faa-4c7e-b9c4-2a06b45c7ab3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of south american countries by gdp (ppp) per capita\ntable_data = [[\"south american rank\", \"world rank\", \"nation\", \"2011 (imf)\", \"2008 (cia factbook)\"],[\"1\", \"51\", \"argentina\", \"17376\", \"14500\"],[\"2\", \"55\", \"chile\", \"16171\", \"15400\"],[\"3\", \"59\", \"uruguay\", \"15469\", \"12300\"],[\"4\", \"71\", \"venezuela\", \"12407\", \"13500\"],[\"5\", \"74\", \"brazil\", \"11845\", \"10513\"],[\"6\", \"82\", \"colombia\", \"10155\", \"9000\"],[\"7\", \"83\", \"peru\", \"10000\", \"8500\"],[\"8\", \"86\", \"suriname\", \"9492\", \"8900\"],[\"9\", \"91\", \"ecuador\", \"8335\", \"7700\"],[\"10\", \"96\", \"guyana\", \"7541\", \"4000\"],[\"11\", \"110\", \"paraguay\", \"5548\", \"4400\"]]\nQuestion = Is it true that chile held the 3rd south american rank and the 59th world rank?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    south_american_ranks = get_column_by_name(table_data, \"south american rank\")\n    world_ranks = get_column_by_name(table_data, \"world rank\")\n    nations = get_column_by_name(table_data, \"nation\")\n    for south_american_rank, world_rank, nation in zip(south_american_ranks, world_ranks, nations):\n        if nation.lower() == \"chile\":\n            answer = equal_to(south_american_rank, \"3\") and equal_to(world_rank, \"59\")\n            break \n    return answer\n\n### END"}
{"id": "af0dada3-b4f7-49c5-9fa0-dcb5e6b92055", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = wagnney fabiano\ntable_data = [[\"res\",\"record\",\"opponent\",\"method\",\"event\",\"round\",\"time\",\"location\"],[\"loss\",\"15 - 4\",\"rad martinez\",\"decision (unanimous)\",\"bellator 80\",\"3\",\"5:00\",\"hollywood , florida , united states\"],[\"win\",\"15 - 3\",\"akop stepanyan\",\"submission (armbar)\",\"bellator 76\",\"1\",\"3:24\",\"windsor , ontario , canada\"],[\"loss\",\"14 - 3\",\"joseph benavidez\",\"submission (guillotine choke)\",\"wec 52\",\"2\",\"2:45\",\"las vegas , nevada , united states\"],[\"win\",\"14 - 2\",\"frank gomez\",\"decision (unanimous)\",\"wec 49\",\"3\",\"5:00\",\"edmonton , alberta , canada\"],[\"win\",\"13 - 2\",\"clint godfrey\",\"decision (unanimous)\",\"wec 46\",\"3\",\"5:00\",\"sacramento , california , united states\"],[\"loss\",\"12 - 2\",\"mackens semerzier\",\"submission (triangle choke)\",\"wec 43\",\"1\",\"2:14\",\"san antonio , texas , united states\"],[\"win\",\"12 - 1\",\"fredson paixão\",\"decision (unanimous)\",\"wec 40\",\"3\",\"5:00\",\"chicago , illinois , united states\"],[\"win\",\"11 - 1\",\"akitoshi tamura\",\"submission (arm - triangle choke)\",\"wec 37\",\"3\",\"4:48\",\"las vegas , nevada , united states\"],[\"win\",\"10 - 1\",\"shad lierley\",\"ko (punch)\",\"ifl : new blood , new battles 2\",\"1\",\"0:37\",\"east rutherford , new jersey , united states\"],[\"win\",\"9 - 1\",\"lc davis\",\"submission (armbar)\",\"ifl : world grand prix finals\",\"1\",\"3:38\",\"uncasville , connecticut , united states\"],[\"win\",\"8 - 1\",\"john gunderson\",\"submission (guillotine choke)\",\"ifl : world grand prix semifinals\",\"2\",\"1:53\",\"chicago , illinois , united states\"],[\"win\",\"7 - 1\",\"erik owings\",\"submission (armbar)\",\"ifl : las vegas\",\"1\",\"0:58\",\"las vegas , nevada , united states\"],[\"win\",\"6 - 1\",\"cam ward\",\"submission (arm - triangle choke)\",\"ifl : connecticut\",\"1\",\"3:24\",\"uncasville , connecticut , united states\"],[\"win\",\"5 - 1\",\"ian loveland\",\"submission (arm - triangle choke)\",\"ifl : atlanta\",\"1\",\"0:59\",\"atlanta , georgia , united states\"],[\"loss\",\"4 - 1\",\"jeff curran\",\"decision (split)\",\"apex : a night of champions\",\"3\",\"5:00\",\"gatineau , quebec , canada\"],[\"win\",\"4 - 0\",\"bao quach\",\"ko (head kick)\",\"apex : evolution\",\"1\",\"4:50\",\"gatineau , quebec , canada\"],[\"win\",\"3 - 0\",\"matt fiordirosa\",\"decision (unanimous)\",\"freedom fights : canada vs usa\",\"3\",\"5:00\",\"hull , quebec , canada\"],[\"win\",\"2 - 0\",\"tommy lee\",\"submission (arm - triangle choke)\",\"tko 16: infernal\",\"1\",\"2:46\",\"quebec city , quebec , canada\"],[\"win\",\"1 - 0\",\"ali nestor charles\",\"decision (unanimous)\",\"ucc 1: the new beginning\",\"2\",\"10:00\",\"montreal , quebec , canada\"]]\nQuestion = Is it true that ucc 1: the new beginning was the event with the record 1 - 0?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    records = get_column_by_name(table_data, \"record\")\n    events = get_column_by_name(table_data, \"event\")\n    for record, event in zip(records, events):\n        if record == \"1 - 0\":\n            answer = equal_to(event, \"ucc 1: the new beginning\")\n            break \n    return answer\n\n### END"}
{"id": "27fcb459-6d04-4718-a2c1-0976468a8c11", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 - 02 prva hnl\ntable_data = [[\"team\",\"manager\",\"home city\",\"stadium\",\"capacity\"],[\"cibalia\",\"davor čop\",\"vinkovci\",\"stadion hnk cibalia\",\"9920\"],[\"čakovec\",\"rajko magić\",\"čakovec\",\"stadion src mladost\",\"8000\"],[\"dinamo zagreb\",\"ilija lončarević\",\"zagreb\",\"stadion maksimir\",\"37168\"],[\"hajduk split\",\"nenad gračan\",\"split\",\"gradski stadion u poljudu\",\"35000\"],[\"hrvatski dragovoljac\",\"luka bonačić\",\"zagreb\",\"stadion nšc stjepan spajić\",\"5000\"],[\"kamen ingrad\",\"tomislav radić\",\"velika\",\"stadion kamen ingrada\",\"8000\"],[\"marsonia\",\"milo nižetić\",\"slavonski brod\",\"gradski stadion uz savu\",\"10000\"],[\"osijek\",\"vlado bilić\",\"osijek\",\"stadion gradski vrt\",\"19500\"],[\"pomorac\",\"predrag stilinović\",\"kostrena\",\"stadion žuknica\",\"3000\"],[\"rijeka\",\"ivan katalinić\",\"rijeka\",\"stadion na kantridi\",\"10275\"],[\"slaven belupo\",\"dražen besek\",\"koprivnica\",\"gradski stadion u koprivnici\",\"4000\"],[\"šibenik\",\"vjekoslav lokica\",\"šibenik\",\"stadion šubićevac\",\"8000\"],[\"tšk topolovac\",\"ivica vidović\",\"topolovac\",\"gradski stadion sisak\",\"8000\"],[\"varteks\",\"branko janžek\",\"varaždin\",\"stadion nk varteks\",\"10800\"],[\"zadar\",\"stanko mršić\",\"zadar\",\"stadion stanovi\",\"5860\"],[\"nk zagreb\",\"zlatko kranjčar\",\"zagreb\",\"stadion u kranjčevićevoj ulici\",\"8850\"]]\nQuestion = Is it true that zagreb is the location of stadion nsc stjepan spajic with a capacity of 5000 , as well as stadion u kranjcevicevoj ulici , with a capacity of 8850?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_cities = get_column_by_name(table_data, \"home city\")\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    capacities = get_column_by_name(table_data, \"capacity\")\n    answer = False\n    for home_city, stadium, capacity in zip(home_cities, stadiums, capacities):\n        if home_city.lower() == \"zagreb\" and stadium.lower() == \"stadion nšc stjepan spajić\" and capacity == \"5000\":\n            answer = True\n        if home_city.lower() == \"zagreb\" and stadium.lower() == \"stadion u kranjčevićevoj ulici\" and capacity == \"8850\":\n            answer = True\n    return answer\n\n### END"}
{"id": "641867d1-6a3a-4390-b09c-91ad9bf3f86b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of radio stations in tamaulipas\ntable_data = [[\"frequency\", \"callsign\", \"brand\", \"city of license\", \"type\"],[\"580\", \"xehp\", \"la mas prendida\", \"ciudad victoria\", \"norteño\"],[\"640\", \"xetam\", \"la poderosa\", \"santa elena\", \"norteño\"],[\"970\", \"xebj - am\", \"radio 970\", \"ciudad victoria\", \"contemporary\"],[\"1340\", \"xerpv - am\", \"la cotorra\", \"ciudad victoria\", \"norteño\"],[\"1380\", \"xegw\", \"planeta w 1380\", \"ciudad victoria\", \"christian pop\"],[\"1480\", \"xevic\", \"radio tamaulipas\", \"ciudad victoria\", \"state government\"]]\nQuestion = Is it true that the frequency 580 is from the brand la poderosa?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    brands = get_column_by_name(table_data, \"brand\")\n    for frequency, brand in zip(frequencies, brands):\n        if frequency == \"580\":\n            answer = equal_to(brand, \"la poderosa\")\n            break \n    return answer\n\n### END"}
{"id": "05488f92-a9e4-4a89-a223-59ea135a6567", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = myrtle beach 250\ntable_data = [[\"year\", \"date\", \"driver\", \"manufacturer\", \"laps\", \"-\", \"race time\", \"average speed (mph)\"],[\"1988\", \"july 2\", \"rob moroso\", \"oldsmobile\", \"200\", \"107.6 (173.165)\", \"1:36:04\", \"66.971\"],[\"1989\", \"july 4\", \"jimmy spencer\", \"buick\", \"200\", \"107.6 (173.165)\", \"1:25:01\", \"75.938\"],[\"1990\", \"june 30\", \"mark martin\", \"ford\", \"200\", \"107.6 (173.165)\", \"1:24:52\", \"76.072\"],[\"1991\", \"june 22\", \"chuck bown\", \"pontiac\", \"250\", \"134.5 (216.456)\", \"1:49:15\", \"73.867\"],[\"1992\", \"june 20\", \"jimmy spencer\", \"oldsmobile\", \"250\", \"134.5 (216.456)\", \"2:21:14\", \"57.139\"],[\"1993\", \"june 12\", \"jeff burton\", \"ford\", \"250\", \"134.5 (216.456)\", \"1:56:59\", \"68.984\"],[\"1994\", \"june 11\", \"elton sawyer\", \"ford\", \"250\", \"134.5 (216.456)\", \"2:01:18\", \"66.529\"],[\"1995\", \"june 10\", \"larry pearson\", \"chevrolet\", \"250\", \"134.5 (216.456)\", \"1:41:23\", \"79.599\"],[\"1996\", \"june 22\", \"david green\", \"chevrolet\", \"250\", \"134.5 (216.456)\", \"1:53:35\", \"71.049\"],[\"1997\", \"july 12\", \"elliott sadler\", \"chevrolet\", \"250\", \"134.5 (216.456)\", \"1:39:07\", \"81.419\"],[\"1998\", \"july 11\", \"randy lajoie\", \"chevrolet\", \"250\", \"134.5 (216.456)\", \"1:36:56\", \"80.754\"],[\"1999\", \"july 17\", \"jeff green\", \"chevrolet\", \"250\", \"134.5 (216.456)\", \"1:35:52\", \"84.179\"]]\nQuestion = Is it true that mark martin raced in 1990?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    years = get_column_by_name(table_data, \"year\")\n    answer = False\n    for driver, year in zip(drivers, years):\n        if driver.lower() == \"mark martin\" and year == \"1990\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "649570d0-ec32-4571-8e55-7fca112fdf62", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1990 formula one season\ntable_data = [[\"round\", \"grand prix\", \"date\", \"location\", \"pole position\", \"fastest lap\", \"winning driver\", \"winning constructor\", \"report\"],[\"1\", \"united states grand prix\", \"11 march\", \"phoenix\", \"gerhard berger\", \"gerhard berger\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"2\", \"brazilian grand prix\", \"25 march\", \"interlagos\", \"ayrton senna\", \"gerhard berger\", \"alain prost\", \"ferrari\", \"report\"],[\"3\", \"san marino grand prix\", \"13 may\", \"imola\", \"ayrton senna\", \"alessandro nannini\", \"riccardo patrese\", \"williams - renault\", \"report\"],[\"4\", \"monaco grand prix\", \"27 may\", \"monaco\", \"ayrton senna\", \"ayrton senna\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"5\", \"canadian grand prix\", \"10 june\", \"circuit gilles villeneuve\", \"ayrton senna\", \"gerhard berger\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"6\", \"mexican grand prix\", \"24 june\", \"hermanos rodrã­guez\", \"gerhard berger\", \"alain prost\", \"alain prost\", \"ferrari\", \"report\"],[\"7\", \"french grand prix\", \"8 july\", \"paul ricard\", \"nigel mansell\", \"nigel mansell\", \"alain prost\", \"ferrari\", \"report\"],[\"8\", \"british grand prix\", \"15 july\", \"silverstone\", \"nigel mansell\", \"nigel mansell\", \"alain prost\", \"ferrari\", \"report\"],[\"9\", \"german grand prix\", \"29 july\", \"hockenheimring\", \"ayrton senna\", \"thierry boutsen\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"10\", \"hungarian grand prix\", \"12 august\", \"hungaroring\", \"thierry boutsen\", \"riccardo patrese\", \"thierry boutsen\", \"williams - renault\", \"report\"],[\"11\", \"belgian grand prix\", \"26 august\", \"spa - francorchamps\", \"ayrton senna\", \"alain prost\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"12\", \"italian grand prix\", \"9 september\", \"monza\", \"ayrton senna\", \"ayrton senna\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"13\", \"portuguese grand prix\", \"23 september\", \"estoril\", \"nigel mansell\", \"riccardo patrese\", \"nigel mansell\", \"ferrari\", \"report\"],[\"14\", \"spanish grand prix\", \"30 september\", \"jerez\", \"ayrton senna\", \"riccardo patrese\", \"alain prost\", \"ferrari\", \"report\"],[\"15\", \"japanese grand prix\", \"21 october\", \"suzuka\", \"ayrton senna\", \"riccardo patrese\", \"nelson piquet\", \"benetton - ford\", \"report\"]]\nQuestion = Is it true that circuit gilles villeneuve is the location for the french grand prix on 8 july?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    locations = get_column_by_name(table_data, \"location\")\n    grand_prix = get_column_by_name(table_data, \"grand prix\")\n    answer = False\n    for date, location, gp in zip(dates, locations, grand_prix):\n        if \"8 july\" in date.lower() and \"french grand prix\" in gp.lower():\n            answer = \"circuit gilles villeneuve\" in location.lower()\n            break\n    return answer\n\n### END"}
{"id": "558994cc-f77b-4a76-ac21-f92305a718ed", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"division\", \"league\", \"regular season\", \"playoffs\", \"open cup\"],[\"1997\", \"3\", \"usisl d - 3 pro league\", \"6th , mid atlantic\", \"did not qualify\", \"did not qualify\"],[\"1998\", \"3\", \"usisl d - 3 pro league\", \"1st , mid atlantic\", \"division semifinals\", \"did not qualify\"],[\"1999\", \"3\", \"usl d - 3 pro league\", \"2nd , northern\", \"final\", \"did not qualify\"],[\"2000\", \"3\", \"usl d - 3 pro league\", \"2nd , northern\", \"conference quarterfinals\", \"did not qualify\"],[\"2001\", \"3\", \"usl d - 3 pro league\", \"6th , northern\", \"did not qualify\", \"did not qualify\"],[\"2002\", \"3\", \"usl d - 3 pro league\", \"4th , atlantic\", \"did not qualify\", \"2nd round\"],[\"2003\", \"4\", \"usl pdl\", \"4th , northeast\", \"did not qualify\", \"did not qualify\"],[\"2004\", \"4\", \"usl pdl\", \"1st , northeast\", \"conference finals\", \"2nd round\"],[\"2005\", \"4\", \"usl pdl\", \"2nd , northeast\", \"conference semi - finals\", \"3rd round\"],[\"2006\", \"4\", \"usl pdl\", \"2nd , northeast\", \"did not qualify\", \"did not qualify\"],[\"2007\", \"4\", \"usl pdl\", \"2nd , mid atlantic\", \"conference semi - finals\", \"2nd round\"],[\"2008\", \"4\", \"usl pdl\", \"5th , northeast\", \"did not qualify\", \"did not qualify\"],[\"2009\", \"4\", \"usl pdl\", \"3rd , northeast\", \"pdl quarter - finals\", \"3rd round\"],[\"2010\", \"4\", \"usl pdl\", \"6th , mid atlantic\", \"did not qualify\", \"did not qualify\"],[\"2011\", \"4\", \"usl pdl\", \"7th , mid atlantic\", \"did not qualify\", \"did not qualify\"],[\"2012\", \"4\", \"usl pdl\", \"1st , mid atlantic\", \"conference semi - finals\", \"did not qualify\"]]\nQuestion = Is it true that regular season 2nd , northern make it to the final playoffs in 1999 in division 3?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    divisions = get_column_by_name(table_data, \"division\")\n    regular_seasons = get_column_by_name(table_data, \"regular season\")\n    playoffs = get_column_by_name(table_data, \"playoffs\")\n    answer = False\n    for division, regular_season, playoff in zip(divisions, regular_seasons, playoffs):\n        if division == \"3\" and regular_season == \"2nd , northern\" and playoff == \"final\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "bc6cedda-538b-41f5-b514-0dee4196b151", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 bdo world darts championship\ntable_data = [[\"player\", \"played\", \"sets won\", \"sets lost\", \"legs won\", \"legs lost\", \"100 +\", \"140 +\", \"180s\", \"high checkout\", \"3 - dart average\"],[\"anastasia dobromyslova\", \"3\", \"6\", \"0\", \"18\", \"4\", \"32\", \"16\", \"1\", \"94\", \"79.07\"],[\"dee bateman\", \"1\", \"0\", \"2\", \"2\", \"6\", \"9\", \"2\", \"0\", \"40\", \"69.72\"],[\"francis hoenselaar\", \"1\", \"0\", \"2\", \"1\", \"6\", \"6\", \"2\", \"1\", \"40\", \"53.19\"],[\"stephanie smee\", \"2\", \"2\", \"2\", \"6\", \"7\", \"21\", \"4\", \"0\", \"101\", \"65.36\"],[\"karin krappen\", \"2\", \"2\", \"3\", \"8\", \"11\", \"22\", \"7\", \"2\", \"116\", \"67.01\"],[\"rilana erades\", \"1\", \"1\", \"2\", \"5\", \"6\", \"7\", \"4\", \"1\", \"40\", \"64.80\"],[\"trina gulliver\", \"3\", \"4\", \"3\", \"16\", \"11\", \"27\", \"15\", \"4\", \"103\", \"75.02\"],[\"julie gore\", \"1\", \"1\", \"2\", \"3\", \"8\", \"15\", \"2\", \"0\", \"52\", \"68.01\"]]\nQuestion = Is it true that there was one instance of a 3 - dart average being 53.19 with less than 4 sets won?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    sets_won = get_column_by_name(table_data, \"sets won\")\n    three_dart_average = get_column_by_name(table_data, \"3 - dart average\")\n    for sets, average in zip(sets_won, three_dart_average):\n        if less_than(int(sets), 4) and equal_to(float(average), 53.19):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "23d7eb76-aeae-4b70-abe2-089406c98df2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = meaghan francella\ntable_data = [[\"year\", \"tournaments played\", \"cuts made\", \"wins\", \"2nd\", \"top 10s\", \"best finish\", \"earnings\", \"money list rank\", \"scoring average\", \"scoring rank\"],[\"2005\", \"1\", \"1\", \"0\", \"0\", \"0\", \"t69\", \"2525\", \"n / a\", \"75.00\", \"n / a\"],[\"2006\", \"3\", \"1\", \"0\", \"0\", \"0\", \"t39\", \"55554\", \"183\", \"73.75\", \"n / a\"],[\"2007\", \"25\", \"18\", \"1\", \"0\", \"4\", \"1\", \"507292\", \"29\", \"73.09\", \"66\"],[\"2008\", \"24\", \"11\", \"0\", \"0\", \"0\", \"t13\", \"117682\", \"88\", \"73.75\", \"131\"],[\"2009\", \"22\", \"16\", \"0\", \"0\", \"2\", \"t5\", \"292266\", \"48\", \"72.51\", \"63\"],[\"2010\", \"21\", \"17\", \"0\", \"0\", \"1\", \"t7\", \"168016\", \"57\", \"73.04\", \"77\"],[\"2011\", \"15\", \"8\", \"0\", \"0\", \"0\", \"t22\", \"66813\", \"84\", \"74.23\", \"117\"],[\"2012\", \"15\", \"4\", \"0\", \"0\", \"0\", \"t24\", \"28935\", \"116\", \"74.37\", \"121\"]]\nQuestion = Is it true that there were no wins when the money list rank was 183?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    wins = get_column_by_name(table_data, \"wins\")\n    money_list_ranks = get_column_by_name(table_data, \"money list rank\")\n    for win, money_list_rank in zip(wins, money_list_ranks):\n        if money_list_rank == \"183\":\n            answer = equal_to(win, \"0\")\n            break \n    return answer\n\n### END"}
{"id": "f81d7741-58fc-42e7-bc38-f79d3a7f6f24", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = english cricket team in australia in 1911 - 12\ntable_data = [[\"date\", \"home captain\", \"away captain\", \"venue\", \"result\"],[\"15 , 16 , 18 , 19 , 20 , 21 dec 1911\", \"clem hill\", \"johnny douglas\", \"sydney cricket ground\", \"aus by 146 runs\"],[\"30 dec , 1 , 2 , 3 jan 1911 / 2\", \"clem hill\", \"johnny douglas\", \"melbourne cricket ground\", \"eng by 8 wkts\"],[\"12 , 13 , 15 , 16 , 17 jan 1912\", \"clem hill\", \"johnny douglas\", \"adelaide oval\", \"eng by 7 wkts\"],[\"9 , 10 , 12 , 13 feb 1912\", \"clem hill\", \"johnny douglas\", \"melbourne cricket ground\", \"eng by inns&225 runs\"],[\"23 , 24 , 26 , 27 , 28 , 29 feb , 1 mar 1912\", \"clem hill\", \"johnny douglas\", \"sydney cricket ground\", \"eng by 70 runs\"]]\nQuestion = Is it true that clem hill was the home captain at adelaide oval?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_captains = get_column_by_name(table_data, \"home captain\")\n    venues = get_column_by_name(table_data, \"venue\")\n    answer = False\n    for home_captain, venue in zip(home_captains, venues):\n        if \"clem hill\" in home_captain.lower() and \"adelaide oval\" in venue.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "ffd05a1c-4856-4fe1-b544-7f95e8b15779", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = dock jumping\ntable_data = [[\"date\", \"distance\", \"handler\", \"event\", \"location\"],[\"7 july 2000\", \"ft4in (m)\", \"beth gutteridge\", \"espn great outdoor games\", \"lake placid , ny\"],[\"8 july 2001\", \"ft1in (m)\", \"mike wallace\", \"espn great outdoor games\", \"lake placid , ny\"],[\"20 february 2002\", \"ft3in (m)\", \"mike jackson\", \"indianapolis boat , sport & travel show\", \"indianapolis , in\"],[\"1 may 2002\", \"ft4in (m)\", \"john kline\", \"espn2 super retriever series\", \"northfield , mn\"],[\"6 july 2002\", \"ft6in (m)\", \"mike jackson\", \"espn great outdoor games\", \"lake placid , ny\"],[\"7 august 2005\", \"ft5in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"21 august 2005\", \"ft7in (m)\", \"kevin meese\", \"big nickle time cabela 's\", \"hamburg , pa\"],[\"9 october 2005\", \"ft10in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"30 may 2010\", \"ft11.59in (m)\", \"rande murphy\", \"super retriever series crown championship\", \"little rock , ar\"],[\"11 july 2010\", \"ft1in (m)\", \"melissa ness\", \"2010 ukc premier\", \"richmond , in\"],[\"29 may 2011\", \"ft7in (m)\", \"tony lampert\", \"super retriever series crown championship\", \"little rock , ar\"],[\"07 oct 2011\", \"ft11in (m)\", \"tony lampert\", \"david letterman show , october 7 2011\", \"new york , ny\"]]\nQuestion = Is it true that mike jackson was the handler at the indianapolis boat , sport & travel show on february 20 , 2002?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    handlers = get_column_by_name(table_data, \"handler\")\n    events = get_column_by_name(table_data, \"event\")\n    answer = False\n    for date, handler, event in zip(dates, handlers, events):\n        if \"20 february 2002\" in date.lower() and \"mike jackson\" in handler.lower() and \"indianapolis boat , sport & travel show\" in event.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "03eb8615-6bd3-4175-9651-6072ad2d0363", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2002 - 03 boston celtics season\ntable_data = [[\"game\", \"date\", \"opponent\", \"score\", \"location\", \"record\"],[\"47\", \"february 1\", \"indiana pacers\", \"l 100 - 109\", \"conseco fieldhouse\", \"26 - 21\"],[\"48\", \"february 3\", \"new orleans hornets\", \"l 96 - 103\", \"new orleans arena\", \"26 - 22\"],[\"49\", \"february 5\", \"seattle supersonics\", \"w 114 - 74\", \"fleetcenter\", \"27 - 22\"],[\"50\", \"february 11\", \"seattle supersonics\", \"w 82 - 76\", \"keyarena at seattle center\", \"28 - 22\"],[\"51\", \"february 13\", \"portland trail blazers\", \"w 100 - 92\", \"rose garden\", \"29 - 22\"],[\"52\", \"february 15\", \"los angeles clippers\", \"w 92 - 84\", \"staples center\", \"30 - 22\"],[\"53\", \"february 16\", \"phoenix suns\", \"l 92 - 102\", \"america west arena\", \"30 - 23\"],[\"54\", \"february 18\", \"golden state warriors\", \"w 125 - 117\", \"the arena in oakland\", \"31 - 23\"],[\"55\", \"february 20\", \"sacramento kings\", \"l 83 - 105\", \"arco arena\", \"31 - 24\"],[\"56\", \"february 24\", \"houston rockets\", \"l 95 - 101 (ot)\", \"fleetcenter\", \"31 - 25\"],[\"57\", \"february 26\", \"indiana pacers\", \"w 71 - 69\", \"fleetcenter\", \"32 - 25\"],[\"58\", \"february 28\", \"toronto raptors\", \"w 90 - 85\", \"fleetcenter\", \"33 - 25\"]]\nQuestion = Is it true that the seattle supersonics played at staples center february 15?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    locations = get_column_by_name(table_data, \"location\")\n    answer = False\n    for date, opponent, location in zip(dates, opponents, locations):\n        if \"february 15\" in date.lower() and \"seattle supersonics\" in opponent.lower() and \"staples center\" in location.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "f318e011-6ed8-4775-b006-d261393fd06a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = somerset county cricket club in 2009\ntable_data = [[\"player\", \"matches\", \"innings\", \"wickets\", \"average\", \"bbi\", \"bbm\", \"5wi\"],[\"charl willoughby\", \"16\", \"26\", \"54\", \"30.03\", \"5 / 56\", \"7 / 170\", \"3\"],[\"david stiff\", \"10\", \"18\", \"31\", \"36.12\", \"5 / 91\", \"5 / 93\", \"1\"],[\"alfonso thomas\", \"14\", \"22\", \"35\", \"37.62\", \"5 / 53\", \"8 / 152\", \"1\"],[\"ben phillips\", \"7\", \"11\", \"12\", \"38.00\", \"4 / 46\", \"4 / 73\", \"0\"],[\"arul suppiah\", \"16\", \"19\", \"15\", \"45.46\", \"3 / 58\", \"5 / 85\", \"0\"],[\"peter trego\", \"16\", \"25\", \"19\", \"46.78\", \"3 / 53\", \"3 / 74\", \"0\"],[\"andrew caddick\", \"5\", \"8\", \"10\", \"52.50\", \"3 / 53\", \"4 / 95\", \"0\"]]\nQuestion = Is it true that 10 is the smallest number of wickets?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(int(row[column_index]))\n    return column\n\ndef get_min_value(lst):\n    return min(lst)\n\ndef solution(table_data):\n    wickets = get_column_by_name(table_data, \"wickets\")\n    min_wickets = get_min_value(wickets)\n    answer = min_wickets == 10\n    return answer\n\n### END"}
{"id": "4fe94cff-1d42-405a-95a9-4e9d1a5d1e9d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1926 grand prix season\ntable_data = [[\"name\", \"circuit\", \"date\", \"winning drivers\", \"winning constructor\", \"report\"],[\"indianapolis 500\", \"indianapolis\", \"31 may\", \"frank lockhart\", \"miller\", \"report\"],[\"french grand prix\", \"miramas\", \"27 june\", \"jules goux\", \"bugatti\", \"report\"],[\"san sebastián grand prix / european grand prix\", \"lasarte\", \"18 july\", \"jules goux\", \"bugatti\", \"report\"],[\"british grand prix\", \"brooklands\", \"7 august\", \"robert sénéchal louis wagner\", \"delage\", \"report\"],[\"italian grand prix\", \"monza\", \"5 september\", \"louis charavel\", \"bugatti\", \"report\"]]\nQuestion = Is it true that frank lockhart was the winning driver at the indianapolis 500 after may 31?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    races = get_column_by_name(table_data, \"name\")\n    dates = get_column_by_name(table_data, \"date\")\n    drivers = get_column_by_name(table_data, \"winning drivers\")\n    for race, date, driver in zip(races, dates, drivers):\n        if race.lower() == \"indianapolis 500\" and driver.lower() == \"frank lockhart\":\n            answer = not equal_to(date, \"31 may\")\n            break \n    return answer\n\n### END"}
{"id": "b4d42e6e-3913-449d-835a-764b4dfcff00", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1970 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"carlton\", \"16.14 (110)\", \"st kilda\", \"10.11 (71)\", \"princes park\", \"22988\", \"18 july 1970\"],[\"south melbourne\", \"11.9 (75)\", \"richmond\", \"12.17 (89)\", \"lake oval\", \"25651\", \"18 july 1970\"],[\"north melbourne\", \"13.17 (95)\", \"fitzroy\", \"18.14 (122)\", \"arden street oval\", \"8443\", \"18 july 1970\"],[\"geelong\", \"15.16 (106)\", \"essendon\", \"8.17 (65)\", \"kardinia park\", \"17220\", \"18 july 1970\"],[\"melbourne\", \"7.19 (61)\", \"collingwood\", \"10.16 (76)\", \"mcg\", \"36044\", \"18 july 1970\"],[\"hawthorn\", \"23.9 (147)\", \"footscray\", \"6.12 (48)\", \"vfl park\", \"14151\", \"18 july 1970\"]]\nQuestion = Is it true that richmond was the away team against south melbourne at lake oval?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    answer = False\n    for home_team, away_team, venue in zip(home_teams, away_teams, venues):\n        if home_team.lower() == \"south melbourne\" and away_team.lower() == \"richmond\" and venue.lower() == \"lake oval\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "75c32e48-0136-4c05-979c-f27c3c1873c1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of collaborative software\ntable_data = [[\"name\", \"e - mail server\", \"faxing\", \"instant messaging\", \"telephony\", \"videoconferencing\", \"web conferencing\", \"data conferencing\", \"application sharing\", \"electronic meeting system\", \"synchronous conferencing\"],[\"ibm sametime\", \"no , integrated with lotus domino\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ibm lotus domino\", \"yes\", \"yes\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"no\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"no\"],[\"microsoft exchange server\", \"yes\", \"yes\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"],[\"microsoft lync server\", \"no , integrated with exchange server\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"microsoft sharepoint\", \"no , integrated with exchange server\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"],[\"name\", \"e - mail server\", \"faxing\", \"instant messaging\", \"telephony\", \"videoconferencing\", \"web conferencing\", \"data conferencing\", \"application sharing\", \"electronic meeting system\", \"synchronous conferencing\"]]\nQuestion = Is it true that the microsoft exchange server does not support videoconferencing , synchronous conferencing , or web conferencing , but does support faxing?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    faxing = get_column_by_name(table_data, \"faxing\")\n    videoconferencing = get_column_by_name(table_data, \"videoconferencing\")\n    web_conferencing = get_column_by_name(table_data, \"web conferencing\")\n    synchronous_conferencing = get_column_by_name(table_data, \"synchronous conferencing\")\n    for name, fax, video, web, sync in zip(names, faxing, videoconferencing, web_conferencing, synchronous_conferencing):\n        if name.lower() == \"microsoft exchange server\":\n            answer = equal_to(fax, \"yes\") and equal_to(video, \"no\") and equal_to(web, \"no\") and equal_to(sync, \"no\")\n            break \n    return answer\n\n### END"}
{"id": "2579ac8c-0444-45de-9f80-a041ae25a0b8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1971 nhl amateur draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"15\", \"ken baird\", \"defence\", \"canada\", \"california golden seals\", \"flin flon bombers (wchl)\"],[\"16\", \"henry boucha\", \"centre\", \"united states\", \"detroit red wings\", \"us national development team\"],[\"17\", \"bobby lalonde\", \"centre\", \"canada\", \"vancouver canucks\", \"montreal junior canadiens (oha)\"],[\"18\", \"brian mckenzie\", \"left wing\", \"canada\", \"pittsburgh penguins\", \"st catharines black hawks (oha)\"],[\"19\", \"craig ramsay\", \"left wing\", \"canada\", \"buffalo sabres\", \"peterborough petes (oha)\"],[\"20\", \"larry robinson\", \"defence\", \"canada\", \"montreal canadiens\", \"kitchener rangers (oha)\"],[\"21\", \"rod norrish\", \"left wing\", \"canada\", \"minnesota north stars\", \"regina pats (wchl)\"],[\"22\", \"rick kehoe\", \"right wing\", \"canada\", \"toronto maple leafs\", \"hamilton red wings (oha)\"],[\"23\", \"dave fortier\", \"defence\", \"canada\", \"toronto maple leafs\", \"st catharines black hawks (oha)\"],[\"24\", \"michel deguise\", \"goaltender\", \"canada\", \"montreal canadiens\", \"sorel eperviers (qmjhl)\"],[\"25\", \"terry french\", \"centre\", \"canada\", \"montreal canadiens\", \"ottawa 67 's (oha)\"],[\"26\", \"dave kryskow\", \"left wing\", \"canada\", \"chicago black hawks\", \"edmonton oil kings (wchl)\"],[\"27\", \"tom williams\", \"left wing\", \"canada\", \"new york rangers\", \"hamilton red wings (oha)\"],[\"28\", \"curt ridley\", \"goaltender\", \"canada\", \"boston bruins\", \"portage terriers (mjhl)\"]]\nQuestion = Is it true that peterborough petes (oha) plays on left wing position?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    positions = get_column_by_name(table_data, \"position\")\n    teams = get_column_by_name(table_data, \"college / junior / club team\")\n    answer = False\n    for position, team in zip(positions, teams):\n        if \"peterborough petes (oha)\" in team.lower() and \"left wing\" in position.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "dc0b60d7-5e1c-4fc4-b98f-8cfa141e0333", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the howie carr show\ntable_data = [[\"calls\",\"frequency\",\"branding\",\"format\",\"timeslot\",\"group owner\"],[\"wgan\",\"560 khz\",\"news radio 560 wgan\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"whyn\",\"560 khz\",\"news / talk 560 whyn\",\"news / talk\",\"live 3p - 7p\",\"clear channel communications\"],[\"wvmt\",\"620 khz\",\"news / talk 620 wvmt\",\"news / talk\",\"live 3p - 7p\",\"sison broadcasting\"],[\"wrko\",\"680 khz\",\"am 680 wrko\",\"news / talk\",\"live 3p - 7p\",\"entercom\"],[\"wcrn\",\"830 khz\",\"wcrn 830 true talk\",\"news / talk\",\"live 3p - 7p\",\"carter broadcasting\"],[\"wkbk\",\"1290 khz\",\"1290 wkbk w281au 104.1\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"wegp\",\"1390 khz\",\"wegp 1390 am - the talk of the county\",\"news / talk\",\"live 3p - 6p\",\"decelles / media , inc\"],[\"wxtk\",\"95.1 mhz\",\"news radio 95 wxtk\",\"news / talk\",\"live 3p - 7p\",\"qantam of cape cod , llc\"],[\"wntk - fm\",\"99.7 mhz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wuvr\",\"1490 khz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wvom - fm / wvqm\",\"103.9 / 101.3 mhz\",\"the voice of maine\",\"news / talk\",\"live 3p - 7p\",\"blueberry broadcasting\"]]\nQuestion = Is it true that wegp is the call for the requency of 1290 khz?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    calls = get_column_by_name(table_data, \"calls\")\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    for call, frequency in zip(calls, frequencies):\n        if call.lower() == \"wegp\" and frequency.lower() == \"1290 khz\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "e76a299d-785c-421a-9867-7b0320b7e21a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = atlanta falcons draft history\ntable_data = [[\"round\", \"pick\", \"overall\", \"name\", \"position\", \"college\"],[\"1\", \"6\", \"6\", \"warren bryant\", \"offensive tackle\", \"kentucky\"],[\"1\", \"20\", \"20\", \"wilson faumuina\", \"defensive tackle\", \"san josã state\"],[\"2\", \"8\", \"36\", \"r c thielemann\", \"guard\", \"arkansas\"],[\"4\", \"6\", \"90\", \"allan leavitt\", \"kicker\", \"georgia\"],[\"5\", \"8\", \"120\", \"shelton diggs\", \"wide receiver\", \"usc\"],[\"6\", \"22\", \"161\", \"keith jenkins\", \"defensive back\", \"cincinnati\"],[\"8\", \"8\", \"203\", \"walter packer\", \"wide receiver\", \"mississippi state\"],[\"9\", \"7\", \"230\", \"john maxwell\", \"offensive tackle\", \"boston college\"],[\"9\", \"19\", \"242\", \"robert speer\", \"defensive end\", \"arkansas state\"],[\"10\", \"6\", \"257\", \"billy ryckman\", \"wide receiver\", \"louisiana tech\"],[\"11\", \"8\", \"287\", \"dave farmer\", \"running back\", \"usc\"],[\"12\", \"7\", \"312\", \"don parrish\", \"defensive tackle\", \"pittsburgh\"]]\nQuestion = Is it true that the player from arkansas state was drafted overall number 242?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    colleges = get_column_by_name(table_data, \"college\")\n    overalls = get_column_by_name(table_data, \"overall\")\n    for college, overall in zip(colleges, overalls):\n        if college.lower() == \"arkansas state\":\n            answer = equal_to(overall, \"242\")\n            break \n    return answer\n\n### END"}
{"id": "2f7fc7d1-141b-475e-bb7b-cf7e370fea7f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = orlando magic all - time roster\ntable_data = [[\"player\",\"nationality\",\"position\",\"years in orlando\",\"school / club team\"],[\"matt barnes\",\"united states\",\"guard - forward\",\"2009 - 2010\",\"ucla\"],[\"andre barrett\",\"united states\",\"guard\",\"2005\",\"seton hall\"],[\"brandon bass\",\"united states\",\"forward\",\"2009 - 2011\",\"louisiana state\"],[\"tony battie\",\"united states\",\"forward - center\",\"2004 - 2009\",\"texas tech\"],[\"david benoit\",\"united states\",\"forward\",\"1998\",\"alabama\"],[\"keith bogans\",\"united states\",\"guard\",\"2003 - 2004\",\"kentucky\"],[\"keith bogans\",\"united states\",\"guard\",\"2006 - 2009\",\"kentucky\"],[\"anthony bonner\",\"united states\",\"forward\",\"1995 - 1996\",\"st louis\"],[\"anthony bowie\",\"united states\",\"guard\",\"1991 - 1996\",\"oklahoma\"],[\"earl boykins\",\"united states\",\"guard\",\"1999\",\"eastern michigan\"],[\"michael bradley\",\"united states\",\"forward\",\"2004 - 2005\",\"villanova\"],[\"dee brown\",\"united states\",\"guard\",\"2000 - 2002\",\"jacksonville\"],[\"jud buechler\",\"united states\",\"guard - forward\",\"2001 - 2002\",\"arizona\"],[\"pat burke\",\"ireland\",\"center\",\"2002 - 2003\",\"auburn\"]]\nQuestion = Is it true that keith bogans played for the united states in orlando from 2003 - 2004 and 2006 - 2009?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    years_in_orlando = get_column_by_name(table_data, \"years in orlando\")\n    answer = False\n    for player, year in zip(players, years_in_orlando):\n        if player.lower() == \"keith bogans\" and (year == \"2003 - 2004\" or year == \"2006 - 2009\"):\n            answer = True\n    return answer\n\n### END"}
{"id": "866736cd-5389-485e-8392-fa20705bfab7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = cultural interest fraternities and sororities\ntable_data = [[\"letters\", \"organization\", \"nickname\", \"founding date\", \"founding university\", \"type\"],[\"δλφ\", \"delta lambda phi\", \"dlp , deltas' , or lambda men\", \"1986 - 10 - 15\", \"washington , dc\", \"fraternity\"],[\"κψκ\", \"kappa psi kappa\", \"canes , k - psis , diamonds , or angels\", \"2001 - 08 - 17\", \"tallahassee , florida\", \"fraternity\"],[\"οεπ\", \"omicron epsilon pi\", \"the epps\", \"2000 - 12 - 07\", \"tallahassee , florida\", \"sorority\"],[\"γρλ\", \"gamma rho lambda 1\", \"grl\", \"2003 - 08 - 25\", \"tempe , arizona\", \"sorority\"],[\"αλζ\", \"alpha lambda zeta\", \"the regal alphas\", \"2006 - 01 - 09\", \"houston , texas and atlanta , georgia\", \"fraternity\"],[\"καλ\", \"kappa alpha lambda\", \"the kappas\", \"2003 - 10 - 19\", \"clark atlanta university\", \"sorority\"],[\"φαν\", \"phi alpha nu\", \"phi - nomenal gentlewomen\", \"2006 - 07 - 30\", \"charlotte , nc\", \"fraternity\"]]\nQuestion = Is it true that the founding date of the organization with the letters ΑΛΖ is 2001 - 08 - 17?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    letters = get_column_by_name(table_data, \"letters\")\n    founding_dates = get_column_by_name(table_data, \"founding date\")\n    for letter, founding_date in zip(letters, founding_dates):\n        if letter.lower() == \"αλζ\":\n            answer = equal_to(founding_date, \"2001 - 08 - 17\")\n            break \n    return answer\n\n### END"}
{"id": "b1cc8816-0fe1-4acb-805d-46a74d1132b5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glamorgan county cricket club\ntable_data = [[\"score\", \"batsmen\", \"against\", \"location\", \"year\"],[\"374\", \"matthew elliott and steve james\", \"sussex\", \"colwyn bay\", \"2000\"],[\"252\", \"matthew maynard and david hemp\", \"northamptonshire\", \"sophia gardens\", \"2002\"],[\"313\", \"emrys davies and willie jones\", \"essex\", \"brentwood\", \"1948\"],[\"425\", \"adrian dale and viv richards\", \"middlesex\", \"sophia gardens\", \"1993\"],[\"264\", \"maurice robinson and stan montgomery\", \"hampshire\", \"bournemouth\", \"1949\"],[\"240\", \"jim allenby and mark wallace\", \"surrey\", \"the brit oval\", \"2009\"],[\"211\", \"tony cottey and ottis gibson\", \"leicestershire\", \"swansea\", \"1996\"],[\"202\", \"dai davies and joe hills\", \"sussex\", \"eastbourne\", \"1928\"],[\"203\", \"joe hills and johnnie clay\", \"worcestershire\", \"swansea\", \"1929\"],[\"143\", \"terry davies and simon daniels\", \"gloucestershire\", \"swansea\", \"1982\"]]\nQuestion = Is it true that in 1929 , the score was 203?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    scores = get_column_by_name(table_data, \"score\")\n    years = get_column_by_name(table_data, \"year\")\n    for score, year in zip(scores, years):\n        if year == \"1929\":\n            answer = equal_to(score, \"203\")\n            break \n    return answer\n\n### END"}
{"id": "6f69254b-8453-46ab-b2e3-6d21a33c3040", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 intercity football league\ntable_data = [[\"date\", \"team 1\", \"result\", \"team 2\", \"ground\"],[\"november 8 , 2008\", \"taipower\", \"0 - 1\", \"hun sing\", \"chungshan soccer stadium\"],[\"november 8 , 2008\", \"chia cheng hsin\", \"2 - 1\", \"tatung\", \"chungshan soccer stadium\"],[\"november 15 , 2008\", \"tatung\", \"0 - 1\", \"taipower\", \"pailing sport park\"],[\"november 15 , 2008\", \"hun sing\", \"0 - 4\", \"chia cheng hsin\", \"pailing sport park\"],[\"november 22 , 2008\", \"taipower\", \"1 - 0\", \"chia cheng hsin\", \"national pei men senior high school\"],[\"november 22 , 2008\", \"tatung\", \"1 - 1\", \"hun sing\", \"national pei men senior high school\"]]\nQuestion = Is it true that chia cheng hsin was team 2 on 22nd november 2008 , when the result was 1 - 0?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    results = get_column_by_name(table_data, \"result\")\n    team_2 = get_column_by_name(table_data, \"team 2\")\n    for date, result, team in zip(dates, results, team_2):\n        if date.lower() == \"november 22 , 2008\" and team.lower() == \"chia cheng hsin\":\n            answer = equal_to(result, \"1 - 0\")\n            break \n    return answer\n\n### END"}
{"id": "8fb491c0-2574-43ff-972d-640c9a979b95", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1982 - 83 atlanta hawks season\ntable_data = [[\"round\", \"pick\", \"player\", \"nationality\", \"college\"],[\"1\", \"10\", \"keith edmonson\", \"united states\", \"purdue\"],[\"3\", \"56\", \"joe kopicki\", \"united states\", \"detroit mercy\"],[\"5\", \"102\", \"mark hall\", \"united states\", \"minnesota\"],[\"6\", \"126\", \"jay bruchak\", \"united states\", \"mount st mary 's\"],[\"7\", \"148\", \"horace wyatt\", \"united states\", \"clemson\"],[\"8\", \"172\", \"james ratiff\", \"united states\", \"howard\"],[\"9\", \"194\", \"pierre bland\", \"united states\", \"elizabeth city state\"],[\"10\", \"216\", \"ronnie mcadoo\", \"united states\", \"old dominion\"]]\nQuestion = Is it true that jay bruchak had more than 126 pick?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    picks = get_column_by_name(table_data, \"pick\")\n    for player, pick in zip(players, picks):\n        if player.lower() == \"jay bruchak\":\n            answer = greater(int(pick), 126)\n            break \n    return answer\n\n### END"}
{"id": "10afed7c-db4d-4547-8a27-f1a34a74391c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = usa today all - usa high school baseball team\ntable_data = [[\"player\",\"position\",\"school\",\"hometown\",\"mlb draft\"],[\"delmon young\",\"outfielder\",\"camarillo high school\",\"camarillo, ca\",\"1st round - 1st pick of 2003 draft ( devil rays )\"],[\"chris lubanski\",\"outfielder\",\"kennedy - kenrick catholic high school\",\"norristown, pa\",\"1st round - 5th pick of 2003 draft ( royals )\"],[\"lastings milledge\",\"outfielder\",\"lakewood ranch high school\",\"bradenton, fl\",\"1st round - 12th pick of 2003 draft ( mets )\"],[\"brandon wood\",\"infielder\",\"horizon high school\",\"scottsdale, az\",\"1st round - 23rd pick of 2003 draft ( angels )\"],[\"john danks\",\"pitcher\",\"round rock high school\",\"round rock, tx\",\"1st round - 9th pick of 2003 draft ( rangers )\"],[\"jonathan fulton\",\"infielder\",\"george washington high school\",\"danville, va\",\"3rd round - 83rd pick of 2003 draft ( marlins )\"],[\"ian stewart\",\"infielder\",\"la quinta high school\",\"westminster, ca\",\"1st round - 10th pick of 2003 draft ( rockies )\"],[\"jeff allison\",\"pitcher\",\"veterans memorial high school\",\"peabody, ma\",\"1st round - 16th pick of 2003 draft ( marlins )\"],[\"daric barton\",\"catcher\",\"marina high school\",\"huntington beach, ca\",\"1st round - 28th pick of 2003 draft ( cardinals )\"],[\"eric duncan\",\"infielder\",\"seton hall preparatory school\",\"west orange, nj\",\"1st round - 27th pick of 2003 draft ( yankees )\"]]\nQuestion = Is it true that chris lubanski attended kennedy - kenrick catholic high school?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_player = get_column_by_name(table_data, \"player\")\n    column_school = get_column_by_name(table_data, \"school\")\n    answer = \"chris lubanski\" in column_player and \"kennedy - kenrick catholic high school\" in column_school\n    return answer\n\n### END"}
{"id": "b942a057-5e1f-4657-ace7-9083272c6503", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1969 new york jets season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"game site\", \"attendance\"],[\"1\", \"1969 - 09 - 14\", \"buffalo bills\", \"w 33 - 19\", \"war memorial stadium\", \"46165\"],[\"2\", \"1969 - 09 - 21\", \"denver broncos\", \"l 21 - 19\", \"mile high stadium\", \"50583\"],[\"3\", \"1969 - 09 - 28\", \"san diego chargers\", \"l 34 - 27\", \"san diego stadium\", \"54042\"],[\"4\", \"1969 - 10 - 05\", \"boston patriots\", \"w 23 - 14\", \"alumni stadium\", \"25584\"],[\"5\", \"1969 - 10 - 12\", \"cincinnati bengals\", \"w 21 - 7\", \"nippert stadium\", \"27927\"],[\"6\", \"1969 - 10 - 20\", \"houston oilers\", \"w 26 - 17\", \"shea stadium\", \"63841\"],[\"7\", \"1969 - 10 - 26\", \"boston patriots\", \"w 23 - 17\", \"shea stadium\", \"62298\"],[\"8\", \"1969 - 11 - 02\", \"miami dolphins\", \"w 34 - 31\", \"shea stadium\", \"61761\"],[\"9\", \"1969 - 11 - 09\", \"buffalo bills\", \"w 16 - 6\", \"shea stadium\", \"62680\"],[\"10\", \"1969 - 11 - 16\", \"kansas city chiefs\", \"l 34 - 16\", \"shea stadium\", \"63849\"],[\"11\", \"1969 - 11 - 23\", \"cincinnati bengals\", \"w 40 - 7\", \"shea stadium\", \"62128\"],[\"12\", \"1969 - 11 - 30\", \"oakland raiders\", \"l 27 - 14\", \"shea stadium\", \"63865\"],[\"13\", \"1969 - 12 - 06\", \"houston oilers\", \"w 34 - 26\", \"astrodome\", \"51923\"],[\"14\", \"1969 - 12 - 14\", \"miami dolphins\", \"w 27 - 9\", \"miami orange bowl\", \"48108\"]]\nQuestion = Is it true that the week 9 game was played in the mile high stadium?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    game_sites = get_column_by_name(table_data, \"game site\")\n    for week, game_site in zip(weeks, game_sites):\n        if week == \"9\":\n            return game_site.lower() == \"mile high stadium\"\n    return False\n\n### END"}
{"id": "ed0d17d5-f750-42b3-ac41-2048da94e129", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = marsel ilhan\ntable_data = [[\"outcome\", \"date\", \"tournament\", \"surface\", \"opponent\", \"score\"],[\"runner - up\", \"august 20 , 2007\", \"karshi\", \"hard\", \"denis istomin\", \"1 - 6 , 4 - 6\"],[\"winner\", \"july 13 , 2008\", \"israel open\", \"hard\", \"ivo klec\", \"6 - 4 , 6 - 4\"],[\"runner - up\", \"may 17 , 2009\", \"izmir cup\", \"hard\", \"andrea stoppini\", \"6 - 7 , 2 - 6\"],[\"winner\", \"september 20 , 2010\", \"banja luka\", \"clay\", \"pere riba\", \"6 - 0 , 7 - 6 (7 - 4)\"],[\"runner - up\", \"september 26 , 2010\", \"izmir cup\", \"hard\", \"somdev devvarman\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 10 , 2011\", \"scheveningen\", \"clay\", \"steve darcis\", \"3 - 6 , 6 - 4 , 2 - 6\"],[\"runner - up\", \"september 25 , 2011\", \"izmir cup\", \"hard\", \"lukáš lacko\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 29 , 2012\", \"president 's cup (tennis)\", \"hard\", \"evgeny donskoy\", \"3 - 6 , 4 - 6\"]]\nQuestion = Is it true that the outcome was runner - up for the august 20 , 2007 , match?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    outcomes = get_column_by_name(table_data, \"outcome\")\n    dates = get_column_by_name(table_data, \"date\")\n    for outcome, date in zip(outcomes, dates):\n        if date.lower() == \"august 20 , 2007\":\n            answer = equal_to(outcome, \"runner - up\")\n            break \n    return answer\n\n### END"}
{"id": "7ca79eca-95f3-4e79-bc3b-b2d8be5a20f0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glover teixeira\ntable_data = [[\"result\", \"opponent\", \"method\", \"event\", \"date\"],[\"loss\", \"gabriel vella\", \"points\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"armando sapo\", \"submission\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"salvador minnit\", \"submission\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"jorge bezerra\", \"points\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"loss\", \"vinny magalhães\", \"submission (armbar)\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"loss\", \"gerardi rinaldi\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"dean lister\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"vesa vuori\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"leonardo chocolate\", \"submission (rear naked choke)\", \"adcc brasil trails (under 99 kg)\", \"2009\"],[\"win\", \"renato ferreira\", \"points\", \"adcc brasil trails (under 99 kg)\", \"2009\"]]\nQuestion = Is it true that gerardi rinaldi lost the fight in 2011?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    dates = get_column_by_name(table_data, \"date\")\n    results = get_column_by_name(table_data, \"result\")\n    answer = False\n    for opponent, date, result in zip(opponents, dates, results):\n        if \"gerardi rinaldi\" in opponent.lower() and \"2011\" in date.lower() and \"loss\" in result.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "e14bfeb0-0f51-4c90-b1ba-9c6874ce5c83", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 fc schalke 04 season\ntable_data = [[\"nat\", \"name\", \"moving from\", \"type\", \"transfer window\", \"ends\", \"transfer fee\"],[\"ned\", \"engelaar\", \"twente\", \"transfer\", \"summer\", \"2011\", \"6 m\"],[\"per\", \"farfán\", \"psv\", \"transfer\", \"summer\", \"2012\", \"10 m\"],[\"mar\", \"amsif\", \"youth system\", \"promotion\", \"summer\", \"2010\", \"n / a\"],[\"geo\", \"kenia\", \"youth system\", \"promotion\", \"summer\", \"2012\", \"n / a\"],[\"per\", \"zambrano\", \"youth system\", \"promotion\", \"summer\", \"2012\", \"n / a\"]]\nQuestion = Is it true that zambrano ends in 2012?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    ends = get_column_by_name(table_data, \"ends\")\n    for name, end in zip(names, ends):\n        if name.lower() == \"zambrano\":\n            answer = equal_to(end, \"2012\")\n            break \n    return answer\n\n### END"}
{"id": "a730eaf9-27de-486a-9c1e-fb9aa6e6fa0c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = german submarine u - 101 (1940)\ntable_data = [[\"date\", \"ship\", \"nationality\", \"tonnage\", \"fate\"],[\"26 may 1940\", \"stanhall\", \"uk\", \"4831\", \"sunk\"],[\"31 may 1940\", \"orangemoor\", \"uk\", \"5775\", \"sunk\"],[\"2 june 1940\", \"polycarp\", \"uk\", \"3577\", \"sunk\"],[\"11 june 1940\", \"mount hymettus\", \"greece\", \"5820\", \"sunk\"],[\"12 june 1940\", \"earlspark\", \"uk\", \"5250\", \"sunk\"],[\"14 june 1940\", \"antonis georgandis\", \"greece\", \"3557\", \"sunk\"],[\"16 june 1940\", \"wellington star\", \"uk\", \"13212\", \"sunk\"],[\"19 august 1940\", \"ampleforth\", \"uk\", \"4576\", \"sunk\"],[\"28 august 1940\", \"elle\", \"finland\", \"3868\", \"sunk\"],[\"1 september 1940\", \"efploia\", \"greece\", \"3867\", \"sunk\"],[\"12 october 1940\", \"saint - malo\", \"canada\", \"5799\", \"sunk\"],[\"18 october 1940\", \"blairspey\", \"uk\", \"4155\", \"damaged\"],[\"18 october 1940\", \"creekirk\", \"uk\", \"3917\", \"sunk\"],[\"19 october 1940\", \"assyrian\", \"uk\", \"2962\", \"sunk\"],[\"19 october 1940\", \"soesterberg\", \"netherlands\", \"1904\", \"sunk\"],[\"30 november 1940\", \"aracataca\", \"uk\", \"5378\", \"sunk\"],[\"1 december 1940\", \"appalachee\", \"uk\", \"8826\", \"sunk\"],[\"1 december 1940\", \"loch ranza\", \"uk\", \"4958\", \"damaged\"],[\"2 december 1940\", \"kavak\", \"uk\", \"2782\", \"sunk\"],[\"2 december 1940\", \"lady glanely\", \"uk\", \"5497\", \"sunk\"],[\"14 february 1941\", \"holystone\", \"uk\", \"5462\", \"sunk\"],[\"17 february 1941\", \"gairsoppa\", \"uk\", \"5237\", \"sunk\"],[\"4 june 1941\", \"trecarrell\", \"uk\", \"5271\", \"sunk\"],[\"9 june 1941\", \"trevarrack\", \"uk\", \"1190\", \"sunk\"],[\"18 october 1941\", \"hmsbroadwater\", \"uk\", \"1190\", \"sunk\"]]\nQuestion = Is it true that the nationality of the aracataca ship is the united kingdom?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    ships = get_column_by_name(table_data, \"ship\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    answer = False\n    for ship, nationality in zip(ships, nationalities):\n        if ship.lower() == \"aracataca\" and nationality.lower() == \"uk\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "85247f5b-94d5-40d0-826a-eb2b4acbf381", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1982 toronto blue jays season\ntable_data = [[\"date\",\"opponent\",\"score\",\"loss\",\"record\"],[\"august 1\",\"tigers\",\"8 - 5\",\"leal (8 - 8)\",\"48 - 53\"],[\"august 2\",\"brewers\",\"9 - 4\",\"mcclure (8 - 4)\",\"49 - 53\"],[\"august 3\",\"brewers\",\"7 - 4\",\"clancy (8 - 10)\",\"49 - 54\"],[\"august 4\",\"brewers\",\"8 - 0\",\"gott (2 - 7)\",\"49 - 55\"],[\"august 5\",\"tigers\",\"5 - 2\",\"leal (8 - 9)\",\"49 - 56\"],[\"august 5\",\"tigers\",\"7 - 4\",\"jackson (3 - 8)\",\"49 - 57\"],[\"august 6\",\"tigers\",\"6 - 0\",\"stieb (11 - 11)\",\"49 - 58\"],[\"august 7\",\"tigers\",\"7 - 4\",\"pashnick (3 - 4)\",\"50 - 58\"],[\"august 8\",\"tigers\",\"7 - 4\",\"underwood (3 - 8)\",\"51 - 58\"],[\"august 8\",\"tigers\",\"7 - 4\",\"rucker (2 - 2)\",\"52 - 58\"],[\"august 9\",\"red sox\",\"4 - 2\",\"eckersley (11 - 10)\",\"53 - 58\"],[\"august 10\",\"red sox\",\"4 - 0\",\"torrez (7 - 7)\",\"54 - 58\"],[\"august 11\",\"red sox\",\"4 - 3\",\"stanley (7 - 5)\",\"55 - 58\"],[\"august 12\",\"brewers\",\"7 - 1\",\"gott (3 - 8)\",\"55 - 59\"],[\"august 12\",\"brewers\",\"4 - 3\",\"murray (7 - 4)\",\"55 - 60\"],[\"august 13\",\"brewers\",\"3 - 1\",\"leal (8 - 10)\",\"55 - 61\"],[\"august 14\",\"brewers\",\"4 - 2\",\"caldwell (10 - 11)\",\"56 - 61\"],[\"august 15\",\"brewers\",\"3 - 2\",\"slaton (9 - 4)\",\"57 - 61\"],[\"august 16\",\"indians\",\"2 - 1\",\"waits (1 - 12)\",\"58 - 61\"],[\"august 17\",\"indians\",\"6 - 5\",\"mclaughlin (8 - 5)\",\"58 - 62\"],[\"august 17\",\"indians\",\"9 - 5\",\"geisel (1 - 1)\",\"58 - 63\"],[\"august 20\",\"yankees\",\"4 - 2\",\"stieb (13 - 12)\",\"58 - 64\"],[\"august 21\",\"yankees\",\"3 - 1\",\"guidry (11 - 5)\",\"59 - 64\"],[\"august 22\",\"yankees\",\"3 - 1\",\"gott (4 - 9)\",\"59 - 65\"],[\"august 23\",\"yankees\",\"4 - 3\",\"leal (8 - 11)\",\"59 - 66\"],[\"august 24\",\"orioles\",\"7 - 3 (10)\",\"mclaughlin (8 - 6)\",\"59 - 67\"],[\"august 25\",\"orioles\",\"8 - 3\",\"clancy (11 - 11)\",\"59 - 68\"],[\"august 26\",\"orioles\",\"12 - 5\",\"gott (4 - 10)\",\"59 - 69\"],[\"august 27\",\"yankees\",\"10 - 3\",\"righetti (8 - 6)\",\"60 - 69\"],[\"august 28\",\"yankees\",\"3 - 2 (11)\",\"laroche (4 - 2)\",\"61 - 69\"],[\"august 29\",\"yankees\",\"8 - 2\",\"clancy (11 - 12)\",\"61 - 70\"],[\"august 30\",\"orioles\",\"6 - 3\",\"eichhorn (0 - 1)\",\"61 - 71\"],[\"august 31\",\"orioles\",\"1 - 0\",\"leal (9 - 12)\",\"61 - 72\"]]\nQuestion = Is it true that the opponent in the game where caldwell lost 10 - 11 was the brewers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    losses = get_column_by_name(table_data, \"loss\")\n    for opponent, loss in zip(opponents, losses):\n        if \"caldwell (10 - 11)\" in loss.lower() and \"brewers\" in opponent.lower():\n            return True\n    return False\n\n### END"}
{"id": "3bcafb80-08d7-4f11-9456-f6e5a811b70f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = marsel ilhan\ntable_data = [[\"outcome\", \"date\", \"tournament\", \"surface\", \"opponent\", \"score\"],[\"runner - up\", \"august 20 , 2007\", \"karshi\", \"hard\", \"denis istomin\", \"1 - 6 , 4 - 6\"],[\"winner\", \"july 13 , 2008\", \"israel open\", \"hard\", \"ivo klec\", \"6 - 4 , 6 - 4\"],[\"runner - up\", \"may 17 , 2009\", \"izmir cup\", \"hard\", \"andrea stoppini\", \"6 - 7 , 2 - 6\"],[\"winner\", \"september 20 , 2010\", \"banja luka\", \"clay\", \"pere riba\", \"6 - 0 , 7 - 6 (7 - 4)\"],[\"runner - up\", \"september 26 , 2010\", \"izmir cup\", \"hard\", \"somdev devvarman\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 10 , 2011\", \"scheveningen\", \"clay\", \"steve darcis\", \"3 - 6 , 6 - 4 , 2 - 6\"],[\"runner - up\", \"september 25 , 2011\", \"izmir cup\", \"hard\", \"lukáš lacko\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 29 , 2012\", \"president 's cup (tennis)\", \"hard\", \"evgeny donskoy\", \"3 - 6 , 4 - 6\"]]\nQuestion = Is it true that the israel open tournament was held on july 13th , 2008?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    tournaments = get_column_by_name(table_data, \"tournament\")\n    answer = False\n    for date, tournament in zip(dates, tournaments):\n        if \"july 13 , 2008\" in date.lower() and \"israel open\" in tournament.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "425df602-8760-45c3-a200-7e0ce300d13f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 issf world cup final (shotgun)\ntable_data = [[\"shooter\", \"event\", \"rank points\", \"score points\", \"total\"],[\"georgios achilleos ( cyp )\", \"wcf 2007\", \"defending champion\", \"defending champion\", \"defending champion\"],[\"vincent hancock ( usa )\", \"og beijing\", \"olympic gold medalist\", \"olympic gold medalist\", \"olympic gold medalist\"],[\"tore brovold ( nor )\", \"og beijing\", \"olympic silver medalist\", \"olympic silver medalist\", \"olympic silver medalist\"],[\"anthony terras ( fra )\", \"og beijing\", \"olympic bronze medalist\", \"olympic bronze medalist\", \"olympic bronze medalist\"],[\"ariel mauricio flores ( mex )\", \"wc kerrville\", \"15\", \"12\", \"27\"],[\"qu ridong ( chn )\", \"wc beijing\", \"15\", \"10\", \"25\"],[\"andrea benelli ( ita )\", \"wc belgrade\", \"10\", \"13\", \"23\"],[\"konstantin tsuranov ( rus )\", \"wc beijing\", \"10\", \"10\", \"20\"],[\"jan sychra ( cze )\", \"wc belgrade\", \"5\", \"13\", \"18\"],[\"valerio luchini ( ita )\", \"wc kerrville\", \"8\", \"10\", \"18\"],[\"leos hlavacek ( cze )\", \"wc suhl\", \"5\", \"11\", \"16\"],[\"abdullah alrashidi ( kuw )\", \"wc belgrade\", \"3\", \"12\", \"15\"]]\nQuestion = Is it true that andrea benelli (ita) had 15 rank points and 23 score points at the event in wc belgrade?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    shooters = get_column_by_name(table_data, \"shooter\")\n    events = get_column_by_name(table_data, \"event\")\n    rank_points = get_column_by_name(table_data, \"rank points\")\n    score_points = get_column_by_name(table_data, \"score points\")\n    for shooter, event, rank_point, score_point in zip(shooters, events, rank_points, score_points):\n        if shooter.lower() == \"andrea benelli ( ita )\" and event.lower() == \"wc belgrade\":\n            answer = equal_to(rank_point, \"15\") and equal_to(score_point, \"23\")\n            break \n    return answer\n\n### END"}
{"id": "6372f13b-852d-4b8f-8206-10bdf347881f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of georgian submissions for the academy award for best foreign language film\ntable_data = [[\"year (ceremony)\",\"film title used in nomination\",\"original title\",\"director\",\"main language (s)\",\"result\"],[\"1996 (69th)\",\"a chef in love\",\"შეყვარებული მზარეულის 1001 რეცეპტი\",\"nana dzhordzhadze\",\"french , georgian\",\"nominee\"],[\"1999 (72nd)\",\"here comes the dawn\",\"აქ თენდება\",\"zaza urushadze\",\"georgian\",\"not nominated\"],[\"2000 (73rd)\",\"27 missing kisses\",\"ზაფხული , ანუ 27 მოპარული კოცნა\",\"nana dzhordzhadze\",\"georgian , russian\",\"not nominated\"],[\"2001 (74th)\",\"migration of the angel\",\"ანგელოზის გადაფრენა\",\"nodar managadze\",\"georgian\",\"not nominated\"],[\"2005 (78th)\",\"tbilisi , tbilisi\",\"თბილისი - თბილისი\",\"levan zaqareishvili\",\"georgian\",\"not nominated\"],[\"2007 (80th)\",\"russian triangle\",\"რუსული სამკუთხედი\",\"aleko tsabadze\",\"russian\",\"not nominated\"],[\"2008 (81st)\",\"mediator\",\"მედიატორი\",\"dito tsintsadze\",\"english , german , russian\",\"not nominated\"],[\"2009 (82nd)\",\"the other bank\",\"გაღმა ნაპირი\",\"george ovashvili\",\"georgian , abkhaz , russian\",\"not nominated\"],[\"2010 (83rd)\",\"street days\",\"ქუჩის დღეები\",\"levan koguashvili\",\"georgian\",\"not nominated\"],[\"2011 (84th)\",\"chantrapas\",\"შანტრაპა\",\"otar iosseliani\",\"french , georgian\",\"not nominated\"],[\"2012 (85th)\",\"keep smiling\",\"გაიღიმეთ\",\"rusudan chkonia\",\"georgian\",\"not nominated\"]]\nQuestion = Is it true that otar iosseliani 's film was selected in 2011 (84th)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_year = get_column_by_name(table_data, \"year (ceremony)\")\n    column_director = get_column_by_name(table_data, \"director\")\n    answer = False\n    for year, director in zip(column_year, column_director):\n        if \"2011 (84th)\" in year and \"otar iosseliani\" in director.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "6bddc556-9d9d-4303-973c-98beefbd651b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date\", \"round\", \"opponent\", \"venue\", \"result\", \"attendance\"],[\"23 january 1999\", \"r3\", \"stenhousemuir\", \"h\", \"2 - 0\", \"37759\"],[\"14 february 1999\", \"r4\", \"hamilton academical\", \"a\", \"6 - 0\", \"7339\"],[\"6 march 1999\", \"qf\", \"falkirk\", \"h\", \"2 - 1\", \"39250\"],[\"11 april 1999\", \"sf\", \"st johnstone\", \"n\", \"4 - 0\", \"20664\"],[\"29 may 1999\", \"f\", \"celtic\", \"n\", \"1 - 0\", \"52670\"]]\nQuestion = Is it true that 4 - 0 and 1 - 0 are the results for venue of h with attendance less than 20664?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"venue\")\n    results = get_column_by_name(table_data, \"result\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    answer = False\n    for venue, result, attendance in zip(venues, results, attendances):\n        if venue.lower() == \"h\" and less_than(int(attendance), 20664):\n            if equal_to(result, \"4 - 0\") or equal_to(result, \"1 - 0\"):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "005b1290-585c-4885-a978-d33606cca242", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1996 - 97 montreal canadiens season\ntable_data = [[\"round\", \"player\", \"position\", \"nationality\", \"college / junior / club team\"],[\"1\", \"matt higgins\", \"center\", \"canada\", \"moose jaw warriors (whl)\"],[\"2\", \"mathieu garon\", \"goalie\", \"canada\", \"victoriaville tigres (qmjhl)\"],[\"3\", \"arron asham\", \"right wing\", \"canada\", \"red deer rebels (whl)\"],[\"4\", \"kim staal\", \"left wing\", \"denmark\", \"malmã if (sweden)\"],[\"4\", \"etienne drapeau\", \"center\", \"canada\", \"beauport harfangs (qmjhl)\"],[\"5\", \"daniel archambault\", \"defence\", \"canada\", \"val - d'or foreurs (qmjhl)\"],[\"6\", \"brett clark\", \"defenceman\", \"canada\", \"university of maine (ncaa)\"],[\"7\", \"timo vertala\", \"left wing\", \"finland\", \"jyp (finland)\"],[\"8\", \"mattia baldi\", \"left wing\", \"switzerland\", \"ambri - piotta (swiss)\"],[\"9\", \"michel tremblay\", \"left wing\", \"canada\", \"shawinigan cataractes (qmjhl)\"]]\nQuestion = Is it true that switzerland has a position of left wing , and a round greater than 4 , with timo vertala as the player?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    players = get_column_by_name(table_data, \"player\")\n    positions = get_column_by_name(table_data, \"position\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    answer = False\n    for round, player, position, nationality in zip(rounds, players, positions, nationalities):\n        if player.lower() == \"timo vertala\" and position.lower() == \"left wing\" and nationality.lower() == \"switzerland\":\n            if greater(int(round), 4):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "d485a95c-5f4e-4dbb-a749-6c590090b03b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1994 nhl entry draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"261\", \"per gustafsson\", \"defence\", \"sweden\", \"florida panthers\", \"hv71 (sweden)\"],[\"262\", \"jeremy stevenson\", \"left wing\", \"united states\", \"mighty ducks of anaheim\", \"sault ste marie greyhounds (ohl)\"],[\"263\", \"rob mara\", \"left wing\", \"united states\", \"chicago blackhawks\", \"belmont hill high school (hs - massachusetts)\"],[\"264\", \"jason issel\", \"left wing\", \"canada\", \"winnipeg jets\", \"prince albert raiders (whl)\"],[\"265\", \"steve nimigon\", \"left wing\", \"canada\", \"hartford whalers\", \"niagara falls thunder (ohl)\"],[\"266\", \"ladislav benysek\", \"defence\", \"czech republic\", \"edmonton oilers\", \"olomouc hc (czech republic)\"],[\"267\", \"jamie butt\", \"left wing\", \"canada\", \"ny rangers\", \"tacoma rockets (whl)\"],[\"268\", \"brian white\", \"defence\", \"united states\", \"tampa bay lightning\", \"arlington catholic high school (hs - massachusetts)\"],[\"269\", \"mike hanson\", \"centre\", \"united states\", \"new jersey devils\", \"minot high school (hs - north dakota)\"],[\"270\", \"jan lipiansky\", \"forward\", \"slovakia\", \"philadelphia flyers\", \"slovan bratislava (slovakia)\"],[\"271\", \"david beauregard\", \"left wing\", \"canada\", \"san jose sharks\", \"st hyacinthe lasers (qmjhl)\"],[\"272\", \"dick tarnstrom\", \"defence\", \"sweden\", \"new york islanders\", \"aik (sweden)\"],[\"273\", \"robert longpre\", \"centre\", \"canada\", \"vancouver canucks\", \"medicine hat tigers (whl)\"],[\"274\", \"antti tormanen\", \"left wing\", \"finland\", \"ottawa senators\", \"jokerit (finland)\"],[\"275\", \"sergei tertyshny\", \"defence\", \"russia\", \"washington capitals\", \"chelyabinsk traktor (russia)\"],[\"276\", \"scott fankhouser\", \"goaltender\", \"united states\", \"st louis blues\", \"university of massachusetts lowell (ncaa)\"],[\"277\", \"shayne wright\", \"defence\", \"canada\", \"buffalo sabres\", \"owen sound platers (ohl)\"],[\"278\", \"ross parsons\", \"defence\", \"canada\", \"montreal canadiens\", \"regina pats (whl)\"],[\"279\", \"pavel torgayev\", \"centre\", \"russia\", \"calgary flames\", \"tps (finland)\"],[\"280\", \"chris szysky\", \"right wing\", \"canada\", \"dallas stars\", \"swift current broncos (whl)\"],[\"281\", \"andrei yakhanov\", \"defence\", \"russia\", \"boston bruins\", \"ufa salavat yulayev (russia)\"],[\"282\", \"doug nolan\", \"defence\", \"united states\", \"toronto maple leafs\", \"catholic memorial high school (hs - massachusetts)\"],[\"283\", \"toivo suursoo\", \"left wing\", \"estonia\", \"detroit red wings\", \"krylya sovetov moscow (russia)\"],[\"284\", \"brian leitza\", \"goaltender\", \"united states\", \"pittsburgh penguins\", \"sioux city musketeers (ushl)\"],[\"285\", \"steven low\", \"defence\", \"canada\", \"quebec nordiques\", \"sherbrooke faucons (qmjhl)\"],[\"286\", \"kim johnsson\", \"defence\", \"sweden\", \"new york rangers\", \"malmã if (sweden)\"]]\nQuestion = Is it true that per gustafsson played for calgary flames?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    nhl_teams = get_column_by_name(table_data, \"nhl team\")\n    answer = False\n    for player, nhl_team in zip(players, nhl_teams):\n        if \"per gustafsson\" in player.lower() and \"calgary flames\" in nhl_team.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "5aa24e9b-f662-4ad8-a907-f56197fa09b0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2004 - 05 in scottish football\ntable_data = [[\"date\",\"venue\",\"score\",\"competition\",\"report\"],[\"18 august\",\"hampden park , glasgow (h)\",\"0 - 3\",\"friendly\",\"bbc sport\"],[\"3 september\",\"estadio ciudad de valencia , valencia (a)\",\"1 - 1\",\"friendly\",\"bbc sport\"],[\"8 september\",\"hampden park , glasgow (h)\",\"0 - 0\",\"wcq5\",\"bbc sport\"],[\"9 october\",\"hampden park , glasgow (h)\",\"0 - 1\",\"wcq5\",\"bbc sport\"],[\"13 october\",\"republican stadium , chişinău (a)\",\"1 - 1\",\"wcq5\",\"bbc sport\"],[\"17 november\",\"easter road , edinburgh (h)\",\"1 - 4\",\"friendly\",\"bbc sport\"],[\"26 march\",\"san siro , milan (a)\",\"0 - 2\",\"wcq5\",\"bbc sport\"],[\"4 june\",\"hampden park , glasgow (h)\",\"2 - 0\",\"wcq5\",\"bbc sport\"],[\"8 june\",\"dinamo stadion , minsk (a)\",\"0 - 0\",\"wcq5\",\"bbc sport\"]]\nQuestion = Is it true that the wcq5 competition has been held at hampden park , glasgow (h) , republican stadium , chişinău (a) , san siro , milan (a) , and dinamo stadion , minsk (a)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef contains_all(lst1, lst2):\n    return all(elem in lst1 for elem in lst2)\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"venue\")\n    competitions = get_column_by_name(table_data, \"competition\")\n    wcq5_venues = []\n    for venue, competition in zip(venues, competitions):\n        if competition.lower() == \"wcq5\":\n            wcq5_venues.append(venue)\n    expected_venues = [\"hampden park , glasgow (h)\", \"republican stadium , chişinău (a)\", \"san siro , milan (a)\", \"dinamo stadion , minsk (a)\"]\n    answer = contains_all(wcq5_venues, expected_venues)\n    return answer\n\n### END"}
{"id": "4bec4e0a-b191-4157-8623-845319bc72ad", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = world figure skating championships cumulative medal count\ntable_data = [[\"rank\",\"nation\",\"gold\",\"silver\",\"bronze\",\"total\"],[\"1\",\"united states\",\"53\",\"57\",\"76\",\"186\"],[\"2\",\"soviet union\",\"45\",\"42\",\"24\",\"111\"],[\"3\",\"austria\",\"36\",\"46\",\"34\",\"116\"],[\"4\",\"canada\",\"31\",\"35\",\"31\",\"97\"],[\"4\",\"russia\",\"30\",\"22\",\"22\",\"74\"],[\"6\",\"great britain\",\"28\",\"30\",\"24\",\"82\"],[\"7\",\"germany\",\"20\",\"31\",\"26\",\"77\"],[\"8\",\"sweden\",\"15\",\"7\",\"11\",\"33\"],[\"9\",\"hungary\",\"13\",\"7\",\"15\",\"35\"],[\"10\",\"east germany\",\"12\",\"16\",\"12\",\"40\"],[\"11\",\"france\",\"11\",\"18\",\"16\",\"45\"],[\"12\",\"norway\",\"10\",\"2\",\"5\",\"17\"],[\"13\",\"czechoslovakia\",\"9\",\"5\",\"5\",\"19\"],[\"14\",\"japan\",\"8\",\"6\",\"11\",\"25\"],[\"15\",\"china\",\"6\",\"8\",\"6\",\"20\"],[\"16\",\"switzerland\",\"4\",\"2\",\"2\",\"8\"],[\"17\",\"netherlands\",\"4\",\"1\",\"3\",\"8\"],[\"18\",\"finland\",\"3\",\"5\",\"3\",\"11\"],[\"19\",\"italy\",\"2\",\"3\",\"5\",\"10\"],[\"20\",\"south korea\",\"2\",\"2\",\"2\",\"6\"],[\"21\",\"bulgaria\",\"2\",\"1\",\"1\",\"4\"],[\"22\",\"ukraine\",\"2\",\"0\",\"2\",\"4\"],[\"23\",\"belgium\",\"2\",\"0\",\"1\",\"3\"],[\"24\",\"czech republic\",\"1\",\"0\",\"0\",\"1\"],[\"25\",\"kazakhstan\",\"0\",\"1\",\"0\",\"1\"],[\"26\",\"poland\",\"0\",\"0\",\"2\",\"2\"],[\"27\",\"israel\",\"0\",\"0\",\"1\",\"1\"],[\"27\",\"lithuania\",\"0\",\"0\",\"1\",\"1\"],[\"27\",\"spain\",\"0\",\"0\",\"1\",\"1\"]]\nQuestion = Is it true that the team with 1 silver , 3 bronze and a total of 8 is ranked 17?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    silvers = get_column_by_name(table_data, \"silver\")\n    bronzes = get_column_by_name(table_data, \"bronze\")\n    totals = get_column_by_name(table_data, \"total\")\n    for rank, silver, bronze, total in zip(ranks, silvers, bronzes, totals):\n        if equal_to(rank, \"17\") and equal_to(silver, \"1\") and equal_to(bronze, \"3\") and equal_to(total, \"8\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "5c5464a6-7c72-487c-beb7-cec710160d8b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of americas records in swimming\ntable_data = [[\"event\", \"time\", \"nationality\", \"date\", \"meet\", \"location\"],[\"50 m freestyle\", \"20.91\", \"brazil\", \"18 december 2009\", \"brazilian championships\", \"são paulo, brazil\"],[\"100 m freestyle\", \"46.91\", \"brazil\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m freestyle\", \"1:42.96\", \"united states\", \"12 august 2008\", \"olympic games\", \"beijing, china\"],[\"400 m freestyle\", \"3:42.78\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"800 m freestyle\", \"7:41.86\", \"canada\", \"27 july 2011\", \"world championships\", \"shanghai, china\"],[\"1500 m freestyle\", \"14:39.63\", \"canada\", \"4 august 2012\", \"olympic games\", \"london, united kingdom\"],[\"50 m backstroke\", \"24.33\", \"united states\", \"5 december 2008\", \"dutch swim cup\", \"eindhoven, netherlands\"],[\"100 m backstroke\", \"51.94\", \"united states\", \"8 july 2009\", \"us championships\", \"indianapolis, united states\"],[\"200 m backstroke\", \"1:51.92\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m breaststroke\", \"26.76\", \"brazil\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"100 m breaststroke\", \"58.96\", \"united states\", \"26 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m breaststroke\", \"2:07.42\", \"united states\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m butterfly\", \"22.76\", \"brazil\", \"26 april 2012\", \"maria lenk trophy\", \"rio de janeiro, brazil\"],[\"100 m butterfly\", \"49.82\", \"united states\", \"1 august 2009\", \"world championships\", \"rome, italy\"],[\"200 m butterfly\", \"1:51.51\", \"united states\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m individual medley\", \"1:54.00\", \"united states\", \"28 july 2011\", \"world championships\", \"shanghai, china\"],[\"400 m individual medley\", \"4:03.84\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"4100 m freestyle relay\", \"3:08.24\", \"united states\", \"11 august 2008\", \"olympic games\", \"beijing, china\"],[\"4200 m freestyle relay\", \"6:58.55\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"4100 m medley relay\", \"3:27.28\", \"united states\", \"2 august 2009\", \"world championships\", \"rome, italy\"]]\nQuestion = Is it true that the 50 m freestyle event took place the day before december 18 , 2009?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    dates = get_column_by_name(table_data, \"date\")\n    for event, date in zip(events, dates):\n        if event.lower() == \"50 m freestyle\":\n            answer = date.lower() == \"17 december 2009\"\n            break\n    return answer\n\n### END"}
{"id": "06773630-fa54-4ee1-9f5d-3390f8be3341", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = media in fargo - moorhead\ntable_data = [[\"frequency\", \"call sign\", \"name\", \"format\", \"owner\"],[\"88.7 fm\", \"kfbn\", \"heaven 88.7\", \"christian\", \"fargo baptist church\"],[\"90.3 fm\", \"kccd\", \"minnesota public radio / npr\", \"news / talk\", \"minnesota public radio\"],[\"91.1 fm\", \"kccm\", \"minnesota public radio / npr\", \"classical\", \"minnesota public radio\"],[\"91.9 fm\", \"kdsu\", \"prairie public / npr\", \"adult album alternative\", \"north dakota state university\"],[\"92.7 fm\", \"kzdr\", \"92.7 the bone\", \"active rock\", \"mediactive\"],[\"93.7 fm\", \"wday - fm\", \"y94\", \"top 40 (chr)\", \"radio fargo - moorhead\"],[\"95.1 fm\", \"kbvb\", \"bob 95 fm\", \"country\", \"radio fargo - moorhead\"],[\"95.9 fm\", \"kxbq - lp\", \"dive 95.9\", \"alternative\", \"women 's care clinic\"],[\"96.3 fm\", \"knds - lp\", \"thunderradio radio free fargo\", \"college\", \"north dakota state university\"],[\"97.9 fm\", \"kfnw - fm\", \"life 97.9\", \"contemporary christian music\", \"northwestern college\"],[\"98.7 fm\", \"klta\", \"big 98.7\", \"adult chr\", \"triad broadcasting\"],[\"99.3 fm\", \"k257ep\", \"k - love\", \"contemporary christian music ( kklq translator )\", \"educational media foundation\"],[\"99.9 fm\", \"kvox - fm\", \"froggy 99.9\", \"country\", \"triad broadcasting\"],[\"100.7 fm\", \"kklq\", \"k - love\", \"contemporary christian music\", \"educational media foundation\"],[\"101.9 fm\", \"krwk\", \"101.9 talk fm\", \"talk\", \"radio fargo - moorhead\"],[\"103.3 fm\", \"kzcr\", \"z 103.3\", \"rock / aaa\", \"jerry papenfuss\"],[\"103.9 fm\", \"kvmi\", \"103.9 the truck\", \"country\", \"vision media incorporated\"],[\"104.1 fm\", \"kbot\", \"104.1 the wave\", \"adult contemporary\", \"leighton broadcasting\"],[\"104.7 fm\", \"kmjo\", \"104.7 popster fm\", \"adult hits\", \"radio fargo - moorhead\"],[\"105.1 fm\", \"kqwb\", \"q 105.1\", \"active rock\", \"triad broadcasting\"],[\"106.1 fm\", \"kqlx - fm\", \"thunder 106.1\", \"classic country\", \"great plains integrated marketing\"],[\"106.5 fm\", \"krjb\", \"krjb 106.5\", \"country\", \"r&j broadcasting\"],[\"106.9 fm\", \"kegk\", \"eagle 106.9\", \"classic hits\", \"great plains integrated marketing\"],[\"107.9 fm\", \"kpfx\", \"107.9 the fox\", \"classic rock\", \"triad broadcasting\"]]\nQuestion = Is it true that northwestern college owns the christian station 97.9 fm?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    owners = get_column_by_name(table_data, \"owner\")\n    formats = get_column_by_name(table_data, \"format\")\n    answer = False\n    for frequency, owner, format in zip(frequencies, owners, formats):\n        if frequency == \"97.9 fm\" and format.lower() == \"christian\":\n            answer = owner.lower() == \"northwestern college\"\n            break\n    return answer\n\n### END"}
{"id": "4ff29e2c-92c8-4319-96bb-0a8f2c6df6a6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of airlines of singapore\ntable_data = [[\"airlines\", \"iata\", \"icao\", \"callsign\", \"commenced operations\"],[\"jetstar asia airways\", \"3k\", \"jsa\", \"jetstar asia\", \"2004\"],[\"scoot\", \"tz\", \"sco\", \"scooter\", \"2012\"],[\"silkair\", \"mi\", \"slk\", \"silkair\", \"1976\"],[\"singapore airlines\", \"sq\", \"sia\", \"singapore\", \"1947\"],[\"singapore airlines cargo\", \"sq\", \"sqc\", \"singcargo\", \"2001\"],[\"tigerair\", \"tr\", \"tgw\", \"go cat\", \"2003\"],[\"valuair\", \"vf\", \"vlu\", \"valuair\", \"2004\"]]\nQuestion = Is it true that the callsign with an icao of sco is scooter?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    icaos = get_column_by_name(table_data, \"icao\")\n    callsigns = get_column_by_name(table_data, \"callsign\")\n    for icao, callsign in zip(icaos, callsigns):\n        if icao.lower() == \"sco\":\n            answer = equal_to(callsign, \"scooter\")\n            break \n    return answer\n\n### END"}
{"id": "dbb73f24-cea9-420b-abfd-8030cfb17dfe", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = statistics relating to enlargement of the european union\ntable_data = [[\"member countries\", \"population\", \"area (km square)\", \"gdp (billion us)\", \"gdp per capita (us)\"],[\"cyprus\", \"775927\", \"9250\", \"11.681\", \"15054\"],[\"czech republic\", \"10246178\", \"78866\", \"105.248\", \"10272\"],[\"estonia\", \"1341664\", \"45226\", \"22.384\", \"16684\"],[\"hungary\", \"10032375\", \"93030\", \"102183\", \"10185\"],[\"latvia\", \"2306306\", \"64589\", \"24.826\", \"10764\"],[\"lithuania\", \"3607899\", \"65200\", \"31.971\", \"8861\"],[\"malta\", \"396851\", \"316\", \"5.097\", \"12843\"],[\"poland\", \"38580445\", \"311904\", \"316.438\", \"8202\"],[\"slovakia\", \"5423567\", \"49036\", \"42.800\", \"7810\"],[\"slovenia\", \"2011473\", \"20273\", \"29.633\", \"14732\"],[\"accession countries\", \"74722685\", \"737690\", \"685.123\", \"9169\"],[\"existing members (2004)\", \"381781620\", \"3367154\", \"7711.871\", \"20200\"],[\"eu25 (2004)\", \"456504305 ( + 19.57%)\", \"4104844 ( + 17.97%)\", \"8396994 ( + 8.88%)\", \"18394 (8.94%)\"]]\nQuestion = Is it true that the country has a gdp (billion us) 31.971 and gdp per capita (us) of 8861?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    gdp_billion_us = get_column_by_name(table_data, \"gdp (billion us)\")\n    gdp_per_capita_us = get_column_by_name(table_data, \"gdp per capita (us)\")\n    for gdp_billion, gdp_per_capita in zip(gdp_billion_us, gdp_per_capita_us):\n        if equal_to(gdp_billion, \"31.971\") and equal_to(gdp_per_capita, \"8861\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "40fcd0e8-4f49-4c30-ae2d-904489a77b16", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = bmw m1 procar championship\ntable_data = [[\"round\", \"date\", \"event\", \"circuit\", \"winning driver\", \"winning team\"],[\"1\", \"may 12\", \"belgian grand prix\", \"circuit zolder\", \"elio de angelis\", \"squadra osella corse\"],[\"2\", \"may 26\", \"monaco grand prix\", \"circuit de monaco\", \"niki lauda\", \"project four\"],[\"-\", \"june 3\", \"gunnar nilsson trophy\", \"donington park\", \"nelson piquet\", \"bmw motorsport\"],[\"3\", \"june 30\", \"french grand prix\", \"dijon - prenois\", \"nelson piquet\", \"bmw motorsport\"],[\"4\", \"july 13\", \"british grand prix\", \"silverstone circuit\", \"niki lauda\", \"project four\"],[\"5\", \"july 28\", \"german grand prix\", \"hockenheimring\", \"niki lauda\", \"project four\"],[\"6\", \"august 11\", \"austrian grand prix\", \"österreichring\", \"jacques laffite\", \"bmw motorsport\"],[\"7\", \"august 25\", \"dutch grand prix\", \"circuit zandvoort\", \"hans - joachim stuck\", \"cassani racing\"],[\"8\", \"september 8\", \"italian grand prix\", \"autodromo nazionale monza\", \"hans - joachim stuck\", \"cassani racing\"]]\nQuestion = Is it true that squadra osella corse was the winning team at the belgian grand prix on may 12?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    dates = get_column_by_name(table_data, \"date\")\n    winning_teams = get_column_by_name(table_data, \"winning team\")\n    for event, date, winning_team in zip(events, dates, winning_teams):\n        if equal_to(event, \"belgian grand prix\") and equal_to(date, \"may 12\"):\n            answer = equal_to(winning_team, \"squadra osella corse\")\n            break \n    return answer\n\n### END"}
{"id": "63f67d69-3275-412a-b493-24a1bba3278d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = ádammo\ntable_data = [[\"año\", \"trabajo nominado\", \"premio\", \"categoría\", \"country\", \"resultado\"],[\"2009\", \"adammo\", \"mtv latin america\", \"revelation artist\", \"colombia\", \"nominate\"],[\"2009\", \"adammo\", \"mtv latin america\", \"best new artist : center\", \"colombia\", \"winner\"],[\"2009\", \"adammo\", \"mtv latin america\", \"prize zone\", \"colombia\", \"nominate\"],[\"2010\", \"adammo\", \"premios apdayc\", \"rock group of the year\", \"perú\", \"winner\"],[\"2010\", \"adammo\", \"premios apdayc\", \"artist of the year\", \"perú\", \"nominate\"],[\"2010\", \"adammo\", \"premios orgullosamente latino\", \"grupo latin of the year\", \"mexico\", \"nominate\"],[\"2010\", \"algún día\", \"latin grammy awards\", \"short video of the year\", \"eeuu\", \"nominate\"],[\"2010\", \"adammo\", \"premios clarín\", \"best music video of the year\", \"argentina\", \"nominate\"],[\"2010\", \"adammo\", \"premios clarín\", \"best international breakthrough\", \"argentina\", \"nominate\"],[\"2010\", \"adammo\", \"premios clarín\", \"best international album\", \"argentina\", \"nominate\"],[\"2010\", \"algún día\", \"radio can\", \"best video\", \"colombia\", \"nominate\"],[\"2011\", \"adammo\", \"premios apdayc\", \"rock group of the year\", \"perú\", \"winner\"],[\"2011\", \"adammo\", \"mtv europe music awards\", \"world wide act latin american\", \"europa\", \"nominate\"],[\"2011\", \"adammo\", \"zona joven\", \"best pop rock peruano\", \"perú\", \"winner\"],[\"2012\", \"siento que caigo\", \"radio can\", \"song of the year\", \"perú\", \"nominate\"]]\nQuestion = Is it true that in the 2010 latin grammy awards in categoría of short video of the year at the eeuu country has resultado of nominate?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    años = get_column_by_name(table_data, \"año\")\n    premios = get_column_by_name(table_data, \"premio\")\n    categorías = get_column_by_name(table_data, \"categoría\")\n    countries = get_column_by_name(table_data, \"country\")\n    resultados = get_column_by_name(table_data, \"resultado\")\n    for año, premio, categoría, country, resultado in zip(años, premios, categorías, countries, resultados):\n        if año == \"2010\" and premio.lower() == \"latin grammy awards\" and categoría.lower() == \"short video of the year\" and country.lower() == \"eeuu\" and resultado.lower() == \"nominate\":\n            return True\n    return False\n\n### END"}
{"id": "81a6a8a6-c0a8-4b28-be5f-4f8e6796ec01", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = prr locomotive classification\ntable_data = [[\"prr class\", \"builders model\", \"build date\", \"total produced\", \"wheel arrangement\", \"service\", \"power output\"],[\"bs6\", \"vo - 660\", \"1942 - 1945\", \"12\", \"b - b\", \"switcher\", \"\"],[\"bs6\", \"ds - 4 - 4 - 660\", \"1942 - 1945\", \"99\", \"b - b\", \"switcher\", \"\"],[\"bs7\", \"ds - 4 - 4 - 750\", \"1951\", \"24\", \"b - b\", \"switcher\", \"\"],[\"bs7\", \"s7\", \"1951\", \"7\", \"b - b\", \"switcher\", \"\"],[\"bs10\", \"vo\", \"1943 - 1945\", \"8\", \"b - b\", \"switcher\", \"\"],[\"bs10\", \"ds - 4 - 4 - 1000\", \"1948 - 1950\", \"137\", \"b - b\", \"switcher\", \"\"],[\"bs12\", \"s - 12\", \"1951 - 1956\", \"98\", \"b - b\", \"switcher\", \"\"],[\"bf15\", \"dr - 4 - 4 - 1500\", \"1940 - 1950\", \"34\", \"b - b\", \"freight\", \"\"],[\"bf16\", \"rf - 16 (a)\", \"1950 - 1952\", \"72\", \"b - b\", \"freight\", \"\"],[\"bf16\", \"rf - 16 (b)\", \"1950 - 1952\", \"30\", \"b - b\", \"freight\", \"\"],[\"bp60a\", \"dr - 12 - 8 - 3000\", \"1947 - 1948\", \"24\", \"2 - d - d - 2\", \"pass\", \"\"],[\"bp20\", \"dr - 6 - 4 - 2000\", \"1948\", \"18\", \"a1a - a1a\", \"pass\", \"\"],[\"bp20\", \"dr - 6 - 4 - 2000\", \"1948\", \"9\", \"a1a - a1a\", \"pass\", \"\"],[\"brs10\", \"drs - 4 - 4 - 1000\", \"1949 - 1950\", \"6\", \"b - b\", \"pass\", \"\"],[\"brs12\", \"rs - 12\", \"1951 - 1954\", \"8\", \"b - b\", \"pass\", \"\"],[\"brs15\", \"drs - 4 - 4 - 1500\", \"1950\", \"8\", \"b - b\", \"pass\", \"\"],[\"brs16\", \"as - 16\", \"1953 - 1955\", \"28\", \"c - c\", \"pass\", \"\"],[\"brs24\", \"rt - 624\", \"1951 - 1954\", \"22\", \"c - c\", \"transfer\", \"\"],[\"lrs25\", \"t2500\", \"1950 - 1951\", \"22\", \"c - c\", \"transfer\", \"\"]]\nQuestion = Is it true that the model with a prr class of brs24 was built inbetween 1951 - 1954?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    prr_classes = get_column_by_name(table_data, \"prr class\")\n    build_dates = get_column_by_name(table_data, \"build date\")\n    for prr_class, build_date in zip(prr_classes, build_dates):\n        if prr_class.lower() == \"brs24\":\n            answer = build_date == \"1951 - 1954\"\n            break\n    return answer\n\n### END"}
{"id": "e7525dda-3d5f-44d6-aa26-27aabbfc97cd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = vern schuppan\ntable_data = [[\"year\", \"chassis\", \"engine\", \"start\", \"finish\"],[\"1976\", \"eagle\", \"offy\", \"17th\", \"18th\"],[\"1977\", \"wildcat\", \"offy\", \"dnq\", \"dnq\"],[\"1979\", \"wildcat\", \"dgs\", \"22nd\", \"21st\"],[\"1981\", \"mclaren\", \"cosworth\", \"18th\", \"3rd\"],[\"1982\", \"penske\", \"cosworth\", \"dnq\", \"dnq\"]]\nQuestion = Is it true that dnq is the start for years less than 1977?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    starts = get_column_by_name(table_data, \"start\")\n    for year, start in zip(years, starts):\n        if int(year) < 1977:\n            if not equal_to(start, \"dnq\"):\n                return False\n    return True\n\n### END"}
{"id": "e8b2c66f-6420-4bcc-b7cc-078ccfba6e64", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rivers state\ntable_data = [[\"lga name\",\"area (km 2 )\",\"census 2006 population\",\"administrative capital\",\"postal code\"],[\"port harcourt\",\"109\",\"541115\",\"port harcourt\",\"500\"],[\"obio - akpor\",\"260\",\"464789\",\"rumuodumaya\",\"500\"],[\"okrika\",\"222\",\"222026\",\"okrika\",\"500\"],[\"ogu / bolo\",\"89\",\"74683\",\"ogu\",\"500\"],[\"eleme\",\"138\",\"190884\",\"eleme\",\"501\"],[\"tai\",\"159\",\"117797\",\"sakpenwa\",\"501\"],[\"gokana\",\"126\",\"228828\",\"kpor\",\"501\"],[\"khana\",\"560\",\"294217\",\"bori\",\"502\"],[\"oyigbo\",\"248\",\"122687\",\"afam\",\"502\"],[\"opobo / nkoro\",\"130\",\"151511\",\"opobo town\",\"503\"],[\"andoni\",\"233\",\"211009\",\"ngo\",\"503\"],[\"bonny\",\"642\",\"215358\",\"bonny\",\"503\"],[\"degema\",\"1011\",\"249773\",\"degema\",\"504\"],[\"asari - toru\",\"113\",\"220100\",\"buguma\",\"504\"],[\"akuku - toru\",\"1443\",\"156006\",\"abonnema\",\"504\"],[\"abua / odual\",\"704\",\"282988\",\"abua\",\"510\"],[\"ahoada west\",\"403\",\"249425\",\"akinima\",\"510\"],[\"ahoada east\",\"341\",\"166747\",\"ahoada\",\"510\"],[\"ogba / egbema / ndoni\",\"969\",\"284010\",\"omuku\",\"510\"],[\"emohua\",\"831\",\"201901\",\"emohua\",\"511\"],[\"ikwerre\",\"655\",\"189726\",\"isiokpo\",\"511\"],[\"etche\",\"805\",\"249454\",\"okehi\",\"512\"]]\nQuestion = Is it true that 130 areas (km 2) have 151511 as the census 2006 population in afam?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    areas = get_column_by_name(table_data, \"area (km 2 )\")\n    populations = get_column_by_name(table_data, \"census 2006 population\")\n    capitals = get_column_by_name(table_data, \"administrative capital\")\n    for area, population, capital in zip(areas, populations, capitals):\n        if capital.lower() == \"afam\":\n            answer = equal_to(area, \"130\") and equal_to(population, \"151511\")\n            break \n    return answer\n\n### END"}
{"id": "6bc21409-5875-4000-b34d-320d0f6e707d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"title\", \"from album\", \"label\", \"label - nr\"],[\"1962\", \"tonight / sinnin' sam\", \"lookin' ahead\", \"pacific jazz\", \"x - 340\"],[\"1962\", \"the young rabbits / song of india\", \"lookin' ahead\", \"pacific jazz\", \"x - 342\"],[\"1962\", \"congolese sermon / weather beat\", \"(only on 45)\", \"pacific jazz\", \"x - 357\"],[\"1963\", \"no name samba / tough talk\", \"tough talk\", \"world pacific\", \"x - 371\"],[\"1963\", \"turkish black / boopie\", \"tough talk\", \"world pacific\", \"x - 388\"],[\"1963\", \"spanish castles / bluesette\", \"jazz waltz (w les mccann)\", \"world pacific\", \"406\"],[\"1964\", \"heat wave / on broadway\", \"heat wave\", \"world pacific\", \"401\"],[\"1964\", \"i remember tomorrow / long john\", \"stretchin' out\", \"world pacific\", \"412\"],[\"1965\", \"tough talk / the thing\", \"the thing\", \"world pacific\", \"77800\"],[\"1965\", \"aqua dulce / soul bourgeoisie\", \"chile con soul\", \"world pacific\", \"77806\"],[\"1966\", \"scratch / uptight\", \"talk that talk\", \"pacific jazz\", \"88125\"],[\"1968\", \"ooga - boo - ga - loo / eleanor rigby\", \"lighthouse '68\", \"pacific jazz\", \"88144\"],[\"1968\", \"hey jude / love and peace\", \"powerhouse\", \"pacific jazz\", \"88146\"],[\"1969\", \"get back / willie and laura mae jones\", \"lighthouse '69\", \"word pacific jazz\", \"88153\"],[\"1970\", \"way back home / jackson\", \"old socks , new shoes\", \"chisa\", \"c - 8010\"]]\nQuestion = Is it true that the thing released an album in 1965 for the label chisa?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    titles = get_column_by_name(table_data, \"title\")\n    labels = get_column_by_name(table_data, \"label\")\n    answer = False\n    for year, title, label in zip(years, titles, labels):\n        if \"1965\" in year and \"the thing\" in title.lower() and \"chisa\" in label.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "3b935a52-9104-42a2-bfb0-5802fd58eb17", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"population (region total)\", \"population (stanthorpe)\", \"population (warwick)\", \"population (allora)\", \"population (glengallan)\", \"population (rosenthal)\"],[\"1933\", \"25016\", \"6934\", \"6664\", \"2624\", \"6334\", \"2460\"],[\"1947\", \"24009\", \"7419\", \"7129\", \"2217\", \"5269\", \"1975\"],[\"1954\", \"25862\", \"8335\", \"9151\", \"2106\", \"4639\", \"1631\"],[\"1961\", \"26288\", \"8514\", \"9843\", \"1961\", \"4388\", \"1582\"],[\"1966\", \"25917\", \"8503\", \"10065\", \"1890\", \"3906\", \"1553\"],[\"1971\", \"24115\", \"8189\", \"9303\", \"1719\", \"3410\", \"1494\"],[\"1976\", \"24583\", \"8709\", \"9169\", \"1666\", \"3491\", \"1548\"],[\"1981\", \"24300\", \"8576\", \"8853\", \"1679\", \"3611\", \"1581\"],[\"1986\", \"26270\", \"9143\", \"9435\", \"2041\", \"3688\", \"1963\"],[\"1991\", \"28288\", \"9556\", \"10393\", \"2132\", \"3966\", \"2241\"],[\"1996\", \"29563\", \"9596\", \"10896\", \"2234\", \"3990\", \"2742\"],[\"2001\", \"30554\", \"9860\", \"10956\", \"2439\", \"4088\", \"3129\"]]\nQuestion = Is it true that when rosenthal had a population of 3129 stanthorpe had a population of 8709?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    stanthorpe_pop = get_column_by_name(table_data, \"population (stanthorpe)\")\n    rosenthal_pop = get_column_by_name(table_data, \"population (rosenthal)\")\n    for stanthorpe, rosenthal in zip(stanthorpe_pop, rosenthal_pop):\n        if rosenthal == \"3129\":\n            answer = equal_to(stanthorpe, \"8709\")\n            break \n    return answer\n\n### END"}
{"id": "f74db005-a0c0-40f2-b2ba-acd1dc1d5796", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glamorgan county cricket club\ntable_data = [[\"score\",\"batsmen\",\"against\",\"location\",\"year\"],[\"374\",\"matthew elliott and steve james\",\"sussex\",\"colwyn bay\",\"2000\"],[\"252\",\"matthew maynard and david hemp\",\"northamptonshire\",\"sophia gardens\",\"2002\"],[\"313\",\"emrys davies and willie jones\",\"essex\",\"brentwood\",\"1948\"],[\"425\",\"adrian dale and viv richards\",\"middlesex\",\"sophia gardens\",\"1993\"],[\"264\",\"maurice robinson and stan montgomery\",\"hampshire\",\"bournemouth\",\"1949\"],[\"240\",\"jim allenby and mark wallace\",\"surrey\",\"the brit oval\",\"2009\"],[\"211\",\"tony cottey and ottis gibson\",\"leicestershire\",\"swansea\",\"1996\"],[\"202\",\"dai davies and joe hills\",\"sussex\",\"eastbourne\",\"1928\"],[\"203\",\"joe hills and johnnie clay\",\"worcestershire\",\"swansea\",\"1929\"],[\"143\",\"terry davies and simon daniels\",\"gloucestershire\",\"swansea\",\"1982\"]]\nQuestion = Is it true that the batsmen from the year 1982 were joe hills and johnnie clay?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    batsmen = get_column_by_name(table_data, \"batsmen\")\n    for year, batsman in zip(years, batsmen):\n        if year == \"1982\":\n            answer = equal_to(batsman, \"joe hills and johnnie clay\")\n            break \n    return answer\n\n### END"}
{"id": "f1ff2d21-086e-42a0-b110-af4d42c6beb2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = media in fargo - moorhead\ntable_data = [[\"frequency\", \"call sign\", \"name\", \"format\", \"owner\"],[\"88.7 fm\", \"kfbn\", \"heaven 88.7\", \"christian\", \"fargo baptist church\"],[\"90.3 fm\", \"kccd\", \"minnesota public radio / npr\", \"news / talk\", \"minnesota public radio\"],[\"91.1 fm\", \"kccm\", \"minnesota public radio / npr\", \"classical\", \"minnesota public radio\"],[\"91.9 fm\", \"kdsu\", \"prairie public / npr\", \"adult album alternative\", \"north dakota state university\"],[\"92.7 fm\", \"kzdr\", \"92.7 the bone\", \"active rock\", \"mediactive\"],[\"93.7 fm\", \"wday - fm\", \"y94\", \"top 40 (chr)\", \"radio fargo - moorhead\"],[\"95.1 fm\", \"kbvb\", \"bob 95 fm\", \"country\", \"radio fargo - moorhead\"],[\"95.9 fm\", \"kxbq - lp\", \"dive 95.9\", \"alternative\", \"women 's care clinic\"],[\"96.3 fm\", \"knds - lp\", \"thunderradio radio free fargo\", \"college\", \"north dakota state university\"],[\"97.9 fm\", \"kfnw - fm\", \"life 97.9\", \"contemporary christian music\", \"northwestern college\"],[\"98.7 fm\", \"klta\", \"big 98.7\", \"adult chr\", \"triad broadcasting\"],[\"99.3 fm\", \"k257ep\", \"k - love\", \"contemporary christian music ( kklq translator )\", \"educational media foundation\"],[\"99.9 fm\", \"kvox - fm\", \"froggy 99.9\", \"country\", \"triad broadcasting\"],[\"100.7 fm\", \"kklq\", \"k - love\", \"contemporary christian music\", \"educational media foundation\"],[\"101.9 fm\", \"krwk\", \"101.9 talk fm\", \"talk\", \"radio fargo - moorhead\"],[\"103.3 fm\", \"kzcr\", \"z 103.3\", \"rock / aaa\", \"jerry papenfuss\"],[\"103.9 fm\", \"kvmi\", \"103.9 the truck\", \"country\", \"vision media incorporated\"],[\"104.1 fm\", \"kbot\", \"104.1 the wave\", \"adult contemporary\", \"leighton broadcasting\"],[\"104.7 fm\", \"kmjo\", \"104.7 popster fm\", \"adult hits\", \"radio fargo - moorhead\"],[\"105.1 fm\", \"kqwb\", \"q 105.1\", \"active rock\", \"triad broadcasting\"],[\"106.1 fm\", \"kqlx - fm\", \"thunder 106.1\", \"classic country\", \"great plains integrated marketing\"],[\"106.5 fm\", \"krjb\", \"krjb 106.5\", \"country\", \"r&j broadcasting\"],[\"106.9 fm\", \"kegk\", \"eagle 106.9\", \"classic hits\", \"great plains integrated marketing\"],[\"107.9 fm\", \"kpfx\", \"107.9 the fox\", \"classic rock\", \"triad broadcasting\"]]\nQuestion = Is it true that q 105.1 has a call sign of kqlx - fm?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    call_signs = get_column_by_name(table_data, \"call sign\")\n    for name, call_sign in zip(names, call_signs):\n        if name.lower() == \"q 105.1\":\n            answer = equal_to(call_sign, \"kqlx - fm\")\n            break \n    return answer\n\n### END"}
{"id": "178df756-96b7-4d86-8919-2eaf3e656399", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2005 cfl draft\ntable_data = [[\"pick\", \"cfl team\", \"player\", \"position\", \"college\"],[\"45\", \"calgary stampeders\", \"brett ralph\", \"wr\", \"alberta\"],[\"46\", \"ottawa renegades\", \"lenard semajuste\", \"fb\", \"adams state\"],[\"47\", \"winnipeg blue bombers\", \"ryan bisson\", \"ol\", \"northwood\"],[\"48\", \"saskatchewan roughriders\", \"ryan gottselig\", \"dl\", \"saskatchewan\"],[\"49\", \"montreal alouettes (via edmonton)\", \"adam eckert\", \"wr\", \"dickinson state\"],[\"50\", \"hamilton tiger - cats\", \"andrew paopao\", \"dl\", \"san jose state\"],[\"51\", \"montreal alouettes\", \"olivier manigat\", \"ol\", \"columbia\"],[\"52\", \"bc lions\", \"karl ortmanns\", \"ol\", \"acadia\"],[\"53\", \"toronto argonauts\", \"ian forde\", \"rb\", \"waterloo\"]]\nQuestion = Is it true that the cfl team ottawa renegades picked a wr from dickenson state?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    cfl_teams = get_column_by_name(table_data, \"cfl team\")\n    positions = get_column_by_name(table_data, \"position\")\n    colleges = get_column_by_name(table_data, \"college\")\n    answer = False\n    for cfl_team, position, college in zip(cfl_teams, positions, colleges):\n        if cfl_team.lower() == \"ottawa renegades\" and position.lower() == \"wr\" and college.lower() == \"dickinson state\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "b288a6f7-9d5e-493c-bb16-0ac991ae7cbc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = toronto and nipissing railway\ntable_data = [[\"number\",\"builder\",\"type\",\"date\",\"works number\"],[\"1\",\"avonside engine company\",\"4 - 4 - 0\",\"september 1870\",\"808\"],[\"2\",\"canadian engine & machinery company\",\"4 - 4 - 0\",\"november 1870\",\"83\"],[\"3\",\"canadian engine & machinery company\",\"4 - 4 - 0\",\"december 1870\",\"84\"],[\"4\",\"canadian engine & machinery company\",\"4 - 4 - 0\",\"early 1871\",\"85\"],[\"5\",\"canadian engine & machinery company\",\"4 - 4 - 0\",\"march 1871\",\"86\"],[\"6\",\"canadian engine & machinery company\",\"4 - 4 - 0\",\"may 1871\",\"87\"],[\"7\",\"canadian engine & machinery company\",\"4 - 4 - 0\",\"may 1871\",\"88\"],[\"8\",\"avonside engine company\",\"4 - 6 - 0\",\"december 1871\",\"867\"],[\"9\",\"avonside engine company\",\"0 - 6 - 6 - 0 fairlie\",\"december 1871\",\"864 & 865\"],[\"10\",\"avonside engine company\",\"4 - 6 - 0\",\"early 1873\",\"uncertain but probably one of 931 - 934\"],[\"11\",\"avonside engine company\",\"4 - 6 - 0\",\"1872\",\"uncertain but probably one of 935 - 939\"],[\"12\",\"avonside engine company\",\"4 - 6 - 0\",\"early 1873\",\"uncertain but probably one of 935 - 939\"]]\nQuestion = Is it true that 0 - 6 - 6 - 0 fairlie had a builder of canadian engine & machinery company , and a number of 9?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    numbers = get_column_by_name(table_data, \"number\")\n    builders = get_column_by_name(table_data, \"builder\")\n    types = get_column_by_name(table_data, \"type\")\n    for number, builder, type in zip(numbers, builders, types):\n        if number == \"9\" and builder.lower() == \"canadian engine & machinery company\" and type.lower() == \"0 - 6 - 6 - 0 fairlie\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "b4fa94c1-3182-46b8-ab69-a3c0839b366c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 melbourne cup\ntable_data = [[\"saddle cloth\", \"horse\", \"trainer\", \"jockey\", \"weight (kg)\", \"barrier\", \"placing\"],[\"1\", \"septimus\", \"aidan o'brien\", \"j p murtagh\", \"58.5\", \"10\", \"18\"],[\"2\", \"master o 'reilly\", \"danny o'brien\", \"v duric\", \"55\", \"6\", \"4\"],[\"3\", \"honolulu\", \"aidan o'brien\", \"colm odonoghue\", \"54.5\", \"24\", \"21\"],[\"4\", \"cest la guerre\", \"john sadler\", \"b prebble\", \"54\", \"5\", \"3\"],[\"5\", \"nom du jeu\", \"murray baker\", \"j lloyd\", \"54\", \"1\", \"8\"],[\"6\", \"yellowstone\", \"jane chapple - hyam\", \"j f egan\", \"54\", \"scr\", \"scr\"],[\"7\", \"zipping\", \"john sadler\", \"d nikolic\", \"54\", \"16\", \"9\"],[\"8\", \"mad rush\", \"luca cumani\", \"damien oliver\", \"53.5\", \"4\", \"7\"],[\"9\", \"ice chariot\", \"ron maund\", \"m rodd\", \"53\", \"22\", \"11\"],[\"10\", \"viewed\", \"bart cummings\", \"b shinn\", \"53\", \"9\", \"1\"],[\"11\", \"littorio\", \"nigel blackiston\", \"s r king\", \"52.5\", \"17\", \"13\"],[\"12\", \"bauer\", \"luca cumani\", \"c w brown\", \"52\", \"13\", \"2\"],[\"13\", \"boundless\", \"stephen mckee\", \"g j childs\", \"52\", \"20\", \"15\"],[\"14\", \"gallopin\", \"danny o'brien\", \"j winks\", \"52\", \"21\", \"dnf\"],[\"15\", \"guyno\", \"lou luciani\", \"c newitt\", \"52\", \"8\", \"12\"],[\"16\", \"zarita\", \"pat hyland\", \"d dunn\", \"52\", \"scr\", \"scr\"],[\"17\", \"newport\", \"paul perry\", \"chris symons\", \"51.5\", \"15\", \"10\"],[\"18\", \"profound beauty\", \"dermot k weld\", \"glen boss\", \"51.5\", \"2\", \"5\"],[\"19\", \"red lord\", \"anthony cummings\", \"nicholas hall\", \"51.5\", \"14\", \"16\"],[\"20\", \"varevees\", \"richard gibson\", \"craig williams\", \"51.5\", \"23\", \"14\"],[\"21\", \"prize lady\", \"graeme sanders\", \"m c sweeney\", \"51\", \"18\", \"17\"],[\"22\", \"alessandro volta\", \"aidan o'brien\", \"w m lordan\", \"50.5\", \"11\", \"20\"],[\"23\", \"barbaricus\", \"danny o'brien\", \"s baster\", \"50.5\", \"3\", \"19\"],[\"24\", \"moatize\", \"bart cummings\", \"ms c lindop\", \"50\", \"19\", \"6\"]]\nQuestion = Is it true that the horse named viewed is saddle cloth 10?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    horses = get_column_by_name(table_data, \"horse\")\n    saddle_cloths = get_column_by_name(table_data, \"saddle cloth\")\n    for horse, saddle_cloth in zip(horses, saddle_cloths):\n        if horse.lower() == \"viewed\":\n            answer = equal_to(saddle_cloth, \"10\")\n            break \n    return answer\n\n### END"}
{"id": "43657f2d-2a0f-4e76-b08a-5b10e70b35ec", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of australian football league pre - season and night series premiers\ntable_data = [[\"season\", \"premier\", \"runner up\", \"score\", \"venue\", \"attendance\", \"premiership\"],[\"1984\", \"essendon\", \"sydney swans\", \"13.11 (89) - 5.8 (38)\", \"waverley park\", \"30824\", \"night series\"],[\"1984\", \"essendon\", \"hawthorn\", \"14.21 (105) - 12.9 (81)\", \"mcg\", \"92685\", \"vfl grand final\"],[\"1986\", \"hawthorn\", \"carlton\", \"9.12 (66) - 5.6 (36)\", \"waverley park\", \"19627\", \"night series\"],[\"1986\", \"hawthorn\", \"carlton\", \"16.14 (110) - 9.14 (68)\", \"mcg\", \"101861\", \"vfl grand final\"],[\"1988\", \"hawthorn\", \"geelong\", \"10.10 (70) - 9.13 (67)\", \"waverley park\", \"35803\", \"pre - season cup\"],[\"1988\", \"hawthorn\", \"melbourne\", \"22.20 (152) - 6.20 (56)\", \"mcg\", \"93754\", \"vfl grand final\"],[\"1993\", \"essendon\", \"richmond\", \"14.18 (102) - 11.13 (79)\", \"waverley park\", \"75533\", \"pre - season cup\"],[\"1993\", \"essendon\", \"carlton carlton\", \"20.13 (133) - 13.11 (89)\", \"mcg\", \"96862\", \"afl grand final\"],[\"2000\", \"essendon\", \"north melbourne\", \"16.21 (117) - 11.10 (76)\", \"mcg\", \"56720\", \"pre - season cup\"],[\"2000\", \"essendon\", \"melbourne\", \"19.21 (135) - 11.9 (75)\", \"mcg\", \"96249\", \"afl grand final\"],[\"2009\", \"geelong\", \"collingwood\", \"0.18.19 (127) - 1.6.6 (51)\", \"etihad stadium\", \"37277\", \"pre - season cup\"]]\nQuestion = Is it true that when carlton were the runner ups , the scores were 9.12 (66) - 5.6 (36)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    runner_ups = get_column_by_name(table_data, \"runner up\")\n    scores = get_column_by_name(table_data, \"score\")\n    for runner_up, score in zip(runner_ups, scores):\n        if \"carlton\" in runner_up.lower():\n            answer = equal_to(score, \"9.12 (66) - 5.6 (36)\")\n            break \n    return answer\n\n### END"}
{"id": "f0934e85-4df5-4009-8f8f-69e1f3743fdc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1972 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"st kilda\", \"13.12 (90)\", \"melbourne\", \"13.11 (89)\", \"moorabbin oval\", \"18836\", \"19 august 1972\"],[\"south melbourne\", \"9.12 (66)\", \"footscray\", \"11.13 (79)\", \"lake oval\", \"9154\", \"19 august 1972\"],[\"richmond\", \"20.17 (137)\", \"fitzroy\", \"13.22 (100)\", \"mcg\", \"27651\", \"19 august 1972\"],[\"geelong\", \"17.10 (112)\", \"collingwood\", \"17.9 (111)\", \"kardinia park\", \"23108\", \"19 august 1972\"],[\"north melbourne\", \"8.12 (60)\", \"carlton\", \"23.11 (149)\", \"arden street oval\", \"11271\", \"19 august 1972\"],[\"hawthorn\", \"15.16 (106)\", \"essendon\", \"12.15 (87)\", \"vfl park\", \"36749\", \"19 august 1972\"]]\nQuestion = Is it true that on august 19 , 1972 , when the home team is st kilda , the away team is melbourne?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for home_team, away_team, date in zip(home_teams, away_teams, dates):\n        if home_team.lower() == \"st kilda\" and away_team.lower() == \"melbourne\" and date.lower() == \"19 august 1972\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "a6d57187-c26f-4ddb-b4a4-7e0e37b40bfc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = radio iq\ntable_data = [[\"call sign\", \"frequency mhz\", \"city of license\", \"erp w\", \"class\", \"fcc info\"],[\"wvtw\", \"88.5\", \"charlottesville , virginia\", \"1000\", \"b1\", \"fcc\"],[\"wffc\", \"89.9\", \"ferrum , virginia\", \"1100\", \"a\", \"fcc\"],[\"wqiq\", \"88.3\", \"spotsylvania , virginia\", \"3500\", \"a\", \"fcc\"],[\"wriq\", \"88.7\", \"lexington , virginia\", \"3900\", \"a\", \"fcc\"],[\"wwvt\", \"1260\", \"christiansburg , virginia\", \"5000 day 25 night\", \"d\", \"fcc\"]]\nQuestion = Is it true that the city of lexington , virginia has wriq as the call sign?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    call_signs = get_column_by_name(table_data, \"call sign\")\n    cities = get_column_by_name(table_data, \"city of license\")\n    answer = False\n    for call_sign, city in zip(call_signs, cities):\n        if \"lexington , virginia\" in city.lower() and \"wriq\" in call_sign.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "e9edca71-520b-4538-b220-ce9653c18629", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = history of test cricket from 1901 to 1914\ntable_data = [[\"date\", \"home captain\", \"away captain\", \"venue\", \"result\"],[\"15 , 16 , 18 , 19 , 20 , 21 dec 1911\", \"clem hill\", \"johnny douglas\", \"sydney cricket ground\", \"aus by 146 runs\"],[\"30 dec , 1 , 2 , 3 jan 1911 / 2\", \"clem hill\", \"johnny douglas\", \"melbourne cricket ground\", \"eng by 8 wkts\"],[\"12 , 13 , 15 , 16 , 17 jan 1912\", \"clem hill\", \"johnny douglas\", \"adelaide oval\", \"eng by 7 wkts\"],[\"9 , 10 , 12 , 13 feb 1912\", \"clem hill\", \"johnny douglas\", \"melbourne cricket ground\", \"eng by inns&225 runs\"],[\"23 , 24 , 26 , 27 , 28 , 29 feb , 1 mar 1912\", \"clem hill\", \"johnny douglas\", \"sydney cricket ground\", \"eng by 70 runs\"]]\nQuestion = Is it true that on february 9th , 10th , 12th , and 13th , 1912 , clem hill was the home captain and johnny douglas was the away captain?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    home_captains = get_column_by_name(table_data, \"home captain\")\n    away_captains = get_column_by_name(table_data, \"away captain\")\n    for date, home_captain, away_captain in zip(dates, home_captains, away_captains):\n        if \"9 , 10 , 12 , 13 feb 1912\" in date.lower():\n            answer = equal_to(home_captain, \"clem hill\") and equal_to(away_captain, \"johnny douglas\")\n            break \n    return answer\n\n### END"}
{"id": "2f9b946b-f545-4178-b837-91ac32bb54c2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1971 nhl amateur draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"15\", \"ken baird\", \"defence\", \"canada\", \"california golden seals\", \"flin flon bombers (wchl)\"],[\"16\", \"henry boucha\", \"centre\", \"united states\", \"detroit red wings\", \"us national development team\"],[\"17\", \"bobby lalonde\", \"centre\", \"canada\", \"vancouver canucks\", \"montreal junior canadiens (oha)\"],[\"18\", \"brian mckenzie\", \"left wing\", \"canada\", \"pittsburgh penguins\", \"st catharines black hawks (oha)\"],[\"19\", \"craig ramsay\", \"left wing\", \"canada\", \"buffalo sabres\", \"peterborough petes (oha)\"],[\"20\", \"larry robinson\", \"defence\", \"canada\", \"montreal canadiens\", \"kitchener rangers (oha)\"],[\"21\", \"rod norrish\", \"left wing\", \"canada\", \"minnesota north stars\", \"regina pats (wchl)\"],[\"22\", \"rick kehoe\", \"right wing\", \"canada\", \"toronto maple leafs\", \"hamilton red wings (oha)\"],[\"23\", \"dave fortier\", \"defence\", \"canada\", \"toronto maple leafs\", \"st catharines black hawks (oha)\"],[\"24\", \"michel deguise\", \"goaltender\", \"canada\", \"montreal canadiens\", \"sorel eperviers (qmjhl)\"],[\"25\", \"terry french\", \"centre\", \"canada\", \"montreal canadiens\", \"ottawa 67 's (oha)\"],[\"26\", \"dave kryskow\", \"left wing\", \"canada\", \"chicago black hawks\", \"edmonton oil kings (wchl)\"],[\"27\", \"tom williams\", \"left wing\", \"canada\", \"new york rangers\", \"hamilton red wings (oha)\"],[\"28\", \"curt ridley\", \"goaltender\", \"canada\", \"boston bruins\", \"portage terriers (mjhl)\"]]\nQuestion = Is it true that the player for the new york rangers is dave fortier?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    nhl_teams = get_column_by_name(table_data, \"nhl team\")\n    answer = False\n    for player, nhl_team in zip(players, nhl_teams):\n        if \"new york rangers\" in nhl_team.lower() and \"dave fortier\" in player.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "f9a22010-e22b-4c05-bd7e-6233a94aa109", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1966 dutch grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"jack brabham\", \"brabham - repco\", \"90\", \"2:20:32.5\", \"1\"],[\"graham hill\", \"brm\", \"89\", \"+ 1 lap\", \"7\"],[\"jim clark\", \"lotus - climax\", \"88\", \"+ 2 laps\", \"3\"],[\"jackie stewart\", \"brm\", \"88\", \"+ 2 laps\", \"8\"],[\"mike spence\", \"lotus - brm\", \"87\", \"+ 3 laps\", \"12\"],[\"lorenzo bandini\", \"ferrari\", \"87\", \"+ 3 laps\", \"9\"],[\"jo bonnier\", \"cooper - maserati\", \"84\", \"+ 6 laps\", \"13\"],[\"john taylor\", \"brabham - brm\", \"84\", \"+ 6 laps\", \"17\"],[\"guy ligier\", \"cooper - maserati\", \"84\", \"+ 6 laps\", \"16\"],[\"jo siffert\", \"cooper - maserati\", \"79\", \"engine\", \"11\"],[\"bob anderson\", \"brabham - climax\", \"73\", \"suspension\", \"14\"],[\"john surtees\", \"cooper - maserati\", \"44\", \"electrical\", \"10\"],[\"denny hulme\", \"brabham - repco\", \"37\", \"ignition\", \"2\"],[\"peter arundell\", \"lotus - brm\", \"28\", \"ignition\", \"15\"],[\"dan gurney\", \"eagle - climax\", \"26\", \"oil leak\", \"4\"],[\"mike parkes\", \"ferrari\", \"10\", \"accident\", \"5\"],[\"jochen rindt\", \"cooper - maserati\", \"2\", \"accident\", \"6\"]]\nQuestion = Is it true that bob anderson went 73 laps before experiencing suspension problems , was in grid 14?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    laps = get_column_by_name(table_data, \"laps\")\n    time_retired = get_column_by_name(table_data, \"time / retired\")\n    grids = get_column_by_name(table_data, \"grid\")\n    for driver, lap, time_retired, grid in zip(drivers, laps, time_retired, grids):\n        if driver.lower() == \"bob anderson\":\n            answer = equal_to(lap, \"73\") and equal_to(time_retired, \"suspension\") and equal_to(grid, \"14\")\n            break \n    return answer\n\n### END"}
{"id": "380bd8c5-056d-4676-8be6-136714aad055", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 boston celtics season\ntable_data = [[\"game\",\"date\",\"team\",\"score\",\"high points\",\"high rebounds\",\"high assists\",\"location attendance\",\"record\"],[\"74\",\"april 1\",\"chicago\",\"106 - 92\",\"allen (22)\",\"perkins (9)\",\"rondo (10)\",\"united center 22225\",\"59 - 15\"],[\"75\",\"april 2\",\"indiana\",\"92 - 77\",\"garnett (20)\",\"garnett (11)\",\"rondo (6)\",\"td banknorth garden 18624\",\"60 - 15\"],[\"76\",\"april 5\",\"charlotte\",\"101 - 78\",\"powe (22)\",\"powe (9)\",\"rondo (5)\",\"charlotte bobcats arena 19403\",\"61 - 15\"],[\"77\",\"april 8\",\"milwaukee\",\"107 - 104 (ot)\",\"garnett (21)\",\"perkins (10)\",\"pierce (4)\",\"bradley center 15921\",\"62 - 15\"],[\"78\",\"april 9\",\"washington\",\"95 - 109\",\"pierce (28)\",\"garnett (14)\",\"pierce , rondo (7)\",\"verizon center 20173\",\"62 - 16\"],[\"79\",\"april 11\",\"milwaukee\",\"102 - 86\",\"rondo (16)\",\"garnett , posey (8)\",\"rondo (10)\",\"td banknorth garden 18624\",\"63 - 16\"],[\"80\",\"april 12\",\"atlanta\",\"99 - 89\",\"garnett (24)\",\"davis (10)\",\"cassell , rondo (5)\",\"philips arena 20098\",\"64 - 16\"],[\"81\",\"april 14\",\"new york\",\"99 - 93\",\"rondo (23)\",\"rondo (10)\",\"rondo (5)\",\"madison square garden 19763\",\"65 - 16\"],[\"82\",\"april 16\",\"new jersey\",\"105 - 94\",\"powe (27)\",\"powe (11)\",\"cassell (4)\",\"td banknorth garden 18624\",\"66 - 16\"]]\nQuestion = Is it true that the game before april 14th had high assists rondo (10) and high rebounds rondo (5)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    high_assists = get_column_by_name(table_data, \"high assists\")\n    high_rebounds = get_column_by_name(table_data, \"high rebounds\")\n    for date, high_assist, high_rebound in zip(dates, high_assists, high_rebounds):\n        if date.lower() == \"april 14\":\n            previous_game_high_assist = high_assists[dates.index(date) - 1]\n            previous_game_high_rebound = high_rebounds[dates.index(date) - 1]\n            answer = equal_to(previous_game_high_assist, \"rondo (10)\") and equal_to(previous_game_high_rebound, \"rondo (5)\")\n            break \n    return answer\n\n### END"}
{"id": "c3c62e5f-7e84-47ac-9acd-11f1745ec2ea", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"team\",\"outgoing manager\",\"manner of departure\",\"date of vacancy\",\"replaced by\",\"position in the table\"],[\"getafe\",\"bernd schuster\",\"resigned\",\"9 july 2007\",\"michael laudrup\",\"9th (2006 - 2007)\"],[\"betis\",\"paco chaparro\",\"end of tenure as caretaker\",\"3 july 2007\",\"hector cuper\",\"16th (2006 - 2007)\"],[\"racing santander\",\"miguel ángel portugal\",\"end of contract\",\"30 june 2007\",\"marcelino garcía toral\",\"10th (2006 - 2007 )\"],[\"levante\",\"abel resino\",\"sacked\",\"8 october 2007\",\"gianni de biasi\",\"20th\"],[\"sevilla\",\"juande ramos\",\"resigned\",\"27 october 2007\",\"manolo jiménez\",\"10th\"],[\"valencia\",\"quique sánchez\",\"sacked\",\"29 october 2007\",\"ronald koeman\",\"4th\"],[\"betis\",\"hector cuper\",\"sacked\",\"3 december 2007\",\"paco chaparro\",\"19th\"],[\"real zaragoza\",\"víctor fernández\",\"sacked\",\"14 january 2008\",\"ander garitano\",\"12th\"],[\"real zaragoza\",\"ander garitano\",\"resigned\",\"22 january 2008\",\"javier irureta\",\"11th\"],[\"recreativo\",\"víctor muñoz\",\"sacked\",\"4 february 2008\",\"manolo zambrano\",\"19th\"],[\"real zaragoza\",\"javier irureta\",\"resigned\",\"3 march 2008\",\"manolo villanova\",\"17th\"]]\nQuestion = Is it true that racing santander manager was replaced by marcelino garcia toral?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    replaced_by = get_column_by_name(table_data, \"replaced by\")\n    answer = False\n    for team, replaced in zip(teams, replaced_by):\n        if team.lower() == \"racing santander\" and replaced.lower() == \"marcelino garcía toral\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "92df15d1-b998-4570-aab7-27d433ffd507", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = livonia cup\ntable_data = [[\"season\", \"winner\", \"score\", \"runner - up\", \"venue\"],[\"2011\", \"fc flora tallinn\", \"2 - 0\", \"skonto fc\", \"skonto hall , riga\"],[\"2008\", \"fk ventspils\", \"2 - 2 aet , 4 - 3 pen\", \"fc levadia tallinn\", \"skonto hall , riga\"],[\"2005\", \"skonto fc\", \"4 - 3\", \"fc levadia tallinn\", \"skonto hall , riga\"],[\"2004\", \"skonto fc\", \"3 - 3 aet , 4 - 3 pen\", \"fc flora tallinn\", \"skonto hall , riga\"],[\"2003\", \"skonto fc\", \"2 - 2 aet , 12 - 11 pen\", \"fc flora tallinn\", \"skonto hall , riga\"]]\nQuestion = Is it true that fc flora tallinn was the runner - up that has a season after 2011?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    runner_ups = get_column_by_name(table_data, \"runner - up\")\n    answer = False\n    for season, runner_up in zip(seasons, runner_ups):\n        if runner_up.lower() == \"fc flora tallinn\" and greater(int(season), 2011):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "2595498e-424f-4df6-89ed-bf10bb7f2a9f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of leverage episodes\ntable_data = [[\"series\",\"season\",\"title\",\"directed by\",\"written by\",\"original air date\",\"us viewers (in millions)\"],[\"14\",\"1\",\"the beantown bailout job\",\"dean devlin\",\"john rogers\",\"july 15 , 2009\",\"3.89\"],[\"15\",\"2\",\"the tap - out job\",\"marc roskin\",\"albert kim\",\"july 22 , 2009\",\"3.05\"],[\"16\",\"3\",\"the order 23 job\",\"rod hardy\",\"chris downey\",\"july 29 , 2009\",\"3.68\"],[\"17\",\"4\",\"the fairy godparents job\",\"jonathan frakes\",\"amy berg\",\"august 5 , 2009\",\"3.69\"],[\"18\",\"5\",\"the three days of the hunter job\",\"marc roskin\",\"melissa glenn & jessica rieder\",\"august 12 , 2009\",\"3.16\"],[\"19\",\"6\",\"the top hat job\",\"peter o'fallon\",\"m scott veach & christine boylan\",\"august 19 , 2009\",\"3.43\"],[\"20\",\"7\",\"the two live crew job\",\"dean devlin\",\"amy berg & john rogers\",\"august 26 , 2009\",\"3.73\"],[\"21\",\"8\",\"the ice man job\",\"jeremiah chechik\",\"christine boylan\",\"september 2 , 2009\",\"3.58\"],[\"22\",\"9\",\"the lost heir job\",\"peter winther\",\"chris downey\",\"september 9 , 2009\",\"3.37\"],[\"23\",\"10\",\"the runway job\",\"mark roskin\",\"albert kim\",\"january 13 , 2010\",\"3.69\"],[\"24\",\"11\",\"the bottle job\",\"jonathan frakes\",\"christine boylan\",\"january 20 , 2010\",\"3.00\"],[\"25\",\"12\",\"the zanzibar marketplace job\",\"jeremiah chechik\",\"melissa glenn & jessica rieder\",\"january 27 , 2010\",\"3.02\"],[\"26\",\"13\",\"the future job\",\"mark roskin\",\"amy berg & chris downey\",\"february 3 , 2010\",\"2.91\"],[\"27\",\"14\",\"the three strikes job\",\"dean devlin\",\"john rogers\",\"february 10 , 2010\",\"2.8\"]]\nQuestion = Is it true that marc roskin directed season 2 , the tap - out job?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_directed_by = get_column_by_name(table_data, \"directed by\")\n    column_season = get_column_by_name(table_data, \"season\")\n    column_title = get_column_by_name(table_data, \"title\")\n    answer = False\n    for directed_by, season, title in zip(column_directed_by, column_season, column_title):\n        if directed_by.lower() == \"marc roskin\" and season == \"2\" and title.lower() == \"the tap - out job\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "96d8d666-6668-4c98-9fb6-27f653c8f5bc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = malayalam calendar\ntable_data = [[\"months in malayalam era\", \"in malayalam\", \"gregorian calendar\", \"tamil calendar\", \"saka era\", \"sign of zodiac\"],[\"chingam\", \"ചിങ്ങം\", \"august - september\", \"aavani\", \"sravan - bhadrapada\", \"leo\"],[\"kanni\", \"കന്നി\", \"september - october\", \"purattasi\", \"bhadrapada - asvina\", \"virgo\"],[\"tulam\", \"തുലാം\", \"october - november\", \"aippasi\", \"asvina - kartika\", \"libra\"],[\"vrscikam\", \"വൃശ്ചികം\", \"november - december\", \"karthigai\", \"kartika - agrahayana\", \"scorpio\"],[\"dhanu\", \"ധനു\", \"december - january\", \"margazhi\", \"agrahayana - pausa\", \"sagittarius\"],[\"makaram\", \"മകരം\", \"january - february\", \"thai\", \"pausa - magha\", \"capricon\"],[\"kumbham\", \"കുംഭം\", \"february - march\", \"maasi\", \"magha - phalguna\", \"aquarius\"],[\"minam\", \"മീനം\", \"march - april\", \"panguni\", \"phalguna - chaitra\", \"pisces\"],[\"medam\", \"മേടം\", \"april - may\", \"chithirai\", \"chaitra - vaisakha\", \"aries\"],[\"edavam (idavam)\", \"ഇടവം\", \"may - june\", \"vaikasi\", \"vaisakha - jyaistha\", \"taurus\"],[\"mithunam\", \"മിഥുനം\", \"june - july\", \"aani\", \"jyaistha - asada\", \"gemini\"],[\"karkadakam\", \"കര്‍ക്കടകം\", \"july - august\", \"aadi\", \"asada - sravana\", \"cancer\"]]\nQuestion = Is it true that in the gregorian claendar , june - july denotes aquarius?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    gregorian_calendar = get_column_by_name(table_data, \"gregorian calendar\")\n    sign_of_zodiac = get_column_by_name(table_data, \"sign of zodiac\")\n    answer = False\n    for date, zodiac in zip(gregorian_calendar, sign_of_zodiac):\n        if \"june - july\" in date.lower():\n            if \"aquarius\" in zodiac.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "975f47a0-e030-40d4-8eaa-68c5dc343807", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"singular abbreviation\", \"singular word\", \"plural abbreviation\", \"plural word\", \"discipline\"],[\"d\", \"didot\", \"dd\", \"didots\", \"typography\"],[\"f\", \"following line or page\", \"ff\", \"following lines or pages\", \"notes\"],[\"f\", \"folio\", \"ff\", \"folios\", \"literature\"],[\"h\", \"hand\", \"hh\", \"hands\", \"horse height\"],[\"l\", \"line\", \"ll\", \"lines\", \"notes\"],[\"ms\", \"manuscript\", \"mss\", \"manuscripts\", \"notes\"],[\"op\", \"opus\", \"opp\", \"opera\", \"notes\"],[\"p\", \"page\", \"pp\", \"pages\", \"notes\"],[\"q\", \"quarto\", \"qq\", \"quartos\", \"literature\"],[\"s (or §)\", \"section\", \"ss (or §§)\", \"sections\", \"notes\"],[\"v\", \"volume\", \"vv\", \"volumes\", \"notes\"]]\nQuestion = Is it true that a plural abbreviation of p is used for the singular word page?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    singular_words = get_column_by_name(table_data, \"singular word\")\n    plural_abbreviations = get_column_by_name(table_data, \"plural abbreviation\")\n    for singular_word, plural_abbreviation in zip(singular_words, plural_abbreviations):\n        if singular_word.lower() == \"page\":\n            answer = equal_to(plural_abbreviation, \"p\")\n            break \n    return answer\n\n### END"}
{"id": "6ae99cdb-b8cc-4696-8f52-91d8ab5f48c1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2006 - 07 seattle supersonics season\ntable_data = [[\"game\",\"date\",\"team\",\"score\",\"high points\",\"high rebounds\",\"high assists\",\"location attendance\",\"record\"],[\"1\",\"november 1\",\"portland\",\"l 106 - 110\",\"rashard lewis (25)\",\"rashard lewis (8)\",\"luke ridnour (13)\",\"keyarena 17072\",\"0 - 1\"],[\"2\",\"november 3\",\"l a lakers\",\"l 112 - 118\",\"ray allen (30)\",\"chris wilcox (12)\",\"earl watson (7)\",\"staples center 18997\",\"0 - 2\"],[\"3\",\"november 5\",\"l a lakers\",\"w 117 - 101\",\"ray allen (32)\",\"chris wilcox (8)\",\"luke ridnour (7)\",\"keyarena 17072\",\"1 - 2\"],[\"4\",\"november 7\",\"miami\",\"l 87 - 90\",\"rashard lewis (23)\",\"nick collison (10)\",\"earl watson (6)\",\"american airlines arena 19600\",\"1 - 3\"],[\"5\",\"november 8\",\"orlando\",\"l 87 - 88\",\"ray allen (21)\",\"danny fortson (8)\",\"luke ridnour (6)\",\"amway arena 16312\",\"1 - 4\"],[\"6\",\"november 10\",\"charlotte\",\"w 99 - 85\",\"ray allen (26)\",\"nick collison (15)\",\"luke ridnour (7)\",\"charlotte bobcats arena 13515\",\"2 - 4\"],[\"7\",\"november 11\",\"atlanta\",\"w 113 - 112 (ot)\",\"ray allen (33)\",\"chris wilcox (15)\",\"luke ridnour (5)\",\"philips arena 19309\",\"3 - 4\"],[\"8\",\"november 13\",\"new jersey\",\"w 119 - 113\",\"luke ridnour (32)\",\"rashard lewis (11)\",\"luke ridnour , earl watson (7)\",\"continental airlines arena 14392\",\"4 - 4\"],[\"9\",\"november 15\",\"philadelphia\",\"l 90 - 96\",\"rashard lewis (25)\",\"rashard lewis , chris wilcox (15)\",\"luke ridnour (7)\",\"keyarena 14936\",\"4 - 5\"],[\"10\",\"november 17\",\"utah\",\"l 109 - 118\",\"ray allen (32)\",\"chris wilcox (11)\",\"luke ridnour (7)\",\"keyarena 15513\",\"4 - 6\"],[\"11\",\"november 18\",\"golden state\",\"l 95 - 107\",\"ray allen (34)\",\"ray allen (11)\",\"earl watson (7)\",\"oracle arena 17205\",\"4 - 7\"],[\"12\",\"november 20\",\"new jersey\",\"w 99 - 87\",\"ray allen (29)\",\"ray allen (9)\",\"ray allen , luke ridnour (5)\",\"keyarena 14621\",\"5 - 7\"],[\"13\",\"november 22\",\"l a clippers\",\"w 95 - 85\",\"rashard lewis (35)\",\"nick collison , rashard lewis (13)\",\"luke ridnour (9)\",\"staples center 16290\",\"6 - 7\"],[\"14\",\"november 24\",\"sacramento\",\"l 100 - 109\",\"rashard lewis (26)\",\"chris wilcox (13)\",\"luke ridnour (8)\",\"keyarena 16757\",\"6 - 8\"],[\"15\",\"november 26\",\"san antonio\",\"l 78 - 98\",\"ray allen (21)\",\"johan petro (9)\",\"chris wilcox (5)\",\"keyarena 15483\",\"6 - 9\"]]\nQuestion = Is it true that in game 15 , the supersonic 's record was 6 - 9?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    games = get_column_by_name(table_data, \"game\")\n    records = get_column_by_name(table_data, \"record\")\n    for game, record in zip(games, records):\n        if game == \"15\":\n            answer = equal_to(record, \"6 - 9\")\n            break \n    return answer\n\n### END"}
{"id": "4ae698b6-f102-438d-b1ad-04891f37b7c3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states house of representatives elections , 1984\ntable_data = [[\"district\", \"incumbent\", \"party\", \"first elected\", \"result\", \"candidates\"],[\"florida 1\", \"earl dewitt hutto\", \"democratic\", \"1978\", \"re - elected\", \"earl dewitt hutto (d) unopposed\"],[\"florida 2\", \"don fuqua\", \"democratic\", \"1962\", \"re - elected\", \"don fuqua (d) unopposed\"],[\"florida 3\", \"charles edward bennett\", \"democratic\", \"1948\", \"re - elected\", \"charles edward bennett (d) unopposed\"],[\"florida 5\", \"bill mccollum\", \"republican\", \"1980\", \"re - elected\", \"bill mccollum (r) unopposed\"],[\"florida 6\", \"buddy mackay\", \"democratic\", \"1982\", \"re - elected\", \"buddy mackay (d) 99.3% others 0.7%\"],[\"florida 8\", \"bill young\", \"republican\", \"1970\", \"re - elected\", \"bill young (r) 80.3% robert kent (d) 19.7%\"],[\"florida 9\", \"michael bilirakis\", \"republican\", \"1982\", \"re - elected\", \"michael bilirakis (r) 78.6% jack wilson (d) 21.4%\"],[\"florida 10\", \"andy ireland\", \"republican\", \"1976\", \"re - elected\", \"andy ireland (r) 61.9% patricia m glass (d) 38.1%\"],[\"florida 11\", \"bill nelson\", \"democratic\", \"1978\", \"re - elected\", \"bill nelson (d) 60.5% rob quartel (r) 39.5%\"],[\"florida 12\", \"tom lewis\", \"republican\", \"1982\", \"re - elected\", \"tom lewis (r) unopposed\"],[\"florida 13\", \"connie mack\", \"republican\", \"1982\", \"re - elected\", \"connie mack (r) unopposed\"],[\"florida 14\", \"dan mica\", \"democratic\", \"1978\", \"re - elected\", \"dan mica (d) 55.4% don ross (r) 44.6%\"],[\"florida 16\", \"lawrence j smith\", \"democratic\", \"1982\", \"re - elected\", \"lawrence j smith (d) 56.4% tom bush (r) 43.6%\"],[\"florida 17\", \"william lehman\", \"democratic\", \"1972\", \"re - elected\", \"william lehman (d) unopposed\"],[\"florida 18\", \"claude pepper\", \"democratic\", \"1962\", \"re - elected\", \"claude pepper (d) 60.5% ricardo nunez (r) 39.5%\"]]\nQuestion = Is it true that florida 16 district has the incumbent lawrence j smith?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    districts = get_column_by_name(table_data, \"district\")\n    incumbents = get_column_by_name(table_data, \"incumbent\")\n    for district, incumbent in zip(districts, incumbents):\n        if district.lower() == \"florida 16\" and incumbent.lower() == \"lawrence j smith\":\n            return True\n    return False\n\n### END"}
{"id": "34dd2cf4-d693-498e-a72f-ffe90f6123cf", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\"],[\"coronation street\", \"who do you think you are\", \"the nature of things\", \"the nature of things\", \"doc zone\", \"doc zone\", \"the national\"],[\"etalk\", \"jeopardy!\", \"csi\", \"csi\", \"grey 's anatomy\", \"grey 's anatomy\", \"er\"],[\"et canada\", \"entertainment tonight\", \"survivor : china\", \"survivor : china\", \"the office\", \"my name is earl\", \"shark\"],[\"wheel of fortune\", \"e2\", \"scrubs\", \"30 rock\", \"don't forget the lyrics!\", \"don't forget the lyrics!\", \"big shots\"],[\"friends\", \"access hollywood\", \"ugly betty\", \"ugly betty\", \"supernatural\", \"supernatural\", \"terminal city\"],[\"the insider\", \"e! news\", \"are you smarter than a 5th grader\", \"are you smarter than a 5th grader\", \"e! movies we love\", \"e! movies we love\", \"e! movies we love\"],[\"virginie\", \"infoman\", \"le moment de vérité\", \"le moment de vérité\", \"tous pour un\", \"tous pour un\", \"le téléjournal\"],[\"la fièvre de la danse\", \"la fièvre de la danse\", \"le banquier\", \"le banquier\", \"taxi 0 - 22\", \"taxi 0 - 22\", \"le tva 22 heures\"],[\"loft story\", \"criss angel\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal du soir\"]]\nQuestion = Is it true that at 8:00 movies was on tv and the same channel had loft story on right after it?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    column_8 = get_column_by_index(table_data, 2)\n    column_7_30 = get_column_by_index(table_data, 1)\n    answer = False\n    for show_8, show_7_30 in zip(column_8, column_7_30):\n        if equal_to(show_8, \"movies\") and equal_to(show_7_30, \"loft story\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "21f36405-d585-450a-bf64-68335a4dce76", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = julia glushko\ntable_data = [[\"outcome\", \"date\", \"tournament\", \"surface\", \"opponent in the final\", \"score\"],[\"winner\", \"november 11 , 2007\", \"mallorca , spain\", \"clay\", \"diana buzean\", \"6 - 0 , 6 - 0\"],[\"winner\", \"may 30 , 2010\", \"ra'anana , israel\", \"hard\", \"keren shlomo\", \"6 - 1 , 6 - 3\"],[\"winner\", \"october 24 , 2010\", \"akko , israel\", \"hard\", \"julia kimmelmann\", \"6 - 2 , 6 - 2\"],[\"winner\", \"november 7 , 2010\", \"kalgoorlie , australia\", \"hard\", \"isabella holland\", \"6 - 1 , 6 - 2\"],[\"winner\", \"november 28 , 2010\", \"traralgon , australia\", \"hard\", \"sacha jones\", \"2 - 6 , 7 - 5 , 7 - 6 (7 - 4)\"],[\"runner - up\", \"july 15 , 2012\", \"waterloo , canada\", \"clay\", \"sharon fichman\", \"6 - 3 , 6 - 2\"],[\"winner\", \"july 29 , 2012\", \"lexington , united states\", \"hard\", \"johanna konta\", \"6 - 3 , 6 - 0\"],[\"winner\", \"march 24 , 2013\", \"innisbrook resort and golf club , united states\", \"clay\", \"patricia mayr - achleitner\", \"2 - 6 , 6 - 0 , 6 - 4\"],[\"winner\", \"july 7 , 2013\", \"waterloo , canada\", \"clay\", \"gabriela dabrowski\", \"6 - 1 , 6 - 3\"]]\nQuestion = Is it true that the hard surface tournament in kalgoorlie , australia ends with a score of 6 - 1 , 6 - 2?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    tournaments = get_column_by_name(table_data, \"tournament\")\n    surfaces = get_column_by_name(table_data, \"surface\")\n    scores = get_column_by_name(table_data, \"score\")\n    for tournament, surface, score in zip(tournaments, surfaces, scores):\n        if \"kalgoorlie , australia\" in tournament.lower() and \"hard\" in surface.lower():\n            answer = equal_to(score, \"6 - 1 , 6 - 2\")\n            break \n    return answer\n\n### END"}
{"id": "afdb3605-73a8-4bf4-8d87-690e5b60bd76", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of teachers (uk tv series) episodes\ntable_data = [[\"no overall\",\"no in series\",\"title\",\"director\",\"writer\",\"original air date\",\"production code\"],[\"32\", \"1\", \"episode 1\", \"barnaby southcomb\", \"richard stoneman\", \"26 october 2004\", \"401\"],[\"33\", \"2\", \"episode 2\", \"barnaby southcomb\", \"ed roe\", \"3 november 2004\", \"402\"],[\"34\", \"3\", \"episode 3\", \"barnaby southcomb\", \"charlie martin\", \"10 november 2004\", \"403\"],[\"35\", \"4\", \"episode 4\", \"sean grundy\", \"linton chiswick\", \"17 november 2004\", \"404\"],[\"36\", \"5\", \"episode 5\", \"sean grundy\", \"jack lothian\", \"24 november 2004\", \"405\"],[\"37\", \"6\", \"episode 6\", \"sean grundy\", \"tony basgallop\", \"1 december 2004\", \"406\"],[\"38\", \"7\", \"episode 7\", \"iain b macdonald\", \"charlie martin\", \"8 december 2004\", \"407\"],[\"39\", \"8\", \"episode 8\", \"iain b macdonald\", \"richard stoneman\", \"15 december 2004\", \"408\"]]\nQuestion = Is it true that the number in series for number 38 is not 7?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    no_overall = get_column_by_name(table_data, \"no overall\")\n    no_in_series = get_column_by_name(table_data, \"no in series\")\n    for no, no_series in zip(no_overall, no_in_series):\n        if no == \"38\":\n            answer = not equal_to(no_series, \"7\")\n            break \n    return answer\n\n### END"}
{"id": "472ad321-e389-494b-944b-e71d6b908577", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date\", \"round\", \"opponent\", \"venue\", \"result\", \"attendance\"],[\"23 january 1999\", \"r3\", \"stenhousemuir\", \"h\", \"2 - 0\", \"37759\"],[\"14 february 1999\", \"r4\", \"hamilton academical\", \"a\", \"6 - 0\", \"7339\"],[\"6 march 1999\", \"qf\", \"falkirk\", \"h\", \"2 - 1\", \"39250\"],[\"11 april 1999\", \"sf\", \"st johnstone\", \"n\", \"4 - 0\", \"20664\"],[\"29 may 1999\", \"f\", \"celtic\", \"n\", \"1 - 0\", \"52670\"]]\nQuestion = Is it true that venue n results in 4 - 0 and 1 - 0 with each attendance of 20664 or more?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef greater_than_or_equal_to(num1, num2):\n    return num1 >= num2\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"venue\")\n    results = get_column_by_name(table_data, \"result\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    answer = False\n    for venue, result, attendance in zip(venues, results, attendances):\n        if venue.lower() == \"n\" and (result == \"4 - 0\" or result == \"1 - 0\") and greater_than_or_equal_to(int(attendance), 20664):\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "8ff2cd4a-91ad-43ce-94f0-fa704eb40768", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1994 nhl entry draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"261\", \"per gustafsson\", \"defence\", \"sweden\", \"florida panthers\", \"hv71 (sweden)\"],[\"262\", \"jeremy stevenson\", \"left wing\", \"united states\", \"mighty ducks of anaheim\", \"sault ste marie greyhounds (ohl)\"],[\"263\", \"rob mara\", \"left wing\", \"united states\", \"chicago blackhawks\", \"belmont hill high school (hs - massachusetts)\"],[\"264\", \"jason issel\", \"left wing\", \"canada\", \"winnipeg jets\", \"prince albert raiders (whl)\"],[\"265\", \"steve nimigon\", \"left wing\", \"canada\", \"hartford whalers\", \"niagara falls thunder (ohl)\"],[\"266\", \"ladislav benysek\", \"defence\", \"czech republic\", \"edmonton oilers\", \"olomouc hc (czech republic)\"],[\"267\", \"jamie butt\", \"left wing\", \"canada\", \"ny rangers\", \"tacoma rockets (whl)\"],[\"268\", \"brian white\", \"defence\", \"united states\", \"tampa bay lightning\", \"arlington catholic high school (hs - massachusetts)\"],[\"269\", \"mike hanson\", \"centre\", \"united states\", \"new jersey devils\", \"minot high school (hs - north dakota)\"],[\"270\", \"jan lipiansky\", \"forward\", \"slovakia\", \"philadelphia flyers\", \"slovan bratislava (slovakia)\"],[\"271\", \"david beauregard\", \"left wing\", \"canada\", \"san jose sharks\", \"st hyacinthe lasers (qmjhl)\"],[\"272\", \"dick tarnstrom\", \"defence\", \"sweden\", \"new york islanders\", \"aik (sweden)\"],[\"273\", \"robert longpre\", \"centre\", \"canada\", \"vancouver canucks\", \"medicine hat tigers (whl)\"],[\"274\", \"antti tormanen\", \"left wing\", \"finland\", \"ottawa senators\", \"jokerit (finland)\"],[\"275\", \"sergei tertyshny\", \"defence\", \"russia\", \"washington capitals\", \"chelyabinsk traktor (russia)\"],[\"276\", \"scott fankhouser\", \"goaltender\", \"united states\", \"st louis blues\", \"university of massachusetts lowell (ncaa)\"],[\"277\", \"shayne wright\", \"defence\", \"canada\", \"buffalo sabres\", \"owen sound platers (ohl)\"],[\"278\", \"ross parsons\", \"defence\", \"canada\", \"montreal canadiens\", \"regina pats (whl)\"],[\"279\", \"pavel torgayev\", \"centre\", \"russia\", \"calgary flames\", \"tps (finland)\"],[\"280\", \"chris szysky\", \"right wing\", \"canada\", \"dallas stars\", \"swift current broncos (whl)\"],[\"281\", \"andrei yakhanov\", \"defence\", \"russia\", \"boston bruins\", \"ufa salavat yulayev (russia)\"],[\"282\", \"doug nolan\", \"defence\", \"united states\", \"toronto maple leafs\", \"catholic memorial high school (hs - massachusetts)\"],[\"283\", \"toivo suursoo\", \"left wing\", \"estonia\", \"detroit red wings\", \"krylya sovetov moscow (russia)\"],[\"284\", \"brian leitza\", \"goaltender\", \"united states\", \"pittsburgh penguins\", \"sioux city musketeers (ushl)\"],[\"285\", \"steven low\", \"defence\", \"canada\", \"quebec nordiques\", \"sherbrooke faucons (qmjhl)\"],[\"286\", \"kim johnsson\", \"defence\", \"sweden\", \"new york rangers\", \"malmã if (sweden)\"]]\nQuestion = Is it true that player scott fankhouser , from canada , plays the right wing position for the dallas stars?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    positions = get_column_by_name(table_data, \"position\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    nhl_teams = get_column_by_name(table_data, \"nhl team\")\n    answer = False\n    for player, position, nationality, nhl_team in zip(players, positions, nationalities, nhl_teams):\n        if player.lower() == \"scott fankhouser\" and nationality.lower() == \"canada\" and position.lower() == \"right wing\" and nhl_team.lower() == \"dallas stars\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "c2c0e9e5-2d13-4ad5-8fdd-1c13d121bd54", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = .38 special\ntable_data = [[\"cartridge\", \"bullet weight\", \"muzzle velocity\", \"muzzle energy\", \"max pressure\"],[\".38 short colt\", \"gr (g)\", \"ft / s (m / s)\", \"181ft lbf (245 j)\", \"7500 cup\"],[\".38 long colt\", \"gr (g)\", \"ft / s (m / s)\", \"201ft lbf (273 j)\", \"12000 cup\"],[\".38 s&w\", \"gr (g)\", \"ft / s (m / s)\", \"206ft lbf (279 j)\", \"14500 psi\"],[\".38 s&w special\", \"gr (g)\", \"ft / s (m / s)\", \"310ft lbf (420 j)\", \"17000 psi\"],[\".38 special + p\", \"gr (g)\", \"ft / s (m / s)\", \"351ft lbf (476 j)\", \"20000 psi\"],[\".38 special + p +\", \"gr (g)\", \"ft / s (m / s)\", \"295ft lbf (400 j)\", \">20000 psi\"],[\".380 acp\", \"gr (g)\", \"ft / s (m / s)\", \"178ft lbf (241 j)\", \"21500 psi\"],[\"9x19 mm parabellum\", \"gr (g)\", \"ft / s (m / s)\", \"420ft lbf (570 j)\", \"39200 psi\"],[\"9x19 mm parabellum\", \"gr (g)\", \"ft / s (m / s)\", \"383ft lbf (520 j)\", \"39200 psi\"],[\"9x18 mm makarov\", \"gr (g)\", \"ft / s (m / s)\", \"231ft lbf (313 j)\", \"23206 psi\"],[\".38 super\", \"grains (g)\", \"ft / s (m / s)\", \"468ft lbf (634 j)\", \"36500 psi\"],[\".357 magnum\", \"grains (g)\", \"ft / s (m / s)\", \"639ft lbf (866 j)\", \"35000 psi\"],[\".357 sig\", \"grains (g)\", \"ft / s (m / s)\", \"506ft lbf (686 j)\", \"40000 psi\"]]\nQuestion = Is it true that the muzzle velocity of the cartrige 38 short colt is ft / s (m / s)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    cartridges = get_column_by_name(table_data, \"cartridge\")\n    muzzle_velocities = get_column_by_name(table_data, \"muzzle velocity\")\n    for cartridge, muzzle_velocity in zip(cartridges, muzzle_velocities):\n        if cartridge.lower() == \".38 short colt\":\n            answer = equal_to(muzzle_velocity, \"ft / s (m / s)\")\n            break \n    return answer\n\n### END"}
{"id": "408e29d7-2141-43fd-89c5-d4c055f16824", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = anaprof clausura 2008\ntable_data = [[\"place (posición)\", \"team (equipo)\", \"played (pj)\", \"won (pg)\", \"draw (pe)\", \"lost (pp)\", \"goals scored (gf)\", \"goals conceded (gc)\", \"+ / - (dif)\", \"points (pts)\"],[\"1\", \"árabe unido\", \"31\", \"17\", \"6\", \"8\", \"54\", \"31\", \"+ 23\", \"57\"],[\"2\", \"tauro\", \"31\", \"16\", \"8\", \"7\", \"54\", \"41\", \"+ 13\", \"56\"],[\"3\", \"san francisco\", \"31\", \"14\", \"11\", \"6\", \"54\", \"42\", \"+ 12\", \"53\"],[\"4\", \"chepo\", \"31\", \"13\", \"10\", \"8\", \"50\", \"31\", \"+ 19\", \"49\"],[\"5\", \"sporting san miguelito\", \"31\", \"11\", \"10\", \"10\", \"44\", \"40\", \"+ 4\", \"43\"],[\"6\", \"atlético veragüense\", \"31\", \"9\", \"11\", \"11\", \"40\", \"48\", \"- 8\", \"38\"],[\"7\", \"chorrillo\", \"31\", \"7\", \"13\", \"11\", \"32\", \"39\", \"- 7\", \"34\"],[\"8\", \"atlético chiriquí\", \"31\", \"9\", \"7\", \"15\", \"33\", \"64\", \"- 31\", \"34\"],[\"9\", \"alianza\", \"31\", \"9\", \"4\", \"18\", \"45\", \"51\", \"- 6\", \"31\"],[\"10\", \"plaza amador\", \"31\", \"6\", \"8\", \"17\", \"22\", \"41\", \"- 19\", \"27\"]]\nQuestion = Is it true that arabe unido scored 54 goals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team (equipo)\")\n    goals_scored = get_column_by_name(table_data, \"goals scored (gf)\")\n    for team, goals in zip(teams, goals_scored):\n        if team.lower() == \"árabe unido\":\n            answer = equal_to(goals, \"54\")\n            break \n    return answer\n\n### END"}
{"id": "4142675e-d4da-4699-a73c-4d7af7ba3870", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = big day out lineups by year\ntable_data = [[\"sydney\", \"melbourne\", \"perth\", \"adelaide\", \"gold coast\", \"auckland\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"cancelled\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\"],[\"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"no\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"no\"],[\"no\", \"yes\", \"no\", \"no\", \"no\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"]]\nQuestion = Is it true that the first no for sydney shows melbourne with a no and perth with a no?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    sydney = get_column_by_name(table_data, \"sydney\")\n    melbourne = get_column_by_name(table_data, \"melbourne\")\n    perth = get_column_by_name(table_data, \"perth\")\n    for s, m, p in zip(sydney, melbourne, perth):\n        if s.lower() == \"no\":\n            answer = equal_to(m.lower(), \"no\") and equal_to(p.lower(), \"no\")\n            break\n    return answer\n\n### END"}
{"id": "8bef19ae-71cf-427f-9b34-0a4f10f78e74", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 u.s. women 's open golf championship\ntable_data = [[\"place\", \"player\", \"country\", \"score\", \"to par\", \"money\"],[\"1\", \"cristie kerr\", \"united states\", \"71 + 72 + 66 + 70 = 279\", \"- 5\", \"560000\"],[\"t2\", \"angela park\", \"brazil\", \"68 + 69 + 74 + 70 = 281\", \"- 3\", \"271022\"],[\"t2\", \"lorena ochoa\", \"mexico\", \"71 + 71 + 68 + 71 = 281\", \"- 3\", \"271022\"],[\"t4\", \"se ri pak\", \"south korea\", \"74 + 72 + 68 + 68 = 282\", \"- 2\", \"130549\"],[\"t4\", \"inbee park\", \"south korea\", \"69 + 73 + 71 + 69 = 282\", \"- 2\", \"130549\"],[\"6\", \"jiyai shin\", \"south korea\", \"70 + 69 + 71 + 74 = 284\", \"e\", \"103581\"],[\"7\", \"jee young lee\", \"south korea\", \"72 + 71 + 71 + 71 = 285\", \"+ 1\", \"93031\"],[\"t8\", \"mi hyun kim\", \"south korea\", \"71 + 75 + 70 + 70 = 286\", \"+ 2\", \"82464\"],[\"t8\", \"jeong jang\", \"south korea\", \"72 + 71 + 70 + 73 = 286\", \"+ 2\", \"82464\"],[\"t10\", \"ai miyazato\", \"japan\", \"73 + 73 + 72 + 69 = 287\", \"+ 3\", \"66177\"],[\"t10\", \"kyeong bae\", \"south korea\", \"74 + 71 + 72 + 70 = 287\", \"+ 3\", \"66177\"],[\"t10\", \"julieta granada\", \"paraguay\", \"70 + 69 + 75 + 73 = 287\", \"+ 3\", \"66177\"],[\"t10\", \"morgan pressel\", \"united states\", \"71 + 70 + 69 + 77 = 287\", \"+ 3\", \"66177\"]]\nQuestion = Is it true that mi hyun kim is in 8th place?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_place = get_column_by_name(table_data, \"place\")\n    column_player = get_column_by_name(table_data, \"player\")\n    answer = \"mi hyun kim\" in column_player and \"t8\" in column_place\n    return answer\n\n### END"}
{"id": "df6d74bf-0312-44d5-909c-dab5cca6016d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mark donohue\ntable_data = [[\"year\", \"chassis\", \"engine\", \"start\", \"finish\", \"entrant\"],[\"1969\", \"lola\", \"offy\", \"4th\", \"7th\", \"penske\"],[\"1970\", \"lola\", \"ford\", \"5th\", \"2nd\", \"penske\"],[\"1971\", \"mclaren\", \"offy\", \"2nd\", \"25th\", \"penske\"],[\"1972\", \"mclaren\", \"offy\", \"3rd\", \"1st\", \"penske\"],[\"1973\", \"eagle\", \"offy\", \"3rd\", \"15th\", \"penske\"]]\nQuestion = Is it true that mclaren was the chassis for the offy engine only in 1971?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    chassis = get_column_by_name(table_data, \"chassis\")\n    engines = get_column_by_name(table_data, \"engine\")\n    mclaren_offy_years = [year for year, ch, eng in zip(table_data[1:], chassis, engines) if ch == \"mclaren\" and eng == \"offy\"]\n    answer = len(mclaren_offy_years) == 1\n    return answer\n\n### END"}
{"id": "f1021cb4-696d-42a5-8773-abe368e7dcb9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = türk telekom arena\ntable_data = [[\"project\", \"year\", \"location\", \"capacity\", \"suites\", \"architect\", \"cost\"],[\"faruk süren project\", \"1997 - 2001\", \"mecidiyeköy\", \"40482\", \"125 + 72 boxes without outside seating\", \"bbb architects\", \"118.5 million ( in 2014 dollars)\"],[\"mehmet cansun project\", \"2001\", \"mecidiyeköy\", \"35000\", \"132\", \"gs member architecture group\", \"35 million ( in 2014 dollars)\"],[\"özhan canaydın : back to süren 's project\", \"2002 - 2005\", \"aslantepe\", \"40482\", \"125\", \"bbb architects\", \"90 million ( in 2014 dollars)\"],[\"eren talu bidding project\", \"2007\", \"aslantepe\", \"52000\", \"150\", \"populous\", \"n / a\"],[\"özhan canaydın project\", \"2007\", \"aslantepe\", \"52652\", \"157\", \"asp stuttgart\", \"250 million ( in 2014 dollars)\"]]\nQuestion = Is it true that the eren talu bidding project was located in aslantepe in the year 2007?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    projects = get_column_by_name(table_data, \"project\")\n    years = get_column_by_name(table_data, \"year\")\n    locations = get_column_by_name(table_data, \"location\")\n    answer = False\n    for project, year, location in zip(projects, years, locations):\n        if \"eren talu bidding project\" in project.lower() and \"2007\" in year and \"aslantepe\" in location.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "d1a458fd-57b4-4293-89a5-09595ee0f7be", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"class\", \"part 1\", \"part 2\", \"part 3\", \"part 4\", \"verb meaning\"],[\"1\", \"rīdan\", \"rād\", \"ridon\", \"riden\", \"to ride\"],[\"2a\", \"frēosan\", \"frēas\", \"fruron\", \"froren\", \"to freeze\"],[\"2b\", \"lūcan\", \"lēac\", \"lucon\", \"locen\", \"to lock\"],[\"3a\", \"bindan\", \"band\", \"bundon\", \"bunden\", \"to bind\"],[\"3b\", \"weorþan\", \"wearþ\", \"wurdon\", \"worden\", \"to become\"],[\"4\", \"beran\", \"bær\", \"bǣron\", \"boren\", \"to bear\"],[\"5\", \"lesan\", \"læs\", \"lǣron\", \"leren\", \"to gather\"],[\"6\", \"alan\", \"ōl\", \"ōlon\", \"alen\", \"to nourish , to grow\"],[\"7a\", \"hātan\", \"hēt\", \"hēton\", \"hāten\", \"to call , to be called\"],[\"7b\", \"hlēapan\", \"hlēop\", \"hlēppon\", \"hlēapen\", \"to leap\"],[\"7c\", \"healdan\", \"hēold\", \"hēoldon\", \"healden\", \"to hold\"],[\"7d\", \"rǣdan\", \"rēd\", \"rēdon\", \"rǣden\", \"to advise , to interpret\"]]\nQuestion = Is it true that there are 2 classes of verbs whose part 3 is locen?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef solution(table_data):\n    part_3 = get_column_by_name(table_data, \"part 3\")\n    count = count_occurrences(\"locen\", part_3)\n    answer = equal_to(count, 2)\n    return answer\n\n### END"}
{"id": "b8fe816d-4bd8-4233-9b79-10ed7c67ad92", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = big day out lineups by year\ntable_data = [[\"sydney\", \"melbourne\", \"perth\", \"adelaide\", \"gold coast\", \"auckland\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"cancelled\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\"],[\"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"no\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"no\"],[\"no\", \"yes\", \"no\", \"no\", \"no\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"]]\nQuestion = Is it true that adelaide has the most no 's with 6?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_value_in_list(lst, value):\n    return lst.count(value)\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    adelaide_column = get_column_by_name(table_data, \"adelaide\")\n    no_count = count_value_in_list(adelaide_column, \"no\")\n    answer = equal_to(no_count, 6)\n    return answer\n\n### END"}
{"id": "3fa7ca6f-7b86-44f3-9297-7c51b4ad5317", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 manchester city f.c. season\ntable_data = [[\"exit date\", \"pos\", \"player\", \"to club\", \"transfer fee\"],[\"15 may 2007\", \"df\", \"hatem trabelsi\", \"al - hilal\", \"released\"],[\"23 may 2007\", \"df\", \"sylvain distin\", \"portsmouth\", \"free\"],[\"14 june 2007\", \"mf\", \"joey barton\", \"newcastle united\", \"5.8 m\"],[\"4 july 2007\", \"gk\", \"nicky weaver\", \"charlton athletic\", \"free\"],[\"10 july 2007\", \"mf\", \"trevor sinclair\", \"cardiff city\", \"free\"],[\"16 july 2007\", \"df\", \"stephen jordan\", \"burnley\", \"free\"],[\"31 jan 2008\", \"mf\", \"ousmane dabo\", \"lazio\", \"free\"],[\"31 jan 2008\", \"fw\", \"ishmael miller\", \"west brom albion\", \"9 m - 1.4 m\"]]\nQuestion = Is it true that 10 july 2007 is the exit date of the player who transferred to cardiff city?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    exit_dates = get_column_by_name(table_data, \"exit date\")\n    to_clubs = get_column_by_name(table_data, \"to club\")\n    answer = False\n    for exit_date, to_club in zip(exit_dates, to_clubs):\n        if \"cardiff city\" in to_club.lower():\n            answer = \"10 july 2007\" in exit_date.lower()\n            break\n    return answer\n\n### END"}
{"id": "c8ce96fb-83b1-487c-8b90-7f6f10badd60", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"position\", \"name\", \"played\", \"drawn\", \"lost\", \"points\"],[\"1\", \"tsv trostberg\", \"10\", \"1\", \"1\", \"17\"],[\"2\", \"esc riverrats geretsried\", \"10\", \"0\", \"3\", \"14\"],[\"3\", \"ersc ottobrunn\", \"10\", \"1\", \"4\", \"11\"],[\"4\", \"ec bad tãlz ii\", \"10\", \"0\", \"5\", \"10\"],[\"5\", \"ehc bad aibling\", \"10\", \"0\", \"7\", \"6\"],[\"6\", \"dec frillensee - inzell\", \"10\", \"0\", \"9\", \"2\"]]\nQuestion = Is it true that the majority of positions have more than 2 points , less than 4 losses , and fewer than 10 matches played?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(int(row[column_index]))\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef less(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    played = get_column_by_name(table_data, \"played\")\n    lost = get_column_by_name(table_data, \"lost\")\n    points = get_column_by_name(table_data, \"points\")\n    count = 0\n    for p, l, pt in zip(played, lost, points):\n        if greater(pt, 2) and less(l, 4) and less(p, 10):\n            count += 1\n    answer = greater(count, len(played) / 2)\n    return answer\n\n### END"}
{"id": "8a49350a-36f6-437b-bdad-1daf600b802e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1950 french grand prix\ntable_data = [[\"driver\",\"entrant\",\"constructor\",\"chassis\",\"engine\",\"tyre\"],[\"nino farina\",\"sa alfa romeo\",\"alfa romeo\",\"alfa romeo 158\",\"alfa romeo l8s\",\"p\"],[\"luigi fagioli\",\"sa alfa romeo\",\"alfa romeo\",\"alfa romeo 158\",\"alfa romeo l8s\",\"p\"],[\"juan manuel fangio\",\"sa alfa romeo\",\"alfa romeo\",\"alfa romeo 158\",\"alfa romeo l8s\",\"p\"],[\"luigi villoresi\",\"scuderia ferrari\",\"ferrari\",\"ferrari 125\",\"ferrari v12s\",\"p\"],[\"alberto ascari\",\"scuderia ferrari\",\"ferrari\",\"ferrari 125\",\"ferrari v12s\",\"p\"],[\"raymond sommer\",\"automobiles talbot - darracq sa\",\"talbot - lago\",\"talbot - lago t26c - gs\",\"talbot l6\",\"d\"],[\"peter whitehead\",\"private\",\"ferrari\",\"ferrari 125\",\"ferrari v12s\",\"p\"],[\"philippe étancelin\",\"private\",\"talbot - lago\",\"talbot - lago t26c - da\",\"talbot l6\",\"d\"],[\"yves giraud cabantous\",\"automobiles talbot - darracq sa\",\"talbot - lago\",\"talbot - lago t26c - da\",\"talbot l6\",\"d\"],[\"louis rosier\",\"automobiles talbot - darracq sa\",\"talbot - lago\",\"talbot - lago t26c - da\",\"talbot l6\",\"d\"],[\"pierre levegh\",\"private\",\"talbot - lago\",\"talbot - lago t26c\",\"talbot l6\",\"d\"],[\"eugène chaboud\",\"ecurie lutetia\",\"talbot - lago\",\"talbot - lago t26c\",\"talbot l6\",\"d\"],[\"charles pozzi\",\"private\",\"talbot - lago\",\"talbot - lago t26c\",\"talbot l6\",\"d\"],[\"franco rol\",\"officine alfieri maserati\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"p\"],[\"louis chiron\",\"officine alfieri maserati\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"p\"],[\"reg parnell\",\"scuderia ambrosiana\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"d\"],[\"david hampshire\",\"scuderia ambrosiana\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"d\"],[\"josé froilán gonzález\",\"scuderia achille varzi\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"p\"],[\"gianfranco comotti\",\"scuderia achille varzi\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"p\"],[\"felice bonetto\",\"scuderia milano\",\"maserati\",\"maserati 4clt - 50\",\"milano l4s\",\"p\"],[\"johnny claes\",\"ecurie belge\",\"talbot - lago\",\"talbot - lago t26c\",\"talbot l6\",\"d\"],[\"robert manzon\",\"equipe gordini\",\"simca - gordini\",\"simca - gordini t15\",\"gordini l4s\",\"e\"]]\nQuestion = Is it true that eugène chaboud drove an ecurie lutetia entrant with an engine of talbot l6?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    entrants = get_column_by_name(table_data, \"entrant\")\n    engines = get_column_by_name(table_data, \"engine\")\n    for driver, entrant, engine in zip(drivers, entrants, engines):\n        if driver.lower() == \"eugène chaboud\" and entrant.lower() == \"ecurie lutetia\" and engine.lower() == \"talbot l6\":\n            return True\n    return False\n\n### END"}
{"id": "6317ec01-b198-4870-9ef2-91b96e48f5f0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of airlines of tunisia\ntable_data = [[\"airline\", \"airline (in arabic)\", \"icao\", \"callsign\", \"commenced operations\"],[\"karthago airlines\", \"قرطاج للطيران\", \"kaj\", \"karthago\", \"2001\"],[\"nouvelair\", \"الطيران الجديد تونس\", \"lbt\", \"nouvelair\", \"1989\"],[\"tunisair express\", \"الخطوط التونسية السريعة\", \"tux\", \"tunexpress\", \"1991\"],[\"syphax airlines\", \"سيفاكس أيرلاينز\", \"sya\", \"syphaxair\", \"2011\"],[\"tunisair\", \"الخطوط التونسية\", \"tar\", \"tunair\", \"1948\"],[\"tunisavia\", \"الشركة التونسية للنقل و الخدمات الجوية\", \"taj\", \"tunisavia\", \"2010\"]]\nQuestion = Is it true that tunisair commenced operations before 1989 and their icao is tar?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    airlines = get_column_by_name(table_data, \"airline\")\n    icaos = get_column_by_name(table_data, \"icao\")\n    commenced_operations = get_column_by_name(table_data, \"commenced operations\")\n    for airline, icao, commenced_operation in zip(airlines, icaos, commenced_operations):\n        if airline.lower() == \"tunisair\":\n            answer = equal_to(icao, \"tar\") and less_than(int(commenced_operation), 1989)\n            break \n    return answer\n\n### END"}
{"id": "5a5f0c1d-0db2-425b-946b-7e0796eb852d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = boise state broncos men 's basketball\ntable_data = [[\"year\", \"round\", \"opponent\", \"result\", \"bsu head coach\"],[\"1976\", \"first round\", \"unlv\", \"l 78 - 103\", \"bus conner\"],[\"1988\", \"first round\", \"michigan\", \"l 58 - 63\", \"bobby dye\"],[\"1993\", \"first round\", \"vanderbilt\", \"l 72 - 92\", \"bobby dye\"],[\"1994\", \"first round\", \"louisville\", \"l 58 - 67\", \"bobby dye\"],[\"2008\", \"first round\", \"louisville\", \"l 61 - 79\", \"greg graham\"],[\"2013\", \"first four\", \"la salle\", \"l 71 - 80\", \"leon rice\"]]\nQuestion = Is it true that l 58 - 67 was the result in 1994 where bobby dye was the bsu head coach?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    results = get_column_by_name(table_data, \"result\")\n    coaches = get_column_by_name(table_data, \"bsu head coach\")\n    for year, result, coach in zip(years, results, coaches):\n        if year == \"1994\" and coach.lower() == \"bobby dye\":\n            answer = equal_to(result, \"l 58 - 67\")\n            break \n    return answer\n\n### END"}
{"id": "cd7c7e62-f95f-4691-aaf0-0397e411bb43", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = comparison of e - book formats\ntable_data = [[\"format\", \"filename extension\", \"image support\", \"interactivity support\", \"word wrap support\", \"open standard\"],[\"djvu\", \"djvu\", \"yes\", \"no\", \"no\", \"yes\"],[\"epub (idpf)\", \"epub\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"fictionbook\", \"fb2\", \"yes\", \"no\", \"yes\", \"yes\"],[\"html\", \"html\", \"yes\", \"no\", \"yes\", \"yes\"],[\"kindle\", \"azw\", \"yes\", \"yes\", \"yes\", \"no\"],[\"microsoft reader\", \"lit\", \"yes\", \"no\", \"yes\", \"no\"],[\"mobipocket\", \"prc , mobi\", \"yes\", \"yes\", \"yes\", \"no\"],[\"multimedia ebook\", \"exe\", \"yes\", \"yes\", \"no\", \"yes\"],[\"newton book\", \"pkg\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ereader\", \"pdb\", \"yes\", \"no\", \"yes\", \"no\"],[\"plain text\", \"txt\", \"no\", \"no\", \"yes\", \"yes\"],[\"plucker\", \"pdb\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"portable document format\", \"pdf\", \"yes\", \"yes\", \"yes though not all readers implement support\", \"yes\"],[\"postscript\", \"ps\", \"yes\", \"no\", \"no\", \"yes\"],[\"tome raider\", \"tr2 , tr3\", \"yes\", \"no\", \"yes\", \"no\"],[\"openxps\", \"oxps , xps\", \"yes\", \"no\", \"no\", \"yes\"]]\nQuestion = Is it true that plain text has yes for image support?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    formats = get_column_by_name(table_data, \"format\")\n    image_supports = get_column_by_name(table_data, \"image support\")\n    for format, image_support in zip(formats, image_supports):\n        if format.lower() == \"plain text\":\n            answer = equal_to(image_support, \"yes\")\n            break \n    return answer\n\n### END"}
{"id": "e14e372c-a0b0-4723-b421-43c74f15b67a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = comparison of e - book formats\ntable_data = [[\"format\", \"filename extension\", \"image support\", \"interactivity support\", \"word wrap support\", \"open standard\"],[\"djvu\", \"djvu\", \"yes\", \"no\", \"no\", \"yes\"],[\"epub (idpf)\", \"epub\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"fictionbook\", \"fb2\", \"yes\", \"no\", \"yes\", \"yes\"],[\"html\", \"html\", \"yes\", \"no\", \"yes\", \"yes\"],[\"kindle\", \"azw\", \"yes\", \"yes\", \"yes\", \"no\"],[\"microsoft reader\", \"lit\", \"yes\", \"no\", \"yes\", \"no\"],[\"mobipocket\", \"prc , mobi\", \"yes\", \"yes\", \"yes\", \"no\"],[\"multimedia ebook\", \"exe\", \"yes\", \"yes\", \"no\", \"yes\"],[\"newton book\", \"pkg\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ereader\", \"pdb\", \"yes\", \"no\", \"yes\", \"no\"],[\"plain text\", \"txt\", \"no\", \"no\", \"yes\", \"yes\"],[\"plucker\", \"pdb\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"portable document format\", \"pdf\", \"yes\", \"yes\", \"yes though not all readers implement support\", \"yes\"],[\"postscript\", \"ps\", \"yes\", \"no\", \"no\", \"yes\"],[\"tome raider\", \"tr2 , tr3\", \"yes\", \"no\", \"yes\", \"no\"],[\"openxps\", \"oxps , xps\", \"yes\", \"no\", \"no\", \"yes\"]]\nQuestion = Is it true that plain text (txt) has no interactivity or image support , but it does have open standard?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    formats = get_column_by_name(table_data, \"format\")\n    image_supports = get_column_by_name(table_data, \"image support\")\n    interactivity_supports = get_column_by_name(table_data, \"interactivity support\")\n    open_standards = get_column_by_name(table_data, \"open standard\")\n    for format, image_support, interactivity_support, open_standard in zip(formats, image_supports, interactivity_supports, open_standards):\n        if format.lower() == \"plain text\":\n            answer = equal_to(image_support, \"no\") and equal_to(interactivity_support, \"no\") and equal_to(open_standard, \"yes\")\n            break \n    return answer\n\n### END"}
{"id": "4c247783-d387-413e-82d9-9a71ae1eb89b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 veikkausliiga\ntable_data = [[\"club\", \"location\", \"stadium\", \"capacity\", \"manager\", \"kitmaker\"],[\"ac oulu\", \"oulu\", \"castrén\", \"4000\", \"juha malinen\", \"umbro\"],[\"fc honka\", \"espoo\", \"tapiolan urheilupuisto\", \"6000\", \"mika lehkosuo\", \"kappa\"],[\"fc inter\", \"turku\", \"veritas stadion\", \"9372\", \"job dragtsma\", \"nike\"],[\"fc lahti\", \"lahti\", \"lahden stadion\", \"15000\", \"ilkka mäkelä\", \"umbro\"],[\"ff jaro\", \"jakobstad\", \"jakobstads centralplan\", \"5000\", \"alexei eremenko sr\", \"errea\"],[\"haka\", \"valkeakoski\", \"tehtaan kenttä\", \"3516\", \"sami ristilä\", \"umbro\"],[\"hjk\", \"helsinki\", \"sonera stadium\", \"10770\", \"antti muurinen\", \"adidas\"],[\"ifk mariehamn\", \"mariehamn\", \"wiklöf holding arena\", \"4000\", \"pekka lyyski\", \"puma\"],[\"jjk\", \"jyväskylä\", \"harjun stadion\", \"3000\", \"kari martonen\", \"legea\"],[\"kups\", \"kuopio\", \"kuopion keskuskenttä\", \"5000\", \"esa pekonen\", \"puma\"],[\"mypa\", \"anjalankoski\", \"saviniemi\", \"4167\", \"janne lindberg\", \"puma\"],[\"tampere united\", \"tampere\", \"ratina stadion\", \"17000\", \"ari hjelm\", \"puma\"],[\"tps\", \"turku\", \"veritas stadion\", \"9372\", \"marko rajamäki\", \"puma\"]]\nQuestion = Is it true that harjun stadion is managed by kari martonen?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    managers = get_column_by_name(table_data, \"manager\")\n    answer = False\n    for stadium, manager in zip(stadiums, managers):\n        if stadium.lower() == \"harjun stadion\" and manager.lower() == \"kari martonen\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "e526de69-da2c-405b-a698-ceaa7e886142", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1930 grand prix season\ntable_data = [[\"name\",\"circuit\",\"date\",\"winning driver\",\"winning constructor\",\"report\"],[\"circuit d'esterel plage\",\"saint - raphaël\",\"2 march\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"tripoli grand prix\",\"tripoli\",\"23 march\",\"baconin borzacchini\",\"maserati\",\"report\"],[\"monaco grand prix\",\"monte carlo\",\"6 april\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"alessandria circuit\",\"bordino\",\"20 april\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"oran grand prix\",\"arcole\",\"27 april\",\"jean de maleplane\",\"bugatti\",\"report\"],[\"targa florio\",\"madonie\",\"4 may\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"picardy grand prix\",\"péronne\",\"18 may\",\"max fourny\",\"bugatti\",\"report\"],[\"rome grand prix\",\"tre fontane\",\"25 may\",\"luigi arcangeli\",\"maserati\",\"report\"],[\"grand prix des frontières\",\"chimay\",\"9 june\",\"georges de marotte\",\"salmson\",\"report\"],[\"lyon grand prix\",\"quincieux\",\"15 june\",\"louis chiron\",\"bugatti\",\"report\"],[\"grand prix de la marne\",\"reims\",\"29 june\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"eifelrennen\",\"nürburgring\",\"20 july\",\"heinrich - joachim von morgen\",\"bugatti\",\"report\"],[\"dieppe grand prix\",\"dieppe\",\"20 july\",\"marcel lehoux\",\"bugatti\",\"report\"],[\"coppa ciano\",\"montenero\",\"3 august\",\"luigi fagioli\",\"maserati\",\"report\"],[\"dauphiné circuit\",\"grenoble\",\"10 august\",\"philippe étancelin\",\"bugatti\",\"report\"],[\"coppa acerbo\",\"pescara\",\"17 august\",\"achille varzi\",\"maserati\",\"report\"],[\"grand prix du comminges\",\"saint - gaudens\",\"17 august\",\"françois miquel\",\"bugatti\",\"report\"],[\"monza grand prix\",\"monza\",\"7 september\",\"achille varzi\",\"maserati\",\"report\"],[\"lviv grand prix\",\"lviv\",\"8 september\",\"henryk liefeldt\",\"austro daimler\",\"report\"],[\"masaryk circuit\",\"brno\",\"28 september\",\"hermann of leiningen\",\"bugatti\",\"report\"],[\"san sebastián grand prix\",\"lasarte\",\"5 october\",\"achille varzi\",\"maserati\",\"report\"]]\nQuestion = Is it true that rené dreyfus only won one time and it was at the saint - raphaël circuit?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef solution(table_data):\n    winning_drivers = get_column_by_name(table_data, \"winning driver\")\n    circuits = get_column_by_name(table_data, \"circuit\")\n    count_dreyfus_wins = count_occurrences(\"rené dreyfus\", winning_drivers)\n    count_dreyfus_wins_saint_raphael = 0\n    for driver, circuit in zip(winning_drivers, circuits):\n        if driver.lower() == \"rené dreyfus\" and circuit.lower() == \"saint - raphaël\":\n            count_dreyfus_wins_saint_raphael += 1\n    answer = count_dreyfus_wins == 1 and count_dreyfus_wins_saint_raphael == 1\n    return answer\n\n### END"}
{"id": "36e9abb9-0f21-46b2-af82-40cbb7e119a1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = algeria at the 2008 summer olympics\ntable_data = [[\"athlete\", \"event\", \"round of 32\", \"round of 16\", \"quarterfinals\", \"semifinals\"],[\"abdelhalim ouradi\", \"bantamweight\", \"nevin ( irl ) l 4 - 9\", \"did not advance\", \"did not advance\", \"did not advance\"],[\"abdelkader chadi\", \"featherweight\", \"bye\", \"adi ( tha ) w 7 - 6\", \"kılıç ( tur ) l 6 - 13\", \"did not advance\"],[\"hamza kramou\", \"lightweight\", \"ugás ( cub ) l 3 - 21\", \"did not advance\", \"did not advance\", \"did not advance\"],[\"nabil kassel\", \"middleweight\", \"bye\", \"sutherland ( irl ) l 14 - 21\", \"did not advance\", \"did not advance\"],[\"abdelhafid benchebla\", \"light heavyweight\", \"kumar ( ind ) w 23 - 3\", \"yasser ( egy ) w 13 - 6\", \"zhang xp ( chn ) l 7 - 12\", \"did not advance\"],[\"abdelaziz touilbini\", \"heavyweight\", \"n / a\", \"wilder ( usa ) l 4 - 10\", \"did not advance\", \"did not advance\"]]\nQuestion = Is it true that nabil kassel faced bye in round 32?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    athletes = get_column_by_name(table_data, \"athlete\")\n    round_of_32 = get_column_by_name(table_data, \"round of 32\")\n    for athlete, round_32 in zip(athletes, round_of_32):\n        if athlete.lower() == \"nabil kassel\":\n            answer = equal_to(round_32.lower(), \"bye\")\n            break \n    return answer\n\n### END"}
{"id": "b15e0cd5-2677-40a1-9eaa-603dfd92ec58", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = savannah braves\ntable_data = [[\"year\", \"record\", \"finish\", \"manager\", \"playoffs\"],[\"1971\", \"57 - 84\", \"5th\", \"eddie haas\", \"not eligible\"],[\"1972\", \"80 - 59\", \"2nd\", \"clint courtney\", \"not eligible\"],[\"1973\", \"71 - 68\", \"3rd\", \"clint courtney (34 - 23) / tommie aaron (37 - 45)\", \"not eligible\"],[\"1974\", \"73 - 65\", \"4th\", \"tommie aaron\", \"not eligible\"],[\"1975\", \"70 - 64\", \"3rd (t)\", \"tommie aaron\", \"not eligible\"],[\"1976\", \"69 - 71\", \"5th\", \"tommie aaron\", \"not eligible\"],[\"1977\", \"77 - 63\", \"3rd\", \"gene hassell\", \"lost in 1st round\"],[\"1978\", \"72 - 72\", \"4th\", \"bobby dews\", \"lost league finals\"],[\"1979\", \"60 - 83\", \"10th\", \"eddie haas\", \"not eligible\"],[\"1980\", \"77 - 67\", \"3rd\", \"eddie haas\", \"lost in 1st round\"],[\"1981\", \"70 - 70\", \"5th\", \"andy gilbert\", \"lost in 1st round\"],[\"1982\", \"69 - 75\", \"8th\", \"andy gilbert\", \"not eligible\"],[\"1983\", \"81 - 64\", \"3rd\", \"bobby dews\", \"lost in 1st round\"]]\nQuestion = Is it true that record 77 - 63 / 77 - 67 / 81 - 64 has a year larger than 1974 and a finish of 3rd?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    records = get_column_by_name(table_data, \"record\")\n    finishes = get_column_by_name(table_data, \"finish\")\n    answer = False\n    for year, record, finish in zip(years, records, finishes):\n        if greater(int(year), 1974) and finish.lower() == \"3rd\" and record in [\"77 - 63\", \"77 - 67\", \"81 - 64\"]:\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "e7456ad2-f3ec-4b40-a74e-098860016e1f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = statistics relating to enlargement of the european union\ntable_data = [[\"member countries\", \"population\", \"area (km square)\", \"gdp (billion us)\", \"gdp per capita (us)\"],[\"cyprus\", \"775927\", \"9250\", \"11.681\", \"15054\"],[\"czech republic\", \"10246178\", \"78866\", \"105.248\", \"10272\"],[\"estonia\", \"1341664\", \"45226\", \"22.384\", \"16684\"],[\"hungary\", \"10032375\", \"93030\", \"102183\", \"10185\"],[\"latvia\", \"2306306\", \"64589\", \"24.826\", \"10764\"],[\"lithuania\", \"3607899\", \"65200\", \"31.971\", \"8861\"],[\"malta\", \"396851\", \"316\", \"5.097\", \"12843\"],[\"poland\", \"38580445\", \"311904\", \"316.438\", \"8202\"],[\"slovakia\", \"5423567\", \"49036\", \"42.800\", \"7810\"],[\"slovenia\", \"2011473\", \"20273\", \"29.633\", \"14732\"],[\"accession countries\", \"74722685\", \"737690\", \"685.123\", \"9169\"],[\"existing members (2004)\", \"381781620\", \"3367154\", \"7711.871\", \"20200\"],[\"eu25 (2004)\", \"456504305 ( + 19.57%)\", \"4104844 ( + 17.97%)\", \"8396994 ( + 8.88%)\", \"18394 (8.94%)\"]]\nQuestion = Is it true that slovenia is the member country that has a population of 1341664?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    member_countries = get_column_by_name(table_data, \"member countries\")\n    populations = get_column_by_name(table_data, \"population\")\n    for member_country, population in zip(member_countries, populations):\n        if member_country.lower() == \"slovenia\":\n            answer = equal_to(population, \"1341664\")\n            break \n    return answer\n\n### END"}
{"id": "2ffa8e59-d660-4c59-acbd-fc16b0063a40", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = locomotives of the london and north eastern railway\ntable_data = [[\"class\", \"type\", \"quantity\", \"date\", \"lner class\"],[\"2\", \"4 - 4 - 0\", \"25\", \"1887 - 1892\", \"d7\"],[\"3\", \"2 - 4 - 2t\", \"39\", \"1889 - 1892\", \"f1\"],[\"6ai\", \"0 - 6 - 0\", \"12\", \"1888\", \"j8\"],[\"6d\", \"2 - 4 - 0\", \"3\", \"1887\", \"e2\"],[\"6db\", \"4 - 4 - 0\", \"3\", \"1888\", \"d8\"],[\"9\", \"0 - 6 - 0\", \"6\", \"1888 - 89\", \"j13\"],[\"9a\", \"0 - 6 - 2t\", \"55\", \"1889 - 92\", \"n4\"],[\"9b & 9e\", \"0 - 6 - 0\", \"31\", \"1891 - 95\", \"j9\"],[\"9c & 9f\", \"0 - 6 - 2t\", \"129\", \"1891 - 1901\", \"n5\"],[\"9d , 9h & 9 m\", \"0 - 6 - 0\", \"124\", \"1892 - 1902\", \"j10\"]]\nQuestion = Is it true that class 6db has a lner class of d8?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    classes = get_column_by_name(table_data, \"class\")\n    lner_classes = get_column_by_name(table_data, \"lner class\")\n    for class_, lner_class in zip(classes, lner_classes):\n        if class_.lower() == \"6db\":\n            answer = equal_to(lner_class, \"d8\")\n            break \n    return answer\n\n### END"}
{"id": "96b0422f-c909-412d-bc93-2a836c829952", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1996 - 97 montreal canadiens season\ntable_data = [[\"round\", \"player\", \"position\", \"nationality\", \"college / junior / club team\"],[\"1\", \"matt higgins\", \"center\", \"canada\", \"moose jaw warriors (whl)\"],[\"2\", \"mathieu garon\", \"goalie\", \"canada\", \"victoriaville tigres (qmjhl)\"],[\"3\", \"arron asham\", \"right wing\", \"canada\", \"red deer rebels (whl)\"],[\"4\", \"kim staal\", \"left wing\", \"denmark\", \"malmã if (sweden)\"],[\"4\", \"etienne drapeau\", \"center\", \"canada\", \"beauport harfangs (qmjhl)\"],[\"5\", \"daniel archambault\", \"defence\", \"canada\", \"val - d'or foreurs (qmjhl)\"],[\"6\", \"brett clark\", \"defenceman\", \"canada\", \"university of maine (ncaa)\"],[\"7\", \"timo vertala\", \"left wing\", \"finland\", \"jyp (finland)\"],[\"8\", \"mattia baldi\", \"left wing\", \"switzerland\", \"ambri - piotta (swiss)\"],[\"9\", \"michel tremblay\", \"left wing\", \"canada\", \"shawinigan cataractes (qmjhl)\"]]\nQuestion = Is it true that goalie is the position for round 3?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    positions = get_column_by_name(table_data, \"position\")\n    for round, position in zip(rounds, positions):\n        if round == \"3\":\n            answer = equal_to(position, \"goalie\")\n            break \n    return answer\n\n### END"}
{"id": "3b491b92-c8b5-49e1-8579-15db1ecc317e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of leverage episodes\ntable_data = [[\"series\",\"season\",\"title\",\"directed by\",\"written by\",\"original air date\",\"us viewers (in millions)\"],[\"14\",\"1\",\"the beantown bailout job\",\"dean devlin\",\"john rogers\",\"july 15 , 2009\",\"3.89\"],[\"15\",\"2\",\"the tap - out job\",\"marc roskin\",\"albert kim\",\"july 22 , 2009\",\"3.05\"],[\"16\",\"3\",\"the order 23 job\",\"rod hardy\",\"chris downey\",\"july 29 , 2009\",\"3.68\"],[\"17\",\"4\",\"the fairy godparents job\",\"jonathan frakes\",\"amy berg\",\"august 5 , 2009\",\"3.69\"],[\"18\",\"5\",\"the three days of the hunter job\",\"marc roskin\",\"melissa glenn & jessica rieder\",\"august 12 , 2009\",\"3.16\"],[\"19\",\"6\",\"the top hat job\",\"peter o'fallon\",\"m scott veach & christine boylan\",\"august 19 , 2009\",\"3.43\"],[\"20\",\"7\",\"the two live crew job\",\"dean devlin\",\"amy berg & john rogers\",\"august 26 , 2009\",\"3.73\"],[\"21\",\"8\",\"the ice man job\",\"jeremiah chechik\",\"christine boylan\",\"september 2 , 2009\",\"3.58\"],[\"22\",\"9\",\"the lost heir job\",\"peter winther\",\"chris downey\",\"september 9 , 2009\",\"3.37\"],[\"23\",\"10\",\"the runway job\",\"mark roskin\",\"albert kim\",\"january 13 , 2010\",\"3.69\"],[\"24\",\"11\",\"the bottle job\",\"jonathan frakes\",\"christine boylan\",\"january 20 , 2010\",\"3.00\"],[\"25\",\"12\",\"the zanzibar marketplace job\",\"jeremiah chechik\",\"melissa glenn & jessica rieder\",\"january 27 , 2010\",\"3.02\"],[\"26\",\"13\",\"the future job\",\"mark roskin\",\"amy berg & chris downey\",\"february 3 , 2010\",\"2.91\"],[\"27\",\"14\",\"the three strikes job\",\"dean devlin\",\"john rogers\",\"february 10 , 2010\",\"2.8\"]]\nQuestion = Is it true that peter winther directed , the lost heir job?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_directed_by = get_column_by_name(table_data, \"directed by\")\n    column_title = get_column_by_name(table_data, \"title\")\n    answer = False\n    for directed_by, title in zip(column_directed_by, column_title):\n        if \"peter winther\" in directed_by.lower() and \"the lost heir job\" in title.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "a068d7b9-d53d-4601-8257-85df92a83ca2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = boise state broncos men 's basketball\ntable_data = [[\"year\", \"round\", \"opponent\", \"result\", \"bsu head coach\"],[\"1976\", \"first round\", \"unlv\", \"l 78 - 103\", \"bus conner\"],[\"1988\", \"first round\", \"michigan\", \"l 58 - 63\", \"bobby dye\"],[\"1993\", \"first round\", \"vanderbilt\", \"l 72 - 92\", \"bobby dye\"],[\"1994\", \"first round\", \"louisville\", \"l 58 - 67\", \"bobby dye\"],[\"2008\", \"first round\", \"louisville\", \"l 61 - 79\", \"greg graham\"],[\"2013\", \"first four\", \"la salle\", \"l 71 - 80\", \"leon rice\"]]\nQuestion = Is it true that michigan / vanderbilt was the opponent after 1994 with bobby dye as the bsu head coach?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef in_string(str1, str2):\n    return str1 in str2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    coaches = get_column_by_name(table_data, \"bsu head coach\")\n    answer = False\n    for year, opponent, coach in zip(years, opponents, coaches):\n        if int(year) > 1994 and coach.lower() == \"bobby dye\":\n            if in_string(\"michigan\", opponent.lower()) or in_string(\"vanderbilt\", opponent.lower()):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "671fb390-32cc-4c65-8acf-23f7ee1f1ee9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1971 nhl amateur draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"15\", \"ken baird\", \"defence\", \"canada\", \"california golden seals\", \"flin flon bombers (wchl)\"],[\"16\", \"henry boucha\", \"centre\", \"united states\", \"detroit red wings\", \"us national development team\"],[\"17\", \"bobby lalonde\", \"centre\", \"canada\", \"vancouver canucks\", \"montreal junior canadiens (oha)\"],[\"18\", \"brian mckenzie\", \"left wing\", \"canada\", \"pittsburgh penguins\", \"st catharines black hawks (oha)\"],[\"19\", \"craig ramsay\", \"left wing\", \"canada\", \"buffalo sabres\", \"peterborough petes (oha)\"],[\"20\", \"larry robinson\", \"defence\", \"canada\", \"montreal canadiens\", \"kitchener rangers (oha)\"],[\"21\", \"rod norrish\", \"left wing\", \"canada\", \"minnesota north stars\", \"regina pats (wchl)\"],[\"22\", \"rick kehoe\", \"right wing\", \"canada\", \"toronto maple leafs\", \"hamilton red wings (oha)\"],[\"23\", \"dave fortier\", \"defence\", \"canada\", \"toronto maple leafs\", \"st catharines black hawks (oha)\"],[\"24\", \"michel deguise\", \"goaltender\", \"canada\", \"montreal canadiens\", \"sorel eperviers (qmjhl)\"],[\"25\", \"terry french\", \"centre\", \"canada\", \"montreal canadiens\", \"ottawa 67 's (oha)\"],[\"26\", \"dave kryskow\", \"left wing\", \"canada\", \"chicago black hawks\", \"edmonton oil kings (wchl)\"],[\"27\", \"tom williams\", \"left wing\", \"canada\", \"new york rangers\", \"hamilton red wings (oha)\"],[\"28\", \"curt ridley\", \"goaltender\", \"canada\", \"boston bruins\", \"portage terriers (mjhl)\"]]\nQuestion = Is it true that united states is the nationality of the player from pittsburgh penguins?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    nhl_teams = get_column_by_name(table_data, \"nhl team\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    answer = False\n    for nhl_team, nationality in zip(nhl_teams, nationalities):\n        if \"pittsburgh penguins\" in nhl_team.lower():\n            if \"united states\" in nationality.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "78d73637-7f8f-42b6-b681-765b93ce2b12", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = türk telekom arena\ntable_data = [[\"project\", \"year\", \"location\", \"capacity\", \"suites\", \"architect\", \"cost\"],[\"faruk süren project\", \"1997 - 2001\", \"mecidiyeköy\", \"40482\", \"125 + 72 boxes without outside seating\", \"bbb architects\", \"118.5 million ( in 2014 dollars)\"],[\"mehmet cansun project\", \"2001\", \"mecidiyeköy\", \"35000\", \"132\", \"gs member architecture group\", \"35 million ( in 2014 dollars)\"],[\"özhan canaydın : back to süren 's project\", \"2002 - 2005\", \"aslantepe\", \"40482\", \"125\", \"bbb architects\", \"90 million ( in 2014 dollars)\"],[\"eren talu bidding project\", \"2007\", \"aslantepe\", \"52000\", \"150\", \"populous\", \"n / a\"],[\"özhan canaydın project\", \"2007\", \"aslantepe\", \"52652\", \"157\", \"asp stuttgart\", \"250 million ( in 2014 dollars)\"]]\nQuestion = Is it true that the aslantepe location has a capacity larger than 52000?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"location\")\n    capacities = get_column_by_name(table_data, \"capacity\")\n    answer = False\n    for location, capacity in zip(locations, capacities):\n        if \"aslantepe\" in location.lower():\n            if greater(int(capacity), 52000):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "1ccad5e0-7983-43e3-8d83-33153545d04d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"class\", \"part 1\", \"part 2\", \"part 3\", \"part 4\", \"verb meaning\"],[\"1\", \"rīdan\", \"rād\", \"ridon\", \"riden\", \"to ride\"],[\"2a\", \"frēosan\", \"frēas\", \"fruron\", \"froren\", \"to freeze\"],[\"2b\", \"lūcan\", \"lēac\", \"lucon\", \"locen\", \"to lock\"],[\"3a\", \"bindan\", \"band\", \"bundon\", \"bunden\", \"to bind\"],[\"3b\", \"weorþan\", \"wearþ\", \"wurdon\", \"worden\", \"to become\"],[\"4\", \"beran\", \"bær\", \"bǣron\", \"boren\", \"to bear\"],[\"5\", \"lesan\", \"læs\", \"lǣron\", \"leren\", \"to gather\"],[\"6\", \"alan\", \"ōl\", \"ōlon\", \"alen\", \"to nourish , to grow\"],[\"7a\", \"hātan\", \"hēt\", \"hēton\", \"hāten\", \"to call , to be called\"],[\"7b\", \"hlēapan\", \"hlēop\", \"hlēppon\", \"hlēapen\", \"to leap\"],[\"7c\", \"healdan\", \"hēold\", \"hēoldon\", \"healden\", \"to hold\"],[\"7d\", \"rǣdan\", \"rēd\", \"rēdon\", \"rǣden\", \"to advise , to interpret\"]]\nQuestion = Is it true that the part 3 verb whose class is 3 is starts with an o?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef starts_with(string, char):\n    return string.startswith(char)\n\ndef solution(table_data):\n    classes = get_column_by_name(table_data, \"class\")\n    part_3_verbs = get_column_by_name(table_data, \"part 3\")\n    for class_, verb in zip(classes, part_3_verbs):\n        if \"3\" in class_:\n            answer = starts_with(verb, \"o\")\n            break\n    return answer\n\n### END"}
{"id": "57a7c89a-b49a-438f-b182-635bfb70a4f2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = julia glushko\ntable_data = [[\"outcome\",\"date\",\"tournament\",\"surface\",\"opponent in the final\",\"score\"],[\"winner\",\"november 11 , 2007\",\"mallorca , spain\",\"clay\",\"diana buzean\",\"6 - 0 , 6 - 0\"],[\"winner\",\"may 30 , 2010\",\"ra'anana , israel\",\"hard\",\"keren shlomo\",\"6 - 1 , 6 - 3\"],[\"winner\",\"october 24 , 2010\",\"akko , israel\",\"hard\",\"julia kimmelmann\",\"6 - 2 , 6 - 2\"],[\"winner\",\"november 7 , 2010\",\"kalgoorlie , australia\",\"hard\",\"isabella holland\",\"6 - 1 , 6 - 2\"],[\"winner\",\"november 28 , 2010\",\"traralgon , australia\",\"hard\",\"sacha jones\",\"2 - 6 , 7 - 5 , 7 - 6 (7 - 4)\"],[\"runner - up\",\"july 15 , 2012\",\"waterloo , canada\",\"clay\",\"sharon fichman\",\"6 - 3 , 6 - 2\"],[\"winner\",\"july 29 , 2012\",\"lexington , united states\",\"hard\",\"johanna konta\",\"6 - 3 , 6 - 0\"],[\"winner\",\"march 24 , 2013\",\"innisbrook resort and golf club , united states\",\"clay\",\"patricia mayr - achleitner\",\"2 - 6 , 6 - 0 , 6 - 4\"],[\"winner\",\"july 7 , 2013\",\"waterloo , canada\",\"clay\",\"gabriela dabrowski\",\"6 - 1 , 6 - 3\"]]\nQuestion = Is it true that the waterloo , canada tournament on july 15 , 2012 ends with a score of 6 - 3 , 6 - 2?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    tournaments = get_column_by_name(table_data, \"tournament\")\n    scores = get_column_by_name(table_data, \"score\")\n    for date, tournament, score in zip(dates, tournaments, scores):\n        if date.lower() == \"july 15 , 2012\" and tournament.lower() == \"waterloo , canada\":\n            answer = equal_to(score, \"6 - 3 , 6 - 2\")\n            break \n    return answer\n\n### END"}
{"id": "829c82bd-37ef-4502-b378-f761fb4d26e7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = air macau destinations\ntable_data = [[\"city\", \"country\", \"iata\", \"icao\", \"airport\"],[\"bangkok\", \"thailand\", \"bkk\", \"vtbs\", \"suvarnabhumi airport\"],[\"beijing\", \"china\", \"pek\", \"zbaa\", \"beijing capital international airport\"],[\"changsha\", \"china\", \"csx\", \"zgha\", \"changsha huanghua international airport\"],[\"chengdu\", \"china\", \"ctu\", \"zuuu\", \"chengdu shuangliu international airport\"],[\"chongqing\", \"china\", \"ckg\", \"zuck\", \"chongqing jiangbei international airport\"],[\"hangzhou\", \"china\", \"hgh\", \"zshc\", \"hangzhou xiaoshan international airport\"],[\"hefei\", \"china\", \"hfe\", \"zsof\", \"hefei luogang international airport\"],[\"kaohsiung\", \"taiwan\", \"khh\", \"rckh\", \"kaohsiung international airport\"],[\"macau\", \"macau\", \"mfm\", \"vmmc\", \"macau international airport\"],[\"nanjing\", \"china\", \"nkg\", \"zsnj\", \"nanjing lukou international airport\"],[\"nanning\", \"china\", \"nng\", \"zgnn\", \"nanning wuxu international airport\"],[\"ningbo\", \"china\", \"ngb\", \"zsnb\", \"ningbo lishe international airport\"],[\"osaka\", \"japan\", \"kix\", \"rjbb\", \"kansai international airport\"],[\"seoul\", \"south korea\", \"icn\", \"rksi\", \"incheon international airport\"],[\"shanghai\", \"china\", \"sha\", \"zsss\", \"shanghai hongqiao international airport\"],[\"shanghai\", \"china\", \"pvg\", \"zspd\", \"shanghai pudong international airport\"],[\"shenyang\", \"china\", \"she\", \"zytx\", \"shenyang taoxian international airport\"],[\"shenzhen\", \"china\", \"szx\", \"zgsz\", \"shenzhen bao'an international airport\"],[\"singapore\", \"singapore\", \"sin\", \"wsss\", \"singapore changi airport\"],[\"taipei\", \"taiwan\", \"tpe\", \"rctp\", \"taiwan taoyuan international airport\"],[\"taiyuan\", \"china\", \"tyn\", \"zbyn\", \"taiyuan wusu airport\"],[\"tokyo\", \"japan\", \"nrt\", \"rjaa\", \"narita international airport\"],[\"xiamen\", \"china\", \"xmn\", \"zsam\", \"xiamen gaoqi international airport\"],[\"wenzhou\", \"china\", \"wnz\", \"zswz\", \"wenzhou yongqiang international airport\"]]\nQuestion = Is it true that nanjing airport 's iata code is nkg?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    cities = get_column_by_name(table_data, \"city\")\n    iatas = get_column_by_name(table_data, \"iata\")\n    for city, iata in zip(cities, iatas):\n        if city.lower() == \"nanjing\":\n            answer = equal_to(iata, \"nkg\")\n            break \n    return answer\n\n### END"}
{"id": "062e864f-ae1d-4c6f-a0d0-8082010a4965", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = hey venus!\ntable_data = [[\"region\", \"date\", \"label\", \"format\", \"catalogue\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"vinyl record\", \"rtradlp 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"compact disc\", \"rtradcd 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"download\", \"-\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"vinyl record\", \"rt - 346 - 1\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"download\", \"rt - 346 - 5\"],[\"united states\", \"22 january 2008\", \"rough trade america\", \"double compact disc\", \"rtradcd 423\"],[\"japan\", \"12 september 2007\", \"rough trade japan\", \"compact disc\", \"xqcy - 1003\"]]\nQuestion = Is it true that united states catalogue on 22 january 2008 was xqcy - 1003?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    regions = get_column_by_name(table_data, \"region\")\n    dates = get_column_by_name(table_data, \"date\")\n    catalogues = get_column_by_name(table_data, \"catalogue\")\n    for region, date, catalogue in zip(regions, dates, catalogues):\n        if region.lower() == \"united states\" and \"22 january 2008\" in date.lower():\n            answer = equal_to(catalogue, \"xqcy - 1003\")\n            break \n    return answer\n\n### END"}
{"id": "f93d3027-ae2e-4324-a03d-f1e928eb5cfc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1993 tampa bay buccaneers season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"kickoff\", \"game site\", \"attendance\", \"record\"],[\"1\", \"september 5 , 1993\", \"kansas city chiefs\", \"l 27 - 3\", \"1:00\", \"tampa stadium\", \"63378\", \"0 - 1\"],[\"2\", \"september 12 , 1993\", \"new york giants\", \"l 23 - 7\", \"1:00\", \"giants stadium\", \"75891\", \"0 - 2\"],[\"4\", \"september 26 , 1993\", \"chicago bears\", \"l 47 - 17\", \"1:00\", \"soldier field\", \"58329\", \"0 - 3\"],[\"5\", \"october 3 , 1993\", \"detroit lions\", \"w 27 - 10\", \"1:00\", \"tampa stadium\", \"40794\", \"1 - 3\"],[\"6\", \"october 10 , 1993\", \"minnesota vikings\", \"l 15 - 0\", \"1:00\", \"hubert h humphrey metrodome\", \"54215\", \"1 - 4\"],[\"8\", \"october 24 , 1993\", \"green bay packers\", \"l 37 - 14\", \"1:00\", \"tampa stadium\", \"47354\", \"1 - 5\"],[\"9\", \"october 31 , 1993\", \"atlanta falcons\", \"w 31 - 24\", \"1:00\", \"georgia dome\", \"50647\", \"2 - 5\"],[\"10\", \"november 7 , 1993\", \"detroit lions\", \"l 23 - 0\", \"1:00\", \"pontiac silverdome\", \"65295\", \"2 - 6\"],[\"11\", \"november 14 , 1993\", \"san francisco 49ers\", \"l 45 - 21\", \"1:00\", \"tampa stadium\", \"43835\", \"2 - 7\"],[\"12\", \"november 21 , 1993\", \"minnesota vikings\", \"w 23 - 10\", \"8:00\", \"tampa stadium\", \"40848\", \"3 - 7\"],[\"13\", \"november 28 , 1993\", \"green bay packers\", \"l 13 - 10\", \"1:00\", \"lambeau field\", \"56995\", \"3 - 8\"],[\"14\", \"december 5 , 1993\", \"washington redskins\", \"l 23 - 17\", \"1:00\", \"tampa stadium\", \"49035\", \"3 - 9\"],[\"15\", \"december 12 , 1993\", \"chicago bears\", \"w 13 - 10\", \"1:00\", \"tampa stadium\", \"56667\", \"4 - 9\"],[\"16\", \"december 19 , 1993\", \"los angeles raiders\", \"l 27 - 20\", \"4:00\", \"los angeles memorial coliseum\", \"40532\", \"4 - 10\"],[\"17\", \"december 26 , 1993\", \"denver broncos\", \"w 17 - 10\", \"4:00\", \"mile high stadium\", \"73434\", \"5 - 10\"],[\"18\", \"january 2 , 1994\", \"san diego chargers\", \"l 32 - 17\", \"4:00\", \"tampa stadium\", \"35587\", \"5 - 11\"]]\nQuestion = Is it true that the seventeenth week was the game against the san diego chargers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    answer = False\n    for week, opponent in zip(weeks, opponents):\n        if week == \"17\" and opponent.lower() == \"san diego chargers\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "ff1c29c8-aeb4-44e3-b26e-1d59725051f5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"10:00\", \"10:30\"],[\"coronation street\", \"marketplace\", \"little mosque on the prairie\", \"no opportunity wasted\", \"the fifth estate\", \"the national\", \"the national\"],[\"etalk\", \"jeopardy!\", \"private practice\", \"private practice\", \"criminal minds\", \"csi : ny\", \"csi : ny\"],[\"et canada\", \"entertainment tonight\", \"back to you\", \"'til death\", \"bones\", \"life\", \"life\"],[\"wheel of fortune\", \"e2\", \"smallville\", \"smallville\", \"the big picture\", \"the big picture\", \"the big picture\"],[\"friends\", \"access hollywood\", \"america 's next top model\", \"america 's next top model\", \"great movies\", \"great movies\", \"great movies\"],[\"the insider\", \"e! news\", \"kid nation\", \"kid nation\", \"bionic woman\", \"the simple life\", \"sunset tan\"],[\"virginie\", \"l'épicerie\", \"le match des étoiles\", \"le match des étoiles\", \"enquête\", \"le téléjournal\", \"le téléjournal\"],[\"star système\", \"la poule aux oeufs d'or\", \"destinées\", \"destinées\", \"les soeurs elliot\", \"le tva 22 heures\", \"le tva 22 heures\"],[\"loft story\", \"450 , chemin du golf\", \"movie\", \"movie\", \"movie\", \"le journal du soir\", \"le journal du soir\"]]\nQuestion = Is it true that prior to the showing of the simple life at 10:00 , there was a showing of bionic woman which started at 9:00?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    nine_pm_shows = get_column_by_name(table_data, \"9:00\")\n    ten_pm_shows = get_column_by_name(table_data, \"10:00\")\n    answer = \"bionic woman\" in nine_pm_shows and \"the simple life\" in ten_pm_shows\n    return answer\n\n### END"}
{"id": "f4d345ed-8c45-43c1-abba-5d1993bf8fd3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = livonia cup\ntable_data = [[\"season\", \"winner\", \"score\", \"runner - up\", \"venue\"],[\"2011\", \"fc flora tallinn\", \"2 - 0\", \"skonto fc\", \"skonto hall , riga\"],[\"2008\", \"fk ventspils\", \"2 - 2 aet , 4 - 3 pen\", \"fc levadia tallinn\", \"skonto hall , riga\"],[\"2005\", \"skonto fc\", \"4 - 3\", \"fc levadia tallinn\", \"skonto hall , riga\"],[\"2004\", \"skonto fc\", \"3 - 3 aet , 4 - 3 pen\", \"fc flora tallinn\", \"skonto hall , riga\"],[\"2003\", \"skonto fc\", \"2 - 2 aet , 12 - 11 pen\", \"fc flora tallinn\", \"skonto hall , riga\"]]\nQuestion = Is it true that the 2004 season had a score of 3 - 3 aet , 4 - 3 pen?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    scores = get_column_by_name(table_data, \"score\")\n    for season, score in zip(seasons, scores):\n        if season == \"2004\":\n            answer = equal_to(score, \"3 - 3 aet , 4 - 3 pen\")\n            break \n    return answer\n\n### END"}
{"id": "dc53ad03-3d45-41a1-acdf-f9ba3755107d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 honda indy 300\ntable_data = [[\"driver\", \"team\", \"laps\", \"time / retired\", \"grid\"],[\"cristiano da matta\", \"newman - haas racing\", \"65\", \"1:51:47.260\", \"3\"],[\"michael andretti\", \"team green\", \"65\", \"+ 5.8 secs\", \"6\"],[\"alex tagliani\", \"forsythe racing\", \"65\", \"+ 7.5 secs\", \"7\"],[\"gil de ferran\", \"team penske\", \"65\", \"+ 20.9 secs\", \"2\"],[\"kenny brack\", \"team rahal\", \"65\", \"+ 22.6 secs\", \"13\"],[\"jimmy vasser\", \"patrick racing\", \"65\", \"+ 24.7 secs\", \"10\"],[\"michel jourdain , jr\", \"bettenhausen racing\", \"65\", \"+ 39.5 secs\", \"16\"],[\"christian fittipaldi\", \"newman - haas racing\", \"65\", \"+ 40.5 secs\", \"15\"],[\"max papis\", \"team rahal\", \"65\", \"+ 42.6 secs\", \"14\"],[\"memo gidley\", \"chip ganassi racing\", \"65\", \"+ 42.9 secs\", \"23\"],[\"patrick carpentier\", \"forsythe racing\", \"65\", \"+ 46.7 secs\", \"9\"],[\"shinji nakano\", \"fernández racing\", \"65\", \"+ 46.9 secs\", \"18\"],[\"alex barron\", \"arciero - blair racing\", \"65\", \"+ 46.9 secs\", \"26\"],[\"paul tracy\", \"team green\", \"65\", \"+ 62.6 secs\", \"4\"],[\"scott dixon\", \"pacwest racing\", \"65\", \"+ 72.0 secs\", \"8\"],[\"tora takagi\", \"walker racing\", \"65\", \"+ 81.8 secs\", \"20\"],[\"tony kanaan\", \"mo nunn racing\", \"65\", \"+ 82.0 secs\", \"3\"],[\"bryan herta\", \"forsythe racing\", \"65\", \"+ 82.4 secs\", \"22\"],[\"adrián fernández\", \"fernández racing\", \"65\", \"+ 100.3 secs\", \"17\"],[\"hélio castroneves\", \"team penske\", \"64\", \"+ 1 lap\", \"11\"],[\"bruno junqueira\", \"chip ganassi racing\", \"56\", \"contact\", \"21\"],[\"roberto moreno\", \"patrick racing\", \"54\", \"mechanical\", \"1\"],[\"dario franchitti\", \"team green\", \"35\", \"mechanical\", \"5\"],[\"maurício gugelmin\", \"pacwest racing\", \"34\", \"mechanical\", \"25\"],[\"oriol servià\", \"sigma autosport\", \"10\", \"mechanical\", \"12\"],[\"casey mears\", \"mo nunn racing\", \"0\", \"contact\", \"24\"]]\nQuestion = Is it true that paul tracy is the driver who has a grid lesser than 3 and a time of + 62.6 seconds?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    times = get_column_by_name(table_data, \"time / retired\")\n    grids = get_column_by_name(table_data, \"grid\")\n    for driver, time, grid in zip(drivers, times, grids):\n        if driver.lower() == \"paul tracy\":\n            answer = equal_to(time, \"+ 62.6 secs\") and less_than(int(grid), 3)\n            break \n    return answer\n\n### END"}
{"id": "b6fda53f-dd38-4be9-b99f-ed7001cc8223", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = papal conclave , 1314 - 16\ntable_data = [[\"elector\",\"nationality\",\"faction\",\"elevated\",\"elevator\"],[\"nicolò albertini , op\",\"prato\",\"italian\",\"1303 , december 18\",\"benedict xi\"],[\"bérenger frédol , seniore\",\"french\",\"french\",\"1305 , december 15\",\"clement v\"],[\"arnaud de falguières\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"],[\"guillaume de mandagot , crsa\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"arnaud d'aux\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"jacques d'euse\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"nicolas de fréauville , op\",\"french\",\"french\",\"1305 , december 15\",\"clement v\"],[\"arnaud nouvel , ocist\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"],[\"bérenguer frédol , iuniore\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"michel du bec - crespin\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"guillaume teste\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"guillaume pierre godin , op\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"vital du four , ofm\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"raymond , osb\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"giacomo colonna\",\"roman\",\"italian\",\"1278 , march 12\",\"nicholas iii\"],[\"napoleone orsini\",\"roman\",\"italian\",\"1288 , may 16\",\"nicholas iv\"],[\"pietro colonna\",\"roman\",\"italian\",\"1288 , may 16\",\"nicholas iv\"],[\"guglielmo de longhi\",\"bergamo\",\"italian\",\"1294 , september 18\",\"celestine v\"],[\"giacomo gaetani stefaneschi\",\"rome\",\"italian\",\"1295 , december 17\",\"boniface viii\"],[\"francesco caetani\",\"rome\",\"italian\",\"1295 , december 17\",\"boniface viii\"],[\"luc fieschi\",\"genoese\",\"italian\",\"1300 , march 2\",\"boniface viii\"],[\"arnaud de pellegrue\",\"french\",\"gascon\",\"1305 , december 15\",\"clement v\"],[\"raymond guillaume des forges\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"],[\"bernard de garves\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"]]\nQuestion = Is it true that the nationality for giacomo colonna is roman?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    electors = get_column_by_name(table_data, \"elector\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    for elector, nationality in zip(electors, nationalities):\n        if elector.lower() == \"giacomo colonna\":\n            answer = equal_to(nationality, \"roman\")\n            break \n    return answer\n\n### END"}
{"id": "40664263-2804-430b-b86a-ad665f3d5ae5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2004 - 05 in scottish football\ntable_data = [[\"date\",\"venue\",\"score\",\"competition\",\"report\"],[\"18 august\",\"hampden park , glasgow (h)\",\"0 - 3\",\"friendly\",\"bbc sport\"],[\"3 september\",\"estadio ciudad de valencia , valencia (a)\",\"1 - 1\",\"friendly\",\"bbc sport\"],[\"8 september\",\"hampden park , glasgow (h)\",\"0 - 0\",\"wcq5\",\"bbc sport\"],[\"9 october\",\"hampden park , glasgow (h)\",\"0 - 1\",\"wcq5\",\"bbc sport\"],[\"13 october\",\"republican stadium , chişinău (a)\",\"1 - 1\",\"wcq5\",\"bbc sport\"],[\"17 november\",\"easter road , edinburgh (h)\",\"1 - 4\",\"friendly\",\"bbc sport\"],[\"26 march\",\"san siro , milan (a)\",\"0 - 2\",\"wcq5\",\"bbc sport\"],[\"4 june\",\"hampden park , glasgow (h)\",\"2 - 0\",\"wcq5\",\"bbc sport\"],[\"8 june\",\"dinamo stadion , minsk (a)\",\"0 - 0\",\"wcq5\",\"bbc sport\"]]\nQuestion = Is it true that when the score was 0 - 2 the venue of the competition was hampden park , glasgow (h)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"venue\")\n    scores = get_column_by_name(table_data, \"score\")\n    for venue, score in zip(venues, scores):\n        if score == \"0 - 2\":\n            answer = equal_to(venue, \"hampden park , glasgow (h)\")\n            break \n    return answer\n\n### END"}
{"id": "4f265a16-2edc-47ae-8f32-987727cb6ca2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = bmw m1 procar championship\ntable_data = [[\"round\", \"date\", \"event\", \"circuit\", \"winning driver\", \"winning team\"],[\"1\", \"may 12\", \"belgian grand prix\", \"circuit zolder\", \"elio de angelis\", \"squadra osella corse\"],[\"2\", \"may 26\", \"monaco grand prix\", \"circuit de monaco\", \"niki lauda\", \"project four\"],[\"-\", \"june 3\", \"gunnar nilsson trophy\", \"donington park\", \"nelson piquet\", \"bmw motorsport\"],[\"3\", \"june 30\", \"french grand prix\", \"dijon - prenois\", \"nelson piquet\", \"bmw motorsport\"],[\"4\", \"july 13\", \"british grand prix\", \"silverstone circuit\", \"niki lauda\", \"project four\"],[\"5\", \"july 28\", \"german grand prix\", \"hockenheimring\", \"niki lauda\", \"project four\"],[\"6\", \"august 11\", \"austrian grand prix\", \"österreichring\", \"jacques laffite\", \"bmw motorsport\"],[\"7\", \"august 25\", \"dutch grand prix\", \"circuit zandvoort\", \"hans - joachim stuck\", \"cassani racing\"],[\"8\", \"september 8\", \"italian grand prix\", \"autodromo nazionale monza\", \"hans - joachim stuck\", \"cassani racing\"]]\nQuestion = Is it true that the winning team for circuit zolder was project four?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    circuits = get_column_by_name(table_data, \"circuit\")\n    winning_teams = get_column_by_name(table_data, \"winning team\")\n    answer = False\n    for circuit, winning_team in zip(circuits, winning_teams):\n        if \"circuit zolder\" in circuit.lower():\n            if \"project four\" in winning_team.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "aeaa27b5-e152-43f9-a3c0-d8c2a8612b4b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states presidential election in nevada , 2008\ntable_data = [[\"county\", \"mccain\", \"mccain %\", \"obama\", \"obama %\"],[\"carson city\", \"11419\", \"48.2%\", \"11623\", \"49.1%\"],[\"churchill\", \"6832\", \"64.4%\", \"3494\", \"33.0%\"],[\"clark\", \"257078\", \"39.5%\", \"380765\", \"58.5%\"],[\"douglas\", \"14648\", \"56.6%\", \"10672\", \"41.2%\"],[\"elko\", \"10969\", \"68.5%\", \"4541\", \"28.4%\"],[\"esmeralda\", \"303\", \"69.0%\", \"104\", \"23.7%\"],[\"eureka\", \"564\", \"75.7%\", \"144\", \"19.3%\"],[\"humboldt\", \"3586\", \"63.3%\", \"1909\", \"33.7%\"],[\"lander\", \"1466\", \"69.7%\", \"577\", \"27.5%\"],[\"lincoln\", \"1498\", \"71.1%\", \"518\", \"24.6%\"],[\"lyon\", \"12154\", \"57.6%\", \"8405\", \"39.8%\"],[\"mineral\", \"1131\", \"49.0%\", \"1082\", \"46.9%\"],[\"nye\", \"9537\", \"54.5%\", \"7226\", \"41.3%\"],[\"pershing\", \"1075\", \"58.6%\", \"673\", \"36.7%\"],[\"storey\", \"1247\", \"51.6%\", \"1102\", \"45.6%\"],[\"washoe\", \"76880\", \"42.6%\", \"99671\", \"55.3%\"]]\nQuestion = Is it true that obama got 11623 votes in carson city?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    counties = get_column_by_name(table_data, \"county\")\n    obama_votes = get_column_by_name(table_data, \"obama\")\n    for county, obama_vote in zip(counties, obama_votes):\n        if county.lower() == \"carson city\":\n            answer = equal_to(obama_vote, \"11623\")\n            break \n    return answer\n\n### END"}
{"id": "c306bfa0-8723-4f17-93e3-05216521c787", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1930 grand prix season\ntable_data = [[\"name\",\"circuit\",\"date\",\"winning driver\",\"winning constructor\",\"report\"],[\"circuit d'esterel plage\",\"saint - raphaël\",\"2 march\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"tripoli grand prix\",\"tripoli\",\"23 march\",\"baconin borzacchini\",\"maserati\",\"report\"],[\"monaco grand prix\",\"monte carlo\",\"6 april\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"alessandria circuit\",\"bordino\",\"20 april\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"oran grand prix\",\"arcole\",\"27 april\",\"jean de maleplane\",\"bugatti\",\"report\"],[\"targa florio\",\"madonie\",\"4 may\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"picardy grand prix\",\"péronne\",\"18 may\",\"max fourny\",\"bugatti\",\"report\"],[\"rome grand prix\",\"tre fontane\",\"25 may\",\"luigi arcangeli\",\"maserati\",\"report\"],[\"grand prix des frontières\",\"chimay\",\"9 june\",\"georges de marotte\",\"salmson\",\"report\"],[\"lyon grand prix\",\"quincieux\",\"15 june\",\"louis chiron\",\"bugatti\",\"report\"],[\"grand prix de la marne\",\"reims\",\"29 june\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"eifelrennen\",\"nürburgring\",\"20 july\",\"heinrich - joachim von morgen\",\"bugatti\",\"report\"],[\"dieppe grand prix\",\"dieppe\",\"20 july\",\"marcel lehoux\",\"bugatti\",\"report\"],[\"coppa ciano\",\"montenero\",\"3 august\",\"luigi fagioli\",\"maserati\",\"report\"],[\"dauphiné circuit\",\"grenoble\",\"10 august\",\"philippe étancelin\",\"bugatti\",\"report\"],[\"coppa acerbo\",\"pescara\",\"17 august\",\"achille varzi\",\"maserati\",\"report\"],[\"grand prix du comminges\",\"saint - gaudens\",\"17 august\",\"françois miquel\",\"bugatti\",\"report\"],[\"monza grand prix\",\"monza\",\"7 september\",\"achille varzi\",\"maserati\",\"report\"],[\"lviv grand prix\",\"lviv\",\"8 september\",\"henryk liefeldt\",\"austro daimler\",\"report\"],[\"masaryk circuit\",\"brno\",\"28 september\",\"hermann of leiningen\",\"bugatti\",\"report\"],[\"san sebastián grand prix\",\"lasarte\",\"5 october\",\"achille varzi\",\"maserati\",\"report\"]]\nQuestion = Is it true that the eifelrennen was won on 20 july by heinrich - joachim von morgen driving a bugatti?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    dates = get_column_by_name(table_data, \"date\")\n    winning_drivers = get_column_by_name(table_data, \"winning driver\")\n    winning_constructors = get_column_by_name(table_data, \"winning constructor\")\n    for name, date, winning_driver, winning_constructor in zip(names, dates, winning_drivers, winning_constructors):\n        if equal_to(name, \"eifelrennen\") and equal_to(date, \"20 july\") and equal_to(winning_driver, \"heinrich - joachim von morgen\") and equal_to(winning_constructor, \"bugatti\"):\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "8596bb09-fba8-4e8a-9592-2ba61b31e2c3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1972 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"st kilda\", \"13.12 (90)\", \"melbourne\", \"13.11 (89)\", \"moorabbin oval\", \"18836\", \"19 august 1972\"],[\"south melbourne\", \"9.12 (66)\", \"footscray\", \"11.13 (79)\", \"lake oval\", \"9154\", \"19 august 1972\"],[\"richmond\", \"20.17 (137)\", \"fitzroy\", \"13.22 (100)\", \"mcg\", \"27651\", \"19 august 1972\"],[\"geelong\", \"17.10 (112)\", \"collingwood\", \"17.9 (111)\", \"kardinia park\", \"23108\", \"19 august 1972\"],[\"north melbourne\", \"8.12 (60)\", \"carlton\", \"23.11 (149)\", \"arden street oval\", \"11271\", \"19 august 1972\"],[\"hawthorn\", \"15.16 (106)\", \"essendon\", \"12.15 (87)\", \"vfl park\", \"36749\", \"19 august 1972\"]]\nQuestion = Is it true that the away team with a score of 13.22 (100) is fitzroy?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    away_teams = get_column_by_name(table_data, \"away team\")\n    away_team_scores = get_column_by_name(table_data, \"away team score\")\n    for away_team, away_team_score in zip(away_teams, away_team_scores):\n        if equal_to(away_team_score, \"13.22 (100)\"):\n            answer = equal_to(away_team.lower(), \"fitzroy\")\n            break \n    return answer\n\n### END"}
{"id": "b6a358e4-2bc8-4dbc-a951-562cfe1cee63", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = peaches & herb\ntable_data = [[\"title\", \"label\", \"year of release\", \"country of release\", \"peaches :\"],[\"for your love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"let 's fall in love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"peaches & herb\", \"mca\", \"1977\", \"usa\", \"linda greene\"],[\"2 hot\", \"mvp / polydor\", \"1978\", \"usa\", \"linda greene\"],[\"twice the fire\", \"mvp / polydor\", \"1979\", \"usa\", \"linda greene\"],[\"demasiado candente\", \"mvp / polydor\", \"1979\", \"argentina\", \"linda greene\"],[\"worth the wait\", \"mvp / polydor\", \"1980\", \"usa\", \"linda greene\"],[\"sayin' something\", \"mvp / polydor\", \"1981\", \"usa\", \"linda greene\"],[\"remember\", \"the entertainment co / columbia\", \"1983\", \"usa\", \"linda greene\"],[\"colors of love\", \"imagen\", \"2009\", \"usa\", \"meritxell negre\"]]\nQuestion = Is it true that 2 hot was released in the usa in 1978?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    years = get_column_by_name(table_data, \"year of release\")\n    countries = get_column_by_name(table_data, \"country of release\")\n    for title, year, country in zip(titles, years, countries):\n        if title.lower() == \"2 hot\":\n            answer = equal_to(year, \"1978\") and equal_to(country, \"usa\")\n            break \n    return answer\n\n### END"}
{"id": "b890d528-25e2-43c6-b648-afc38357e82d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date\",\"visitor\",\"score\",\"home\",\"decision\",\"record\"],[\"february 2\",\"phoenix\",\"2 - 3\",\"nashville\",\"ellis\",\"27 - 21 - 5\"],[\"february 5\",\"carolina\",\"0 - 1\",\"nashville\",\"ellis\",\"28 - 21 - 5\"],[\"february 7\",\"tampa bay\",\"2 - 1\",\"nashville\",\"ellis\",\"28 - 21 - 6\"],[\"february 9\",\"nashville\",\"3 - 4\",\"san jose\",\"ellis\",\"28 - 22 - 6\"],[\"february 10\",\"nashville\",\"6 - 3\",\"phoenix\",\"ellis\",\"29 - 22 - 6\"],[\"february 12\",\"detroit\",\"2 - 4\",\"nashville\",\"ellis\",\"30 - 22 - 6\"],[\"february 14\",\"chicago\",\"6 - 1\",\"nashville\",\"mason\",\"30 - 23 - 6\"],[\"february 16\",\"st louis\",\"1 - 2\",\"nashville\",\"ellis\",\"31 - 23 - 6\"],[\"february 17\",\"nashville\",\"4 - 5\",\"minnesota\",\"ellis\",\"31 - 23 - 7\"],[\"february 19\",\"edmonton\",\"4 - 5\",\"nashville\",\"ellis\",\"32 - 23 - 7\"],[\"february 21\",\"vancouver\",\"3 - 2\",\"nashville\",\"ellis\",\"32 - 23 - 8\"],[\"february 23\",\"dallas\",\"6 - 3\",\"nashville\",\"ellis\",\"32 - 24 - 8\"],[\"february 27\",\"nashville\",\"4 - 8\",\"buffalo\",\"mason\",\"32 - 25 - 8\"]]\nQuestion = Is it true that nashville has a home record against vancouver of 32 - 23 - 8 with ellis as the decision?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home\")\n    visitors = get_column_by_name(table_data, \"visitor\")\n    decisions = get_column_by_name(table_data, \"decision\")\n    records = get_column_by_name(table_data, \"record\")\n    for home_team, visitor, decision, record in zip(home_teams, visitors, decisions, records):\n        if home_team.lower() == \"nashville\" and visitor.lower() == \"vancouver\" and decision.lower() == \"ellis\":\n            answer = equal_to(record, \"32 - 23 - 8\")\n            break \n    return answer\n\n### END"}
{"id": "5db0cf14-ff5a-42a8-a299-e1ac6988ba27", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"singular abbreviation\", \"singular word\", \"plural abbreviation\", \"plural word\", \"discipline\"],[\"d\", \"didot\", \"dd\", \"didots\", \"typography\"],[\"f\", \"following line or page\", \"ff\", \"following lines or pages\", \"notes\"],[\"f\", \"folio\", \"ff\", \"folios\", \"literature\"],[\"h\", \"hand\", \"hh\", \"hands\", \"horse height\"],[\"l\", \"line\", \"ll\", \"lines\", \"notes\"],[\"ms\", \"manuscript\", \"mss\", \"manuscripts\", \"notes\"],[\"op\", \"opus\", \"opp\", \"opera\", \"notes\"],[\"p\", \"page\", \"pp\", \"pages\", \"notes\"],[\"q\", \"quarto\", \"qq\", \"quartos\", \"literature\"],[\"s (or §)\", \"section\", \"ss (or §§)\", \"sections\", \"notes\"],[\"v\", \"volume\", \"vv\", \"volumes\", \"notes\"]]\nQuestion = Is it true that the abbreviation of two p 's , pp , is used for pages?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    singular_abbreviations = get_column_by_name(table_data, \"singular abbreviation\")\n    plural_abbreviations = get_column_by_name(table_data, \"plural abbreviation\")\n    plural_words = get_column_by_name(table_data, \"plural word\")\n    for singular_abbreviation, plural_abbreviation, plural_word in zip(singular_abbreviations, plural_abbreviations, plural_words):\n        if singular_abbreviation.lower() == \"p\" and plural_abbreviation.lower() == \"pp\" and plural_word.lower() == \"pages\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "913da62b-518a-44a9-9c0c-303a1c7338d6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sheffield and hallamshire association cup\ntable_data = [[\"season\", \"winner\", \"result\", \"runner - up\", \"final venue\"],[\"2002 - 03\", \"elm tree\", \"1 - 0\", \"stocksbridge park steels reserves\", \"belle vue\"],[\"2003 - 04\", \"hsbc\", \"3 - 2\", \"athersley recreation\", \"belle vue\"],[\"2004 - 05\", \"kiveton park\", \"2 - 2\", \"athersley recreation\", \"sandy lane\"],[\"2005 - 06\", \"kiveton park\", \"5 - 0\", \"sheffield lane top\", \"belle vue\"],[\"2006 - 07\", \"stocksbridge park steels reserves\", \"3 - 1\", \"hemsworth miners welfare\", \"millmoor\"],[\"2007 - 08\", \"athersley recreation\", \"1 - 0\", \"hollinsend amateurs\", \"oakwell\"],[\"2008 - 09\", \"hall green united\", \"2 - 1\", \"kirkburton\", \"keepmoat stadium (pitch 2)\"],[\"2009 - 10\", \"sheffield reserves\", \"2 - 1\", \"dearne colliery miners welfare\", \"inkersall road\"],[\"2010 - 11\", \"stocksbridge park steels reserves\", \"3 - 0\", \"kirkburton\", \"green lane\"],[\"2012 - 13\", \"swinton athletic\", \"3 - 0\", \"kirkburton\", \"sandy lane\"]]\nQuestion = Is it true that the result in green lane with kirkburton ast he runner - up was 3 - 0?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    results = get_column_by_name(table_data, \"result\")\n    runner_ups = get_column_by_name(table_data, \"runner - up\")\n    final_venues = get_column_by_name(table_data, \"final venue\")\n    for result, runner_up, final_venue in zip(results, runner_ups, final_venues):\n        if runner_up.lower() == \"kirkburton\" and final_venue.lower() == \"green lane\":\n            answer = equal_to(result, \"3 - 0\")\n            break \n    return answer\n\n### END"}
{"id": "cf2dbd99-ace5-49e9-af81-339927a9180d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2003 - 04 isu junior grand prix\ntable_data = [[\"rank\",\"nation\",\"gold\",\"silver\",\"bronze\",\"total\"],[\"1\",\"russia\",\"10\",\"14\",\"8\",\"32\"],[\"2\",\"united states\",\"9\",\"6\",\"7\",\"22\"],[\"3\",\"canada\",\"4\",\"2\",\"10\",\"16\"],[\"4\",\"japan\",\"4\",\"5\",\"4\",\"13\"],[\"5\",\"hungary\",\"4\",\"0\",\"2\",\"6\"],[\"6\",\"czech republic\",\"2\",\"1\",\"1\",\"4\"],[\"6\",\"ukraine\",\"1\",\"3\",\"0\",\"4\"],[\"6\",\"italy\",\"0\",\"1\",\"3\",\"4\"],[\"7\",\"sweden\",\"1\",\"2\",\"0\",\"3\"],[\"8\",\"israel\",\"1\",\"1\",\"0\",\"2\"],[\"9\",\"finland\",\"0\",\"0\",\"1\",\"1\"],[\"9\",\"france\",\"0\",\"1\",\"0\",\"1\"]]\nQuestion = Is it true that sweden has 1 bronze medal and ranked at 6 with total of 4 medals and 1 gold medal?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    nations = get_column_by_name(table_data, \"nation\")\n    ranks = get_column_by_name(table_data, \"rank\")\n    golds = get_column_by_name(table_data, \"gold\")\n    bronzes = get_column_by_name(table_data, \"bronze\")\n    totals = get_column_by_name(table_data, \"total\")\n    for nation, rank, gold, bronze, total in zip(nations, ranks, golds, bronzes, totals):\n        if nation.lower() == \"sweden\":\n            answer = equal_to(rank, \"6\") and equal_to(gold, \"1\") and equal_to(bronze, \"1\") and equal_to(total, \"4\")\n            break \n    return answer\n\n### END"}
{"id": "43043604-1b16-448f-adb3-362a1a34c8fa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1970 isle of man tt\ntable_data = [[\"rank\", \"rider\", \"team\", \"speed\", \"time\"],[\"1\", \"chas mortimer\", \"ducati\", \"84.87 mph\", \"2:13.23.4\"],[\"2\", \"john williams\", \"honda\", \"84.80 mph\", \"2:13.29.0\"],[\"3\", \"stan woods\", \"suzuki\", \"84.06 mph\", \"2:14.40.6\"],[\"4\", \"ghunter\", \"ducati\", \"83.94 mph\", \"2:14.52.4\"],[\"5\", \"roy boughley\", \"honda\", \"82.26 mph\", \"2:17.37.6\"],[\"6\", \"raymond ashcroft\", \"suzuki\", \"76.59 mph\", \"2:27.48.8\"],[\"7\", \"tom loughridge\", \"suzuki\", \"76.32 mph\", \"2:28.19.0\"],[\"8\", \"cluton\", \"ducati\", \"72.50 mph\", \"2:36.08.0\"]]\nQuestion = Is it true that tom loughridge is suzuki 's lowest ranked rider?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    riders = get_column_by_name(table_data, \"rider\")\n    teams = get_column_by_name(table_data, \"team\")\n    suzuki_riders = [rider for rider, team in zip(riders, teams) if team.lower() == \"suzuki\"]\n    answer = equal_to(suzuki_riders[-1], \"tom loughridge\")\n    return answer\n\n### END"}
{"id": "e1ce32af-f104-40b6-b714-7afa50d93daa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 fis ski jumping world cup\ntable_data = [[\"rank\",\"name\",\"nationality\",\"1st (m)\",\"2nd (m)\",\"points\",\"overall fht points\",\"overall wc points (rank)\"],[\"1\",\"thomas morgenstern\",\"austria\",\"133.0\",\"136.0\",\"264.7\",\"987.1 (6)\",\"440 (4)\"],[\"2\",\"janne ahonen\",\"finland\",\"134.0\",\"133.5\",\"264.0\",\"1013.9 (2)\",\"350 (7)\"],[\"3\",\"simon ammann\",\"switzerland\",\"136.0\",\"131.5\",\"261.5\",\"1008.3 (5)\",\"669 (1)\"],[\"4\",\"wolfgang loitzl\",\"austria\",\"130.5\",\"135.0\",\"260.9\",\"1011.6 (3)\",\"411 (5)\"],[\"5\",\"andreas kofler\",\"austria\",\"129.0\",\"133.5\",\"255.0\",\"1027.2 (1)\",\"521 (3)\"]]\nQuestion = Is it true that the rank given for janne ahonen of finland is 3?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    ranks = get_column_by_name(table_data, \"rank\")\n    for name, rank in zip(names, ranks):\n        if name.lower() == \"janne ahonen\":\n            answer = equal_to(rank, \"3\")\n            break \n    return answer\n\n### END"}
{"id": "6a547c91-bcd5-42e2-8432-e96a63895cf7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of solar car teams\ntable_data = [[\"year started\", \"number of cars\", \"current car\", \"car\", \"website\"],[\"1998\", \"7\", \"b - 7\", \"77\", \"english\"],[\"1992\", \"7\", \"ã‰clipse 7\", \"92\", \"french english\"],[\"1998\", \"6\", \"esteban vi\", \"55\", \"french english\"],[\"1992\", \"3\", \"isun\", \"66\", \"french english\"],[\"1997\", \"4\", \"phoenix ii\", \"116\", \"english\"],[\"1990\", \"10\", \"midnight sun x\", \"24\", \"english\"],[\"2008\", \"1\", \"arctic sun\", \"none\", \"english\"],[\"1988\", \"11\", \"aurum\", \"100\", \"english\"],[\"1991\", \"6\", \"sunstang\", \"96\", \"english\"],[\"2008\", \"1\", \"raven\", \"none\", \"english\"],[\"2004\", \"4\", \"schulich delta\", \"65\", \"english\"],[\"1989\", \"2\", \"ralos ii\", \"125\", \"english\"],[\"1999\", \"1\", \"xof1\", \"125\", \"english french\"]]\nQuestion = Is it true that the xoft1 car has 1 car and started in 1999?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    year_started = get_column_by_name(table_data, \"year started\")\n    number_of_cars = get_column_by_name(table_data, \"number of cars\")\n    current_car = get_column_by_name(table_data, \"current car\")\n    for year, number, car in zip(year_started, number_of_cars, current_car):\n        if car.lower() == \"xof1\":\n            answer = equal_to(year, \"1999\") and equal_to(number, \"1\")\n            break \n    return answer\n\n### END"}
{"id": "55d9acc4-08e7-440d-8878-ac650304ed61", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1979 new orleans saints season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 2 , 1979\", \"atlanta falcons\", \"l 40 - 34\", \"70940\"],[\"2\", \"september 9 , 1979\", \"green bay packers\", \"l 28 - 19\", \"53184\"],[\"3\", \"september 16 , 1979\", \"philadelphia eagles\", \"l 26 - 14\", \"54212\"],[\"4\", \"september 23 , 1979\", \"san francisco 49ers\", \"w 30 - 21\", \"39727\"],[\"5\", \"september 30 , 1979\", \"new york giants\", \"w 24 - 14\", \"51543\"],[\"6\", \"october 7 , 1979\", \"los angeles rams\", \"l 35 - 17\", \"68986\"],[\"7\", \"october 14 , 1979\", \"tampa bay buccaneers\", \"w 42 - 14\", \"67640\"],[\"8\", \"october 21 , 1979\", \"detroit lions\", \"w 17 - 7\", \"57428\"],[\"9\", \"october 28 , 1979\", \"washington redskins\", \"w 14 - 10\", \"52133\"],[\"10\", \"november 4 , 1979\", \"denver broncos\", \"l 10 - 3\", \"74482\"],[\"11\", \"november 11 , 1979\", \"san francisco 49ers\", \"w 31 - 20\", \"65551\"],[\"12\", \"november 18 , 1979\", \"seattle seahawks\", \"l 38 - 24\", \"60055\"],[\"13\", \"november 25 , 1979\", \"atlanta falcons\", \"w 37 - 6\", \"42815\"],[\"14\", \"december 3 , 1979\", \"oakland raiders\", \"l 42 - 35\", \"65541\"],[\"15\", \"december 9 , 1979\", \"san diego chargers\", \"l 35 - 0\", \"61059\"],[\"16\", \"december 16 , 1979\", \"los angeles rams\", \"w 29 - 14\", \"53879\"]]\nQuestion = Is it true that the oakland raiders lost at 42 - 35 on december 3 , 1979?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    results = get_column_by_name(table_data, \"result\")\n    for date, opponent, result in zip(dates, opponents, results):\n        if date.lower() == \"december 3 , 1979\" and opponent.lower() == \"oakland raiders\":\n            answer = equal_to(result, \"l 42 - 35\")\n            break \n    return answer\n\n### END"}
{"id": "afd2a1df-be4c-41d6-8645-e2b093c0e263", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1959 chicago cardinals season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"venue\", \"attendance\"],[\"1\", \"september 27 , 1959\", \"washington redskins\", \"w 49 - 21\", \"soldier field\", \"21892\"],[\"2\", \"october 4 , 1959\", \"cleveland browns\", \"l 34 - 7\", \"soldier field\", \"19935\"],[\"3\", \"october 11 , 1959\", \"washington redskins\", \"l 23 - 14\", \"griffith stadium\", \"25937\"],[\"4\", \"october 18 , 1959\", \"cleveland browns\", \"l 17 - 7\", \"cleveland stadium\", \"46422\"],[\"5\", \"october 25 , 1959\", \"philadelphia eagles\", \"l 28 - 24\", \"metropolitan stadium\", \"20112\"],[\"6\", \"november 1 , 1959\", \"pittsburgh steelers\", \"w 45 - 24\", \"soldier field\", \"23187\"],[\"7\", \"november 8 , 1959\", \"new york giants\", \"l 9 - 3\", \"yankee stadium\", \"56779\"],[\"8\", \"november 15 , 1959\", \"philadelphia eagles\", \"l 27 - 17\", \"franklin field\", \"28887\"],[\"9\", \"november 22 , 1959\", \"new york giants\", \"l 30 - 20\", \"metropolitan stadium\", \"26625\"],[\"10\", \"november 29 , 1959\", \"chicago bears\", \"l 31 - 7\", \"soldier field\", \"48687\"],[\"11\", \"december 6 , 1959\", \"detroit lions\", \"l 45 - 21\", \"briggs stadium\", \"45811\"],[\"12\", \"december 13 , 1959\", \"pittsburgh steelers\", \"l 35 - 20\", \"forbes field\", \"19011\"]]\nQuestion = Is it true that cleveland browns was week 1 's opponent?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    answer = opponents[0].lower() == \"cleveland browns\"\n    return answer\n\n### END"}
{"id": "5ed6d44e-6654-41fb-8dad-35c18e75265b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"game\", \"date\", \"home team\", \"result\", \"road team\"],[\"game 1\", \"april 14\", \"boston\", \"117 - 114\", \"los angeles\"],[\"game 2\", \"april 16\", \"boston\", \"113 - 106\", \"los angeles\"],[\"game 3\", \"april 17\", \"los angeles\", \"119 - 99\", \"boston\"],[\"game 4\", \"april 19\", \"los angeles\", \"105 - 108\", \"boston\"],[\"game 5\", \"april 21\", \"boston\", \"119 - 126\", \"los angeles\"],[\"game 6\", \"april 24\", \"los angeles\", \"109 - 112\", \"boston\"]]\nQuestion = Is it true that boston 's road team results for game 4 is 105 - 108?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    games = get_column_by_name(table_data, \"game\")\n    results = get_column_by_name(table_data, \"result\")\n    road_teams = get_column_by_name(table_data, \"road team\")\n    for game, result, road_team in zip(games, results, road_teams):\n        if game.lower() == \"game 4\" and road_team.lower() == \"boston\":\n            answer = equal_to(result, \"105 - 108\")\n            break \n    return answer\n\n### END"}
{"id": "3d13d43d-ae63-4b9e-878d-c9d6b9a6f580", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 seattle supersonics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"47\", \"february 2\", \"new york\", \"w 86 - 85 (ot)\", \"kevin durant (21)\", \"nick collison (12)\", \"earl watson (8)\", \"keyarena 12783\", \"12 - 35\"],[\"48\", \"february 4\", \"chicago\", \"l 108 - 118 (ot)\", \"wally szczerbiak (21)\", \"nick collison (9)\", \"earl watson (8)\", \"keyarena 10935\", \"12 - 36\"],[\"49\", \"february 6\", \"sacramento\", \"w 105 - 92 (ot)\", \"earl watson (23)\", \"earl watson chris wilcox (10)\", \"earl watson (10)\", \"arco arena 13136\", \"13 - 36\"],[\"50\", \"february 8\", \"phoenix\", \"l 99 - 103 (ot)\", \"chris wilcox (22)\", \"chris wilcox (15)\", \"earl watson (5)\", \"us airways center 18422\", \"13 - 37\"],[\"51\", \"february 13\", \"utah\", \"l 93 - 112 (ot)\", \"kevin durant (19)\", \"kurt thomas (13)\", \"earl watson (14)\", \"keyarena 10618\", \"13 - 38\"],[\"52\", \"february 19\", \"memphis\", \"w 108 - 101 (ot)\", \"earl watson (26)\", \"nick collison jeff green (9)\", \"earl watson (9)\", \"keyarena 11391\", \"14 - 38\"],[\"53\", \"february 21\", \"portland\", \"l 88 - 92 (ot)\", \"kevin durant (20)\", \"nick collison (14)\", \"earl watson (9)\", \"rose garden 20168\", \"14 - 39\"],[\"54\", \"february 22\", \"portland\", \"w 99 - 87 (ot)\", \"kevin durant (17)\", \"jeff green (9)\", \"earl watson (4)\", \"keyarena 16640\", \"15 - 39\"],[\"55\", \"february 24\", \"l a lakers\", \"l 91 - 111 (ot)\", \"mickaël gelabale (21)\", \"johan petro (10)\", \"earl watson (8)\", \"keyarena 17072\", \"15 - 40\"],[\"56\", \"february 26\", \"golden state\", \"l 99 - 105 (ot)\", \"kevin durant jeff green (21)\", \"nick collison (13)\", \"luke ridnour (15)\", \"oracle arena 19412\", \"15 - 41\"],[\"57\", \"february 27\", \"denver\", \"l 96 - 138 (ot)\", \"kevin durant mickaël gelabale (16)\", \"johan petro (8)\", \"mickaël gelabale (6)\", \"keyarena 13627\", \"15 - 42\"]]\nQuestion = Is it true that sacramento 's record was 13 - 36 after the 105 - 92 (ot) win?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    scores = get_column_by_name(table_data, \"score\")\n    records = get_column_by_name(table_data, \"record\")\n    for team, score, record in zip(teams, scores, records):\n        if team.lower() == \"sacramento\" and score.lower() == \"w 105 - 92 (ot)\":\n            answer = equal_to(record, \"13 - 36\")\n            break \n    return answer\n\n### END"}
{"id": "1056b433-0b10-4bd9-b7f1-db5b8e7ff4a9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1954 baltimore colts season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"record\", \"game site\", \"attendance\"],[\"1\", \"september 26 , 1954\", \"los angeles rams\", \"l 0 - 48\", \"0 - 1\", \"memorial stadium\", \"36215\"],[\"2\", \"october 2 , 1954\", \"new york giants\", \"w 20 - 14\", \"1 - 1\", \"memorial stadium\", \"27088\"],[\"3\", \"october 10 , 1954\", \"chicago bears\", \"l 9 - 28\", \"1 - 2\", \"wrigley field\", \"27845\"],[\"4\", \"october 16 , 1954\", \"detroit lions\", \"l 0 - 35\", \"1 - 3\", \"tiger stadium\", \"48272\"],[\"5\", \"october 24 , 1954\", \"green bay packers\", \"l 6 - 7\", \"1 - 4\", \"memorial stadium\", \"28680\"],[\"6\", \"october 31 , 1954\", \"washington redskins\", \"l 21 - 24\", \"1 - 5\", \"griffith stadium\", \"23566\"],[\"7\", \"november 6 , 1954\", \"detroit lions\", \"l 3 - 27\", \"1 - 6\", \"memorial stadium\", \"25287\"],[\"8\", \"november 13 , 1954\", \"green bay packers\", \"l 13 - 24\", \"1 - 7\", \"milwaukee county stadium\", \"19786\"],[\"9\", \"november 21 , 1954\", \"chicago bears\", \"l 13 - 28\", \"1 - 8\", \"memorial stadium\", \"23093\"],[\"10\", \"november 28 , 1954\", \"san francisco 49ers\", \"w 17 - 13\", \"2 - 8\", \"memorial stadium\", \"23875\"],[\"11\", \"december 4 , 1954\", \"los angeles rams\", \"w 22 - 21\", \"3 - 8\", \"los angeles memorial coliseum\", \"30744\"],[\"12\", \"december 11 , 1954\", \"san francisco 49ers\", \"l 7 - 10\", \"3 - 9\", \"kezar stadium\", \"26856\"]]\nQuestion = Is it true that there were 25287 people at the stadium during the week - 7 game versus the detroit lions?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    for week, opponent, attendance in zip(weeks, opponents, attendances):\n        if week == \"7\" and opponent.lower() == \"detroit lions\":\n            answer = equal_to(attendance, \"25287\")\n            break \n    return answer\n\n### END"}
{"id": "882deda0-1cb2-4783-be44-92e1ec797f5b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = skal vi danse? (season 6)\ntable_data = [[\"couple\", \"style\", \"music\", \"trine dehli cleve\", \"tor fløysvik\", \"karianne gulliksen\", \"christer tornell\", \"total\"],[\"håvard & elena\", \"samba\", \"livin' la vida loca - ricky martin\", \"8\", \"7\", \"7\", \"7\", \"29\"],[\"stine & tom - erik\", \"slowfox\", \"why don't you do right - julie london\", \"8\", \"7\", \"8\", \"7\", \"30\"],[\"aylar & egor\", \"samba\", \"whenever , wherever - shakira\", \"7\", \"8\", \"8\", \"8\", \"31\"],[\"tommy & rakel\", \"slowfox\", \"ain't that a kick in the head - robbie williams\", \"6\", \"3\", \"5\", \"6\", \"20\"],[\"maria & asmund\", \"samba\", \"mas que nada - salomé de bahia\", \"8\", \"7\", \"8\", \"8\", \"31\"],[\"cecilie & tobias\", \"samba\", \"conga - gloria estefan\", \"5\", \"5\", \"6\", \"6\", \"22\"]]\nQuestion = Is it true that tor floysvik gave maria & asmund 7 points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    couples = get_column_by_name(table_data, \"couple\")\n    tor_floysvik_scores = get_column_by_name(table_data, \"tor fløysvik\")\n    for couple, score in zip(couples, tor_floysvik_scores):\n        if couple.lower() == \"maria & asmund\":\n            answer = equal_to(score, \"7\")\n            break \n    return answer\n\n### END"}
{"id": "750fb49d-8e81-44fc-ab9e-fa1f1a48ddb2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1949 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"5.13 (43)\", \"richmond\", \"20.12 (132)\", \"glenferrie oval\", \"13000\", \"23 april 1949\"],[\"footscray\", \"12.7 (79)\", \"geelong\", \"9.14 (68)\", \"western oval\", \"15500\", \"23 april 1949\"],[\"south melbourne\", \"12.13 (85)\", \"st kilda\", \"12.10 (82)\", \"lake oval\", \"9000\", \"23 april 1949\"],[\"north melbourne\", \"7.14 (56)\", \"essendon\", \"10.15 (75)\", \"arden street oval\", \"20000\", \"23 april 1949\"],[\"melbourne\", \"12.8 (80)\", \"collingwood\", \"11.16 (82)\", \"mcg\", \"29000\", \"23 april 1949\"],[\"fitzroy\", \"15.16 (106)\", \"carlton\", \"15.15 (105)\", \"brunswick street oval\", \"25000\", \"23 april 1949\"]]\nQuestion = Is it true that south melbourne 's score is 12.13 (85) against away team geelong?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    for home_team, home_team_score, away_team in zip(home_teams, home_team_scores, away_teams):\n        if home_team.lower() == \"south melbourne\" and away_team.lower() == \"geelong\":\n            answer = home_team_score == \"12.13 (85)\"\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "341a9e21-0e38-4013-bc72-e04a5a676d04", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1964 all - ireland senior hurling championship\ntable_data = [[\"rank\", \"player\", \"county\", \"tally\", \"total\", \"opposition\"],[\"1\", \"richard browne\", \"cork\", \"4 - 0\", \"12\", \"galway\"],[\"2\", \"tony forrestal\", \"kilkenny\", \"3 - 2\", \"11\", \"wexford\"],[\"3\", \"pat cronin\", \"clare\", \"2 - 4\", \"10\", \"limerick\"],[\"3\", \"jimmy doyle\", \"tipperary\", \"1 - 7\", \"10\", \"clare\"],[\"3\", \"jimmy doyle\", \"tipperary\", \"0 - 10\", \"10\", \"cork\"],[\"3\", \"jimmy doyle\", \"tipperary\", \"0 - 10\", \"10\", \"kilkenny\"],[\"7\", \"donie nealon\", \"tipperary\", \"3 - 0\", \"9\", \"kilkenny\"],[\"7\", \"philly grimes\", \"waterford\", \"2 - 3\", \"9\", \"cork\"],[\"7\", \"paddy molloy\", \"offaly\", \"1 - 6\", \"9\", \"westmeath\"],[\"10\", \"fran whelan\", \"dublin\", \"2 - 2\", \"8\", \"carlow\"],[\"10\", \"pat harte\", \"cork\", \"2 - 2\", \"8\", \"waterford\"]]\nQuestion = Is it true that ranked 1st with a total of 12 is richard browne from cork county?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    players = get_column_by_name(table_data, \"player\")\n    counties = get_column_by_name(table_data, \"county\")\n    totals = get_column_by_name(table_data, \"total\")\n    for rank, player, county, total in zip(ranks, players, counties, totals):\n        if equal_to(rank, \"1\") and equal_to(player.lower(), \"richard browne\") and equal_to(county.lower(), \"cork\") and equal_to(total, \"12\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "6804f7c7-c62d-4e27-8815-7f9659f490d8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 boston celtics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"74\", \"april 1\", \"chicago\", \"106 - 92\", \"allen (22)\", \"perkins (9)\", \"rondo (10)\", \"united center 22225\", \"59 - 15\"],[\"75\", \"april 2\", \"indiana\", \"92 - 77\", \"garnett (20)\", \"garnett (11)\", \"rondo (6)\", \"td banknorth garden 18624\", \"60 - 15\"],[\"76\", \"april 5\", \"charlotte\", \"101 - 78\", \"powe (22)\", \"powe (9)\", \"rondo (5)\", \"charlotte bobcats arena 19403\", \"61 - 15\"],[\"77\", \"april 8\", \"milwaukee\", \"107 - 104 (ot)\", \"garnett (21)\", \"perkins (10)\", \"pierce (4)\", \"bradley center 15921\", \"62 - 15\"],[\"78\", \"april 9\", \"washington\", \"95 - 109\", \"pierce (28)\", \"garnett (14)\", \"pierce , rondo (7)\", \"verizon center 20173\", \"62 - 16\"],[\"79\", \"april 11\", \"milwaukee\", \"102 - 86\", \"rondo (16)\", \"garnett , posey (8)\", \"rondo (10)\", \"td banknorth garden 18624\", \"63 - 16\"],[\"80\", \"april 12\", \"atlanta\", \"99 - 89\", \"garnett (24)\", \"davis (10)\", \"cassell , rondo (5)\", \"philips arena 20098\", \"64 - 16\"],[\"81\", \"april 14\", \"new york\", \"99 - 93\", \"rondo (23)\", \"rondo (10)\", \"rondo (5)\", \"madison square garden 19763\", \"65 - 16\"],[\"82\", \"april 16\", \"new jersey\", \"105 - 94\", \"powe (27)\", \"powe (11)\", \"cassell (4)\", \"td banknorth garden 18624\", \"66 - 16\"]]\nQuestion = Is it true that on april 14 , rondo had the most assists (5) and the most rebounds (10)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    high_rebounds = get_column_by_name(table_data, \"high rebounds\")\n    high_assists = get_column_by_name(table_data, \"high assists\")\n    for date, high_rebound, high_assist in zip(dates, high_rebounds, high_assists):\n        if \"april 14\" in date.lower():\n            answer = equal_to(high_rebound, \"rondo (10)\") and equal_to(high_assist, \"rondo (5)\")\n            break \n    return answer\n\n### END"}
{"id": "ca2eb013-258a-4aeb-9955-ead73c5209d0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"order\", \"episode\", \"original airdate\", \"timeslot\", \"viewers (100000s)\", \"nightly rank\", \"weekly rank\"],[\"1\", \"818 - jklpuzo\", \"september 28 , 2009\", \"monday 8:00 pm - 8:30 pm\", \"13.27\", \"6\", \"16\"],[\"2\", \"whipped unto the third generation\", \"october 19 , 2009\", \"monday 7:30 pm - 8:00 pm\", \"14.36\", \"1\", \"3\"],[\"3\", \"mmm , fish yum\", \"october 26 , 2009\", \"monday 7:30 pm - 8:00 pm\", \"14.38\", \"2\", \"6\"],[\"4\", \"laxative tester , horse inseminator\", \"november 2 , 2009\", \"monday 7:30 pm - 8:00 pm\", \"13.69\", \"2\", \"8\"],[\"5\", \"for the sake of the child\", \"november 9 , 2009\", \"monday 7:30 pm - 8:00 pm\", \"14.55\", \"1\", \"4\"],[\"6\", \"give me your thumb\", \"november 16 , 2009\", \"monday 7:30 pm - 8:00 pm\", \"14.62\", \"1\", \"3\"],[\"7\", \"untainted by filth\", \"november 23 , 2009\", \"monday 7:30 pm - 8:00 pm\", \"12.76\", \"4\", \"10\"],[\"8\", \"gorp fnark shmegle\", \"february 1 , 2010\", \"monday 7:30 pm - 8:00 pm\", \"15.19\", \"1\", \"3\"],[\"9\", \"captain terry 's spray - on hair\", \"february 8 , 2010\", \"monday 7:30 pm - 8:00 pm\", \"14.20\", \"1\", \"2\"],[\"10\", \"that 's why they call it ball room\", \"february 15 , 2010\", \"monday 7:30 pm - 8:00 pm\", \"13.26\", \"3\", \"8\"],[\"11\", \"warning , it 's dirty\", \"february 22 , 2010\", \"monday 7:30 pm - 8:00 pm\", \"13.97\", \"1\", \"1\"]]\nQuestion = Is it true that the highest nightly rank number is 6?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef get_max_value(lst):\n    return max(lst)\n\ndef solution(table_data):\n    nightly_ranks = get_column_by_name(table_data, \"nightly rank\")\n    nightly_ranks = [int(rank) for rank in nightly_ranks]\n    max_rank = get_max_value(nightly_ranks)\n    answer = max_rank == 6\n    return answer\n\n### END"}
{"id": "f23b705d-85a4-4691-9e2e-abcc909f65a8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1971 nhl amateur draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"15\", \"ken baird\", \"defence\", \"canada\", \"california golden seals\", \"flin flon bombers (wchl)\"],[\"16\", \"henry boucha\", \"centre\", \"united states\", \"detroit red wings\", \"us national development team\"],[\"17\", \"bobby lalonde\", \"centre\", \"canada\", \"vancouver canucks\", \"montreal junior canadiens (oha)\"],[\"18\", \"brian mckenzie\", \"left wing\", \"canada\", \"pittsburgh penguins\", \"st catharines black hawks (oha)\"],[\"19\", \"craig ramsay\", \"left wing\", \"canada\", \"buffalo sabres\", \"peterborough petes (oha)\"],[\"20\", \"larry robinson\", \"defence\", \"canada\", \"montreal canadiens\", \"kitchener rangers (oha)\"],[\"21\", \"rod norrish\", \"left wing\", \"canada\", \"minnesota north stars\", \"regina pats (wchl)\"],[\"22\", \"rick kehoe\", \"right wing\", \"canada\", \"toronto maple leafs\", \"hamilton red wings (oha)\"],[\"23\", \"dave fortier\", \"defence\", \"canada\", \"toronto maple leafs\", \"st catharines black hawks (oha)\"],[\"24\", \"michel deguise\", \"goaltender\", \"canada\", \"montreal canadiens\", \"sorel eperviers (qmjhl)\"],[\"25\", \"terry french\", \"centre\", \"canada\", \"montreal canadiens\", \"ottawa 67 's (oha)\"],[\"26\", \"dave kryskow\", \"left wing\", \"canada\", \"chicago black hawks\", \"edmonton oil kings (wchl)\"],[\"27\", \"tom williams\", \"left wing\", \"canada\", \"new york rangers\", \"hamilton red wings (oha)\"],[\"28\", \"curt ridley\", \"goaltender\", \"canada\", \"boston bruins\", \"portage terriers (mjhl)\"]]\nQuestion = Is it true that tom williams is the player for boston bruins?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    nhl_teams = get_column_by_name(table_data, \"nhl team\")\n    answer = False\n    for player, nhl_team in zip(players, nhl_teams):\n        if player.lower() == \"tom williams\" and nhl_team.lower() == \"boston bruins\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "c5c09044-2938-447d-9137-d0739ead51cc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1954 baltimore colts season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"record\", \"game site\", \"attendance\"],[\"1\", \"september 26 , 1954\", \"los angeles rams\", \"l 0 - 48\", \"0 - 1\", \"memorial stadium\", \"36215\"],[\"2\", \"october 2 , 1954\", \"new york giants\", \"w 20 - 14\", \"1 - 1\", \"memorial stadium\", \"27088\"],[\"3\", \"october 10 , 1954\", \"chicago bears\", \"l 9 - 28\", \"1 - 2\", \"wrigley field\", \"27845\"],[\"4\", \"october 16 , 1954\", \"detroit lions\", \"l 0 - 35\", \"1 - 3\", \"tiger stadium\", \"48272\"],[\"5\", \"october 24 , 1954\", \"green bay packers\", \"l 6 - 7\", \"1 - 4\", \"memorial stadium\", \"28680\"],[\"6\", \"october 31 , 1954\", \"washington redskins\", \"l 21 - 24\", \"1 - 5\", \"griffith stadium\", \"23566\"],[\"7\", \"november 6 , 1954\", \"detroit lions\", \"l 3 - 27\", \"1 - 6\", \"memorial stadium\", \"25287\"],[\"8\", \"november 13 , 1954\", \"green bay packers\", \"l 13 - 24\", \"1 - 7\", \"milwaukee county stadium\", \"19786\"],[\"9\", \"november 21 , 1954\", \"chicago bears\", \"l 13 - 28\", \"1 - 8\", \"memorial stadium\", \"23093\"],[\"10\", \"november 28 , 1954\", \"san francisco 49ers\", \"w 17 - 13\", \"2 - 8\", \"memorial stadium\", \"23875\"],[\"11\", \"december 4 , 1954\", \"los angeles rams\", \"w 22 - 21\", \"3 - 8\", \"los angeles memorial coliseum\", \"30744\"],[\"12\", \"december 11 , 1954\", \"san francisco 49ers\", \"l 7 - 10\", \"3 - 9\", \"kezar stadium\", \"26856\"]]\nQuestion = Is it true that the team lost to the chicago bears during week three , 9 - 28?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    results = get_column_by_name(table_data, \"result\")\n    for week, opponent, result in zip(weeks, opponents, results):\n        if equal_to(week, \"3\") and equal_to(opponent, \"chicago bears\") and equal_to(result, \"l 9 - 28\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "5bfe4b0c-f7ba-468d-a31f-447e9f06087e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of airlines of singapore\ntable_data = [[\"airlines\", \"iata\", \"icao\", \"callsign\", \"commenced operations\"],[\"jetstar asia airways\", \"3k\", \"jsa\", \"jetstar asia\", \"2004\"],[\"scoot\", \"tz\", \"sco\", \"scooter\", \"2012\"],[\"silkair\", \"mi\", \"slk\", \"silkair\", \"1976\"],[\"singapore airlines\", \"sq\", \"sia\", \"singapore\", \"1947\"],[\"singapore airlines cargo\", \"sq\", \"sqc\", \"singcargo\", \"2001\"],[\"tigerair\", \"tr\", \"tgw\", \"go cat\", \"2003\"],[\"valuair\", \"vf\", \"vlu\", \"valuair\", \"2004\"]]\nQuestion = Is it true that singapore is the callsign that commenced operations after tigerair?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    callsigns = get_column_by_name(table_data, \"callsign\")\n    commenced_operations = get_column_by_name(table_data, \"commenced operations\")\n    for callsign, commenced_operation in zip(callsigns, commenced_operations):\n        if callsign.lower() == \"singapore\":\n            singapore_commenced_operation = int(commenced_operation)\n        if callsign.lower() == \"go cat\":\n            tigerair_commenced_operation = int(commenced_operation)\n    answer = greater(singapore_commenced_operation, tigerair_commenced_operation)\n    return answer\n\n### END"}
{"id": "0166d93b-4ae5-4ac9-b8ef-ac1f73020079", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = gilmour racing\ntable_data = [[\"season\", \"series\", \"points\", \"position\", \"driver\"],[\"2001\", \"queensland formula ford championship\", \"216\", \"2nd\", \"chris gilmour\"],[\"2002\", \"queensland formula ford championship\", \"234\", \"2nd\", \"chris gilmour\"],[\"2003\", \"queensland formula ford championship\", \"222\", \"1st\", \"chris gilmour\"],[\"2004\", \"australian formula 3 championship\", \"235\", \"2nd\", \"chris gilmour\"],[\"2005\", \"australian formula 3 championship\", \"142\", \"4th\", \"chris gilmour\"],[\"2006\", \"australian formula 3 championship\", \"150\", \"4th\", \"chris gilmour\"],[\"2007\", \"australian formula 3 championship\", \"52\", \"8th\", \"chris gilmour\"],[\"2008\", \"australian formula 3 championship - national class\", \"228\", \"1st\", \"chris gilmour\"],[\"2009\", \"australian formula 3 championship - national class\", \"93\", \"4th\", \"chris gilmour\"],[\"2010\", \"australian formula 3 championship\", \"90\", \"5th\", \"chris gilmour\"],[\"2011\", \"australian formula 3 championship\", \"210\", \"1st\", \"chris gilmour\"]]\nQuestion = Is it true that during the 2001 season , chris gilmour finished 2nd with 235 points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    points = get_column_by_name(table_data, \"points\")\n    positions = get_column_by_name(table_data, \"position\")\n    drivers = get_column_by_name(table_data, \"driver\")\n    for season, point, position, driver in zip(seasons, points, positions, drivers):\n        if season == \"2001\" and driver.lower() == \"chris gilmour\":\n            answer = equal_to(point, \"235\") and equal_to(position, \"2nd\")\n            break \n    return answer\n\n### END"}
{"id": "632dd6d4-05ba-45ff-b25c-9b521b14402b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of airlines of singapore\ntable_data = [[\"airlines\", \"iata\", \"icao\", \"callsign\", \"commenced operations\"],[\"jetstar asia airways\", \"3k\", \"jsa\", \"jetstar asia\", \"2004\"],[\"scoot\", \"tz\", \"sco\", \"scooter\", \"2012\"],[\"silkair\", \"mi\", \"slk\", \"silkair\", \"1976\"],[\"singapore airlines\", \"sq\", \"sia\", \"singapore\", \"1947\"],[\"singapore airlines cargo\", \"sq\", \"sqc\", \"singcargo\", \"2001\"],[\"tigerair\", \"tr\", \"tgw\", \"go cat\", \"2003\"],[\"valuair\", \"vf\", \"vlu\", \"valuair\", \"2004\"]]\nQuestion = Is it true that singapore airlines commenced operations in 1947?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    airlines = get_column_by_name(table_data, \"airlines\")\n    commenced_operations = get_column_by_name(table_data, \"commenced operations\")\n    for airline, commenced_operation in zip(airlines, commenced_operations):\n        if airline.lower() == \"singapore airlines\":\n            answer = equal_to(commenced_operation, \"1947\")\n            break \n    return answer\n\n### END"}
{"id": "8c654674-d268-4e9a-bf7d-450bfb760967", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"class\", \"part 1\", \"part 2\", \"part 3\", \"part 4\", \"verb meaning\"],[\"1\", \"rīdan\", \"rād\", \"ridon\", \"riden\", \"to ride\"],[\"2a\", \"frēosan\", \"frēas\", \"fruron\", \"froren\", \"to freeze\"],[\"2b\", \"lūcan\", \"lēac\", \"lucon\", \"locen\", \"to lock\"],[\"3a\", \"bindan\", \"band\", \"bundon\", \"bunden\", \"to bind\"],[\"3b\", \"weorþan\", \"wearþ\", \"wurdon\", \"worden\", \"to become\"],[\"4\", \"beran\", \"bær\", \"bǣron\", \"boren\", \"to bear\"],[\"5\", \"lesan\", \"læs\", \"lǣron\", \"leren\", \"to gather\"],[\"6\", \"alan\", \"ōl\", \"ōlon\", \"alen\", \"to nourish , to grow\"],[\"7a\", \"hātan\", \"hēt\", \"hēton\", \"hāten\", \"to call , to be called\"],[\"7b\", \"hlēapan\", \"hlēop\", \"hlēppon\", \"hlēapen\", \"to leap\"],[\"7c\", \"healdan\", \"hēold\", \"hēoldon\", \"healden\", \"to hold\"],[\"7d\", \"rǣdan\", \"rēd\", \"rēdon\", \"rǣden\", \"to advise , to interpret\"]]\nQuestion = Is it true that the class of the verb whose part 1 starts with an l is class 4?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef starts_with(string, char):\n    return string.startswith(char)\n\ndef solution(table_data):\n    classes = get_column_by_name(table_data, \"class\")\n    part_1s = get_column_by_name(table_data, \"part 1\")\n    for class_, part_1 in zip(classes, part_1s):\n        if starts_with(part_1, \"l\"):\n            answer = equal_to(class_, \"4\")\n            break \n    return answer\n\n### END"}
{"id": "cbc8850d-c5a3-45a8-b849-7127faf51f90", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = toronto , grey and bruce railway\ntable_data = [[\"number\", \"name\", \"builder\", \"type\", \"date\", \"works number\"],[\"1\", \"gordon\", \"avonside engine company\", \"4 - 6 - 0\", \"aug 1870\", \"799\"],[\"2\", \"ar mcmaster\", \"avonside engine company\", \"4 - 4 - 0\", \"aug 1870\", \"800\"],[\"3\", \"kincardine\", \"avonside engine company\", \"4 - 4 - 0\", \"september 1870\", \"809\"],[\"4\", \"r walker & sons\", \"avonside engine company\", \"4 - 4 - 0\", \"may 1871\", \"838\"],[\"5\", \"albion\", \"avonside engine company\", \"4 - 4 - 0\", \"july 1871\", \"839\"],[\"6\", \"rice lewis & son\", \"avonside engine company\", \"4 - 4 - 0\", \"mid 1871\", \"840\"],[\"7\", \"caledon\", \"avonside engine company\", \"0 - 6 - 6 - 0 fairlie type\", \"late 1872\", \"862 & 863\"],[\"8\", \"mono\", \"avonside engine company\", \"4 - 6 - 0\", \"late 1871\", \"866\"],[\"9\", \"toronto\", \"baldwin locomotive works\", \"2 - 6 - 0\", \"september 1871\", \"2534\"],[\"10\", \"amaranth\", \"baldwin locomotive works\", \"2 - 6 - 0\", \"september 1871\", \"2538\"],[\"11\", \"holland\", \"avonside engine company\", \"4 - 6 - 0\", \"early 1873\", \"one of 935 - 939\"],[\"12\", \"sydenham\", \"avonside engine company\", \"4 - 6 - 0\", \"early 1873\", \"one of 935 - 939\"],[\"13\", \"artemisia\", \"avonside engine company\", \"4 - 6 - 0\", \"early 1873\", \"one of 935 - 939\"],[\"14\", \"owen sound\", \"avonside engine company\", \"4 - 6 - 0\", \"early 1873\", \"one of 931932933 , or 934\"],[\"15\", \"mount forest\", \"baldwin locomotive works\", \"2 - 8 - 0\", \"february 1874\", \"3524\"],[\"16\", \"orangeville\", \"baldwin locomotive works\", \"2 - 8 - 0\", \"february 1874\", \"3525\"],[\"17\", \"sarawak\", \"baldwin locomotive works\", \"2 - 8 - 0\", \"april 1874\", \"3551\"],[\"18\", \"melancthon\", \"baldwin locomotive works\", \"2 - 8 - 0\", \"april 1874\", \"3552\"],[\"19\", \"howick\", \"baldwin locomotive works\", \"2 - 8 - 0\", \"september 1874\", \"3636\"],[\"20\", \"culross\", \"baldwin locomotive works\", \"2 - 8 - 0\", \"september 1874\", \"3640\"]]\nQuestion = Is it true that kincardine has the works number 809?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    works_numbers = get_column_by_name(table_data, \"works number\")\n    for name, works_number in zip(names, works_numbers):\n        if name.lower() == \"kincardine\":\n            answer = equal_to(works_number, \"809\")\n            break \n    return answer\n\n### END"}
{"id": "f312b1c0-2f23-4041-b63f-94ca5ad966af", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of make it or break it episodes\ntable_data = [[\"series\",\"season\",\"title\",\"directed by\",\"written by\",\"original air date\",\"us viewers (in millions)\"],[\"21\",\"1\",\"friends close , enemies closer\",\"patrick norris\",\"joanna johnson\",\"june 28 , 2010\",\"1.83\"],[\"22\",\"2\",\"all or nothing\",\"fred gerber\",\"kerry lenhart & john j sakmar\",\"july 5 , 2010\",\"1.72\"],[\"23\",\"3\",\"battle of the flexes\",\"j miller tobin\",\"amy turner\",\"july 13 , 2010\",\"1.56\"],[\"24\",\"4\",\"and the rocky goes to\",\"bethany rooney\",\"holly sorensen\",\"july 20 , 2010\",\"1.46\"],[\"25\",\"5\",\"i won't dance , don't ask me\",\"david paymer\",\"michael gans & richard register\",\"july 27 , 2010\",\"1.66\"],[\"26\",\"6\",\"party gone out of bounds\",\"felix alcala\",\"joanna johnson\",\"august 3 , 2010\",\"1.75\"],[\"27\",\"7\",\"what are you made of\",\"glenn l steelman\",\"holly sorensen\",\"august 10 , 2010\",\"1.56\"],[\"28\",\"8\",\"rock bottom\",\"chris grismer\",\"liz maccie\",\"august 17 , 2010\",\"1.30\"],[\"29\",\"9\",\"if only\",\"david paymer\",\"michael gans & richard register\",\"august 24 , 2010\",\"1.42\"],[\"30\",\"10\",\"the edge of the worlds\",\"chris grismer\",\"kerry lenhart & john j sakmar\",\"august 31 , 2010\",\"1.44\"],[\"31\",\"11\",\"the new normal\",\"michael lange\",\"holly sorensen\",\"march 28 , 2011\",\"2.06\"],[\"32\",\"12\",\"free people\",\"fred gerber\",\"joanna johnson\",\"april 4 , 2011\",\"1.69\"],[\"33\",\"13\",\"the buddy system\",\"glenn l steelman\",\"amy turner\",\"april 11 , 2011\",\"1.64\"],[\"34\",\"14\",\"life or death\",\"david paymer\",\"michael gans & richard register\",\"april 18 , 2011\",\"1.58\"],[\"35\",\"15\",\"hungary heart\",\"rod hardy\",\"kerry lenhart & john j sakmar\",\"april 25 , 2011\",\"1.64\"],[\"36\",\"16\",\"requiem for a dream\",\"michael schultz\",\"holly sorenson\",\"may 2 , 2011\",\"1.65\"],[\"37\",\"17\",\"to thine own self be true\",\"john behring\",\"liz maccie\",\"may 9 , 2011\",\"1.51\"],[\"38\",\"18\",\"dog eat dog\",\"chris grismer\",\"michael gans & richard register\",\"may 16 , 2011\",\"1.64\"],[\"39\",\"19\",\"what lies beneath\",\"david paymer\",\"joanna johnson\",\"may 23 , 2011\",\"1.49\"]]\nQuestion = Is it true that joanna johnson was the writer for the episode called what are you made of?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    writers = get_column_by_name(table_data, \"written by\")\n    answer = False\n    for title, writer in zip(titles, writers):\n        if \"what are you made of\" in title.lower():\n            answer = \"joanna johnson\" in writer.lower()\n            break\n    return answer\n\n### END"}
{"id": "ae6f3771-ce79-41b8-8deb-2c593b80029a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = colin morgan\ntable_data = [[\"year\", \"award\", \"category\", \"role\", \"result\"],[\"2008\", \"variety club showbiz awards\", \"outstanding newcomer\", \"merlin in merlin\", \"won\"],[\"2009\", \"monte carlo tv festival awards\", \"outstanding actor (drama)\", \"merlin in merlin\", \"nominated\"],[\"2010\", \"monte carlo tv festival awards\", \"outstanding actor (drama)\", \"merlin in merlin\", \"nominated\"],[\"2011\", \"monte carlo tv festival awards\", \"outstanding actor (drama)\", \"merlin in merlin\", \"nominated\"],[\"2012\", \"virgin media tv awards\", \"best actor\", \"merlin in merlin\", \"won\"],[\"2013\", \"national television award\", \"drama performance : male\", \"merlin in merlin\", \"won\"]]\nQuestion = Is it true that merlin in merlin was nominated for outstanding actor (drama) three years in a row?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    categories = get_column_by_name(table_data, \"category\")\n    results = get_column_by_name(table_data, \"result\")\n    count = 0\n    for year, category, result in zip(years, categories, results):\n        if category.lower() == \"outstanding actor (drama)\" and result.lower() == \"nominated\":\n            count += 1\n    answer = equal_to(count, 3)\n    return answer\n\n### END"}
{"id": "9dac3137-5d7f-4a8f-8b98-819cea305980", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = royal canadian mint numismatic coins (2000s)\ntable_data = [[\"year\", \"animal\", \"artist\", \"finish\", \"mintage\", \"issue price\"],[\"2007\", \"ruby - throated hummingbird\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2007\", \"red breasted nuthatch\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2008\", \"downy woodpecker\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2008\", \"northern cardinal\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2010\", \"american goldfinch\", \"arnold nogy (reverse) , susanna blunt (obverse)\", \"specimen (with selective colouring)\", \"14000\", \"24.95\"]]\nQuestion = Is it true that the artist arnold nogy has created coins since 2007?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    artists = get_column_by_name(table_data, \"artist\")\n    answer = \"arnold nogy\" in artists\n    return answer\n\n### END"}
{"id": "1f565c19-1f81-40a9-8edc-6a62bfb123d3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 3. liga\ntable_data = [[\"team\",\"outgoing manager\",\"manner of departure\",\"date of vacancy\",\"replaced by\",\"date of appointment\",\"position in table\"],[\"vfl osnabrück\",\"claus - dieter wollitz\",\"fc energie cottbus purchased rights\",\"30 june 2009\",\"karsten baumann\",\"1 july 2009\",\"pre - season\"],[\"fc carl zeiss jena\",\"marc fascher\",\"end of contract\",\"30 june 2009\",\"rené van eck\",\"1 july 2009\",\"pre - season\"],[\"fc rot - weiß erfurt\",\"henri fuchs\",\"end of tenure as caretaker\",\"30 june 2009\",\"rainer hörgl\",\"1 july 2009\",\"pre - season\"],[\"vfb stuttgart ii\",\"rainer adrion\",\"new coach of germany u - 21\",\"30 june 2009\",\"reiner geyer\",\"1 july 2009\",\"pre - season\"],[\"sv wacker burghausen\",\"ralf santelli\",\"end of contract\",\"30 june 2009\",\"jürgen press\",\"1 july 2009\",\"pre - season\"]]\nQuestion = Is it true that claus - dieter wollitz departed when fc energie cottbus purchased the rights?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    managers = get_column_by_name(table_data, \"outgoing manager\")\n    departures = get_column_by_name(table_data, \"manner of departure\")\n    answer = False\n    for manager, departure in zip(managers, departures):\n        if \"claus - dieter wollitz\" in manager.lower() and \"fc energie cottbus purchased rights\" in departure.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "7f654e8c-d7b7-403e-b107-127dd7921cf1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the howie carr show\ntable_data = [[\"calls\", \"frequency\", \"branding\", \"format\", \"timeslot\", \"group owner\"],[\"wgan\", \"560 khz\", \"news radio 560 wgan\", \"news / talk\", \"live 3p - 6p\", \"saga communications\"],[\"whyn\", \"560 khz\", \"news / talk 560 whyn\", \"news / talk\", \"live 3p - 7p\", \"clear channel communications\"],[\"wvmt\", \"620 khz\", \"news / talk 620 wvmt\", \"news / talk\", \"live 3p - 7p\", \"sison broadcasting\"],[\"wrko\", \"680 khz\", \"am 680 wrko\", \"news / talk\", \"live 3p - 7p\", \"entercom\"],[\"wcrn\", \"830 khz\", \"wcrn 830 true talk\", \"news / talk\", \"live 3p - 7p\", \"carter broadcasting\"],[\"wkbk\", \"1290 khz\", \"1290 wkbk w281au 104.1\", \"news / talk\", \"live 3p - 6p\", \"saga communications\"],[\"wegp\", \"1390 khz\", \"wegp 1390 am - the talk of the county\", \"news / talk\", \"live 3p - 6p\", \"decelles / media , inc\"],[\"wxtk\", \"95.1 mhz\", \"news radio 95 wxtk\", \"news / talk\", \"live 3p - 7p\", \"qantam of cape cod , llc\"],[\"wntk - fm\", \"99.7 mhz\", \"wntk talk radio\", \"news / talk\", \"live 3p - 6p\", \"koor communications\"],[\"wuvr\", \"1490 khz\", \"wntk talk radio\", \"news / talk\", \"live 3p - 6p\", \"koor communications\"],[\"wvom - fm / wvqm\", \"103.9 / 101.3 mhz\", \"the voice of maine\", \"news / talk\", \"live 3p - 7p\", \"blueberry broadcasting\"]]\nQuestion = Is it true that wrko is the calls for the timeslot live 3p - 7p owned by entercom?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    calls = get_column_by_name(table_data, \"calls\")\n    timeslots = get_column_by_name(table_data, \"timeslot\")\n    owners = get_column_by_name(table_data, \"group owner\")\n    answer = False\n    for call, timeslot, owner in zip(calls, timeslots, owners):\n        if call.lower() == \"wrko\" and timeslot.lower() == \"live 3p - 7p\" and owner.lower() == \"entercom\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "258bbe53-e4a0-44d0-98f3-1aa070df8189", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"class\", \"part 1\", \"part 2\", \"part 3\", \"part 4\", \"verb meaning\"],[\"1\", \"rīdan\", \"rād\", \"ridon\", \"riden\", \"to ride\"],[\"2a\", \"frēosan\", \"frēas\", \"fruron\", \"froren\", \"to freeze\"],[\"2b\", \"lūcan\", \"lēac\", \"lucon\", \"locen\", \"to lock\"],[\"3a\", \"bindan\", \"band\", \"bundon\", \"bunden\", \"to bind\"],[\"3b\", \"weorþan\", \"wearþ\", \"wurdon\", \"worden\", \"to become\"],[\"4\", \"beran\", \"bær\", \"bǣron\", \"boren\", \"to bear\"],[\"5\", \"lesan\", \"læs\", \"lǣron\", \"leren\", \"to gather\"],[\"6\", \"alan\", \"ōl\", \"ōlon\", \"alen\", \"to nourish , to grow\"],[\"7a\", \"hātan\", \"hēt\", \"hēton\", \"hāten\", \"to call , to be called\"],[\"7b\", \"hlēapan\", \"hlēop\", \"hlēppon\", \"hlēapen\", \"to leap\"],[\"7c\", \"healdan\", \"hēold\", \"hēoldon\", \"healden\", \"to hold\"],[\"7d\", \"rǣdan\", \"rēd\", \"rēdon\", \"rǣden\", \"to advise , to interpret\"]]\nQuestion = Is it true that fruron means to freeze?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    part_3 = get_column_by_name(table_data, \"part 3\")\n    verb_meaning = get_column_by_name(table_data, \"verb meaning\")\n    for part, meaning in zip(part_3, verb_meaning):\n        if part.lower() == \"fruron\":\n            answer = equal_to(meaning, \"to freeze\")\n            break \n    return answer\n\n### END"}
{"id": "11bff2cc-ca13-4ac9-a0ca-8723f8ac8b4d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = x factor (czech tv series)\ntable_data = [[\"name\",\"category\",\"eliminated\",\"date\",\"special guest\"],[\"jiří zonyga\",\"24 + years\",\"winner\",\"june 1\",\"see the next line\"],[\"ondřej ruml\",\"24 + years\",\"final night\",\"june 1\",\"5angels , olympic\"],[\"all x\",\"vocal groups\",\"james bond night\",\"may 25\",\"mta + čhave jilestar\"],[\"martina pártlová\",\"24 + years\",\"american night\",\"may 18\",\"láďa kerndl and henry lee\"],[\"kamila nývltová\",\"15 - 24 years\",\"night of revived legends\",\"may 11\",\"zombies (dancing on michael jackson 's thriller)\"],[\"za 5 dvanáct\",\"vocal groups\",\"czechoslovak night\",\"may 4\",\"miro žbirka\"],[\"david gránský\",\"15 - 24 years\",\"banana night\",\"april 27\",\"karl wolf\"],[\"anna ungrová\",\"15 - 24 years\",\"night of broken hearts\",\"april 20\",\"helena zeťová\"],[\"pavlína ďuriačová\",\"15 - 24 years\",\"tribute to karel\",\"april 13\",\"karel gott\"],[\"divoký kočky + dante\",\"vocal groups\",\"popcorn night\",\"april 6\",\"iva frühlingová\"],[\"lukáš javůrek\",\"24 + years\",\"chocolate night\",\"march 30\",\"gipsycz\"],[\"romantic\",\"vocal groups\",\"fire night\",\"march 23\",\"shayne ward\"]]\nQuestion = Is it true that david gránský was the contestant eliminated on night of broken hearts?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    eliminated = get_column_by_name(table_data, \"eliminated\")\n    for name, elimination in zip(names, eliminated):\n        if name.lower() == \"david gránský\":\n            answer = equal_to(elimination, \"night of broken hearts\")\n            break \n    return answer\n\n### END"}
{"id": "b3417ffe-6e7a-4dd7-b6c2-d99a357e9030", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1973 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"geelong\", \"14.11 (95)\", \"hawthorn\", \"14.10 (94)\", \"kardinia park\", \"13546\", \"4 august 1973\"],[\"st kilda\", \"15.20 (110)\", \"footscray\", \"12.14 (86)\", \"moorabbin oval\", \"15217\", \"4 august 1973\"],[\"richmond\", \"15.14 (104)\", \"fitzroy\", \"13.14 (92)\", \"mcg\", \"20578\", \"4 august 1973\"],[\"north melbourne\", \"13.13 (91)\", \"essendon\", \"14.10 (94)\", \"arden street oval\", \"21071\", \"4 august 1973\"],[\"collingwood\", \"19.7 (121)\", \"carlton\", \"15.16 (106)\", \"victoria park\", \"37660\", \"4 august 1973\"],[\"south melbourne\", \"12.14 (86)\", \"melbourne\", \"11.12 (78)\", \"vfl park\", \"15255\", \"4 august 1973\"]]\nQuestion = Is it true that north melbourne played against essendon at arden street oval?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    answer = False\n    for home_team, away_team, venue in zip(home_teams, away_teams, venues):\n        if home_team.lower() == \"north melbourne\" and away_team.lower() == \"essendon\" and venue.lower() == \"arden street oval\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "025b5df1-68bf-42e3-af61-6ae9e3c4c500", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = melanie oudin\ntable_data = [[\"tournament\", \"2007\", \"2010\", \"2011\", \"2012\", \"2013\"],[\"australian open\", \"-\", \"1r\", \"1r\", \"-\", \"-\"],[\"french open\", \"-\", \"2r\", \"1r\", \"-\", \"1r\"],[\"wimbledon\", \"-\", \"1r\", \"1r\", \"-\", \"1r\"],[\"us open\", \"1r\", \"2r\", \"1r\", \"1r\", \"2r\"],[\"win - loss\", \"0 - 1\", \"2 - 4\", \"0 - 4\", \"0 - 1\", \"1 - 3\"]]\nQuestion = Is it true that the result at the us open in 2007 was 1r , but in 2010 the result was 2r?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    tournaments = get_column_by_name(table_data, \"tournament\")\n    results_2007 = get_column_by_name(table_data, \"2007\")\n    results_2010 = get_column_by_name(table_data, \"2010\")\n    for tournament, result_2007, result_2010 in zip(tournaments, results_2007, results_2010):\n        if tournament.lower() == \"us open\":\n            answer = equal_to(result_2007, \"1r\") and equal_to(result_2010, \"2r\")\n            break \n    return answer\n\n### END"}
{"id": "24078c73-dd1d-42ee-9f47-fbd6818940d6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = media in fargo - moorhead\ntable_data = [[\"frequency\", \"call sign\", \"name\", \"format\", \"owner\"],[\"88.7 fm\", \"kfbn\", \"heaven 88.7\", \"christian\", \"fargo baptist church\"],[\"90.3 fm\", \"kccd\", \"minnesota public radio / npr\", \"news / talk\", \"minnesota public radio\"],[\"91.1 fm\", \"kccm\", \"minnesota public radio / npr\", \"classical\", \"minnesota public radio\"],[\"91.9 fm\", \"kdsu\", \"prairie public / npr\", \"adult album alternative\", \"north dakota state university\"],[\"92.7 fm\", \"kzdr\", \"92.7 the bone\", \"active rock\", \"mediactive\"],[\"93.7 fm\", \"wday - fm\", \"y94\", \"top 40 (chr)\", \"radio fargo - moorhead\"],[\"95.1 fm\", \"kbvb\", \"bob 95 fm\", \"country\", \"radio fargo - moorhead\"],[\"95.9 fm\", \"kxbq - lp\", \"dive 95.9\", \"alternative\", \"women 's care clinic\"],[\"96.3 fm\", \"knds - lp\", \"thunderradio radio free fargo\", \"college\", \"north dakota state university\"],[\"97.9 fm\", \"kfnw - fm\", \"life 97.9\", \"contemporary christian music\", \"northwestern college\"],[\"98.7 fm\", \"klta\", \"big 98.7\", \"adult chr\", \"triad broadcasting\"],[\"99.3 fm\", \"k257ep\", \"k - love\", \"contemporary christian music ( kklq translator )\", \"educational media foundation\"],[\"99.9 fm\", \"kvox - fm\", \"froggy 99.9\", \"country\", \"triad broadcasting\"],[\"100.7 fm\", \"kklq\", \"k - love\", \"contemporary christian music\", \"educational media foundation\"],[\"101.9 fm\", \"krwk\", \"101.9 talk fm\", \"talk\", \"radio fargo - moorhead\"],[\"103.3 fm\", \"kzcr\", \"z 103.3\", \"rock / aaa\", \"jerry papenfuss\"],[\"103.9 fm\", \"kvmi\", \"103.9 the truck\", \"country\", \"vision media incorporated\"],[\"104.1 fm\", \"kbot\", \"104.1 the wave\", \"adult contemporary\", \"leighton broadcasting\"],[\"104.7 fm\", \"kmjo\", \"104.7 popster fm\", \"adult hits\", \"radio fargo - moorhead\"],[\"105.1 fm\", \"kqwb\", \"q 105.1\", \"active rock\", \"triad broadcasting\"],[\"106.1 fm\", \"kqlx - fm\", \"thunder 106.1\", \"classic country\", \"great plains integrated marketing\"],[\"106.5 fm\", \"krjb\", \"krjb 106.5\", \"country\", \"r&j broadcasting\"],[\"106.9 fm\", \"kegk\", \"eagle 106.9\", \"classic hits\", \"great plains integrated marketing\"],[\"107.9 fm\", \"kpfx\", \"107.9 the fox\", \"classic rock\", \"triad broadcasting\"]]\nQuestion = Is it true that the call sign kdsu is owned by north dakota state university?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    call_signs = get_column_by_name(table_data, \"call sign\")\n    owners = get_column_by_name(table_data, \"owner\")\n    answer = False\n    for call_sign, owner in zip(call_signs, owners):\n        if call_sign.lower() == \"kdsu\" and owner.lower() == \"north dakota state university\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "55ba79b1-cf0a-4a7f-ad0e-b26c2460ec5f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = boise state broncos men 's basketball\ntable_data = [[\"year\", \"round\", \"opponent\", \"result\", \"bsu head coach\"],[\"1976\", \"first round\", \"unlv\", \"l 78 - 103\", \"bus conner\"],[\"1988\", \"first round\", \"michigan\", \"l 58 - 63\", \"bobby dye\"],[\"1993\", \"first round\", \"vanderbilt\", \"l 72 - 92\", \"bobby dye\"],[\"1994\", \"first round\", \"louisville\", \"l 58 - 67\", \"bobby dye\"],[\"2008\", \"first round\", \"louisville\", \"l 61 - 79\", \"greg graham\"],[\"2013\", \"first four\", \"la salle\", \"l 71 - 80\", \"leon rice\"]]\nQuestion = Is it true that the bsu head coach in 1988 was bus conner?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    coaches = get_column_by_name(table_data, \"bsu head coach\")\n    for year, coach in zip(years, coaches):\n        if year == \"1988\":\n            answer = equal_to(coach, \"bus conner\")\n            break \n    return answer\n\n### END"}
{"id": "f8336909-4dff-422d-888e-7429bd786b92", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = john mcenroe career statistics\ntable_data = [[\"outcome\", \"year\", \"championship\", \"surface\", \"partner\", \"opponents in the final\", \"score in the final\"],[\"winner\", \"2007\", \"french open\", \"clay\", \"järryd\", \"fitzgerald vilas\", \"6 - 1 , 6 - 2\"],[\"winner\", \"2008\", \"french open\", \"clay\", \"järryd\", \"bahrami leconte\", \"6 - 4 , 7 - 6 2\"],[\"winner\", \"2009\", \"french open\", \"clay\", \"järryd\", \"bahrami leconte\", \"7 - 6 2 , 6 - 1\"],[\"winner\", \"2010\", \"french open\", \"clay\", \"gómez\", \"bahrami leconte\", \"6 - 1 , 6 - 1\"],[\"runner - up\", \"2011\", \"french open\", \"clay\", \"gómez\", \"forget leconte\", \"6 - 3 , 5 - 7 ,\"]]\nQuestion = Is it true that grass was the surface in the final for the opponents with fitzerald vilas?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    surfaces = get_column_by_name(table_data, \"surface\")\n    opponents = get_column_by_name(table_data, \"opponents in the final\")\n    for surface, opponent in zip(surfaces, opponents):\n        if \"fitzgerald vilas\" in opponent.lower():\n            answer = equal_to(surface, \"grass\")\n            break \n    return answer\n\n### END"}
{"id": "c8eaa4db-455e-4566-8702-d65a636073aa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"poll source\",\"sample size\",\"date\",\"democrat\",\"republican\"],[\"survey usa\",\"520\",\"mar 14 - 16 , 2008\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"520\",\"mar 14 - 16 , 2008\",\"barack obama\",\"john mccain\"],[\"rasmussen reports\",\"500\",\"feb 17 - 18 , 2008\",\"hillary clinton\",\"john mccain\"],[\"rasmussen reports\",\"500\",\"feb 17 - 18 , 2008\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"506\",\"feb 15 - 17 , 2008\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"506\",\"feb 15 - 17 , 2008\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"hillary clinton\",\"rudy giuliani\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"hillary clinton\",\"mike huckabee\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"hillary clinton\",\"mitt romney\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"barack obama\",\"rudy giuliani\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"barack obama\",\"mike huckabee\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"barack obama\",\"mitt romney\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"hillary clinton\",\"rudy giuliani\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"hillary clinton\",\"mike huckabee\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"hillary clinton\",\"mitt romney\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"barack obama\",\"rudy giuliani\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"barack obama\",\"mike huckabee\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"barack obama\",\"mitt romney\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"hillary clinton\",\"rudy giuliani\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"hillary clinton\",\"mike huckabee\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"hillary clinton\",\"mitt romney\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"barack obama\",\"rudy giuliani\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"barack obama\",\"mike huckabee\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"barack obama\",\"mitt romney\"],[\"survey usa\",\"495\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"rudy giuliani\"],[\"survey usa\",\"472\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"mike huckabee\"],[\"survey usa\",\"468\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"464\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"ron paul\"],[\"survey usa\",\"482\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"mitt romney\"],[\"survey usa\",\"492\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"fred thompson\"]]\nQuestion = Is it true that during oct 12 - 14 , 2007 , hillary clinton was the sampled sized less than 472 as a republican?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    sample_sizes = get_column_by_name(table_data, \"sample size\")\n    dates = get_column_by_name(table_data, \"date\")\n    democrats = get_column_by_name(table_data, \"democrat\")\n    republicans = get_column_by_name(table_data, \"republican\")\n    answer = False\n    for sample_size, date, democrat, republican in zip(sample_sizes, dates, democrats, republicans):\n        if \"oct 12 - 14 , 2007\" in date.lower() and \"hillary clinton\" in democrat.lower() and \"republican\" in republican.lower():\n            answer = less_than(int(sample_size), 472)\n            break\n    return answer\n\n### END"}
{"id": "43cf9385-712e-4f7e-b56b-58c257013ba6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1926 grand prix season\ntable_data = [[\"name\", \"circuit\", \"date\", \"winning drivers\", \"winning constructor\", \"report\"],[\"indianapolis 500\", \"indianapolis\", \"31 may\", \"frank lockhart\", \"miller\", \"report\"],[\"french grand prix\", \"miramas\", \"27 june\", \"jules goux\", \"bugatti\", \"report\"],[\"san sebastián grand prix / european grand prix\", \"lasarte\", \"18 july\", \"jules goux\", \"bugatti\", \"report\"],[\"british grand prix\", \"brooklands\", \"7 august\", \"robert sénéchal louis wagner\", \"delage\", \"report\"],[\"italian grand prix\", \"monza\", \"5 september\", \"louis charavel\", \"bugatti\", \"report\"]]\nQuestion = Is it true that report shows that frank lockhart was a winning driver at the french grand prix?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_name = \"name\"\n    column_winning_drivers = \"winning drivers\"\n    names = get_column_by_name(table_data, column_name)\n    winning_drivers = get_column_by_name(table_data, column_winning_drivers)\n    answer = False\n    for name, winning_driver in zip(names, winning_drivers):\n        if \"french grand prix\" in name.lower() and \"frank lockhart\" in winning_driver.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "b95e0ea7-172f-42c7-98cf-0253df784e5b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 boston celtics season\ntable_data = [[\"game\",\"date\",\"team\",\"score\",\"high points\",\"high rebounds\",\"high assists\",\"location attendance\",\"record\"],[\"74\",\"april 1\",\"chicago\",\"106 - 92\",\"allen (22)\",\"perkins (9)\",\"rondo (10)\",\"united center 22225\",\"59 - 15\"],[\"75\",\"april 2\",\"indiana\",\"92 - 77\",\"garnett (20)\",\"garnett (11)\",\"rondo (6)\",\"td banknorth garden 18624\",\"60 - 15\"],[\"76\",\"april 5\",\"charlotte\",\"101 - 78\",\"powe (22)\",\"powe (9)\",\"rondo (5)\",\"charlotte bobcats arena 19403\",\"61 - 15\"],[\"77\",\"april 8\",\"milwaukee\",\"107 - 104 (ot)\",\"garnett (21)\",\"perkins (10)\",\"pierce (4)\",\"bradley center 15921\",\"62 - 15\"],[\"78\",\"april 9\",\"washington\",\"95 - 109\",\"pierce (28)\",\"garnett (14)\",\"pierce , rondo (7)\",\"verizon center 20173\",\"62 - 16\"],[\"79\",\"april 11\",\"milwaukee\",\"102 - 86\",\"rondo (16)\",\"garnett , posey (8)\",\"rondo (10)\",\"td banknorth garden 18624\",\"63 - 16\"],[\"80\",\"april 12\",\"atlanta\",\"99 - 89\",\"garnett (24)\",\"davis (10)\",\"cassell , rondo (5)\",\"philips arena 20098\",\"64 - 16\"],[\"81\",\"april 14\",\"new york\",\"99 - 93\",\"rondo (23)\",\"rondo (10)\",\"rondo (5)\",\"madison square garden 19763\",\"65 - 16\"],[\"82\",\"april 16\",\"new jersey\",\"105 - 94\",\"powe (27)\",\"powe (11)\",\"cassell (4)\",\"td banknorth garden 18624\",\"66 - 16\"]]\nQuestion = Is it true that in game 74 against chicago , perkins had the most rebounds (9) and allen had the most points (22)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    games = get_column_by_name(table_data, \"game\")\n    teams = get_column_by_name(table_data, \"team\")\n    high_points = get_column_by_name(table_data, \"high points\")\n    high_rebounds = get_column_by_name(table_data, \"high rebounds\")\n    for game, team, high_point, high_rebound in zip(games, teams, high_points, high_rebounds):\n        if game == \"74\" and team.lower() == \"chicago\":\n            answer = equal_to(high_point, \"allen (22)\") and equal_to(high_rebound, \"perkins (9)\")\n            break \n    return answer\n\n### END"}
{"id": "19af1b29-2575-49ea-99af-407f1751ca81", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1982 - 83 atlanta hawks season\ntable_data = [[\"round\", \"pick\", \"player\", \"nationality\", \"college\"],[\"1\", \"10\", \"keith edmonson\", \"united states\", \"purdue\"],[\"3\", \"56\", \"joe kopicki\", \"united states\", \"detroit mercy\"],[\"5\", \"102\", \"mark hall\", \"united states\", \"minnesota\"],[\"6\", \"126\", \"jay bruchak\", \"united states\", \"mount st mary 's\"],[\"7\", \"148\", \"horace wyatt\", \"united states\", \"clemson\"],[\"8\", \"172\", \"james ratiff\", \"united states\", \"howard\"],[\"9\", \"194\", \"pierre bland\", \"united states\", \"elizabeth city state\"],[\"10\", \"216\", \"ronnie mcadoo\", \"united states\", \"old dominion\"]]\nQuestion = Is it true that pierre bland had a pick smaller than 194 for one round?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef smaller(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    picks = get_column_by_name(table_data, \"pick\")\n    answer = False\n    for player, pick in zip(players, picks):\n        if player.lower() == \"pierre bland\":\n            if smaller(int(pick), 194):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "9494e22a-80ea-43de-b0cf-5bbabbb4cc23", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1969 player 's county league\ntable_data = [[\"player\", \"county\", \"balls\", \"wickets\", \"average\", \"economy\", \"bbi\", \"4wi\", \"5wi\"],[\"keith boyce\", \"essex\", \"708\", \"26\", \"12.00\", \"2.54\", \"3 / 15\", \"0\", \"0\"],[\"peter sainsbury\", \"hampshire\", \"644\", \"28\", \"13.96\", \"3.64\", \"4 / 23\", \"2\", \"0\"],[\"stuart turner\", \"essex\", \"639\", \"27\", \"14.85\", \"3.76\", \"4 / 14\", \"1\", \"0\"],[\"ken higgs\", \"lancashire\", \"673\", \"26\", \"15.23\", \"3.53\", \"4 / 22\", \"1\", \"0\"],[\"ray east\", \"essex\", \"660\", \"29\", \"15.24\", \"4.01\", \"6 / 18\", \"0\", \"2\"],[\"butch white\", \"hampshire\", \"698\", \"26\", \"17.92\", \"4.00\", \"5 / 31\", \"1\", \"1\"]]\nQuestion = Is it true that when the number of wickets if 29 , the economy is 4.01?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    wickets = get_column_by_name(table_data, \"wickets\")\n    economies = get_column_by_name(table_data, \"economy\")\n    for wicket, economy in zip(wickets, economies):\n        if wicket == \"29\":\n            answer = equal_to(economy, \"4.01\")\n            break \n    return answer\n\n### END"}
{"id": "62bd0b14-32ec-4b73-b11e-0a82f6e5f9c6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 big ten conference football season\ntable_data = [[\"bowl game\", \"date\", \"stadium\", \"city\", \"television\", \"conference matchups\", \"payout ( us )\"],[\"insight bowl\", \"december 31 , 2008\", \"sun devil stadium\", \"tempe , arizona\", \"nfl\", \"minnesota vs kansas\", \"1.2 million\"],[\"champs sports bowl\", \"december 27 , 2008\", \"citrus bowl\", \"orlando , florida\", \"espn\", \"wisconsin vs florida state\", \"2.25 million\"],[\"alamo bowl\", \"december 29 , 2008\", \"alamodome\", \"san antonio , texas\", \"espn\", \"northwestern vs missouri\", \"2.2 million\"],[\"outback bowl\", \"january 1 , 2009\", \"raymond james stadium\", \"tampa , florida\", \"espn\", \"iowa vs south carolina\", \"3 million\"],[\"capital one\", \"january 1 , 2009\", \"citrus bowl\", \"orlando , florida\", \"abc\", \"michigan state vs georgia\", \"4.25 million\"],[\"fiesta bowl\", \"january 5 , 2009\", \"university of phoenix stadium\", \"glendale , arizona\", \"fox\", \"ohio state vs texas\", \"17.5 million\"]]\nQuestion = Is it true that the alamo bowl aired on abc in orlando , florida on fox?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    bowl_games = get_column_by_name(table_data, \"bowl game\")\n    cities = get_column_by_name(table_data, \"city\")\n    televisions = get_column_by_name(table_data, \"television\")\n    answer = False\n    for bowl_game, city, television in zip(bowl_games, cities, televisions):\n        if \"alamo bowl\" in bowl_game.lower() and \"orlando , florida\" in city.lower() and \"abc\" in television.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "91372f39-1fdc-440d-bdde-86afd2a0bed9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = cultural interest fraternities and sororities\ntable_data = [[\"letters\", \"organization\", \"nickname\", \"founding date\", \"founding university\", \"type\"],[\"δλφ\", \"delta lambda phi\", \"dlp , deltas' , or lambda men\", \"1986 - 10 - 15\", \"washington , dc\", \"fraternity\"],[\"κψκ\", \"kappa psi kappa\", \"canes , k - psis , diamonds , or angels\", \"2001 - 08 - 17\", \"tallahassee , florida\", \"fraternity\"],[\"οεπ\", \"omicron epsilon pi\", \"the epps\", \"2000 - 12 - 07\", \"tallahassee , florida\", \"sorority\"],[\"γρλ\", \"gamma rho lambda 1\", \"grl\", \"2003 - 08 - 25\", \"tempe , arizona\", \"sorority\"],[\"αλζ\", \"alpha lambda zeta\", \"the regal alphas\", \"2006 - 01 - 09\", \"houston , texas and atlanta , georgia\", \"fraternity\"],[\"καλ\", \"kappa alpha lambda\", \"the kappas\", \"2003 - 10 - 19\", \"clark atlanta university\", \"sorority\"],[\"φαν\", \"phi alpha nu\", \"phi - nomenal gentlewomen\", \"2006 - 07 - 30\", \"charlotte , nc\", \"fraternity\"]]\nQuestion = Is it true that sorority is the type if the organization name is delta lambda phi?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    organizations = get_column_by_name(table_data, \"organization\")\n    types = get_column_by_name(table_data, \"type\")\n    for organization, type in zip(organizations, types):\n        if equal_to(organization, \"delta lambda phi\"):\n            answer = equal_to(type, \"sorority\")\n            break \n    return answer\n\n### END"}
{"id": "c994ba22-d375-4605-998f-a0b595495757", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = anaprof clausura 2008\ntable_data = [[\"place (posición)\", \"team (equipo)\", \"played (pj)\", \"won (pg)\", \"draw (pe)\", \"lost (pp)\", \"goals scored (gf)\", \"goals conceded (gc)\", \"+ / - (dif)\", \"points (pts)\"],[\"1\", \"árabe unido\", \"31\", \"17\", \"6\", \"8\", \"54\", \"31\", \"+ 23\", \"57\"],[\"2\", \"tauro\", \"31\", \"16\", \"8\", \"7\", \"54\", \"41\", \"+ 13\", \"56\"],[\"3\", \"san francisco\", \"31\", \"14\", \"11\", \"6\", \"54\", \"42\", \"+ 12\", \"53\"],[\"4\", \"chepo\", \"31\", \"13\", \"10\", \"8\", \"50\", \"31\", \"+ 19\", \"49\"],[\"5\", \"sporting san miguelito\", \"31\", \"11\", \"10\", \"10\", \"44\", \"40\", \"+ 4\", \"43\"],[\"6\", \"atlético veragüense\", \"31\", \"9\", \"11\", \"11\", \"40\", \"48\", \"- 8\", \"38\"],[\"7\", \"chorrillo\", \"31\", \"7\", \"13\", \"11\", \"32\", \"39\", \"- 7\", \"34\"],[\"8\", \"atlético chiriquí\", \"31\", \"9\", \"7\", \"15\", \"33\", \"64\", \"- 31\", \"34\"],[\"9\", \"alianza\", \"31\", \"9\", \"4\", \"18\", \"45\", \"51\", \"- 6\", \"31\"],[\"10\", \"plaza amador\", \"31\", \"6\", \"8\", \"17\", \"22\", \"41\", \"- 19\", \"27\"]]\nQuestion = Is it true that there is a team with 64 goals cone timeded and more than 33 goals scored?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    goals_scored = get_column_by_name(table_data, \"goals scored (gf)\")\n    goals_conceded = get_column_by_name(table_data, \"goals conceded (gc)\")\n    answer = False\n    for gs, gc in zip(goals_scored, goals_conceded):\n        if int(gc) == 64 and greater(int(gs), 33):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "7f8559d6-dcf2-4058-82d3-c971f4f654b7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of career achievements by tiger woods\ntable_data = [[\"year\", \"championship\", \"54 holes\", \"winning score\", \"margin of victory\", \"runner (s) - up\"],[\"1999\", \"wgc - nec invitational\", \"5 shot lead\", \"- 10 (66 + 71 + 62 + 71 = 270)\", \"1 stroke\", \"phil mickelson\"],[\"1999\", \"wgc - american express championship\", \"1 shot deficit\", \"- 6 (71 + 69 + 70 + 68 = 278)\", \"playoff 1\", \"miguel ángel jiménez\"],[\"2000\", \"wgc - nec invitational (2)\", \"9 shot lead\", \"- 21 (64 + 61 + 67 + 67 = 259)\", \"11 strokes\", \"justin leonard , phillip price\"],[\"2001\", \"wgc - nec invitational (3)\", \"2 shot deficit\", \"- 12 (66 + 67 + 66 + 69 = 268)\", \"playoff 2\", \"jim furyk\"],[\"2002\", \"wgc - american express championship (2)\", \"5 shot lead\", \"- 25 (65 + 65 + 67 + 66 = 263)\", \"1 stroke\", \"retief goosen\"],[\"2003\", \"wgc - accenture match play championship\", \"n / a\", \"2 & 1\", \"2 & 1\", \"david toms\"],[\"2003\", \"wgc - american express championship (3)\", \"2 shot lead\", \"- 6 (67 + 66 + 69 + 72 = 274)\", \"2 strokes\", \"stuart appleby , tim herron , vijay singh\"],[\"2004\", \"wgc - accenture match play championship (2)\", \"n / a\", \"3 & 2\", \"3 & 2\", \"davis love iii\"],[\"2005\", \"wgc - nec invitational (4)\", \"tied for lead\", \"- 6 (66 + 70 + 67 + 71 = 274)\", \"1 stroke\", \"chris dimarco\"],[\"2005\", \"wgc - american express championship (4)\", \"2 shot deficit\", \"- 10 (67 + 68 + 68 + 67 = 270)\", \"playoff 3\", \"john daly\"],[\"2006\", \"wgc - american express championship (5)\", \"6 shot lead\", \"- 23 (63 + 64 + 67 + 67 = 261)\", \"8 strokes\", \"ian poulter , adam scott\"]]\nQuestion = Is it true that wgc - american express championship (3) was the tournament where chris dimarco was tied for the lead?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    championships = get_column_by_name(table_data, \"championship\")\n    holes_54 = get_column_by_name(table_data, \"54 holes\")\n    runners_up = get_column_by_name(table_data, \"runner (s) - up\")\n    answer = False\n    for championship, hole_54, runner_up in zip(championships, holes_54, runners_up):\n        if \"wgc - american express championship (3)\" in championship.lower() and \"chris dimarco\" in runner_up.lower():\n            if \"tied for lead\" in hole_54.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "2040b6d6-ddf2-4431-8671-e9792f077b85", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1974 formula one season\ntable_data = [[\"race\",\"circuit\",\"date\",\"pole position\",\"fastest lap\",\"winning driver\",\"constructor\",\"tyre\",\"report\"],[\"argentine grand prix\",\"buenos aires\",\"13 january\",\"ronnie peterson\",\"clay regazzoni\",\"denny hulme\",\"mclaren - ford\",\"g\",\"report\"],[\"brazilian grand prix\",\"interlagos\",\"27 january\",\"emerson fittipaldi\",\"clay regazzoni\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"south african grand prix\",\"kyalami\",\"30 march\",\"niki lauda\",\"carlos reutemann\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"],[\"spanish grand prix\",\"jarama\",\"28 april\",\"niki lauda\",\"niki lauda\",\"niki lauda\",\"ferrari\",\"g\",\"report\"],[\"belgian grand prix\",\"nivelles - baulers\",\"12 may\",\"clay regazzoni\",\"denny hulme\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"monaco grand prix\",\"monaco\",\"26 may\",\"niki lauda\",\"ronnie peterson\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"swedish grand prix\",\"anderstorp\",\"9 june\",\"patrick depailler\",\"patrick depailler\",\"jody scheckter\",\"tyrrell - ford\",\"g\",\"report\"],[\"dutch grand prix\",\"zandvoort\",\"23 june\",\"niki lauda\",\"ronnie peterson\",\"niki lauda\",\"ferrari\",\"g\",\"report\"],[\"french grand prix\",\"dijon - prenois\",\"7 july\",\"niki lauda\",\"jody scheckter\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"british grand prix\",\"brands hatch\",\"20 july\",\"niki lauda\",\"niki lauda\",\"jody scheckter\",\"tyrrell - ford\",\"g\",\"report\"],[\"german grand prix\",\"nürburgring\",\"4 august\",\"niki lauda\",\"jody scheckter\",\"clay regazzoni\",\"ferrari\",\"g\",\"report\"],[\"austrian grand prix\",\"österreichring\",\"18 august\",\"niki lauda\",\"clay regazzoni\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"],[\"italian grand prix\",\"monza\",\"8 september\",\"niki lauda\",\"carlos pace\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"canadian grand prix\",\"mosport park\",\"22 september\",\"emerson fittipaldi\",\"niki lauda\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"united states grand prix\",\"watkins glen\",\"6 october\",\"carlos reutemann\",\"carlos pace\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"]]\nQuestion = Is it true that the date for circuit interlagos is 8 september?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    circuits = get_column_by_name(table_data, \"circuit\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for circuit, date in zip(circuits, dates):\n        if \"interlagos\" in circuit.lower():\n            if \"8 september\" in date.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "0db7a9b5-26c6-489d-bae7-920db9ce9f6c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1969 player 's county league\ntable_data = [[\"player\", \"county\", \"balls\", \"wickets\", \"average\", \"economy\", \"bbi\", \"4wi\", \"5wi\"],[\"keith boyce\", \"essex\", \"708\", \"26\", \"12.00\", \"2.54\", \"3 / 15\", \"0\", \"0\"],[\"peter sainsbury\", \"hampshire\", \"644\", \"28\", \"13.96\", \"3.64\", \"4 / 23\", \"2\", \"0\"],[\"stuart turner\", \"essex\", \"639\", \"27\", \"14.85\", \"3.76\", \"4 / 14\", \"1\", \"0\"],[\"ken higgs\", \"lancashire\", \"673\", \"26\", \"15.23\", \"3.53\", \"4 / 22\", \"1\", \"0\"],[\"ray east\", \"essex\", \"660\", \"29\", \"15.24\", \"4.01\", \"6 / 18\", \"0\", \"2\"],[\"butch white\", \"hampshire\", \"698\", \"26\", \"17.92\", \"4.00\", \"5 / 31\", \"1\", \"1\"]]\nQuestion = Is it true that stuart turner had 27 wickets and a 14.85 average?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    wickets = get_column_by_name(table_data, \"wickets\")\n    averages = get_column_by_name(table_data, \"average\")\n    for player, wicket, average in zip(players, wickets, averages):\n        if player.lower() == \"stuart turner\":\n            answer = equal_to(wicket, \"27\") and equal_to(average, \"14.85\")\n            break \n    return answer\n\n### END"}
{"id": "090da937-8f12-43f4-84a6-cca44bc0e19c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mercedes - benz r170\ntable_data = [[\"model\", \"years\", \"engine\", \"power\", \"0 - 100 km / h (62 mph)\", \"top speed\"],[\"slk200\", \"1997 - 2004\", \"2l m111.946 l4\", \"102 kw (136hp)\", \"9.3 seconds\", \"208 km / h (129 mph)\"],[\"slk200k\", \"1997 - 2000\", \"2l m111.943 l4\", \"143 kw (192hp)\", \"6.8 seconds\", \"236 km / h (147 mph)\"],[\"slk200k\", \"2001 - 2004\", \"2l m111.958 l4\", \"122 kw (163hp)\", \"7.4 seconds\", \"223 km / h (138 mph)\"],[\"slk230k\", \"1996 - 2000\", \"2.3l m111.973 l4\", \"144 kw (193hp)\", \"6.9 seconds\", \"231 km / h (143 mph)\"],[\"slk230k\", \"2001 - 2004\", \"2.3l m111.983 l4\", \"147 kw (197hp)\", \"6.8 seconds\", \"240 km / h (148 mph)\"],[\"slk320\", \"2001 - 2004\", \"3.2l m112.947 v6\", \"162 kw (218hp)\", \"6.5 seconds\", \"250 / 276 km / h (155 / 171 mph)\"],[\"slk32 amg\", \"2001 - 2004\", \"3.2l m112.960 v6\", \"264 kw (354hp)\", \"5.2 seconds\", \"250 / 280 / 310 km / h (155 / 174 / 193 mph)\"]]\nQuestion = Is it true that the slk200k model , made between 1997 - 2000 , can reach a top speed of 236 km / hr and can go from 0 to 100 km / hr in 6.8 seconds?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    models = get_column_by_name(table_data, \"model\")\n    years = get_column_by_name(table_data, \"years\")\n    speeds = get_column_by_name(table_data, \"0 - 100 km / h (62 mph)\")\n    top_speeds = get_column_by_name(table_data, \"top speed\")\n    for model, year, speed, top_speed in zip(models, years, speeds, top_speeds):\n        if model.lower() == \"slk200k\" and year == \"1997 - 2000\":\n            answer = equal_to(speed, \"6.8 seconds\") and equal_to(top_speed, \"236 km / h (147 mph)\")\n            break \n    return answer\n\n### END"}
{"id": "ad99bf5b-3c22-46a9-9627-357ad9334d56", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of quadrangles on mercury\ntable_data = [[\"name\",\"number\",\"namesake\",\"albedo feature name\",\"area\",\"current map\"],[\"borealis\",\"h - 1\",\"borealis planitia\",\"borea\",\"north pole to 67 degree latitude\",\"h - 1\"],[\"victoria\",\"h - 2\",\"victoria rupes\",\"aurora\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 2\"],[\"shakespeare\",\"h - 3\",\"shakespeare crater\",\"caduceata\",\"90 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 3\"],[\"raditladi\",\"h - 4\",\"raditladi basin\",\"liguria\",\"270 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 4\"],[\"hokusai\",\"h - 5\",\"hokusai crater\",\"apollonia\",\"360 to 270 degree longitude , 21 to 66 degree latitude\",\"h - 5\"],[\"kuiper\",\"h - 6\",\"kuiper crater\",\"tricrena\",\"0 to 72 degree longitude , 22 to 22 degree latitude\",\"h - 6\"],[\"beethoven\",\"h - 7\",\"beethoven crater\",\"solitudo lycaonis\",\"72 to 144 degree longitude , 22 to 22 degree latitude\",\"h - 7\"],[\"tolstoj\",\"h - 8\",\"tolstoj crater\",\"phaethontias\",\"144 to 216 degree longitude , 22 to 22 degree latitude\",\"h - 8\"],[\"eminescu\",\"h - 9\",\"eminescu crater\",\"solitudo criophori\",\"216 to 288 degree longitude , 22 to 22 degree latitude\",\"h - 9\"],[\"derain\",\"h - 10\",\"derain crater\",\"pieria\",\"288 to 360 degree longitude , - 22 to 22 degree latitude\",\"h - 10\"],[\"discovery\",\"h - 11\",\"discovery rupes\",\"solitudo hermae trismegisti\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 11\"],[\"michelangelo\",\"h - 12\",\"michelangelo crater\",\"solitudo promethei\",\"90 to 180 degree longitude , 21 to - 66 degree latitude\",\"h - 12\"],[\"neruda\",\"h - 13\",\"neruda crater\",\"solitudo persephones\",\"180 to 270 degree longitude , 21 to - 66 degree latitude\",\"h - 13\"],[\"debussy\",\"h - 14\",\"debussy crater\",\"cyllene\",\"270 to 360 degree longitude , 21 to 66 degree latitude\",\"h - 14\"],[\"bach\",\"h - 15\",\"bach crater\",\"australia\",\"south pole to 67 degree latitude\",\"h - 15\"]]\nQuestion = Is it true that the current map designation for beethoven is h - 7?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    current_maps = get_column_by_name(table_data, \"current map\")\n    for name, current_map in zip(names, current_maps):\n        if name.lower() == \"beethoven\":\n            answer = equal_to(current_map, \"h - 7\")\n            break \n    return answer\n\n### END"}
{"id": "73b8ffe7-c53d-4f11-ac64-f1584be1390b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = yrjö väisälä\ntable_data = [[\"1391 carelia\", \"1398 donnera\", \"1405 sibelius\", \"1406 komppa\", \"1407 lindelöf\"],[\"1421 esperanto\", \"1424 sundmania\", \"1446 sillanpää\", \"1447 utra\", \"1448 lindbladia\"],[\"1449 virtanen\", \"1450 raimonda\", \"1451 granö\", \"1453 fennia\", \"1454 kalevala\"],[\"1460 haltia\", \"1462 zamenhof\", \"1463 nordenmarkia\", \"1471 tornio\", \"1472 muonio\"],[\"1473 ounas\", \"1477 bonsdorffia\", \"1478 vihuri\", \"1479 inkeri\", \"1480 aunus\"],[\"1483 hakoila\", \"1488 aura\", \"1492 oppolzer\", \"1494 savo\", \"1495 helsinki\"],[\"1496 turku\", \"1497 tampere\", \"1498 lahti\", \"1499 pori\", \"1500 jyväskylä\"],[\"1503 kuopio\", \"1518 rovaniemi\", \"1519 kajaani\", \"1520 imatra\", \"1521 seinäjoki\"],[\"1523 pieksämäki\", \"1524 joensuu\", \"1525 savonlinna\", \"1526 mikkeli\", \"1527 malmquista\"],[\"1529 oterma\", \"1530 rantaseppä\", \"1532 inari\", \"1533 saimaa\", \"1534 näsi\"],[\"1535 päijänne\", \"1536 pielinen\", \"1541 estonia\", \"1542 schalén\", \"1548 palomaa\"],[\"1549 mikko\", \"1551 argelander\", \"1552 bessel\", \"1567 alikoski\", \"1631 kopff\"],[\"1646 rosseland\", \"1656 suomi\", \"1659 punkaharju\", \"1677 tycho brahe\", \"1678 hveen\"],[\"1696 nurmela\", \"1699 honkasalo\", \"1723 klemola\", \"1740 paavo nurmi\", \"1757 porvoo\"],[\"1883 rimito\", \"1928 summa\", \"1929 kollaa\", \"1947 iso - heikkilä\", \"2020 ukko\"],[\"2067 aksnes\", \"2091 sampo\", \"2096 väinö\", \"2194 arpola\", \"2204 lyyli\"],[\"2243 lönnrot\", \"2258 viipuri\", \"2292 seili\", \"2299 hanko\", \"2333 porthan\"],[\"2379 heiskanen\", \"2397 lappajärvi\", \"2454 olaus magnus\", \"2464 nordenskiöld\", \"2479 sodankylä\"],[\"2486 metsähovi\", \"2502 nummela\", \"2512 tavastia\", \"2535 hämeenlinna\", \"2638 gadolin\"],[\"2639 planman\", \"2678 aavasaksa\", \"2679 kittisvaara\", \"2690 ristiina\", \"2715 mielikki\"],[\"2716 tuulikki\", \"2733 hamina\", \"2737 kotka\", \"2750 loviisa\", \"2802 weisell\"],[\"2820 iisalmi\", \"2826 ahti\", \"2885 palva\", \"2898 neuvo\", \"2962 otto\"],[\"2972 niilo\", \"3037 alku\", \"3099 hergenrother\", \"3166 klondike\", \"3212 agricola\"],[\"3223 forsius\", \"3272 tillandz\", \"3281 maupertuis\", \"3522 becker\", \"3606 pohjola\"],[\"3897 louhi\", \"4181 kivi\", \"4266 waltari\", \"4512 sinuhe\", \"5073 junttura\"]]\nQuestion = Is it true that the 2750 loviisa hit the 1406 komppa of asteroid in 1405 sibelius at 2737 kotka?\n\n### RESPONSE:\ndef solution(table_data):\n    return False\n\n### END"}
{"id": "a679d254-6b9e-400f-8654-26d3fe1cb9ef", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = boise state broncos men 's basketball\ntable_data = [[\"year\", \"round\", \"opponent\", \"result\", \"bsu head coach\"],[\"1976\", \"first round\", \"unlv\", \"l 78 - 103\", \"bus conner\"],[\"1988\", \"first round\", \"michigan\", \"l 58 - 63\", \"bobby dye\"],[\"1993\", \"first round\", \"vanderbilt\", \"l 72 - 92\", \"bobby dye\"],[\"1994\", \"first round\", \"louisville\", \"l 58 - 67\", \"bobby dye\"],[\"2008\", \"first round\", \"louisville\", \"l 61 - 79\", \"greg graham\"],[\"2013\", \"first four\", \"la salle\", \"l 71 - 80\", \"leon rice\"]]\nQuestion = Is it true that greg graham was the bsu head coach of the tournament in 2008 with louisville as the opponent?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    coaches = get_column_by_name(table_data, \"bsu head coach\")\n    for year, opponent, coach in zip(years, opponents, coaches):\n        if year == \"2008\" and opponent.lower() == \"louisville\" and coach.lower() == \"greg graham\":\n            return True\n    return False\n\n### END"}
{"id": "2354ff55-2b85-42c9-b271-a90366facf65", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 honda indy 300\ntable_data = [[\"driver\", \"team\", \"laps\", \"time / retired\", \"grid\"],[\"cristiano da matta\", \"newman - haas racing\", \"65\", \"1:51:47.260\", \"3\"],[\"michael andretti\", \"team green\", \"65\", \"+ 5.8 secs\", \"6\"],[\"alex tagliani\", \"forsythe racing\", \"65\", \"+ 7.5 secs\", \"7\"],[\"gil de ferran\", \"team penske\", \"65\", \"+ 20.9 secs\", \"2\"],[\"kenny brack\", \"team rahal\", \"65\", \"+ 22.6 secs\", \"13\"],[\"jimmy vasser\", \"patrick racing\", \"65\", \"+ 24.7 secs\", \"10\"],[\"michel jourdain , jr\", \"bettenhausen racing\", \"65\", \"+ 39.5 secs\", \"16\"],[\"christian fittipaldi\", \"newman - haas racing\", \"65\", \"+ 40.5 secs\", \"15\"],[\"max papis\", \"team rahal\", \"65\", \"+ 42.6 secs\", \"14\"],[\"memo gidley\", \"chip ganassi racing\", \"65\", \"+ 42.9 secs\", \"23\"],[\"patrick carpentier\", \"forsythe racing\", \"65\", \"+ 46.7 secs\", \"9\"],[\"shinji nakano\", \"fernández racing\", \"65\", \"+ 46.9 secs\", \"18\"],[\"alex barron\", \"arciero - blair racing\", \"65\", \"+ 46.9 secs\", \"26\"],[\"paul tracy\", \"team green\", \"65\", \"+ 62.6 secs\", \"4\"],[\"scott dixon\", \"pacwest racing\", \"65\", \"+ 72.0 secs\", \"8\"],[\"tora takagi\", \"walker racing\", \"65\", \"+ 81.8 secs\", \"20\"],[\"tony kanaan\", \"mo nunn racing\", \"65\", \"+ 82.0 secs\", \"3\"],[\"bryan herta\", \"forsythe racing\", \"65\", \"+ 82.4 secs\", \"22\"],[\"adrián fernández\", \"fernández racing\", \"65\", \"+ 100.3 secs\", \"17\"],[\"hélio castroneves\", \"team penske\", \"64\", \"+ 1 lap\", \"11\"],[\"bruno junqueira\", \"chip ganassi racing\", \"56\", \"contact\", \"21\"],[\"roberto moreno\", \"patrick racing\", \"54\", \"mechanical\", \"1\"],[\"dario franchitti\", \"team green\", \"35\", \"mechanical\", \"5\"],[\"maurício gugelmin\", \"pacwest racing\", \"34\", \"mechanical\", \"25\"],[\"oriol servià\", \"sigma autosport\", \"10\", \"mechanical\", \"12\"],[\"casey mears\", \"mo nunn racing\", \"0\", \"contact\", \"24\"]]\nQuestion = Is it true that cristiano da matta of newman - haas racing has racing time of 1:51:47.260?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    teams = get_column_by_name(table_data, \"team\")\n    times = get_column_by_name(table_data, \"time / retired\")\n    for driver, team, time in zip(drivers, teams, times):\n        if driver.lower() == \"cristiano da matta\" and team.lower() == \"newman - haas racing\":\n            answer = equal_to(time, \"1:51:47.260\")\n            break \n    return answer\n\n### END"}
{"id": "ebe70cdd-4089-4ee8-87a4-a6d18ea396aa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1977 - 78 philadelphia flyers season\ntable_data = [[\"game\", \"october\", \"opponent\", \"score\", \"record\", \"points\"],[\"1\", \"13\", \"chicago black hawks\", \"5 - 1\", \"1 - 0 - 0\", \"2\"],[\"2\", \"15\", \"pittsburgh penguins\", \"8 - 2\", \"2 - 0 - 0\", \"4\"],[\"3\", \"16\", \"st louis blues\", \"7 - 0\", \"3 - 0 - 0\", \"6\"],[\"4\", \"20\", \"pittsburgh penguins\", \"11 - 0\", \"4 - 0 - 0\", \"8\"],[\"5\", \"22\", \"toronto maple leafs\", \"1 - 6\", \"4 - 1 - 0\", \"8\"],[\"6\", \"23\", \"toronto maple leafs\", \"3 - 6\", \"4 - 2 - 0\", \"8\"],[\"7\", \"26\", \"chicago black hawks\", \"2 - 2\", \"4 - 2 - 1\", \"9\"],[\"8\", \"29\", \"st louis blues\", \"7 - 3\", \"5 - 2 - 1\", \"11\"]]\nQuestion = Is it true that st louis blues was the opponent on october 29?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"october\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    answer = False\n    for date, opponent in zip(dates, opponents):\n        if date == \"29\" and opponent.lower() == \"st louis blues\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "a20aa87f-cdd3-4897-b0e7-f13a9913c6da", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 british grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"kimi räikkönen\", \"ferrari\", \"59\", \"1:21:43.074\", \"2\"],[\"fernando alonso\", \"mclaren - mercedes\", \"59\", \"+ 2.459\", \"3\"],[\"lewis hamilton\", \"mclaren - mercedes\", \"59\", \"+ 39.373\", \"1\"],[\"robert kubica\", \"bmw sauber\", \"59\", \"+ 53.319\", \"5\"],[\"felipe massa\", \"ferrari\", \"59\", \"+ 54.063\", \"4\"],[\"nick heidfeld\", \"bmw sauber\", \"59\", \"+ 56.336\", \"9\"],[\"heikki kovalainen\", \"renault\", \"58\", \"+ 1 lap\", \"7\"],[\"giancarlo fisichella\", \"renault\", \"58\", \"+ 1 lap\", \"8\"],[\"rubens barrichello\", \"honda\", \"58\", \"+ 1 lap\", \"14\"],[\"jenson button\", \"honda\", \"58\", \"+ 1 lap\", \"18\"],[\"david coulthard\", \"red bull - renault\", \"58\", \"+ 1 lap\", \"12\"],[\"nico rosberg\", \"williams - toyota\", \"58\", \"+ 1 lap\", \"17\"],[\"alexander wurz\", \"williams - toyota\", \"58\", \"+ 1 lap\", \"13\"],[\"takuma sato\", \"super aguri - honda\", \"57\", \"+ 2 laps\", \"21\"],[\"christijan albers\", \"spyker - ferrari\", \"57\", \"+ 2 laps\", \"22\"],[\"vitantonio liuzzi\", \"toro rosso - ferrari\", \"53\", \"gearbox\", \"16\"],[\"jarno trulli\", \"toyota\", \"43\", \"handling\", \"10\"],[\"anthony davidson\", \"super aguri - honda\", \"35\", \"mechanical\", \"19\"],[\"scott speed\", \"toro rosso - ferrari\", \"29\", \"collision\", \"15\"],[\"ralf schumacher\", \"toyota\", \"22\", \"wheel\", \"6\"],[\"adrian sutil\", \"spyker - ferrari\", \"16\", \"engine\", \"20\"],[\"mark webber\", \"red bull - renault\", \"8\", \"hydraulics\", \"11\"]]\nQuestion = Is it true that the most number of laps completed is 59 and the lowest number of laps completed is 29?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef get_max_value(lst):\n    return max(lst)\n\ndef get_min_value(lst):\n    return min(lst)\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    laps = get_column_by_name(table_data, \"laps\")\n    laps = [int(lap) for lap in laps]\n    max_laps = get_max_value(laps)\n    min_laps = get_min_value(laps)\n    answer = equal_to(max_laps, 59) and equal_to(min_laps, 29)\n    return answer\n\n### END"}
{"id": "252abfde-95cf-4d4c-895d-46ad422584e4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2005 cfl draft\ntable_data = [[\"pick\", \"cfl team\", \"player\", \"position\", \"college\"],[\"45\", \"calgary stampeders\", \"brett ralph\", \"wr\", \"alberta\"],[\"46\", \"ottawa renegades\", \"lenard semajuste\", \"fb\", \"adams state\"],[\"47\", \"winnipeg blue bombers\", \"ryan bisson\", \"ol\", \"northwood\"],[\"48\", \"saskatchewan roughriders\", \"ryan gottselig\", \"dl\", \"saskatchewan\"],[\"49\", \"montreal alouettes (via edmonton)\", \"adam eckert\", \"wr\", \"dickinson state\"],[\"50\", \"hamilton tiger - cats\", \"andrew paopao\", \"dl\", \"san jose state\"],[\"51\", \"montreal alouettes\", \"olivier manigat\", \"ol\", \"columbia\"],[\"52\", \"bc lions\", \"karl ortmanns\", \"ol\", \"acadia\"],[\"53\", \"toronto argonauts\", \"ian forde\", \"rb\", \"waterloo\"]]\nQuestion = Is it true that rb was the position played by pick number 53?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    picks = get_column_by_name(table_data, \"pick\")\n    positions = get_column_by_name(table_data, \"position\")\n    for pick, position in zip(picks, positions):\n        if pick == \"53\":\n            answer = equal_to(position, \"rb\")\n            break \n    return answer\n\n### END"}
{"id": "77c367e0-53f1-4260-9422-1049d03e3688", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 3. liga\ntable_data = [[\"team\",\"outgoing manager\",\"manner of departure\",\"date of vacancy\",\"replaced by\",\"date of appointment\",\"position in table\"],[\"vfl osnabrück\",\"claus - dieter wollitz\",\"fc energie cottbus purchased rights\",\"30 june 2009\",\"karsten baumann\",\"1 july 2009\",\"pre - season\"],[\"fc carl zeiss jena\",\"marc fascher\",\"end of contract\",\"30 june 2009\",\"rené van eck\",\"1 july 2009\",\"pre - season\"],[\"fc rot - weiß erfurt\",\"henri fuchs\",\"end of tenure as caretaker\",\"30 june 2009\",\"rainer hörgl\",\"1 july 2009\",\"pre - season\"],[\"vfb stuttgart ii\",\"rainer adrion\",\"new coach of germany u - 21\",\"30 june 2009\",\"reiner geyer\",\"1 july 2009\",\"pre - season\"],[\"sv wacker burghausen\",\"ralf santelli\",\"end of contract\",\"30 june 2009\",\"jürgen press\",\"1 july 2009\",\"pre - season\"]]\nQuestion = Is it true that for fc rot - weiß erfurt , the outgoing manager is henri fuchs due to the end of tenure as caretaker?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    outgoing_managers = get_column_by_name(table_data, \"outgoing manager\")\n    manners_of_departure = get_column_by_name(table_data, \"manner of departure\")\n    for team, outgoing_manager, manner_of_departure in zip(teams, outgoing_managers, manners_of_departure):\n        if equal_to(team, \"fc rot - weiß erfurt\") and equal_to(outgoing_manager, \"henri fuchs\") and equal_to(manner_of_departure, \"end of tenure as caretaker\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "7d473d9b-c42d-4117-aaf6-c7fb66ae2330", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1975 argentine grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"emerson fittipaldi\", \"mclaren - ford\", \"53\", \"1:39:26.29\", \"5\"],[\"james hunt\", \"hesketh - ford\", \"53\", \"+ 5.91\", \"6\"],[\"carlos reutemann\", \"brabham - ford\", \"53\", \"+ 17.06\", \"3\"],[\"clay regazzoni\", \"ferrari\", \"53\", \"+ 35.79\", \"7\"],[\"patrick depailler\", \"tyrrell - ford\", \"53\", \"+ 54.25\", \"8\"],[\"niki lauda\", \"ferrari\", \"53\", \"+ 1:19.65\", \"4\"],[\"mark donohue\", \"penske - ford\", \"52\", \"+ 1 lap\", \"16\"],[\"jacky ickx\", \"lotus - ford\", \"52\", \"+ 1 lap\", \"18\"],[\"vittorio brambilla\", \"march - ford\", \"52\", \"+ 1 lap\", \"12\"],[\"graham hill\", \"lola - ford\", \"52\", \"+ 1 lap\", \"21\"],[\"jody scheckter\", \"tyrrell - ford\", \"52\", \"+ 1 lap\", \"9\"],[\"tom pryce\", \"shadow - ford\", \"51\", \"transmission\", \"14\"],[\"rolf stommelen\", \"lola - ford\", \"51\", \"+ 2 laps\", \"19\"],[\"jochen mass\", \"mclaren - ford\", \"50\", \"+ 3 laps\", \"13\"],[\"carlos pace\", \"brabham - ford\", \"46\", \"engine\", \"2\"],[\"arturo merzario\", \"williams - ford\", \"44\", \"not classified\", \"20\"],[\"mario andretti\", \"parnelli - ford\", \"27\", \"transmission\", \"10\"],[\"mike wilds\", \"brm\", \"24\", \"engine\", \"22\"],[\"ronnie peterson\", \"lotus - ford\", \"15\", \"engine\", \"11\"],[\"jacques laffite\", \"williams - ford\", \"15\", \"gearbox\", \"17\"],[\"wilson fittipaldi\", \"fittipaldi - ford\", \"12\", \"accident\", \"23\"],[\"john watson\", \"surtees - ford\", \"6\", \"disqualified\", \"15\"],[\"jean - pierre jarier\", \"shadow - ford\", \"0\", \"transmission\", \"1\"]]\nQuestion = Is it true that surtees - ford is the constructor for the grid less than 20 and laps of 6?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    constructors = get_column_by_name(table_data, \"constructor\")\n    grids = get_column_by_name(table_data, \"grid\")\n    laps = get_column_by_name(table_data, \"laps\")\n    for constructor, grid, lap in zip(constructors, grids, laps):\n        if constructor.lower() == \"surtees - ford\" and equal_to(int(lap), 6) and less_than(int(grid), 20):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "2c23197f-6197-44ee-88fc-f702e710f3ba", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"singular abbreviation\", \"singular word\", \"plural abbreviation\", \"plural word\", \"discipline\"],[\"d\", \"didot\", \"dd\", \"didots\", \"typography\"],[\"f\", \"following line or page\", \"ff\", \"following lines or pages\", \"notes\"],[\"f\", \"folio\", \"ff\", \"folios\", \"literature\"],[\"h\", \"hand\", \"hh\", \"hands\", \"horse height\"],[\"l\", \"line\", \"ll\", \"lines\", \"notes\"],[\"ms\", \"manuscript\", \"mss\", \"manuscripts\", \"notes\"],[\"op\", \"opus\", \"opp\", \"opera\", \"notes\"],[\"p\", \"page\", \"pp\", \"pages\", \"notes\"],[\"q\", \"quarto\", \"qq\", \"quartos\", \"literature\"],[\"s (or §)\", \"section\", \"ss (or §§)\", \"sections\", \"notes\"],[\"v\", \"volume\", \"vv\", \"volumes\", \"notes\"]]\nQuestion = Is it true that the plural word of following lines or pages has the abbreviation , ff?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    plural_words = get_column_by_name(table_data, \"plural word\")\n    plural_abbreviations = get_column_by_name(table_data, \"plural abbreviation\")\n    for plural_word, plural_abbreviation in zip(plural_words, plural_abbreviations):\n        if plural_word.lower() == \"following lines or pages\":\n            answer = equal_to(plural_abbreviation, \"ff\")\n            break \n    return answer\n\n### END"}
{"id": "59aa8fb5-5eea-4c3d-9576-581337c943ce", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mark donohue\ntable_data = [[\"year\", \"chassis\", \"engine\", \"start\", \"finish\", \"entrant\"],[\"1969\", \"lola\", \"offy\", \"4th\", \"7th\", \"penske\"],[\"1970\", \"lola\", \"ford\", \"5th\", \"2nd\", \"penske\"],[\"1971\", \"mclaren\", \"offy\", \"2nd\", \"25th\", \"penske\"],[\"1972\", \"mclaren\", \"offy\", \"3rd\", \"1st\", \"penske\"],[\"1973\", \"eagle\", \"offy\", \"3rd\", \"15th\", \"penske\"]]\nQuestion = Is it true that mclaren was the chassis for the offy engine after 1972?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    chassis = get_column_by_name(table_data, \"chassis\")\n    engines = get_column_by_name(table_data, \"engine\")\n    answer = False\n    for year, chassi, engine in zip(years, chassis, engines):\n        if int(year) > 1972 and engine.lower() == \"offy\":\n            if chassi.lower() == \"mclaren\":\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "8de72302-b360-4527-b9a2-a718a4d77848", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 chelsea f.c. season\ntable_data = [[\"competition\",\"current position / round\",\"final position / round\",\"first match\",\"last match\"],[\"fa community shield\",\"-\",\"runner - up\",\"5 aug 2007\",\"5 aug 2007\"],[\"premier league\",\"-\",\"runner - up\",\"12 aug 2007\",\"11 may 2008\"],[\"uefa champions league\",\"-\",\"runner - up\",\"18 sep 2007\",\"21 may 2008\"],[\"football league cup\",\"-\",\"runner - up\",\"24 sep 2007\",\"24 feb 2008\"],[\"fa cup\",\"-\",\"quarter - finals\",\"5 jan 2008\",\"3 mar 2008\"]]\nQuestion = Is it true that runner - up was the final position for fa community shield?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    competitions = get_column_by_name(table_data, \"competition\")\n    final_positions = get_column_by_name(table_data, \"final position / round\")\n    for competition, final_position in zip(competitions, final_positions):\n        if competition.lower() == \"fa community shield\":\n            answer = equal_to(final_position, \"runner - up\")\n            break \n    return answer\n\n### END"}
{"id": "0fee5a02-90cb-4bfc-aa00-2ba609a0dbb0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = media in fargo - moorhead\ntable_data = [[\"frequency\", \"call sign\", \"name\", \"format\", \"owner\"],[\"88.7 fm\", \"kfbn\", \"heaven 88.7\", \"christian\", \"fargo baptist church\"],[\"90.3 fm\", \"kccd\", \"minnesota public radio / npr\", \"news / talk\", \"minnesota public radio\"],[\"91.1 fm\", \"kccm\", \"minnesota public radio / npr\", \"classical\", \"minnesota public radio\"],[\"91.9 fm\", \"kdsu\", \"prairie public / npr\", \"adult album alternative\", \"north dakota state university\"],[\"92.7 fm\", \"kzdr\", \"92.7 the bone\", \"active rock\", \"mediactive\"],[\"93.7 fm\", \"wday - fm\", \"y94\", \"top 40 (chr)\", \"radio fargo - moorhead\"],[\"95.1 fm\", \"kbvb\", \"bob 95 fm\", \"country\", \"radio fargo - moorhead\"],[\"95.9 fm\", \"kxbq - lp\", \"dive 95.9\", \"alternative\", \"women 's care clinic\"],[\"96.3 fm\", \"knds - lp\", \"thunderradio radio free fargo\", \"college\", \"north dakota state university\"],[\"97.9 fm\", \"kfnw - fm\", \"life 97.9\", \"contemporary christian music\", \"northwestern college\"],[\"98.7 fm\", \"klta\", \"big 98.7\", \"adult chr\", \"triad broadcasting\"],[\"99.3 fm\", \"k257ep\", \"k - love\", \"contemporary christian music ( kklq translator )\", \"educational media foundation\"],[\"99.9 fm\", \"kvox - fm\", \"froggy 99.9\", \"country\", \"triad broadcasting\"],[\"100.7 fm\", \"kklq\", \"k - love\", \"contemporary christian music\", \"educational media foundation\"],[\"101.9 fm\", \"krwk\", \"101.9 talk fm\", \"talk\", \"radio fargo - moorhead\"],[\"103.3 fm\", \"kzcr\", \"z 103.3\", \"rock / aaa\", \"jerry papenfuss\"],[\"103.9 fm\", \"kvmi\", \"103.9 the truck\", \"country\", \"vision media incorporated\"],[\"104.1 fm\", \"kbot\", \"104.1 the wave\", \"adult contemporary\", \"leighton broadcasting\"],[\"104.7 fm\", \"kmjo\", \"104.7 popster fm\", \"adult hits\", \"radio fargo - moorhead\"],[\"105.1 fm\", \"kqwb\", \"q 105.1\", \"active rock\", \"triad broadcasting\"],[\"106.1 fm\", \"kqlx - fm\", \"thunder 106.1\", \"classic country\", \"great plains integrated marketing\"],[\"106.5 fm\", \"krjb\", \"krjb 106.5\", \"country\", \"r&j broadcasting\"],[\"106.9 fm\", \"kegk\", \"eagle 106.9\", \"classic hits\", \"great plains integrated marketing\"],[\"107.9 fm\", \"kpfx\", \"107.9 the fox\", \"classic rock\", \"triad broadcasting\"]]\nQuestion = Is it true that the call sign for thunder 106.1 is kqlx - fm?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    call_signs = get_column_by_name(table_data, \"call sign\")\n    for name, call_sign in zip(names, call_signs):\n        if name.lower() == \"thunder 106.1\":\n            answer = call_sign.lower() == \"kqlx - fm\"\n            break\n    return answer\n\n### END"}
{"id": "eac49da7-6b34-407e-8ac2-59b1882d5b31", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2006 - 07 seattle supersonics season\ntable_data = [[\"game\",\"date\",\"team\",\"score\",\"high points\",\"high rebounds\",\"high assists\",\"location attendance\",\"record\"],[\"1\",\"november 1\",\"portland\",\"l 106 - 110\",\"rashard lewis (25)\",\"rashard lewis (8)\",\"luke ridnour (13)\",\"keyarena 17072\",\"0 - 1\"],[\"2\",\"november 3\",\"l a lakers\",\"l 112 - 118\",\"ray allen (30)\",\"chris wilcox (12)\",\"earl watson (7)\",\"staples center 18997\",\"0 - 2\"],[\"3\",\"november 5\",\"l a lakers\",\"w 117 - 101\",\"ray allen (32)\",\"chris wilcox (8)\",\"luke ridnour (7)\",\"keyarena 17072\",\"1 - 2\"],[\"4\",\"november 7\",\"miami\",\"l 87 - 90\",\"rashard lewis (23)\",\"nick collison (10)\",\"earl watson (6)\",\"american airlines arena 19600\",\"1 - 3\"],[\"5\",\"november 8\",\"orlando\",\"l 87 - 88\",\"ray allen (21)\",\"danny fortson (8)\",\"luke ridnour (6)\",\"amway arena 16312\",\"1 - 4\"],[\"6\",\"november 10\",\"charlotte\",\"w 99 - 85\",\"ray allen (26)\",\"nick collison (15)\",\"luke ridnour (7)\",\"charlotte bobcats arena 13515\",\"2 - 4\"],[\"7\",\"november 11\",\"atlanta\",\"w 113 - 112 (ot)\",\"ray allen (33)\",\"chris wilcox (15)\",\"luke ridnour (5)\",\"philips arena 19309\",\"3 - 4\"],[\"8\",\"november 13\",\"new jersey\",\"w 119 - 113\",\"luke ridnour (32)\",\"rashard lewis (11)\",\"luke ridnour , earl watson (7)\",\"continental airlines arena 14392\",\"4 - 4\"],[\"9\",\"november 15\",\"philadelphia\",\"l 90 - 96\",\"rashard lewis (25)\",\"rashard lewis , chris wilcox (15)\",\"luke ridnour (7)\",\"keyarena 14936\",\"4 - 5\"],[\"10\",\"november 17\",\"utah\",\"l 109 - 118\",\"ray allen (32)\",\"chris wilcox (11)\",\"luke ridnour (7)\",\"keyarena 15513\",\"4 - 6\"],[\"11\",\"november 18\",\"golden state\",\"l 95 - 107\",\"ray allen (34)\",\"ray allen (11)\",\"earl watson (7)\",\"oracle arena 17205\",\"4 - 7\"],[\"12\",\"november 20\",\"new jersey\",\"w 99 - 87\",\"ray allen (29)\",\"ray allen (9)\",\"ray allen , luke ridnour (5)\",\"keyarena 14621\",\"5 - 7\"],[\"13\",\"november 22\",\"l a clippers\",\"w 95 - 85\",\"rashard lewis (35)\",\"nick collison , rashard lewis (13)\",\"luke ridnour (9)\",\"staples center 16290\",\"6 - 7\"],[\"14\",\"november 24\",\"sacramento\",\"l 100 - 109\",\"rashard lewis (26)\",\"chris wilcox (13)\",\"luke ridnour (8)\",\"keyarena 16757\",\"6 - 8\"],[\"15\",\"november 26\",\"san antonio\",\"l 78 - 98\",\"ray allen (21)\",\"johan petro (9)\",\"chris wilcox (5)\",\"keyarena 15483\",\"6 - 9\"]]\nQuestion = Is it true that the 0 - 2 record had a score of l 87 - 88?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    scores = get_column_by_name(table_data, \"score\")\n    records = get_column_by_name(table_data, \"record\")\n    for score, record in zip(scores, records):\n        if record == \"0 - 2\":\n            answer = score == \"l 87 - 88\"\n            break\n    return answer\n\n### END"}
{"id": "f1d99b27-ea50-497e-8fcc-5d5e4b7f87db", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of teachers (uk tv series) episodes\ntable_data = [[\"no overall\",\"no in series\",\"title\",\"director\",\"writer\",\"original air date\",\"production code\"],[\"32\", \"1\", \"episode 1\", \"barnaby southcomb\", \"richard stoneman\", \"26 october 2004\", \"401\"],[\"33\", \"2\", \"episode 2\", \"barnaby southcomb\", \"ed roe\", \"3 november 2004\", \"402\"],[\"34\", \"3\", \"episode 3\", \"barnaby southcomb\", \"charlie martin\", \"10 november 2004\", \"403\"],[\"35\", \"4\", \"episode 4\", \"sean grundy\", \"linton chiswick\", \"17 november 2004\", \"404\"],[\"36\", \"5\", \"episode 5\", \"sean grundy\", \"jack lothian\", \"24 november 2004\", \"405\"],[\"37\", \"6\", \"episode 6\", \"sean grundy\", \"tony basgallop\", \"1 december 2004\", \"406\"],[\"38\", \"7\", \"episode 7\", \"iain b macdonald\", \"charlie martin\", \"8 december 2004\", \"407\"],[\"39\", \"8\", \"episode 8\", \"iain b macdonald\", \"richard stoneman\", \"15 december 2004\", \"408\"]]\nQuestion = Is it true that the episode directed by barnaby southcomb and written by charlie martin originally aired on november 10 , 2004?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    directors = get_column_by_name(table_data, \"director\")\n    writers = get_column_by_name(table_data, \"writer\")\n    air_dates = get_column_by_name(table_data, \"original air date\")\n    for director, writer, air_date in zip(directors, writers, air_dates):\n        if director.lower() == \"barnaby southcomb\" and writer.lower() == \"charlie martin\" and air_date.lower() == \"10 november 2004\":\n            return True\n    return False\n\n### END"}
{"id": "12254587-f10c-4c4d-8224-7b9b9f62e650", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of americas records in swimming\ntable_data = [[\"event\", \"time\", \"nationality\", \"date\", \"meet\", \"location\"],[\"50 m freestyle\", \"20.91\", \"brazil\", \"18 december 2009\", \"brazilian championships\", \"são paulo, brazil\"],[\"100 m freestyle\", \"46.91\", \"brazil\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m freestyle\", \"1:42.96\", \"united states\", \"12 august 2008\", \"olympic games\", \"beijing, china\"],[\"400 m freestyle\", \"3:42.78\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"800 m freestyle\", \"7:41.86\", \"canada\", \"27 july 2011\", \"world championships\", \"shanghai, china\"],[\"1500 m freestyle\", \"14:39.63\", \"canada\", \"4 august 2012\", \"olympic games\", \"london, united kingdom\"],[\"50 m backstroke\", \"24.33\", \"united states\", \"5 december 2008\", \"dutch swim cup\", \"eindhoven, netherlands\"],[\"100 m backstroke\", \"51.94\", \"united states\", \"8 july 2009\", \"us championships\", \"indianapolis, united states\"],[\"200 m backstroke\", \"1:51.92\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m breaststroke\", \"26.76\", \"brazil\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"100 m breaststroke\", \"58.96\", \"united states\", \"26 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m breaststroke\", \"2:07.42\", \"united states\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m butterfly\", \"22.76\", \"brazil\", \"26 april 2012\", \"maria lenk trophy\", \"rio de janeiro, brazil\"],[\"100 m butterfly\", \"49.82\", \"united states\", \"1 august 2009\", \"world championships\", \"rome, italy\"],[\"200 m butterfly\", \"1:51.51\", \"united states\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m individual medley\", \"1:54.00\", \"united states\", \"28 july 2011\", \"world championships\", \"shanghai, china\"],[\"400 m individual medley\", \"4:03.84\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"4100 m freestyle relay\", \"3:08.24\", \"united states\", \"11 august 2008\", \"olympic games\", \"beijing, china\"],[\"4200 m freestyle relay\", \"6:58.55\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"4100 m medley relay\", \"3:27.28\", \"united states\", \"2 august 2009\", \"world championships\", \"rome, italy\"]]\nQuestion = Is it true that the 1500 m olympic freestyle event took place on august 4 , 2012?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    dates = get_column_by_name(table_data, \"date\")\n    meets = get_column_by_name(table_data, \"meet\")\n    answer = False\n    for event, date, meet in zip(events, dates, meets):\n        if \"1500 m freestyle\" in event.lower() and \"4 august 2012\" in date.lower() and \"olympic games\" in meet.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "5cd3b956-b9e0-445d-9e7a-f0f32920e7ca", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 melbourne cup\ntable_data = [[\"saddle cloth\", \"horse\", \"trainer\", \"jockey\", \"weight (kg)\", \"barrier\", \"placing\"],[\"1\", \"septimus\", \"aidan o'brien\", \"j p murtagh\", \"58.5\", \"10\", \"18\"],[\"2\", \"master o 'reilly\", \"danny o'brien\", \"v duric\", \"55\", \"6\", \"4\"],[\"3\", \"honolulu\", \"aidan o'brien\", \"colm odonoghue\", \"54.5\", \"24\", \"21\"],[\"4\", \"cest la guerre\", \"john sadler\", \"b prebble\", \"54\", \"5\", \"3\"],[\"5\", \"nom du jeu\", \"murray baker\", \"j lloyd\", \"54\", \"1\", \"8\"],[\"6\", \"yellowstone\", \"jane chapple - hyam\", \"j f egan\", \"54\", \"scr\", \"scr\"],[\"7\", \"zipping\", \"john sadler\", \"d nikolic\", \"54\", \"16\", \"9\"],[\"8\", \"mad rush\", \"luca cumani\", \"damien oliver\", \"53.5\", \"4\", \"7\"],[\"9\", \"ice chariot\", \"ron maund\", \"m rodd\", \"53\", \"22\", \"11\"],[\"10\", \"viewed\", \"bart cummings\", \"b shinn\", \"53\", \"9\", \"1\"],[\"11\", \"littorio\", \"nigel blackiston\", \"s r king\", \"52.5\", \"17\", \"13\"],[\"12\", \"bauer\", \"luca cumani\", \"c w brown\", \"52\", \"13\", \"2\"],[\"13\", \"boundless\", \"stephen mckee\", \"g j childs\", \"52\", \"20\", \"15\"],[\"14\", \"gallopin\", \"danny o'brien\", \"j winks\", \"52\", \"21\", \"dnf\"],[\"15\", \"guyno\", \"lou luciani\", \"c newitt\", \"52\", \"8\", \"12\"],[\"16\", \"zarita\", \"pat hyland\", \"d dunn\", \"52\", \"scr\", \"scr\"],[\"17\", \"newport\", \"paul perry\", \"chris symons\", \"51.5\", \"15\", \"10\"],[\"18\", \"profound beauty\", \"dermot k weld\", \"glen boss\", \"51.5\", \"2\", \"5\"],[\"19\", \"red lord\", \"anthony cummings\", \"nicholas hall\", \"51.5\", \"14\", \"16\"],[\"20\", \"varevees\", \"richard gibson\", \"craig williams\", \"51.5\", \"23\", \"14\"],[\"21\", \"prize lady\", \"graeme sanders\", \"m c sweeney\", \"51\", \"18\", \"17\"],[\"22\", \"alessandro volta\", \"aidan o'brien\", \"w m lordan\", \"50.5\", \"11\", \"20\"],[\"23\", \"barbaricus\", \"danny o'brien\", \"s baster\", \"50.5\", \"3\", \"19\"],[\"24\", \"moatize\", \"bart cummings\", \"ms c lindop\", \"50\", \"19\", \"6\"]]\nQuestion = Is it true that aidan 0'brien rode ice chariot?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    trainers = get_column_by_name(table_data, \"trainer\")\n    horses = get_column_by_name(table_data, \"horse\")\n    answer = False\n    for trainer, horse in zip(trainers, horses):\n        if \"aidan o'brien\" in trainer.lower() and \"ice chariot\" in horse.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "cca6c80c-2f11-4339-a51d-61e19ad51176", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"\", \"date\", \"vs\", \"opponent\", \"score\", \"attendance\", \"record\"],[\"1\", \"january 9 , 1988\", \"at\", \"washington wave\", \"13 - 14\", \"6624\", \"loss\"],[\"2\", \"january 16 , 1988\", \"vs\", \"washington wave\", \"10 - 11\", \"13814\", \"loss\"],[\"3\", \"january 30 , 1988\", \"vs\", \"baltimore thunder\", \"12 - 7\", \"16028\", \"win\"],[\"4\", \"february 6 , 1988\", \"vs\", \"new jersey saints\", \"7 - 10\", \"9064\", \"loss\"],[\"5\", \"february 14 , 1988\", \"at\", \"washington wave\", \"12 - 13\", \"6683\", \"loss\"],[\"6\", \"february 20 , 1988\", \"vs\", \"baltimore thunder\", \"14 - 13\", \"10004\", \"win\"],[\"7\", \"february 21 , 1988\", \"at\", \"new jersey saints\", \"12 - 13\", \"6427\", \"loss\"],[\"8\", \"february 27 , 1988\", \"at\", \"baltimore thunder\", \"17 - 9\", \"4937\", \"win\"]]\nQuestion = Is it true that the game with the opponent , washington wave , had an attendance of less than 4000?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    answer = False\n    for opponent, attendance in zip(opponents, attendances):\n        if opponent.lower() == \"washington wave\":\n            if less_than(int(attendance), 4000):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "8ccddff1-6555-477f-99d8-c5b146dae2e5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of radio stations in tamaulipas\ntable_data = [[\"frequency\", \"callsign\", \"brand\", \"city of license\", \"type\"],[\"580\", \"xehp\", \"la mas prendida\", \"ciudad victoria\", \"norteño\"],[\"640\", \"xetam\", \"la poderosa\", \"santa elena\", \"norteño\"],[\"970\", \"xebj - am\", \"radio 970\", \"ciudad victoria\", \"contemporary\"],[\"1340\", \"xerpv - am\", \"la cotorra\", \"ciudad victoria\", \"norteño\"],[\"1380\", \"xegw\", \"planeta w 1380\", \"ciudad victoria\", \"christian pop\"],[\"1480\", \"xevic\", \"radio tamaulipas\", \"ciudad victoria\", \"state government\"]]\nQuestion = Is it true that the frequency of 1380 is contemporary?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    types = get_column_by_name(table_data, \"type\")\n    for frequency, type in zip(frequencies, types):\n        if frequency == \"1380\":\n            answer = equal_to(type, \"contemporary\")\n            break \n    return answer\n\n### END"}
{"id": "55cbf1aa-cf1b-4de2-a427-aba6c41b3f20", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the yardbirds discography\ntable_data = [[\"date\", \"title\", \"origin\", \"label & cat no\", \"chart no\"],[\"6 / 1965\", \"for your love\", \"us\", \"epic ln 24167 / bn - 26167\", \"96\"],[\"11 / 1965\", \"having a rave up with the yardbirds\", \"us\", \"epic ln 24177 / bn 26177\", \"53\"],[\"7 / 1966\", \"yardbirds aka roger the engineer\", \"uk\", \"columbia sx 6063 / scx 6063\", \"20\"],[\"7 / 1966\", \"over under sideways down\", \"us\", \"epic ln 24210 / bn 26210\", \"52\"],[\"8 / 1967\", \"little games\", \"us\", \"epic ln 24313 / bn 26313\", \"80\"]]\nQuestion = Is it true that uk is the origin country for a title that charted at 52?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    origins = get_column_by_name(table_data, \"origin\")\n    chart_nos = get_column_by_name(table_data, \"chart no\")\n    for origin, chart_no in zip(origins, chart_nos):\n        if equal_to(chart_no, \"52\"):\n            answer = equal_to(origin.lower(), \"uk\")\n            break \n    return answer\n\n### END"}
{"id": "4cff6792-850b-464f-a278-611d0337dbde", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1926 grand prix season\ntable_data = [[\"name\", \"circuit\", \"date\", \"winning drivers\", \"winning constructor\", \"report\"],[\"indianapolis 500\", \"indianapolis\", \"31 may\", \"frank lockhart\", \"miller\", \"report\"],[\"french grand prix\", \"miramas\", \"27 june\", \"jules goux\", \"bugatti\", \"report\"],[\"san sebastián grand prix / european grand prix\", \"lasarte\", \"18 july\", \"jules goux\", \"bugatti\", \"report\"],[\"british grand prix\", \"brooklands\", \"7 august\", \"robert sénéchal louis wagner\", \"delage\", \"report\"],[\"italian grand prix\", \"monza\", \"5 september\", \"louis charavel\", \"bugatti\", \"report\"]]\nQuestion = Is it true that the bugatti was the winning constructor at the italian grand prix after september 5?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\nfrom datetime import datetime\n\ndef parse_date(date_str):\n    return datetime.strptime(date_str, '%d %B')\n\ndef later(date1, date2):\n    return date1 > date2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    constructors = get_column_by_name(table_data, \"winning constructor\")\n    races = get_column_by_name(table_data, \"name\")\n    answer = False\n    for date, constructor, race in zip(dates, constructors, races):\n        parsed_date = parse_date(date)\n        if \"italian grand prix\" in race.lower() and later(parsed_date, parse_date(\"5 september\")):\n            if constructor.lower() == \"bugatti\":\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "9eac3fbb-b253-40cc-aebc-6dbcc5c10dae", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of make it or break it episodes\ntable_data = [[\"series\",\"season\",\"title\",\"directed by\",\"written by\",\"original air date\",\"us viewers (in millions)\"],[\"21\",\"1\",\"friends close , enemies closer\",\"patrick norris\",\"joanna johnson\",\"june 28 , 2010\",\"1.83\"],[\"22\",\"2\",\"all or nothing\",\"fred gerber\",\"kerry lenhart & john j sakmar\",\"july 5 , 2010\",\"1.72\"],[\"23\",\"3\",\"battle of the flexes\",\"j miller tobin\",\"amy turner\",\"july 13 , 2010\",\"1.56\"],[\"24\",\"4\",\"and the rocky goes to\",\"bethany rooney\",\"holly sorensen\",\"july 20 , 2010\",\"1.46\"],[\"25\",\"5\",\"i won't dance , don't ask me\",\"david paymer\",\"michael gans & richard register\",\"july 27 , 2010\",\"1.66\"],[\"26\",\"6\",\"party gone out of bounds\",\"felix alcala\",\"joanna johnson\",\"august 3 , 2010\",\"1.75\"],[\"27\",\"7\",\"what are you made of\",\"glenn l steelman\",\"holly sorensen\",\"august 10 , 2010\",\"1.56\"],[\"28\",\"8\",\"rock bottom\",\"chris grismer\",\"liz maccie\",\"august 17 , 2010\",\"1.30\"],[\"29\",\"9\",\"if only\",\"david paymer\",\"michael gans & richard register\",\"august 24 , 2010\",\"1.42\"],[\"30\",\"10\",\"the edge of the worlds\",\"chris grismer\",\"kerry lenhart & john j sakmar\",\"august 31 , 2010\",\"1.44\"],[\"31\",\"11\",\"the new normal\",\"michael lange\",\"holly sorensen\",\"march 28 , 2011\",\"2.06\"],[\"32\",\"12\",\"free people\",\"fred gerber\",\"joanna johnson\",\"april 4 , 2011\",\"1.69\"],[\"33\",\"13\",\"the buddy system\",\"glenn l steelman\",\"amy turner\",\"april 11 , 2011\",\"1.64\"],[\"34\",\"14\",\"life or death\",\"david paymer\",\"michael gans & richard register\",\"april 18 , 2011\",\"1.58\"],[\"35\",\"15\",\"hungary heart\",\"rod hardy\",\"kerry lenhart & john j sakmar\",\"april 25 , 2011\",\"1.64\"],[\"36\",\"16\",\"requiem for a dream\",\"michael schultz\",\"holly sorenson\",\"may 2 , 2011\",\"1.65\"],[\"37\",\"17\",\"to thine own self be true\",\"john behring\",\"liz maccie\",\"may 9 , 2011\",\"1.51\"],[\"38\",\"18\",\"dog eat dog\",\"chris grismer\",\"michael gans & richard register\",\"may 16 , 2011\",\"1.64\"],[\"39\",\"19\",\"what lies beneath\",\"david paymer\",\"joanna johnson\",\"may 23 , 2011\",\"1.49\"]]\nQuestion = Is it true that holly sorensen was the writer for the episode called what are you made of?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    writers = get_column_by_name(table_data, \"written by\")\n    answer = False\n    for title, writer in zip(titles, writers):\n        if \"what are you made of\" in title.lower():\n            if \"holly sorensen\" in writer.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "4bc9f55b-97b6-4608-8f5a-8403edeff463", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mcleod 's daughters (season 2)\ntable_data = [[\"season\",\"series\",\"title\",\"director (s)\",\"writer (s)\",\"original airdate\"],[\"1\",\"23\",\"the drovers connection\",\"robert klenner\",\"chris hawkshaw & susan smith\",\"27 march 2002\"],[\"2\",\"24\",\"through the looking glass\",\"robert klenner\",\"david phillips\",\"3 april 2002\"],[\"3\",\"25\",\"desperate measures\",\"lewis fitz - gerald\",\"chris mccourt\",\"10 april 2002\"],[\"4\",\"26\",\"the bore war\",\"lewis fitz - gerald\",\"alexa wyatt\",\"17 april 2002\"],[\"5\",\"27\",\"hello stranger\",\"donald crombie\",\"michaeley o'brien\",\"24 april 2002\"],[\"6\",\"28\",\"a dry spell\",\"donald crombie\",\"chris phillips\",\"1 may 2002\"],[\"7\",\"29\",\"three 's a crowd\",\"karl zwicky\",\"chris pearce & alexa wyatt\",\"8 may 2002\"],[\"8\",\"30\",\"the bridle waltz\",\"karl zwicky\",\"robert dudley & alexa wyatt\",\"15 may 2002\"],[\"9\",\"31\",\"to have & to hold\",\"chris martin - jones\",\"chris mccourt & sarah smith\",\"3 july 2002\"],[\"10\",\"32\",\"home is where the heart is\",\"chris martin - jones\",\"ysabelle dean\",\"10 july 2002\"],[\"11\",\"33\",\"wildfire\",\"ian gilmour\",\"sally webb\",\"17 july 2002\"],[\"12\",\"34\",\"hounded\",\"ian gilmour\",\"dave warner\",\"24 july 2002\"],[\"13\",\"35\",\"steer trek\",\"karl zwicky\",\"david phillips & alexa wyatt\",\"31 july 2002\"],[\"14\",\"36\",\"brave j\",\"karl zwicky\",\"louise crane\",\"7 august 2002\"],[\"15\",\"37\",\"you can leave your hat on\",\"chris martin - jones\",\"guila sandler\",\"15 august 2002\"],[\"16\",\"38\",\"stripped bare\",\"chris martin - jones\",\"chris hawkshaw\",\"21 august 2002\"],[\"17\",\"39\",\"blame it on the moonlight\",\"donald crombie\",\"chris mccourt\",\"4 september 2002\"],[\"18\",\"40\",\"made to be broken\",\"donald crombie\",\"chris mccourt\",\"18 september 2002\"],[\"19\",\"41\",\"best of enemies\",\"robert klenner\",\"david phillips\",\"25 september 2002\"],[\"20\",\"42\",\"wind change\",\"robert klenner\",\"chris phillips\",\"2 october 2002\"],[\"21\",\"43\",\"no more mr nice guy\",\"karl zwicky\",\"sarah smith\",\"9 october 2002\"]]\nQuestion = Is it true that stripped bare was written by chris hawkshaw?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_written_by = get_column_by_name(table_data, \"writer (s)\")\n    answer = \"chris hawkshaw\" in column_written_by\n    return answer\n\n### END"}
{"id": "04100a5d-4a6c-49e7-bd60-fc494d7b4bbe", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 honda indy 300\ntable_data = [[\"driver\", \"team\", \"laps\", \"time / retired\", \"grid\"],[\"cristiano da matta\", \"newman - haas racing\", \"65\", \"1:51:47.260\", \"3\"],[\"michael andretti\", \"team green\", \"65\", \"+ 5.8 secs\", \"6\"],[\"alex tagliani\", \"forsythe racing\", \"65\", \"+ 7.5 secs\", \"7\"],[\"gil de ferran\", \"team penske\", \"65\", \"+ 20.9 secs\", \"2\"],[\"kenny brack\", \"team rahal\", \"65\", \"+ 22.6 secs\", \"13\"],[\"jimmy vasser\", \"patrick racing\", \"65\", \"+ 24.7 secs\", \"10\"],[\"michel jourdain , jr\", \"bettenhausen racing\", \"65\", \"+ 39.5 secs\", \"16\"],[\"christian fittipaldi\", \"newman - haas racing\", \"65\", \"+ 40.5 secs\", \"15\"],[\"max papis\", \"team rahal\", \"65\", \"+ 42.6 secs\", \"14\"],[\"memo gidley\", \"chip ganassi racing\", \"65\", \"+ 42.9 secs\", \"23\"],[\"patrick carpentier\", \"forsythe racing\", \"65\", \"+ 46.7 secs\", \"9\"],[\"shinji nakano\", \"fernández racing\", \"65\", \"+ 46.9 secs\", \"18\"],[\"alex barron\", \"arciero - blair racing\", \"65\", \"+ 46.9 secs\", \"26\"],[\"paul tracy\", \"team green\", \"65\", \"+ 62.6 secs\", \"4\"],[\"scott dixon\", \"pacwest racing\", \"65\", \"+ 72.0 secs\", \"8\"],[\"tora takagi\", \"walker racing\", \"65\", \"+ 81.8 secs\", \"20\"],[\"tony kanaan\", \"mo nunn racing\", \"65\", \"+ 82.0 secs\", \"3\"],[\"bryan herta\", \"forsythe racing\", \"65\", \"+ 82.4 secs\", \"22\"],[\"adrián fernández\", \"fernández racing\", \"65\", \"+ 100.3 secs\", \"17\"],[\"hélio castroneves\", \"team penske\", \"64\", \"+ 1 lap\", \"11\"],[\"bruno junqueira\", \"chip ganassi racing\", \"56\", \"contact\", \"21\"],[\"roberto moreno\", \"patrick racing\", \"54\", \"mechanical\", \"1\"],[\"dario franchitti\", \"team green\", \"35\", \"mechanical\", \"5\"],[\"maurício gugelmin\", \"pacwest racing\", \"34\", \"mechanical\", \"25\"],[\"oriol servià\", \"sigma autosport\", \"10\", \"mechanical\", \"12\"],[\"casey mears\", \"mo nunn racing\", \"0\", \"contact\", \"24\"]]\nQuestion = Is it true that oriol sevia made more than 65 laps for sigma autosport?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    teams = get_column_by_name(table_data, \"team\")\n    laps = get_column_by_name(table_data, \"laps\")\n    for driver, team, lap in zip(drivers, teams, laps):\n        if driver.lower() == \"oriol servià\" and team.lower() == \"sigma autosport\":\n            answer = greater(int(lap), 65)\n            break \n    return answer\n\n### END"}
{"id": "8d8fcff0-d3d9-457b-95d9-f2e7cc256c00", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 boston celtics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"74\", \"april 1\", \"chicago\", \"106 - 92\", \"allen (22)\", \"perkins (9)\", \"rondo (10)\", \"united center 22225\", \"59 - 15\"],[\"75\", \"april 2\", \"indiana\", \"92 - 77\", \"garnett (20)\", \"garnett (11)\", \"rondo (6)\", \"td banknorth garden 18624\", \"60 - 15\"],[\"76\", \"april 5\", \"charlotte\", \"101 - 78\", \"powe (22)\", \"powe (9)\", \"rondo (5)\", \"charlotte bobcats arena 19403\", \"61 - 15\"],[\"77\", \"april 8\", \"milwaukee\", \"107 - 104 (ot)\", \"garnett (21)\", \"perkins (10)\", \"pierce (4)\", \"bradley center 15921\", \"62 - 15\"],[\"78\", \"april 9\", \"washington\", \"95 - 109\", \"pierce (28)\", \"garnett (14)\", \"pierce , rondo (7)\", \"verizon center 20173\", \"62 - 16\"],[\"79\", \"april 11\", \"milwaukee\", \"102 - 86\", \"rondo (16)\", \"garnett , posey (8)\", \"rondo (10)\", \"td banknorth garden 18624\", \"63 - 16\"],[\"80\", \"april 12\", \"atlanta\", \"99 - 89\", \"garnett (24)\", \"davis (10)\", \"cassell , rondo (5)\", \"philips arena 20098\", \"64 - 16\"],[\"81\", \"april 14\", \"new york\", \"99 - 93\", \"rondo (23)\", \"rondo (10)\", \"rondo (5)\", \"madison square garden 19763\", \"65 - 16\"],[\"82\", \"april 16\", \"new jersey\", \"105 - 94\", \"powe (27)\", \"powe (11)\", \"cassell (4)\", \"td banknorth garden 18624\", \"66 - 16\"]]\nQuestion = Is it true that two is the total number of games played on the date april 11?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    num_games_on_april_11 = count_occurrences(\"april 11\", dates)\n    answer = equal_to(num_games_on_april_11, 2)\n    return answer\n\n### END"}
{"id": "1420a64e-a3bb-42c7-a59d-da37ad9ebbfa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = meaghan francella\ntable_data = [[\"year\", \"tournaments played\", \"cuts made\", \"wins\", \"2nd\", \"top 10s\", \"best finish\", \"earnings\", \"money list rank\", \"scoring average\", \"scoring rank\"],[\"2005\", \"1\", \"1\", \"0\", \"0\", \"0\", \"t69\", \"2525\", \"n / a\", \"75.00\", \"n / a\"],[\"2006\", \"3\", \"1\", \"0\", \"0\", \"0\", \"t39\", \"55554\", \"183\", \"73.75\", \"n / a\"],[\"2007\", \"25\", \"18\", \"1\", \"0\", \"4\", \"1\", \"507292\", \"29\", \"73.09\", \"66\"],[\"2008\", \"24\", \"11\", \"0\", \"0\", \"0\", \"t13\", \"117682\", \"88\", \"73.75\", \"131\"],[\"2009\", \"22\", \"16\", \"0\", \"0\", \"2\", \"t5\", \"292266\", \"48\", \"72.51\", \"63\"],[\"2010\", \"21\", \"17\", \"0\", \"0\", \"1\", \"t7\", \"168016\", \"57\", \"73.04\", \"77\"],[\"2011\", \"15\", \"8\", \"0\", \"0\", \"0\", \"t22\", \"66813\", \"84\", \"74.23\", \"117\"],[\"2012\", \"15\", \"4\", \"0\", \"0\", \"0\", \"t24\", \"28935\", \"116\", \"74.37\", \"121\"]]\nQuestion = Is it true that in 2005 , the best finish was t69 , and had zero in 2nd?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    best_finishes = get_column_by_name(table_data, \"best finish\")\n    seconds = get_column_by_name(table_data, \"2nd\")\n    for year, best_finish, second in zip(years, best_finishes, seconds):\n        if year == \"2005\":\n            answer = equal_to(best_finish, \"t69\") and equal_to(second, \"0\")\n            break \n    return answer\n\n### END"}
{"id": "62947d7c-9dca-4208-8643-4acf7e871c4b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = dock jumping\ntable_data = [[\"date\", \"distance\", \"handler\", \"event\", \"location\"],[\"7 july 2000\", \"ft4in (m)\", \"beth gutteridge\", \"espn great outdoor games\", \"lake placid , ny\"],[\"8 july 2001\", \"ft1in (m)\", \"mike wallace\", \"espn great outdoor games\", \"lake placid , ny\"],[\"20 february 2002\", \"ft3in (m)\", \"mike jackson\", \"indianapolis boat , sport & travel show\", \"indianapolis , in\"],[\"1 may 2002\", \"ft4in (m)\", \"john kline\", \"espn2 super retriever series\", \"northfield , mn\"],[\"6 july 2002\", \"ft6in (m)\", \"mike jackson\", \"espn great outdoor games\", \"lake placid , ny\"],[\"7 august 2005\", \"ft5in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"21 august 2005\", \"ft7in (m)\", \"kevin meese\", \"big nickle time cabela 's\", \"hamburg , pa\"],[\"9 october 2005\", \"ft10in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"30 may 2010\", \"ft11.59in (m)\", \"rande murphy\", \"super retriever series crown championship\", \"little rock , ar\"],[\"11 july 2010\", \"ft1in (m)\", \"melissa ness\", \"2010 ukc premier\", \"richmond , in\"],[\"29 may 2011\", \"ft7in (m)\", \"tony lampert\", \"super retriever series crown championship\", \"little rock , ar\"],[\"07 oct 2011\", \"ft11in (m)\", \"tony lampert\", \"david letterman show , october 7 2011\", \"new york , ny\"]]\nQuestion = Is it true that espn2 super retriever series was held in northfield , mn in 2002?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    locations = get_column_by_name(table_data, \"location\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for event, location, date in zip(events, locations, dates):\n        if \"espn2 super retriever series\" in event.lower() and \"northfield , mn\" in location.lower() and \"2002\" in date:\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "d2915aca-8dba-4d46-90ba-27a292915c1f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1981 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"footscray\", \"10.14 (74)\", \"hawthorn\", \"11.18 (84)\", \"western oval\", \"13789\", \"23 may 1981\"],[\"fitzroy\", \"13.15 (93)\", \"geelong\", \"16.18 (114)\", \"junction oval\", \"15604\", \"23 may 1981\"],[\"carlton\", \"25.22 (172)\", \"south melbourne\", \"11.7 (73)\", \"princes park\", \"22445\", \"23 may 1981\"],[\"melbourne\", \"10.10 (70)\", \"essendon\", \"14.20 (104)\", \"mcg\", \"31769\", \"23 may 1981\"],[\"north melbourne\", \"12.26 (98)\", \"collingwood\", \"16.15 (111)\", \"arden street oval\", \"24625\", \"23 may 1981\"],[\"richmond\", \"20.16 (136)\", \"st kilda\", \"15.15 (105)\", \"vfl park\", \"40240\", \"23 may 1981\"]]\nQuestion = Is it true that hawthorn was the home team at western oval?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    for home_team, venue in zip(home_teams, venues):\n        if equal_to(venue, \"western oval\"):\n            answer = equal_to(home_team, \"hawthorn\")\n            break \n    return answer\n\n### END"}
{"id": "6f60eb24-1747-4658-9713-7b1d0015e796", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = locomotives of the london and north eastern railway\ntable_data = [[\"class\", \"type\", \"quantity\", \"date\", \"lner class\"],[\"2\", \"4 - 4 - 0\", \"25\", \"1887 - 1892\", \"d7\"],[\"3\", \"2 - 4 - 2t\", \"39\", \"1889 - 1892\", \"f1\"],[\"6ai\", \"0 - 6 - 0\", \"12\", \"1888\", \"j8\"],[\"6d\", \"2 - 4 - 0\", \"3\", \"1887\", \"e2\"],[\"6db\", \"4 - 4 - 0\", \"3\", \"1888\", \"d8\"],[\"9\", \"0 - 6 - 0\", \"6\", \"1888 - 89\", \"j13\"],[\"9a\", \"0 - 6 - 2t\", \"55\", \"1889 - 92\", \"n4\"],[\"9b & 9e\", \"0 - 6 - 0\", \"31\", \"1891 - 95\", \"j9\"],[\"9c & 9f\", \"0 - 6 - 2t\", \"129\", \"1891 - 1901\", \"n5\"],[\"9d , 9h & 9 m\", \"0 - 6 - 0\", \"124\", \"1892 - 1902\", \"j10\"]]\nQuestion = Is it true that the lner class f1 is class 3?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    classes = get_column_by_name(table_data, \"class\")\n    lner_classes = get_column_by_name(table_data, \"lner class\")\n    for class_, lner_class in zip(classes, lner_classes):\n        if lner_class.lower() == \"f1\":\n            answer = equal_to(class_, \"3\")\n            break \n    return answer\n\n### END"}
{"id": "7b2616f5-a0d8-4b60-bfd8-0214733504ef", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = golden gate transit\ntable_data = [[\"make\", \"year placed in service\", \"quantity\", \"number of seats\", \"wheelchair accessible\", \"current status\"],[\"gm new look\", \"1971 , 1972\", \"132\", \"45\", \"no\", \"retired , one bus retained for historical purposes\"],[\"gm advanced design\", \"1981\", \"16\", \"43\", \"yes\", \"retired\"],[\"gm advanced design\", \"1983\", \"50\", \"41\", \"yes\", \"retired\"],[\"gillig\", \"1986\", \"4\", \"26\", \"yes\", \"retired\"],[\"mci\", \"1987\", \"21\", \"45\", \"yes\", \"retired\"],[\"tmc\", \"1990\", \"48\", \"39\", \"yes\", \"retired\"],[\"tmc\", \"1991\", \"49\", \"40\", \"yes\", \"retired (26) , reserve fleet (10) , for sale (13)\"],[\"flxible\", \"1994\", \"40\", \"45\", \"yes\", \"retired\"],[\"mci\", \"1996 , 1997\", \"32\", \"57\", \"yes\", \"for sale (21) , unknown (11)\"],[\"novabus\", \"1997\", \"10\", \"43\", \"yes\", \"retired\"],[\"new flyer\", \"2003\", \"8\", \"62\", \"yes\", \"retired\"]]\nQuestion = Is it true that 45 is the number of seats in a retired bus for historical purposes in service in 1971 and 1972?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year placed in service\")\n    seats = get_column_by_name(table_data, \"number of seats\")\n    status = get_column_by_name(table_data, \"current status\")\n    for year, seat, stat in zip(years, seats, status):\n        if \"1971 , 1972\" in year and \"retired , one bus retained for historical purposes\" in stat:\n            answer = equal_to(seat, \"45\")\n            break \n    return answer\n\n### END"}
{"id": "4cd73f0a-eaa9-47ce-bd23-9ea5ae1aae40", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date (yyyy - mm - dd)\", \"time ( utc )\", \"latitude\", \"longitude\", \"depth\", \"magnitude\"],[\"2010 - 04 - 13\", \"21:40:00\", \"33.183 degree n\", \"96.623 degree e\", \"-\", \"5.0 (m w )\"],[\"2010 - 04 - 13\", \"23:49:39\", \"33.224 degree n\", \"96.666 degree e\", \"-\", \"6.9 (m w )\"],[\"2010 - 04 - 14\", \"00:01:17\", \"32.875 degree n\", \"96.999 degree e\", \"-\", \"5.3 (m w )\"],[\"2010 - 04 - 14\", \"00:12:25\", \"33.159 degree n\", \"96.580 degree e\", \"-\", \"5.2 (m w )\"],[\"2010 - 04 - 14\", \"01:25:15\", \"33.179 degree n\", \"96.448 degree e\", \"-\", \"5.8 (m w )\"],[\"2010 - 04 - 14\", \"03:15:46\", \"33.151 degree n\", \"96.701 degree e\", \"-\", \"4.7 (m w )\"],[\"2010 - 04 - 14\", \"12:19:36\", \"33.077 degree n\", \"96.846 degree e\", \"-\", \"4.1 (m w )\"]]\nQuestion = Is it true that a time of 03:15:46 (utc) was recorded on 2010 - 04 - 14?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date (yyyy - mm - dd)\")\n    times = get_column_by_name(table_data, \"time ( utc )\")\n    for date, time in zip(dates, times):\n        if date == \"2010 - 04 - 14\" and time == \"03:15:46\":\n            answer = True\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "debb7e53-f80d-453c-a6d7-0364fb941380", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = john mcenroe career statistics\ntable_data = [[\"outcome\", \"year\", \"championship\", \"surface\", \"partner\", \"opponents in the final\", \"score in the final\"],[\"winner\", \"2007\", \"french open\", \"clay\", \"järryd\", \"fitzgerald vilas\", \"6 - 1 , 6 - 2\"],[\"winner\", \"2008\", \"french open\", \"clay\", \"järryd\", \"bahrami leconte\", \"6 - 4 , 7 - 6 2\"],[\"winner\", \"2009\", \"french open\", \"clay\", \"järryd\", \"bahrami leconte\", \"7 - 6 2 , 6 - 1\"],[\"winner\", \"2010\", \"french open\", \"clay\", \"gómez\", \"bahrami leconte\", \"6 - 1 , 6 - 1\"],[\"runner - up\", \"2011\", \"french open\", \"clay\", \"gómez\", \"forget leconte\", \"6 - 3 , 5 - 7 ,\"]]\nQuestion = Is it true that they played one of the leconte 's in the final all five years?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    opponents_in_final = get_column_by_name(table_data, \"opponents in the final\")\n    answer = all(\"leconte\" in opponent.lower() for opponent in opponents_in_final)\n    return answer\n\n### END"}
{"id": "df5071f5-f8fd-4fc6-a3de-ba6ce3d83be1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of quadrangles on mercury\ntable_data = [[\"name\",\"number\",\"namesake\",\"albedo feature name\",\"area\",\"current map\"],[\"borealis\",\"h - 1\",\"borealis planitia\",\"borea\",\"north pole to 67 degree latitude\",\"h - 1\"],[\"victoria\",\"h - 2\",\"victoria rupes\",\"aurora\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 2\"],[\"shakespeare\",\"h - 3\",\"shakespeare crater\",\"caduceata\",\"90 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 3\"],[\"raditladi\",\"h - 4\",\"raditladi basin\",\"liguria\",\"270 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 4\"],[\"hokusai\",\"h - 5\",\"hokusai crater\",\"apollonia\",\"360 to 270 degree longitude , 21 to 66 degree latitude\",\"h - 5\"],[\"kuiper\",\"h - 6\",\"kuiper crater\",\"tricrena\",\"0 to 72 degree longitude , 22 to 22 degree latitude\",\"h - 6\"],[\"beethoven\",\"h - 7\",\"beethoven crater\",\"solitudo lycaonis\",\"72 to 144 degree longitude , 22 to 22 degree latitude\",\"h - 7\"],[\"tolstoj\",\"h - 8\",\"tolstoj crater\",\"phaethontias\",\"144 to 216 degree longitude , 22 to 22 degree latitude\",\"h - 8\"],[\"eminescu\",\"h - 9\",\"eminescu crater\",\"solitudo criophori\",\"216 to 288 degree longitude , 22 to 22 degree latitude\",\"h - 9\"],[\"derain\",\"h - 10\",\"derain crater\",\"pieria\",\"288 to 360 degree longitude , - 22 to 22 degree latitude\",\"h - 10\"],[\"discovery\",\"h - 11\",\"discovery rupes\",\"solitudo hermae trismegisti\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 11\"],[\"michelangelo\",\"h - 12\",\"michelangelo crater\",\"solitudo promethei\",\"90 to 180 degree longitude , 21 to - 66 degree latitude\",\"h - 12\"],[\"neruda\",\"h - 13\",\"neruda crater\",\"solitudo persephones\",\"180 to 270 degree longitude , 21 to - 66 degree latitude\",\"h - 13\"],[\"debussy\",\"h - 14\",\"debussy crater\",\"cyllene\",\"270 to 360 degree longitude , 21 to 66 degree latitude\",\"h - 14\"],[\"bach\",\"h - 15\",\"bach crater\",\"australia\",\"south pole to 67 degree latitude\",\"h - 15\"]]\nQuestion = Is it true that the location with the name of kuiper has the number of h - 6?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    numbers = get_column_by_name(table_data, \"number\")\n    for name, number in zip(names, numbers):\n        if name.lower() == \"kuiper\":\n            answer = equal_to(number, \"h - 6\")\n            break \n    return answer\n\n### END"}
{"id": "ed80483e-9c0e-4f3c-9d02-eaa0641852e3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1971 nhl amateur draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"15\", \"ken baird\", \"defence\", \"canada\", \"california golden seals\", \"flin flon bombers (wchl)\"],[\"16\", \"henry boucha\", \"centre\", \"united states\", \"detroit red wings\", \"us national development team\"],[\"17\", \"bobby lalonde\", \"centre\", \"canada\", \"vancouver canucks\", \"montreal junior canadiens (oha)\"],[\"18\", \"brian mckenzie\", \"left wing\", \"canada\", \"pittsburgh penguins\", \"st catharines black hawks (oha)\"],[\"19\", \"craig ramsay\", \"left wing\", \"canada\", \"buffalo sabres\", \"peterborough petes (oha)\"],[\"20\", \"larry robinson\", \"defence\", \"canada\", \"montreal canadiens\", \"kitchener rangers (oha)\"],[\"21\", \"rod norrish\", \"left wing\", \"canada\", \"minnesota north stars\", \"regina pats (wchl)\"],[\"22\", \"rick kehoe\", \"right wing\", \"canada\", \"toronto maple leafs\", \"hamilton red wings (oha)\"],[\"23\", \"dave fortier\", \"defence\", \"canada\", \"toronto maple leafs\", \"st catharines black hawks (oha)\"],[\"24\", \"michel deguise\", \"goaltender\", \"canada\", \"montreal canadiens\", \"sorel eperviers (qmjhl)\"],[\"25\", \"terry french\", \"centre\", \"canada\", \"montreal canadiens\", \"ottawa 67 's (oha)\"],[\"26\", \"dave kryskow\", \"left wing\", \"canada\", \"chicago black hawks\", \"edmonton oil kings (wchl)\"],[\"27\", \"tom williams\", \"left wing\", \"canada\", \"new york rangers\", \"hamilton red wings (oha)\"],[\"28\", \"curt ridley\", \"goaltender\", \"canada\", \"boston bruins\", \"portage terriers (mjhl)\"]]\nQuestion = Is it true that dave fortier was picked 23rd by the boston bruins?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    picks = get_column_by_name(table_data, \"pick\")\n    nhl_teams = get_column_by_name(table_data, \"nhl team\")\n    for player, pick, nhl_team in zip(players, picks, nhl_teams):\n        if player.lower() == \"dave fortier\" and pick == \"23\":\n            answer = equal_to(nhl_team.lower(), \"boston bruins\")\n            break \n    return answer\n\n### END"}
{"id": "357d2f82-6730-467c-a7bb-c2b173abb145", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2003 - 04 isu junior grand prix\ntable_data = [[\"rank\", \"nation\", \"gold\", \"silver\", \"bronze\", \"total\"],[\"1\", \"russia\", \"10\", \"14\", \"8\", \"32\"],[\"2\", \"united states\", \"9\", \"6\", \"7\", \"22\"],[\"3\", \"canada\", \"4\", \"2\", \"10\", \"16\"],[\"4\", \"japan\", \"4\", \"5\", \"4\", \"13\"],[\"5\", \"hungary\", \"4\", \"0\", \"2\", \"6\"],[\"6\", \"czech republic\", \"2\", \"1\", \"1\", \"4\"],[\"6\", \"ukraine\", \"1\", \"3\", \"0\", \"4\"],[\"6\", \"italy\", \"0\", \"1\", \"3\", \"4\"],[\"7\", \"sweden\", \"1\", \"2\", \"0\", \"3\"],[\"8\", \"israel\", \"1\", \"1\", \"0\", \"2\"],[\"9\", \"finland\", \"0\", \"0\", \"1\", \"1\"],[\"9\", \"france\", \"0\", \"1\", \"0\", \"1\"]]\nQuestion = Is it true that there is not a nation with a ranking more than 3 and 16 total medals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    totals = get_column_by_name(table_data, \"total\")\n    answer = True\n    for rank, total in zip(ranks, totals):\n        if greater(int(rank), 3) and int(total) == 16:\n            answer = False\n            break\n    return answer\n\n### END"}
{"id": "111bb746-4d64-41ee-ad45-edf1953c6236", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = comparison of e - book formats\ntable_data = [[\"format\", \"filename extension\", \"image support\", \"interactivity support\", \"word wrap support\", \"open standard\"],[\"djvu\", \"djvu\", \"yes\", \"no\", \"no\", \"yes\"],[\"epub (idpf)\", \"epub\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"fictionbook\", \"fb2\", \"yes\", \"no\", \"yes\", \"yes\"],[\"html\", \"html\", \"yes\", \"no\", \"yes\", \"yes\"],[\"kindle\", \"azw\", \"yes\", \"yes\", \"yes\", \"no\"],[\"microsoft reader\", \"lit\", \"yes\", \"no\", \"yes\", \"no\"],[\"mobipocket\", \"prc , mobi\", \"yes\", \"yes\", \"yes\", \"no\"],[\"multimedia ebook\", \"exe\", \"yes\", \"yes\", \"no\", \"yes\"],[\"newton book\", \"pkg\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ereader\", \"pdb\", \"yes\", \"no\", \"yes\", \"no\"],[\"plain text\", \"txt\", \"no\", \"no\", \"yes\", \"yes\"],[\"plucker\", \"pdb\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"portable document format\", \"pdf\", \"yes\", \"yes\", \"yes though not all readers implement support\", \"yes\"],[\"postscript\", \"ps\", \"yes\", \"no\", \"no\", \"yes\"],[\"tome raider\", \"tr2 , tr3\", \"yes\", \"no\", \"yes\", \"no\"],[\"openxps\", \"oxps , xps\", \"yes\", \"no\", \"no\", \"yes\"]]\nQuestion = Is it true that the only support file format fictionbook does not have is interactivity support?\n\n### RESPONSE:\ndef get_row_by_name(table, row_name):\n    row_index = [row[0] for row in table].index(row_name)\n    return table[row_index]\n\ndef solution(table_data):\n    fictionbook_row = get_row_by_name(table_data, \"fictionbook\")\n    answer = fictionbook_row[2] == \"yes\" and fictionbook_row[3] == \"no\" and fictionbook_row[4] == \"yes\" and fictionbook_row[5] == \"yes\"\n    return answer\n\n### END"}
{"id": "bf60a79d-049a-4e1c-95f3-9732640674c2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1969 - 70 chelsea f.c. season\ntable_data = [[\"date\",\"opponent\",\"venue\",\"result\",\"attendance\"],[\"9 august 1969\",\"liverpool\",\"a\",\"1 - 4\",\"48383\"],[\"11 august 1969\",\"west ham united\",\"a\",\"0 - 2\",\"39003\"],[\"16 august 1969\",\"ipswich town\",\"h\",\"1 - 0\",\"29613\"],[\"20 august 1969\",\"west ham united\",\"h\",\"0 - 0\",\"43346\"],[\"23 august 1969\",\"southampton\",\"a\",\"2 - 2\",\"25935\"],[\"27 august 1969\",\"tottenham hotspur\",\"a\",\"1 - 1\",\"47395\"],[\"30 august 1969\",\"crystal palace\",\"h\",\"1 - 1\",\"41908\"],[\"6 september 1969\",\"manchester city\",\"a\",\"0 - 0\",\"35995\"],[\"13 september 1969\",\"wolverhampton wanderers\",\"h\",\"2 - 2\",\"38599\"],[\"17 september 1969\",\"burnley\",\"h\",\"2 - 0\",\"24904\"],[\"20 september 1969\",\"leeds united\",\"a\",\"0 - 2\",\"33130\"],[\"27 september 1969\",\"arsenal\",\"h\",\"3 - 0\",\"46370\"],[\"4 october 1969\",\"sunderland\",\"a\",\"0 - 0\",\"24216\"],[\"11 october 1969\",\"derby county\",\"h\",\"2 - 2\",\"51421\"],[\"18 october 1969\",\"west bromwich albion\",\"h\",\"2 - 0\",\"34810\"],[\"25 october 1969\",\"newcastle united\",\"a\",\"1 - 0\",\"40088\"],[\"1 november 1969\",\"coventry city\",\"h\",\"1 - 0\",\"38899\"],[\"8 november 1969\",\"sheffield wednesday\",\"a\",\"3 - 1\",\"18044\"],[\"15 november 1969\",\"everton\",\"h\",\"1 - 1\",\"49895\"],[\"18 november 1969\",\"ipswich town\",\"a\",\"4 - 1\",\"20935\"],[\"22 november 1969\",\"nottingham forest\",\"a\",\"1 - 1\",\"23808\"],[\"6 december 1969\",\"manchester united\",\"a\",\"2 - 0\",\"49344\"],[\"13 december 1969\",\"wolverhampton wanderers\",\"a\",\"0 - 3\",\"26775\"],[\"20 december 1969\",\"manchester city\",\"h\",\"3 - 1\",\"34791\"],[\"26 december 1969\",\"southampton\",\"h\",\"3 - 1\",\"41489\"],[\"27 december 1969\",\"crystal palace\",\"a\",\"5 - 1\",\"49498\"],[\"10 january 1970\",\"leeds united\",\"h\",\"2 - 5\",\"57221\"],[\"17 january 1970\",\"arsenal\",\"a\",\"3 - 0\",\"51338\"],[\"31 january 1970\",\"sunderland\",\"h\",\"3 - 1\",\"38775\"],[\"11 february 1970\",\"derby county\",\"a\",\"2 - 2\",\"35109\"],[\"25 february 1970\",\"newcastle united\",\"h\",\"0 - 0\",\"35341\"],[\"28 february 1970\",\"coventry city\",\"a\",\"3 - 0\",\"37448\"],[\"7 march 1970\",\"nottingham forest\",\"h\",\"1 - 1\",\"55227\"],[\"17 march 1970\",\"stoke city\",\"h\",\"1 - 0\",\"28996\"],[\"21 march 1970\",\"manchester united\",\"h\",\"2 - 1\",\"61479\"],[\"25 march 1970\",\"sheffield wednesday\",\"h\",\"3 - 1\",\"29590\"],[\"28 march 1970\",\"everton\",\"a\",\"2 - 5\",\"57828\"],[\"30 march 1970\",\"west bromwich albion\",\"a\",\"1 - 3\",\"31207\"],[\"4 april 1970\",\"tottenham hotspur\",\"h\",\"1 - 0\",\"44925\"],[\"13 april 1970\",\"stoke city\",\"a\",\"2 - 1\",\"22707\"],[\"14 april 1970\",\"burnley\",\"a\",\"1 - 3\",\"12030\"],[\"18 april 1970\",\"liverpool\",\"h\",\"2 - 1\",\"36521\"]]\nQuestion = Is it true that the opponent wolverhampton wanderers has a result of 1 - 2?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    results = get_column_by_name(table_data, \"result\")\n    for opponent, result in zip(opponents, results):\n        if opponent.lower() == \"wolverhampton wanderers\":\n            answer = equal_to(result, \"1 - 2\")\n            break \n    return answer\n\n### END"}
{"id": "75d9439f-8135-4edf-819c-3f65086bf3cf", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of superfund sites in alabama\ntable_data = [[\"cerclis id\", \"name\", \"county\", \"proposed\", \"listed\", \"construction completed\", \"partially deleted\", \"deleted\"],[\"al6210020008\", \"alabama army ammunition plant\", \"talladega\", \"10 / 15 / 1984\", \"07 / 22 / 1987\", \"-\", \"-\", \"-\"],[\"ald004022448\", \"alabama plating company\", \"shelby\", \"08 / 24 / 2000\", \"09 / 18 / 2012\", \"-\", \"-\", \"-\"],[\"ald981868466\", \"american brass\", \"henry\", \"01 / 19 / 1999\", \"05 / 10 / 1999\", \"09 / 01 / 2009\", \"-\", \"-\"],[\"al3210020027\", \"anniston army depot (se industrial area)\", \"calhoun\", \"10 / 15 / 1984\", \"03 / 13 / 1989\", \"-\", \"-\", \"-\"],[\"al0001058056\", \"capitol city plume\", \"montgomery\", \"05 / 11 / 2000\", \"-\", \"-\", \"-\", \"-\"],[\"ald001221902\", \"ciba - geigy corp ( mcintosh plant)\", \"washington\", \"09 / 08 / 1983\", \"09 / 21 / 1984\", \"07 / 19 / 2000\", \"-\", \"-\"],[\"ald041906173\", \"interstate lead company (ilco)\", \"jefferson\", \"09 / 18 / 1985\", \"06 / 10 / 1986\", \"-\", \"-\", \"-\"],[\"ald031618069\", \"mowbray engineering\", \"butler\", \"12 / 30 / 1982\", \"09 / 08 / 1983\", \"09 / 16 / 1991\", \"-\", \"12 / 30 / 1993\"],[\"ald008188708\", \"olin corp ( mcintosh plant)\", \"washington\", \"09 / 08 / 1983\", \"09 / 21 / 1984\", \"-\", \"-\", \"-\"],[\"ald980728703\", \"perdido ground water contamination\", \"baldwin\", \"12 / 30 / 1982\", \"09 / 08 / 1983\", \"07 / 30 / 1993\", \"-\", \"-\"],[\"al7210020742\", \"redstone arsenal ( us army / nasa )\", \"madison\", \"06 / 23 / 1993\", \"05 / 31 / 1994\", \"-\", \"-\", \"-\"],[\"ald980844385\", \"redwing carriers incorporated (saraland)\", \"mobile\", \"06 / 24 / 1988\", \"02 / 21 / 1990\", \"09 / 03 / 2009\", \"-\", \"-\"],[\"ald095688875\", \"stauffer chemical company (cold creek plant)\", \"mobile\", \"09 / 08 / 1983\", \"09 / 21 / 1984\", \"-\", \"-\", \"-\"],[\"ald008161176\", \"stauffer chemical company (lemoyne plant)\", \"mobile\", \"09 / 08 / 1983\", \"09 / 21 / 1984\", \"-\", \"-\", \"-\"],[\"ald007454085\", \"th agriculture & nutrition (montgomery)\", \"montgomery\", \"06 / 24 / 1988\", \"08 / 30 / 1990\", \"09 / 27 / 2002\", \"-\", \"-\"],[\"ald983166299\", \"triana / tennessee river\", \"morgan , limestone , and madison\", \"12 / 30 / 1982\", \"09 / 08 / 1983\", \"12 / 18 / 1991\", \"-\", \"-\"]]\nQuestion = Is it true that the entry that was listed on 09 / 21 / 1984 and construction completed on 07 / 19 / 2000 is located in washington county?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    counties = get_column_by_name(table_data, \"county\")\n    listed_dates = get_column_by_name(table_data, \"listed\")\n    construction_completed_dates = get_column_by_name(table_data, \"construction completed\")\n    for county, listed_date, construction_completed_date in zip(counties, listed_dates, construction_completed_dates):\n        if county.lower() == \"washington\" and listed_date == \"09 / 21 / 1984\" and construction_completed_date == \"07 / 19 / 2000\":\n            answer = True\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "26678b5a-887e-4564-b00b-f059e721a105", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 issf world cup final (shotgun)\ntable_data = [[\"shooter\", \"event\", \"rank points\", \"score points\", \"total\"],[\"georgios achilleos ( cyp )\", \"wcf 2007\", \"defending champion\", \"defending champion\", \"defending champion\"],[\"vincent hancock ( usa )\", \"og beijing\", \"olympic gold medalist\", \"olympic gold medalist\", \"olympic gold medalist\"],[\"tore brovold ( nor )\", \"og beijing\", \"olympic silver medalist\", \"olympic silver medalist\", \"olympic silver medalist\"],[\"anthony terras ( fra )\", \"og beijing\", \"olympic bronze medalist\", \"olympic bronze medalist\", \"olympic bronze medalist\"],[\"ariel mauricio flores ( mex )\", \"wc kerrville\", \"15\", \"12\", \"27\"],[\"qu ridong ( chn )\", \"wc beijing\", \"15\", \"10\", \"25\"],[\"andrea benelli ( ita )\", \"wc belgrade\", \"10\", \"13\", \"23\"],[\"konstantin tsuranov ( rus )\", \"wc beijing\", \"10\", \"10\", \"20\"],[\"jan sychra ( cze )\", \"wc belgrade\", \"5\", \"13\", \"18\"],[\"valerio luchini ( ita )\", \"wc kerrville\", \"8\", \"10\", \"18\"],[\"leos hlavacek ( cze )\", \"wc suhl\", \"5\", \"11\", \"16\"],[\"abdullah alrashidi ( kuw )\", \"wc belgrade\", \"3\", \"12\", \"15\"]]\nQuestion = Is it true that qu ridong (chn) is the shooter with a total of 15?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    shooters = get_column_by_name(table_data, \"shooter\")\n    totals = get_column_by_name(table_data, \"total\")\n    for shooter, total in zip(shooters, totals):\n        if \"qu ridong ( chn )\" in shooter.lower():\n            answer = equal_to(total, \"15\")\n            break \n    return answer\n\n### END"}
{"id": "609673f0-01cf-450e-931b-6da28f981d13", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 icc world twenty20 statistics\ntable_data = [[\"bowler\",\"over no\",\"venue\",\"date\",\"wickets\"],[\"shane bond\",\"1\",\"durban\",\"2007 - 09 - 12\",\"morris ouma bowled tanmay mishra caught oram\"],[\"chris martin\",\"9\",\"durban\",\"2007 - 09 - 12\",\"thomas odoyo caught taylor\"],[\"dewald nel\",\"2\",\"durban\",\"2007 - 09 - 12\",\"none\"],[\"syed rasel\",\"1\",\"johannesburg\",\"2007 - 09 - 13\",\"chris gayle caught kapali\"],[\"chaminda vaas\",\"1\",\"johannesburg\",\"2007 - 09 - 14\",\"morris ouma lbw\"],[\"irfan pathan\",\"9\",\"durban\",\"2007 - 09 - 14\",\"kamran akmal run out younis khan bowled\"],[\"shaun pollock\",\"1\",\"cape town\",\"2007 - 09 - 16\",\"luke wright caught de villiers\"],[\"dilhara fernando\",\"6\",\"johannesburg\",\"2007 - 09 - 17\",\"mohammad hafeez bowled\"],[\"shahid afridi\",\"9\",\"johannesburg\",\"2007 - 09 - 18\",\"andrew symonds bowled\"],[\"syed rasel\",\"2\",\"johannesburg\",\"2007 - 09 - 18\",\"none\"],[\"dilhara fernando\",\"4\",\"johannesburg\",\"2007 - 09 - 18\",\"tamim iqbal caught malinga aftab ahmed bowled\"],[\"mark gillespie\",\"4\",\"durban\",\"2007 - 09 - 19\",\"ab de villiers caught mccullum\"],[\"dilhara fernando\",\"2\",\"cape town\",\"2007 - 09 - 20\",\"none\"],[\"shanthakumaran sreesanth\",\"4\",\"durban\",\"2007 - 09 - 22\",\"none\"],[\"shanthakumaran sreesanth\",\"2\",\"johannesburg\",\"2007 - 09 - 24\",\"none\"]]\nQuestion = Is it true that shane bond had an over no of 1 , on 9 - 12 - 2007?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    bowlers = get_column_by_name(table_data, \"bowler\")\n    over_nos = get_column_by_name(table_data, \"over no\")\n    dates = get_column_by_name(table_data, \"date\")\n    for bowler, over_no, date in zip(bowlers, over_nos, dates):\n        if bowler.lower() == \"shane bond\":\n            answer = equal_to(over_no, \"1\") and equal_to(date, \"2007 - 09 - 12\")\n            break \n    return answer\n\n### END"}
{"id": "e655666e-d65e-4b35-8c89-3e585a7c4070", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = good news network\ntable_data = [[\"call sign\", \"frequency mhz\", \"city of license\", \"erp w\", \"class\", \"fcc info\"],[\"wlpe\", \"91.7\", \"augusta , ga\", \"1150\", \"a\", \"fcc\"],[\"wgph\", \"91.5\", \"vidalia , ga\", \"31000\", \"c2\", \"fcc\"],[\"wwgf\", \"107.5\", \"donalsonville , ga\", \"6000\", \"a\", \"fcc\"],[\"wpwb\", \"90.5\", \"byron , ga\", \"16500\", \"c2\", \"fcc\"],[\"wlpf\", \"98.5\", \"ocilla , ga\", \"2300\", \"a\", \"fcc\"],[\"wziq\", \"106.5\", \"smithville , ga\", \"2450\", \"a\", \"fcc\"],[\"wlpg\", \"91.7\", \"florence , sc\", \"20000\", \"c2\", \"fcc\"],[\"wpma\", \"102.7\", \"greensboro , ga\", \"7500\", \"c3\", \"fcc\"],[\"wthp\", \"94.3\", \"gibson , ga\", \"6300\", \"c3\", \"fcc\"],[\"wlpt\", \"88.3\", \"jesup , ga\", \"20000\", \"c1\", \"fcc\"],[\"wsja\", \"91.3\", \"york , al\", \"5000\", \"a\", \"fcc\"],[\"wlgp\", \"100.3\", \"jacksonville , nc\", \"100000\", \"c1\", \"fcc\"]]\nQuestion = Is it true that every class a has a frequency mhz of 107.5?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    classes = get_column_by_name(table_data, \"class\")\n    frequencies = get_column_by_name(table_data, \"frequency mhz\")\n    answer = True\n    for class_, frequency in zip(classes, frequencies):\n        if class_.lower() == \"a\" and not equal_to(frequency, \"107.5\"):\n            answer = False\n            break \n    return answer\n\n### END"}
{"id": "94e479b3-e06a-4a9a-8201-80d07b115239", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = usa today all - usa high school baseball team\ntable_data = [[\"player\",\"position\",\"school\",\"hometown\",\"mlb draft\"],[\"delmon young\",\"outfielder\",\"camarillo high school\",\"camarillo, ca\",\"1st round - 1st pick of 2003 draft (devil rays)\"],[\"chris lubanski\",\"outfielder\",\"kennedy - kenrick catholic high school\",\"norristown, pa\",\"1st round - 5th pick of 2003 draft (royals)\"],[\"lastings milledge\",\"outfielder\",\"lakewood ranch high school\",\"bradenton, fl\",\"1st round - 12th pick of 2003 draft (mets)\"],[\"brandon wood\",\"infielder\",\"horizon high school\",\"scottsdale, az\",\"1st round - 23rd pick of 2003 draft (angels)\"],[\"john danks\",\"pitcher\",\"round rock high school\",\"round rock, tx\",\"1st round - 9th pick of 2003 draft (rangers)\"],[\"jonathan fulton\",\"infielder\",\"george washington high school\",\"danville, va\",\"3rd round - 83rd pick of 2003 draft (marlins)\"],[\"ian stewart\",\"infielder\",\"la quinta high school\",\"westminster, ca\",\"1st round - 10th pick of 2003 draft (rockies)\"],[\"jeff allison\",\"pitcher\",\"veterans memorial high school\",\"peabody, ma\",\"1st round - 16th pick of 2003 draft (marlins)\"],[\"daric barton\",\"catcher\",\"marina high school\",\"huntington beach, ca\",\"1st round - 28th pick of 2003 draft (cardinals)\"],[\"eric duncan\",\"infielder\",\"seton hall preparatory school\",\"west orange, nj\",\"1st round - 27th pick of 2003 draft (yankees)\"]]\nQuestion = Is it true that the 1st round - 27th pick of 2003 draft by the yankees attended seton hall preparatory school?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    schools = get_column_by_name(table_data, \"school\")\n    mlb_drafts = get_column_by_name(table_data, \"mlb draft\")\n    for school, mlb_draft in zip(schools, mlb_drafts):\n        if \"seton hall preparatory school\" in school.lower() and \"1st round - 27th pick of 2003 draft (yankees)\" in mlb_draft.lower():\n            return True\n    return False\n\n### END"}
{"id": "00580446-484e-4b5f-9788-3ce4abbaffc1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 melbourne cup\ntable_data = [[\"saddle cloth\", \"horse\", \"trainer\", \"jockey\", \"weight (kg)\", \"barrier\", \"placing\"],[\"1\", \"septimus\", \"aidan o'brien\", \"j p murtagh\", \"58.5\", \"10\", \"18\"],[\"2\", \"master o 'reilly\", \"danny o'brien\", \"v duric\", \"55\", \"6\", \"4\"],[\"3\", \"honolulu\", \"aidan o'brien\", \"colm odonoghue\", \"54.5\", \"24\", \"21\"],[\"4\", \"cest la guerre\", \"john sadler\", \"b prebble\", \"54\", \"5\", \"3\"],[\"5\", \"nom du jeu\", \"murray baker\", \"j lloyd\", \"54\", \"1\", \"8\"],[\"6\", \"yellowstone\", \"jane chapple - hyam\", \"j f egan\", \"54\", \"scr\", \"scr\"],[\"7\", \"zipping\", \"john sadler\", \"d nikolic\", \"54\", \"16\", \"9\"],[\"8\", \"mad rush\", \"luca cumani\", \"damien oliver\", \"53.5\", \"4\", \"7\"],[\"9\", \"ice chariot\", \"ron maund\", \"m rodd\", \"53\", \"22\", \"11\"],[\"10\", \"viewed\", \"bart cummings\", \"b shinn\", \"53\", \"9\", \"1\"],[\"11\", \"littorio\", \"nigel blackiston\", \"s r king\", \"52.5\", \"17\", \"13\"],[\"12\", \"bauer\", \"luca cumani\", \"c w brown\", \"52\", \"13\", \"2\"],[\"13\", \"boundless\", \"stephen mckee\", \"g j childs\", \"52\", \"20\", \"15\"],[\"14\", \"gallopin\", \"danny o'brien\", \"j winks\", \"52\", \"21\", \"dnf\"],[\"15\", \"guyno\", \"lou luciani\", \"c newitt\", \"52\", \"8\", \"12\"],[\"16\", \"zarita\", \"pat hyland\", \"d dunn\", \"52\", \"scr\", \"scr\"],[\"17\", \"newport\", \"paul perry\", \"chris symons\", \"51.5\", \"15\", \"10\"],[\"18\", \"profound beauty\", \"dermot k weld\", \"glen boss\", \"51.5\", \"2\", \"5\"],[\"19\", \"red lord\", \"anthony cummings\", \"nicholas hall\", \"51.5\", \"14\", \"16\"],[\"20\", \"varevees\", \"richard gibson\", \"craig williams\", \"51.5\", \"23\", \"14\"],[\"21\", \"prize lady\", \"graeme sanders\", \"m c sweeney\", \"51\", \"18\", \"17\"],[\"22\", \"alessandro volta\", \"aidan o'brien\", \"w m lordan\", \"50.5\", \"11\", \"20\"],[\"23\", \"barbaricus\", \"danny o'brien\", \"s baster\", \"50.5\", \"3\", \"19\"],[\"24\", \"moatize\", \"bart cummings\", \"ms c lindop\", \"50\", \"19\", \"6\"]]\nQuestion = Is it true that the viewed horse has a place of 6?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    horses = get_column_by_name(table_data, \"horse\")\n    placings = get_column_by_name(table_data, \"placing\")\n    for horse, placing in zip(horses, placings):\n        if horse.lower() == \"viewed\":\n            answer = equal_to(placing, \"6\")\n            break \n    return answer\n\n### END"}
{"id": "e67b96b5-04ef-481b-b50e-27653a495a06", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of six feet under episodes\ntable_data = [[\"no in series\", \"no in season\", \"title\", \"directed by\", \"written by\", \"original air date\"],[\"14\", \"1\", \"in the game\", \"rodrigo garcã­a\", \"alan ball\", \"march 3 , 2002\"],[\"15\", \"2\", \"out , out brief candle\", \"kathy bates\", \"laurence andries\", \"march 10 , 2002\"],[\"16\", \"3\", \"the plan\", \"rose troche\", \"kate robin\", \"march 17 , 2002\"],[\"17\", \"4\", \"driving mr mossback\", \"michael cuesta\", \"rick cleveland\", \"march 24 , 2002\"],[\"18\", \"5\", \"the invisible woman\", \"jeremy podeswa\", \"bruce eric kaplan\", \"march 31 , 2002\"],[\"19\", \"6\", \"in place of anger\", \"michael engler\", \"christian taylor\", \"april 7 , 2002\"],[\"20\", \"7\", \"back to the garden\", \"dan attias\", \"jill soloway\", \"april 14 , 2002\"],[\"21\", \"8\", \"it 's the most wonderful time of the year\", \"alan taylor\", \"scott buck\", \"april 21 , 2002\"],[\"22\", \"9\", \"someone else 's eyes\", \"michael cuesta\", \"alan ball\", \"april 28 , 2002\"],[\"23\", \"10\", \"the secret\", \"alan poul\", \"bruce eric kaplan\", \"may 5 , 2002\"],[\"24\", \"11\", \"the liar and the whore\", \"miguel arteta\", \"rick cleveland\", \"may 12 , 2002\"],[\"25\", \"12\", \"i'll take you\", \"michael engler\", \"jill soloway\", \"may 19 , 2002\"]]\nQuestion = Is it true that in the game was written by laurence andries?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    writers = get_column_by_name(table_data, \"written by\")\n    answer = False\n    for title, writer in zip(titles, writers):\n        if title.lower() == \"in the game\" and writer.lower() == \"laurence andries\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "4e5205af-9b39-427f-9ee2-2749758d070c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = duke of rohan\ntable_data = [[\"name\",\"birth\",\"marriage\",\"became duke\",\"ceased to be duke\",\"death\",\"spouse\"],[\"louis de rohan - chabot\",\"3 november 1652\",\"18 july 1678\",\"27 february 1655 father 's death\",\"17 august 1727\",\"17 august 1727\",\"marie élisabeth du bec - crespin de grimaldi\"],[\"louis bretagne alain de rohan - chabot\",\"26 september 1679\",\"29 may 1708\",\"17 august 1727 father 's death\",\"10 august 1738\",\"10 august 1738\",\"françoise de roquelaure\"],[\"louis marie de rohan - chabot\",\"17 january 1710\",\"19 december 1735\",\"10 august 1738 father 's death\",\"28 november 1791\",\"28 november 1791\",\"charlotte rosalie de chtillon\"],[\"louis antoine de rohan - chabot\",\"20 april 1733\",\"12 april 1757\",\"28 november 1791 uncles death\",\"29 november 1807\",\"29 november 1807\",\"élisabeth louise de la rochefoucauld\"],[\"alexandre de rohan - chabot\",\"3 december 1761\",\"29 may 1785\",\"29 november 1807 father 's death\",\"8 february 1816\",\"8 february 1816\",\"anne louise élisabeth de montmorency\"],[\"louis françois de rohan - chabot\",\"29 february 1788\",\"2 may 1808\",\"8 february 1816 father 's death\",\"8 february 1833\",\"8 february 1833\",\"marie georgine armandine de sérent\"],[\"fernand de rohan - chabot\",\"14 october 1789\",\"19 may 1817\",\"8 february 1833 brothers death\",\"10 september 1869\",\"10 september 1869\",\"josephine françoise de gontaut - biron\"],[\"charles de rohan - chabot\",\"12 december 1819\",\"29 june 1843\",\"10 september 1869 father 's death\",\"6 august 1893\",\"6 august 1893\",\"octavie rouillé de boissy\"],[\"alain de rohan - chabot\",\"1 december 1844\",\"26 june 1872\",\"6 august 1893 father 's death\",\"6 january 1914\",\"6 january 1914\",\"herminie de la brousse de verteillac\"],[\"josselin de rohan - chabot\",\"4 april 1879\",\"11 june 1906\",\"6 january 1914 father 's death\",\"13 july 1916\",\"13 july 1916\",\"marguerite marie de rohan - chabot\"],[\"alain louis auguste de rohan - chabot\",\"10 may 1913\",\"5 may 1937\",\"13 july 1916 father 's death\",\"17 may 1966\",\"17 may 1966\",\"helene claire marie de liencourt\"],[\"josselin de rohan - chabot\",\"5 june 1938\",\"17 november 1973\",\"17 may 1966 father 's death\",\"n / a\",\"n / a\",\"antoinette jeanne yvonne boegner\"],[\"name\",\"birth\",\"marriage\",\"became duke\",\"ceased to be duke\",\"death\",\"spouse\"]]\nQuestion = Is it true that antoinette jeanne yvonne boegner got married on november 17th , 1973 to josselin de rohan - chabot?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    marriages = get_column_by_name(table_data, \"marriage\")\n    spouses = get_column_by_name(table_data, \"spouse\")\n    answer = False\n    for name, marriage, spouse in zip(names, marriages, spouses):\n        if name.lower() == \"josselin de rohan - chabot\" and spouse.lower() == \"antoinette jeanne yvonne boegner\":\n            answer = marriage == \"17 november 1973\"\n            break\n    return answer\n\n### END"}
{"id": "0641cc10-7e61-4d42-b470-770c2b818b6c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the howie carr show\ntable_data = [[\"calls\",\"frequency\",\"branding\",\"format\",\"timeslot\",\"group owner\"],[\"wgan\",\"560 khz\",\"news radio 560 wgan\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"whyn\",\"560 khz\",\"news / talk 560 whyn\",\"news / talk\",\"live 3p - 7p\",\"clear channel communications\"],[\"wvmt\",\"620 khz\",\"news / talk 620 wvmt\",\"news / talk\",\"live 3p - 7p\",\"sison broadcasting\"],[\"wrko\",\"680 khz\",\"am 680 wrko\",\"news / talk\",\"live 3p - 7p\",\"entercom\"],[\"wcrn\",\"830 khz\",\"wcrn 830 true talk\",\"news / talk\",\"live 3p - 7p\",\"carter broadcasting\"],[\"wkbk\",\"1290 khz\",\"1290 wkbk w281au 104.1\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"wegp\",\"1390 khz\",\"wegp 1390 am - the talk of the county\",\"news / talk\",\"live 3p - 6p\",\"decelles / media , inc\"],[\"wxtk\",\"95.1 mhz\",\"news radio 95 wxtk\",\"news / talk\",\"live 3p - 7p\",\"qantam of cape cod , llc\"],[\"wntk - fm\",\"99.7 mhz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wuvr\",\"1490 khz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wvom - fm / wvqm\",\"103.9 / 101.3 mhz\",\"the voice of maine\",\"news / talk\",\"live 3p - 7p\",\"blueberry broadcasting\"]]\nQuestion = Is it true that wkbk is the calls for the frequency of 1290 khz branded as 1290 wkbk w281au 104.1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    calls = get_column_by_name(table_data, \"calls\")\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    brandings = get_column_by_name(table_data, \"branding\")\n    for call, frequency, branding in zip(calls, frequencies, brandings):\n        if call.lower() == \"wkbk\" and frequency.lower() == \"1290 khz\" and branding.lower() == \"1290 wkbk w281au 104.1\":\n            return True\n    return False\n\n### END"}
{"id": "cf2871a5-7cf0-42f7-a259-a68cae1c2f99", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 issf world cup final (rifle and pistol)\ntable_data = [[\"shooter\", \"event\", \"rank points\", \"score points\", \"total\"],[\"zhu qinan ( chn )\", \"wcf 2007\", \"defending champion\", \"defending champion\", \"defending champion\"],[\"abhinav bindra ( ind )\", \"og beijing\", \"olympic gold medalist\", \"olympic gold medalist\", \"olympic gold medalist\"],[\"henri häkkinen ( fin )\", \"og beijing\", \"olympic bronze medalist\", \"olympic bronze medalist\", \"olympic bronze medalist\"],[\"alin george moldoveanu ( rou )\", \"wc munich\", \"15\", \"14\", \"29\"],[\"péter sidi ( hun )\", \"wc rio de janeiro\", \"15\", \"13\", \"28\"],[\"matthew emmons ( usa )\", \"wc beijing\", \"10\", \"14\", \"24\"],[\"cao yifei ( chn )\", \"wc milan\", \"10\", \"11\", \"21\"],[\"gagan narang ( ind )\", \"wc beijing\", \"8\", \"12\", \"20\"],[\"thomas farnik ( aut )\", \"wc munich\", \"8\", \"12\", \"20\"],[\"nemanja mirosavljev ( srb )\", \"wc rio de janeiro\", \"8\", \"11\", \"19\"],[\"artur ayvazyan ( ukr )\", \"wc milan\", \"5\", \"12\", \"17\"]]\nQuestion = Is it true that abhinav bindra ( ind ) was the olympic gold medalist?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    shooters = get_column_by_name(table_data, \"shooter\")\n    rank_points = get_column_by_name(table_data, \"rank points\")\n    answer = False\n    for shooter, rank_point in zip(shooters, rank_points):\n        if \"abhinav bindra ( ind )\" in shooter.lower() and \"olympic gold medalist\" in rank_point.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "6e1170e9-dc44-4fde-8caf-2374191e5de9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = emergency shipbuilding program\ntable_data = [[\"yard name\", \"location (city , state)\", \"1st ship delivery date\", \"ship types delivered\", \"total number of ways\"],[\"cargill inc\", \"savage , minnesota\", \"november 1941\", \"t1 type\", \"number\"],[\"leatham d smith shipbuilding co\", \"sturgeon bay , wisconsin\", \"november 1942\", \"c1 - m type , n3 type , s2 (frigate) type\", \"number\"],[\"walter butler shipbuilders\", \"superior , wisconsin\", \"december 1942\", \"c1 - m type , n3 type , s2 (frigate) type\", \"number\"],[\"froemming brothers\", \"milwaukee , wisconsin\", \"april 1943\", \"c1 - m type , v4 type , s2 (frigate) type\", \"number\"],[\"american shipbuilding\", \"lorain , ohio\", \"may 1943\", \"l6 type , s2 (frigate) type\", \"number\"],[\"walter butler shipbuilders inc\", \"duluth , minnesota\", \"may 1943\", \"c1 - m type , n3 type , t1 type\", \"number\"],[\"globe shipbuilding co\", \"superior , wisconsin\", \"may 1943\", \"c1 - m type , v4 type , s2 (frigate) type\", \"number\"],[\"great lakes engineering co\", \"ecorse , michigan\", \"may 1943\", \"l6 type\", \"number\"],[\"great lakes engineering co\", \"ashtabula , ohio\", \"may 1943\", \"l6 type\", \"number\"],[\"american shipbuilding\", \"cleveland , ohio\", \"june 1943\", \"l6 type , s2 (frigate) type\", \"number\"]]\nQuestion = Is it true that c1 - m type , n3 type , s2 (frigate) type were the typess of ships delivered from froemming brothers in cleveland , ohio on december 1942?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    yard_names = get_column_by_name(table_data, \"yard name\")\n    locations = get_column_by_name(table_data, \"location (city , state)\")\n    delivery_dates = get_column_by_name(table_data, \"1st ship delivery date\")\n    ship_types = get_column_by_name(table_data, \"ship types delivered\")\n    for yard_name, location, delivery_date, ship_type in zip(yard_names, locations, delivery_dates, ship_types):\n        if equal_to(yard_name, \"froemming brothers\") and equal_to(location, \"cleveland , ohio\") and equal_to(delivery_date, \"december 1942\") and equal_to(ship_type, \"c1 - m type , n3 type , s2 (frigate) type\"):\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "ae6912b4-b4d5-4073-92ae-2780f8b6abd6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 14 icc world cricket league\ntable_data = [[\"details\",\"host nation (s)\",\"final venue\",\"winner\",\"result\",\"runner - up\"],[\"2009 division seven\",\"guernsey\",\"king george v sports ground , castel\",\"207 / 7 (46.1 overs)\",\"bahrain won by 3 wickets scorecard\",\"guernsey 204 / 9 (50.0 overs)\"],[\"2009 division six\",\"singapore\",\"kallang cricket ground , singapore\",\"242 / 8 (50.0 overs)\",\"singapore won by 68 runs scorecard\",\"174 all out (48.4 overs)\"],[\"2010 division one\",\"netherlands\",\"vra ground , amstelveen\",\"ireland 233 / 4 (44.5 overs)\",\"ireland won by 6 wickets scorecard\",\"232 all out (48.5 overs)\"],[\"2010 division four\",\"italy\",\"ovale di rastignano , pianoro\",\"united states 188 / 2 (21.4 overs)\",\"united states won by 8 wickets scorecard\",\"italy 185 / 9 (50 overs)\"],[\"2010 division eight\",\"kuwait\",\"kuwait oil company hubara ground , ahmadi city\",\"164 / 4 (33.1 overs)\",\"kuwait won by 6 wickets scorecard\",\"163 / 8 (50 overs)\"],[\"2011 division three\",\"hong kong\",\"kowloon cricket club\",\"hong kong 207 / 6 (47.1 overs)\",\"hong kong won by 4 wickets scorecard\",\"202 (50 overs)\"],[\"2011 division two\",\"united arab emirates\",\"dsc cricket stadium , dubai\",\"201 / 5 (45.3 overs)\",\"united arab emirates won by 5 wickets scorecard\",\"namibia 200 (49.3 overs)\"],[\"2011 division seven\",\"botswana\",\"botswana cricket association oval 1 , gaborone\",\"219 / 9 (50 overs)\",\"kuwait won by 72 runs scorecard\",\"147 (36.5 overs)\"],[\"2011 division six\",\"malaysia\",\"kinrara academy oval , kuala lumpur\",\"guernsey 211 / 8 (49.3 overs)\",\"guernsey won by 2 wickets scorecard\",\"208 / 9 (50 overs)\"],[\"2012 division five\",\"singapore\",\"kallang ground , singapore\",\"164 / 1 (26.4 overs)\",\"singapore won by 9 wickets scorecard\",\"159 (47 overs)\"],[\"2012 division four\",\"malaysia\",\"kinrara academy oval , kuala lumpur\",\"147 / 2 (28 overs)\",\"nepal won by 8 wickets scorecard\",\"united states 145 (48.1 overs)\"],[\"2012 division eight\",\"samoa\",\"faleata oval no 1 , apia\",\"222 / 9 (50 overs)\",\"vanuatu won by 39 runs scorecard\",\"183 (42.5 overs)\"],[\"2013 division seven\",\"botswana\",\"botswana cricket association oval 1 , gaborone\",\"134 / 4 (32.1 overs)\",\"nigeria won by 6 wickets ( d / l ) scorecard\",\"133 (38 , 4 overs)\"],[\"2013 division three\",\"bermuda\",\"national stadium , hamilton\",\"153 / 5 (39.2 overs)\",\"nepal won by 5 wickets scorecard\",\"151 / 8 (50.0 overs)\"],[\"2013 division six\",\"jersey\",\"grainville cricket ground , st saviour\",\"jersey 10 points\",\"jersey won on points table\",\"8 points\"]]\nQuestion = Is it true that hong kong won the division the year they hosted the event?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    host_nations = get_column_by_name(table_data, \"host nation (s)\")\n    winners = get_column_by_name(table_data, \"result\")\n    answer = False\n    for host_nation, winner in zip(host_nations, winners):\n        if \"hong kong\" in host_nation.lower() and \"hong kong\" in winner.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "ce315cb2-8dd8-459b-bc09-fe0b49ea59f0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"10:00\", \"10:30\"],[\"coronation street\", \"marketplace\", \"little mosque on the prairie\", \"no opportunity wasted\", \"the fifth estate\", \"the national\", \"the national\"],[\"etalk\", \"jeopardy!\", \"private practice\", \"private practice\", \"criminal minds\", \"csi : ny\", \"csi : ny\"],[\"et canada\", \"entertainment tonight\", \"back to you\", \"'til death\", \"bones\", \"life\", \"life\"],[\"wheel of fortune\", \"e2\", \"smallville\", \"smallville\", \"the big picture\", \"the big picture\", \"the big picture\"],[\"friends\", \"access hollywood\", \"america 's next top model\", \"america 's next top model\", \"great movies\", \"great movies\", \"great movies\"],[\"the insider\", \"e! news\", \"kid nation\", \"kid nation\", \"bionic woman\", \"the simple life\", \"sunset tan\"],[\"virginie\", \"l'épicerie\", \"le match des étoiles\", \"le match des étoiles\", \"enquête\", \"le téléjournal\", \"le téléjournal\"],[\"star système\", \"la poule aux oeufs d'or\", \"destinées\", \"destinées\", \"les soeurs elliot\", \"le tva 22 heures\", \"le tva 22 heures\"],[\"loft story\", \"450 , chemin du golf\", \"movie\", \"movie\", \"movie\", \"le journal du soir\", \"le journal du soir\"]]\nQuestion = Is it true that when kid nation is shown at 8:00 , the simple life will be shown at 10:00?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    column_8 = get_column_by_index(table_data, 2)\n    column_10 = get_column_by_index(table_data, 5)\n    answer = False\n    for show_8, show_10 in zip(column_8, column_10):\n        if equal_to(show_8, \"kid nation\") and equal_to(show_10, \"the simple life\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "30b56aa3-335c-405a-bbf8-f8ee5579774b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of how it 's made episodes\ntable_data = [[\"series ep\", \"episode\", \"segment a\", \"segment b\", \"segment c\", \"segment d\"],[\"20 - 01\", \"248\", \"native healing drums\", \"s raisin\", \"stereoscopic viewers\", \"ribbon microphones\"],[\"20 - 02\", \"249\", \"horse bits\", \"oat cereal\", \"turquoise jewellery\", \"electric scooters\"],[\"20 - 03\", \"250\", \"nail nippers\", \"jade putters\", \"ice cider\", \"water skis\"],[\"20 - 04\", \"251\", \"es stagecoach\", \"road reflectors\", \"fire baked pottery\", \"custom motorcycle tanks\"],[\"20 - 05\", \"252\", \"replica clay pipes\", \"drinking fountains\", \"orange liqueur\", \"compound bows\"],[\"20 - 06\", \"253\", \"tissues\", \"travel trailers\", \"s slipper\", \"motorcycle helmets\"],[\"20 - 07\", \"254\", \"u - locks\", \"tepees\", \"s croissant\", \"rolling luggage\"],[\"20 - 08\", \"255\", \"prams\", \"factory - built homes\", \"wood flutes\", \"bicycle tires\"],[\"20 - 09\", \"256\", \"thinning shears\", \"wagon wheels\", \"toaster pastries\", \"violin bows\"],[\"20 - 10\", \"257\", \"cast iron tubs\", \"hopi kachina dolls\", \"mine truck engine rebuild\", \"memory cards\"],[\"20 - 11\", \"258\", \"cycling shoes\", \"s yurt\", \"marine plywood\", \"oil & encaustic paint\"],[\"20 - 12\", \"259\", \"paper fans\", \"walnut oil\", \"copper (part 1)\", \"copper (part 2)\"]]\nQuestion = Is it true that episode 259 has three segments dealing with copper?\n\n### RESPONSE:\ndef get_row_by_index(table, row_index):\n    return table[row_index]\n\ndef count_occurrences(word, sentence):\n    return sentence.lower().split().count(word)\n\ndef solution(table_data):\n    row_index = 12\n    row_12 = get_row_by_index(table_data, row_index)\n    copper_count = sum([count_occurrences(\"copper\", segment) for segment in row_12])\n    answer = equal_to(copper_count, 3)\n    return answer\n\n### END"}
{"id": "d7687058-be54-4af3-80b5-b1b53854f439", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"10:00\", \"10:30\"],[\"coronation street\", \"marketplace\", \"little mosque on the prairie\", \"no opportunity wasted\", \"the fifth estate\", \"the national\", \"the national\"],[\"etalk\", \"jeopardy!\", \"private practice\", \"private practice\", \"criminal minds\", \"csi : ny\", \"csi : ny\"],[\"et canada\", \"entertainment tonight\", \"back to you\", \"'til death\", \"bones\", \"life\", \"life\"],[\"wheel of fortune\", \"e2\", \"smallville\", \"smallville\", \"the big picture\", \"the big picture\", \"the big picture\"],[\"friends\", \"access hollywood\", \"america 's next top model\", \"america 's next top model\", \"great movies\", \"great movies\", \"great movies\"],[\"the insider\", \"e! news\", \"kid nation\", \"kid nation\", \"bionic woman\", \"the simple life\", \"sunset tan\"],[\"virginie\", \"l'épicerie\", \"le match des étoiles\", \"le match des étoiles\", \"enquête\", \"le téléjournal\", \"le téléjournal\"],[\"star système\", \"la poule aux oeufs d'or\", \"destinées\", \"destinées\", \"les soeurs elliot\", \"le tva 22 heures\", \"le tva 22 heures\"],[\"loft story\", \"450 , chemin du golf\", \"movie\", \"movie\", \"movie\", \"le journal du soir\", \"le journal du soir\"]]\nQuestion = Is it true that at 7:30 access hollywood aired followed by great movies later that night , starting at 10:00?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    column_730 = get_column_by_name(table_data, \"7:30\")\n    column_1000 = get_column_by_name(table_data, \"10:00\")\n    answer = \"access hollywood\" in column_730 and \"great movies\" in column_1000\n    return answer\n\n### END"}
{"id": "faa184af-cc51-423e-a564-73f7618ad7aa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"division\", \"league\", \"regular season\", \"playoffs\", \"open cup\"],[\"1997\", \"3\", \"usisl d - 3 pro league\", \"6th , mid atlantic\", \"did not qualify\", \"did not qualify\"],[\"1998\", \"3\", \"usisl d - 3 pro league\", \"1st , mid atlantic\", \"division semifinals\", \"did not qualify\"],[\"1999\", \"3\", \"usl d - 3 pro league\", \"2nd , northern\", \"final\", \"did not qualify\"],[\"2000\", \"3\", \"usl d - 3 pro league\", \"2nd , northern\", \"conference quarterfinals\", \"did not qualify\"],[\"2001\", \"3\", \"usl d - 3 pro league\", \"6th , northern\", \"did not qualify\", \"did not qualify\"],[\"2002\", \"3\", \"usl d - 3 pro league\", \"4th , atlantic\", \"did not qualify\", \"2nd round\"],[\"2003\", \"4\", \"usl pdl\", \"4th , northeast\", \"did not qualify\", \"did not qualify\"],[\"2004\", \"4\", \"usl pdl\", \"1st , northeast\", \"conference finals\", \"2nd round\"],[\"2005\", \"4\", \"usl pdl\", \"2nd , northeast\", \"conference semi - finals\", \"3rd round\"],[\"2006\", \"4\", \"usl pdl\", \"2nd , northeast\", \"did not qualify\", \"did not qualify\"],[\"2007\", \"4\", \"usl pdl\", \"2nd , mid atlantic\", \"conference semi - finals\", \"2nd round\"],[\"2008\", \"4\", \"usl pdl\", \"5th , northeast\", \"did not qualify\", \"did not qualify\"],[\"2009\", \"4\", \"usl pdl\", \"3rd , northeast\", \"pdl quarter - finals\", \"3rd round\"],[\"2010\", \"4\", \"usl pdl\", \"6th , mid atlantic\", \"did not qualify\", \"did not qualify\"],[\"2011\", \"4\", \"usl pdl\", \"7th , mid atlantic\", \"did not qualify\", \"did not qualify\"],[\"2012\", \"4\", \"usl pdl\", \"1st , mid atlantic\", \"conference semi - finals\", \"did not qualify\"]]\nQuestion = Is it true that 2nd , northern the regular season for final playoffs before the year 1999?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    regular_seasons = get_column_by_name(table_data, \"regular season\")\n    playoffs = get_column_by_name(table_data, \"playoffs\")\n    answer = False\n    for year, regular_season, playoff in zip(years, regular_seasons, playoffs):\n        if int(year) < 1999 and regular_season == \"2nd , northern\" and playoff == \"final\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "01c6e7d6-9412-4009-999f-f2aed433193e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of flashpoint episodes\ntable_data = [[\"no\", \"-\", \"title\", \"directed by\", \"written by\", \"canadian air date\", \"us air date\", \"production code\", \"canadian viewers (million)\"],[\"45\", \"1\", \"personal effects (part 2)\", \"kelly makin\", \"mark ellis & stephanie morgenstern\", \"july 8 , 2011\", \"july 8 , 2011\", \"401\", \"1.369\"],[\"46\", \"2\", \"good cop\", \"john fawcett\", \"michael maclennan\", \"july 15 , 2011\", \"july 15 , 2011\", \"402\", \"1.508\"],[\"47\", \"3\", \"run , jaime , run\", \"kelly makin\", \"ian weir\", \"july 22 , 2011\", \"july 22 , 2011\", \"403\", \"1.537\"],[\"48\", \"4\", \"through a glass darkly\", \"john fawcett\", \"andrew wreggitt\", \"july 29 , 2011\", \"july 29 , 2011\", \"404\", \"1.430\"],[\"49\", \"5\", \"the better man\", \"david frazee\", \"michael maclennan\", \"august 5 , 2011\", \"august 5 , 2011\", \"405\", \"1.254\"],[\"50\", \"6\", \"a day in the life\", \"jim donovan\", \"mark ellis & stephanie morgenstern\", \"august 12 , 2011\", \"august 12 , 2011\", \"406\", \"1.406\"],[\"51\", \"7\", \"shockwave\", \"david frazee\", \"larry bambrick\", \"august 19 , 2011\", \"august 19 , 2011\", \"407\", \"1.313\"],[\"52\", \"8\", \"grounded\", \"david frazee\", \"karen walton\", \"september 19 , 2011\", \"october 18 , 2011\", \"412\", \"1.536\"],[\"53\", \"9\", \"the war within\", \"david frazee\", \"daniel godwin & michael maclennan\", \"september 27 , 2011\", \"december 13 , 2011\", \"408\", \"1.349\"],[\"54\", \"10\", \"the cost of doing business\", \"david frazee\", \"larry bambrick\", \"october 4 , 2011\", \"october 25 , 2011\", \"409\", \"1.309\"],[\"55\", \"11\", \"wild card\", \"brett sullivan\", \"karen walton\", \"october 11 , 2011\", \"november 1 , 2011\", \"410\", \"1.263\"],[\"56\", \"12\", \"a new life\", \"kelly makin\", \"adam barken\", \"november 1 , 2011\", \"november 8 , 2011\", \"411\", \"1.293\"],[\"57\", \"13\", \"a call to arms\", \"ã‰rik canuel\", \"alex levine\", \"november 8 , 2011\", \"november 22 , 2011\", \"413\", \"1.215\"],[\"58\", \"14\", \"day game\", \"kelly makin\", \"aubrey nealon\", \"november 15 , 2011\", \"november 29 , 2011\", \"415\", \"1.191\"],[\"59\", \"15\", \"blue on blue\", \"stefan pleszczynski\", \"adam barken\", \"november 22 , 2011\", \"december 6 , 2011\", \"416\", \"1.229\"],[\"60\", \"16\", \"team player\", \"kelly makin\", \"michael maclennan\", \"november 28 , 2011\", \"january 10 , 2012\", \"414\", \"1.452\"],[\"61\", \"17\", \"priority of life\", \"david frazee\", \"mark ellis , stephanie morgenstern & alex levine\", \"december 6 , 2011\", \"january 17 , 2012\", \"417\", \"1.317\"]]\nQuestion = Is it true that the show with the fewest number of canadian viewers (millions) is 1.191 for day game?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef get_min_value(lst):\n    return min(lst)\n\ndef solution(table_data):\n    viewers = get_column_by_name(table_data, \"canadian viewers (million)\")\n    viewers = [float(viewer) for viewer in viewers]\n    min_viewers = get_min_value(viewers)\n    min_viewers_index = viewers.index(min_viewers)\n    titles = get_column_by_name(table_data, \"title\")\n    min_viewers_title = titles[min_viewers_index]\n    answer = min_viewers_title == \"day game\" and min_viewers == 1.191\n    return answer\n\n### END"}
{"id": "c2fb0fdb-3a97-4ff7-865e-b829e4995979", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the howie carr show\ntable_data = [[\"calls\", \"frequency\", \"branding\", \"format\", \"timeslot\", \"group owner\"],[\"wgan\", \"560 khz\", \"news radio 560 wgan\", \"news / talk\", \"live 3p - 6p\", \"saga communications\"],[\"whyn\", \"560 khz\", \"news / talk 560 whyn\", \"news / talk\", \"live 3p - 7p\", \"clear channel communications\"],[\"wvmt\", \"620 khz\", \"news / talk 620 wvmt\", \"news / talk\", \"live 3p - 7p\", \"sison broadcasting\"],[\"wrko\", \"680 khz\", \"am 680 wrko\", \"news / talk\", \"live 3p - 7p\", \"entercom\"],[\"wcrn\", \"830 khz\", \"wcrn 830 true talk\", \"news / talk\", \"live 3p - 7p\", \"carter broadcasting\"],[\"wkbk\", \"1290 khz\", \"1290 wkbk w281au 104.1\", \"news / talk\", \"live 3p - 6p\", \"saga communications\"],[\"wegp\", \"1390 khz\", \"wegp 1390 am - the talk of the county\", \"news / talk\", \"live 3p - 6p\", \"decelles / media , inc\"],[\"wxtk\", \"95.1 mhz\", \"news radio 95 wxtk\", \"news / talk\", \"live 3p - 7p\", \"qantam of cape cod , llc\"],[\"wntk - fm\", \"99.7 mhz\", \"wntk talk radio\", \"news / talk\", \"live 3p - 6p\", \"koor communications\"],[\"wuvr\", \"1490 khz\", \"wntk talk radio\", \"news / talk\", \"live 3p - 6p\", \"koor communications\"],[\"wvom - fm / wvqm\", \"103.9 / 101.3 mhz\", \"the voice of maine\", \"news / talk\", \"live 3p - 7p\", \"blueberry broadcasting\"]]\nQuestion = Is it true that the format for calls wrko is news / talk branded as am 680 wrko?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    calls = get_column_by_name(table_data, \"calls\")\n    branding = get_column_by_name(table_data, \"branding\")\n    format = get_column_by_name(table_data, \"format\")\n    for call, brand, form in zip(calls, branding, format):\n        if call.lower() == \"wrko\":\n            answer = brand.lower() == \"am 680 wrko\" and form.lower() == \"news / talk\"\n            break\n    return answer\n\n### END"}
{"id": "592fc2e3-3c21-4713-88bd-59d0efd57dbb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of airlines of singapore\ntable_data = [[\"airlines\", \"iata\", \"icao\", \"callsign\", \"commenced operations\"],[\"jetstar asia airways\", \"3k\", \"jsa\", \"jetstar asia\", \"2004\"],[\"scoot\", \"tz\", \"sco\", \"scooter\", \"2012\"],[\"silkair\", \"mi\", \"slk\", \"silkair\", \"1976\"],[\"singapore airlines\", \"sq\", \"sia\", \"singapore\", \"1947\"],[\"singapore airlines cargo\", \"sq\", \"sqc\", \"singcargo\", \"2001\"],[\"tigerair\", \"tr\", \"tgw\", \"go cat\", \"2003\"],[\"valuair\", \"vf\", \"vlu\", \"valuair\", \"2004\"]]\nQuestion = Is it true that the airline silkair commenced operations in 1976?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    airlines = get_column_by_name(table_data, \"airlines\")\n    commenced_operations = get_column_by_name(table_data, \"commenced operations\")\n    for airline, commenced_operation in zip(airlines, commenced_operations):\n        if airline.lower() == \"silkair\":\n            answer = equal_to(commenced_operation, \"1976\")\n            break \n    return answer\n\n### END"}
{"id": "51952415-e74d-4866-a030-61000e72d272", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = busiest airports in the united kingdom by total passenger traffic\ntable_data = [[\"rank\", \"airport\", \"total passengers\", \"% change 2006 / 2007\", \"international passengers\", \"domestic passengers\", \"transit passengers\", \"aircraft movements\", \"freight (metric tonnes)\"],[\"1\", \"london heathrow\", \"68066028\", \"0.8%\", \"62098911\", \"5753476\", \"213641\", \"481476\", \"1310987\"],[\"2\", \"london gatwick\", \"35216113\", \"3.1%\", \"31142002\", \"4023402\", \"50709\", \"266550\", \"171078\"],[\"3\", \"london stansted\", \"23779697\", \"0.4%\", \"21204946\", \"2554304\", \"20447\", \"208462\", \"203747\"],[\"4\", \"manchester\", \"22112625\", \"1.5%\", \"18662468\", \"3229255\", \"220902\", \"222703\", \"165366\"],[\"5\", \"london luton\", \"9927321\", \"5.3%\", \"8427894\", \"1491467\", \"7960\", \"120238\", \"38095\"],[\"6\", \"birmingham airport\", \"9226340\", \"0.9%\", \"7592240\", \"1541815\", \"92285\", \"114679\", \"13585\"],[\"7\", \"edinburgh\", \"9047558\", \"5.1%\", \"3417891\", \"5619309\", \"10358\", \"128172\", \"19292\"],[\"8\", \"glasgow international\", \"8795727\", \"0.6%\", \"4131512\", \"4594575\", \"69640\", \"108305\", \"4276\"],[\"9\", \"bristol\", \"5926774\", \"2.9%\", \"4608290\", \"1275566\", \"42918\", \"76428\", \"20\"],[\"10\", \"newcastle\", \"5650716\", \"4.0%\", \"3948594\", \"1675013\", \"27109\", \"79200\", \"785\"],[\"11\", \"liverpool\", \"5468510\", \"10.2%\", \"4636149\", \"827085\", \"5276\", \"86668\", \"3709\"],[\"12\", \"east midlands\", \"5413360\", \"14.5%\", \"4709855\", \"696649\", \"6856\", \"93989\", \"274753\"],[\"13\", \"belfast international\", \"5272664\", \"4.6%\", \"1788807\", \"3447248\", \"36609\", \"77395\", \"38429\"],[\"14\", \"aberdeen\", \"3412257\", \"7.8%\", \"1475988\", \"1935152\", \"1117\", \"121927\", \"3434\"],[\"15\", \"london city\", \"2912123\", \"23.5%\", \"2214884\", \"697239\", \"0\", \"91177\", \"0\"],[\"16\", \"leeds bradford\", \"2881539\", \"3.2%\", \"2229283\", \"630575\", \"21681\", \"65249\", \"109\"],[\"17\", \"glasgow prestwick\", \"2422332\", \"1.0%\", \"1827592\", \"593117\", \"1623\", \"47910\", \"31517\"],[\"18\", \"belfast city\", \"2186993\", \"3.9%\", \"93547\", \"2093320\", \"126\", \"43022\", \"1057\"],[\"19\", \"cardiff\", \"2111148\", \"4.3%\", \"1665247\", \"428260\", \"17641\", \"43963\", \"2391\"]]\nQuestion = Is it true that birmingham airport is ranked sixth?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    airports = get_column_by_name(table_data, \"airport\")\n    for rank, airport in zip(ranks, airports):\n        if airport.lower() == \"birmingham airport\":\n            answer = equal_to(rank, \"6\")\n            break \n    return answer\n\n### END"}
{"id": "266f7617-1bd2-4999-bfc0-5e6b9cef9680", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of make it or break it episodes\ntable_data = [[\"series\",\"season\",\"title\",\"directed by\",\"written by\",\"original air date\",\"us viewers (in millions)\"],[\"21\",\"1\",\"friends close , enemies closer\",\"patrick norris\",\"joanna johnson\",\"june 28 , 2010\",\"1.83\"],[\"22\",\"2\",\"all or nothing\",\"fred gerber\",\"kerry lenhart & john j sakmar\",\"july 5 , 2010\",\"1.72\"],[\"23\",\"3\",\"battle of the flexes\",\"j miller tobin\",\"amy turner\",\"july 13 , 2010\",\"1.56\"],[\"24\",\"4\",\"and the rocky goes to\",\"bethany rooney\",\"holly sorensen\",\"july 20 , 2010\",\"1.46\"],[\"25\",\"5\",\"i won't dance , don't ask me\",\"david paymer\",\"michael gans & richard register\",\"july 27 , 2010\",\"1.66\"],[\"26\",\"6\",\"party gone out of bounds\",\"felix alcala\",\"joanna johnson\",\"august 3 , 2010\",\"1.75\"],[\"27\",\"7\",\"what are you made of\",\"glenn l steelman\",\"holly sorensen\",\"august 10 , 2010\",\"1.56\"],[\"28\",\"8\",\"rock bottom\",\"chris grismer\",\"liz maccie\",\"august 17 , 2010\",\"1.30\"],[\"29\",\"9\",\"if only\",\"david paymer\",\"michael gans & richard register\",\"august 24 , 2010\",\"1.42\"],[\"30\",\"10\",\"the edge of the worlds\",\"chris grismer\",\"kerry lenhart & john j sakmar\",\"august 31 , 2010\",\"1.44\"],[\"31\",\"11\",\"the new normal\",\"michael lange\",\"holly sorensen\",\"march 28 , 2011\",\"2.06\"],[\"32\",\"12\",\"free people\",\"fred gerber\",\"joanna johnson\",\"april 4 , 2011\",\"1.69\"],[\"33\",\"13\",\"the buddy system\",\"glenn l steelman\",\"amy turner\",\"april 11 , 2011\",\"1.64\"],[\"34\",\"14\",\"life or death\",\"david paymer\",\"michael gans & richard register\",\"april 18 , 2011\",\"1.58\"],[\"35\",\"15\",\"hungary heart\",\"rod hardy\",\"kerry lenhart & john j sakmar\",\"april 25 , 2011\",\"1.64\"],[\"36\",\"16\",\"requiem for a dream\",\"michael schultz\",\"holly sorenson\",\"may 2 , 2011\",\"1.65\"],[\"37\",\"17\",\"to thine own self be true\",\"john behring\",\"liz maccie\",\"may 9 , 2011\",\"1.51\"],[\"38\",\"18\",\"dog eat dog\",\"chris grismer\",\"michael gans & richard register\",\"may 16 , 2011\",\"1.64\"],[\"39\",\"19\",\"what lies beneath\",\"david paymer\",\"joanna johnson\",\"may 23 , 2011\",\"1.49\"]]\nQuestion = Is it true that the episode if onlyhad 1.83 million viewers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    viewers = get_column_by_name(table_data, \"us viewers (in millions)\")\n    for title, viewer in zip(titles, viewers):\n        if title.lower() == \"if only\":\n            answer = equal_to(viewer, \"1.83\")\n            break \n    return answer\n\n### END"}
{"id": "8441b527-575f-42ff-be91-6ce064605d27", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of quadrangles on mercury\ntable_data = [[\"name\",\"number\",\"namesake\",\"albedo feature name\",\"area\",\"current map\"],[\"borealis\",\"h - 1\",\"borealis planitia\",\"borea\",\"north pole to 67 degree latitude\",\"h - 1\"],[\"victoria\",\"h - 2\",\"victoria rupes\",\"aurora\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 2\"],[\"shakespeare\",\"h - 3\",\"shakespeare crater\",\"caduceata\",\"90 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 3\"],[\"raditladi\",\"h - 4\",\"raditladi basin\",\"liguria\",\"270 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 4\"],[\"hokusai\",\"h - 5\",\"hokusai crater\",\"apollonia\",\"360 to 270 degree longitude , 21 to 66 degree latitude\",\"h - 5\"],[\"kuiper\",\"h - 6\",\"kuiper crater\",\"tricrena\",\"0 to 72 degree longitude , 22 to 22 degree latitude\",\"h - 6\"],[\"beethoven\",\"h - 7\",\"beethoven crater\",\"solitudo lycaonis\",\"72 to 144 degree longitude , 22 to 22 degree latitude\",\"h - 7\"],[\"tolstoj\",\"h - 8\",\"tolstoj crater\",\"phaethontias\",\"144 to 216 degree longitude , 22 to 22 degree latitude\",\"h - 8\"],[\"eminescu\",\"h - 9\",\"eminescu crater\",\"solitudo criophori\",\"216 to 288 degree longitude , 22 to 22 degree latitude\",\"h - 9\"],[\"derain\",\"h - 10\",\"derain crater\",\"pieria\",\"288 to 360 degree longitude , - 22 to 22 degree latitude\",\"h - 10\"],[\"discovery\",\"h - 11\",\"discovery rupes\",\"solitudo hermae trismegisti\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 11\"],[\"michelangelo\",\"h - 12\",\"michelangelo crater\",\"solitudo promethei\",\"90 to 180 degree longitude , 21 to - 66 degree latitude\",\"h - 12\"],[\"neruda\",\"h - 13\",\"neruda crater\",\"solitudo persephones\",\"180 to 270 degree longitude , 21 to - 66 degree latitude\",\"h - 13\"],[\"debussy\",\"h - 14\",\"debussy crater\",\"cyllene\",\"270 to 360 degree longitude , 21 to 66 degree latitude\",\"h - 14\"],[\"bach\",\"h - 15\",\"bach crater\",\"australia\",\"south pole to 67 degree latitude\",\"h - 15\"]]\nQuestion = Is it true that less than h - 11 and more than h - 7 is the current map designation of the feature which was named for discovery rupes?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    namesakes = get_column_by_name(table_data, \"namesake\")\n    current_maps = get_column_by_name(table_data, \"current map\")\n    for namesake, current_map in zip(namesakes, current_maps):\n        if namesake.lower() == \"discovery rupes\":\n            answer = equal_to(current_map, \"h - 11\")\n            break \n    return not answer\n\n### END"}
{"id": "f71194a0-b7c9-4bfa-a763-25b56aa9b7a5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 veikkausliiga\ntable_data = [[\"club\", \"location\", \"stadium\", \"capacity\", \"manager\", \"kitmaker\"],[\"ac oulu\", \"oulu\", \"castrén\", \"4000\", \"juha malinen\", \"umbro\"],[\"fc honka\", \"espoo\", \"tapiolan urheilupuisto\", \"6000\", \"mika lehkosuo\", \"kappa\"],[\"fc inter\", \"turku\", \"veritas stadion\", \"9372\", \"job dragtsma\", \"nike\"],[\"fc lahti\", \"lahti\", \"lahden stadion\", \"15000\", \"ilkka mäkelä\", \"umbro\"],[\"ff jaro\", \"jakobstad\", \"jakobstads centralplan\", \"5000\", \"alexei eremenko sr\", \"errea\"],[\"haka\", \"valkeakoski\", \"tehtaan kenttä\", \"3516\", \"sami ristilä\", \"umbro\"],[\"hjk\", \"helsinki\", \"sonera stadium\", \"10770\", \"antti muurinen\", \"adidas\"],[\"ifk mariehamn\", \"mariehamn\", \"wiklöf holding arena\", \"4000\", \"pekka lyyski\", \"puma\"],[\"jjk\", \"jyväskylä\", \"harjun stadion\", \"3000\", \"kari martonen\", \"legea\"],[\"kups\", \"kuopio\", \"kuopion keskuskenttä\", \"5000\", \"esa pekonen\", \"puma\"],[\"mypa\", \"anjalankoski\", \"saviniemi\", \"4167\", \"janne lindberg\", \"puma\"],[\"tampere united\", \"tampere\", \"ratina stadion\", \"17000\", \"ari hjelm\", \"puma\"],[\"tps\", \"turku\", \"veritas stadion\", \"9372\", \"marko rajamäki\", \"puma\"]]\nQuestion = Is it true that the capacity for ff jaro club is one of the smallest?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef convert_to_integers(list_of_strings):\n    return [int(item) for item in list_of_strings]\n\ndef get_minimum(list_of_numbers):\n    return min(list_of_numbers)\n\ndef solution(table_data):\n    capacities = get_column_by_name(table_data, \"capacity\")\n    capacities = convert_to_integers(capacities)\n    min_capacity = get_minimum(capacities)\n    ff_jaro_capacity = int(table_data[6][3])\n    answer = ff_jaro_capacity == min_capacity\n    return answer\n\n### END"}
{"id": "d4d26079-fcaf-4c60-855c-8ef891cfa480", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 boston celtics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"74\", \"april 1\", \"chicago\", \"106 - 92\", \"allen (22)\", \"perkins (9)\", \"rondo (10)\", \"united center 22225\", \"59 - 15\"],[\"75\", \"april 2\", \"indiana\", \"92 - 77\", \"garnett (20)\", \"garnett (11)\", \"rondo (6)\", \"td banknorth garden 18624\", \"60 - 15\"],[\"76\", \"april 5\", \"charlotte\", \"101 - 78\", \"powe (22)\", \"powe (9)\", \"rondo (5)\", \"charlotte bobcats arena 19403\", \"61 - 15\"],[\"77\", \"april 8\", \"milwaukee\", \"107 - 104 (ot)\", \"garnett (21)\", \"perkins (10)\", \"pierce (4)\", \"bradley center 15921\", \"62 - 15\"],[\"78\", \"april 9\", \"washington\", \"95 - 109\", \"pierce (28)\", \"garnett (14)\", \"pierce , rondo (7)\", \"verizon center 20173\", \"62 - 16\"],[\"79\", \"april 11\", \"milwaukee\", \"102 - 86\", \"rondo (16)\", \"garnett , posey (8)\", \"rondo (10)\", \"td banknorth garden 18624\", \"63 - 16\"],[\"80\", \"april 12\", \"atlanta\", \"99 - 89\", \"garnett (24)\", \"davis (10)\", \"cassell , rondo (5)\", \"philips arena 20098\", \"64 - 16\"],[\"81\", \"april 14\", \"new york\", \"99 - 93\", \"rondo (23)\", \"rondo (10)\", \"rondo (5)\", \"madison square garden 19763\", \"65 - 16\"],[\"82\", \"april 16\", \"new jersey\", \"105 - 94\", \"powe (27)\", \"powe (11)\", \"cassell (4)\", \"td banknorth garden 18624\", \"66 - 16\"]]\nQuestion = Is it true that there was only 1 game on april 11th?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    count = count_occurrences(\"april 11\", dates)\n    answer = count == 1\n    return answer\n\n### END"}
{"id": "4ab8e512-a971-4a36-80d7-49746bd54997", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rowing at the 2008 summer olympics - women 's lightweight double sculls\ntable_data = [[\"rank\", \"rowers\", \"country\", \"time\", \"notes\"],[\"1\", \"melanie kok , tracy cameron\", \"canada\", \"7:10.70\", \"fa\"],[\"2\", \"xu dongxiang , chen haixia\", \"china\", \"7:11.59\", \"fa\"],[\"3\", \"chrysi biskitzi , alexandra tsiavou\", \"greece\", \"7:11.99\", \"fa\"],[\"4\", \"renee hykel , jennifer goldsack\", \"united states\", \"7:12.15\", \"fb\"],[\"5\", \"amber halliday , marguerite houston\", \"australia\", \"7:13.80\", \"fb\"],[\"6\", \"misaki kumakura , akiko iwamoto\", \"japan\", \"7:16.13\", \"fb\"]]\nQuestion = Is it true that the country greece is rank 2?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    countries = get_column_by_name(table_data, \"country\")\n    for rank, country in zip(ranks, countries):\n        if country.lower() == \"greece\":\n            answer = equal_to(rank, \"2\")\n            break \n    return answer\n\n### END"}
{"id": "690ea1db-3aa6-4888-9eef-09c8cf3806ec", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 british grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"kimi räikkönen\", \"ferrari\", \"59\", \"1:21:43.074\", \"2\"],[\"fernando alonso\", \"mclaren - mercedes\", \"59\", \"+ 2.459\", \"3\"],[\"lewis hamilton\", \"mclaren - mercedes\", \"59\", \"+ 39.373\", \"1\"],[\"robert kubica\", \"bmw sauber\", \"59\", \"+ 53.319\", \"5\"],[\"felipe massa\", \"ferrari\", \"59\", \"+ 54.063\", \"4\"],[\"nick heidfeld\", \"bmw sauber\", \"59\", \"+ 56.336\", \"9\"],[\"heikki kovalainen\", \"renault\", \"58\", \"+ 1 lap\", \"7\"],[\"giancarlo fisichella\", \"renault\", \"58\", \"+ 1 lap\", \"8\"],[\"rubens barrichello\", \"honda\", \"58\", \"+ 1 lap\", \"14\"],[\"jenson button\", \"honda\", \"58\", \"+ 1 lap\", \"18\"],[\"david coulthard\", \"red bull - renault\", \"58\", \"+ 1 lap\", \"12\"],[\"nico rosberg\", \"williams - toyota\", \"58\", \"+ 1 lap\", \"17\"],[\"alexander wurz\", \"williams - toyota\", \"58\", \"+ 1 lap\", \"13\"],[\"takuma sato\", \"super aguri - honda\", \"57\", \"+ 2 laps\", \"21\"],[\"christijan albers\", \"spyker - ferrari\", \"57\", \"+ 2 laps\", \"22\"],[\"vitantonio liuzzi\", \"toro rosso - ferrari\", \"53\", \"gearbox\", \"16\"],[\"jarno trulli\", \"toyota\", \"43\", \"handling\", \"10\"],[\"anthony davidson\", \"super aguri - honda\", \"35\", \"mechanical\", \"19\"],[\"scott speed\", \"toro rosso - ferrari\", \"29\", \"collision\", \"15\"],[\"ralf schumacher\", \"toyota\", \"22\", \"wheel\", \"6\"],[\"adrian sutil\", \"spyker - ferrari\", \"16\", \"engine\", \"20\"],[\"mark webber\", \"red bull - renault\", \"8\", \"hydraulics\", \"11\"]]\nQuestion = Is it true that scott speed is the driver for the constructor super aguri - honda?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    constructors = get_column_by_name(table_data, \"constructor\")\n    answer = False\n    for driver, constructor in zip(drivers, constructors):\n        if driver.lower() == \"scott speed\" and constructor.lower() == \"super aguri - honda\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "026d942a-0732-4e10-91ed-b1158009a15d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = jimmy davies\ntable_data = [[\"year\", \"entrant\", \"chassis\", \"engine\", \"points\"],[\"1950\", \"pat clancy\", \"ewing\", \"offenhauser l4\", \"0\"],[\"1951\", \"parks offenhauser / le parks\", \"pawl\", \"offenhauser l4\", \"0\"],[\"1953\", \"pat clancy\", \"kurtis kraft 500b\", \"offenhauser l4\", \"0\"],[\"1954\", \"bardahl / ed walsh\", \"kurtis kraft 4000\", \"offenhauser l4\", \"0\"],[\"1955\", \"bardahl / pat clancy\", \"kurtis kraft 500b\", \"offenhauser l4\", \"4\"],[\"1956\", \"novi racing\", \"kurtis kraft 500f\", \"novi v8\", \"0\"],[\"1957\", \"trio brdeact wind allass\", \"kurtis kraft 500d\", \"offenhauser l4\", \"0\"],[\"1959\", \"sumar / chapman root\", \"kurtis kraft 500 g\", \"offenhauser l4\", \"0\"]]\nQuestion = Is it true that kurtis kraft 500 series chassis was introduced in 1955?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef in_string(str1, str2):\n    return str1 in str2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    chassis = get_column_by_name(table_data, \"chassis\")\n    for year, chassis in zip(years, chassis):\n        if year == \"1955\" and in_string(\"kurtis kraft 500\", chassis.lower()):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "38c5733b-265a-412e-9280-3518ccb74945", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"series number\",\"number of episodes\",\"original air date\",\"dvd region 2 release date\",\"dvd region 1 release date\"],[\"1\",\"6\",\"1973\",\"2 september 2002\",\"tba\"],[\"2\",\"7\",\"1975\",\"2 september 2002\",\"tba\"],[\"3\",\"7\",\"1976\",\"26 july 2004\",\"11 march 2008\"],[\"4\",\"7\",\"1977\",\"26 july 2004\",\"9 september 2008\"],[\"5\",\"7\",\"1979\",\"5 march 2007\",\"6 september 2009\"],[\"6\",\"7\",\"1982\",\"5 march 2007\",\"27 april 2010\"],[\"7\",\"6\",\"1983\",\"3 march 2008\",\"27 april 2010\"],[\"8\",\"6\",\"1985\",\"3 march 2008\",\"9 july 2010\"],[\"9\",\"12\",\"1987\",\"5 may 2008\",\"18 january 2011\"],[\"10\",\"6\",\"1988\",\"22 september 2008\",\"12 april 2011\"],[\"11\",\"7\",\"1989\",\"22 september 2008\",\"12 april 2011\"],[\"12\",\"10\",\"1990\",\"26 december 2008\",\"12 july 2011\"],[\"13\",\"6\",\"1991\",\"26 december 2008\",\"21 february 2012\"],[\"14\",\"9\",\"1992\",\"26 october 2009\",\"17 april 2012\"],[\"15\",\"9\",\"1993\",\"26 october 2009\",\"24 july 2012\"],[\"16\",\"8\",\"1995\",\"27 december 2010\",\"tba\"],[\"17\",\"10\",\"1995\",\"27 december 2010\",\"15 june 2004\"],[\"18\",\"10\",\"1997\",\"7 february 2011\",\"15 january 2013\"],[\"19\",\"10\",\"1998\",\"7 february 2011\",\"16 april 2013\"],[\"20\",\"10\",\"1999\",\"26 march 2012\",\"9 july 2013\"],[\"21\",\"10\",\"2000\",\"26 march 2012\",\"15 october 2013\"],[\"22\",\"10\",\"2001\",\"23 april 2012\",\"14 january 2014\"],[\"23\",\"10\",\"2002\",\"23 april 2012\",\"tba\"],[\"24\",\"10\",\"2003\",\"tba\",\"tba\"],[\"25\",\"10\",\"2004\",\"tba\",\"tba\"],[\"26\",\"10\",\"2005\",\"tba\",\"tba\"],[\"27\",\"9\",\"2006\",\"tba\",\"tba\"],[\"28\",\"10\",\"2007\",\"tba\",\"tba\"],[\"29\",\"11\",\"2008\",\"tba\",\"tba\"],[\"30\",\"10\",\"2009\",\"tba\",\"tba\"],[\"31\",\"6\",\"2010\",\"tba\",\"tba\"]]\nQuestion = Is it true that 1 is the number of the series originally aired before 1999 with less than 7 episodes and a dvd region 2 release date of 2 september 2002?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef parse_year(date_str):\n    return int(date_str.split()[-1])\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    series_numbers = get_column_by_name(table_data, \"series number\")\n    number_of_episodes = get_column_by_name(table_data, \"number of episodes\")\n    original_air_dates = get_column_by_name(table_data, \"original air date\")\n    dvd_region_2_release_dates = get_column_by_name(table_data, \"dvd region 2 release date\")\n    count = 0\n    for series_number, number_of_episode, original_air_date, dvd_region_2_release_date in zip(series_numbers, number_of_episodes, original_air_dates, dvd_region_2_release_dates):\n        if parse_year(original_air_date) < 1999 and less_than(int(number_of_episode), 7) and dvd_region_2_release_date == \"2 september 2002\":\n            count += 1\n    return equal_to(count, 1)\n\n### END"}
{"id": "810e83a9-8c3f-48fe-a10a-8fca3d011e50", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = air macau destinations\ntable_data = [[\"city\",\"country\",\"iata\",\"icao\",\"airport\"],[\"bangkok\",\"thailand\",\"bkk\",\"vtbs\",\"suvarnabhumi airport\"],[\"beijing\",\"china\",\"pek\",\"zbaa\",\"beijing capital international airport\"],[\"changsha\",\"china\",\"csx\",\"zgha\",\"changsha huanghua international airport\"],[\"chengdu\",\"china\",\"ctu\",\"zuuu\",\"chengdu shuangliu international airport\"],[\"chongqing\",\"china\",\"ckg\",\"zuck\",\"chongqing jiangbei international airport\"],[\"hangzhou\",\"china\",\"hgh\",\"zshc\",\"hangzhou xiaoshan international airport\"],[\"hefei\",\"china\",\"hfe\",\"zsof\",\"hefei luogang international airport\"],[\"kaohsiung\",\"taiwan\",\"khh\",\"rckh\",\"kaohsiung international airport\"],[\"macau\",\"macau\",\"mfm\",\"vmmc\",\"macau international airport\"],[\"nanjing\",\"china\",\"nkg\",\"zsnj\",\"nanjing lukou international airport\"],[\"nanning\",\"china\",\"nng\",\"zgnn\",\"nanning wuxu international airport\"],[\"ningbo\",\"china\",\"ngb\",\"zsnb\",\"ningbo lishe international airport\"],[\"osaka\",\"japan\",\"kix\",\"rjbb\",\"kansai international airport\"],[\"seoul\",\"south korea\",\"icn\",\"rksi\",\"incheon international airport\"],[\"shanghai\",\"china\",\"sha\",\"zsss\",\"shanghai hongqiao international airport\"],[\"shanghai\",\"china\",\"pvg\",\"zspd\",\"shanghai pudong international airport\"],[\"shenyang\",\"china\",\"she\",\"zytx\",\"shenyang taoxian international airport\"],[\"shenzhen\",\"china\",\"szx\",\"zgsz\",\"shenzhen bao'an international airport\"],[\"singapore\",\"singapore\",\"sin\",\"wsss\",\"singapore changi airport\"],[\"taipei\",\"taiwan\",\"tpe\",\"rctp\",\"taiwan taoyuan international airport\"],[\"taiyuan\",\"china\",\"tyn\",\"zbyn\",\"taiyuan wusu airport\"],[\"tokyo\",\"japan\",\"nrt\",\"rjaa\",\"narita international airport\"],[\"xiamen\",\"china\",\"xmn\",\"zsam\",\"xiamen gaoqi international airport\"],[\"wenzhou\",\"china\",\"wnz\",\"zswz\",\"wenzhou yongqiang international airport\"]]\nQuestion = Is it true that kaoshiung international airport has an icao of rjbb?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    airports = get_column_by_name(table_data, \"airport\")\n    icaos = get_column_by_name(table_data, \"icao\")\n    for airport, icao in zip(airports, icaos):\n        if airport.lower() == \"kaohsiung international airport\":\n            answer = equal_to(icao, \"rjbb\")\n            break \n    return answer\n\n### END"}
{"id": "57fef0b4-8ba1-461e-b7de-111f84d79352", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2005 new orleans saints season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"venue\", \"attendance\"],[\"1\", \"september 11 , 2005\", \"carolina panthers\", \"w 23 - 20\", \"bank of america stadium\", \"72920\"],[\"2\", \"september 19 , 2005\", \"new york giants\", \"l 27 - 10\", \"giants stadium (home game)\", \"68031\"],[\"3\", \"september 25 , 2005\", \"minnesota vikings\", \"l 33 - 16\", \"hubert h humphrey metrodome\", \"63952\"],[\"4\", \"october 2 , 2005\", \"buffalo bills\", \"w 19 - 7\", \"alamodome (home game)\", \"58688\"],[\"5\", \"october 9 , 2005\", \"green bay packers\", \"l 52 - 3\", \"lambeau field\", \"70580\"],[\"6\", \"october 16 , 2005\", \"atlanta falcons\", \"l 34 - 31\", \"alamodome (home game)\", \"65562\"],[\"7\", \"october 23 , 2005\", \"st louis rams\", \"l 28 - 17\", \"edward jones dome\", \"64586\"],[\"8\", \"october 30 , 2005\", \"miami dolphins\", \"l 21 - 6\", \"tiger stadium (home game)\", \"61643\"],[\"9\", \"november 6 , 2005\", \"chicago bears\", \"l 20 - 17\", \"tiger stadium (home game)\", \"32637\"],[\"10\", \"-\", \"-\", \"-\", \"-\", \"\"],[\"11\", \"november 20 , 2005\", \"new england patriots\", \"l 24 - 17\", \"gillette stadium\", \"68756\"],[\"12\", \"november 27 , 2005\", \"new york jets\", \"w 21 - 19\", \"the meadowlands\", \"77152\"],[\"13\", \"december 4 , 2005\", \"tampa bay buccaneers\", \"l 10 - 3\", \"tiger stadium (home game)\", \"34411\"],[\"14\", \"december 12 , 2005\", \"atlanta falcons\", \"l 36 - 17\", \"georgia dome\", \"70083\"],[\"15\", \"december 18 , 2005\", \"carolina panthers\", \"l 27 - 10\", \"tiger stadium (home game)\", \"32551\"],[\"16\", \"december 24 , 2005\", \"detroit lions\", \"l 13 - 12\", \"alamodome (home game)\", \"63747\"],[\"17\", \"january 1 , 2006\", \"tampa bay buccaneers\", \"l 27 - 13\", \"raymond james stadium\", \"65379\"]]\nQuestion = Is it true that the date for week 7 was october 23 , 2005?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    dates = get_column_by_name(table_data, \"date\")\n    for week, date in zip(weeks, dates):\n        if week == \"7\":\n            answer = equal_to(date, \"october 23 , 2005\")\n            break \n    return answer\n\n### END"}
{"id": "1fa23bf4-0b63-4586-88d8-00393ef55901", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of quadrangles on mercury\ntable_data = [[\"name\",\"number\",\"namesake\",\"albedo feature name\",\"area\",\"current map\"],[\"borealis\",\"h - 1\",\"borealis planitia\",\"borea\",\"north pole to 67 degree latitude\",\"h - 1\"],[\"victoria\",\"h - 2\",\"victoria rupes\",\"aurora\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 2\"],[\"shakespeare\",\"h - 3\",\"shakespeare crater\",\"caduceata\",\"90 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 3\"],[\"raditladi\",\"h - 4\",\"raditladi basin\",\"liguria\",\"270 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 4\"],[\"hokusai\",\"h - 5\",\"hokusai crater\",\"apollonia\",\"360 to 270 degree longitude , 21 to 66 degree latitude\",\"h - 5\"],[\"kuiper\",\"h - 6\",\"kuiper crater\",\"tricrena\",\"0 to 72 degree longitude , 22 to 22 degree latitude\",\"h - 6\"],[\"beethoven\",\"h - 7\",\"beethoven crater\",\"solitudo lycaonis\",\"72 to 144 degree longitude , 22 to 22 degree latitude\",\"h - 7\"],[\"tolstoj\",\"h - 8\",\"tolstoj crater\",\"phaethontias\",\"144 to 216 degree longitude , 22 to 22 degree latitude\",\"h - 8\"],[\"eminescu\",\"h - 9\",\"eminescu crater\",\"solitudo criophori\",\"216 to 288 degree longitude , 22 to 22 degree latitude\",\"h - 9\"],[\"derain\",\"h - 10\",\"derain crater\",\"pieria\",\"288 to 360 degree longitude , - 22 to 22 degree latitude\",\"h - 10\"],[\"discovery\",\"h - 11\",\"discovery rupes\",\"solitudo hermae trismegisti\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 11\"],[\"michelangelo\",\"h - 12\",\"michelangelo crater\",\"solitudo promethei\",\"90 to 180 degree longitude , 21 to - 66 degree latitude\",\"h - 12\"],[\"neruda\",\"h - 13\",\"neruda crater\",\"solitudo persephones\",\"180 to 270 degree longitude , 21 to - 66 degree latitude\",\"h - 13\"],[\"debussy\",\"h - 14\",\"debussy crater\",\"cyllene\",\"270 to 360 degree longitude , 21 to 66 degree latitude\",\"h - 14\"],[\"bach\",\"h - 15\",\"bach crater\",\"australia\",\"south pole to 67 degree latitude\",\"h - 15\"]]\nQuestion = Is it true that debussy has a current map designation higher than h - 14?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    current_maps = get_column_by_name(table_data, \"current map\")\n    for name, current_map in zip(names, current_maps):\n        if name.lower() == \"debussy\":\n            answer = equal_to(current_map, \"h - 14\")\n            break \n    return not answer\n\n### END"}
{"id": "b3b48a15-2743-49f8-8799-ba394c997bf8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2006 formula nippon season\ntable_data = [[\"round\", \"circuit\", \"date\", \"pole position\", \"fastest lap\", \"winning driver\", \"winning team\"],[\"1\", \"fuji speedway\", \"2 april\", \"benoît tréluyer\", \"masataka yanagida\", \"benoît tréluyer\", \"mobilecast impul\"],[\"2\", \"suzuka circuit\", \"16 april\", \"benoît tréluyer\", \"benoît tréluyer\", \"loïc duval\", \"piaa nakajima\"],[\"3\", \"twin ring motegi\", \"28 may\", \"takashi kogure\", \"tsugio matsuda\", \"andré lotterer\", \"dhg tom 's\"],[\"4\", \"suzuka circuit\", \"9 july\", \"benoît tréluyer\", \"benoît tréluyer\", \"benoît tréluyer\", \"mobilecast impul\"],[\"5\", \"autopolis\", \"6 august\", \"takashi kogure\", \"loïc duval\", \"tsugio matsuda\", \"mobilecast impul\"],[\"6\", \"fuji speedway\", \"27 august\", \"takashi kogure\", \"satoshi motoyama\", \"benoît tréluyer\", \"mobilecast impul\"],[\"7\", \"sportsland sugo\", \"17 september\", \"takashi kogure\", \"hideki mutoh\", \"loïc duval\", \"piaa nakajima\"],[\"8\", \"twin ring motegi\", \"22 october\", \"takashi kogure\", \"satoshi motoyama\", \"benoît tréluyer\", \"mobilecast impul\"]]\nQuestion = Is it true that hideki mutoh had the fastest lap in the sportsland sugo circuit?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    circuits = get_column_by_name(table_data, \"circuit\")\n    fastest_laps = get_column_by_name(table_data, \"fastest lap\")\n    answer = False\n    for circuit, fastest_lap in zip(circuits, fastest_laps):\n        if \"sportsland sugo\" in circuit.lower() and \"hideki mutoh\" in fastest_lap.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "1ea3296e-3fab-4303-8e78-228fe95dc646", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = cultural interest fraternities and sororities\ntable_data = [[\"letters\", \"organization\", \"nickname\", \"founding date\", \"founding university\", \"type\"],[\"δλφ\", \"delta lambda phi\", \"dlp , deltas' , or lambda men\", \"1986 - 10 - 15\", \"washington , dc\", \"fraternity\"],[\"κψκ\", \"kappa psi kappa\", \"canes , k - psis , diamonds , or angels\", \"2001 - 08 - 17\", \"tallahassee , florida\", \"fraternity\"],[\"οεπ\", \"omicron epsilon pi\", \"the epps\", \"2000 - 12 - 07\", \"tallahassee , florida\", \"sorority\"],[\"γρλ\", \"gamma rho lambda 1\", \"grl\", \"2003 - 08 - 25\", \"tempe , arizona\", \"sorority\"],[\"αλζ\", \"alpha lambda zeta\", \"the regal alphas\", \"2006 - 01 - 09\", \"houston , texas and atlanta , georgia\", \"fraternity\"],[\"καλ\", \"kappa alpha lambda\", \"the kappas\", \"2003 - 10 - 19\", \"clark atlanta university\", \"sorority\"],[\"φαν\", \"phi alpha nu\", \"phi - nomenal gentlewomen\", \"2006 - 07 - 30\", \"charlotte , nc\", \"fraternity\"]]\nQuestion = Is it true that the founding date of the organization with the letters κψκ is 2001 - 08 - 17?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    letters = get_column_by_name(table_data, \"letters\")\n    founding_dates = get_column_by_name(table_data, \"founding date\")\n    for letter, founding_date in zip(letters, founding_dates):\n        if letter.lower() == \"κψκ\":\n            answer = equal_to(founding_date, \"2001 - 08 - 17\")\n            break \n    return answer\n\n### END"}
{"id": "c8f4ad99-7897-4c69-90b1-00b91d201143", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = nfl career scoring leaders\ntable_data = [[\"rank\", \"player\", \"position\", \"career\", \"points\"],[\"31\", \"jerry rice\", \"wide receiver\", \"1985 - 2004\", \"1256\"],[\"47\", \"emmitt smith\", \"running back\", \"1990 - 2004\", \"1052\"],[\"52\", \"ladainian tomlinson\", \"running back\", \"2001 - 2011\", \"972\"],[\"59\", \"randy moss\", \"wide receiver\", \"1998 - 2012\", \"950\"],[\"61t\", \"terrell owens\", \"wide receiver\", \"1996 - 2010\", \"942\"]]\nQuestion = Is it true that the sum of the points for the player who was a rank of 61t was 942?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    points = get_column_by_name(table_data, \"points\")\n    for rank, point in zip(ranks, points):\n        if rank.lower() == \"61t\":\n            answer = equal_to(int(point), 942)\n            break \n    return answer\n\n### END"}
{"id": "2fa49306-1b6d-4913-b2d7-dc985fc0aaf1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2003 - 04 isu junior grand prix\ntable_data = [[\"rank\", \"nation\", \"gold\", \"silver\", \"bronze\", \"total\"],[\"1\", \"russia\", \"10\", \"14\", \"8\", \"32\"],[\"2\", \"united states\", \"9\", \"6\", \"7\", \"22\"],[\"3\", \"canada\", \"4\", \"2\", \"10\", \"16\"],[\"4\", \"japan\", \"4\", \"5\", \"4\", \"13\"],[\"5\", \"hungary\", \"4\", \"0\", \"2\", \"6\"],[\"6\", \"czech republic\", \"2\", \"1\", \"1\", \"4\"],[\"6\", \"ukraine\", \"1\", \"3\", \"0\", \"4\"],[\"6\", \"italy\", \"0\", \"1\", \"3\", \"4\"],[\"7\", \"sweden\", \"1\", \"2\", \"0\", \"3\"],[\"8\", \"israel\", \"1\", \"1\", \"0\", \"2\"],[\"9\", \"finland\", \"0\", \"0\", \"1\", \"1\"],[\"9\", \"france\", \"0\", \"1\", \"0\", \"1\"]]\nQuestion = Is it true that ukraine is currently in 6th?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    nations = get_column_by_name(table_data, \"nation\")\n    for rank, nation in zip(ranks, nations):\n        if nation.lower() == \"ukraine\":\n            answer = equal_to(rank, \"6\")\n            break \n    return answer\n\n### END"}
{"id": "8933f3e1-e4a1-43e1-b04d-dd780c210c55", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = atlanta falcons draft history\ntable_data = [[\"round\", \"pick\", \"overall\", \"name\", \"position\"],[\"1\", \"9\", \"9\", \"bubba bean\", \"running back\"],[\"2\", \"8\", \"36\", \"sonny collins\", \"running back\"],[\"3\", \"11\", \"71\", \"dave scott\", \"guard\"],[\"4\", \"10\", \"102\", \"walt brett\", \"defensive end\"],[\"6\", \"13\", \"169\", \"stan varner\", \"defensive tackle\"],[\"7\", \"11\", \"193\", \"karl farmer\", \"wide receiver\"],[\"8\", \"10\", \"219\", \"frank reed\", \"washington\"],[\"9\", \"9\", \"246\", \"phil mckinnely\", \"offensive tackle\"],[\"11\", \"11\", \"302\", \"chuck brislin\", \"offensive tackle\"],[\"12\", \"10\", \"329\", \"pat bolton\", \"kicker\"],[\"13\", \"9\", \"356\", \"mike williams\", \"offensive tackle\"],[\"14\", \"8\", \"383\", \"mark husfloen\", \"defensive end\"],[\"15\", \"11\", \"414\", \"ron olson\", \"defensive back\"],[\"16\", \"10\", \"441\", \"pat curto\", \"linebacker\"],[\"17\", \"9\", \"468\", \"tony green\", \"defensive back\"]]\nQuestion = Is it true that pat curto has an overall less than 414 with a pick smaller than 9?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    picks = get_column_by_name(table_data, \"pick\")\n    overalls = get_column_by_name(table_data, \"overall\")\n    for name, pick, overall in zip(names, picks, overalls):\n        if name.lower() == \"pat curto\":\n            answer = less_than(int(pick), 9) and less_than(int(overall), 414)\n            break \n    return answer\n\n### END"}
{"id": "5c3863e3-7f27-4cc3-85c8-39cc2a8ff98b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"title\", \"from album\", \"label\", \"label - nr\"],[\"1962\", \"tonight / sinnin' sam\", \"lookin' ahead\", \"pacific jazz\", \"x - 340\"],[\"1962\", \"the young rabbits / song of india\", \"lookin' ahead\", \"pacific jazz\", \"x - 342\"],[\"1962\", \"congolese sermon / weather beat\", \"(only on 45)\", \"pacific jazz\", \"x - 357\"],[\"1963\", \"no name samba / tough talk\", \"tough talk\", \"world pacific\", \"x - 371\"],[\"1963\", \"turkish black / boopie\", \"tough talk\", \"world pacific\", \"x - 388\"],[\"1963\", \"spanish castles / bluesette\", \"jazz waltz (w les mccann)\", \"world pacific\", \"406\"],[\"1964\", \"heat wave / on broadway\", \"heat wave\", \"world pacific\", \"401\"],[\"1964\", \"i remember tomorrow / long john\", \"stretchin' out\", \"world pacific\", \"412\"],[\"1965\", \"tough talk / the thing\", \"the thing\", \"world pacific\", \"77800\"],[\"1965\", \"aqua dulce / soul bourgeoisie\", \"chile con soul\", \"world pacific\", \"77806\"],[\"1966\", \"scratch / uptight\", \"talk that talk\", \"pacific jazz\", \"88125\"],[\"1968\", \"ooga - boo - ga - loo / eleanor rigby\", \"lighthouse '68\", \"pacific jazz\", \"88144\"],[\"1968\", \"hey jude / love and peace\", \"powerhouse\", \"pacific jazz\", \"88146\"],[\"1969\", \"get back / willie and laura mae jones\", \"lighthouse '69\", \"word pacific jazz\", \"88153\"],[\"1970\", \"way back home / jackson\", \"old socks , new shoes\", \"chisa\", \"c - 8010\"]]\nQuestion = Is it true that the title no name samba / tough talk from the album tough talk on the label - nr x - 371?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    albums = get_column_by_name(table_data, \"from album\")\n    label_nrs = get_column_by_name(table_data, \"label - nr\")\n    for title, album, label_nr in zip(titles, albums, label_nrs):\n        if equal_to(title, \"no name samba / tough talk\") and equal_to(album, \"tough talk\") and equal_to(label_nr, \"x - 371\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "eeca6032-90e1-43e2-84f1-9555fd493b06", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = provinces of korea\ntable_data = [[\"japanese name\",\"kana\",\"hanja / kanji\",\"korean name\",\"hangul\"],[\"chūsei - hokudō\",\"ちゅうせいほくどう\",\"忠清北道\",\"chungcheong - bukdo\",\"충청북도\"],[\"keishō - hokudō\",\"けいしょうほくどう\",\"慶尚北道\",\"gyeongsang - bukdo\",\"경상북도\"],[\"chūsei - nandō\",\"ちゅうせいなんどう\",\"忠淸南道\",\"chungcheong - namdo\",\"충청남도\"],[\"keishō - nandō\",\"けいしょうなんどう\",\"慶尚南道\",\"gyeongsang - namdo\",\"경상남도\"],[\"heian - hokudō\",\"へいあんほくどう\",\"平安北道\",\"pyeongan - bukdo\",\"평안북도\"],[\"kōgendō\",\"こうげんどう\",\"江原道\",\"gangwondo\",\"강원도\"],[\"heian - nandō\",\"へいあんなんどう\",\"平安南道\",\"pyeongan - namdo\",\"평안남도\"],[\"kōkaidō\",\"こうかいどう\",\"黃海道\",\"hwanghaedo\",\"황해도\"],[\"kankyō - hokudo\",\"かんきょうほくどう\",\"咸鏡北道\",\"hamgyeong - bukdo\",\"함경북도\"],[\"zenra - hokudō\",\"ぜんらほくどう\",\"全羅北道\",\"jeolla - bukdo\",\"전라북도\"],[\"kankyō - nandō\",\"かんきょうなんどう\",\"咸鏡南道\",\"hamgyeong - namdo\",\"함경남도\"],[\"zenra - nandō\",\"ぜんらなんどう\",\"全羅南道\",\"jeolla - namdo\",\"전라남도\"],[\"keikidō\",\"けいきどう\",\"京畿道\",\"gyeonggido\",\"경기도\"]]\nQuestion = Is it true that 충청남도 is the hangul of the province with a kana of ちゅうせいなんどう?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    kana_column = get_column_by_name(table_data, \"kana\")\n    hangul_column = get_column_by_name(table_data, \"hangul\")\n    for kana, hangul in zip(kana_column, hangul_column):\n        if kana == \"ちゅうせいなんどう\":\n            answer = equal_to(hangul, \"충청남도\")\n            break\n    return answer\n\n### END"}
{"id": "a9e5c7ad-691a-43e4-b859-cd08124dd23f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\", \"10:30\"],[\"heartland\", \"heartland\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"cbc news : sunday night\", \"cbc news : sunday night\"],[\"law and order : criminal intent\", \"law and order : criminal intent\", \"cold case\", \"cold case\", \"desperate housewives\", \"desperate housewives\", \"dirty sexy money\", \"dirty sexy money\"],[\"the simpsons\", \"da kink in my hair\", \"the simpsons\", \"king of the hill\", \"family guy\", \"american dad!\", \"brothers & sisters\", \"brothers & sisters\"],[\"america 's funniest home videos\", \"america 's funniest home videos\", \"kyle xy\", \"kyle xy\", \"america 's next top model\", \"america 's next top model\", \"stargate sg - 1\", \"stargate sg - 1\"],[\"everybody hates chris\", \"speakers' corner\", \"behind the movies\", \"bravo!fact presents\", \"great movies\", \"great movies\", \"great movies\", \"great movies\"],[\"viva laughlin\", \"viva laughlin\", \"extreme makeover : home edition\", \"extreme makeover : home edition\", \"e! countdowns\", \"e! countdowns\", \"e! live encore\", \"e! live encore\"],[\"découverte\", \"et dieu créa laflaque\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"le téléjournal\", \"le téléjournal\"],[\"le banquier / dieu merci!\", \"le banquier / dieu merci!\", \"occupation double\", \"occupation double\", \"occupation double\", \"occupation double\", \"le tva week - end\", \"le tva week - end\"],[\"loft story\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal weekend\"]]\nQuestion = Is it true that the simpsons is on at 8:00 and brothers and sisters is on at 10:00?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    column_8pm = get_column_by_index(table_data, 2)\n    column_10pm = get_column_by_index(table_data, 6)\n    simpsons_at_8pm = \"the simpsons\" in column_8pm\n    brothers_and_sisters_at_10pm = \"brothers & sisters\" in column_10pm\n    answer = equal_to(simpsons_at_8pm, brothers_and_sisters_at_10pm)\n    return answer\n\n### END"}
{"id": "8680b5fd-7718-4f1b-93c8-891f00b7d594", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = heartland collegiate athletic conference\ntable_data = [[\"institution\", \"location\", \"nickname\", \"founded\", \"type\", \"enrollment\", \"joined\"],[\"anderson university\", \"anderson , indiana\", \"ravens\", \"1917\", \"private / church of god\", \"3065\", \"1987\"],[\"bluffton university\", \"bluffton , ohio\", \"beavers\", \"1899\", \"private / mennonite\", \"1191\", \"1998\"],[\"college of mount st joseph\", \"cincinnati , ohio\", \"lions\", \"1920\", \"private / catholic\", \"2259\", \"1998\"],[\"defiance college\", \"defiance , ohio\", \"yellow jackets\", \"1850\", \"private / united church of christ\", \"1000\", \"2000\"],[\"earlham college\", \"richmond , indiana\", \"quakers\", \"1847\", \"private / quaker\", \"1194\", \"2010\"],[\"franklin college\", \"franklin , indiana\", \"grizzlies\", \"1834\", \"private / baptist\", \"1000\", \"1987\"],[\"hanover college\", \"hanover , indiana\", \"panthers\", \"1827\", \"private / presbyterian\", \"1062\", \"1987\"],[\"manchester university\", \"north manchester , indiana\", \"spartans\", \"1860\", \"private / church of the brethren\", \"1250\", \"1987\"],[\"rose - hulman institute of technology\", \"terre haute , indiana\", \"fightin' engineers\", \"1874\", \"private / non - sectarian\", \"1970\", \"1988 1\"]]\nQuestion = Is it true that in franklin , indiana , the institution joined 1 input in 1988 1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"location\")\n    joined_years = get_column_by_name(table_data, \"joined\")\n    for location, joined_year in zip(locations, joined_years):\n        if \"franklin , indiana\" in location.lower():\n            answer = equal_to(joined_year, \"1988 1\")\n            break \n    return answer\n\n### END"}
{"id": "ad87f53a-d475-4cde-9c4c-375116c7f840", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = daniel gimeno - traver\ntable_data = [[\"date\", \"tournament\", \"surface\", \"opponent\", \"score\"],[\"5 september 2005\", \"brasov\", \"clay\", \"daniel elsner\", \"5 - 7 , 2 - 6\"],[\"5 november 2007\", \"guayaquil\", \"clay\", \"nicolás lapentti\", \"3 - 6 , 7 - 6 (6) , 5 - 7\"],[\"10 march 2008\", \"tanger\", \"clay\", \"marcel granollers\", \"4 - 6 , 4 - 6\"],[\"15 september 2008\", \"banja luka\", \"clay\", \"ilija bozoljac\", \"4 - 6 , 4 - 6\"],[\"12 october 2009\", \"asunción\", \"clay\", \"ramón delgado\", \"6 - 7 (2 - 7) , 6 - 1 , 3 - 6\"],[\"5 july 2010\", \"san benedetto\", \"clay\", \"carlos berlocq\", \"3 - 6 , 6 - 4 , 4 - 6\"],[\"2 october 2011\", \"madrid\", \"clay\", \"jérémy chardy\", \"1 - 6 , 7 - 5 , 6 - 7 (3 - 7)\"],[\"12 august 2012\", \"cordenos\", \"clay\", \"paolo lorenzi\", \"6 - 7 (5 - 7) , 3 - 6\"]]\nQuestion = Is it true that opponent ilija bozoljac played at the banja luka tournament and had a score of 4 - 6 , 4 - 6?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    tournaments = get_column_by_name(table_data, \"tournament\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    scores = get_column_by_name(table_data, \"score\")\n    for tournament, opponent, score in zip(tournaments, opponents, scores):\n        if tournament.lower() == \"banja luka\" and opponent.lower() == \"ilija bozoljac\":\n            answer = equal_to(score, \"4 - 6 , 4 - 6\")\n            break \n    return answer\n\n### END"}
{"id": "31e8e12d-7f28-4343-bb7f-be3ffae04c5b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1981 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"footscray\", \"10.14 (74)\", \"hawthorn\", \"11.18 (84)\", \"western oval\", \"13789\", \"23 may 1981\"],[\"fitzroy\", \"13.15 (93)\", \"geelong\", \"16.18 (114)\", \"junction oval\", \"15604\", \"23 may 1981\"],[\"carlton\", \"25.22 (172)\", \"south melbourne\", \"11.7 (73)\", \"princes park\", \"22445\", \"23 may 1981\"],[\"melbourne\", \"10.10 (70)\", \"essendon\", \"14.20 (104)\", \"mcg\", \"31769\", \"23 may 1981\"],[\"north melbourne\", \"12.26 (98)\", \"collingwood\", \"16.15 (111)\", \"arden street oval\", \"24625\", \"23 may 1981\"],[\"richmond\", \"20.16 (136)\", \"st kilda\", \"15.15 (105)\", \"vfl park\", \"40240\", \"23 may 1981\"]]\nQuestion = Is it true that north melbourne played before a home crowd of 24625?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    for home_team, crowd in zip(home_teams, crowds):\n        if home_team.lower() == \"north melbourne\":\n            answer = equal_to(crowd, \"24625\")\n            break \n    return answer\n\n### END"}
{"id": "94e34cbb-06a8-4a41-99bd-fd78247128b1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = ádammo\ntable_data = [[\"año\", \"trabajo nominado\", \"premio\", \"categoría\", \"country\", \"resultado\"],[\"2009\", \"adammo\", \"mtv latin america\", \"revelation artist\", \"colombia\", \"nominate\"],[\"2009\", \"adammo\", \"mtv latin america\", \"best new artist : center\", \"colombia\", \"winner\"],[\"2009\", \"adammo\", \"mtv latin america\", \"prize zone\", \"colombia\", \"nominate\"],[\"2010\", \"adammo\", \"premios apdayc\", \"rock group of the year\", \"perú\", \"winner\"],[\"2010\", \"adammo\", \"premios apdayc\", \"artist of the year\", \"perú\", \"nominate\"],[\"2010\", \"adammo\", \"premios orgullosamente latino\", \"grupo latin of the year\", \"mexico\", \"nominate\"],[\"2010\", \"algún día\", \"latin grammy awards\", \"short video of the year\", \"eeuu\", \"nominate\"],[\"2010\", \"adammo\", \"premios clarín\", \"best music video of the year\", \"argentina\", \"nominate\"],[\"2010\", \"adammo\", \"premios clarín\", \"best international breakthrough\", \"argentina\", \"nominate\"],[\"2010\", \"adammo\", \"premios clarín\", \"best international album\", \"argentina\", \"nominate\"],[\"2010\", \"algún día\", \"radio can\", \"best video\", \"colombia\", \"nominate\"],[\"2011\", \"adammo\", \"premios apdayc\", \"rock group of the year\", \"perú\", \"winner\"],[\"2011\", \"adammo\", \"mtv europe music awards\", \"world wide act latin american\", \"europa\", \"nominate\"],[\"2011\", \"adammo\", \"zona joven\", \"best pop rock peruano\", \"perú\", \"winner\"],[\"2012\", \"siento que caigo\", \"radio can\", \"song of the year\", \"perú\", \"nominate\"]]\nQuestion = Is it true that in the año 2009 , premio mtv latin america had trabajo nominado of adammo?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    años = get_column_by_name(table_data, \"año\")\n    trabajos_nominados = get_column_by_name(table_data, \"trabajo nominado\")\n    premios = get_column_by_name(table_data, \"premio\")\n    answer = False\n    for año, trabajo_nominado, premio in zip(años, trabajos_nominados, premios):\n        if año == \"2009\" and trabajo_nominado.lower() == \"adammo\" and premio.lower() == \"mtv latin america\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "5ae9a91f-03df-45fd-a647-2af2d318a051", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rivers state\ntable_data = [[\"lga name\",\"area (km 2 )\",\"census 2006 population\",\"administrative capital\",\"postal code\"],[\"port harcourt\",\"109\",\"541115\",\"port harcourt\",\"500\"],[\"obio - akpor\",\"260\",\"464789\",\"rumuodumaya\",\"500\"],[\"okrika\",\"222\",\"222026\",\"okrika\",\"500\"],[\"ogu / bolo\",\"89\",\"74683\",\"ogu\",\"500\"],[\"eleme\",\"138\",\"190884\",\"eleme\",\"501\"],[\"tai\",\"159\",\"117797\",\"sakpenwa\",\"501\"],[\"gokana\",\"126\",\"228828\",\"kpor\",\"501\"],[\"khana\",\"560\",\"294217\",\"bori\",\"502\"],[\"oyigbo\",\"248\",\"122687\",\"afam\",\"502\"],[\"opobo / nkoro\",\"130\",\"151511\",\"opobo town\",\"503\"],[\"andoni\",\"233\",\"211009\",\"ngo\",\"503\"],[\"bonny\",\"642\",\"215358\",\"bonny\",\"503\"],[\"degema\",\"1011\",\"249773\",\"degema\",\"504\"],[\"asari - toru\",\"113\",\"220100\",\"buguma\",\"504\"],[\"akuku - toru\",\"1443\",\"156006\",\"abonnema\",\"504\"],[\"abua / odual\",\"704\",\"282988\",\"abua\",\"510\"],[\"ahoada west\",\"403\",\"249425\",\"akinima\",\"510\"],[\"ahoada east\",\"341\",\"166747\",\"ahoada\",\"510\"],[\"ogba / egbema / ndoni\",\"969\",\"284010\",\"omuku\",\"510\"],[\"emohua\",\"831\",\"201901\",\"emohua\",\"511\"],[\"ikwerre\",\"655\",\"189726\",\"isiokpo\",\"511\"],[\"etche\",\"805\",\"249454\",\"okehi\",\"512\"]]\nQuestion = Is it true that 201901 is the maximum 2006 census population of lga name ikwerre?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    lga_names = get_column_by_name(table_data, \"lga name\")\n    populations = get_column_by_name(table_data, \"census 2006 population\")\n    for lga_name, population in zip(lga_names, populations):\n        if lga_name.lower() == \"ikwerre\":\n            answer = equal_to(int(population), 201901)\n            break \n    return answer\n\n### END"}
{"id": "baa3fa25-94b9-4856-af8f-836699196288", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2006 - 07 seattle supersonics season\ntable_data = [[\"game\",\"date\",\"team\",\"score\",\"high points\",\"high rebounds\",\"high assists\",\"location attendance\",\"record\"],[\"1\",\"november 1\",\"portland\",\"l 106 - 110\",\"rashard lewis (25)\",\"rashard lewis (8)\",\"luke ridnour (13)\",\"keyarena 17072\",\"0 - 1\"],[\"2\",\"november 3\",\"l a lakers\",\"l 112 - 118\",\"ray allen (30)\",\"chris wilcox (12)\",\"earl watson (7)\",\"staples center 18997\",\"0 - 2\"],[\"3\",\"november 5\",\"l a lakers\",\"w 117 - 101\",\"ray allen (32)\",\"chris wilcox (8)\",\"luke ridnour (7)\",\"keyarena 17072\",\"1 - 2\"],[\"4\",\"november 7\",\"miami\",\"l 87 - 90\",\"rashard lewis (23)\",\"nick collison (10)\",\"earl watson (6)\",\"american airlines arena 19600\",\"1 - 3\"],[\"5\",\"november 8\",\"orlando\",\"l 87 - 88\",\"ray allen (21)\",\"danny fortson (8)\",\"luke ridnour (6)\",\"amway arena 16312\",\"1 - 4\"],[\"6\",\"november 10\",\"charlotte\",\"w 99 - 85\",\"ray allen (26)\",\"nick collison (15)\",\"luke ridnour (7)\",\"charlotte bobcats arena 13515\",\"2 - 4\"],[\"7\",\"november 11\",\"atlanta\",\"w 113 - 112 (ot)\",\"ray allen (33)\",\"chris wilcox (15)\",\"luke ridnour (5)\",\"philips arena 19309\",\"3 - 4\"],[\"8\",\"november 13\",\"new jersey\",\"w 119 - 113\",\"luke ridnour (32)\",\"rashard lewis (11)\",\"luke ridnour , earl watson (7)\",\"continental airlines arena 14392\",\"4 - 4\"],[\"9\",\"november 15\",\"philadelphia\",\"l 90 - 96\",\"rashard lewis (25)\",\"rashard lewis , chris wilcox (15)\",\"luke ridnour (7)\",\"keyarena 14936\",\"4 - 5\"],[\"10\",\"november 17\",\"utah\",\"l 109 - 118\",\"ray allen (32)\",\"chris wilcox (11)\",\"luke ridnour (7)\",\"keyarena 15513\",\"4 - 6\"],[\"11\",\"november 18\",\"golden state\",\"l 95 - 107\",\"ray allen (34)\",\"ray allen (11)\",\"earl watson (7)\",\"oracle arena 17205\",\"4 - 7\"],[\"12\",\"november 20\",\"new jersey\",\"w 99 - 87\",\"ray allen (29)\",\"ray allen (9)\",\"ray allen , luke ridnour (5)\",\"keyarena 14621\",\"5 - 7\"],[\"13\",\"november 22\",\"l a clippers\",\"w 95 - 85\",\"rashard lewis (35)\",\"nick collison , rashard lewis (13)\",\"luke ridnour (9)\",\"staples center 16290\",\"6 - 7\"],[\"14\",\"november 24\",\"sacramento\",\"l 100 - 109\",\"rashard lewis (26)\",\"chris wilcox (13)\",\"luke ridnour (8)\",\"keyarena 16757\",\"6 - 8\"],[\"15\",\"november 26\",\"san antonio\",\"l 78 - 98\",\"ray allen (21)\",\"johan petro (9)\",\"chris wilcox (5)\",\"keyarena 15483\",\"6 - 9\"]]\nQuestion = Is it true that luke ridnour had the lowest assists in the game against utah?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef in_string(str1, str2):\n    return str1 in str2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    high_assists = get_column_by_name(table_data, \"high assists\")\n    for team, high_assist in zip(teams, high_assists):\n        if team.lower() == \"utah\":\n            answer = not in_string(\"luke ridnour\", high_assist.lower())\n            break \n    return answer\n\n### END"}
{"id": "c30207da-d95b-4bdc-8e7d-54872e1ab0b1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = gambrinus liga\ntable_data = [[\"season\",\"champions\",\"runner - up\",\"third place\",\"top goalscorer\",\"club\"],[\"1993 - 94\",\"sparta prague (1)\",\"slavia prague\",\"baník ostrava\",\"horst siegl (20)\",\"sparta prague\"],[\"1994 - 95\",\"sparta prague (2)\",\"slavia prague\",\"fc brno\",\"radek drulák (15)\",\"drnovice\"],[\"1995 - 96\",\"slavia prague (1)\",\"sigma olomouc\",\"baumit jablonec\",\"radek drulák (22)\",\"drnovice\"],[\"1996 - 97\",\"sparta prague (3)\",\"slavia prague\",\"baumit jablonec\",\"horst siegl (19)\",\"sparta prague\"],[\"1997 - 98\",\"sparta prague (4)\",\"slavia prague\",\"sigma olomouc\",\"horst siegl (13)\",\"sparta prague\"],[\"1998 - 99\",\"sparta prague (5)\",\"teplice\",\"slavia prague\",\"horst siegl (18)\",\"sparta prague\"],[\"1999 - 00\",\"sparta prague (6)\",\"slavia prague\",\"drnovice\",\"vratislav lokvenc (21)\",\"sparta prague\"],[\"2000 - 01\",\"sparta prague (7)\",\"slavia prague\",\"sigma olomouc\",\"vítězslav tuma (15)\",\"drnovice\"],[\"2001 - 02\",\"slovan liberec (1)\",\"sparta prague\",\"viktoria žižkov\",\"jiří štajner (15)\",\"slovan liberec\"],[\"2002 - 03\",\"sparta prague (8)\",\"slavia prague\",\"viktoria žižkov\",\"jiří kowalík (16)\",\"1. fc synot\"],[\"2003 - 04\",\"baník ostrava (1)\",\"sparta prague\",\"sigma olomouc\",\"marek heinz (19)\",\"baník ostrava\"],[\"2004 - 05\",\"sparta prague (9)\",\"slavia prague\",\"teplice\",\"tomáš jun (14)\",\"sparta prague\"],[\"2005 - 06\",\"slovan liberec (2)\",\"mladá boleslav\",\"slavia prague\",\"milan ivana (11)\",\"fc slovácko\"],[\"2006 - 07\",\"sparta prague (10)\",\"slavia prague\",\"mladá boleslav\",\"luboš pecka (16)\",\"mladá boleslav\"],[\"2007 - 08\",\"slavia prague (2)\",\"sparta prague\",\"baník ostrava\",\"václav svěrkoš (15)\",\"baník ostrava\"],[\"2008 - 09\",\"slavia prague (3)\",\"sparta prague\",\"slovan liberec\",\"andrej kerić (15)\",\"slovan liberec\"],[\"2009 - 10\",\"sparta prague (11)\",\"jablonec\",\"baník ostrava\",\"michal ordoš (12)\",\"sigma olomouc\"],[\"2010 - 11\",\"viktoria plzeň (1)\",\"sparta prague\",\"jablonec\",\"david lafata (19)\",\"jablonec\"],[\"2011 - 12\",\"slovan liberec (3)\",\"sparta prague\",\"viktoria plzeň\",\"david lafata (25)\",\"jablonec\"]]\nQuestion = Is it true that horst siegl was the top goalscorer with 18 goals for the 1998 - 99 season?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    top_goalscorers = get_column_by_name(table_data, \"top goalscorer\")\n    for season, top_goalscorer in zip(seasons, top_goalscorers):\n        if season == \"1998 - 99\":\n            answer = equal_to(top_goalscorer, \"horst siegl (18)\")\n            break \n    return answer\n\n### END"}
{"id": "d08497eb-8c5e-4f86-8cd9-83f6a3c5af61", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\", \"10:30\"],[\"heartland\", \"heartland\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"cbc news : sunday night\", \"cbc news : sunday night\"],[\"law and order : criminal intent\", \"law and order : criminal intent\", \"cold case\", \"cold case\", \"desperate housewives\", \"desperate housewives\", \"dirty sexy money\", \"dirty sexy money\"],[\"the simpsons\", \"da kink in my hair\", \"the simpsons\", \"king of the hill\", \"family guy\", \"american dad!\", \"brothers & sisters\", \"brothers & sisters\"],[\"america 's funniest home videos\", \"america 's funniest home videos\", \"kyle xy\", \"kyle xy\", \"america 's next top model\", \"america 's next top model\", \"stargate sg - 1\", \"stargate sg - 1\"],[\"everybody hates chris\", \"speakers' corner\", \"behind the movies\", \"bravo!fact presents\", \"great movies\", \"great movies\", \"great movies\", \"great movies\"],[\"viva laughlin\", \"viva laughlin\", \"extreme makeover : home edition\", \"extreme makeover : home edition\", \"e! countdowns\", \"e! countdowns\", \"e! live encore\", \"e! live encore\"],[\"découverte\", \"et dieu créa laflaque\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"le téléjournal\", \"le téléjournal\"],[\"le banquier / dieu merci!\", \"le banquier / dieu merci!\", \"occupation double\", \"occupation double\", \"occupation double\", \"occupation double\", \"le tva week - end\", \"le tva week - end\"],[\"loft story\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal weekend\"]]\nQuestion = Is it true that heartland takes up two time slots , 7:00 and 7:30 and découverte takes up three time slots , 7:00 , 7:30 , and 8:00?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef solution(table_data):\n    column_1 = get_column_by_index(table_data, 0)\n    column_2 = get_column_by_index(table_data, 1)\n    column_3 = get_column_by_index(table_data, 2)\n    heartland_count = count_occurrences(\"heartland\", column_1) + count_occurrences(\"heartland\", column_2)\n    decouverte_count = count_occurrences(\"découverte\", column_1) + count_occurrences(\"découverte\", column_2) + count_occurrences(\"découverte\", column_3)\n    answer = heartland_count == 2 and decouverte_count == 3\n    return answer\n\n### END"}
{"id": "388e0b24-f0ce-4519-be5c-e4a1d15b8b17", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1930 grand prix season\ntable_data = [[\"name\",\"circuit\",\"date\",\"winning driver\",\"winning constructor\",\"report\"],[\"circuit d'esterel plage\",\"saint - raphaël\",\"2 march\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"tripoli grand prix\",\"tripoli\",\"23 march\",\"baconin borzacchini\",\"maserati\",\"report\"],[\"monaco grand prix\",\"monte carlo\",\"6 april\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"alessandria circuit\",\"bordino\",\"20 april\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"oran grand prix\",\"arcole\",\"27 april\",\"jean de maleplane\",\"bugatti\",\"report\"],[\"targa florio\",\"madonie\",\"4 may\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"picardy grand prix\",\"péronne\",\"18 may\",\"max fourny\",\"bugatti\",\"report\"],[\"rome grand prix\",\"tre fontane\",\"25 may\",\"luigi arcangeli\",\"maserati\",\"report\"],[\"grand prix des frontières\",\"chimay\",\"9 june\",\"georges de marotte\",\"salmson\",\"report\"],[\"lyon grand prix\",\"quincieux\",\"15 june\",\"louis chiron\",\"bugatti\",\"report\"],[\"grand prix de la marne\",\"reims\",\"29 june\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"eifelrennen\",\"nürburgring\",\"20 july\",\"heinrich - joachim von morgen\",\"bugatti\",\"report\"],[\"dieppe grand prix\",\"dieppe\",\"20 july\",\"marcel lehoux\",\"bugatti\",\"report\"],[\"coppa ciano\",\"montenero\",\"3 august\",\"luigi fagioli\",\"maserati\",\"report\"],[\"dauphiné circuit\",\"grenoble\",\"10 august\",\"philippe étancelin\",\"bugatti\",\"report\"],[\"coppa acerbo\",\"pescara\",\"17 august\",\"achille varzi\",\"maserati\",\"report\"],[\"grand prix du comminges\",\"saint - gaudens\",\"17 august\",\"françois miquel\",\"bugatti\",\"report\"],[\"monza grand prix\",\"monza\",\"7 september\",\"achille varzi\",\"maserati\",\"report\"],[\"lviv grand prix\",\"lviv\",\"8 september\",\"henryk liefeldt\",\"austro daimler\",\"report\"],[\"masaryk circuit\",\"brno\",\"28 september\",\"hermann of leiningen\",\"bugatti\",\"report\"],[\"san sebastián grand prix\",\"lasarte\",\"5 october\",\"achille varzi\",\"maserati\",\"report\"]]\nQuestion = Is it true that winning driver , rené dreyfus , was at reims?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    winning_drivers = get_column_by_name(table_data, \"winning driver\")\n    circuits = get_column_by_name(table_data, \"circuit\")\n    answer = False\n    for driver, circuit in zip(winning_drivers, circuits):\n        if \"rené dreyfus\" in driver.lower() and \"reims\" in circuit.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "9b3fe675-5fe2-4733-8052-e7b69c0dac17", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1985 chicago cubs season\ntable_data = [[\"date\", \"opponent\", \"score\", \"loss\", \"save\"],[\"july 1\", \"phillies\", \"3 - 1\", \"denny (5 - 6)\", \"smith (17)\"],[\"july 2\", \"phillies\", \"11 - 2\", \"sutcliffe (7 - 7)\", \"\"],[\"july 3\", \"phillies\", \"4 - 3\", \"tekulve (4 - 3)\", \"\"],[\"july 4\", \"giants\", \"6 - 4\", \"trout (7 - 4)\", \"minton (2)\"],[\"july 5\", \"giants\", \"12 - 6\", \"sanderson (4 - 4)\", \"\"],[\"july 6\", \"giants\", \"6 - 4\", \"smith (4 - 3)\", \"m davis (5)\"],[\"july 7\", \"giants\", \"6 - 5\", \"m davis (3 - 6)\", \"smith (18)\"],[\"july 8\", \"padres\", \"8 - 4\", \"sorensen (1 - 2)\", \"\"],[\"july 9\", \"padres\", \"7 - 3\", \"show (7 - 6)\", \"frazier (1)\"],[\"july 10\", \"padres\", \"4 - 3\", \"dravecky (8 - 5)\", \"smith (19)\"],[\"july 11\", \"dodgers\", \"3 - 1\", \"fontenot (3 - 4)\", \"howell (9)\"],[\"july 12\", \"dodgers\", \"7 - 4\", \"smith (4 - 4)\", \"\"],[\"july 13\", \"dodgers\", \"9 - 1\", \"gura (0 - 2)\", \"\"],[\"july 14\", \"dodgers\", \"10 - 4\", \"honeycutt (6 - 8)\", \"brusstar (2)\"],[\"july 18\", \"giants\", \"1 - 0\", \"frazier (5 - 3)\", \"\"],[\"july 19\", \"giants\", \"4 - 3\", \"gott (4 - 7)\", \"smith (20)\"],[\"july 20\", \"giants\", \"2 - 1\", \"hammaker (3 - 9)\", \"smith (21)\"],[\"july 21\", \"giants\", \"2 - 1\", \"gura (0 - 3)\", \"minton (3)\"],[\"july 22\", \"padres\", \"5 - 3\", \"jackson (0 - 1)\", \"smith (22)\"],[\"july 23\", \"padres\", \"8 - 1\", \"hawkins (12 - 3)\", \"\"],[\"july 24\", \"padres\", \"4 - 3 10\", \"stoddard (1 - 4)\", \"frazier (2)\"],[\"july 25\", \"dodgers\", \"7 - 3\", \"fontenot (3 - 5)\", \"howell (10)\"],[\"july 26\", \"dodgers\", \"10 - 0\", \"ruthven (4 - 7)\", \"\"],[\"july 27\", \"dodgers\", \"5 - 4\", \"frazier (5 - 4)\", \"howell (11)\"],[\"july 28\", \"dodgers\", \"9 - 2\", \"powell (0 - 1)\", \"brusstar (3)\"],[\"july 30\", \"cardinals\", \"11 - 3\", \"engel (0 - 1)\", \"\"],[\"july 31\", \"cardinals\", \"5 - 2\", \"andãjar (17 - 5)\", \"smith (23)\"]]\nQuestion = Is it true that smith (22) was the save when the padres were the opponent?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    saves = get_column_by_name(table_data, \"save\")\n    answer = False\n    for opponent, save in zip(opponents, saves):\n        if \"padres\" in opponent.lower() and \"smith (22)\" in save.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "77b69701-1ba4-46b6-a238-d4690c5c2026", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = american dad! (season 1)\ntable_data = [[\"no in series\", \"title\", \"directed by\", \"written by\", \"original air date\", \"production code\", \"us viewers (millions)\"],[\"1\", \"pilot\", \"ron hughart\", \"seth macfarlane , mike barker & matt weitzman\", \"february 6 , 2005\", \"1ajn01\", \"15.10\"],[\"2\", \"threat levels\", \"brent woods\", \"david zuckerman\", \"may 1 , 2005\", \"1ajn02\", \"9.47\"],[\"3\", \"stan knows best\", \"pam cooke\", \"mike barker & matt weitzman\", \"may 8 , 2005\", \"1ajn03\", \"8.23\"],[\"4\", \"francine 's flashback\", \"caleb meurer & brent woods\", \"rick wiener & kenny schwartz\", \"may 15 , 2005\", \"1ajn05\", \"7.84\"],[\"5\", \"roger codger\", \"albert calleros\", \"dan vebber\", \"june 5 , 2005\", \"1ajn04\", \"6.09\"],[\"6\", \"homeland insecurity\", \"rodney clouden\", \"neal boushell & sam o'neal\", \"june 12 , 2005\", \"1ajn06\", \"6.85\"]]\nQuestion = Is it true that the fifth episode was written by dan vebber?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_written_by = get_column_by_name(table_data, \"written by\")\n    answer = \"dan vebber\" in column_written_by\n    return answer\n\n### END"}
{"id": "141da641-5d20-4f7d-84fa-946299b34516", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mercedes - benz r170\ntable_data = [[\"model\", \"years\", \"engine\", \"power\", \"0 - 100 km / h (62 mph)\", \"top speed\"],[\"slk200\", \"1997 - 2004\", \"2l m111.946 l4\", \"102 kw (136hp)\", \"9.3 seconds\", \"208 km / h (129 mph)\"],[\"slk200k\", \"1997 - 2000\", \"2l m111.943 l4\", \"143 kw (192hp)\", \"6.8 seconds\", \"236 km / h (147 mph)\"],[\"slk200k\", \"2001 - 2004\", \"2l m111.958 l4\", \"122 kw (163hp)\", \"7.4 seconds\", \"223 km / h (138 mph)\"],[\"slk230k\", \"1996 - 2000\", \"2.3l m111.973 l4\", \"144 kw (193hp)\", \"6.9 seconds\", \"231 km / h (143 mph)\"],[\"slk230k\", \"2001 - 2004\", \"2.3l m111.983 l4\", \"147 kw (197hp)\", \"6.8 seconds\", \"240 km / h (148 mph)\"],[\"slk320\", \"2001 - 2004\", \"3.2l m112.947 v6\", \"162 kw (218hp)\", \"6.5 seconds\", \"250 / 276 km / h (155 / 171 mph)\"],[\"slk32 amg\", \"2001 - 2004\", \"3.2l m112.960 v6\", \"264 kw (354hp)\", \"5.2 seconds\", \"250 / 280 / 310 km / h (155 / 174 / 193 mph)\"]]\nQuestion = Is it true that the slk200k model , with a top speed of 236 km / h (147 mph) , could accelerate to 100 km / h (62 mph) in 6.8 seconds in the years 1997 - 2000?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    models = get_column_by_name(table_data, \"model\")\n    years = get_column_by_name(table_data, \"years\")\n    acceleration_times = get_column_by_name(table_data, \"0 - 100 km / h (62 mph)\")\n    top_speeds = get_column_by_name(table_data, \"top speed\")\n    for model, year, acceleration_time, top_speed in zip(models, years, acceleration_times, top_speeds):\n        if model.lower() == \"slk200k\" and year == \"1997 - 2000\":\n            answer = equal_to(acceleration_time, \"6.8 seconds\") and equal_to(top_speed, \"236 km / h (147 mph)\")\n            break \n    return answer\n\n### END"}
{"id": "e388d057-3f6d-4a62-afad-663bf69a9697", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = algeria at the 2008 summer olympics\ntable_data = [[\"athlete\", \"event\", \"round of 32\", \"round of 16\", \"quarterfinals\", \"semifinals\"],[\"abdelhalim ouradi\", \"bantamweight\", \"nevin ( irl ) l 4 - 9\", \"did not advance\", \"did not advance\", \"did not advance\"],[\"abdelkader chadi\", \"featherweight\", \"bye\", \"adi ( tha ) w 7 - 6\", \"kılıç ( tur ) l 6 - 13\", \"did not advance\"],[\"hamza kramou\", \"lightweight\", \"ugás ( cub ) l 3 - 21\", \"did not advance\", \"did not advance\", \"did not advance\"],[\"nabil kassel\", \"middleweight\", \"bye\", \"sutherland ( irl ) l 14 - 21\", \"did not advance\", \"did not advance\"],[\"abdelhafid benchebla\", \"light heavyweight\", \"kumar ( ind ) w 23 - 3\", \"yasser ( egy ) w 13 - 6\", \"zhang xp ( chn ) l 7 - 12\", \"did not advance\"],[\"abdelaziz touilbini\", \"heavyweight\", \"n / a\", \"wilder ( usa ) l 4 - 10\", \"did not advance\", \"did not advance\"]]\nQuestion = Is it true that abdelhafid benchebla did not advance to the quarterfinals but nabil kassel did?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    athletes = get_column_by_name(table_data, \"athlete\")\n    quarterfinals = get_column_by_name(table_data, \"quarterfinals\")\n    for athlete, quarterfinal in zip(athletes, quarterfinals):\n        if athlete.lower() == \"abdelhafid benchebla\":\n            abdelhafid_quarterfinal = quarterfinal\n        if athlete.lower() == \"nabil kassel\":\n            nabil_quarterfinal = quarterfinal\n    answer = equal_to(abdelhafid_quarterfinal, \"did not advance\") and not equal_to(nabil_quarterfinal, \"did not advance\")\n    return answer\n\n### END"}
{"id": "f9f1ad90-7f49-43a9-873d-c068a4c5c429", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date (yyyy - mm - dd)\", \"time ( utc )\", \"latitude\", \"longitude\", \"depth\", \"magnitude\"],[\"2010 - 04 - 13\", \"21:40:00\", \"33.183 degree n\", \"96.623 degree e\", \"-\", \"5.0 (m w )\"],[\"2010 - 04 - 13\", \"23:49:39\", \"33.224 degree n\", \"96.666 degree e\", \"-\", \"6.9 (m w )\"],[\"2010 - 04 - 14\", \"00:01:17\", \"32.875 degree n\", \"96.999 degree e\", \"-\", \"5.3 (m w )\"],[\"2010 - 04 - 14\", \"00:12:25\", \"33.159 degree n\", \"96.580 degree e\", \"-\", \"5.2 (m w )\"],[\"2010 - 04 - 14\", \"01:25:15\", \"33.179 degree n\", \"96.448 degree e\", \"-\", \"5.8 (m w )\"],[\"2010 - 04 - 14\", \"03:15:46\", \"33.151 degree n\", \"96.701 degree e\", \"-\", \"4.7 (m w )\"],[\"2010 - 04 - 14\", \"12:19:36\", \"33.077 degree n\", \"96.846 degree e\", \"-\", \"4.1 (m w )\"]]\nQuestion = Is it true that the date was found to be 2010 - 04 - 13 for the given utc time of 03:15:46?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date (yyyy - mm - dd)\")\n    times = get_column_by_name(table_data, \"time ( utc )\")\n    for date, time in zip(dates, times):\n        if time == \"03:15:46\":\n            answer = equal_to(date, \"2010 - 04 - 13\")\n            break \n    return answer\n\n### END"}
{"id": "ee7d98ca-5048-4895-8601-2dd31a832ac7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of superfund sites in alabama\ntable_data = [[\"cerclis id\", \"name\", \"county\", \"proposed\", \"listed\", \"construction completed\", \"partially deleted\", \"deleted\"],[\"al6210020008\", \"alabama army ammunition plant\", \"talladega\", \"10 / 15 / 1984\", \"07 / 22 / 1987\", \"-\", \"-\", \"-\"],[\"ald004022448\", \"alabama plating company\", \"shelby\", \"08 / 24 / 2000\", \"09 / 18 / 2012\", \"-\", \"-\", \"-\"],[\"ald981868466\", \"american brass\", \"henry\", \"01 / 19 / 1999\", \"05 / 10 / 1999\", \"09 / 01 / 2009\", \"-\", \"-\"],[\"al3210020027\", \"anniston army depot (se industrial area)\", \"calhoun\", \"10 / 15 / 1984\", \"03 / 13 / 1989\", \"-\", \"-\", \"-\"],[\"al0001058056\", \"capitol city plume\", \"montgomery\", \"05 / 11 / 2000\", \"-\", \"-\", \"-\", \"-\"],[\"ald001221902\", \"ciba - geigy corp ( mcintosh plant)\", \"washington\", \"09 / 08 / 1983\", \"09 / 21 / 1984\", \"07 / 19 / 2000\", \"-\", \"-\"],[\"ald041906173\", \"interstate lead company (ilco)\", \"jefferson\", \"09 / 18 / 1985\", \"06 / 10 / 1986\", \"-\", \"-\", \"-\"],[\"ald031618069\", \"mowbray engineering\", \"butler\", \"12 / 30 / 1982\", \"09 / 08 / 1983\", \"09 / 16 / 1991\", \"-\", \"12 / 30 / 1993\"],[\"ald008188708\", \"olin corp ( mcintosh plant)\", \"washington\", \"09 / 08 / 1983\", \"09 / 21 / 1984\", \"-\", \"-\", \"-\"],[\"ald980728703\", \"perdido ground water contamination\", \"baldwin\", \"12 / 30 / 1982\", \"09 / 08 / 1983\", \"07 / 30 / 1993\", \"-\", \"-\"],[\"al7210020742\", \"redstone arsenal ( us army / nasa )\", \"madison\", \"06 / 23 / 1993\", \"05 / 31 / 1994\", \"-\", \"-\", \"-\"],[\"ald980844385\", \"redwing carriers incorporated (saraland)\", \"mobile\", \"06 / 24 / 1988\", \"02 / 21 / 1990\", \"09 / 03 / 2009\", \"-\", \"-\"],[\"ald095688875\", \"stauffer chemical company (cold creek plant)\", \"mobile\", \"09 / 08 / 1983\", \"09 / 21 / 1984\", \"-\", \"-\", \"-\"],[\"ald008161176\", \"stauffer chemical company (lemoyne plant)\", \"mobile\", \"09 / 08 / 1983\", \"09 / 21 / 1984\", \"-\", \"-\", \"-\"],[\"ald007454085\", \"th agriculture & nutrition (montgomery)\", \"montgomery\", \"06 / 24 / 1988\", \"08 / 30 / 1990\", \"09 / 27 / 2002\", \"-\", \"-\"],[\"ald983166299\", \"triana / tennessee river\", \"morgan , limestone , and madison\", \"12 / 30 / 1982\", \"09 / 08 / 1983\", \"12 / 18 / 1991\", \"-\", \"-\"]]\nQuestion = Is it true that on 05 / 11 / 2000 proposed date the cerclis id is al0001058056 for capitol city plume?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    cerclis_ids = get_column_by_name(table_data, \"cerclis id\")\n    names = get_column_by_name(table_data, \"name\")\n    proposed_dates = get_column_by_name(table_data, \"proposed\")\n    for cerclis_id, name, proposed_date in zip(cerclis_ids, names, proposed_dates):\n        if cerclis_id.lower() == \"al0001058056\" and name.lower() == \"capitol city plume\" and proposed_date == \"05 / 11 / 2000\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "075d31ea-a777-478f-874d-c93bad0e58a7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1928 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"fitzroy\", \"17.11 (113)\", \"south melbourne\", \"11.11 (77)\", \"brunswick street oval\", \"8000\", \"2 june 1928\"],[\"carlton\", \"12.12 (84)\", \"collingwood\", \"13.9 (87)\", \"princes park\", \"30000\", \"2 june 1928\"],[\"north melbourne\", \"5.7 (37)\", \"melbourne\", \"14.16 (100)\", \"arden street oval\", \"9000\", \"2 june 1928\"],[\"richmond\", \"12.21 (93)\", \"geelong\", \"13.12 (90)\", \"punt road oval\", \"10000\", \"2 june 1928\"],[\"st kilda\", \"9.17 (71)\", \"footscray\", \"11.6 (72)\", \"junction oval\", \"12000\", \"2 june 1928\"],[\"hawthorn\", \"7.15 (57)\", \"essendon\", \"13.20 (98)\", \"glenferrie oval\", \"6000\", \"2 june 1928\"]]\nQuestion = Is it true that carlton was the home team that played collingwood with venue glenferrie oval?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    answer = False\n    for home_team, away_team, venue in zip(home_teams, away_teams, venues):\n        if home_team.lower() == \"carlton\" and away_team.lower() == \"collingwood\" and venue.lower() == \"glenferrie oval\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "3ec63295-13a6-446c-a8ab-dfddb47b288b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of flashpoint episodes\ntable_data = [[\"no\", \"-\", \"title\", \"directed by\", \"written by\", \"canadian air date\", \"us air date\", \"production code\", \"canadian viewers (million)\"],[\"45\", \"1\", \"personal effects (part 2)\", \"kelly makin\", \"mark ellis & stephanie morgenstern\", \"july 8 , 2011\", \"july 8 , 2011\", \"401\", \"1.369\"],[\"46\", \"2\", \"good cop\", \"john fawcett\", \"michael maclennan\", \"july 15 , 2011\", \"july 15 , 2011\", \"402\", \"1.508\"],[\"47\", \"3\", \"run , jaime , run\", \"kelly makin\", \"ian weir\", \"july 22 , 2011\", \"july 22 , 2011\", \"403\", \"1.537\"],[\"48\", \"4\", \"through a glass darkly\", \"john fawcett\", \"andrew wreggitt\", \"july 29 , 2011\", \"july 29 , 2011\", \"404\", \"1.430\"],[\"49\", \"5\", \"the better man\", \"david frazee\", \"michael maclennan\", \"august 5 , 2011\", \"august 5 , 2011\", \"405\", \"1.254\"],[\"50\", \"6\", \"a day in the life\", \"jim donovan\", \"mark ellis & stephanie morgenstern\", \"august 12 , 2011\", \"august 12 , 2011\", \"406\", \"1.406\"],[\"51\", \"7\", \"shockwave\", \"david frazee\", \"larry bambrick\", \"august 19 , 2011\", \"august 19 , 2011\", \"407\", \"1.313\"],[\"52\", \"8\", \"grounded\", \"david frazee\", \"karen walton\", \"september 19 , 2011\", \"october 18 , 2011\", \"412\", \"1.536\"],[\"53\", \"9\", \"the war within\", \"david frazee\", \"daniel godwin & michael maclennan\", \"september 27 , 2011\", \"december 13 , 2011\", \"408\", \"1.349\"],[\"54\", \"10\", \"the cost of doing business\", \"david frazee\", \"larry bambrick\", \"october 4 , 2011\", \"october 25 , 2011\", \"409\", \"1.309\"],[\"55\", \"11\", \"wild card\", \"brett sullivan\", \"karen walton\", \"october 11 , 2011\", \"november 1 , 2011\", \"410\", \"1.263\"],[\"56\", \"12\", \"a new life\", \"kelly makin\", \"adam barken\", \"november 1 , 2011\", \"november 8 , 2011\", \"411\", \"1.293\"],[\"57\", \"13\", \"a call to arms\", \"ã‰rik canuel\", \"alex levine\", \"november 8 , 2011\", \"november 22 , 2011\", \"413\", \"1.215\"],[\"58\", \"14\", \"day game\", \"kelly makin\", \"aubrey nealon\", \"november 15 , 2011\", \"november 29 , 2011\", \"415\", \"1.191\"],[\"59\", \"15\", \"blue on blue\", \"stefan pleszczynski\", \"adam barken\", \"november 22 , 2011\", \"december 6 , 2011\", \"416\", \"1.229\"],[\"60\", \"16\", \"team player\", \"kelly makin\", \"michael maclennan\", \"november 28 , 2011\", \"january 10 , 2012\", \"414\", \"1.452\"],[\"61\", \"17\", \"priority of life\", \"david frazee\", \"mark ellis , stephanie morgenstern & alex levine\", \"december 6 , 2011\", \"january 17 , 2012\", \"417\", \"1.317\"]]\nQuestion = Is it true that three production codes have the title the better man?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    count = count_occurrences(\"the better man\", titles)\n    answer = count == 3\n    return answer\n\n### END"}
{"id": "789e3b61-af64-41b7-8c72-c7b5e82eb2bd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1965 american football league draft\ntable_data = [[\"pick\", \"team\", \"player\", \"position\", \"college\"],[\"9\", \"denver broncos\", \"dick butkus\", \"linebacker\", \"illinois\"],[\"10\", \"houston oilers\", \"malcolm walker\", \"center\", \"rice\"],[\"11\", \"oakland raiders\", \"fred biletnikoff\", \"wide receiver\", \"florida state\"],[\"12\", \"new york jets\", \"john huarte\", \"quarterback\", \"notre dame\"],[\"13\", \"kansas city chiefs\", \"jack chapple\", \"linebacker\", \"stanford\"],[\"14\", \"san diego chargers\", \"roy jefferson\", \"linebacker\", \"utah\"],[\"15\", \"houston oilers (from boston patriots)\", \"ralph neely\", \"tackle\", \"oklahoma\"],[\"16\", \"kansas city chiefs (from buffalo bills)\", \"ronnie caveness\", \"linebacker\", \"arkansas\"]]\nQuestion = Is it true that the player from rice college played the center and was pick 10?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    picks = get_column_by_name(table_data, \"pick\")\n    positions = get_column_by_name(table_data, \"position\")\n    colleges = get_column_by_name(table_data, \"college\")\n    for pick, position, college in zip(picks, positions, colleges):\n        if equal_to(pick, \"10\") and equal_to(position.lower(), \"center\") and equal_to(college.lower(), \"rice\"):\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "fe2da670-8ed9-429a-b325-bf80969ca012", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 top 14 season\ntable_data = [[\"club\",\"played\",\"drawn\",\"lost\",\"points for\",\"points against\",\"bonus points\",\"points\"],[\"clermont\",\"26\",\"0\",\"6\",\"773\",\"380\",\"16\",\"96\"],[\"toulouse\",\"26\",\"0\",\"7\",\"723\",\"394\",\"15\",\"91\"],[\"stade franã§ais\",\"26\",\"0\",\"8\",\"617\",\"417\",\"8\",\"80\"],[\"perpignan\",\"26\",\"2\",\"7\",\"531\",\"392\",\"7\",\"79\"],[\"castres\",\"26\",\"0\",\"11\",\"564\",\"524\",\"9\",\"69\"],[\"biarritz\",\"26\",\"1\",\"12\",\"385\",\"339\",\"12\",\"66\"],[\"montauban\",\"26\",\"0\",\"13\",\"420\",\"446\",\"11\",\"63\"],[\"montpellier\",\"26\",\"0\",\"12\",\"426\",\"490\",\"5\",\"61\"],[\"bayonne\",\"26\",\"1\",\"14\",\"457\",\"535\",\"8\",\"54\"],[\"bourgoin\",\"26\",\"2\",\"14\",\"453\",\"526\",\"8\",\"52\"],[\"brive\",\"26\",\"0\",\"16\",\"425\",\"514\",\"11\",\"51\"],[\"albi\",\"26\",\"1\",\"16\",\"415\",\"549\",\"10\",\"48\"],[\"dax\",\"26\",\"1\",\"19\",\"314\",\"645\",\"8\",\"34\"],[\"auch\",\"26\",\"0\",\"23\",\"336\",\"688\",\"7\",\"19\"]]\nQuestion = Is it true that the toulouse club had less than 10 bonus points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    clubs = get_column_by_name(table_data, \"club\")\n    bonus_points = get_column_by_name(table_data, \"bonus points\")\n    for club, bonus_point in zip(clubs, bonus_points):\n        if club.lower() == \"toulouse\":\n            answer = less_than(int(bonus_point), 10)\n            break \n    return answer\n\n### END"}
{"id": "ecc000b2-fe3b-40d8-9c0f-c536d89dc8b4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = meaghan francella\ntable_data = [[\"year\", \"tournaments played\", \"cuts made\", \"wins\", \"2nd\", \"top 10s\", \"best finish\", \"earnings\", \"money list rank\", \"scoring average\", \"scoring rank\"],[\"2005\", \"1\", \"1\", \"0\", \"0\", \"0\", \"t69\", \"2525\", \"n / a\", \"75.00\", \"n / a\"],[\"2006\", \"3\", \"1\", \"0\", \"0\", \"0\", \"t39\", \"55554\", \"183\", \"73.75\", \"n / a\"],[\"2007\", \"25\", \"18\", \"1\", \"0\", \"4\", \"1\", \"507292\", \"29\", \"73.09\", \"66\"],[\"2008\", \"24\", \"11\", \"0\", \"0\", \"0\", \"t13\", \"117682\", \"88\", \"73.75\", \"131\"],[\"2009\", \"22\", \"16\", \"0\", \"0\", \"2\", \"t5\", \"292266\", \"48\", \"72.51\", \"63\"],[\"2010\", \"21\", \"17\", \"0\", \"0\", \"1\", \"t7\", \"168016\", \"57\", \"73.04\", \"77\"],[\"2011\", \"15\", \"8\", \"0\", \"0\", \"0\", \"t22\", \"66813\", \"84\", \"74.23\", \"117\"],[\"2012\", \"15\", \"4\", \"0\", \"0\", \"0\", \"t24\", \"28935\", \"116\", \"74.37\", \"121\"]]\nQuestion = Is it true that the 2nd finishers had zero time?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    second_finishers = get_column_by_name(table_data, \"2nd\")\n    answer = all(equal_to(second_finisher, \"0\") for second_finisher in second_finishers)\n    return answer\n\n### END"}
{"id": "31236493-042f-44f3-ad48-444ccd9a998b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1973 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"geelong\", \"14.11 (95)\", \"hawthorn\", \"14.10 (94)\", \"kardinia park\", \"13546\", \"4 august 1973\"],[\"st kilda\", \"15.20 (110)\", \"footscray\", \"12.14 (86)\", \"moorabbin oval\", \"15217\", \"4 august 1973\"],[\"richmond\", \"15.14 (104)\", \"fitzroy\", \"13.14 (92)\", \"mcg\", \"20578\", \"4 august 1973\"],[\"north melbourne\", \"13.13 (91)\", \"essendon\", \"14.10 (94)\", \"arden street oval\", \"21071\", \"4 august 1973\"],[\"collingwood\", \"19.7 (121)\", \"carlton\", \"15.16 (106)\", \"victoria park\", \"37660\", \"4 august 1973\"],[\"south melbourne\", \"12.14 (86)\", \"melbourne\", \"11.12 (78)\", \"vfl park\", \"15255\", \"4 august 1973\"]]\nQuestion = Is it true that the home team when the away team was fitzroy was victoria park?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    away_teams = get_column_by_name(table_data, \"away team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    for away_team, venue in zip(away_teams, venues):\n        if away_team.lower() == \"fitzroy\":\n            answer = equal_to(venue, \"victoria park\")\n            break \n    return answer\n\n### END"}
{"id": "b7154ef6-4308-4409-86fd-01f5bebf8909", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the sunday night project\ntable_data = [[\"episode number\", \"air date\", \"guest host\", \"musical guest (song performed)\", \"who knows the most about the guest host panelists\", \"coat of cash wearing celebrity\"],[\"1\", \"8 june 2008\", \"katie price and peter andre\", \"the courteeners ( no you didn't , no you don't )\", \"cerys matthews and michelle dewberry\", \"andy abraham\"],[\"2\", \"15 june 2008\", \"pamela anderson\", \"five o'clock heroes feat agyness deyn ( who )\", \"paul daniels and danny dyer\", \"ricky whittle\"],[\"3\", \"22 june 2008\", \"mark ronson\", \"nerd ( everyone nose )\", \"pharrell williams and miquita oliver\", \"stephanie mcmichael\"],[\"4\", \"29 june 2008\", \"ronan keating , stephen gately , and shane lynch\", \"estelle ( no substitute love )\", \"lulu and estelle\", \"carly stratton\"],[\"5\", \"6 july 2008\", \"david hasselhoff\", \"the feeling ( turn it up )\", \"scott mills and sally lindsay\", \"sylvia barrie\"],[\"6\", \"13 july 2008\", \"barbara windsor\", \"the ting tings ( shut up and let me go )\", \"patsy palmer and anna karen\", \"jennifer clark\"]]\nQuestion = Is it true that the ting tings (shut up and let me go) were the musical guest and performed when barbara windsor was the guest host?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    guest_hosts = get_column_by_name(table_data, \"guest host\")\n    musical_guests = get_column_by_name(table_data, \"musical guest (song performed)\")\n    for guest_host, musical_guest in zip(guest_hosts, musical_guests):\n        if guest_host.lower() == \"barbara windsor\":\n            answer = equal_to(musical_guest, \"the ting tings ( shut up and let me go )\")\n            break \n    return answer\n\n### END"}
{"id": "0c98cc74-7f71-47a8-81a3-a85c05d3f306", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1983 nfl draft\ntable_data = [[\"pick\",\"nfl team\",\"player\",\"position\",\"college\"],[\"29\",\"baltimore colts\",\"vernon maxwell\",\"linebacker\",\"arizona state\"],[\"30\",\"houston oilers\",\"harvey salem\",\"tackle\",\"california\"],[\"31\",\"denver broncos\",\"mark cooper\",\"tackle\",\"miami (fl)\"],[\"32\",\"los angeles rams\",\"henry ellard\",\"wide receiver\",\"fresno state\"],[\"33\",\"chicago bears\",\"mike richardson\",\"defensive back\",\"arizona state\"],[\"34\",\"kansas city chiefs\",\"dave lutz\",\"guard\",\"georgia tech\"],[\"35\",\"philadelphia eagles\",\"wes hopkins\",\"safety\",\"southern methodist\"],[\"36\",\"los angeles rams\",\"mike wilcher\",\"linebacker\",\"north carolina\"],[\"37\",\"new york giants\",\"leonard marshall\",\"defensive end\",\"louisiana state\"],[\"38\",\"new orleans saints\",\"steve korte\",\"center\",\"arkansas\"],[\"39\",\"buffalo bills\",\"darryl talley\",\"linebacker\",\"west virginia\"],[\"40\",\"detroit lions\",\"rich strenger\",\"tackle\",\"michigan\"],[\"41\",\"cleveland browns\",\"ron brown\",\"cornerback\",\"arizona state\"],[\"42\",\"houston oilers\",\"keith bostic\",\"defensive back\",\"michigan\"],[\"43\",\"atlanta falcons\",\"james britt\",\"defensive back\",\"louisiana state\"],[\"44\",\"st louis cardinals\",\"cedric mack\",\"cornerback\",\"baylor\"],[\"45\",\"tampa bay buccaneers\",\"randy grimes\",\"center\",\"baylor\"],[\"46\",\"philadelphia eagles\",\"jody schulz\",\"linebacker\",\"east carolina\"],[\"47\",\"new england patriots\",\"darryal wilson\",\"wide receiver\",\"tennessee\"],[\"48\",\"green bay packers\",\"dave drechsler\",\"guard\",\"north carolina\"],[\"49\",\"san francisco 49ers\",\"roger craig\",\"running back\",\"nebraska\"],[\"50\",\"dallas cowboys\",\"mike walter\",\"linebacker\",\"oregon\"],[\"51\",\"new york jets\",\"johnny hector\",\"running back\",\"texas a&m\"],[\"52\",\"pittsburgh steelers\",\"wayne capers\",\"wide receiver\",\"kansas\"],[\"53\",\"cincinnati bengals\",\"ray horton\",\"safety\",\"washington\"],[\"54\",\"los angeles raiders\",\"bill pickel\",\"defensive tackle\",\"rutgers\"],[\"55\",\"miami dolphins\",\"mike charles\",\"defensive tackle\",\"syracuse\"]]\nQuestion = Is it true that the denver broncos is ranked 31?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    nfl_teams = get_column_by_name(table_data, \"nfl team\")\n    picks = get_column_by_name(table_data, \"pick\")\n    for nfl_team, pick in zip(nfl_teams, picks):\n        if nfl_team.lower() == \"denver broncos\":\n            answer = equal_to(int(pick), 31)\n            break \n    return answer\n\n### END"}
{"id": "8ff02502-5264-4e31-bae7-1fda0e8a832b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"player\", \"minutes\", \"field goals\", \"rebounds\", \"assists\", \"steals\", \"blocks\", \"points\"],[\"andrea stinson\", \"1006\", \"179\", \"137\", \"88\", \"43\", \"19\", \"450\"],[\"allison feaster\", \"1007\", \"126\", \"153\", \"46\", \"29\", \"10\", \"365\"],[\"dawn staley\", \"1152\", \"107\", \"71\", \"179\", \"52\", \"1\", \"298\"],[\"tammy sutton - brown\", \"602\", \"72\", \"129\", \"11\", \"21\", \"39\", \"196\"],[\"tonya edwards\", \"580\", \"60\", \"62\", \"48\", \"19\", \"7\", \"194\"],[\"shalonda enis\", \"623\", \"66\", \"113\", \"14\", \"10\", \"5\", \"191\"],[\"charlotte smith\", \"678\", \"57\", \"101\", \"50\", \"16\", \"13\", \"171\"],[\"clarisse machanguana\", \"580\", \"63\", \"121\", \"17\", \"16\", \"16\", \"163\"],[\"summer erb\", \"148\", \"18\", \"35\", \"4\", \"1\", \"5\", \"54\"],[\"kelly miller\", \"225\", \"22\", \"28\", \"14\", \"9\", \"0\", \"55\"]]\nQuestion = Is it true that dawn staley had 52 steals and 1 block?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    steals = get_column_by_name(table_data, \"steals\")\n    blocks = get_column_by_name(table_data, \"blocks\")\n    for player, steal, block in zip(players, steals, blocks):\n        if player.lower() == \"dawn staley\":\n            answer = equal_to(steal, \"52\") and equal_to(block, \"1\")\n            break \n    return answer\n\n### END"}
{"id": "f01ac2e0-a8e0-4a55-b099-1745137f5399", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1998 masters tournament\ntable_data = [[\"place\", \"player\", \"country\", \"score\", \"to par\"],[\"t1\", \"fred couples\", \"united states\", \"69 + 70 = 139\", \"- 5\"],[\"t1\", \"david duval\", \"united states\", \"71 + 68 = 139\", \"- 5\"],[\"3\", \"scott hoch\", \"united states\", \"70 + 71 = 141\", \"- 3\"],[\"t4\", \"paul azinger\", \"united states\", \"71 + 72 = 143\", \"- 1\"],[\"t4\", \"jay haas\", \"united states\", \"72 + 71 = 143\", \"- 1\"],[\"t4\", \"phil mickelson\", \"united states\", \"74 + 69 = 143\", \"- 1\"],[\"t4\", \"josé maría olazábal\", \"spain\", \"70 + 73 = 143\", \"- 1\"],[\"t4\", \"tiger woods\", \"united states\", \"71 + 72 = 143\", \"- 1\"],[\"t9\", \"scott mccarron\", \"united states\", \"73 + 71 = 144\", \"e\"],[\"t9\", \"mark o'meara\", \"united states\", \"74 + 70 = 144\", \"e\"]]\nQuestion = Is it true that mark o'meara is at place t9?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    places = get_column_by_name(table_data, \"place\")\n    players = get_column_by_name(table_data, \"player\")\n    for place, player in zip(places, players):\n        if equal_to(player, \"mark o'meara\"):\n            answer = equal_to(place, \"t9\")\n            break \n    return answer\n\n### END"}
{"id": "8b834ff0-af24-4a1c-b7e5-5db7e6814a38", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 cleveland cavaliers season\ntable_data = [[\"game\",\"date\",\"team\",\"score\",\"high points\",\"high rebounds\",\"high assists\",\"location attendance\",\"record\"],[\"18\",\"december 2\",\"phoenix suns\",\"w 107 - 90 (ot)\",\"zydrunas ilgauskas (14)\",\"shaquille o'neal (9)\",\"lebron james (10)\",\"quicken loans arena 20562\",\"13 - 5\"],[\"19\",\"december 4\",\"chicago bulls\",\"w 101 - 87 (ot)\",\"lebron james (23)\",\"zydrunas ilgauskas , shaquille o'neal (7)\",\"lebron james (11)\",\"quicken loans arena 20562\",\"14 - 5\"],[\"20\",\"december 6\",\"milwaukee bucks\",\"w 101 - 86 (ot)\",\"delonte west (21)\",\"anderson varejão (12)\",\"lebron james (10)\",\"bradley center 16625\",\"15 - 5\"],[\"21\",\"december 8\",\"memphis grizzlies\",\"l 109 - 111 (ot)\",\"lebron james (43)\",\"lebron james (13)\",\"mo williams (8)\",\"fedex forum 16325\",\"15 - 6\"],[\"22\",\"december 9\",\"houston rockets\",\"l 85 - 95 (ot)\",\"lebron james (27)\",\"shaquille o'neal , j j hickson (10)\",\"lebron james (7)\",\"toyota center 18200\",\"15 - 7\"],[\"23\",\"december 11\",\"portland trail blazers\",\"w 104 - 99 (ot)\",\"lebron james (33)\",\"shaquille o'neal (11)\",\"mo williams (10)\",\"quicken loans arena 20562\",\"16 - 7\"],[\"24\",\"december 13\",\"oklahoma city thunder\",\"w 102 - 89 (ot)\",\"lebron james (44)\",\"anderson varejão (10)\",\"lebron james (6)\",\"ford center 18203\",\"17 - 7\"],[\"25\",\"december 15\",\"new jersey nets\",\"w 99 - 89 (ot)\",\"lebron james (23)\",\"mo williams , jamario moon (8)\",\"lebron james (7)\",\"quicken loans arena 20562\",\"18 - 7\"],[\"26\",\"december 16\",\"philadelphia 76ers\",\"w 108 - 101 (ot)\",\"lebron james (36)\",\"shaquille o'neal (9)\",\"lebron james (7)\",\"wachovia center 19517\",\"19 - 7\"],[\"27\",\"december 18\",\"milwaukee bucks\",\"w 85 - 82 (ot)\",\"lebron james (26)\",\"lebron james (10)\",\"lebron james (8)\",\"quicken loans arena 20562\",\"20 - 7\"],[\"28\",\"december 20\",\"dallas mavericks\",\"l 95 - 102 (ot)\",\"lebron james (25)\",\"anderson varejão , shaquille o'neal (8)\",\"lebron james (6)\",\"american airlines center 20346\",\"20 - 8\"],[\"29\",\"december 21\",\"phoenix suns\",\"w 109 - 91 (ot)\",\"lebron james (29)\",\"mo williams , lebron james , jj hickson (6)\",\"delonte west (6)\",\"us airways center 18221\",\"21 - 8\"],[\"30\",\"december 23\",\"sacramento kings\",\"w 117 - 104 (ot)\",\"lebron james (34)\",\"lebron james (16)\",\"lebron james (10)\",\"arco arena 16407\",\"22 - 8\"],[\"31\",\"december 25\",\"la lakers\",\"w 102 - 87 (ot)\",\"mo williams (28)\",\"anderson varejão , zydrunas ilgauskas (9)\",\"lebron james (9)\",\"staples center 18997\",\"23 - 8\"],[\"32\",\"december 27\",\"houston rockets\",\"w 108 - 83 (ot)\",\"lebron james (29)\",\"shaquille o'neal (11)\",\"lebron james (6)\",\"quicken loans arena 20562\",\"24 - 8\"]]\nQuestion = Is it true that 6 is the high rebounds for mo williams , lebron james , jj hickson (6)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    high_rebounds = get_column_by_name(table_data, \"high rebounds\")\n    answer = \"mo williams , lebron james , jj hickson (6)\" in high_rebounds\n    return answer\n\n### END"}
{"id": "e492b5c2-3031-4257-b10b-6ce2a9a91496", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of collaborative software\ntable_data = [[\"name\", \"e - mail server\", \"faxing\", \"instant messaging\", \"telephony\", \"videoconferencing\", \"web conferencing\", \"data conferencing\", \"application sharing\", \"electronic meeting system\", \"synchronous conferencing\"],[\"ibm sametime\", \"no , integrated with lotus domino\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ibm lotus domino\", \"yes\", \"yes\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"no\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"no\"],[\"microsoft exchange server\", \"yes\", \"yes\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"],[\"microsoft lync server\", \"no , integrated with exchange server\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"microsoft sharepoint\", \"no , integrated with exchange server\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"],[\"name\", \"e - mail server\", \"faxing\", \"instant messaging\", \"telephony\", \"videoconferencing\", \"web conferencing\", \"data conferencing\", \"application sharing\", \"electronic meeting system\", \"synchronous conferencing\"]]\nQuestion = Is it true that the ibm lotus domino has instant messaging with integrated sametime and telephony with integrated same time?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    instant_messaging = get_column_by_name(table_data, \"instant messaging\")\n    telephony = get_column_by_name(table_data, \"telephony\")\n    for name, im, tele in zip(names, instant_messaging, telephony):\n        if name.lower() == \"ibm lotus domino\":\n            answer = equal_to(im, \"yes with integrated sametime\") and equal_to(tele, \"yes with integrated sametime\")\n            break \n    return answer\n\n### END"}
{"id": "7b2becee-faea-47cb-a345-923ad5df9679", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1968 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"17.24 (126)\", \"south melbourne\", \"19.12 (126)\", \"glenferrie oval\", \"13536\", \"20 april 1968\"],[\"st kilda\", \"16.22 (118)\", \"melbourne\", \"9.8 (62)\", \"moorabbin oval\", \"21758\", \"20 april 1968\"],[\"geelong\", \"9.17 (71)\", \"footscray\", \"6.11 (47)\", \"kardinia park\", \"14589\", \"20 april 1968\"],[\"north melbourne\", \"9.9 (63)\", \"essendon\", \"10.22 (82)\", \"arden street oval\", \"14810\", \"20 april 1968\"],[\"fitzroy\", \"14.16 (100)\", \"collingwood\", \"10.11 (71)\", \"princes park\", \"17149\", \"20 april 1968\"],[\"richmond\", \"17.16 (118)\", \"carlton\", \"10.12 (72)\", \"mcg\", \"51889\", \"20 april 1968\"]]\nQuestion = Is it true that the game held on 20 april 1968 had crowds over 14750 , and the home team scored 9.9 (63)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for home_team_score, crowd, date in zip(home_team_scores, crowds, dates):\n        if date == \"20 april 1968\" and home_team_score == \"9.9 (63)\" and greater(int(crowd), 14750):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "0fb9ed37-35a1-43f5-9317-09375172d225", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = history of test cricket from 1901 to 1914\ntable_data = [[\"date\", \"home captain\", \"away captain\", \"venue\", \"result\"],[\"15 , 16 , 18 , 19 , 20 , 21 dec 1911\", \"clem hill\", \"johnny douglas\", \"sydney cricket ground\", \"aus by 146 runs\"],[\"30 dec , 1 , 2 , 3 jan 1911 / 2\", \"clem hill\", \"johnny douglas\", \"melbourne cricket ground\", \"eng by 8 wkts\"],[\"12 , 13 , 15 , 16 , 17 jan 1912\", \"clem hill\", \"johnny douglas\", \"adelaide oval\", \"eng by 7 wkts\"],[\"9 , 10 , 12 , 13 feb 1912\", \"clem hill\", \"johnny douglas\", \"melbourne cricket ground\", \"eng by inns&225 runs\"],[\"23 , 24 , 26 , 27 , 28 , 29 feb , 1 mar 1912\", \"clem hill\", \"johnny douglas\", \"sydney cricket ground\", \"eng by 70 runs\"]]\nQuestion = Is it true that from february 23rd , 1912 - march 1st , 1912 , the sydney cricket ground was the venue where eng won by 7 wkts?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    venues = get_column_by_name(table_data, \"venue\")\n    results = get_column_by_name(table_data, \"result\")\n    for date, venue, result in zip(dates, venues, results):\n        if \"23 , 24 , 26 , 27 , 28 , 29 feb , 1 mar 1912\" in date.lower() and \"sydney cricket ground\" in venue.lower():\n            answer = equal_to(result, \"eng by 7 wkts\")\n            break \n    return answer\n\n### END"}
{"id": "ae468b13-4b60-4ea0-9283-f7e780daa5d4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"auckland\", \"canterbury\", \"central districts\", \"otago\", \"wellington\"],[\"286 b sutcliffe & dd taylor v (c) 1948 / 49\", \"306 la duff & jd lawrence v (a) 1893 / 94\", \"428 pj ingram & jm how , v (w) 2009 / 10\", \"373 b sutcliffe & l watt v (a) 1950 / 51\", \"333 ba edgar & ah jones v (a) 1988 / 89\"],[\"241 tj franklin & jj crowe v (w) 1988 / 89\", \"243 mhw papps & jg myburgh v (cd) 2007 / 08\", \"317 rt hart & ps briasco v (c) 1983 / 84\", \"254 kj burns & kr rutherford v (w) 1987 / 88\", \"287 md bell & jd wells v (a) 1997 / 98\"],[\"445 pe whitelaw & wn carson v (o) 1936 / 37\", \"394 pg kennedy & rt latham v (nd) 1990 / 91\", \"264 pjingram & ms sinclair v (nd) 2008 / 09\", \"306 sb haig v nt broom (cd) 2009 / 10\", \"346 gp burnett v ra verry (nd) 1991 / 92\"],[\"280 jj crowe & dn patel v (nd) 1991 / 92\", \"278 ml page & aw roberts v (w) 1931 / 32\", \"276 md crowe & ps briasco v (c) 1986 / 87\", \"235 kj burns & rn hoskin v (nd) 1987 / 88\", \"310 jd ryder & nr parlane v (cd) 2004 / 05\"],[\"347 mj horne & ac barnes v (nd) 2003 / 04\", \"290 gr stead & cz harris v (cd) 1996 / 97\", \"301 ji englefield & rl taylor v (w) 2004 / 05\", \"266 b sutcliffe & ws haig v (a) 1952 / 53\", \"341 gr larsen & eb mcsweeney (cd) 1987 / 88\"],[\"377 c munro & craig cachopa , v (w) 2012 / 13\", \"379 sl stewart & cfk van wyk v (cd) 2009 / 10\", \"235 ms sinclair & bbj griggs v (w) 2008 / 09\", \"165 gm turner & wk lees v (w) 1975 / 76\", \"226 ej gray & rw ormiston v (cd) 1981 / 82\"],[\"224 vj scott & am matheson v (c) 1937 / 38\", \"265 jl powell & n dorreen v (o) 1929 / 30\", \"219 bw yuile & bl hampton v (c) 1967 / 68\", \"182 b sutcliffe & aw gilbertson v (c) 1952 / 53\", \"250 cj nevin & mdj walker v (o) 2003 / 04\"],[\"189 wn carson & am matheson v (w) 1938 / 39\", \"220 pj wiseman & bc hiini v (nd) 2005 / 06\", \"173 ids smith & gk robertson v (nd) 192 / 83\", \"165 jn crawford & ag eckhold v (w) 1914 / 15\", \"180 rg twose & mc goodson v (o) 1994 / 95\"],[\"151 ra young & gj morgan v (nd) 2007 / 08\", \"182 lk germon & rm ford v (w) 1989 / 90\", \"239 hb cave & ib leggat v (o) 1952 / 53\", \"208 wc mcskimming & be scott v (a) 2004 / 05\", \"225 lj woodcock & mj tugaga v (cd) 2009 / 10\"],[\"119 wn carson & j cowie v (w) 1937 / 38\", \"160 lk germon & wa wisneski v (nd) 1997 / 98\", \"133 ga bartlett & ia colquuhoun v (a) 1959 / 60\", \"184 rc blunt & w hawksworth v (c) 1931 / 32\", \"138 kc james & aws brice v (w) 1926 / 27\"]]\nQuestion = Is it true that 119 wn carson & j cowie v (w) 1937 / 38 is from aukland , and 184 rc blunt & w hawksworth v (c) 1931 / 32 is from otago?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    auckland_column = get_column_by_index(table_data, 0)\n    otago_column = get_column_by_index(table_data, 3)\n    auckland_score = \"119 wn carson & j cowie v (w) 1937 / 38\"\n    otago_score = \"184 rc blunt & w hawksworth v (c) 1931 / 32\"\n    answer = equal_to(auckland_score, auckland_column[-1]) and equal_to(otago_score, otago_column[-1])\n    return answer\n\n### END"}
{"id": "41dbbfbb-c663-4721-8b81-0d76cfe2f974", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1961 houston oilers season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 9 , 1961\", \"oakland raiders\", \"w 55 - 0\", \"16231\"],[\"3\", \"september 24 , 1961\", \"san diego chargers\", \"l 34 - 24\", \"29210\"],[\"4\", \"october 1 , 1961\", \"dallas texans\", \"l 26 - 21\", \"28000\"],[\"5\", \"october 8 , 1961\", \"buffalo bills\", \"l 22 - 12\", \"22761\"],[\"6\", \"october 13 , 1961\", \"boston patriots\", \"t 31 - 31\", \"15070\"],[\"7\", \"october 22 , 1961\", \"dallas texans\", \"w 38 - 7\", \"21237\"],[\"8\", \"october 29 , 1961\", \"buffalo bills\", \"w 28 - 16\", \"23228\"],[\"9\", \"november 5 , 1961\", \"denver broncos\", \"w 55 - 14\", \"11564\"],[\"10\", \"november 12 , 1961\", \"boston patriots\", \"w 27 - 15\", \"35649\"],[\"11\", \"november 19 , 1961\", \"new york titans\", \"w 49 - 13\", \"33428\"],[\"12\", \"november 26 , 1961\", \"denver broncos\", \"w 45 - 14\", \"27864\"],[\"13\", \"december 3 , 1961\", \"san diego chargers\", \"w 33 - 13\", \"37845\"],[\"14\", \"december 10 , 1961\", \"new york titans\", \"w 48 - 21\", \"9462\"],[\"15\", \"december 17 , 1961\", \"oakland raiders\", \"w 47 - 16\", \"4821\"]]\nQuestion = Is it true that there were 28000 in attendance at the game with a l 26 - 21 resultafter october 1 , 1961?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\nfrom datetime import datetime\n\ndef parse_date(date_str):\n    return datetime.strptime(date_str, '%B %d , %Y')\n\ndef after(date1, date2):\n    return date1 > date2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    results = get_column_by_name(table_data, \"result\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    answer = False\n    for date, result, attendance in zip(dates, results, attendances):\n        parsed_date = parse_date(date)\n        if after(parsed_date, parse_date(\"october 1 , 1961\")) and result == \"l 26 - 21\" and attendance == \"28000\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "01d1a83d-764e-4891-ba6e-fa5885704a86", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 14 icc world cricket league\ntable_data = [[\"details\",\"host nation (s)\",\"final venue\",\"winner\",\"result\",\"runner - up\"],[\"2009 division seven\",\"guernsey\",\"king george v sports ground , castel\",\"207 / 7 (46.1 overs)\",\"bahrain won by 3 wickets scorecard\",\"guernsey 204 / 9 (50.0 overs)\"],[\"2009 division six\",\"singapore\",\"kallang cricket ground , singapore\",\"242 / 8 (50.0 overs)\",\"singapore won by 68 runs scorecard\",\"174 all out (48.4 overs)\"],[\"2010 division one\",\"netherlands\",\"vra ground , amstelveen\",\"ireland 233 / 4 (44.5 overs)\",\"ireland won by 6 wickets scorecard\",\"232 all out (48.5 overs)\"],[\"2010 division four\",\"italy\",\"ovale di rastignano , pianoro\",\"united states 188 / 2 (21.4 overs)\",\"united states won by 8 wickets scorecard\",\"italy 185 / 9 (50 overs)\"],[\"2010 division eight\",\"kuwait\",\"kuwait oil company hubara ground , ahmadi city\",\"164 / 4 (33.1 overs)\",\"kuwait won by 6 wickets scorecard\",\"163 / 8 (50 overs)\"],[\"2011 division three\",\"hong kong\",\"kowloon cricket club\",\"hong kong 207 / 6 (47.1 overs)\",\"hong kong won by 4 wickets scorecard\",\"202 (50 overs)\"],[\"2011 division two\",\"united arab emirates\",\"dsc cricket stadium , dubai\",\"201 / 5 (45.3 overs)\",\"united arab emirates won by 5 wickets scorecard\",\"namibia 200 (49.3 overs)\"],[\"2011 division seven\",\"botswana\",\"botswana cricket association oval 1 , gaborone\",\"219 / 9 (50 overs)\",\"kuwait won by 72 runs scorecard\",\"147 (36.5 overs)\"],[\"2011 division six\",\"malaysia\",\"kinrara academy oval , kuala lumpur\",\"guernsey 211 / 8 (49.3 overs)\",\"guernsey won by 2 wickets scorecard\",\"208 / 9 (50 overs)\"],[\"2012 division five\",\"singapore\",\"kallang ground , singapore\",\"164 / 1 (26.4 overs)\",\"singapore won by 9 wickets scorecard\",\"159 (47 overs)\"],[\"2012 division four\",\"malaysia\",\"kinrara academy oval , kuala lumpur\",\"147 / 2 (28 overs)\",\"nepal won by 8 wickets scorecard\",\"united states 145 (48.1 overs)\"],[\"2012 division eight\",\"samoa\",\"faleata oval no 1 , apia\",\"222 / 9 (50 overs)\",\"vanuatu won by 39 runs scorecard\",\"183 (42.5 overs)\"],[\"2013 division seven\",\"botswana\",\"botswana cricket association oval 1 , gaborone\",\"134 / 4 (32.1 overs)\",\"nigeria won by 6 wickets ( d / l ) scorecard\",\"133 (38 , 4 overs)\"],[\"2013 division three\",\"bermuda\",\"national stadium , hamilton\",\"153 / 5 (39.2 overs)\",\"nepal won by 5 wickets scorecard\",\"151 / 8 (50.0 overs)\"],[\"2013 division six\",\"jersey\",\"grainville cricket ground , st saviour\",\"jersey 10 points\",\"jersey won on points table\",\"8 points\"]]\nQuestion = Is it true that kuwait won by 6 wickets in the 2010 division series?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef string_in_string(str1, str2):\n    return str1 in str2\n\ndef solution(table_data):\n    details = get_column_by_name(table_data, \"details\")\n    results = get_column_by_name(table_data, \"result\")\n    for detail, result in zip(details, results):\n        if \"2010 division\" in detail.lower() and \"kuwait won by 6 wickets\" in result.lower():\n            answer = True\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "0e2d2fce-53e5-4703-856f-f5ce28c386cd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = coppa italia\ntable_data = [[\"phase\", \"round\", \"clubs remaining\", \"clubs involved\", \"winners from previous round\", \"new entries this round\", \"leagues entering at this round\"],[\"first phase\", \"first round\", \"78\", \"36\", \"none\", \"36\", \"teams from lega pro and serie d\"],[\"first phase\", \"second round\", \"60\", \"40\", \"18\", \"22\", \"serie b\"],[\"first phase\", \"third round\", \"40\", \"32\", \"20\", \"12\", \"lowest - ranked serie a teams\"],[\"first phase\", \"fourth round\", \"24\", \"16\", \"16\", \"none\", \"none\"],[\"second phase\", \"round of 16\", \"16\", \"16\", \"8\", \"8\", \"highest - ranked serie a teams\"],[\"second phase\", \"quarter - finals\", \"8\", \"8\", \"8\", \"none\", \"none\"],[\"second phase\", \"semi - finals\", \"4\", \"4\", \"4\", \"none\", \"none\"],[\"second phase\", \"final\", \"2\", \"2\", \"2\", \"none\", \"none\"]]\nQuestion = Is it true that the semi - finals in the second phase have no new leagues entering and 4 clubs remaining?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    clubs_remaining = get_column_by_name(table_data, \"clubs remaining\")\n    new_entries = get_column_by_name(table_data, \"new entries this round\")\n    for round, club, new_entry in zip(rounds, clubs_remaining, new_entries):\n        if round.lower() == \"semi - finals\":\n            answer = equal_to(club, \"4\") and equal_to(new_entry, \"none\")\n            break \n    return answer\n\n### END"}
{"id": "1af74f90-97f0-48dc-bf74-55d46995e403", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1977 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"carlton\", \"3.13 (31)\", \"geelong\", \"2.12 (24)\", \"princes park\", \"11009\", \"18 june 1977\"],[\"south melbourne\", \"8.22 (70)\", \"melbourne\", \"9.10 (64)\", \"lake oval\", \"20785\", \"18 june 1977\"],[\"north melbourne\", \"6.11 (47)\", \"hawthorn\", \"6.12 (48)\", \"arden street oval\", \"9027\", \"18 june 1977\"],[\"richmond\", \"13.15 (93)\", \"fitzroy\", \"6.5 (41)\", \"mcg\", \"12877\", \"18 june 1977\"],[\"footscray\", \"5.6 (36)\", \"collingwood\", \"9.15 (69)\", \"western oval\", \"11921\", \"18 june 1977\"],[\"essendon\", \"5.16 (46)\", \"st kilda\", \"5.12 (42)\", \"vfl park\", \"14337\", \"18 june 1977\"]]\nQuestion = Is it true that the away team lost the game at mcg?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef parse_score(score_str):\n    return int(score_str.split(' ')[1].strip('()'))\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    away_team_scores = get_column_by_name(table_data, \"away team score\")\n    venues = get_column_by_name(table_data, \"venue\")\n    answer = False\n    for home_team_score, away_team_score, venue in zip(home_team_scores, away_team_scores, venues):\n        if \"mcg\" in venue.lower():\n            home_team_score = parse_score(home_team_score)\n            away_team_score = parse_score(away_team_score)\n            if greater(home_team_score, away_team_score):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "51de306e-a692-415e-9c4d-c760107189fa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = marlboro challenge\ntable_data = [[\"season\", \"date\", \"location\", \"driver\", \"chassis\", \"engine\", \"team\"],[\"1987\", \"october 31\", \"tamiami park\", \"bobby rahal\", \"lola\", \"cosworth\", \"truesports\"],[\"1988\", \"november 5\", \"tamiami park\", \"michael andretti\", \"lola\", \"cosworth\", \"kraco racing\"],[\"1989\", \"october 14\", \"laguna seca\", \"al unser , jr\", \"lola\", \"chevrolet\", \"galles racing\"],[\"1990\", \"october 6\", \"nazareth\", \"rick mears\", \"penske\", \"chevrolet\", \"penske racing\"],[\"1991\", \"october 19\", \"laguna seca\", \"michael andretti\", \"lola\", \"chevrolet\", \"newman / haas racing\"],[\"1992\", \"october 3\", \"nazareth\", \"emerson fittipaldi\", \"penske\", \"chevrolet\", \"penske racing\"]]\nQuestion = Is it true that emerson fittipaldi drove the chevy engine on october 3rd?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    drivers = get_column_by_name(table_data, \"driver\")\n    engines = get_column_by_name(table_data, \"engine\")\n    answer = False\n    for date, driver, engine in zip(dates, drivers, engines):\n        if \"october 3\" in date.lower() and \"emerson fittipaldi\" in driver.lower() and \"chevrolet\" in engine.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "f8d57a8d-f2b0-4cac-bd83-a6d067da26b6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"population (region total)\", \"population (stanthorpe)\", \"population (warwick)\", \"population (allora)\", \"population (glengallan)\", \"population (rosenthal)\"],[\"1933\", \"25016\", \"6934\", \"6664\", \"2624\", \"6334\", \"2460\"],[\"1947\", \"24009\", \"7419\", \"7129\", \"2217\", \"5269\", \"1975\"],[\"1954\", \"25862\", \"8335\", \"9151\", \"2106\", \"4639\", \"1631\"],[\"1961\", \"26288\", \"8514\", \"9843\", \"1961\", \"4388\", \"1582\"],[\"1966\", \"25917\", \"8503\", \"10065\", \"1890\", \"3906\", \"1553\"],[\"1971\", \"24115\", \"8189\", \"9303\", \"1719\", \"3410\", \"1494\"],[\"1976\", \"24583\", \"8709\", \"9169\", \"1666\", \"3491\", \"1548\"],[\"1981\", \"24300\", \"8576\", \"8853\", \"1679\", \"3611\", \"1581\"],[\"1986\", \"26270\", \"9143\", \"9435\", \"2041\", \"3688\", \"1963\"],[\"1991\", \"28288\", \"9556\", \"10393\", \"2132\", \"3966\", \"2241\"],[\"1996\", \"29563\", \"9596\", \"10896\", \"2234\", \"3990\", \"2742\"],[\"2001\", \"30554\", \"9860\", \"10956\", \"2439\", \"4088\", \"3129\"]]\nQuestion = Is it true that glengallen has a maximum population size of 3129?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(int(row[column_index]))\n    return column\n\ndef get_max_value(lst):\n    return max(lst)\n\ndef solution(table_data):\n    glengallan_population = get_column_by_name(table_data, \"population (glengallan)\")\n    max_population_glengallan = get_max_value(glengallan_population)\n    answer = max_population_glengallan == 3129\n    return answer\n\n### END"}
{"id": "f40d4789-1c50-4b9c-a9b5-9706ec5669bc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1977 - 78 philadelphia flyers season\ntable_data = [[\"game\", \"october\", \"opponent\", \"score\", \"record\", \"points\"],[\"1\", \"13\", \"chicago black hawks\", \"5 - 1\", \"1 - 0 - 0\", \"2\"],[\"2\", \"15\", \"pittsburgh penguins\", \"8 - 2\", \"2 - 0 - 0\", \"4\"],[\"3\", \"16\", \"st louis blues\", \"7 - 0\", \"3 - 0 - 0\", \"6\"],[\"4\", \"20\", \"pittsburgh penguins\", \"11 - 0\", \"4 - 0 - 0\", \"8\"],[\"5\", \"22\", \"toronto maple leafs\", \"1 - 6\", \"4 - 1 - 0\", \"8\"],[\"6\", \"23\", \"toronto maple leafs\", \"3 - 6\", \"4 - 2 - 0\", \"8\"],[\"7\", \"26\", \"chicago black hawks\", \"2 - 2\", \"4 - 2 - 1\", \"9\"],[\"8\", \"29\", \"st louis blues\", \"7 - 3\", \"5 - 2 - 1\", \"11\"]]\nQuestion = Is it true that 13 october has a record of 1 - 0 - 0 with a score greater than 5 - 1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef parse_score(score_str):\n    score1, score2 = map(int, score_str.split(' - '))\n    return score1, score2\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"october\")\n    scores = get_column_by_name(table_data, \"score\")\n    records = get_column_by_name(table_data, \"record\")\n    answer = False\n    for date, score, record in zip(dates, scores, records):\n        if date == \"13\" and record == \"1 - 0 - 0\":\n            score1, score2 = parse_score(score)\n            if greater(score1, 5) and greater(score2, 1):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "7400ec40-384d-4f8d-b763-34c134165374", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = nfl career scoring leaders\ntable_data = [[\"rank\", \"player\", \"position\", \"career\", \"points\"],[\"31\", \"jerry rice\", \"wide receiver\", \"1985 - 2004\", \"1256\"],[\"47\", \"emmitt smith\", \"running back\", \"1990 - 2004\", \"1052\"],[\"52\", \"ladainian tomlinson\", \"running back\", \"2001 - 2011\", \"972\"],[\"59\", \"randy moss\", \"wide receiver\", \"1998 - 2012\", \"950\"],[\"61t\", \"terrell owens\", \"wide receiver\", \"1996 - 2010\", \"942\"]]\nQuestion = Is it true that jerry rice was the player who had more than 1052 points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    points = get_column_by_name(table_data, \"points\")\n    answer = False\n    for player, point in zip(players, points):\n        if player.lower() == \"jerry rice\":\n            answer = greater(int(point), 1052)\n            break\n    return answer\n\n### END"}
{"id": "de2ee6ef-2fe6-434f-b7ce-bf1d08433668", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 - 11 new jersey nets season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"34\", \"january 1\", \"minnesota\", \"l 88 - 103 (ot)\", \"sasha vujačić (22)\", \"kris humphries (14)\", \"devin harris (8)\", \"target center 12665\", \"9 - 25\"],[\"35\", \"january 5\", \"chicago\", \"w 96 - 94 (ot)\", \"kris humphries (20)\", \"kris humphries (11)\", \"devin harris (11)\", \"prudential center 15025\", \"10 - 25\"],[\"36\", \"january 7\", \"washington\", \"l 77 - 97 (ot)\", \"jordan farmar , brook lopez (14)\", \"stephen graham (9)\", \"devin harris (3)\", \"verizon center 16017\", \"10 - 26\"],[\"37\", \"january 8\", \"milwaukee\", \"l 92 - 115 (ot)\", \"kris humphries (22)\", \"kris humphries (8)\", \"jordan farmar (10)\", \"prudential center 12898\", \"10 - 27\"],[\"38\", \"january 12\", \"phoenix\", \"l 109 - 118 (ot)\", \"sasha vujačić (19)\", \"travis outlaw (11)\", \"devin harris (15)\", \"us airways center 16334\", \"10 - 28\"],[\"39\", \"january 14\", \"la lakers\", \"l 88 - 100 (ot)\", \"brook lopez (35)\", \"kris humphries (15)\", \"devin harris (8)\", \"staples center 18997\", \"10 - 29\"],[\"40\", \"january 15\", \"portland\", \"l 89 - 96 (ot)\", \"brook lopez (32)\", \"kris humphries (10)\", \"devin harris (6)\", \"rose garden 20441\", \"10 - 30\"],[\"41\", \"january 17\", \"golden state\", \"l 100 - 109 (ot)\", \"brook lopez (20)\", \"kris humphries (10)\", \"devin harris (8)\", \"oracle arena 18563\", \"10 - 31\"],[\"42\", \"january 19\", \"utah\", \"w 103 - 95 (ot)\", \"brook lopez (20)\", \"travis outlaw (8)\", \"devin harris (8)\", \"prudential center 13251\", \"11 - 31\"],[\"43\", \"january 21\", \"detroit\", \"w 89 - 74 (ot)\", \"brook lopez (15)\", \"kris humphries (12)\", \"devin harris (9)\", \"prudential center 13316\", \"12 - 31\"],[\"44\", \"january 22\", \"dallas\", \"l 86 - 87 (ot)\", \"brook lopez (24)\", \"kris humphries (15)\", \"devin harris (11)\", \"prudential center 14051\", \"12 - 32\"],[\"45\", \"january 24\", \"cleveland\", \"w 103 - 101 (ot)\", \"brook lopez (28)\", \"kris humphries (11)\", \"devin harris (10)\", \"prudential center 10197\", \"13 - 32\"],[\"46\", \"january 26\", \"memphis\", \"w 93 - 88 (ot)\", \"anthony morrow (19)\", \"derrick favors (9)\", \"devin harris (9)\", \"prudential center 8866\", \"14 - 32\"],[\"47\", \"january 28\", \"indiana\", \"l 92 - 124 (ot)\", \"brook lopez (28)\", \"travis outlaw (6)\", \"devin harris (9)\", \"conseco fieldhouse 11337\", \"14 - 33\"],[\"48\", \"january 29\", \"milwaukee\", \"l 81 - 91 (ot)\", \"brook lopez (26)\", \"kris humphries (10)\", \"devin harris (16)\", \"bradley center 17173\", \"14 - 34\"]]\nQuestion = Is it true that kris humphries (12) got the high rebounds when brook lopez (15) earned the high points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    high_points = get_column_by_name(table_data, \"high points\")\n    high_rebounds = get_column_by_name(table_data, \"high rebounds\")\n    answer = False\n    for points, rebounds in zip(high_points, high_rebounds):\n        if \"brook lopez (15)\" in points.lower() and \"kris humphries (12)\" in rebounds.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "cb77f1d1-2151-4c94-8d24-ac0201600de8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = big day out lineups by year\ntable_data = [[\"sydney\", \"melbourne\", \"perth\", \"adelaide\", \"gold coast\", \"auckland\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"cancelled\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\"],[\"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"no\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"no\"],[\"no\", \"yes\", \"no\", \"no\", \"no\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"]]\nQuestion = Is it true that whenever melbourne has a yes , auckland and gold coast have a no?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    melbourne = get_column_by_name(table_data, \"melbourne\")\n    auckland = get_column_by_name(table_data, \"auckland\")\n    gold_coast = get_column_by_name(table_data, \"gold coast\")\n    for m, a, g in zip(melbourne, auckland, gold_coast):\n        if m == \"yes\" and (a == \"yes\" or g == \"yes\"):\n            return False\n    return True\n\n### END"}
{"id": "c80701bb-2a12-4b75-b0f8-2cc02de74bab", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = jonathan cochet\ntable_data = [[\"season\", \"series\", \"team\", \"races\", \"wins\", \"fast laps\", \"points\", \"pos\"],[\"2001\", \"formula one\", \"prost\", \"test driver\", \"test driver\", \"test driver\", \"test driver\", \"test driver\"],[\"2001\", \"formula 3000 international\", \"gd racing\", \"4\", \"0\", \"0\", \"0\", \"nc\"],[\"2001\", \"world series by nissan\", \"gd racing\", \"6\", \"0\", \"1\", \"51\", \"9th\"],[\"2002\", \"world series by nissan\", \"gd racing\", \"6\", \"0\", \"0\", \"30\", \"13th\"],[\"2003\", \"world series by nissan\", \"gd racing\", \"2\", \"0\", \"0\", \"0\", \"nc\"],[\"2006\", \"formula one\", \"renault\", \"test driver\", \"test driver\", \"test driver\", \"test driver\", \"test driver\"],[\"200708\", \"a1 grand prix\", \"a1 team france\", \"2\", \"0\", \"0\", \"0\", \"4th\"]]\nQuestion = Is it true that the 4th position had 0 points during the 2007 - 2008 season of a1 grand prix series?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    series = get_column_by_name(table_data, \"series\")\n    points = get_column_by_name(table_data, \"points\")\n    positions = get_column_by_name(table_data, \"pos\")\n    for season, serie, point, position in zip(seasons, series, points, positions):\n        if season == \"200708\" and serie.lower() == \"a1 grand prix\" and position == \"4th\":\n            answer = equal_to(point, \"0\")\n            break \n    return answer\n\n### END"}
{"id": "d4b6c852-c8c8-45d9-8872-fc806f2bd537", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of quadrangles on mercury\ntable_data = [[\"name\",\"number\",\"namesake\",\"albedo feature name\",\"area\",\"current map\"],[\"borealis\",\"h - 1\",\"borealis planitia\",\"borea\",\"north pole to 67 degree latitude\",\"h - 1\"],[\"victoria\",\"h - 2\",\"victoria rupes\",\"aurora\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 2\"],[\"shakespeare\",\"h - 3\",\"shakespeare crater\",\"caduceata\",\"90 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 3\"],[\"raditladi\",\"h - 4\",\"raditladi basin\",\"liguria\",\"270 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 4\"],[\"hokusai\",\"h - 5\",\"hokusai crater\",\"apollonia\",\"360 to 270 degree longitude , 21 to 66 degree latitude\",\"h - 5\"],[\"kuiper\",\"h - 6\",\"kuiper crater\",\"tricrena\",\"0 to 72 degree longitude , 22 to 22 degree latitude\",\"h - 6\"],[\"beethoven\",\"h - 7\",\"beethoven crater\",\"solitudo lycaonis\",\"72 to 144 degree longitude , 22 to 22 degree latitude\",\"h - 7\"],[\"tolstoj\",\"h - 8\",\"tolstoj crater\",\"phaethontias\",\"144 to 216 degree longitude , 22 to 22 degree latitude\",\"h - 8\"],[\"eminescu\",\"h - 9\",\"eminescu crater\",\"solitudo criophori\",\"216 to 288 degree longitude , 22 to 22 degree latitude\",\"h - 9\"],[\"derain\",\"h - 10\",\"derain crater\",\"pieria\",\"288 to 360 degree longitude , - 22 to 22 degree latitude\",\"h - 10\"],[\"discovery\",\"h - 11\",\"discovery rupes\",\"solitudo hermae trismegisti\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 11\"],[\"michelangelo\",\"h - 12\",\"michelangelo crater\",\"solitudo promethei\",\"90 to 180 degree longitude , 21 to - 66 degree latitude\",\"h - 12\"],[\"neruda\",\"h - 13\",\"neruda crater\",\"solitudo persephones\",\"180 to 270 degree longitude , 21 to - 66 degree latitude\",\"h - 13\"],[\"debussy\",\"h - 14\",\"debussy crater\",\"cyllene\",\"270 to 360 degree longitude , 21 to 66 degree latitude\",\"h - 14\"],[\"bach\",\"h - 15\",\"bach crater\",\"australia\",\"south pole to 67 degree latitude\",\"h - 15\"]]\nQuestion = Is it true that h - 11 is the current map location and number of the feature whose namesake was discovery rupes?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    namesakes = get_column_by_name(table_data, \"namesake\")\n    current_maps = get_column_by_name(table_data, \"current map\")\n    for namesake, current_map in zip(namesakes, current_maps):\n        if namesake.lower() == \"discovery rupes\" and current_map.lower() == \"h - 11\":\n            return True\n    return False\n\n### END"}
{"id": "9358c2c5-cf96-4c22-ba97-e5ca53c3ecda", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1965 detroit lions season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 19 , 1965\", \"los angeles rams\", \"w 20 - 0\", \"46941\"],[\"2\", \"september 26 , 1965\", \"minnesota vikings\", \"w 31 - 29\", \"46826\"],[\"3\", \"october 3 , 1965\", \"washington redskins\", \"w 14 - 10\", \"52627\"],[\"4\", \"october 10 , 1965\", \"baltimore colts\", \"l 31 - 7\", \"60238\"],[\"5\", \"october 17 , 1965\", \"green bay packers\", \"l 31 - 21\", \"56712\"],[\"6\", \"october 24 , 1965\", \"chicago bears\", \"l 38 - 10\", \"45658\"],[\"7\", \"october 31 , 1965\", \"los angeles rams\", \"w 31 - 7\", \"35137\"],[\"8\", \"november 7 , 1965\", \"green bay packers\", \"w 12 - 7\", \"50852\"],[\"9\", \"november 14 , 1965\", \"san francisco 49ers\", \"l 27 - 21\", \"54534\"],[\"10\", \"november 21 , 1965\", \"chicago bears\", \"l 17 - 10\", \"51499\"],[\"11\", \"november 25 , 1965\", \"baltimore colts\", \"t 24 - 24\", \"55036\"],[\"12\", \"december 5 , 1965\", \"san francisco 49ers\", \"l 17 - 14\", \"38463\"],[\"13\", \"december 12 , 1965\", \"minnesota vikings\", \"l 29 - 7\", \"45420\"],[\"14\", \"december 19 , 1965\", \"philadelphia eagles\", \"w 35 - 28\", \"56718\"]]\nQuestion = Is it true that game 11 that was played against the baltimore colts resulted in a t 24 - 24 with an attendance of 55036?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    results = get_column_by_name(table_data, \"result\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    for opponent, result, attendance in zip(opponents, results, attendances):\n        if opponent.lower() == \"baltimore colts\" and result.lower() == \"t 24 - 24\" and attendance == \"55036\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "5abd49f9-a781-493b-b416-5189ee844f04", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1982 toronto blue jays season\ntable_data = [[\"date\",\"opponent\",\"score\",\"loss\",\"record\"],[\"august 1\",\"tigers\",\"8 - 5\",\"leal (8 - 8)\",\"48 - 53\"],[\"august 2\",\"brewers\",\"9 - 4\",\"mcclure (8 - 4)\",\"49 - 53\"],[\"august 3\",\"brewers\",\"7 - 4\",\"clancy (8 - 10)\",\"49 - 54\"],[\"august 4\",\"brewers\",\"8 - 0\",\"gott (2 - 7)\",\"49 - 55\"],[\"august 5\",\"tigers\",\"5 - 2\",\"leal (8 - 9)\",\"49 - 56\"],[\"august 5\",\"tigers\",\"7 - 4\",\"jackson (3 - 8)\",\"49 - 57\"],[\"august 6\",\"tigers\",\"6 - 0\",\"stieb (11 - 11)\",\"49 - 58\"],[\"august 7\",\"tigers\",\"7 - 4\",\"pashnick (3 - 4)\",\"50 - 58\"],[\"august 8\",\"tigers\",\"7 - 4\",\"underwood (3 - 8)\",\"51 - 58\"],[\"august 8\",\"tigers\",\"7 - 4\",\"rucker (2 - 2)\",\"52 - 58\"],[\"august 9\",\"red sox\",\"4 - 2\",\"eckersley (11 - 10)\",\"53 - 58\"],[\"august 10\",\"red sox\",\"4 - 0\",\"torrez (7 - 7)\",\"54 - 58\"],[\"august 11\",\"red sox\",\"4 - 3\",\"stanley (7 - 5)\",\"55 - 58\"],[\"august 12\",\"brewers\",\"7 - 1\",\"gott (3 - 8)\",\"55 - 59\"],[\"august 12\",\"brewers\",\"4 - 3\",\"murray (7 - 4)\",\"55 - 60\"],[\"august 13\",\"brewers\",\"3 - 1\",\"leal (8 - 10)\",\"55 - 61\"],[\"august 14\",\"brewers\",\"4 - 2\",\"caldwell (10 - 11)\",\"56 - 61\"],[\"august 15\",\"brewers\",\"3 - 2\",\"slaton (9 - 4)\",\"57 - 61\"],[\"august 16\",\"indians\",\"2 - 1\",\"waits (1 - 12)\",\"58 - 61\"],[\"august 17\",\"indians\",\"6 - 5\",\"mclaughlin (8 - 5)\",\"58 - 62\"],[\"august 17\",\"indians\",\"9 - 5\",\"geisel (1 - 1)\",\"58 - 63\"],[\"august 20\",\"yankees\",\"4 - 2\",\"stieb (13 - 12)\",\"58 - 64\"],[\"august 21\",\"yankees\",\"3 - 1\",\"guidry (11 - 5)\",\"59 - 64\"],[\"august 22\",\"yankees\",\"3 - 1\",\"gott (4 - 9)\",\"59 - 65\"],[\"august 23\",\"yankees\",\"4 - 3\",\"leal (8 - 11)\",\"59 - 66\"],[\"august 24\",\"orioles\",\"7 - 3 (10)\",\"mclaughlin (8 - 6)\",\"59 - 67\"],[\"august 25\",\"orioles\",\"8 - 3\",\"clancy (11 - 11)\",\"59 - 68\"],[\"august 26\",\"orioles\",\"12 - 5\",\"gott (4 - 10)\",\"59 - 69\"],[\"august 27\",\"yankees\",\"10 - 3\",\"righetti (8 - 6)\",\"60 - 69\"],[\"august 28\",\"yankees\",\"3 - 2 (11)\",\"laroche (4 - 2)\",\"61 - 69\"],[\"august 29\",\"yankees\",\"8 - 2\",\"clancy (11 - 12)\",\"61 - 70\"],[\"august 30\",\"orioles\",\"6 - 3\",\"eichhorn (0 - 1)\",\"61 - 71\"],[\"august 31\",\"orioles\",\"1 - 0\",\"leal (9 - 12)\",\"61 - 72\"]]\nQuestion = Is it true that on august 4th , gott lost 2 - 7?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    scores = get_column_by_name(table_data, \"score\")\n    losses = get_column_by_name(table_data, \"loss\")\n    for date, score, loss in zip(dates, scores, losses):\n        if date.lower() == \"august 4\" and \"gott\" in loss.lower():\n            answer = equal_to(score, \"8 - 0\")\n            break \n    return answer\n\n### END"}
{"id": "544f765f-99ab-43c8-a9d1-506944cce6db", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = high jump\ntable_data = [[\"pos\", \"mark\", \"athlete\", \"venue\", \"date\"],[\"1\", \"2.43 m (7ft11½in)\", \"javier sotomayor ( cub )\", \"budapest\", \"4 march 1989\"],[\"2\", \"2.42 m (7ft11¼in)\", \"carlo thränhardt ( frg )\", \"berlin\", \"26 february 1988\"],[\"3\", \"2.41 m (7ft10¾in)\", \"patrik sjöberg ( swe )\", \"piraeus\", \"1 february 1987\"],[\"4\", \"2.40 m (7ft10¼in)\", \"hollis conway ( usa )\", \"seville\", \"10 march 1991\"],[\"4\", \"2.40 m (7ft10¼in)\", \"stefan holm ( swe )\", \"madrid\", \"6 march 2005\"],[\"4\", \"2.40 m (7ft10¼in)\", \"ivan ukhov ( rus )\", \"athens\", \"25 february 2009\"],[\"7\", \"2.39 m (7ft10in)\", \"dietmar mögenburg ( frg )\", \"cologne\", \"24 february 1985\"],[\"7\", \"2.39 m (7ft10in)\", \"ralf sonn ( ger )\", \"berlin\", \"1 march 1991\"],[\"9\", \"2.38 m (7ft9½in)\", \"igor paklin ( ussr )\", \"indianapolis\", \"7 march 1987\"],[\"9\", \"2.38 m (7ft9½in)\", \"hennadiy avdyeyenko ( ussr )\", \"indianapolis\", \"7 march 1987\"],[\"9\", \"2.38 m (7ft9½in)\", \"steve smith ( gbr )\", \"wuppertal\", \"4 february 1994\"],[\"9\", \"2.38 m (7ft9½in)\", \"wolf - hendrik beyer ( ger )\", \"weinheim\", \"18 march 1994\"],[\"9\", \"2.38 m (7ft9½in)\", \"sorin matei ( rom )\", \"wuppertal\", \"3 february 1995\"],[\"9\", \"2.38 m (7ft9½in)\", \"matt hemingway ( usa )\", \"atlanta\", \"4 march 2000\"],[\"9\", \"2.38 m (7ft9½in)\", \"yaroslav rybakov ( rus )\", \"stockholm\", \"15 february 2005\"],[\"9\", \"2.38 m (7ft9½in)\", \"linus thörnblad ( swe )\", \"gothenburg\", \"25 february 2007\"]]\nQuestion = Is it true that on 1st february 1995 , the position was less than 4 at athens?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    positions = get_column_by_name(table_data, \"pos\")\n    dates = get_column_by_name(table_data, \"date\")\n    venues = get_column_by_name(table_data, \"venue\")\n    answer = False\n    for position, date, venue in zip(positions, dates, venues):\n        if \"1 february 1995\" in date.lower() and \"athens\" in venue.lower():\n            answer = less_than(int(position), 4)\n            break\n    return answer\n\n### END"}
{"id": "9ccccfd2-5996-497d-92e3-8aa01420a62f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of americas records in swimming\ntable_data = [[\"event\", \"time\", \"nationality\", \"date\", \"meet\", \"location\"],[\"50 m freestyle\", \"20.91\", \"brazil\", \"18 december 2009\", \"brazilian championships\", \"são paulo, brazil\"],[\"100 m freestyle\", \"46.91\", \"brazil\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m freestyle\", \"1:42.96\", \"united states\", \"12 august 2008\", \"olympic games\", \"beijing, china\"],[\"400 m freestyle\", \"3:42.78\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"800 m freestyle\", \"7:41.86\", \"canada\", \"27 july 2011\", \"world championships\", \"shanghai, china\"],[\"1500 m freestyle\", \"14:39.63\", \"canada\", \"4 august 2012\", \"olympic games\", \"london, united kingdom\"],[\"50 m backstroke\", \"24.33\", \"united states\", \"5 december 2008\", \"dutch swim cup\", \"eindhoven, netherlands\"],[\"100 m backstroke\", \"51.94\", \"united states\", \"8 july 2009\", \"us championships\", \"indianapolis, united states\"],[\"200 m backstroke\", \"1:51.92\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m breaststroke\", \"26.76\", \"brazil\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"100 m breaststroke\", \"58.96\", \"united states\", \"26 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m breaststroke\", \"2:07.42\", \"united states\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m butterfly\", \"22.76\", \"brazil\", \"26 april 2012\", \"maria lenk trophy\", \"rio de janeiro, brazil\"],[\"100 m butterfly\", \"49.82\", \"united states\", \"1 august 2009\", \"world championships\", \"rome, italy\"],[\"200 m butterfly\", \"1:51.51\", \"united states\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m individual medley\", \"1:54.00\", \"united states\", \"28 july 2011\", \"world championships\", \"shanghai, china\"],[\"400 m individual medley\", \"4:03.84\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"4100 m freestyle relay\", \"3:08.24\", \"united states\", \"11 august 2008\", \"olympic games\", \"beijing, china\"],[\"4200 m freestyle relay\", \"6:58.55\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"4100 m medley relay\", \"3:27.28\", \"united states\", \"2 august 2009\", \"world championships\", \"rome, italy\"]]\nQuestion = Is it true that the 1500 m freestyle event took place on 4 august 2012?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    dates = get_column_by_name(table_data, \"date\")\n    for event, date in zip(events, dates):\n        if event.lower() == \"1500 m freestyle\":\n            answer = equal_to(date, \"4 august 2012\")\n            break \n    return answer\n\n### END"}
{"id": "a15582ba-9d66-4931-a044-bcf32adb2122", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of radio stations in tamaulipas\ntable_data = [[\"frequency\", \"callsign\", \"brand\", \"city of license\", \"type\"],[\"580\", \"xehp\", \"la mas prendida\", \"ciudad victoria\", \"norteño\"],[\"640\", \"xetam\", \"la poderosa\", \"santa elena\", \"norteño\"],[\"970\", \"xebj - am\", \"radio 970\", \"ciudad victoria\", \"contemporary\"],[\"1340\", \"xerpv - am\", \"la cotorra\", \"ciudad victoria\", \"norteño\"],[\"1380\", \"xegw\", \"planeta w 1380\", \"ciudad victoria\", \"christian pop\"],[\"1480\", \"xevic\", \"radio tamaulipas\", \"ciudad victoria\", \"state government\"]]\nQuestion = Is it true that the brand is la cotorra has the frequency 1480?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    brands = get_column_by_name(table_data, \"brand\")\n    for frequency, brand in zip(frequencies, brands):\n        if brand.lower() == \"la cotorra\":\n            answer = equal_to(frequency, \"1480\")\n            break \n    return answer\n\n### END"}
{"id": "d60e57c5-3bbb-41fb-b450-e0ec23592353", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1930 grand prix season\ntable_data = [[\"name\",\"circuit\",\"date\",\"winning driver\",\"winning constructor\",\"report\"],[\"circuit d'esterel plage\",\"saint - raphaël\",\"2 march\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"tripoli grand prix\",\"tripoli\",\"23 march\",\"baconin borzacchini\",\"maserati\",\"report\"],[\"monaco grand prix\",\"monte carlo\",\"6 april\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"alessandria circuit\",\"bordino\",\"20 april\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"oran grand prix\",\"arcole\",\"27 april\",\"jean de maleplane\",\"bugatti\",\"report\"],[\"targa florio\",\"madonie\",\"4 may\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"picardy grand prix\",\"péronne\",\"18 may\",\"max fourny\",\"bugatti\",\"report\"],[\"rome grand prix\",\"tre fontane\",\"25 may\",\"luigi arcangeli\",\"maserati\",\"report\"],[\"grand prix des frontières\",\"chimay\",\"9 june\",\"georges de marotte\",\"salmson\",\"report\"],[\"lyon grand prix\",\"quincieux\",\"15 june\",\"louis chiron\",\"bugatti\",\"report\"],[\"grand prix de la marne\",\"reims\",\"29 june\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"eifelrennen\",\"nürburgring\",\"20 july\",\"heinrich - joachim von morgen\",\"bugatti\",\"report\"],[\"dieppe grand prix\",\"dieppe\",\"20 july\",\"marcel lehoux\",\"bugatti\",\"report\"],[\"coppa ciano\",\"montenero\",\"3 august\",\"luigi fagioli\",\"maserati\",\"report\"],[\"dauphiné circuit\",\"grenoble\",\"10 august\",\"philippe étancelin\",\"bugatti\",\"report\"],[\"coppa acerbo\",\"pescara\",\"17 august\",\"achille varzi\",\"maserati\",\"report\"],[\"grand prix du comminges\",\"saint - gaudens\",\"17 august\",\"françois miquel\",\"bugatti\",\"report\"],[\"monza grand prix\",\"monza\",\"7 september\",\"achille varzi\",\"maserati\",\"report\"],[\"lviv grand prix\",\"lviv\",\"8 september\",\"henryk liefeldt\",\"austro daimler\",\"report\"],[\"masaryk circuit\",\"brno\",\"28 september\",\"hermann of leiningen\",\"bugatti\",\"report\"],[\"san sebastián grand prix\",\"lasarte\",\"5 october\",\"achille varzi\",\"maserati\",\"report\"]]\nQuestion = Is it true that the lyon grand prix is the only race that has a report status of report?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    reports = get_column_by_name(table_data, \"report\")\n    answer = equal_to(reports.count(\"report\"), 1)\n    return answer\n\n### END"}
{"id": "4b276586-2104-449b-8745-238d2a7a2181", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 honda indy 300\ntable_data = [[\"driver\", \"team\", \"laps\", \"time / retired\", \"grid\"],[\"cristiano da matta\", \"newman - haas racing\", \"65\", \"1:51:47.260\", \"3\"],[\"michael andretti\", \"team green\", \"65\", \"+ 5.8 secs\", \"6\"],[\"alex tagliani\", \"forsythe racing\", \"65\", \"+ 7.5 secs\", \"7\"],[\"gil de ferran\", \"team penske\", \"65\", \"+ 20.9 secs\", \"2\"],[\"kenny brack\", \"team rahal\", \"65\", \"+ 22.6 secs\", \"13\"],[\"jimmy vasser\", \"patrick racing\", \"65\", \"+ 24.7 secs\", \"10\"],[\"michel jourdain , jr\", \"bettenhausen racing\", \"65\", \"+ 39.5 secs\", \"16\"],[\"christian fittipaldi\", \"newman - haas racing\", \"65\", \"+ 40.5 secs\", \"15\"],[\"max papis\", \"team rahal\", \"65\", \"+ 42.6 secs\", \"14\"],[\"memo gidley\", \"chip ganassi racing\", \"65\", \"+ 42.9 secs\", \"23\"],[\"patrick carpentier\", \"forsythe racing\", \"65\", \"+ 46.7 secs\", \"9\"],[\"shinji nakano\", \"fernández racing\", \"65\", \"+ 46.9 secs\", \"18\"],[\"alex barron\", \"arciero - blair racing\", \"65\", \"+ 46.9 secs\", \"26\"],[\"paul tracy\", \"team green\", \"65\", \"+ 62.6 secs\", \"4\"],[\"scott dixon\", \"pacwest racing\", \"65\", \"+ 72.0 secs\", \"8\"],[\"tora takagi\", \"walker racing\", \"65\", \"+ 81.8 secs\", \"20\"],[\"tony kanaan\", \"mo nunn racing\", \"65\", \"+ 82.0 secs\", \"3\"],[\"bryan herta\", \"forsythe racing\", \"65\", \"+ 82.4 secs\", \"22\"],[\"adrián fernández\", \"fernández racing\", \"65\", \"+ 100.3 secs\", \"17\"],[\"hélio castroneves\", \"team penske\", \"64\", \"+ 1 lap\", \"11\"],[\"bruno junqueira\", \"chip ganassi racing\", \"56\", \"contact\", \"21\"],[\"roberto moreno\", \"patrick racing\", \"54\", \"mechanical\", \"1\"],[\"dario franchitti\", \"team green\", \"35\", \"mechanical\", \"5\"],[\"maurício gugelmin\", \"pacwest racing\", \"34\", \"mechanical\", \"25\"],[\"oriol servià\", \"sigma autosport\", \"10\", \"mechanical\", \"12\"],[\"casey mears\", \"mo nunn racing\", \"0\", \"contact\", \"24\"]]\nQuestion = Is it true that oriol servià had 10 laps and a grid of 12?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    laps = get_column_by_name(table_data, \"laps\")\n    grids = get_column_by_name(table_data, \"grid\")\n    for driver, lap, grid in zip(drivers, laps, grids):\n        if driver.lower() == \"oriol servià\":\n            answer = equal_to(lap, \"10\") and equal_to(grid, \"12\")\n            break \n    return answer\n\n### END"}
{"id": "9077e8a4-1ec3-428e-a069-ccd8cf978705", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1982 toronto blue jays season\ntable_data = [[\"date\",\"opponent\",\"score\",\"loss\",\"record\"],[\"august 1\",\"tigers\",\"8 - 5\",\"leal (8 - 8)\",\"48 - 53\"],[\"august 2\",\"brewers\",\"9 - 4\",\"mcclure (8 - 4)\",\"49 - 53\"],[\"august 3\",\"brewers\",\"7 - 4\",\"clancy (8 - 10)\",\"49 - 54\"],[\"august 4\",\"brewers\",\"8 - 0\",\"gott (2 - 7)\",\"49 - 55\"],[\"august 5\",\"tigers\",\"5 - 2\",\"leal (8 - 9)\",\"49 - 56\"],[\"august 5\",\"tigers\",\"7 - 4\",\"jackson (3 - 8)\",\"49 - 57\"],[\"august 6\",\"tigers\",\"6 - 0\",\"stieb (11 - 11)\",\"49 - 58\"],[\"august 7\",\"tigers\",\"7 - 4\",\"pashnick (3 - 4)\",\"50 - 58\"],[\"august 8\",\"tigers\",\"7 - 4\",\"underwood (3 - 8)\",\"51 - 58\"],[\"august 8\",\"tigers\",\"7 - 4\",\"rucker (2 - 2)\",\"52 - 58\"],[\"august 9\",\"red sox\",\"4 - 2\",\"eckersley (11 - 10)\",\"53 - 58\"],[\"august 10\",\"red sox\",\"4 - 0\",\"torrez (7 - 7)\",\"54 - 58\"],[\"august 11\",\"red sox\",\"4 - 3\",\"stanley (7 - 5)\",\"55 - 58\"],[\"august 12\",\"brewers\",\"7 - 1\",\"gott (3 - 8)\",\"55 - 59\"],[\"august 12\",\"brewers\",\"4 - 3\",\"murray (7 - 4)\",\"55 - 60\"],[\"august 13\",\"brewers\",\"3 - 1\",\"leal (8 - 10)\",\"55 - 61\"],[\"august 14\",\"brewers\",\"4 - 2\",\"caldwell (10 - 11)\",\"56 - 61\"],[\"august 15\",\"brewers\",\"3 - 2\",\"slaton (9 - 4)\",\"57 - 61\"],[\"august 16\",\"indians\",\"2 - 1\",\"waits (1 - 12)\",\"58 - 61\"],[\"august 17\",\"indians\",\"6 - 5\",\"mclaughlin (8 - 5)\",\"58 - 62\"],[\"august 17\",\"indians\",\"9 - 5\",\"geisel (1 - 1)\",\"58 - 63\"],[\"august 20\",\"yankees\",\"4 - 2\",\"stieb (13 - 12)\",\"58 - 64\"],[\"august 21\",\"yankees\",\"3 - 1\",\"guidry (11 - 5)\",\"59 - 64\"],[\"august 22\",\"yankees\",\"3 - 1\",\"gott (4 - 9)\",\"59 - 65\"],[\"august 23\",\"yankees\",\"4 - 3\",\"leal (8 - 11)\",\"59 - 66\"],[\"august 24\",\"orioles\",\"7 - 3 (10)\",\"mclaughlin (8 - 6)\",\"59 - 67\"],[\"august 25\",\"orioles\",\"8 - 3\",\"clancy (11 - 11)\",\"59 - 68\"],[\"august 26\",\"orioles\",\"12 - 5\",\"gott (4 - 10)\",\"59 - 69\"],[\"august 27\",\"yankees\",\"10 - 3\",\"righetti (8 - 6)\",\"60 - 69\"],[\"august 28\",\"yankees\",\"3 - 2 (11)\",\"laroche (4 - 2)\",\"61 - 69\"],[\"august 29\",\"yankees\",\"8 - 2\",\"clancy (11 - 12)\",\"61 - 70\"],[\"august 30\",\"orioles\",\"6 - 3\",\"eichhorn (0 - 1)\",\"61 - 71\"],[\"august 31\",\"orioles\",\"1 - 0\",\"leal (9 - 12)\",\"61 - 72\"]]\nQuestion = Is it true that on august 29 , when the opponent was yankees , the score was 10 - 3?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    scores = get_column_by_name(table_data, \"score\")\n    for date, opponent, score in zip(dates, opponents, scores):\n        if date.lower() == \"august 29\" and opponent.lower() == \"yankees\":\n            answer = score == \"10 - 3\"\n            break\n    return answer\n\n### END"}
{"id": "4dd147b5-18ac-43c8-a19a-93c7ccefcec8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = algeria at the 2008 summer olympics\ntable_data = [[\"athlete\", \"event\", \"round of 32\", \"round of 16\", \"quarterfinals\", \"semifinals\"],[\"abdelhalim ouradi\", \"bantamweight\", \"nevin ( irl ) l 4 - 9\", \"did not advance\", \"did not advance\", \"did not advance\"],[\"abdelkader chadi\", \"featherweight\", \"bye\", \"adi ( tha ) w 7 - 6\", \"kılıç ( tur ) l 6 - 13\", \"did not advance\"],[\"hamza kramou\", \"lightweight\", \"ugás ( cub ) l 3 - 21\", \"did not advance\", \"did not advance\", \"did not advance\"],[\"nabil kassel\", \"middleweight\", \"bye\", \"sutherland ( irl ) l 14 - 21\", \"did not advance\", \"did not advance\"],[\"abdelhafid benchebla\", \"light heavyweight\", \"kumar ( ind ) w 23 - 3\", \"yasser ( egy ) w 13 - 6\", \"zhang xp ( chn ) l 7 - 12\", \"did not advance\"],[\"abdelaziz touilbini\", \"heavyweight\", \"n / a\", \"wilder ( usa ) l 4 - 10\", \"did not advance\", \"did not advance\"]]\nQuestion = Is it true that abdelhafid benchebla faced zhang xp (chn) l 7 - 12 in the quarterfinals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    athletes = get_column_by_name(table_data, \"athlete\")\n    quarterfinals = get_column_by_name(table_data, \"quarterfinals\")\n    for athlete, quarterfinal in zip(athletes, quarterfinals):\n        if athlete.lower() == \"abdelhafid benchebla\":\n            answer = equal_to(quarterfinal, \"zhang xp ( chn ) l 7 - 12\")\n            break \n    return answer\n\n### END"}
{"id": "804bf1a9-df54-4642-9a83-6f1a4b76d6a8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = ghost whisperer (season 3)\ntable_data = [[\"no in series\",\"no in season\",\"title\",\"directed by\",\"written by\", \"original air date\",\"us viewers (millions)\"],[\"45\", \"1\", \"the underneath\", \"john gray\", \"john gray\", \"september 28, 2007\", \"8.72\"],[\"46\", \"2\", \"don't try this at home\", \"ian sander\", \"teddy tenenbaum & laurie mccarthy\", \"october 5, 2007\", \"8.91\"],[\"47\", \"3\", \"haunted hero\", \"eric laneuville\", \"breen frazier & karl schaefer\", \"october 12, 2007\", \"8.90\"],[\"48\", \"4\", \"no safe place\", \"peter o'fallon\", \"jeannine renshaw\", \"october 19, 2007\", \"8.95\"],[\"49\", \"5\", \"weight of what was\", \"gloria muzio\", \"pk simonds\", \"october 26, 2007\", \"9.99\"],[\"50\", \"6\", \"double exposure\", \"eric laneuville\", \"laurie mccarthy\", \"november 2, 2007\", \"9.18\"],[\"51\", \"7\", \"unhappy medium\", \"frederick eo toye\", \"breen frazier\", \"november 9, 2007\", \"9.85\"],[\"52\", \"8\", \"bad blood\", \"peter werner\", \"teddy tenenbaum\", \"november 16, 2007\", \"9.56\"],[\"53\", \"9\", \"all ghosts lead to grandview\", \"frederick eo toye\", \"pk simonds & laurie mccarthy\", \"november 23, 2007\", \"9.98\"],[\"54\", \"10\", \"holiday spirit\", \"steven robman\", \"jeannine renshaw\", \"december 14, 2007\", \"9.80\"],[\"55\", \"11\", \"slam (aka slambook)\", \"mark rosman\", \"karl schaefer & daniel sinclair\", \"january 11, 2008\", \"9.86\"],[\"56\", \"12\", \"first do no harm\", \"ian sander\", \"john gray\", \"january 18, 2008\", \"9.91\"],[\"57\", \"13\", \"home but not alone\", \"eric laneuville\", \"pk simonds & laurie mccarthy\", \"april 4, 2008\", \"9.06\"],[\"58\", \"14\", \"the grave sitter\", \"frederick eo toye\", \"john gray\", \"april 11, 2008\", \"8.55\"],[\"59\", \"15\", \"horror show\", \"ian sander\", \"jeannine renshaw\", \"april 25, 2008\", \"8.98\"],[\"60\", \"16\", \"deadbeat dads\", \"gloria muzio\", \"mark b perry\", \"may 2, 2008\", \"9.21\"],[\"61\", \"17\", \"stranglehold (part 1)\", \"eric laneuville\", \"laurie mccarthy & pk simonds\", \"may 9, 2008\", \"8.78\"]]\nQuestion = Is it true that the episode no safe place had 8.95 million us viewers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    viewers = get_column_by_name(table_data, \"us viewers (millions)\")\n    for title, viewer in zip(titles, viewers):\n        if title.lower() == \"no safe place\":\n            answer = equal_to(viewer, \"8.95\")\n            break \n    return answer\n\n### END"}
{"id": "ec9b87ca-d2b4-4187-9727-0748f35bc26e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2002 - 03 boston celtics season\ntable_data = [[\"game\", \"date\", \"opponent\", \"score\", \"location\", \"record\"],[\"47\", \"february 1\", \"indiana pacers\", \"l 100 - 109\", \"conseco fieldhouse\", \"26 - 21\"],[\"48\", \"february 3\", \"new orleans hornets\", \"l 96 - 103\", \"new orleans arena\", \"26 - 22\"],[\"49\", \"february 5\", \"seattle supersonics\", \"w 114 - 74\", \"fleetcenter\", \"27 - 22\"],[\"50\", \"february 11\", \"seattle supersonics\", \"w 82 - 76\", \"keyarena at seattle center\", \"28 - 22\"],[\"51\", \"february 13\", \"portland trail blazers\", \"w 100 - 92\", \"rose garden\", \"29 - 22\"],[\"52\", \"february 15\", \"los angeles clippers\", \"w 92 - 84\", \"staples center\", \"30 - 22\"],[\"53\", \"february 16\", \"phoenix suns\", \"l 92 - 102\", \"america west arena\", \"30 - 23\"],[\"54\", \"february 18\", \"golden state warriors\", \"w 125 - 117\", \"the arena in oakland\", \"31 - 23\"],[\"55\", \"february 20\", \"sacramento kings\", \"l 83 - 105\", \"arco arena\", \"31 - 24\"],[\"56\", \"february 24\", \"houston rockets\", \"l 95 - 101 (ot)\", \"fleetcenter\", \"31 - 25\"],[\"57\", \"february 26\", \"indiana pacers\", \"w 71 - 69\", \"fleetcenter\", \"32 - 25\"],[\"58\", \"february 28\", \"toronto raptors\", \"w 90 - 85\", \"fleetcenter\", \"33 - 25\"]]\nQuestion = Is it true that the game that brought the team to 29 - 22 was held at the rose garden?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"location\")\n    records = get_column_by_name(table_data, \"record\")\n    for location, record in zip(locations, records):\n        if record == \"29 - 22\":\n            answer = equal_to(location, \"rose garden\")\n            break \n    return answer\n\n### END"}
{"id": "92eb20d1-9328-467b-9849-edc09d544e84", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states house of representatives elections , 1812\ntable_data = [[\"district\", \"incumbent\", \"party\", \"first elected\", \"result\", \"candidates\"],[\"north carolina 2\", \"willis alston\", \"democratic - republican\", \"1798\", \"re - elected\", \"willis alston (dr) 56.0% daniel mason (f) 44.0%\"],[\"north carolina 5\", \"william r king\", \"democratic - republican\", \"1810\", \"re - elected\", \"william r king (dr) 100%\"],[\"north carolina 6\", \"nathaniel macon\", \"democratic - republican\", \"1791\", \"re - elected\", \"nathaniel macon (dr)\"],[\"north carolina 9\", \"none (district created)\", \"none (district created)\", \"none (district created)\", \"new seat democratic - republican gain\", \"bartlett yancey (dr) 61.1% james martin (f) 38.9%\"],[\"north carolina 10\", \"joseph pearson\", \"federalist\", \"1808\", \"re - elected\", \"joseph pearson (f) 54.1% alexander gary (dr) 45.9%\"]]\nQuestion = Is it true that the incumbent joseph pearson belonged is the federalist party?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    incumbents = get_column_by_name(table_data, \"incumbent\")\n    parties = get_column_by_name(table_data, \"party\")\n    for incumbent, party in zip(incumbents, parties):\n        if incumbent.lower() == \"joseph pearson\":\n            answer = party.lower() == \"federalist\"\n            break\n    return answer\n\n### END"}
{"id": "3bf99d80-701b-4ce6-83d0-b91da51982d8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glamorgan county cricket club\ntable_data = [[\"score\", \"batsmen\", \"against\", \"location\", \"year\"],[\"374\", \"matthew elliott and steve james\", \"sussex\", \"colwyn bay\", \"2000\"],[\"252\", \"matthew maynard and david hemp\", \"northamptonshire\", \"sophia gardens\", \"2002\"],[\"313\", \"emrys davies and willie jones\", \"essex\", \"brentwood\", \"1948\"],[\"425\", \"adrian dale and viv richards\", \"middlesex\", \"sophia gardens\", \"1993\"],[\"264\", \"maurice robinson and stan montgomery\", \"hampshire\", \"bournemouth\", \"1949\"],[\"240\", \"jim allenby and mark wallace\", \"surrey\", \"the brit oval\", \"2009\"],[\"211\", \"tony cottey and ottis gibson\", \"leicestershire\", \"swansea\", \"1996\"],[\"202\", \"dai davies and joe hills\", \"sussex\", \"eastbourne\", \"1928\"],[\"203\", \"joe hills and johnnie clay\", \"worcestershire\", \"swansea\", \"1929\"],[\"143\", \"terry davies and simon daniels\", \"gloucestershire\", \"swansea\", \"1982\"]]\nQuestion = Is it true that the batsmen from the year 1982 were terry davies and simon daniels?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    batsmen = get_column_by_name(table_data, \"batsmen\")\n    for year, batsman in zip(years, batsmen):\n        if year == \"1982\":\n            answer = equal_to(batsman, \"terry davies and simon daniels\")\n            break \n    return answer\n\n### END"}
{"id": "8dac548d-1d18-4968-ade7-2e3511056d29", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1978 world series\ntable_data = [[\"game\", \"date\", \"location\", \"time\", \"attendance\"],[\"1\", \"october 10\", \"dodger stadium\", \"2:48\", \"55997\"],[\"2\", \"october 11\", \"dodger stadium\", \"2:37\", \"55982\"],[\"3\", \"october 13\", \"yankee stadium (i)\", \"2:27\", \"56447\"],[\"4\", \"october 14\", \"yankee stadium (i)\", \"3:17\", \"56445\"],[\"5\", \"october 15\", \"yankee stadium (i)\", \"2:56\", \"56448\"],[\"6\", \"october 17\", \"dodger stadium\", \"2:34\", \"55985\"]]\nQuestion = Is it true that dodger stadium was not the location of the october 10 game?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    locations = get_column_by_name(table_data, \"location\")\n    for date, location in zip(dates, locations):\n        if date == \"october 10\":\n            answer = location != \"dodger stadium\"\n            break\n    return answer\n\n### END"}
{"id": "3d0e0aaf-13e8-4a4e-ada1-fc31143e00f2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mark donohue\ntable_data = [[\"year\", \"chassis\", \"engine\", \"start\", \"finish\", \"entrant\"],[\"1969\", \"lola\", \"offy\", \"4th\", \"7th\", \"penske\"],[\"1970\", \"lola\", \"ford\", \"5th\", \"2nd\", \"penske\"],[\"1971\", \"mclaren\", \"offy\", \"2nd\", \"25th\", \"penske\"],[\"1972\", \"mclaren\", \"offy\", \"3rd\", \"1st\", \"penske\"],[\"1973\", \"eagle\", \"offy\", \"3rd\", \"15th\", \"penske\"]]\nQuestion = Is it true that in 1972 the offy engine started 3rd?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    engines = get_column_by_name(table_data, \"engine\")\n    starts = get_column_by_name(table_data, \"start\")\n    for year, engine, start in zip(years, engines, starts):\n        if year == \"1972\" and engine.lower() == \"offy\":\n            answer = equal_to(start, \"3rd\")\n            break \n    return answer\n\n### END"}
{"id": "4ece02c5-160a-4575-9893-b9929285d929", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 geylang united fc season\ntable_data = [[\"match\", \"date\", \"tournament\", \"location\", \"opponent team\", \"score\"],[\"1\", \"january 19 , 2008\", \"friendly\", \"bedok stadium\", \"police sa\", \"4 - 0\"],[\"2\", \"january 23 , 2008\", \"friendly\", \"bedok stadium\", \"katong fc\", \"7 - 1\"],[\"3\", \"january 26 , 2008\", \"friendly\", \"penang , malaysia\", \"chinese recreation club\", \"0 - 5\"],[\"4\", \"january 27 , 2008\", \"friendly\", \"penang , malaysia\", \"kampong seronong\", \"0 - 1\"],[\"5\", \"january 31 , 2008\", \"friendly\", \"bedok stadium\", \"admiralty\", \"4 - 0\"],[\"6\", \"february 4 , 2008\", \"friendly\", \"pasir gudang , malaysia\", \"johor pg\", \"2 - 3\"],[\"7\", \"february 11 , 2008\", \"friendly\", \"seri gelam , malaysia\", \"majlis bandaraya johor bahru\", \"0 - 3\"],[\"8\", \"february 16 , 2008\", \"friendly\", \"bedok stadium\", \"summerville fc\", \"9 - 0\"]]\nQuestion = Is it true that the game against police sa was played at bedok stadium?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    opponent_teams = get_column_by_name(table_data, \"opponent team\")\n    locations = get_column_by_name(table_data, \"location\")\n    for opponent_team, location in zip(opponent_teams, locations):\n        if opponent_team.lower() == \"police sa\":\n            answer = location.lower() == \"bedok stadium\"\n            break\n    return answer\n\n### END"}
{"id": "46db558f-fc0e-4f2f-9493-30dd0b208955", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1979 new orleans saints season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 2 , 1979\", \"atlanta falcons\", \"l 40 - 34\", \"70940\"],[\"2\", \"september 9 , 1979\", \"green bay packers\", \"l 28 - 19\", \"53184\"],[\"3\", \"september 16 , 1979\", \"philadelphia eagles\", \"l 26 - 14\", \"54212\"],[\"4\", \"september 23 , 1979\", \"san francisco 49ers\", \"w 30 - 21\", \"39727\"],[\"5\", \"september 30 , 1979\", \"new york giants\", \"w 24 - 14\", \"51543\"],[\"6\", \"october 7 , 1979\", \"los angeles rams\", \"l 35 - 17\", \"68986\"],[\"7\", \"october 14 , 1979\", \"tampa bay buccaneers\", \"w 42 - 14\", \"67640\"],[\"8\", \"october 21 , 1979\", \"detroit lions\", \"w 17 - 7\", \"57428\"],[\"9\", \"october 28 , 1979\", \"washington redskins\", \"w 14 - 10\", \"52133\"],[\"10\", \"november 4 , 1979\", \"denver broncos\", \"l 10 - 3\", \"74482\"],[\"11\", \"november 11 , 1979\", \"san francisco 49ers\", \"w 31 - 20\", \"65551\"],[\"12\", \"november 18 , 1979\", \"seattle seahawks\", \"l 38 - 24\", \"60055\"],[\"13\", \"november 25 , 1979\", \"atlanta falcons\", \"w 37 - 6\", \"42815\"],[\"14\", \"december 3 , 1979\", \"oakland raiders\", \"l 42 - 35\", \"65541\"],[\"15\", \"december 9 , 1979\", \"san diego chargers\", \"l 35 - 0\", \"61059\"],[\"16\", \"december 16 , 1979\", \"los angeles rams\", \"w 29 - 14\", \"53879\"]]\nQuestion = Is it true that 26 - 14 is not the result of the game against philadelphia eagles?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    results = get_column_by_name(table_data, \"result\")\n    for opponent, result in zip(opponents, results):\n        if opponent.lower() == \"philadelphia eagles\":\n            answer = equal_to(result, \"l 26 - 14\")\n            break \n    return not answer\n\n### END"}
{"id": "31a57ba3-b20d-43a4-80de-52b1701d550e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states house of representatives elections , 1812\ntable_data = [[\"district\", \"incumbent\", \"party\", \"first elected\", \"result\", \"candidates\"],[\"north carolina 2\", \"willis alston\", \"democratic - republican\", \"1798\", \"re - elected\", \"willis alston (dr) 56.0% daniel mason (f) 44.0%\"],[\"north carolina 5\", \"william r king\", \"democratic - republican\", \"1810\", \"re - elected\", \"william r king (dr) 100%\"],[\"north carolina 6\", \"nathaniel macon\", \"democratic - republican\", \"1791\", \"re - elected\", \"nathaniel macon (dr)\"],[\"north carolina 9\", \"none (district created)\", \"none (district created)\", \"none (district created)\", \"new seat democratic - republican gain\", \"bartlett yancey (dr) 61.1% james martin (f) 38.9%\"],[\"north carolina 10\", \"joseph pearson\", \"federalist\", \"1808\", \"re - elected\", \"joseph pearson (f) 54.1% alexander gary (dr) 45.9%\"]]\nQuestion = Is it true that joseph pearson was part of the federalist party?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    incumbents = get_column_by_name(table_data, \"incumbent\")\n    parties = get_column_by_name(table_data, \"party\")\n    for incumbent, party in zip(incumbents, parties):\n        if incumbent.lower() == \"joseph pearson\":\n            answer = party.lower() == \"federalist\"\n            break\n    return answer\n\n### END"}
{"id": "65de3907-749c-44ae-83f6-ae55070940b1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = toronto and nipissing railway\ntable_data = [[\"number\", \"builder\", \"type\", \"date\", \"works number\"],[\"1\", \"avonside engine company\", \"4 - 4 - 0\", \"september 1870\", \"808\"],[\"2\", \"canadian engine & machinery company\", \"4 - 4 - 0\", \"november 1870\", \"83\"],[\"3\", \"canadian engine & machinery company\", \"4 - 4 - 0\", \"december 1870\", \"84\"],[\"4\", \"canadian engine & machinery company\", \"4 - 4 - 0\", \"early 1871\", \"85\"],[\"5\", \"canadian engine & machinery company\", \"4 - 4 - 0\", \"march 1871\", \"86\"],[\"6\", \"canadian engine & machinery company\", \"4 - 4 - 0\", \"may 1871\", \"87\"],[\"7\", \"canadian engine & machinery company\", \"4 - 4 - 0\", \"may 1871\", \"88\"],[\"8\", \"avonside engine company\", \"4 - 6 - 0\", \"december 1871\", \"867\"],[\"9\", \"avonside engine company\", \"0 - 6 - 6 - 0 fairlie\", \"december 1871\", \"864 & 865\"],[\"10\", \"avonside engine company\", \"4 - 6 - 0\", \"early 1873\", \"uncertain but probably one of 931 - 934\"],[\"11\", \"avonside engine company\", \"4 - 6 - 0\", \"1872\", \"uncertain but probably one of 935 - 939\"],[\"12\", \"avonside engine company\", \"4 - 6 - 0\", \"early 1873\", \"uncertain but probably one of 935 - 939\"]]\nQuestion = Is it true that number 9 was type 0 - 6 - 6 - 0 fairlie , and was by the builder avonside engine company?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    numbers = get_column_by_name(table_data, \"number\")\n    builders = get_column_by_name(table_data, \"builder\")\n    types = get_column_by_name(table_data, \"type\")\n    for number, builder, type in zip(numbers, builders, types):\n        if number == \"9\":\n            answer = equal_to(builder, \"avonside engine company\") and equal_to(type, \"0 - 6 - 6 - 0 fairlie\")\n            break \n    return answer\n\n### END"}
{"id": "ca8dc524-3593-4041-b93e-62c1283621e6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = orlando magic all - time roster\ntable_data = [[\"player\",\"nationality\",\"position\",\"years in orlando\",\"school / club team\"],[\"matt barnes\",\"united states\",\"guard - forward\",\"2009 - 2010\",\"ucla\"],[\"andre barrett\",\"united states\",\"guard\",\"2005\",\"seton hall\"],[\"brandon bass\",\"united states\",\"forward\",\"2009 - 2011\",\"louisiana state\"],[\"tony battie\",\"united states\",\"forward - center\",\"2004 - 2009\",\"texas tech\"],[\"david benoit\",\"united states\",\"forward\",\"1998\",\"alabama\"],[\"keith bogans\",\"united states\",\"guard\",\"2003 - 2004\",\"kentucky\"],[\"keith bogans\",\"united states\",\"guard\",\"2006 - 2009\",\"kentucky\"],[\"anthony bonner\",\"united states\",\"forward\",\"1995 - 1996\",\"st louis\"],[\"anthony bowie\",\"united states\",\"guard\",\"1991 - 1996\",\"oklahoma\"],[\"earl boykins\",\"united states\",\"guard\",\"1999\",\"eastern michigan\"],[\"michael bradley\",\"united states\",\"forward\",\"2004 - 2005\",\"villanova\"],[\"dee brown\",\"united states\",\"guard\",\"2000 - 2002\",\"jacksonville\"],[\"jud buechler\",\"united states\",\"guard - forward\",\"2001 - 2002\",\"arizona\"],[\"pat burke\",\"ireland\",\"center\",\"2002 - 2003\",\"auburn\"]]\nQuestion = Is it true that the school / club team of kentucky was in orlando during the years of 2003 - 2004 / 2006 - 2009?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    school_club_teams = get_column_by_name(table_data, \"school / club team\")\n    years_in_orlando = get_column_by_name(table_data, \"years in orlando\")\n    answer = False\n    for school_club_team, year_in_orlando in zip(school_club_teams, years_in_orlando):\n        if school_club_team.lower() == \"kentucky\" and (year_in_orlando == \"2003 - 2004\" or year_in_orlando == \"2006 - 2009\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "46f46331-7c0f-4cea-abba-fc7bfa26d304", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1928 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"fitzroy\", \"17.11 (113)\", \"south melbourne\", \"11.11 (77)\", \"brunswick street oval\", \"8000\", \"2 june 1928\"],[\"carlton\", \"12.12 (84)\", \"collingwood\", \"13.9 (87)\", \"princes park\", \"30000\", \"2 june 1928\"],[\"north melbourne\", \"5.7 (37)\", \"melbourne\", \"14.16 (100)\", \"arden street oval\", \"9000\", \"2 june 1928\"],[\"richmond\", \"12.21 (93)\", \"geelong\", \"13.12 (90)\", \"punt road oval\", \"10000\", \"2 june 1928\"],[\"st kilda\", \"9.17 (71)\", \"footscray\", \"11.6 (72)\", \"junction oval\", \"12000\", \"2 june 1928\"],[\"hawthorn\", \"7.15 (57)\", \"essendon\", \"13.20 (98)\", \"glenferrie oval\", \"6000\", \"2 june 1928\"]]\nQuestion = Is it true that carlton was the home team that scored 5.7 (37)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    for home_team, home_team_score in zip(home_teams, home_team_scores):\n        if home_team.lower() == \"carlton\":\n            answer = equal_to(home_team_score, \"5.7 (37)\")\n            break \n    return answer\n\n### END"}
{"id": "a0e166b1-2818-4600-ae1e-8df6b9d1e0ba", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mercedes - benz r170\ntable_data = [[\"model\", \"years\", \"engine\", \"power\", \"0 - 100 km / h (62 mph)\", \"top speed\"],[\"slk200\", \"1997 - 2004\", \"2l m111.946 l4\", \"102 kw (136hp)\", \"9.3 seconds\", \"208 km / h (129 mph)\"],[\"slk200k\", \"1997 - 2000\", \"2l m111.943 l4\", \"143 kw (192hp)\", \"6.8 seconds\", \"236 km / h (147 mph)\"],[\"slk200k\", \"2001 - 2004\", \"2l m111.958 l4\", \"122 kw (163hp)\", \"7.4 seconds\", \"223 km / h (138 mph)\"],[\"slk230k\", \"1996 - 2000\", \"2.3l m111.973 l4\", \"144 kw (193hp)\", \"6.9 seconds\", \"231 km / h (143 mph)\"],[\"slk230k\", \"2001 - 2004\", \"2.3l m111.983 l4\", \"147 kw (197hp)\", \"6.8 seconds\", \"240 km / h (148 mph)\"],[\"slk320\", \"2001 - 2004\", \"3.2l m112.947 v6\", \"162 kw (218hp)\", \"6.5 seconds\", \"250 / 276 km / h (155 / 171 mph)\"],[\"slk32 amg\", \"2001 - 2004\", \"3.2l m112.960 v6\", \"264 kw (354hp)\", \"5.2 seconds\", \"250 / 280 / 310 km / h (155 / 174 / 193 mph)\"]]\nQuestion = Is it true that the top speed of the slk200k that produces 122 kw (163hp) power is 223 km / h (138 mph)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    models = get_column_by_name(table_data, \"model\")\n    powers = get_column_by_name(table_data, \"power\")\n    top_speeds = get_column_by_name(table_data, \"top speed\")\n    for model, power, top_speed in zip(models, powers, top_speeds):\n        if model.lower() == \"slk200k\" and power.lower() == \"122 kw (163hp)\":\n            answer = equal_to(top_speed, \"223 km / h (138 mph)\")\n            break \n    return answer\n\n### END"}
{"id": "860a8e24-528b-4742-bb99-14045c04d40e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1961 houston oilers season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 9 , 1961\", \"oakland raiders\", \"w 55 - 0\", \"16231\"],[\"3\", \"september 24 , 1961\", \"san diego chargers\", \"l 34 - 24\", \"29210\"],[\"4\", \"october 1 , 1961\", \"dallas texans\", \"l 26 - 21\", \"28000\"],[\"5\", \"october 8 , 1961\", \"buffalo bills\", \"l 22 - 12\", \"22761\"],[\"6\", \"october 13 , 1961\", \"boston patriots\", \"t 31 - 31\", \"15070\"],[\"7\", \"october 22 , 1961\", \"dallas texans\", \"w 38 - 7\", \"21237\"],[\"8\", \"october 29 , 1961\", \"buffalo bills\", \"w 28 - 16\", \"23228\"],[\"9\", \"november 5 , 1961\", \"denver broncos\", \"w 55 - 14\", \"11564\"],[\"10\", \"november 12 , 1961\", \"boston patriots\", \"w 27 - 15\", \"35649\"],[\"11\", \"november 19 , 1961\", \"new york titans\", \"w 49 - 13\", \"33428\"],[\"12\", \"november 26 , 1961\", \"denver broncos\", \"w 45 - 14\", \"27864\"],[\"13\", \"december 3 , 1961\", \"san diego chargers\", \"w 33 - 13\", \"37845\"],[\"14\", \"december 10 , 1961\", \"new york titans\", \"w 48 - 21\", \"9462\"],[\"15\", \"december 17 , 1961\", \"oakland raiders\", \"w 47 - 16\", \"4821\"]]\nQuestion = Is it true that the san diego chargers are the opponent for the game with 37845 people in attendance and took place on december 3 , 1961?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    for date, opponent, attendance in zip(dates, opponents, attendances):\n        if date == \"december 3 , 1961\" and opponent == \"san diego chargers\" and attendance == \"37845\":\n            return True\n    return False\n\n### END"}
{"id": "b98a5031-2e2d-4fa6-bd38-32c619763842", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of how it 's made episodes\ntable_data = [[\"series ep\", \"episode\", \"segment a\", \"segment b\", \"segment c\", \"segment d\"],[\"20 - 01\", \"248\", \"native healing drums\", \"s raisin\", \"stereoscopic viewers\", \"ribbon microphones\"],[\"20 - 02\", \"249\", \"horse bits\", \"oat cereal\", \"turquoise jewellery\", \"electric scooters\"],[\"20 - 03\", \"250\", \"nail nippers\", \"jade putters\", \"ice cider\", \"water skis\"],[\"20 - 04\", \"251\", \"es stagecoach\", \"road reflectors\", \"fire baked pottery\", \"custom motorcycle tanks\"],[\"20 - 05\", \"252\", \"replica clay pipes\", \"drinking fountains\", \"orange liqueur\", \"compound bows\"],[\"20 - 06\", \"253\", \"tissues\", \"travel trailers\", \"s slipper\", \"motorcycle helmets\"],[\"20 - 07\", \"254\", \"u - locks\", \"tepees\", \"s croissant\", \"rolling luggage\"],[\"20 - 08\", \"255\", \"prams\", \"factory - built homes\", \"wood flutes\", \"bicycle tires\"],[\"20 - 09\", \"256\", \"thinning shears\", \"wagon wheels\", \"toaster pastries\", \"violin bows\"],[\"20 - 10\", \"257\", \"cast iron tubs\", \"hopi kachina dolls\", \"mine truck engine rebuild\", \"memory cards\"],[\"20 - 11\", \"258\", \"cycling shoes\", \"s yurt\", \"marine plywood\", \"oil & encaustic paint\"],[\"20 - 12\", \"259\", \"paper fans\", \"walnut oil\", \"copper (part 1)\", \"copper (part 2)\"]]\nQuestion = Is it true that in episode 255 , segment c cone timerns wood flutes and segment d is about bicycle tyres?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    episodes = get_column_by_name(table_data, \"episode\")\n    segment_c = get_column_by_name(table_data, \"segment c\")\n    segment_d = get_column_by_name(table_data, \"segment d\")\n    for episode, seg_c, seg_d in zip(episodes, segment_c, segment_d):\n        if episode == \"255\":\n            answer = equal_to(seg_c, \"wood flutes\") and equal_to(seg_d, \"bicycle tires\")\n            break \n    return answer\n\n### END"}
{"id": "0e9821e1-33da-4054-a11d-74b00f7f08b5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1969 new york jets season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"game site\", \"attendance\"],[\"1\", \"1969 - 09 - 14\", \"buffalo bills\", \"w 33 - 19\", \"war memorial stadium\", \"46165\"],[\"2\", \"1969 - 09 - 21\", \"denver broncos\", \"l 21 - 19\", \"mile high stadium\", \"50583\"],[\"3\", \"1969 - 09 - 28\", \"san diego chargers\", \"l 34 - 27\", \"san diego stadium\", \"54042\"],[\"4\", \"1969 - 10 - 05\", \"boston patriots\", \"w 23 - 14\", \"alumni stadium\", \"25584\"],[\"5\", \"1969 - 10 - 12\", \"cincinnati bengals\", \"w 21 - 7\", \"nippert stadium\", \"27927\"],[\"6\", \"1969 - 10 - 20\", \"houston oilers\", \"w 26 - 17\", \"shea stadium\", \"63841\"],[\"7\", \"1969 - 10 - 26\", \"boston patriots\", \"w 23 - 17\", \"shea stadium\", \"62298\"],[\"8\", \"1969 - 11 - 02\", \"miami dolphins\", \"w 34 - 31\", \"shea stadium\", \"61761\"],[\"9\", \"1969 - 11 - 09\", \"buffalo bills\", \"w 16 - 6\", \"shea stadium\", \"62680\"],[\"10\", \"1969 - 11 - 16\", \"kansas city chiefs\", \"l 34 - 16\", \"shea stadium\", \"63849\"],[\"11\", \"1969 - 11 - 23\", \"cincinnati bengals\", \"w 40 - 7\", \"shea stadium\", \"62128\"],[\"12\", \"1969 - 11 - 30\", \"oakland raiders\", \"l 27 - 14\", \"shea stadium\", \"63865\"],[\"13\", \"1969 - 12 - 06\", \"houston oilers\", \"w 34 - 26\", \"astrodome\", \"51923\"],[\"14\", \"1969 - 12 - 14\", \"miami dolphins\", \"w 27 - 9\", \"miami orange bowl\", \"48108\"]]\nQuestion = Is it true that the date of game played at san diego stadium on week 9 is 1969 - 11 - 09 with attendance of 51923?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    game_sites = get_column_by_name(table_data, \"game site\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    for date, game_site, attendance in zip(dates, game_sites, attendances):\n        if game_site.lower() == \"san diego stadium\" and date == \"1969 - 11 - 09\" and attendance == \"51923\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "3ab217dd-c159-4212-8fb8-2c7c05828b32", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"model type\",\"model designation\",\"engine\",\"wheelbase (mm / inch)\",\"gvw (kg / ton)\",\"axle ratio\"],[\"cf220\",\"97100\",\"1759 cc (107.5 cu in) gasoline\",\"2692 / 106\",\"2235 / 2.2\",\"8 / 37\"],[\"cf220\",\"97f00\",\"1998 cc (121.9 cu in) diesel\",\"2692 / 106\",\"2235 / 2.2\",\"8 / 37\"],[\"cf250\",\"97300\",\"2279 cc (139 cu in) gasoline\",\"2692 / 106\",\"2500 / 2.46\",\"8 / 37\"],[\"cf250\",\"97 g00\",\"1998 cc (121.9 cu in) diesel\",\"2692 / 106\",\"2500 / 2.46\",\"8 / 37\"],[\"cf280\",\"97500\",\"2279 cc (139 cu in) gasoline\",\"3200 / 126\",\"2828 / 2.78\",\"11 / 49\"],[\"cf280\",\"97h00\",\"1998 cc (121.9 cu in) diesel\",\"3200 / 126\",\"2828 / 2.78\",\"9 / 47\"],[\"cf340\",\"97700\",\"2279 cc (139 cu in) gasoline\",\"3200 / 126\",\"3375 / 3.32\",\"9 / 47\"],[\"cf340\",\"97k00\",\"1998 cc (121.9 cu in) diesel\",\"3200 / 126\",\"3375 / 3.32\",\"9 / 47\"],[\"cf350\",\"97700\",\"2279 cc (139 cu in) gasoline\",\"3200 / 126\",\"3375 / 3.32\",\"9 / 47\"]]\nQuestion = Is it true that models 97 g00 , 97h00 and 97k00 all have 1998 cc diesel engines?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    model_designations = get_column_by_name(table_data, \"model designation\")\n    engines = get_column_by_name(table_data, \"engine\")\n    models = [\"97 g00\", \"97h00\", \"97k00\"]\n    engine = \"1998 cc (121.9 cu in) diesel\"\n    answer = all(model in model_designations and engine in engines for model in models)\n    return answer\n\n### END"}
{"id": "361bcc55-a8bd-4f9e-ae95-e05fb6e192cc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of world cups and world championships for juniors and youth\ntable_data = [[\"sport\", \"competition name\", \"competing entities\", \"age groups\", \"held every\"],[\"aquatics\", \"fina world junior swimming championships\", \"individuals\", \"17 or younger\", \"two years\"],[\"athletics\", \"iaaf world junior championships in athletics\", \"individuals\", \"18 - 19\", \"two years\"],[\"athletics\", \"iaaf world youth championships in athletics\", \"individuals\", \"17 or younger\", \"two years\"],[\"badminton\", \"bwf world junior championships\", \"individuals\", \"19 or younger\", \"one year\"],[\"bandy\", \"bandy world championship u - 23\", \"nations\", \"under - 23\", \"two years\"],[\"bandy\", \"bandy world championship u - 19\", \"nations\", \"under - 19\", \"two years\"],[\"bandy\", \"bandy world championship u - 17\", \"nations\", \"under - 17\", \"two years\"],[\"bandy\", \"bandy world championship u - 15\", \"nations\", \"under - 15\", \"two years\"],[\"baseball\", \"world junior baseball championship\", \"nations\", \"under - 18\", \"one year through 2000 , now two years\"],[\"baseball\", \"world youth baseball championship\", \"nations\", \"under - 16\", \"one year through 1998 , two years starting in 2001\"],[\"baseball\", \"big league world series\", \"communities\", \"16 - 18\", \"one year\"],[\"baseball\", \"senior league world series\", \"communities\", \"14 - 16\", \"one year\"],[\"baseball\", \"junior league world series\", \"communities\", \"13 - 15\", \"one year\"],[\"baseball\", \"little league world series\", \"communities\", \"13 or younger\", \"one year\"],[\"basketball\", \"fiba under - 21 world championship\", \"nations\", \"21 or younger\", \"four years until 2005\"],[\"basketball\", \"fiba under - 19 world championship\", \"nations\", \"19 or younger\", \"four years until 2007 , now two years\"],[\"basketball\", \"fiba under - 17 world championship\", \"nations\", \"17 or younger\", \"two years\"],[\"basketball\", \"fiba 3x3 u - 18 world championships\", \"nations\", \"18 or younger\", \"year\"],[\"cricket\", \"u - 19 cricket world cup\", \"nations\", \"19 or younger\", \"two years\"],[\"figure skating\", \"world junior figure skating championships\", \"individuals\", \"13 - 19\", \"one year\"],[\"football (soccer)\", \"fifa u - 20 world cup\", \"nations\", \"20 or younger\", \"two years\"],[\"football (soccer)\", \"fifa u - 17 world cup\", \"nations\", \"17 or younger\", \"two years\"],[\"ice hockey\", \"iihf world u20 championship\", \"nations\", \"20 or younger\", \"year\"],[\"ice hockey\", \"iihf world u18 championships\", \"nations\", \"18 or younger\", \"year\"],[\"lacrosse\", \"under - 19 world lacrosse championships\", \"nations\", \"19 or younger\", \"four years\"],[\"rowing\", \"junior world rowing championships\", \"nations\", \"18 or younger\", \"year\"],[\"rugby union\", \"irb junior world championship\", \"nations\", \"20 or younger\", \"year\"],[\"rugby union\", \"under 19 rugby world championship\", \"nations\", \"19 or younger\", \"year\"],[\"rugby union\", \"under 21 rugby world championship\", \"nations\", \"21 or younger\", \"year\"],[\"speed skating\", \"world junior speed skating championships\", \"individuals and nations\", \"19 or younger\", \"one year\"],[\"speed skating\", \"isu junior world cup speed skating\", \"individuals and nations\", \"19 or younger\", \"one year\"],[\"sailing\", \"isaf youth sailing world championships\", \"nations\", \"under 19 's\", \"annually\"],[\"sailing\", \"isaf classes world championship\", \"held in the optimist , splash , zoom , rs tera etc\", \"19 or younger\", \"various\"],[\"table tennis\", \"world junior table tennis championships\", \"individuals and nations\", \"18 or younger\", \"one year\"],[\"volleyball\", \"men 's junior volleyball world championship\", \"nations\", \"21 or younger\", \"two years\"],[\"volleyball\", \"boys youth volleyball world championship\", \"nations\", \"19 or younger\", \"two years\"]]\nQuestion = Is it true that the world junior table tennis championships is held one time per year for those 18 and younger?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    competition_names = get_column_by_name(table_data, \"competition name\")\n    age_groups = get_column_by_name(table_data, \"age groups\")\n    held_every = get_column_by_name(table_data, \"held every\")\n    for competition_name, age_group, held in zip(competition_names, age_groups, held_every):\n        if competition_name.lower() == \"world junior table tennis championships\":\n            answer = equal_to(age_group, \"18 or younger\") and equal_to(held, \"one year\")\n            break \n    return answer\n\n### END"}
{"id": "6486a48d-0de2-4c43-bb82-2c650eda6735", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = nfl career scoring leaders\ntable_data = [[\"rank\", \"player\", \"position\", \"career\", \"points\"],[\"31\", \"jerry rice\", \"wide receiver\", \"1985 - 2004\", \"1256\"],[\"47\", \"emmitt smith\", \"running back\", \"1990 - 2004\", \"1052\"],[\"52\", \"ladainian tomlinson\", \"running back\", \"2001 - 2011\", \"972\"],[\"59\", \"randy moss\", \"wide receiver\", \"1998 - 2012\", \"950\"],[\"61t\", \"terrell owens\", \"wide receiver\", \"1996 - 2010\", \"942\"]]\nQuestion = Is it true that the player ranked at 61t had over 942 points total between 1996 - 2010?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    points = get_column_by_name(table_data, \"points\")\n    for rank, point in zip(ranks, points):\n        if rank.lower() == \"61t\":\n            answer = greater(int(point), 942)\n            break \n    return answer\n\n### END"}
{"id": "5c2b79d2-19f4-4ae0-abd9-aadbc80a6b46", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rowing at the 2008 summer olympics - women 's lightweight double sculls\ntable_data = [[\"rank\", \"rowers\", \"country\", \"time\", \"notes\"],[\"1\", \"melanie kok , tracy cameron\", \"canada\", \"7:10.70\", \"fa\"],[\"2\", \"xu dongxiang , chen haixia\", \"china\", \"7:11.59\", \"fa\"],[\"3\", \"chrysi biskitzi , alexandra tsiavou\", \"greece\", \"7:11.99\", \"fa\"],[\"4\", \"renee hykel , jennifer goldsack\", \"united states\", \"7:12.15\", \"fb\"],[\"5\", \"amber halliday , marguerite houston\", \"australia\", \"7:13.80\", \"fb\"],[\"6\", \"misaki kumakura , akiko iwamoto\", \"japan\", \"7:16.13\", \"fb\"]]\nQuestion = Is it true that the rank 2 team had a time of 7:11.99?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    times = get_column_by_name(table_data, \"time\")\n    for rank, time in zip(ranks, times):\n        if rank == \"2\":\n            answer = equal_to(time, \"7:11.99\")\n            break \n    return answer\n\n### END"}
{"id": "9335adc4-4ad0-49a2-aaf0-90ddbd94bb0c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1925 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"8.11 (59)\", \"st kilda\", \"8.8 (56)\", \"glenferrie oval\", \"10000\", \"8 august 1925\"],[\"geelong\", \"11.20 (86)\", \"richmond\", \"4.8 (32)\", \"corio oval\", \"13500\", \"8 august 1925\"],[\"fitzroy\", \"17.18 (120)\", \"north melbourne\", \"11.8 (74)\", \"brunswick street oval\", \"7000\", \"8 august 1925\"],[\"south melbourne\", \"13.14 (92)\", \"footscray\", \"12.15 (87)\", \"lake oval\", \"15000\", \"8 august 1925\"],[\"melbourne\", \"7.10 (52)\", \"collingwood\", \"9.11 (65)\", \"mcg\", \"33642\", \"8 august 1925\"],[\"essendon\", \"15.11 (101)\", \"carlton\", \"8.14 (62)\", \"windy hill\", \"10000\", \"8 august 1925\"]]\nQuestion = Is it true that thee largest crowd size that had a home team score of 17.18 (120) is 8000?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    for home_team_score, crowd in zip(home_team_scores, crowds):\n        if home_team_score == \"17.18 (120)\":\n            answer = equal_to(int(crowd), 8000)\n            break \n    return answer\n\n### END"}
{"id": "3e61327c-0a5c-48d2-b628-df95f24fdfa0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"class\", \"part 1\", \"part 2\", \"part 3\", \"part 4\", \"verb meaning\"],[\"1\", \"rīdan\", \"rād\", \"ridon\", \"riden\", \"to ride\"],[\"2a\", \"frēosan\", \"frēas\", \"fruron\", \"froren\", \"to freeze\"],[\"2b\", \"lūcan\", \"lēac\", \"lucon\", \"locen\", \"to lock\"],[\"3a\", \"bindan\", \"band\", \"bundon\", \"bunden\", \"to bind\"],[\"3b\", \"weorþan\", \"wearþ\", \"wurdon\", \"worden\", \"to become\"],[\"4\", \"beran\", \"bær\", \"bǣron\", \"boren\", \"to bear\"],[\"5\", \"lesan\", \"læs\", \"lǣron\", \"leren\", \"to gather\"],[\"6\", \"alan\", \"ōl\", \"ōlon\", \"alen\", \"to nourish , to grow\"],[\"7a\", \"hātan\", \"hēt\", \"hēton\", \"hāten\", \"to call , to be called\"],[\"7b\", \"hlēapan\", \"hlēop\", \"hlēppon\", \"hlēapen\", \"to leap\"],[\"7c\", \"healdan\", \"hēold\", \"hēoldon\", \"healden\", \"to hold\"],[\"7d\", \"rǣdan\", \"rēd\", \"rēdon\", \"rǣden\", \"to advise , to interpret\"]]\nQuestion = Is it true that lesan is the first part of a class five verb that means to gather?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    classes = get_column_by_name(table_data, \"class\")\n    part_1s = get_column_by_name(table_data, \"part 1\")\n    verb_meanings = get_column_by_name(table_data, \"verb meaning\")\n    for class_, part_1, verb_meaning in zip(classes, part_1s, verb_meanings):\n        if class_ == \"5\" and verb_meaning == \"to gather\":\n            answer = equal_to(part_1, \"lesan\")\n            break \n    return answer\n\n### END"}
{"id": "9a73b0f1-d16a-45e1-8fc3-99ff476ecea8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = athletics at the 2008 summer olympics - women 's 100 metres hurdles\ntable_data = [[\"heat\", \"name\", \"nationality\", \"reaction\", \"result\"],[\"1\", \"lolo jones\", \"united states\", \"0.172\", \"12.43\"],[\"2\", \"damu cherry\", \"united states\", \"0.189\", \"12.62\"],[\"2\", \"dawn harper\", \"united states\", \"0.191\", \"12.66\"],[\"1\", \"delloreen ennis - london\", \"jamaica\", \"0.145\", \"12.67\"],[\"1\", \"priscilla lopes - schliep\", \"canada\", \"0.159\", \"12.68\"],[\"1\", \"sally mclellan\", \"australia\", \"0.140\", \"12.70\"],[\"2\", \"brigitte foster - hylton\", \"jamaica\", \"0.162\", \"12.76\"],[\"2\", \"sarah claxton\", \"great britain\", \"0.145\", \"12.84\"],[\"2\", \"vonette dixon\", \"jamaica\", \"0.237\", \"12.86\"],[\"1\", \"josephine onyia\", \"spain\", \"0.203\", \"12.86\"],[\"1\", \"aurelia trywiańska - kollasch\", \"poland\", \"0.118\", \"12.96\"],[\"1\", \"carolin nytra\", \"germany\", \"0.144\", \"12.99\"],[\"2\", \"reïna - flor okori\", \"france\", \"0.153\", \"13.05\"],[\"1\", \"nevin yanit\", \"turkey\", \"0.201\", \"13.28\"],[\"2\", \"susanna kallur\", \"sweden\", \"0.198\", \"dnf\"],[\"2\", \"anay tejeda\", \"cuba\", \"0.156\", \"dnf\"]]\nQuestion = Is it true that brigitte foster - hylton had a reaction of 0.162 in heat 2?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    reactions = get_column_by_name(table_data, \"reaction\")\n    heats = get_column_by_name(table_data, \"heat\")\n    for name, reaction, heat in zip(names, reactions, heats):\n        if name.lower() == \"brigitte foster - hylton\" and heat == \"2\":\n            answer = equal_to(reaction, \"0.162\")\n            break \n    return answer\n\n### END"}
{"id": "0d31b09d-891d-41e9-9622-fb9f1a0a282b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of superfund sites in alabama\ntable_data = [[\"cerclis id\", \"name\", \"county\", \"proposed\", \"listed\", \"construction completed\", \"partially deleted\", \"deleted\"],[\"al6210020008\", \"alabama army ammunition plant\", \"talladega\", \"10 / 15 / 1984\", \"07 / 22 / 1987\", \"-\", \"-\", \"-\"],[\"ald004022448\", \"alabama plating company\", \"shelby\", \"08 / 24 / 2000\", \"09 / 18 / 2012\", \"-\", \"-\", \"-\"],[\"ald981868466\", \"american brass\", \"henry\", \"01 / 19 / 1999\", \"05 / 10 / 1999\", \"09 / 01 / 2009\", \"-\", \"-\"],[\"al3210020027\", \"anniston army depot (se industrial area)\", \"calhoun\", \"10 / 15 / 1984\", \"03 / 13 / 1989\", \"-\", \"-\", \"-\"],[\"al0001058056\", \"capitol city plume\", \"montgomery\", \"05 / 11 / 2000\", \"-\", \"-\", \"-\", \"-\"],[\"ald001221902\", \"ciba - geigy corp ( mcintosh plant)\", \"washington\", \"09 / 08 / 1983\", \"09 / 21 / 1984\", \"07 / 19 / 2000\", \"-\", \"-\"],[\"ald041906173\", \"interstate lead company (ilco)\", \"jefferson\", \"09 / 18 / 1985\", \"06 / 10 / 1986\", \"-\", \"-\", \"-\"],[\"ald031618069\", \"mowbray engineering\", \"butler\", \"12 / 30 / 1982\", \"09 / 08 / 1983\", \"09 / 16 / 1991\", \"-\", \"12 / 30 / 1993\"],[\"ald008188708\", \"olin corp ( mcintosh plant)\", \"washington\", \"09 / 08 / 1983\", \"09 / 21 / 1984\", \"-\", \"-\", \"-\"],[\"ald980728703\", \"perdido ground water contamination\", \"baldwin\", \"12 / 30 / 1982\", \"09 / 08 / 1983\", \"07 / 30 / 1993\", \"-\", \"-\"],[\"al7210020742\", \"redstone arsenal ( us army / nasa )\", \"madison\", \"06 / 23 / 1993\", \"05 / 31 / 1994\", \"-\", \"-\", \"-\"],[\"ald980844385\", \"redwing carriers incorporated (saraland)\", \"mobile\", \"06 / 24 / 1988\", \"02 / 21 / 1990\", \"09 / 03 / 2009\", \"-\", \"-\"],[\"ald095688875\", \"stauffer chemical company (cold creek plant)\", \"mobile\", \"09 / 08 / 1983\", \"09 / 21 / 1984\", \"-\", \"-\", \"-\"],[\"ald008161176\", \"stauffer chemical company (lemoyne plant)\", \"mobile\", \"09 / 08 / 1983\", \"09 / 21 / 1984\", \"-\", \"-\", \"-\"],[\"ald007454085\", \"th agriculture & nutrition (montgomery)\", \"montgomery\", \"06 / 24 / 1988\", \"08 / 30 / 1990\", \"09 / 27 / 2002\", \"-\", \"-\"],[\"ald983166299\", \"triana / tennessee river\", \"morgan , limestone , and madison\", \"12 / 30 / 1982\", \"09 / 08 / 1983\", \"12 / 18 / 1991\", \"-\", \"-\"]]\nQuestion = Is it true that the record for anniston army depot (se industrial area) has not been deleted?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    deleted = get_column_by_name(table_data, \"deleted\")\n    for name, delete in zip(names, deleted):\n        if name.lower() == \"anniston army depot (se industrial area)\":\n            answer = equal_to(delete, \"-\")\n            break \n    return answer\n\n### END"}
{"id": "c7d7204f-d593-4722-8805-ede70b336dd8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1935 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"16.18 (114)\", \"north melbourne\", \"6.10 (46)\", \"glenferrie oval\", \"4000\", \"13 july 1935\"],[\"fitzroy\", \"9.10 (64)\", \"st kilda\", \"12.12 (84)\", \"brunswick street oval\", \"15000\", \"13 july 1935\"],[\"essendon\", \"10.14 (74)\", \"melbourne\", \"12.21 (93)\", \"windy hill\", \"8000\", \"13 july 1935\"],[\"richmond\", \"16.10 (106)\", \"footscray\", \"3.11 (29)\", \"punt road oval\", \"16000\", \"13 july 1935\"],[\"south melbourne\", \"18.16 (124)\", \"collingwood\", \"10.11 (71)\", \"lake oval\", \"31000\", \"13 july 1935\"],[\"geelong\", \"6.7 (43)\", \"carlton\", \"11.10 (76)\", \"corio oval\", \"14500\", \"13 july 1935\"]]\nQuestion = Is it true that the away team of collingwood had a score of 10.11 (71)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    away_teams = get_column_by_name(table_data, \"away team\")\n    away_team_scores = get_column_by_name(table_data, \"away team score\")\n    for away_team, away_team_score in zip(away_teams, away_team_scores):\n        if away_team.lower() == \"collingwood\":\n            answer = equal_to(away_team_score, \"10.11 (71)\")\n            break \n    return answer\n\n### END"}
{"id": "8557a4b1-2cf4-4fb1-96dd-e0546d5525ae", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 issf world cup final (rifle and pistol)\ntable_data = [[\"shooter\", \"event\", \"rank points\", \"score points\", \"total\"],[\"zhu qinan ( chn )\", \"wcf 2007\", \"defending champion\", \"defending champion\", \"defending champion\"],[\"abhinav bindra ( ind )\", \"og beijing\", \"olympic gold medalist\", \"olympic gold medalist\", \"olympic gold medalist\"],[\"henri häkkinen ( fin )\", \"og beijing\", \"olympic bronze medalist\", \"olympic bronze medalist\", \"olympic bronze medalist\"],[\"alin george moldoveanu ( rou )\", \"wc munich\", \"15\", \"14\", \"29\"],[\"péter sidi ( hun )\", \"wc rio de janeiro\", \"15\", \"13\", \"28\"],[\"matthew emmons ( usa )\", \"wc beijing\", \"10\", \"14\", \"24\"],[\"cao yifei ( chn )\", \"wc milan\", \"10\", \"11\", \"21\"],[\"gagan narang ( ind )\", \"wc beijing\", \"8\", \"12\", \"20\"],[\"thomas farnik ( aut )\", \"wc munich\", \"8\", \"12\", \"20\"],[\"nemanja mirosavljev ( srb )\", \"wc rio de janeiro\", \"8\", \"11\", \"19\"],[\"artur ayvazyan ( ukr )\", \"wc milan\", \"5\", \"12\", \"17\"]]\nQuestion = Is it true that olympic bronze medalist is the score points that has olympic gold medalist as the rank points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    rank_points = get_column_by_name(table_data, \"rank points\")\n    score_points = get_column_by_name(table_data, \"score points\")\n    answer = False\n    for rank_point, score_point in zip(rank_points, score_points):\n        if rank_point.lower() == \"olympic gold medalist\" and score_point.lower() == \"olympic bronze medalist\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "5fb440b9-9b68-4958-a4ca-3636cbbfdceb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = kansas jayhawk community college conference\ntable_data = [[\"institution\", \"main campus location\", \"founded\", \"mascot\", \"school colors\"],[\"allen community college\", \"iola\", \"1923\", \"red devils\", \"scarlet & black\"],[\"coffeyville community college\", \"coffeyville\", \"1923\", \"red ravens\", \"red & white\"],[\"cowley college\", \"arkansas city\", \"1922\", \"tigers\", \"orange & black\"],[\"fort scott community college\", \"fort scott\", \"1919\", \"greyhounds\", \"maroon & grey\"],[\"highland community college\", \"highland\", \"1858\", \"scotties\", \"navy & gold\"],[\"independence community college\", \"independence\", \"1925\", \"pirates\", \"navy blue & vegas gold\"],[\"johnson county community college\", \"overland park\", \"1967\", \"cavaliers\", \"maroon & gold\"],[\"kansas city kansas community college\", \"kansas city\", \"1923\", \"blue devils\", \"blue , red & white\"],[\"labette community college\", \"parsons\", \"1923\", \"cardinals\", \"red & white\"],[\"neosho county community college\", \"chanute\", \"1936\", \"panthers\", \"orange & black\"]]\nQuestion = Is it true that johnson county community college , on overland park , has the school colors of maroon and gold?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    institutions = get_column_by_name(table_data, \"institution\")\n    locations = get_column_by_name(table_data, \"main campus location\")\n    colors = get_column_by_name(table_data, \"school colors\")\n    for institution, location, color in zip(institutions, locations, colors):\n        if institution.lower() == \"johnson county community college\" and location.lower() == \"overland park\":\n            answer = equal_to(color, \"maroon & gold\")\n            break \n    return answer\n\n### END"}
{"id": "818432fb-e502-4bfd-8e8c-311dd85f8e3e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of flashpoint episodes\ntable_data = [[\"no\", \"-\", \"title\", \"directed by\", \"written by\", \"canadian air date\", \"us air date\", \"production code\", \"canadian viewers (million)\"],[\"45\", \"1\", \"personal effects (part 2)\", \"kelly makin\", \"mark ellis & stephanie morgenstern\", \"july 8 , 2011\", \"july 8 , 2011\", \"401\", \"1.369\"],[\"46\", \"2\", \"good cop\", \"john fawcett\", \"michael maclennan\", \"july 15 , 2011\", \"july 15 , 2011\", \"402\", \"1.508\"],[\"47\", \"3\", \"run , jaime , run\", \"kelly makin\", \"ian weir\", \"july 22 , 2011\", \"july 22 , 2011\", \"403\", \"1.537\"],[\"48\", \"4\", \"through a glass darkly\", \"john fawcett\", \"andrew wreggitt\", \"july 29 , 2011\", \"july 29 , 2011\", \"404\", \"1.430\"],[\"49\", \"5\", \"the better man\", \"david frazee\", \"michael maclennan\", \"august 5 , 2011\", \"august 5 , 2011\", \"405\", \"1.254\"],[\"50\", \"6\", \"a day in the life\", \"jim donovan\", \"mark ellis & stephanie morgenstern\", \"august 12 , 2011\", \"august 12 , 2011\", \"406\", \"1.406\"],[\"51\", \"7\", \"shockwave\", \"david frazee\", \"larry bambrick\", \"august 19 , 2011\", \"august 19 , 2011\", \"407\", \"1.313\"],[\"52\", \"8\", \"grounded\", \"david frazee\", \"karen walton\", \"september 19 , 2011\", \"october 18 , 2011\", \"412\", \"1.536\"],[\"53\", \"9\", \"the war within\", \"david frazee\", \"daniel godwin & michael maclennan\", \"september 27 , 2011\", \"december 13 , 2011\", \"408\", \"1.349\"],[\"54\", \"10\", \"the cost of doing business\", \"david frazee\", \"larry bambrick\", \"october 4 , 2011\", \"october 25 , 2011\", \"409\", \"1.309\"],[\"55\", \"11\", \"wild card\", \"brett sullivan\", \"karen walton\", \"october 11 , 2011\", \"november 1 , 2011\", \"410\", \"1.263\"],[\"56\", \"12\", \"a new life\", \"kelly makin\", \"adam barken\", \"november 1 , 2011\", \"november 8 , 2011\", \"411\", \"1.293\"],[\"57\", \"13\", \"a call to arms\", \"ã‰rik canuel\", \"alex levine\", \"november 8 , 2011\", \"november 22 , 2011\", \"413\", \"1.215\"],[\"58\", \"14\", \"day game\", \"kelly makin\", \"aubrey nealon\", \"november 15 , 2011\", \"november 29 , 2011\", \"415\", \"1.191\"],[\"59\", \"15\", \"blue on blue\", \"stefan pleszczynski\", \"adam barken\", \"november 22 , 2011\", \"december 6 , 2011\", \"416\", \"1.229\"],[\"60\", \"16\", \"team player\", \"kelly makin\", \"michael maclennan\", \"november 28 , 2011\", \"january 10 , 2012\", \"414\", \"1.452\"],[\"61\", \"17\", \"priority of life\", \"david frazee\", \"mark ellis , stephanie morgenstern & alex levine\", \"december 6 , 2011\", \"january 17 , 2012\", \"417\", \"1.317\"]]\nQuestion = Is it true that priority of life aired on december 6 , 2011 with 1.229 million canadian viewers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    air_dates = get_column_by_name(table_data, \"canadian air date\")\n    viewers = get_column_by_name(table_data, \"canadian viewers (million)\")\n    for title, air_date, viewer in zip(titles, air_dates, viewers):\n        if title.lower() == \"priority of life\":\n            answer = equal_to(air_date, \"december 6 , 2011\") and equal_to(viewer, \"1.229\")\n            break \n    return answer\n\n### END"}
{"id": "19753bec-38ac-48e8-bba9-6d42a121e30b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = savannah braves\ntable_data = [[\"year\", \"record\", \"finish\", \"manager\", \"playoffs\"],[\"1971\", \"57 - 84\", \"5th\", \"eddie haas\", \"not eligible\"],[\"1972\", \"80 - 59\", \"2nd\", \"clint courtney\", \"not eligible\"],[\"1973\", \"71 - 68\", \"3rd\", \"clint courtney (34 - 23) / tommie aaron (37 - 45)\", \"not eligible\"],[\"1974\", \"73 - 65\", \"4th\", \"tommie aaron\", \"not eligible\"],[\"1975\", \"70 - 64\", \"3rd (t)\", \"tommie aaron\", \"not eligible\"],[\"1976\", \"69 - 71\", \"5th\", \"tommie aaron\", \"not eligible\"],[\"1977\", \"77 - 63\", \"3rd\", \"gene hassell\", \"lost in 1st round\"],[\"1978\", \"72 - 72\", \"4th\", \"bobby dews\", \"lost league finals\"],[\"1979\", \"60 - 83\", \"10th\", \"eddie haas\", \"not eligible\"],[\"1980\", \"77 - 67\", \"3rd\", \"eddie haas\", \"lost in 1st round\"],[\"1981\", \"70 - 70\", \"5th\", \"andy gilbert\", \"lost in 1st round\"],[\"1982\", \"69 - 75\", \"8th\", \"andy gilbert\", \"not eligible\"],[\"1983\", \"81 - 64\", \"3rd\", \"bobby dews\", \"lost in 1st round\"]]\nQuestion = Is it true that 1983 has a manager of bobby dews and lost in the 1st round of the playoffs?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    managers = get_column_by_name(table_data, \"manager\")\n    playoffs = get_column_by_name(table_data, \"playoffs\")\n    for year, manager, playoff in zip(years, managers, playoffs):\n        if year == \"1983\":\n            answer = equal_to(manager, \"bobby dews\") and equal_to(playoff, \"lost in 1st round\")\n            break \n    return answer\n\n### END"}
{"id": "7fd42707-328a-49fc-a836-20fe44415aa7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1971 nhl amateur draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"15\", \"ken baird\", \"defence\", \"canada\", \"california golden seals\", \"flin flon bombers (wchl)\"],[\"16\", \"henry boucha\", \"centre\", \"united states\", \"detroit red wings\", \"us national development team\"],[\"17\", \"bobby lalonde\", \"centre\", \"canada\", \"vancouver canucks\", \"montreal junior canadiens (oha)\"],[\"18\", \"brian mckenzie\", \"left wing\", \"canada\", \"pittsburgh penguins\", \"st catharines black hawks (oha)\"],[\"19\", \"craig ramsay\", \"left wing\", \"canada\", \"buffalo sabres\", \"peterborough petes (oha)\"],[\"20\", \"larry robinson\", \"defence\", \"canada\", \"montreal canadiens\", \"kitchener rangers (oha)\"],[\"21\", \"rod norrish\", \"left wing\", \"canada\", \"minnesota north stars\", \"regina pats (wchl)\"],[\"22\", \"rick kehoe\", \"right wing\", \"canada\", \"toronto maple leafs\", \"hamilton red wings (oha)\"],[\"23\", \"dave fortier\", \"defence\", \"canada\", \"toronto maple leafs\", \"st catharines black hawks (oha)\"],[\"24\", \"michel deguise\", \"goaltender\", \"canada\", \"montreal canadiens\", \"sorel eperviers (qmjhl)\"],[\"25\", \"terry french\", \"centre\", \"canada\", \"montreal canadiens\", \"ottawa 67 's (oha)\"],[\"26\", \"dave kryskow\", \"left wing\", \"canada\", \"chicago black hawks\", \"edmonton oil kings (wchl)\"],[\"27\", \"tom williams\", \"left wing\", \"canada\", \"new york rangers\", \"hamilton red wings (oha)\"],[\"28\", \"curt ridley\", \"goaltender\", \"canada\", \"boston bruins\", \"portage terriers (mjhl)\"]]\nQuestion = Is it true that tom williams pick number is 2?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    picks = get_column_by_name(table_data, \"pick\")\n    for player, pick in zip(players, picks):\n        if player.lower() == \"tom williams\":\n            answer = equal_to(int(pick), 2)\n            break \n    return answer\n\n### END"}
{"id": "227f99a2-73d3-4f9b-9523-978e377712bd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = air macau destinations\ntable_data = [[\"city\", \"country\", \"iata\", \"icao\", \"airport\"],[\"bangkok\", \"thailand\", \"bkk\", \"vtbs\", \"suvarnabhumi airport\"],[\"beijing\", \"china\", \"pek\", \"zbaa\", \"beijing capital international airport\"],[\"changsha\", \"china\", \"csx\", \"zgha\", \"changsha huanghua international airport\"],[\"chengdu\", \"china\", \"ctu\", \"zuuu\", \"chengdu shuangliu international airport\"],[\"chongqing\", \"china\", \"ckg\", \"zuck\", \"chongqing jiangbei international airport\"],[\"hangzhou\", \"china\", \"hgh\", \"zshc\", \"hangzhou xiaoshan international airport\"],[\"hefei\", \"china\", \"hfe\", \"zsof\", \"hefei luogang international airport\"],[\"kaohsiung\", \"taiwan\", \"khh\", \"rckh\", \"kaohsiung international airport\"],[\"macau\", \"macau\", \"mfm\", \"vmmc\", \"macau international airport\"],[\"nanjing\", \"china\", \"nkg\", \"zsnj\", \"nanjing lukou international airport\"],[\"nanning\", \"china\", \"nng\", \"zgnn\", \"nanning wuxu international airport\"],[\"ningbo\", \"china\", \"ngb\", \"zsnb\", \"ningbo lishe international airport\"],[\"osaka\", \"japan\", \"kix\", \"rjbb\", \"kansai international airport\"],[\"seoul\", \"south korea\", \"icn\", \"rksi\", \"incheon international airport\"],[\"shanghai\", \"china\", \"sha\", \"zsss\", \"shanghai hongqiao international airport\"],[\"shanghai\", \"china\", \"pvg\", \"zspd\", \"shanghai pudong international airport\"],[\"shenyang\", \"china\", \"she\", \"zytx\", \"shenyang taoxian international airport\"],[\"shenzhen\", \"china\", \"szx\", \"zgsz\", \"shenzhen bao'an international airport\"],[\"singapore\", \"singapore\", \"sin\", \"wsss\", \"singapore changi airport\"],[\"taipei\", \"taiwan\", \"tpe\", \"rctp\", \"taiwan taoyuan international airport\"],[\"taiyuan\", \"china\", \"tyn\", \"zbyn\", \"taiyuan wusu airport\"],[\"tokyo\", \"japan\", \"nrt\", \"rjaa\", \"narita international airport\"],[\"xiamen\", \"china\", \"xmn\", \"zsam\", \"xiamen gaoqi international airport\"],[\"wenzhou\", \"china\", \"wnz\", \"zswz\", \"wenzhou yongqiang international airport\"]]\nQuestion = Is it true that taiyuan wusu airport has an iata code of tpe?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    airports = get_column_by_name(table_data, \"airport\")\n    iatas = get_column_by_name(table_data, \"iata\")\n    answer = False\n    for airport, iata in zip(airports, iatas):\n        if \"taiyuan wusu airport\" in airport.lower():\n            if iata.lower() == \"tpe\":\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "1427b5a5-9a3a-438b-b483-b7cafa1634a4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = golden gate transit\ntable_data = [[\"make\", \"year placed in service\", \"quantity\", \"number of seats\", \"wheelchair accessible\", \"current status\"],[\"gm new look\", \"1971 , 1972\", \"132\", \"45\", \"no\", \"retired , one bus retained for historical purposes\"],[\"gm advanced design\", \"1981\", \"16\", \"43\", \"yes\", \"retired\"],[\"gm advanced design\", \"1983\", \"50\", \"41\", \"yes\", \"retired\"],[\"gillig\", \"1986\", \"4\", \"26\", \"yes\", \"retired\"],[\"mci\", \"1987\", \"21\", \"45\", \"yes\", \"retired\"],[\"tmc\", \"1990\", \"48\", \"39\", \"yes\", \"retired\"],[\"tmc\", \"1991\", \"49\", \"40\", \"yes\", \"retired (26) , reserve fleet (10) , for sale (13)\"],[\"flxible\", \"1994\", \"40\", \"45\", \"yes\", \"retired\"],[\"mci\", \"1996 , 1997\", \"32\", \"57\", \"yes\", \"for sale (21) , unknown (11)\"],[\"novabus\", \"1997\", \"10\", \"43\", \"yes\", \"retired\"],[\"new flyer\", \"2003\", \"8\", \"62\", \"yes\", \"retired\"]]\nQuestion = Is it true that 62 is the largest number of seats in a vehicle currently retired and in quantities is 8?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    quantities = get_column_by_name(table_data, \"quantity\")\n    seats = get_column_by_name(table_data, \"number of seats\")\n    statuses = get_column_by_name(table_data, \"current status\")\n    for quantity, seat, status in zip(quantities, seats, statuses):\n        if \"retired\" in status.lower():\n            answer = equal_to(quantity, \"8\") and equal_to(seat, \"62\")\n            if answer:\n                break\n    return answer\n\n### END"}
{"id": "7db5fd7a-37e3-41bc-8240-c3fe594b9d8d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"singular abbreviation\", \"singular word\", \"plural abbreviation\", \"plural word\", \"discipline\"],[\"d\", \"didot\", \"dd\", \"didots\", \"typography\"],[\"f\", \"following line or page\", \"ff\", \"following lines or pages\", \"notes\"],[\"f\", \"folio\", \"ff\", \"folios\", \"literature\"],[\"h\", \"hand\", \"hh\", \"hands\", \"horse height\"],[\"l\", \"line\", \"ll\", \"lines\", \"notes\"],[\"ms\", \"manuscript\", \"mss\", \"manuscripts\", \"notes\"],[\"op\", \"opus\", \"opp\", \"opera\", \"notes\"],[\"p\", \"page\", \"pp\", \"pages\", \"notes\"],[\"q\", \"quarto\", \"qq\", \"quartos\", \"literature\"],[\"s (or §)\", \"section\", \"ss (or §§)\", \"sections\", \"notes\"],[\"v\", \"volume\", \"vv\", \"volumes\", \"notes\"]]\nQuestion = Is it true that the abbreviation of a single p is used for a single page?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    singular_abbreviations = get_column_by_name(table_data, \"singular abbreviation\")\n    singular_words = get_column_by_name(table_data, \"singular word\")\n    for singular_abbreviation, singular_word in zip(singular_abbreviations, singular_words):\n        if singular_abbreviation.lower() == \"p\" and singular_word.lower() == \"page\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "6531ac36-4b63-4b6d-8c55-b4b872d87896", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of world cups and world championships for juniors and youth\ntable_data = [[\"sport\",\"competition name\",\"competing entities\",\"age groups\",\"held every\"],[\"aquatics\",\"fina world junior swimming championships\",\"individuals\",\"17 or younger\",\"two years\"],[\"athletics\",\"iaaf world junior championships in athletics\",\"individuals\",\"18 - 19\",\"two years\"],[\"athletics\",\"iaaf world youth championships in athletics\",\"individuals\",\"17 or younger\",\"two years\"],[\"badminton\",\"bwf world junior championships\",\"individuals\",\"19 or younger\",\"one year\"],[\"bandy\",\"bandy world championship u - 23\",\"nations\",\"under - 23\",\"two years\"],[\"bandy\",\"bandy world championship u - 19\",\"nations\",\"under - 19\",\"two years\"],[\"bandy\",\"bandy world championship u - 17\",\"nations\",\"under - 17\",\"two years\"],[\"bandy\",\"bandy world championship u - 15\",\"nations\",\"under - 15\",\"two years\"],[\"baseball\",\"world junior baseball championship\",\"nations\",\"under - 18\",\"one year through 2000 , now two years\"],[\"baseball\",\"world youth baseball championship\",\"nations\",\"under - 16\",\"one year through 1998 , two years starting in 2001\"],[\"baseball\",\"big league world series\",\"communities\",\"16 - 18\",\"one year\"],[\"baseball\",\"senior league world series\",\"communities\",\"14 - 16\",\"one year\"],[\"baseball\",\"junior league world series\",\"communities\",\"13 - 15\",\"one year\"],[\"baseball\",\"little league world series\",\"communities\",\"13 or younger\",\"one year\"],[\"basketball\",\"fiba under - 21 world championship\",\"nations\",\"21 or younger\",\"four years until 2005\"],[\"basketball\",\"fiba under - 19 world championship\",\"nations\",\"19 or younger\",\"four years until 2007 , now two years\"],[\"basketball\",\"fiba under - 17 world championship\",\"nations\",\"17 or younger\",\"two years\"],[\"basketball\",\"fiba 3x3 u - 18 world championships\",\"nations\",\"18 or younger\",\"year\"],[\"cricket\",\"u - 19 cricket world cup\",\"nations\",\"19 or younger\",\"two years\"],[\"figure skating\",\"world junior figure skating championships\",\"individuals\",\"13 - 19\",\"one year\"],[\"football (soccer)\",\"fifa u - 20 world cup\",\"nations\",\"20 or younger\",\"two years\"],[\"football (soccer)\",\"fifa u - 17 world cup\",\"nations\",\"17 or younger\",\"two years\"],[\"ice hockey\",\"iihf world u20 championship\",\"nations\",\"20 or younger\",\"year\"],[\"ice hockey\",\"iihf world u18 championships\",\"nations\",\"18 or younger\",\"year\"],[\"lacrosse\",\"under - 19 world lacrosse championships\",\"nations\",\"19 or younger\",\"four years\"],[\"rowing\",\"junior world rowing championships\",\"nations\",\"18 or younger\",\"year\"],[\"rugby union\",\"irb junior world championship\",\"nations\",\"20 or younger\",\"year\"],[\"rugby union\",\"under 19 rugby world championship\",\"nations\",\"19 or younger\",\"year\"],[\"rugby union\",\"under 21 rugby world championship\",\"nations\",\"21 or younger\",\"year\"],[\"speed skating\",\"world junior speed skating championships\",\"individuals and nations\",\"19 or younger\",\"one year\"],[\"speed skating\",\"isu junior world cup speed skating\",\"individuals and nations\",\"19 or younger\",\"one year\"],[\"sailing\",\"isaf youth sailing world championships\",\"nations\",\"under 19 's\",\"annually\"],[\"sailing\",\"isaf classes world championship\",\"held in the optimist , splash , zoom , rs tera etc\",\"19 or younger\",\"various\"],[\"table tennis\",\"world junior table tennis championships\",\"individuals and nations\",\"18 or younger\",\"one year\"],[\"volleyball\",\"men 's junior volleyball world championship\",\"nations\",\"21 or younger\",\"two years\"],[\"volleyball\",\"boys youth volleyball world championship\",\"nations\",\"19 or younger\",\"two years\"]]\nQuestion = Is it true that the age group for the big league world series is for those ages 16 - 18?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    competition_names = get_column_by_name(table_data, \"competition name\")\n    age_groups = get_column_by_name(table_data, \"age groups\")\n    for competition_name, age_group in zip(competition_names, age_groups):\n        if competition_name.lower() == \"big league world series\":\n            answer = age_group == \"16 - 18\"\n            break\n    return answer\n\n### END"}
{"id": "39622e7f-8a6d-459e-9225-1aaab724bf70", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 issf world cup final (rifle and pistol)\ntable_data = [[\"shooter\", \"event\", \"rank points\", \"score points\", \"total\"],[\"zhu qinan ( chn )\", \"wcf 2007\", \"defending champion\", \"defending champion\", \"defending champion\"],[\"abhinav bindra ( ind )\", \"og beijing\", \"olympic gold medalist\", \"olympic gold medalist\", \"olympic gold medalist\"],[\"henri häkkinen ( fin )\", \"og beijing\", \"olympic bronze medalist\", \"olympic bronze medalist\", \"olympic bronze medalist\"],[\"alin george moldoveanu ( rou )\", \"wc munich\", \"15\", \"14\", \"29\"],[\"péter sidi ( hun )\", \"wc rio de janeiro\", \"15\", \"13\", \"28\"],[\"matthew emmons ( usa )\", \"wc beijing\", \"10\", \"14\", \"24\"],[\"cao yifei ( chn )\", \"wc milan\", \"10\", \"11\", \"21\"],[\"gagan narang ( ind )\", \"wc beijing\", \"8\", \"12\", \"20\"],[\"thomas farnik ( aut )\", \"wc munich\", \"8\", \"12\", \"20\"],[\"nemanja mirosavljev ( srb )\", \"wc rio de janeiro\", \"8\", \"11\", \"19\"],[\"artur ayvazyan ( ukr )\", \"wc milan\", \"5\", \"12\", \"17\"]]\nQuestion = Is it true that olympic bronze medalist rank points was defending champion?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    rank_points = get_column_by_name(table_data, \"rank points\")\n    answer = equal_to(rank_points[2], \"defending champion\")\n    return answer\n\n### END"}
{"id": "974a9ab3-08b2-4da6-857e-feb3094da6ae", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = german submarine u - 101 (1940)\ntable_data = [[\"date\", \"ship\", \"nationality\", \"tonnage\", \"fate\"],[\"26 may 1940\", \"stanhall\", \"uk\", \"4831\", \"sunk\"],[\"31 may 1940\", \"orangemoor\", \"uk\", \"5775\", \"sunk\"],[\"2 june 1940\", \"polycarp\", \"uk\", \"3577\", \"sunk\"],[\"11 june 1940\", \"mount hymettus\", \"greece\", \"5820\", \"sunk\"],[\"12 june 1940\", \"earlspark\", \"uk\", \"5250\", \"sunk\"],[\"14 june 1940\", \"antonis georgandis\", \"greece\", \"3557\", \"sunk\"],[\"16 june 1940\", \"wellington star\", \"uk\", \"13212\", \"sunk\"],[\"19 august 1940\", \"ampleforth\", \"uk\", \"4576\", \"sunk\"],[\"28 august 1940\", \"elle\", \"finland\", \"3868\", \"sunk\"],[\"1 september 1940\", \"efploia\", \"greece\", \"3867\", \"sunk\"],[\"12 october 1940\", \"saint - malo\", \"canada\", \"5799\", \"sunk\"],[\"18 october 1940\", \"blairspey\", \"uk\", \"4155\", \"damaged\"],[\"18 october 1940\", \"creekirk\", \"uk\", \"3917\", \"sunk\"],[\"19 october 1940\", \"assyrian\", \"uk\", \"2962\", \"sunk\"],[\"19 october 1940\", \"soesterberg\", \"netherlands\", \"1904\", \"sunk\"],[\"30 november 1940\", \"aracataca\", \"uk\", \"5378\", \"sunk\"],[\"1 december 1940\", \"appalachee\", \"uk\", \"8826\", \"sunk\"],[\"1 december 1940\", \"loch ranza\", \"uk\", \"4958\", \"damaged\"],[\"2 december 1940\", \"kavak\", \"uk\", \"2782\", \"sunk\"],[\"2 december 1940\", \"lady glanely\", \"uk\", \"5497\", \"sunk\"],[\"14 february 1941\", \"holystone\", \"uk\", \"5462\", \"sunk\"],[\"17 february 1941\", \"gairsoppa\", \"uk\", \"5237\", \"sunk\"],[\"4 june 1941\", \"trecarrell\", \"uk\", \"5271\", \"sunk\"],[\"9 june 1941\", \"trevarrack\", \"uk\", \"1190\", \"sunk\"],[\"18 october 1941\", \"hmsbroadwater\", \"uk\", \"1190\", \"sunk\"]]\nQuestion = Is it true that the aracataca is a ship not sunk from the united kingdom?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    ships = get_column_by_name(table_data, \"ship\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    fates = get_column_by_name(table_data, \"fate\")\n    for ship, nationality, fate in zip(ships, nationalities, fates):\n        if equal_to(ship, \"aracataca\") and equal_to(nationality, \"uk\"):\n            answer = not equal_to(fate, \"sunk\")\n            break \n    return answer\n\n### END"}
{"id": "1a8c5202-2cc0-40ef-86bb-615e2ef9997f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rowing at the 2008 summer olympics - women 's lightweight double sculls\ntable_data = [[\"rank\", \"rowers\", \"country\", \"time\", \"notes\"],[\"1\", \"melanie kok , tracy cameron\", \"canada\", \"7:10.70\", \"fa\"],[\"2\", \"xu dongxiang , chen haixia\", \"china\", \"7:11.59\", \"fa\"],[\"3\", \"chrysi biskitzi , alexandra tsiavou\", \"greece\", \"7:11.99\", \"fa\"],[\"4\", \"renee hykel , jennifer goldsack\", \"united states\", \"7:12.15\", \"fb\"],[\"5\", \"amber halliday , marguerite houston\", \"australia\", \"7:13.80\", \"fb\"],[\"6\", \"misaki kumakura , akiko iwamoto\", \"japan\", \"7:16.13\", \"fb\"]]\nQuestion = Is it true that china had the fastest time?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef parse_time_to_float(time_str):\n    minutes, seconds = map(float, time_str.split(':'))\n    return minutes * 60 + seconds\n\ndef is_min(num, num_list):\n    return num == min(num_list)\n\ndef solution(table_data):\n    times = get_column_by_name(table_data, \"time\")\n    countries = get_column_by_name(table_data, \"country\")\n    parsed_times = [parse_time_to_float(time) for time in times]\n    for country, parsed_time in zip(countries, parsed_times):\n        if country.lower() == \"china\":\n            answer = is_min(parsed_time, parsed_times)\n            break\n    return answer\n\n### END"}
{"id": "3cd24127-0750-4b15-8b53-9a1ed8307a79", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"order\", \"episode\", \"air date\", \"us timeslot (est)\", \"18 - 49\", \"viewers\"],[\"16\", \"so i think i can dance\", \"october 13 , 2008\", \"monday 9:30 pm\", \"3.1\", \"11.45\"],[\"17\", \"out of africa\", \"october 20 , 2008\", \"monday 9:30 pm\", \"3.0\", \"9.64\"],[\"18\", \"the pill\", \"october 27 , 2008\", \"monday 9:30 pm\", \"3.0\", \"10.45\"],[\"19\", \"the building\", \"november 3 , 2008\", \"monday 9:30 pm\", \"2.7\", \"9.71\"],[\"20\", \"help\", \"november 10 , 2008\", \"monday 9:30 pm\", \"3.0\", \"11.03\"],[\"21\", \"the - ex\", \"november 17 , 2008\", \"monday 9:30 pm\", \"3.0\", \"11.12\"],[\"22\", \"the farm\", \"november 24 , 2008\", \"monday 9:30 pm\", \"3.2\", \"11.93\"],[\"23\", \"the park\", \"december 1 , 2008\", \"monday 9:00 pm\", \"2.2\", \"6.70\"],[\"24\", \"the family vacation\", \"december 1 , 2008\", \"monday 9:30 pm\", \"2.1\", \"6.79\"],[\"25\", \"my best friends boyfriend\", \"march 26 , 2009\", \"thursday 8:30 pm\", \"2.2\", \"6.57\"],[\"26\", \"the dog\", \"april 2 , 2009\", \"thursday 8:30 pm\", \"1.4\", \"4.90\"],[\"27\", \"the amazing racist\", \"april 9 , 2009\", \"thursday 8:30 pm\", \"1.4\", \"4.87\"],[\"28\", \"the debt\", \"april 16 , 2009\", \"thursday 8:30 pm\", \"1.5\", \"4.96\"],[\"29\", \"the rock star\", \"june 25 , 2009\", \"thursday 8:00 pm\", \"1.0\", \"3.72\"],[\"30\", \"todd 's job\", \"july 2 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"1.0\", \"3.50\"],[\"31\", \"the sister\", \"july 2 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"1.0\", \"3.28\"],[\"32\", \"the dream job\", \"july 9 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"1.0\", \"3.59\"],[\"33\", \"the first date\", \"july 9 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"1.0\", \"3.23\"],[\"34\", \"the other woman\", \"july 23 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"0.9\", \"3.46\"],[\"35\", \"with this ring\", \"july 23 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"0.9\", \"3.31\"]]\nQuestion = Is it true that monday 9:00 pm was the us timeslot (est) for the episode , the farm?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    episodes = get_column_by_name(table_data, \"episode\")\n    timeslots = get_column_by_name(table_data, \"us timeslot (est)\")\n    for episode, timeslot in zip(episodes, timeslots):\n        if episode.lower() == \"the farm\":\n            answer = equal_to(timeslot, \"monday 9:00 pm\")\n            break \n    return answer\n\n### END"}
{"id": "19eb6549-3e5b-4ca2-9a47-c865b6724d45", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1971 nhl amateur draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"15\", \"ken baird\", \"defence\", \"canada\", \"california golden seals\", \"flin flon bombers (wchl)\"],[\"16\", \"henry boucha\", \"centre\", \"united states\", \"detroit red wings\", \"us national development team\"],[\"17\", \"bobby lalonde\", \"centre\", \"canada\", \"vancouver canucks\", \"montreal junior canadiens (oha)\"],[\"18\", \"brian mckenzie\", \"left wing\", \"canada\", \"pittsburgh penguins\", \"st catharines black hawks (oha)\"],[\"19\", \"craig ramsay\", \"left wing\", \"canada\", \"buffalo sabres\", \"peterborough petes (oha)\"],[\"20\", \"larry robinson\", \"defence\", \"canada\", \"montreal canadiens\", \"kitchener rangers (oha)\"],[\"21\", \"rod norrish\", \"left wing\", \"canada\", \"minnesota north stars\", \"regina pats (wchl)\"],[\"22\", \"rick kehoe\", \"right wing\", \"canada\", \"toronto maple leafs\", \"hamilton red wings (oha)\"],[\"23\", \"dave fortier\", \"defence\", \"canada\", \"toronto maple leafs\", \"st catharines black hawks (oha)\"],[\"24\", \"michel deguise\", \"goaltender\", \"canada\", \"montreal canadiens\", \"sorel eperviers (qmjhl)\"],[\"25\", \"terry french\", \"centre\", \"canada\", \"montreal canadiens\", \"ottawa 67 's (oha)\"],[\"26\", \"dave kryskow\", \"left wing\", \"canada\", \"chicago black hawks\", \"edmonton oil kings (wchl)\"],[\"27\", \"tom williams\", \"left wing\", \"canada\", \"new york rangers\", \"hamilton red wings (oha)\"],[\"28\", \"curt ridley\", \"goaltender\", \"canada\", \"boston bruins\", \"portage terriers (mjhl)\"]]\nQuestion = Is it true that craig ramsay plays left wing for the peterborough petes (oha)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    positions = get_column_by_name(table_data, \"position\")\n    teams = get_column_by_name(table_data, \"college / junior / club team\")\n    answer = False\n    for player, position, team in zip(players, positions, teams):\n        if player.lower() == \"craig ramsay\" and position.lower() == \"left wing\" and team.lower() == \"peterborough petes (oha)\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "7f8dbf9c-5ed5-4084-ac77-a3ec5ff22962", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"order\", \"episode\", \"air date\", \"us timeslot (est)\", \"18 - 49\", \"viewers\"],[\"16\", \"so i think i can dance\", \"october 13 , 2008\", \"monday 9:30 pm\", \"3.1\", \"11.45\"],[\"17\", \"out of africa\", \"october 20 , 2008\", \"monday 9:30 pm\", \"3.0\", \"9.64\"],[\"18\", \"the pill\", \"october 27 , 2008\", \"monday 9:30 pm\", \"3.0\", \"10.45\"],[\"19\", \"the building\", \"november 3 , 2008\", \"monday 9:30 pm\", \"2.7\", \"9.71\"],[\"20\", \"help\", \"november 10 , 2008\", \"monday 9:30 pm\", \"3.0\", \"11.03\"],[\"21\", \"the - ex\", \"november 17 , 2008\", \"monday 9:30 pm\", \"3.0\", \"11.12\"],[\"22\", \"the farm\", \"november 24 , 2008\", \"monday 9:30 pm\", \"3.2\", \"11.93\"],[\"23\", \"the park\", \"december 1 , 2008\", \"monday 9:00 pm\", \"2.2\", \"6.70\"],[\"24\", \"the family vacation\", \"december 1 , 2008\", \"monday 9:30 pm\", \"2.1\", \"6.79\"],[\"25\", \"my best friends boyfriend\", \"march 26 , 2009\", \"thursday 8:30 pm\", \"2.2\", \"6.57\"],[\"26\", \"the dog\", \"april 2 , 2009\", \"thursday 8:30 pm\", \"1.4\", \"4.90\"],[\"27\", \"the amazing racist\", \"april 9 , 2009\", \"thursday 8:30 pm\", \"1.4\", \"4.87\"],[\"28\", \"the debt\", \"april 16 , 2009\", \"thursday 8:30 pm\", \"1.5\", \"4.96\"],[\"29\", \"the rock star\", \"june 25 , 2009\", \"thursday 8:00 pm\", \"1.0\", \"3.72\"],[\"30\", \"todd 's job\", \"july 2 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"1.0\", \"3.50\"],[\"31\", \"the sister\", \"july 2 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"1.0\", \"3.28\"],[\"32\", \"the dream job\", \"july 9 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"1.0\", \"3.59\"],[\"33\", \"the first date\", \"july 9 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"1.0\", \"3.23\"],[\"34\", \"the other woman\", \"july 23 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"0.9\", \"3.46\"],[\"35\", \"with this ring\", \"july 23 , 2009\", \"thursday 8:00 pm / 8:30 pm\", \"0.9\", \"3.31\"]]\nQuestion = Is it true that the other woman was the name of the episode that aired on july 23 , 2009 and had 3.46 million viewers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    episodes = get_column_by_name(table_data, \"episode\")\n    air_dates = get_column_by_name(table_data, \"air date\")\n    viewers = get_column_by_name(table_data, \"viewers\")\n    for episode, air_date, viewer in zip(episodes, air_dates, viewers):\n        if episode.lower() == \"the other woman\" and air_date.lower() == \"july 23 , 2009\" and viewer == \"3.46\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "a94a1129-b545-4d48-9351-0267df17c39f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = strikeout\ntable_data = [[\"pitcher\", \"strikeouts\", \"season\", \"team\", \"league\", \"overall rank\"],[\"matt kilroy\", \"513\", \"1886\", \"baltimore orioles\", \"aa\", \"1\"],[\"toad ramsey\", \"499\", \"1886\", \"louisville colonels\", \"aa\", \"2\"],[\"dupee shaw\", \"451\", \"1884\", \"detroit wolverines / boston reds\", \"nl / ua\", \"4\"],[\"old hoss radbourn\", \"441\", \"1884\", \"providence grays\", \"nl\", \"5\"],[\"charlie buffington\", \"417\", \"1884\", \"boston beaneaters\", \"nl\", \"6\"],[\"guy hecker\", \"385\", \"1884\", \"louisville eclipse\", \"aa\", \"7\"],[\"nolan ryan\", \"383\", \"1973\", \"california angels\", \"al\", \"8\"],[\"sandy koufax\", \"382\", \"1965\", \"los angeles dodgers\", \"nl\", \"9\"]]\nQuestion = Is it true that matt kilroy is ranked above sandy koufax?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    pitchers = get_column_by_name(table_data, \"pitcher\")\n    ranks = get_column_by_name(table_data, \"overall rank\")\n    for pitcher, rank in zip(pitchers, ranks):\n        if pitcher.lower() == \"matt kilroy\":\n            matt_rank = int(rank)\n        elif pitcher.lower() == \"sandy koufax\":\n            sandy_rank = int(rank)\n    answer = less_than(matt_rank, sandy_rank)\n    return answer\n\n### END"}
{"id": "aff8a2c9-1a98-407f-8867-a160495c50d2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = westinghouse broadcasting\ntable_data = [[\"city of license / market\", \"station\", \"channel tv ( dt )\", \"years owned\", \"current affiliation\"],[\"san francisco - oakland - san jose\", \"kpix\", \"5 (29)\", \"1954 - 1995\", \"cbs owned - and - operated ( o&o )\"],[\"baltimore\", \"wjz - tv\", \"13 (13)\", \"1957 - 1995\", \"cbs owned - and - operated (o&o)\"],[\"boston\", \"wbz - tv\", \"4 (30)\", \"1948 - 1995\", \"cbs owned - and - operated (o&o)\"],[\"charlotte\", \"wpcq - tv (now wcnc - tv )\", \"36 (22)\", \"1980 - 1985\", \"nbc affiliate owned by belo corporation\"],[\"cleveland\", \"kyw - tv (now wkyc - tv )\", \"3 (17)\", \"1956 - 1965\", \"nbc affiliate owned by gannett company\"],[\"philadelphia\", \"wptz / kyw - tv\", \"3 (26)\", \"1953 - 1956 1965 - 1995\", \"cbs owned - and - operated (o&o)\"]]\nQuestion = Is it true that san francisco , oakland , and san jose is owned and operated affiliate by cbs?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    cities = get_column_by_name(table_data, \"city of license / market\")\n    affiliations = get_column_by_name(table_data, \"current affiliation\")\n    answer = False\n    for city, affiliation in zip(cities, affiliations):\n        if \"san francisco - oakland - san jose\" in city.lower() and \"cbs owned - and - operated\" in affiliation.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "ac403e7c-dfbf-4b75-a680-38d1a9ddc25e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the howie carr show\ntable_data = [[\"calls\",\"frequency\",\"branding\",\"format\",\"timeslot\",\"group owner\"],[\"wgan\",\"560 khz\",\"news radio 560 wgan\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"whyn\",\"560 khz\",\"news / talk 560 whyn\",\"news / talk\",\"live 3p - 7p\",\"clear channel communications\"],[\"wvmt\",\"620 khz\",\"news / talk 620 wvmt\",\"news / talk\",\"live 3p - 7p\",\"sison broadcasting\"],[\"wrko\",\"680 khz\",\"am 680 wrko\",\"news / talk\",\"live 3p - 7p\",\"entercom\"],[\"wcrn\",\"830 khz\",\"wcrn 830 true talk\",\"news / talk\",\"live 3p - 7p\",\"carter broadcasting\"],[\"wkbk\",\"1290 khz\",\"1290 wkbk w281au 104.1\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"wegp\",\"1390 khz\",\"wegp 1390 am - the talk of the county\",\"news / talk\",\"live 3p - 6p\",\"decelles / media , inc\"],[\"wxtk\",\"95.1 mhz\",\"news radio 95 wxtk\",\"news / talk\",\"live 3p - 7p\",\"qantam of cape cod , llc\"],[\"wntk - fm\",\"99.7 mhz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wuvr\",\"1490 khz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wvom - fm / wvqm\",\"103.9 / 101.3 mhz\",\"the voice of maine\",\"news / talk\",\"live 3p - 7p\",\"blueberry broadcasting\"]]\nQuestion = Is it true that wrko has a news / talk format?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    calls = get_column_by_name(table_data, \"calls\")\n    formats = get_column_by_name(table_data, \"format\")\n    answer = False\n    for call, format in zip(calls, formats):\n        if call.lower() == \"wrko\" and format.lower() == \"news / talk\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "65c74cec-551b-4d76-ac3e-0b1147a0c335", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 honda indy 300\ntable_data = [[\"driver\", \"team\", \"laps\", \"time / retired\", \"grid\"],[\"cristiano da matta\", \"newman - haas racing\", \"65\", \"1:51:47.260\", \"3\"],[\"michael andretti\", \"team green\", \"65\", \"+ 5.8 secs\", \"6\"],[\"alex tagliani\", \"forsythe racing\", \"65\", \"+ 7.5 secs\", \"7\"],[\"gil de ferran\", \"team penske\", \"65\", \"+ 20.9 secs\", \"2\"],[\"kenny brack\", \"team rahal\", \"65\", \"+ 22.6 secs\", \"13\"],[\"jimmy vasser\", \"patrick racing\", \"65\", \"+ 24.7 secs\", \"10\"],[\"michel jourdain , jr\", \"bettenhausen racing\", \"65\", \"+ 39.5 secs\", \"16\"],[\"christian fittipaldi\", \"newman - haas racing\", \"65\", \"+ 40.5 secs\", \"15\"],[\"max papis\", \"team rahal\", \"65\", \"+ 42.6 secs\", \"14\"],[\"memo gidley\", \"chip ganassi racing\", \"65\", \"+ 42.9 secs\", \"23\"],[\"patrick carpentier\", \"forsythe racing\", \"65\", \"+ 46.7 secs\", \"9\"],[\"shinji nakano\", \"fernández racing\", \"65\", \"+ 46.9 secs\", \"18\"],[\"alex barron\", \"arciero - blair racing\", \"65\", \"+ 46.9 secs\", \"26\"],[\"paul tracy\", \"team green\", \"65\", \"+ 62.6 secs\", \"4\"],[\"scott dixon\", \"pacwest racing\", \"65\", \"+ 72.0 secs\", \"8\"],[\"tora takagi\", \"walker racing\", \"65\", \"+ 81.8 secs\", \"20\"],[\"tony kanaan\", \"mo nunn racing\", \"65\", \"+ 82.0 secs\", \"3\"],[\"bryan herta\", \"forsythe racing\", \"65\", \"+ 82.4 secs\", \"22\"],[\"adrián fernández\", \"fernández racing\", \"65\", \"+ 100.3 secs\", \"17\"],[\"hélio castroneves\", \"team penske\", \"64\", \"+ 1 lap\", \"11\"],[\"bruno junqueira\", \"chip ganassi racing\", \"56\", \"contact\", \"21\"],[\"roberto moreno\", \"patrick racing\", \"54\", \"mechanical\", \"1\"],[\"dario franchitti\", \"team green\", \"35\", \"mechanical\", \"5\"],[\"maurício gugelmin\", \"pacwest racing\", \"34\", \"mechanical\", \"25\"],[\"oriol servià\", \"sigma autosport\", \"10\", \"mechanical\", \"12\"],[\"casey mears\", \"mo nunn racing\", \"0\", \"contact\", \"24\"]]\nQuestion = Is it true that scott dixon has a time of + 72.0 seconds?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    times = get_column_by_name(table_data, \"time / retired\")\n    for driver, time in zip(drivers, times):\n        if driver.lower() == \"scott dixon\":\n            answer = equal_to(time, \"+ 72.0 secs\")\n            break \n    return answer\n\n### END"}
{"id": "458c73e8-16e7-4c9c-8cc1-521ba56a53a1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\",\"title\",\"from album\",\"label\",\"label - nr\"],[\"1962\",\"tonight / sinnin' sam\",\"lookin' ahead\",\"pacific jazz\",\"x - 340\"],[\"1962\",\"the young rabbits / song of india\",\"lookin' ahead\",\"pacific jazz\",\"x - 342\"],[\"1962\",\"congolese sermon / weather beat\",\"(only on 45)\",\"pacific jazz\",\"x - 357\"],[\"1963\",\"no name samba / tough talk\",\"tough talk\",\"world pacific\",\"x - 371\"],[\"1963\",\"turkish black / boopie\",\"tough talk\",\"world pacific\",\"x - 388\"],[\"1963\",\"spanish castles / bluesette\",\"jazz waltz (w les mccann)\",\"world pacific\",\"406\"],[\"1964\",\"heat wave / on broadway\",\"heat wave\",\"world pacific\",\"401\"],[\"1964\",\"i remember tomorrow / long john\",\"stretchin' out\",\"world pacific\",\"412\"],[\"1965\",\"tough talk / the thing\",\"the thing\",\"world pacific\",\"77800\"],[\"1965\",\"aqua dulce / soul bourgeoisie\",\"chile con soul\",\"world pacific\",\"77806\"],[\"1966\",\"scratch / uptight\",\"talk that talk\",\"pacific jazz\",\"88125\"],[\"1968\",\"ooga - boo - ga - loo / eleanor rigby\",\"lighthouse '68\",\"pacific jazz\",\"88144\"],[\"1968\",\"hey jude / love and peace\",\"powerhouse\",\"pacific jazz\",\"88146\"],[\"1969\",\"get back / willie and laura mae jones\",\"lighthouse '69\",\"word pacific jazz\",\"88153\"],[\"1970\",\"way back home / jackson\",\"old socks , new shoes\",\"chisa\",\"c - 8010\"]]\nQuestion = Is it true that the album the thing was released in 1965?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    albums = get_column_by_name(table_data, \"from album\")\n    answer = False\n    for year, album in zip(years, albums):\n        if \"the thing\" in album.lower() and year == \"1965\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "a062fa2d-9330-4780-a32d-219380cf24a6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of tallest buildings in germany\ntable_data = [[\"name\", \"city\", \"height (m)\", \"height (ft)\", \"floors\", \"years as tallest\"],[\"commerzbank tower\", \"frankfurt\", \"259\", \"850\", \"56\", \"1997 - present\"],[\"messeturm\", \"frankfurt\", \"257\", \"843\", \"55\", \"1990 - 1997\"],[\"silberturm\", \"frankfurt\", \"166\", \"545\", \"32\", \"1978 - 1990\"],[\"westend gate\", \"frankfurt\", \"159\", \"522\", \"47\", \"1976 - 1978\"],[\"colonia - hochhaus\", \"cologne\", \"147\", \"482\", \"42\", \"1973 - 1976\"],[\"city - hochhaus leipzig\", \"leipzig\", \"143\", \"468\", \"36\", \"1972 - 1973\"],[\"bayer - hochhaus\", \"leverkusen\", \"122\", \"400\", \"29\", \"1963 - 1972\"],[\"friedrich - engelhorn - hochhaus\", \"ludwigshafen\", \"102\", \"335\", \"28\", \"1957 - 1963\"]]\nQuestion = Is it true that the name of the building that was the tallest in 1990 - 1997 , in frankfurt , is messeturm?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    cities = get_column_by_name(table_data, \"city\")\n    years_as_tallest = get_column_by_name(table_data, \"years as tallest\")\n    for name, city, year in zip(names, cities, years_as_tallest):\n        if city.lower() == \"frankfurt\" and year == \"1990 - 1997\":\n            answer = name.lower() == \"messeturm\"\n            break\n    return answer\n\n### END"}
{"id": "88c7ecaf-162f-45e1-82a8-b736049436dc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 atlanta hawks season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"series\"],[\"1\", \"april 20\", \"boston\", \"81 - 104\", \"a horford (20)\", \"a horford (10)\", \"j johnson (7)\", \"td banknorth garden 18624\", \"0 - 1\"],[\"2\", \"april 23\", \"boston\", \"77 - 96\", \"two - way tie (13)\", \"a horford (9)\", \"two - way tie (3)\", \"td banknorth garden 18624\", \"0 - 2\"],[\"3\", \"april 26\", \"boston\", \"102 - 93\", \"j smith (27)\", \"a horford (10)\", \"m bibby (8)\", \"philips arena 19725\", \"1 - 2\"],[\"4\", \"april 28\", \"boston\", \"97 - 92\", \"j johnson (35)\", \"a horford (13)\", \"j johnson (6)\", \"philips arena 20016\", \"2 - 2\"],[\"5\", \"april 30\", \"boston\", \"85 - 110\", \"j johnson (21)\", \"a horford (10)\", \"a horford (5)\", \"td banknorth garden 18624\", \"2 - 3\"],[\"6\", \"may 2\", \"boston\", \"103 - 100\", \"m williams (18)\", \"four - way tie (6)\", \"m bibby (7)\", \"philips arena 20425\", \"3 - 3\"],[\"7\", \"may 4\", \"boston\", \"99 - 65\", \"j johnson (16)\", \"a horford (12)\", \"a horford (3)\", \"td banknorth garden 18624\", \"3 - 4\"]]\nQuestion = Is it true that altanta was the opponent when boston played at the philips arena in game 4?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    games = get_column_by_name(table_data, \"game\")\n    locations = get_column_by_name(table_data, \"location attendance\")\n    for game, location in zip(games, locations):\n        if equal_to(game, \"4\") and \"philips arena\" in location.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "122fb5bc-9cf1-4438-888a-6511317895b8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = american dad! (season 1)\ntable_data = [[\"no in series\", \"title\", \"directed by\", \"written by\", \"original air date\", \"production code\", \"us viewers (millions)\"],[\"1\", \"pilot\", \"ron hughart\", \"seth macfarlane , mike barker & matt weitzman\", \"february 6 , 2005\", \"1ajn01\", \"15.10\"],[\"2\", \"threat levels\", \"brent woods\", \"david zuckerman\", \"may 1 , 2005\", \"1ajn02\", \"9.47\"],[\"3\", \"stan knows best\", \"pam cooke\", \"mike barker & matt weitzman\", \"may 8 , 2005\", \"1ajn03\", \"8.23\"],[\"4\", \"francine 's flashback\", \"caleb meurer & brent woods\", \"rick wiener & kenny schwartz\", \"may 15 , 2005\", \"1ajn05\", \"7.84\"],[\"5\", \"roger codger\", \"albert calleros\", \"dan vebber\", \"june 5 , 2005\", \"1ajn04\", \"6.09\"],[\"6\", \"homeland insecurity\", \"rodney clouden\", \"neal boushell & sam o'neal\", \"june 12 , 2005\", \"1ajn06\", \"6.85\"]]\nQuestion = Is it true that rick wiener and kenny schwartz wrote the episode with production code 1ajn05?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    written_by = get_column_by_name(table_data, \"written by\")\n    production_codes = get_column_by_name(table_data, \"production code\")\n    for writer, code in zip(written_by, production_codes):\n        if code == \"1ajn05\":\n            answer = equal_to(writer, \"rick wiener & kenny schwartz\")\n            break \n    return answer\n\n### END"}
{"id": "ced78973-3e53-40b3-8a58-3a589ba90ef7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = media in fargo - moorhead\ntable_data = [[\"frequency\", \"call sign\", \"name\", \"format\", \"owner\"],[\"88.7 fm\", \"kfbn\", \"heaven 88.7\", \"christian\", \"fargo baptist church\"],[\"90.3 fm\", \"kccd\", \"minnesota public radio / npr\", \"news / talk\", \"minnesota public radio\"],[\"91.1 fm\", \"kccm\", \"minnesota public radio / npr\", \"classical\", \"minnesota public radio\"],[\"91.9 fm\", \"kdsu\", \"prairie public / npr\", \"adult album alternative\", \"north dakota state university\"],[\"92.7 fm\", \"kzdr\", \"92.7 the bone\", \"active rock\", \"mediactive\"],[\"93.7 fm\", \"wday - fm\", \"y94\", \"top 40 (chr)\", \"radio fargo - moorhead\"],[\"95.1 fm\", \"kbvb\", \"bob 95 fm\", \"country\", \"radio fargo - moorhead\"],[\"95.9 fm\", \"kxbq - lp\", \"dive 95.9\", \"alternative\", \"women 's care clinic\"],[\"96.3 fm\", \"knds - lp\", \"thunderradio radio free fargo\", \"college\", \"north dakota state university\"],[\"97.9 fm\", \"kfnw - fm\", \"life 97.9\", \"contemporary christian music\", \"northwestern college\"],[\"98.7 fm\", \"klta\", \"big 98.7\", \"adult chr\", \"triad broadcasting\"],[\"99.3 fm\", \"k257ep\", \"k - love\", \"contemporary christian music ( kklq translator )\", \"educational media foundation\"],[\"99.9 fm\", \"kvox - fm\", \"froggy 99.9\", \"country\", \"triad broadcasting\"],[\"100.7 fm\", \"kklq\", \"k - love\", \"contemporary christian music\", \"educational media foundation\"],[\"101.9 fm\", \"krwk\", \"101.9 talk fm\", \"talk\", \"radio fargo - moorhead\"],[\"103.3 fm\", \"kzcr\", \"z 103.3\", \"rock / aaa\", \"jerry papenfuss\"],[\"103.9 fm\", \"kvmi\", \"103.9 the truck\", \"country\", \"vision media incorporated\"],[\"104.1 fm\", \"kbot\", \"104.1 the wave\", \"adult contemporary\", \"leighton broadcasting\"],[\"104.7 fm\", \"kmjo\", \"104.7 popster fm\", \"adult hits\", \"radio fargo - moorhead\"],[\"105.1 fm\", \"kqwb\", \"q 105.1\", \"active rock\", \"triad broadcasting\"],[\"106.1 fm\", \"kqlx - fm\", \"thunder 106.1\", \"classic country\", \"great plains integrated marketing\"],[\"106.5 fm\", \"krjb\", \"krjb 106.5\", \"country\", \"r&j broadcasting\"],[\"106.9 fm\", \"kegk\", \"eagle 106.9\", \"classic hits\", \"great plains integrated marketing\"],[\"107.9 fm\", \"kpfx\", \"107.9 the fox\", \"classic rock\", \"triad broadcasting\"]]\nQuestion = Is it true that jerry papenfuss is the owner of more than one station?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef solution(table_data):\n    owners = get_column_by_name(table_data, \"owner\")\n    count = count_occurrences(\"jerry papenfuss\", owners)\n    answer = count > 1\n    return answer\n\n### END"}
{"id": "5333b984-db3c-4fbe-a43a-dde8b18cac47", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1970 - 71 new york rangers season\ntable_data = [[\"game\", \"march\", \"opponent\", \"score\", \"record\"],[\"64\", \"3\", \"california golden seals\", \"8 - 1\", \"40 - 14 - 10\"],[\"65\", \"6\", \"detroit red wings\", \"2 - 2\", \"40 - 14 - 11\"],[\"66\", \"7\", \"los angeles kings\", \"4 - 2\", \"41 - 14 - 11\"],[\"67\", \"10\", \"chicago black hawks\", \"4 - 2\", \"42 - 14 - 11\"],[\"68\", \"12\", \"philadelphia flyers\", \"7 - 2\", \"43 - 14 - 11\"],[\"69\", \"14\", \"toronto maple leafs\", \"1 - 0\", \"44 - 14 - 11\"],[\"70\", \"18\", \"philadelphia flyers\", \"2 - 1\", \"44 - 15 - 11\"],[\"71\", \"20\", \"toronto maple leafs\", \"3 - 1\", \"44 - 16 - 11\"],[\"72\", \"21\", \"montreal canadiens\", \"6 - 2\", \"44 - 17 - 11\"],[\"73\", \"23\", \"buffalo sabres\", \"7 - 2\", \"45 - 17 - 11\"],[\"74\", \"27\", \"boston bruins\", \"6 - 3\", \"46 - 17 - 11\"],[\"75\", \"28\", \"boston bruins\", \"2 - 1\", \"47 - 17 - 11\"],[\"76\", \"31\", \"chicago black hawks\", \"4 - 2\", \"48 - 17 - 11\"]]\nQuestion = Is it true that the record of game 67 is 42 - 14 - 11?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    games = get_column_by_name(table_data, \"game\")\n    records = get_column_by_name(table_data, \"record\")\n    for game, record in zip(games, records):\n        if game == \"67\":\n            answer = equal_to(record, \"42 - 14 - 11\")\n            break \n    return answer\n\n### END"}
{"id": "77d8e105-a134-44cc-bb21-a21d52869437", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 veikkausliiga\ntable_data = [[\"club\",\"location\",\"stadium\",\"capacity\",\"manager\",\"kitmaker\"],[\"ac oulu\",\"oulu\",\"castrén\",\"4000\",\"juha malinen\",\"umbro\"],[\"fc honka\",\"espoo\",\"tapiolan urheilupuisto\",\"6000\",\"mika lehkosuo\",\"kappa\"],[\"fc inter\",\"turku\",\"veritas stadion\",\"9372\",\"job dragtsma\",\"nike\"],[\"fc lahti\",\"lahti\",\"lahden stadion\",\"15000\",\"ilkka mäkelä\",\"umbro\"],[\"ff jaro\",\"jakobstad\",\"jakobstads centralplan\",\"5000\",\"alexei eremenko sr\",\"errea\"],[\"haka\",\"valkeakoski\",\"tehtaan kenttä\",\"3516\",\"sami ristilä\",\"umbro\"],[\"hjk\",\"helsinki\",\"sonera stadium\",\"10770\",\"antti muurinen\",\"adidas\"],[\"ifk mariehamn\",\"mariehamn\",\"wiklöf holding arena\",\"4000\",\"pekka lyyski\",\"puma\"],[\"jjk\",\"jyväskylä\",\"harjun stadion\",\"3000\",\"kari martonen\",\"legea\"],[\"kups\",\"kuopio\",\"kuopion keskuskenttä\",\"5000\",\"esa pekonen\",\"puma\"],[\"mypa\",\"anjalankoski\",\"saviniemi\",\"4167\",\"janne lindberg\",\"puma\"],[\"tampere united\",\"tampere\",\"ratina stadion\",\"17000\",\"ari hjelm\",\"puma\"],[\"tps\",\"turku\",\"veritas stadion\",\"9372\",\"marko rajamäki\",\"puma\"]]\nQuestion = Is it true that harjun stadium is managed by kari martonen and is located in kuopio?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    managers = get_column_by_name(table_data, \"manager\")\n    locations = get_column_by_name(table_data, \"location\")\n    for stadium, manager, location in zip(stadiums, managers, locations):\n        if equal_to(stadium, \"harjun stadion\") and equal_to(manager, \"kari martonen\") and equal_to(location, \"kuopio\"):\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "896f6461-1f0c-4302-9566-c18656bd815f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 manchester city f.c. season\ntable_data = [[\"exit date\", \"pos\", \"player\", \"to club\", \"transfer fee\"],[\"15 may 2007\", \"df\", \"hatem trabelsi\", \"al - hilal\", \"released\"],[\"23 may 2007\", \"df\", \"sylvain distin\", \"portsmouth\", \"free\"],[\"14 june 2007\", \"mf\", \"joey barton\", \"newcastle united\", \"5.8 m\"],[\"4 july 2007\", \"gk\", \"nicky weaver\", \"charlton athletic\", \"free\"],[\"10 july 2007\", \"mf\", \"trevor sinclair\", \"cardiff city\", \"free\"],[\"16 july 2007\", \"df\", \"stephen jordan\", \"burnley\", \"free\"],[\"31 jan 2008\", \"mf\", \"ousmane dabo\", \"lazio\", \"free\"],[\"31 jan 2008\", \"fw\", \"ishmael miller\", \"west brom albion\", \"9 m - 1.4 m\"]]\nQuestion = Is it true that the player that transferred to portsmouth exitted on 23 may 2007?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    exit_dates = get_column_by_name(table_data, \"exit date\")\n    to_clubs = get_column_by_name(table_data, \"to club\")\n    answer = False\n    for exit_date, to_club in zip(exit_dates, to_clubs):\n        if \"portsmouth\" in to_club.lower():\n            if \"23 may 2007\" in exit_date.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "ecde4d5b-7e63-4085-878d-754f4783d921", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = peaches & herb\ntable_data = [[\"title\", \"label\", \"year of release\", \"country of release\", \"peaches :\"],[\"for your love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"let 's fall in love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"peaches & herb\", \"mca\", \"1977\", \"usa\", \"linda greene\"],[\"2 hot\", \"mvp / polydor\", \"1978\", \"usa\", \"linda greene\"],[\"twice the fire\", \"mvp / polydor\", \"1979\", \"usa\", \"linda greene\"],[\"demasiado candente\", \"mvp / polydor\", \"1979\", \"argentina\", \"linda greene\"],[\"worth the wait\", \"mvp / polydor\", \"1980\", \"usa\", \"linda greene\"],[\"sayin' something\", \"mvp / polydor\", \"1981\", \"usa\", \"linda greene\"],[\"remember\", \"the entertainment co / columbia\", \"1983\", \"usa\", \"linda greene\"],[\"colors of love\", \"imagen\", \"2009\", \"usa\", \"meritxell negre\"]]\nQuestion = Is it true that the last year that mca had a release was 1977 titled peaches & herb?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    labels = get_column_by_name(table_data, \"label\")\n    years = get_column_by_name(table_data, \"year of release\")\n    titles = get_column_by_name(table_data, \"title\")\n    last_mca_year = max([int(year) for label, year in zip(labels, years) if label.lower() == \"mca\"])\n    last_mca_title = [title for label, year, title in zip(labels, years, titles) if label.lower() == \"mca\" and int(year) == last_mca_year][0]\n    answer = equal_to(last_mca_year, 1977) and equal_to(last_mca_title, \"peaches & herb\")\n    return answer\n\n### END"}
{"id": "ee50bbf1-9cc8-4a4f-8626-4e3a52af4e20", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = yrjö väisälä\ntable_data = [[\"1391 carelia\", \"1398 donnera\", \"1405 sibelius\", \"1406 komppa\", \"1407 lindelöf\"],[\"1421 esperanto\", \"1424 sundmania\", \"1446 sillanpää\", \"1447 utra\", \"1448 lindbladia\"],[\"1449 virtanen\", \"1450 raimonda\", \"1451 granö\", \"1453 fennia\", \"1454 kalevala\"],[\"1460 haltia\", \"1462 zamenhof\", \"1463 nordenmarkia\", \"1471 tornio\", \"1472 muonio\"],[\"1473 ounas\", \"1477 bonsdorffia\", \"1478 vihuri\", \"1479 inkeri\", \"1480 aunus\"],[\"1483 hakoila\", \"1488 aura\", \"1492 oppolzer\", \"1494 savo\", \"1495 helsinki\"],[\"1496 turku\", \"1497 tampere\", \"1498 lahti\", \"1499 pori\", \"1500 jyväskylä\"],[\"1503 kuopio\", \"1518 rovaniemi\", \"1519 kajaani\", \"1520 imatra\", \"1521 seinäjoki\"],[\"1523 pieksämäki\", \"1524 joensuu\", \"1525 savonlinna\", \"1526 mikkeli\", \"1527 malmquista\"],[\"1529 oterma\", \"1530 rantaseppä\", \"1532 inari\", \"1533 saimaa\", \"1534 näsi\"],[\"1535 päijänne\", \"1536 pielinen\", \"1541 estonia\", \"1542 schalén\", \"1548 palomaa\"],[\"1549 mikko\", \"1551 argelander\", \"1552 bessel\", \"1567 alikoski\", \"1631 kopff\"],[\"1646 rosseland\", \"1656 suomi\", \"1659 punkaharju\", \"1677 tycho brahe\", \"1678 hveen\"],[\"1696 nurmela\", \"1699 honkasalo\", \"1723 klemola\", \"1740 paavo nurmi\", \"1757 porvoo\"],[\"1883 rimito\", \"1928 summa\", \"1929 kollaa\", \"1947 iso - heikkilä\", \"2020 ukko\"],[\"2067 aksnes\", \"2091 sampo\", \"2096 väinö\", \"2194 arpola\", \"2204 lyyli\"],[\"2243 lönnrot\", \"2258 viipuri\", \"2292 seili\", \"2299 hanko\", \"2333 porthan\"],[\"2379 heiskanen\", \"2397 lappajärvi\", \"2454 olaus magnus\", \"2464 nordenskiöld\", \"2479 sodankylä\"],[\"2486 metsähovi\", \"2502 nummela\", \"2512 tavastia\", \"2535 hämeenlinna\", \"2638 gadolin\"],[\"2639 planman\", \"2678 aavasaksa\", \"2679 kittisvaara\", \"2690 ristiina\", \"2715 mielikki\"],[\"2716 tuulikki\", \"2733 hamina\", \"2737 kotka\", \"2750 loviisa\", \"2802 weisell\"],[\"2820 iisalmi\", \"2826 ahti\", \"2885 palva\", \"2898 neuvo\", \"2962 otto\"],[\"2972 niilo\", \"3037 alku\", \"3099 hergenrother\", \"3166 klondike\", \"3212 agricola\"],[\"3223 forsius\", \"3272 tillandz\", \"3281 maupertuis\", \"3522 becker\", \"3606 pohjola\"],[\"3897 louhi\", \"4181 kivi\", \"4266 waltari\", \"4512 sinuhe\", \"5073 junttura\"]]\nQuestion = Is it true that 1530 rantaseppä is down the street from 2512 tavastia?\n\n### RESPONSE:\ndef solution(table_data):\n    return False\n\n### END"}
{"id": "bfff5bbe-99e7-4f92-a78d-a11e2c63568f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"episode\", \"broadcast date\", \"run time\", \"viewers (in millions)\", \"archive\"],[\"episode 1\", \"21 march 1970\", \"24:33\", \"7.1\", \"pal 2 colour videotape\"],[\"episode 2\", \"28 march 1970\", \"24:39\", \"7.6\", \"chroma dot colour recovery\"],[\"episode 3\", \"4 april 1970\", \"24:38\", \"8.0\", \"chroma dot colour recovery\"],[\"episode 4\", \"11 april 1970\", \"24:37\", \"9.3\", \"chroma dot colour recovery\"],[\"episode 5\", \"18 april 1970\", \"24:17\", \"7.1\", \"pal d3 colour restoration\"],[\"episode 6\", \"25 april 1970\", \"24:31\", \"6.9\", \"chroma dot colour recovery\"],[\"episode 7\", \"2 may 1970\", \"24:32\", \"6.4\", \"chroma dot colour recovery\"]]\nQuestion = Is it true that when the broadcast date is 18april 1970 the episode was not 5?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    episodes = get_column_by_name(table_data, \"episode\")\n    dates = get_column_by_name(table_data, \"broadcast date\")\n    for episode, date in zip(episodes, dates):\n        if \"18 april 1970\" in date.lower():\n            answer = not equal_to(episode, \"episode 5\")\n            break \n    return answer\n\n### END"}
{"id": "1ad084dd-20e0-4a23-9b12-39187c18e0a5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = statistics relating to enlargement of the european union\ntable_data = [[\"member countries\", \"population\", \"area (km square)\", \"gdp (billion us)\", \"gdp per capita (us)\"],[\"cyprus\", \"775927\", \"9250\", \"11.681\", \"15054\"],[\"czech republic\", \"10246178\", \"78866\", \"105.248\", \"10272\"],[\"estonia\", \"1341664\", \"45226\", \"22.384\", \"16684\"],[\"hungary\", \"10032375\", \"93030\", \"102183\", \"10185\"],[\"latvia\", \"2306306\", \"64589\", \"24.826\", \"10764\"],[\"lithuania\", \"3607899\", \"65200\", \"31.971\", \"8861\"],[\"malta\", \"396851\", \"316\", \"5.097\", \"12843\"],[\"poland\", \"38580445\", \"311904\", \"316.438\", \"8202\"],[\"slovakia\", \"5423567\", \"49036\", \"42.800\", \"7810\"],[\"slovenia\", \"2011473\", \"20273\", \"29.633\", \"14732\"],[\"accession countries\", \"74722685\", \"737690\", \"685.123\", \"9169\"],[\"existing members (2004)\", \"381781620\", \"3367154\", \"7711.871\", \"20200\"],[\"eu25 (2004)\", \"456504305 ( + 19.57%)\", \"4104844 ( + 17.97%)\", \"8396994 ( + 8.88%)\", \"18394 (8.94%)\"]]\nQuestion = Is it true that the total population of the country is 775927 and has a gdp per capita (us) of 15054?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    populations = get_column_by_name(table_data, \"population\")\n    gdps_per_capita = get_column_by_name(table_data, \"gdp per capita (us)\")\n    for population, gdp_per_capita in zip(populations, gdps_per_capita):\n        if equal_to(population, \"775927\") and equal_to(gdp_per_capita, \"15054\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "7b02d90f-3120-4ae4-99db-35ba8db50cbd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 - 02 prva hnl\ntable_data = [[\"team\",\"manager\",\"home city\",\"stadium\",\"capacity\"],[\"cibalia\",\"davor čop\",\"vinkovci\",\"stadion hnk cibalia\",\"9920\"],[\"čakovec\",\"rajko magić\",\"čakovec\",\"stadion src mladost\",\"8000\"],[\"dinamo zagreb\",\"ilija lončarević\",\"zagreb\",\"stadion maksimir\",\"37168\"],[\"hajduk split\",\"nenad gračan\",\"split\",\"gradski stadion u poljudu\",\"35000\"],[\"hrvatski dragovoljac\",\"luka bonačić\",\"zagreb\",\"stadion nšc stjepan spajić\",\"5000\"],[\"kamen ingrad\",\"tomislav radić\",\"velika\",\"stadion kamen ingrada\",\"8000\"],[\"marsonia\",\"milo nižetić\",\"slavonski brod\",\"gradski stadion uz savu\",\"10000\"],[\"osijek\",\"vlado bilić\",\"osijek\",\"stadion gradski vrt\",\"19500\"],[\"pomorac\",\"predrag stilinović\",\"kostrena\",\"stadion žuknica\",\"3000\"],[\"rijeka\",\"ivan katalinić\",\"rijeka\",\"stadion na kantridi\",\"10275\"],[\"slaven belupo\",\"dražen besek\",\"koprivnica\",\"gradski stadion u koprivnici\",\"4000\"],[\"šibenik\",\"vjekoslav lokica\",\"šibenik\",\"stadion šubićevac\",\"8000\"],[\"tšk topolovac\",\"ivica vidović\",\"topolovac\",\"gradski stadion sisak\",\"8000\"],[\"varteks\",\"branko janžek\",\"varaždin\",\"stadion nk varteks\",\"10800\"],[\"zadar\",\"stanko mršić\",\"zadar\",\"stadion stanovi\",\"5860\"],[\"nk zagreb\",\"zlatko kranjčar\",\"zagreb\",\"stadion u kranjčevićevoj ulici\",\"8850\"]]\nQuestion = Is it true that sibenik plays at the stadion subicevac , with room for 10800?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    capacities = get_column_by_name(table_data, \"capacity\")\n    for team, stadium, capacity in zip(teams, stadiums, capacities):\n        if team.lower() == \"šibenik\":\n            answer = equal_to(stadium, \"stadion šubićevac\") and equal_to(capacity, \"10800\")\n            break \n    return answer\n\n### END"}
{"id": "1c082f62-aa6d-481e-978b-66bfbdbecd85", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1996 - 97 european challenge cup\ntable_data = [[\"team\", \"tries for\", \"tries against\", \"try diff\", \"points for\", \"points against\", \"points diff\"],[\"bourgoin\", \"27\", \"4\", \"+ 23\", \"196\", \"66\", \"+ 130\"],[\"bordeaux - bègles\", \"29\", \"13\", \"+ 16\", \"195\", \"99\", \"+ 96\"],[\"swansea\", \"28\", \"19\", \"+ 9\", \"207\", \"138\", \"+ 69\"],[\"gloucester\", \"17\", \"17\", \"0\", \"119\", \"123\", \"4\"],[\"ebbw vale\", \"6\", \"36\", \"30\", \"48\", \"243\", \"195\"],[\"london irish\", \"12\", \"30\", \"18\", \"90\", \"186\", \"96\"]]\nQuestion = Is it true that the bordeaux - bègles had 99 points against and + 96 points diff?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    points_against = get_column_by_name(table_data, \"points against\")\n    points_diff = get_column_by_name(table_data, \"points diff\")\n    for team, points_against, points_diff in zip(teams, points_against, points_diff):\n        if team.lower() == \"bordeaux - bègles\":\n            answer = equal_to(points_against, \"99\") and equal_to(points_diff, \"+ 96\")\n            break \n    return answer\n\n### END"}
{"id": "23b19f65-5cb2-49d7-9419-a4b98dfb932d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = türk telekom arena\ntable_data = [[\"project\", \"year\", \"location\", \"capacity\", \"suites\", \"architect\", \"cost\"],[\"faruk süren project\", \"1997 - 2001\", \"mecidiyeköy\", \"40482\", \"125 + 72 boxes without outside seating\", \"bbb architects\", \"118.5 million ( in 2014 dollars)\"],[\"mehmet cansun project\", \"2001\", \"mecidiyeköy\", \"35000\", \"132\", \"gs member architecture group\", \"35 million ( in 2014 dollars)\"],[\"özhan canaydın : back to süren 's project\", \"2002 - 2005\", \"aslantepe\", \"40482\", \"125\", \"bbb architects\", \"90 million ( in 2014 dollars)\"],[\"eren talu bidding project\", \"2007\", \"aslantepe\", \"52000\", \"150\", \"populous\", \"n / a\"],[\"özhan canaydın project\", \"2007\", \"aslantepe\", \"52652\", \"157\", \"asp stuttgart\", \"250 million ( in 2014 dollars)\"]]\nQuestion = Is it true that mecidiyeköy location has a capacity larger than 52000?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"location\")\n    capacities = get_column_by_name(table_data, \"capacity\")\n    answer = False\n    for location, capacity in zip(locations, capacities):\n        if location.lower() == \"mecidiyeköy\":\n            if greater(int(capacity), 52000):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "6ca8d6a5-07cb-4fa5-b41c-eb8e9edbdbab", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"game\", \"date\", \"home team\", \"result\", \"road team\"],[\"game 1\", \"april 14\", \"boston\", \"117 - 114\", \"los angeles\"],[\"game 2\", \"april 16\", \"boston\", \"113 - 106\", \"los angeles\"],[\"game 3\", \"april 17\", \"los angeles\", \"119 - 99\", \"boston\"],[\"game 4\", \"april 19\", \"los angeles\", \"105 - 108\", \"boston\"],[\"game 5\", \"april 21\", \"boston\", \"119 - 126\", \"los angeles\"],[\"game 6\", \"april 24\", \"los angeles\", \"109 - 112\", \"boston\"]]\nQuestion = Is it true that the score of game 2 was 113 - 106?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    games = get_column_by_name(table_data, \"game\")\n    results = get_column_by_name(table_data, \"result\")\n    for game, result in zip(games, results):\n        if game.lower() == \"game 2\":\n            answer = equal_to(result, \"113 - 106\")\n            break \n    return answer\n\n### END"}
{"id": "9c88a4cb-43b0-4312-9323-489e5693b0ae", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 issf world cup final (shotgun)\ntable_data = [[\"shooter\", \"event\", \"rank points\", \"score points\", \"total\"],[\"georgios achilleos ( cyp )\", \"wcf 2007\", \"defending champion\", \"defending champion\", \"defending champion\"],[\"vincent hancock ( usa )\", \"og beijing\", \"olympic gold medalist\", \"olympic gold medalist\", \"olympic gold medalist\"],[\"tore brovold ( nor )\", \"og beijing\", \"olympic silver medalist\", \"olympic silver medalist\", \"olympic silver medalist\"],[\"anthony terras ( fra )\", \"og beijing\", \"olympic bronze medalist\", \"olympic bronze medalist\", \"olympic bronze medalist\"],[\"ariel mauricio flores ( mex )\", \"wc kerrville\", \"15\", \"12\", \"27\"],[\"qu ridong ( chn )\", \"wc beijing\", \"15\", \"10\", \"25\"],[\"andrea benelli ( ita )\", \"wc belgrade\", \"10\", \"13\", \"23\"],[\"konstantin tsuranov ( rus )\", \"wc beijing\", \"10\", \"10\", \"20\"],[\"jan sychra ( cze )\", \"wc belgrade\", \"5\", \"13\", \"18\"],[\"valerio luchini ( ita )\", \"wc kerrville\", \"8\", \"10\", \"18\"],[\"leos hlavacek ( cze )\", \"wc suhl\", \"5\", \"11\", \"16\"],[\"abdullah alrashidi ( kuw )\", \"wc belgrade\", \"3\", \"12\", \"15\"]]\nQuestion = Is it true that andrea benelli ( ita ) is the shooter with 10 rank points and 13 score points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    shooters = get_column_by_name(table_data, \"shooter\")\n    rank_points = get_column_by_name(table_data, \"rank points\")\n    score_points = get_column_by_name(table_data, \"score points\")\n    for shooter, rank_point, score_point in zip(shooters, rank_points, score_points):\n        if shooter.lower() == \"andrea benelli ( ita )\":\n            answer = equal_to(rank_point, \"10\") and equal_to(score_point, \"13\")\n            break \n    return answer\n\n### END"}
{"id": "0ebf37a7-dbf6-4379-9c00-d7af5512cf84", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of solar car teams\ntable_data = [[\"year started\", \"number of cars\", \"current car\", \"car\", \"website\"],[\"1998\", \"7\", \"b - 7\", \"77\", \"english\"],[\"1992\", \"7\", \"ã‰clipse 7\", \"92\", \"french english\"],[\"1998\", \"6\", \"esteban vi\", \"55\", \"french english\"],[\"1992\", \"3\", \"isun\", \"66\", \"french english\"],[\"1997\", \"4\", \"phoenix ii\", \"116\", \"english\"],[\"1990\", \"10\", \"midnight sun x\", \"24\", \"english\"],[\"2008\", \"1\", \"arctic sun\", \"none\", \"english\"],[\"1988\", \"11\", \"aurum\", \"100\", \"english\"],[\"1991\", \"6\", \"sunstang\", \"96\", \"english\"],[\"2008\", \"1\", \"raven\", \"none\", \"english\"],[\"2004\", \"4\", \"schulich delta\", \"65\", \"english\"],[\"1989\", \"2\", \"ralos ii\", \"125\", \"english\"],[\"1999\", \"1\", \"xof1\", \"125\", \"english french\"]]\nQuestion = Is it true that the english website was started in 2008 with 2 as the number of cars?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years_started = get_column_by_name(table_data, \"year started\")\n    number_of_cars = get_column_by_name(table_data, \"number of cars\")\n    websites = get_column_by_name(table_data, \"website\")\n    for year_started, number_of_car, website in zip(years_started, number_of_cars, websites):\n        if website.lower() == \"english\":\n            answer = equal_to(year_started, \"2008\") and equal_to(number_of_car, \"2\")\n            break \n    return answer\n\n### END"}
{"id": "5c3bca2c-ffcd-44f4-b380-bd4e269587cd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 british grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"kimi räikkönen\", \"ferrari\", \"59\", \"1:21:43.074\", \"2\"],[\"fernando alonso\", \"mclaren - mercedes\", \"59\", \"+ 2.459\", \"3\"],[\"lewis hamilton\", \"mclaren - mercedes\", \"59\", \"+ 39.373\", \"1\"],[\"robert kubica\", \"bmw sauber\", \"59\", \"+ 53.319\", \"5\"],[\"felipe massa\", \"ferrari\", \"59\", \"+ 54.063\", \"4\"],[\"nick heidfeld\", \"bmw sauber\", \"59\", \"+ 56.336\", \"9\"],[\"heikki kovalainen\", \"renault\", \"58\", \"+ 1 lap\", \"7\"],[\"giancarlo fisichella\", \"renault\", \"58\", \"+ 1 lap\", \"8\"],[\"rubens barrichello\", \"honda\", \"58\", \"+ 1 lap\", \"14\"],[\"jenson button\", \"honda\", \"58\", \"+ 1 lap\", \"18\"],[\"david coulthard\", \"red bull - renault\", \"58\", \"+ 1 lap\", \"12\"],[\"nico rosberg\", \"williams - toyota\", \"58\", \"+ 1 lap\", \"17\"],[\"alexander wurz\", \"williams - toyota\", \"58\", \"+ 1 lap\", \"13\"],[\"takuma sato\", \"super aguri - honda\", \"57\", \"+ 2 laps\", \"21\"],[\"christijan albers\", \"spyker - ferrari\", \"57\", \"+ 2 laps\", \"22\"],[\"vitantonio liuzzi\", \"toro rosso - ferrari\", \"53\", \"gearbox\", \"16\"],[\"jarno trulli\", \"toyota\", \"43\", \"handling\", \"10\"],[\"anthony davidson\", \"super aguri - honda\", \"35\", \"mechanical\", \"19\"],[\"scott speed\", \"toro rosso - ferrari\", \"29\", \"collision\", \"15\"],[\"ralf schumacher\", \"toyota\", \"22\", \"wheel\", \"6\"],[\"adrian sutil\", \"spyker - ferrari\", \"16\", \"engine\", \"20\"],[\"mark webber\", \"red bull - renault\", \"8\", \"hydraulics\", \"11\"]]\nQuestion = Is it true that driver fernando alonso raced 59 laps?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    laps = get_column_by_name(table_data, \"laps\")\n    for driver, lap in zip(drivers, laps):\n        if driver.lower() == \"fernando alonso\":\n            answer = equal_to(lap, \"59\")\n            break \n    return answer\n\n### END"}
{"id": "764c5389-d85b-42cd-81cf-8a4116da92bd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of philippine submissions for the academy award for best foreign language film\ntable_data = [[\"year (ceremony)\",\"film title used in nomination\",\"original title\",\"director\",\"result\"],[\"1953 (26th)\",\"genghis khan\",\"genghis khan\",\"manuel conde\",\"not nominated\"],[\"1956 (29th)\",\"anak dalita\",\"anak dalita\",\"lamberto v avellana\",\"not nominated\"],[\"1961 (34th)\",\"the moises padilla story\",\"the moises padilla story\",\"gerardo de león\",\"not nominated\"],[\"1967 (40th)\",\"because of a flower\",\"dahil sa isang bulaklak\",\"luis nepomuceno\",\"not nominated\"],[\"1976 (49th)\",\"ganito kami noon , paano kayo ngayon\",\"ganito kami noon , paano kayo ngayon\",\"eddie romero\",\"not nominated\"],[\"1984 (57th)\",\"of the flesh\",\"karnal\",\"marilou diaz - abaya\",\"not nominated\"],[\"1985 (58th)\",\"my country\",\"bayan ko : kapit sa patalim\",\"lino brocka\",\"not nominated\"],[\"1995 (68th)\",\"harvest home\",\"inagaw mo ang lahat sa akin\",\"carlos sigiuon - reyna\",\"not nominated\"],[\"1996 (69th)\",\"dead sure\",\"segurista\",\"tikoy aguiluz\",\"not nominated\"],[\"1997 (70th)\",\"milagros\",\"milagros\",\"marilou diaz - abaya\",\"not nominated\"],[\"1998 (71st)\",\"in the navel of the sea\",\"sa pusod ng dagat\",\"marilou diaz - abaya\",\"not nominated\"],[\"1999 (72nd)\",\"the kite\",\"saranggola\",\"gil portes\",\"not nominated\"],[\"2000 (73rd)\",\"anak\",\"anak\",\"rory quintos\",\"not nominated\"],[\"2001 (74th)\",\"in the bosom of the enemy\",\"gatas sa dibdib ng kaaway\",\"gil portes\",\"not nominated\"],[\"2002 (75th)\",\"small voices\",\"mga munting tinig\",\"gil portes\",\"not nominated\"],[\"2003 (76th)\",\"dekada '70\",\"dekada '70\",\"chito roño\",\"not nominated\"],[\"2004 (77th)\",\"crying ladies\",\"crying ladies\",\"mark meily\",\"not nominated\"],[\"2006 (79th)\",\"the blossoming of maximo oliveros\",\"ang pagdadalaga ni maximo oliveros\",\"auraeus solito\",\"not nominated\"],[\"2007 (80th)\",\"donsol\",\"donsol\",\"adolfo alix , jr\",\"not nominated\"],[\"2008 (81st)\",\"ploning\",\"ploning\",\"dante nico garcia\",\"not nominated\"],[\"2009 (82nd)\",\"grandfather is dead\",\"ded na si lolo\",\"soxie topacio\",\"not nominated\"],[\"2010 (83rd)\",\"noy\",\"noy\",\"dondon santos\",\"not nominated\"],[\"2011 (84th)\",\"the woman in the septic tank\",\"ang babae sa septic tank\",\"marlon rivera\",\"not nominated\"],[\"2012 (85th)\",\"bwakaw\",\"bwakaw\",\"jun robles lana\",\"not nominated\"]]\nQuestion = Is it true that the movie , milagros , was submitted for nomination ifor the 1997 award ceremony?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_year = get_column_by_name(table_data, \"year (ceremony)\")\n    column_film_title = get_column_by_name(table_data, \"film title used in nomination\")\n    answer = False\n    for year, film_title in zip(column_year, column_film_title):\n        if \"1997\" in year and \"milagros\" in film_title.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "4f14f1e5-0885-4265-b292-fff41da36b18", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = ádammo\ntable_data = [[\"año\", \"trabajo nominado\", \"premio\", \"categoría\", \"country\", \"resultado\"],[\"2009\", \"adammo\", \"mtv latin america\", \"revelation artist\", \"colombia\", \"nominate\"],[\"2009\", \"adammo\", \"mtv latin america\", \"best new artist : center\", \"colombia\", \"winner\"],[\"2009\", \"adammo\", \"mtv latin america\", \"prize zone\", \"colombia\", \"nominate\"],[\"2010\", \"adammo\", \"premios apdayc\", \"rock group of the year\", \"perú\", \"winner\"],[\"2010\", \"adammo\", \"premios apdayc\", \"artist of the year\", \"perú\", \"nominate\"],[\"2010\", \"adammo\", \"premios orgullosamente latino\", \"grupo latin of the year\", \"mexico\", \"nominate\"],[\"2010\", \"algún día\", \"latin grammy awards\", \"short video of the year\", \"eeuu\", \"nominate\"],[\"2010\", \"adammo\", \"premios clarín\", \"best music video of the year\", \"argentina\", \"nominate\"],[\"2010\", \"adammo\", \"premios clarín\", \"best international breakthrough\", \"argentina\", \"nominate\"],[\"2010\", \"adammo\", \"premios clarín\", \"best international album\", \"argentina\", \"nominate\"],[\"2010\", \"algún día\", \"radio can\", \"best video\", \"colombia\", \"nominate\"],[\"2011\", \"adammo\", \"premios apdayc\", \"rock group of the year\", \"perú\", \"winner\"],[\"2011\", \"adammo\", \"mtv europe music awards\", \"world wide act latin american\", \"europa\", \"nominate\"],[\"2011\", \"adammo\", \"zona joven\", \"best pop rock peruano\", \"perú\", \"winner\"],[\"2012\", \"siento que caigo\", \"radio can\", \"song of the year\", \"perú\", \"nominate\"]]\nQuestion = Is it true that short video of the year was the categoria when argentina was the country?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    categories = get_column_by_name(table_data, \"categoría\")\n    countries = get_column_by_name(table_data, \"country\")\n    answer = False\n    for category, country in zip(categories, countries):\n        if \"short video of the year\" in category.lower() and \"argentina\" in country.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "1c7f082c-e7d0-43da-b205-9fdc16d9193d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 football league one\ntable_data = [[\"team\",\"outgoing manager\",\"manner of departure\",\"date of vacancy\",\"replaced by\",\"date of appointment\",\"position in table\"],[\"milton keynes dons\",\"paul ince\",\"signed by blackburn rovers (mutual consent)\",\"22 june 2008\",\"roberto di matteo\",\"2 july 2008\",\"pre - season\"],[\"cheltenham town\",\"keith downing\",\"mutual consent\",\"13 september 2008\",\"martin allen\",\"15 september 2008\",\"24th\"],[\"colchester united\",\"geraint williams\",\"mutual consent\",\"22 september 2008\",\"paul lambert\",\"24 september 2008\",\"23rd\"],[\"carlisle united\",\"john ward\",\"mutual consent\",\"3 november 2008\",\"greg abbott\",\"5 december 2008\",\"20th\"],[\"huddersfield town\",\"stan ternent\",\"mutual consent\",\"4 november 2008\",\"lee clark\",\"11 december 2008\",\"16th\"],[\"swindon town\",\"maurice malpas\",\"mutual consent\",\"14 november 2008\",\"danny wilson\",\"26 december 2008\",\"16th\"],[\"crewe alexandra\",\"steve holland\",\"contract terminated\",\"18 november 2008\",\"guðjón þórðarson\",\"24 december 2008\",\"24th\"],[\"hartlepool united\",\"danny wilson\",\"contract terminated\",\"15 december 2008\",\"chris turner\",\"15 december 2008\",\"13th\"],[\"leeds united\",\"gary mcallister\",\"contract terminated\",\"21 december 2008\",\"simon grayson\",\"23 december 2008\",\"9th\"],[\"walsall\",\"jimmy mullen\",\"contract terminated\",\"10 january 2009\",\"chris hutchings\",\"20 january 2009\",\"12th\"],[\"leyton orient\",\"martin ling\",\"mutual consent\",\"18 january 2009\",\"geraint williams\",\"5 february 2009\",\"21st\"],[\"yeovil town\",\"russell slade\",\"contract terminated\",\"16 february 2009\",\"terry skiverton\",\"18 february 2009\",\"16th\"],[\"brighton & hove albion\",\"micky adams\",\"contract terminated\",\"21 february 2009\",\"russell slade\",\"6 march 2009\",\"21st\"]]\nQuestion = Is it true that the 16th vacancy happened on november 4 , 2008?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    date_of_vacancy = get_column_by_name(table_data, \"date of vacancy\")\n    answer = equal_to(date_of_vacancy[4], \"4 november 2008\")\n    return answer\n\n### END"}
{"id": "77285251-2dd2-41fa-9056-406b2bc3db6b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = gambrinus liga\ntable_data = [[\"season\", \"champions\", \"runner - up\", \"third place\", \"top goalscorer\", \"club\"],[\"1993 - 94\", \"sparta prague (1)\", \"slavia prague\", \"baník ostrava\", \"horst siegl (20)\", \"sparta prague\"],[\"1994 - 95\", \"sparta prague (2)\", \"slavia prague\", \"fc brno\", \"radek drulák (15)\", \"drnovice\"],[\"1995 - 96\", \"slavia prague (1)\", \"sigma olomouc\", \"baumit jablonec\", \"radek drulák (22)\", \"drnovice\"],[\"1996 - 97\", \"sparta prague (3)\", \"slavia prague\", \"baumit jablonec\", \"horst siegl (19)\", \"sparta prague\"],[\"1997 - 98\", \"sparta prague (4)\", \"slavia prague\", \"sigma olomouc\", \"horst siegl (13)\", \"sparta prague\"],[\"1998 - 99\", \"sparta prague (5)\", \"teplice\", \"slavia prague\", \"horst siegl (18)\", \"sparta prague\"],[\"1999 - 00\", \"sparta prague (6)\", \"slavia prague\", \"drnovice\", \"vratislav lokvenc (21)\", \"sparta prague\"],[\"2000 - 01\", \"sparta prague (7)\", \"slavia prague\", \"sigma olomouc\", \"vítězslav tuma (15)\", \"drnovice\"],[\"2001 - 02\", \"slovan liberec (1)\", \"sparta prague\", \"viktoria žižkov\", \"jiří štajner (15)\", \"slovan liberec\"],[\"2002 - 03\", \"sparta prague (8)\", \"slavia prague\", \"viktoria žižkov\", \"jiří kowalík (16)\", \"1. fc synot\"],[\"2003 - 04\", \"baník ostrava (1)\", \"sparta prague\", \"sigma olomouc\", \"marek heinz (19)\", \"baník ostrava\"],[\"2004 - 05\", \"sparta prague (9)\", \"slavia prague\", \"teplice\", \"tomáš jun (14)\", \"sparta prague\"],[\"2005 - 06\", \"slovan liberec (2)\", \"mladá boleslav\", \"slavia prague\", \"milan ivana (11)\", \"fc slovácko\"],[\"2006 - 07\", \"sparta prague (10)\", \"slavia prague\", \"mladá boleslav\", \"luboš pecka (16)\", \"mladá boleslav\"],[\"2007 - 08\", \"slavia prague (2)\", \"sparta prague\", \"baník ostrava\", \"václav svěrkoš (15)\", \"baník ostrava\"],[\"2008 - 09\", \"slavia prague (3)\", \"sparta prague\", \"slovan liberec\", \"andrej kerić (15)\", \"slovan liberec\"],[\"2009 - 10\", \"sparta prague (11)\", \"jablonec\", \"baník ostrava\", \"michal ordoš (12)\", \"sigma olomouc\"],[\"2010 - 11\", \"viktoria plzeň (1)\", \"sparta prague\", \"jablonec\", \"david lafata (19)\", \"jablonec\"],[\"2011 - 12\", \"slovan liberec (3)\", \"sparta prague\", \"viktoria plzeň\", \"david lafata (25)\", \"jablonec\"]]\nQuestion = Is it true that the 2008 - 09 season had slavia prague (3) as the champion and sparta praque as the runner - up?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    champions = get_column_by_name(table_data, \"champions\")\n    runner_ups = get_column_by_name(table_data, \"runner - up\")\n    for season, champion, runner_up in zip(seasons, champions, runner_ups):\n        if season == \"2008 - 09\":\n            answer = equal_to(champion, \"slavia prague (3)\") and equal_to(runner_up, \"sparta prague\")\n            break \n    return answer\n\n### END"}
{"id": "3022db09-ec2e-46d1-a3c8-54d09bdf839b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = lynyrd skynyrd\ntable_data = [[\"date of release\", \"title\", \"billboard peak\", \"riaa cert\", \"label\"],[\"august 13 , 1973\", \"(pronounced 'lĕh - 'nérd 'skin - 'nérd)\", \"27\", \"2 platinum\", \"mca\"],[\"april 15 , 1974\", \"second helping\", \"12\", \"2 platinum\", \"mca\"],[\"march 24 , 1975\", \"nuthin' fancy\", \"9\", \"platinum\", \"mca\"],[\"february 2 , 1976\", \"gimme back my bullets\", \"20\", \"gold\", \"mca\"],[\"october 17 , 1977\", \"street survivors\", \"5\", \"2 platinum\", \"mca\"],[\"june 11 , 1991\", \"lynyrd skynyrd 1991\", \"64\", \"-\", \"atlantic\"],[\"february 16 , 1993\", \"the last rebel\", \"64\", \"-\", \"atlantic\"],[\"august 9 , 1994\", \"endangered species\", \"-\", \"-\", \"capricorn\"],[\"april 29 , 1997\", \"twenty\", \"97\", \"-\", \"cmc\"],[\"august 10 , 1999\", \"edge of forever\", \"96\", \"-\", \"cmc\"],[\"september 12 , 2000\", \"christmas time again\", \"38\", \"-\", \"sanctuary\"],[\"may 20 , 2003\", \"vicious cycle\", \"30\", \"-\", \"sanctuary\"],[\"september 29 , 2009\", \"god & guns\", \"18\", \"-\", \"roadrunner\"],[\"august 21 , 2012\", \"last of a dyin' breed\", \"14\", \"-\", \"roadrunner\"]]\nQuestion = Is it true that the album released on september 12 , 2000 through the record label sanctuary peaked on the billboard charts at 38?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    release_dates = get_column_by_name(table_data, \"date of release\")\n    billboard_peaks = get_column_by_name(table_data, \"billboard peak\")\n    labels = get_column_by_name(table_data, \"label\")\n    for release_date, billboard_peak, label in zip(release_dates, billboard_peaks, labels):\n        if release_date.lower() == \"september 12 , 2000\" and label.lower() == \"sanctuary\":\n            answer = equal_to(billboard_peak, \"38\")\n            break \n    return answer\n\n### END"}
{"id": "6553bf2d-acd4-429f-b0fb-a0a39715e78c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = history of test cricket from 1901 to 1914\ntable_data = [[\"date\", \"home captain\", \"away captain\", \"venue\", \"result\"],[\"15 , 16 , 18 , 19 , 20 , 21 dec 1911\", \"clem hill\", \"johnny douglas\", \"sydney cricket ground\", \"aus by 146 runs\"],[\"30 dec , 1 , 2 , 3 jan 1911 / 2\", \"clem hill\", \"johnny douglas\", \"melbourne cricket ground\", \"eng by 8 wkts\"],[\"12 , 13 , 15 , 16 , 17 jan 1912\", \"clem hill\", \"johnny douglas\", \"adelaide oval\", \"eng by 7 wkts\"],[\"9 , 10 , 12 , 13 feb 1912\", \"clem hill\", \"johnny douglas\", \"melbourne cricket ground\", \"eng by inns&225 runs\"],[\"23 , 24 , 26 , 27 , 28 , 29 feb , 1 mar 1912\", \"clem hill\", \"johnny douglas\", \"sydney cricket ground\", \"eng by 70 runs\"]]\nQuestion = Is it true that the sydney cricket ground was the venue used from february 23rd - march 1st , 1912?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    venues = get_column_by_name(table_data, \"venue\")\n    for date, venue in zip(dates, venues):\n        if \"23 , 24 , 26 , 27 , 28 , 29 feb , 1 mar 1912\" in date.lower():\n            answer = equal_to(venue, \"sydney cricket ground\")\n            break \n    return answer\n\n### END"}
{"id": "0a52e766-4f31-40b7-af9d-f5a49fe020dd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1994 nhl entry draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"261\", \"per gustafsson\", \"defence\", \"sweden\", \"florida panthers\", \"hv71 (sweden)\"],[\"262\", \"jeremy stevenson\", \"left wing\", \"united states\", \"mighty ducks of anaheim\", \"sault ste marie greyhounds (ohl)\"],[\"263\", \"rob mara\", \"left wing\", \"united states\", \"chicago blackhawks\", \"belmont hill high school (hs - massachusetts)\"],[\"264\", \"jason issel\", \"left wing\", \"canada\", \"winnipeg jets\", \"prince albert raiders (whl)\"],[\"265\", \"steve nimigon\", \"left wing\", \"canada\", \"hartford whalers\", \"niagara falls thunder (ohl)\"],[\"266\", \"ladislav benysek\", \"defence\", \"czech republic\", \"edmonton oilers\", \"olomouc hc (czech republic)\"],[\"267\", \"jamie butt\", \"left wing\", \"canada\", \"ny rangers\", \"tacoma rockets (whl)\"],[\"268\", \"brian white\", \"defence\", \"united states\", \"tampa bay lightning\", \"arlington catholic high school (hs - massachusetts)\"],[\"269\", \"mike hanson\", \"centre\", \"united states\", \"new jersey devils\", \"minot high school (hs - north dakota)\"],[\"270\", \"jan lipiansky\", \"forward\", \"slovakia\", \"philadelphia flyers\", \"slovan bratislava (slovakia)\"],[\"271\", \"david beauregard\", \"left wing\", \"canada\", \"san jose sharks\", \"st hyacinthe lasers (qmjhl)\"],[\"272\", \"dick tarnstrom\", \"defence\", \"sweden\", \"new york islanders\", \"aik (sweden)\"],[\"273\", \"robert longpre\", \"centre\", \"canada\", \"vancouver canucks\", \"medicine hat tigers (whl)\"],[\"274\", \"antti tormanen\", \"left wing\", \"finland\", \"ottawa senators\", \"jokerit (finland)\"],[\"275\", \"sergei tertyshny\", \"defence\", \"russia\", \"washington capitals\", \"chelyabinsk traktor (russia)\"],[\"276\", \"scott fankhouser\", \"goaltender\", \"united states\", \"st louis blues\", \"university of massachusetts lowell (ncaa)\"],[\"277\", \"shayne wright\", \"defence\", \"canada\", \"buffalo sabres\", \"owen sound platers (ohl)\"],[\"278\", \"ross parsons\", \"defence\", \"canada\", \"montreal canadiens\", \"regina pats (whl)\"],[\"279\", \"pavel torgayev\", \"centre\", \"russia\", \"calgary flames\", \"tps (finland)\"],[\"280\", \"chris szysky\", \"right wing\", \"canada\", \"dallas stars\", \"swift current broncos (whl)\"],[\"281\", \"andrei yakhanov\", \"defence\", \"russia\", \"boston bruins\", \"ufa salavat yulayev (russia)\"],[\"282\", \"doug nolan\", \"defence\", \"united states\", \"toronto maple leafs\", \"catholic memorial high school (hs - massachusetts)\"],[\"283\", \"toivo suursoo\", \"left wing\", \"estonia\", \"detroit red wings\", \"krylya sovetov moscow (russia)\"],[\"284\", \"brian leitza\", \"goaltender\", \"united states\", \"pittsburgh penguins\", \"sioux city musketeers (ushl)\"],[\"285\", \"steven low\", \"defence\", \"canada\", \"quebec nordiques\", \"sherbrooke faucons (qmjhl)\"],[\"286\", \"kim johnsson\", \"defence\", \"sweden\", \"new york rangers\", \"malmã if (sweden)\"]]\nQuestion = Is it true that the nationality of shayne wright is canadian?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    answer = False\n    for player, nationality in zip(players, nationalities):\n        if player.lower() == \"shayne wright\":\n            answer = nationality.lower() == \"canada\"\n            break\n    return answer\n\n### END"}
{"id": "551b1b12-5856-47d5-8e7f-45fb496c211d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of world cups and world championships for juniors and youth\ntable_data = [[\"sport\",\"competition name\",\"competing entities\",\"age groups\",\"held every\"],[\"aquatics\",\"fina world junior swimming championships\",\"individuals\",\"17 or younger\",\"two years\"],[\"athletics\",\"iaaf world junior championships in athletics\",\"individuals\",\"18 - 19\",\"two years\"],[\"athletics\",\"iaaf world youth championships in athletics\",\"individuals\",\"17 or younger\",\"two years\"],[\"badminton\",\"bwf world junior championships\",\"individuals\",\"19 or younger\",\"one year\"],[\"bandy\",\"bandy world championship u - 23\",\"nations\",\"under - 23\",\"two years\"],[\"bandy\",\"bandy world championship u - 19\",\"nations\",\"under - 19\",\"two years\"],[\"bandy\",\"bandy world championship u - 17\",\"nations\",\"under - 17\",\"two years\"],[\"bandy\",\"bandy world championship u - 15\",\"nations\",\"under - 15\",\"two years\"],[\"baseball\",\"world junior baseball championship\",\"nations\",\"under - 18\",\"one year through 2000 , now two years\"],[\"baseball\",\"world youth baseball championship\",\"nations\",\"under - 16\",\"one year through 1998 , two years starting in 2001\"],[\"baseball\",\"big league world series\",\"communities\",\"16 - 18\",\"one year\"],[\"baseball\",\"senior league world series\",\"communities\",\"14 - 16\",\"one year\"],[\"baseball\",\"junior league world series\",\"communities\",\"13 - 15\",\"one year\"],[\"baseball\",\"little league world series\",\"communities\",\"13 or younger\",\"one year\"],[\"basketball\",\"fiba under - 21 world championship\",\"nations\",\"21 or younger\",\"four years until 2005\"],[\"basketball\",\"fiba under - 19 world championship\",\"nations\",\"19 or younger\",\"four years until 2007 , now two years\"],[\"basketball\",\"fiba under - 17 world championship\",\"nations\",\"17 or younger\",\"two years\"],[\"basketball\",\"fiba 3x3 u - 18 world championships\",\"nations\",\"18 or younger\",\"year\"],[\"cricket\",\"u - 19 cricket world cup\",\"nations\",\"19 or younger\",\"two years\"],[\"figure skating\",\"world junior figure skating championships\",\"individuals\",\"13 - 19\",\"one year\"],[\"football (soccer)\",\"fifa u - 20 world cup\",\"nations\",\"20 or younger\",\"two years\"],[\"football (soccer)\",\"fifa u - 17 world cup\",\"nations\",\"17 or younger\",\"two years\"],[\"ice hockey\",\"iihf world u20 championship\",\"nations\",\"20 or younger\",\"year\"],[\"ice hockey\",\"iihf world u18 championships\",\"nations\",\"18 or younger\",\"year\"],[\"lacrosse\",\"under - 19 world lacrosse championships\",\"nations\",\"19 or younger\",\"four years\"],[\"rowing\",\"junior world rowing championships\",\"nations\",\"18 or younger\",\"year\"],[\"rugby union\",\"irb junior world championship\",\"nations\",\"20 or younger\",\"year\"],[\"rugby union\",\"under 19 rugby world championship\",\"nations\",\"19 or younger\",\"year\"],[\"rugby union\",\"under 21 rugby world championship\",\"nations\",\"21 or younger\",\"year\"],[\"speed skating\",\"world junior speed skating championships\",\"individuals and nations\",\"19 or younger\",\"one year\"],[\"speed skating\",\"isu junior world cup speed skating\",\"individuals and nations\",\"19 or younger\",\"one year\"],[\"sailing\",\"isaf youth sailing world championships\",\"nations\",\"under 19 's\",\"annually\"],[\"sailing\",\"isaf classes world championship\",\"held in the optimist , splash , zoom , rs tera etc\",\"19 or younger\",\"various\"],[\"table tennis\",\"world junior table tennis championships\",\"individuals and nations\",\"18 or younger\",\"one year\"],[\"volleyball\",\"men 's junior volleyball world championship\",\"nations\",\"21 or younger\",\"two years\"],[\"volleyball\",\"boys youth volleyball world championship\",\"nations\",\"19 or younger\",\"two years\"]]\nQuestion = Is it true that the u - 19 cricket world cup is held one time every two years?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    competition_names = get_column_by_name(table_data, \"competition name\")\n    held_every = get_column_by_name(table_data, \"held every\")\n    for competition_name, held in zip(competition_names, held_every):\n        if competition_name.lower() == \"u - 19 cricket world cup\":\n            answer = equal_to(held, \"two years\")\n            break \n    return answer\n\n### END"}
{"id": "f213fe34-4b34-4c51-9f51-540a88e08633", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"class\", \"part 1\", \"part 2\", \"part 3\", \"part 4\", \"verb meaning\"],[\"1\", \"rīdan\", \"rād\", \"ridon\", \"riden\", \"to ride\"],[\"2a\", \"frēosan\", \"frēas\", \"fruron\", \"froren\", \"to freeze\"],[\"2b\", \"lūcan\", \"lēac\", \"lucon\", \"locen\", \"to lock\"],[\"3a\", \"bindan\", \"band\", \"bundon\", \"bunden\", \"to bind\"],[\"3b\", \"weorþan\", \"wearþ\", \"wurdon\", \"worden\", \"to become\"],[\"4\", \"beran\", \"bær\", \"bǣron\", \"boren\", \"to bear\"],[\"5\", \"lesan\", \"læs\", \"lǣron\", \"leren\", \"to gather\"],[\"6\", \"alan\", \"ōl\", \"ōlon\", \"alen\", \"to nourish , to grow\"],[\"7a\", \"hātan\", \"hēt\", \"hēton\", \"hāten\", \"to call , to be called\"],[\"7b\", \"hlēapan\", \"hlēop\", \"hlēppon\", \"hlēapen\", \"to leap\"],[\"7c\", \"healdan\", \"hēold\", \"hēoldon\", \"healden\", \"to hold\"],[\"7d\", \"rǣdan\", \"rēd\", \"rēdon\", \"rǣden\", \"to advise , to interpret\"]]\nQuestion = Is it true that class 1 's verb meaning is to freeze?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    classes = get_column_by_name(table_data, \"class\")\n    verb_meanings = get_column_by_name(table_data, \"verb meaning\")\n    for class_, verb_meaning in zip(classes, verb_meanings):\n        if class_.lower() == \"1\":\n            answer = equal_to(verb_meaning, \"to freeze\")\n            break \n    return answer\n\n### END"}
{"id": "7b3bb277-216e-4454-8a75-156c169dfe68", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1949 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"5.13 (43)\", \"richmond\", \"20.12 (132)\", \"glenferrie oval\", \"13000\", \"23 april 1949\"],[\"footscray\", \"12.7 (79)\", \"geelong\", \"9.14 (68)\", \"western oval\", \"15500\", \"23 april 1949\"],[\"south melbourne\", \"12.13 (85)\", \"st kilda\", \"12.10 (82)\", \"lake oval\", \"9000\", \"23 april 1949\"],[\"north melbourne\", \"7.14 (56)\", \"essendon\", \"10.15 (75)\", \"arden street oval\", \"20000\", \"23 april 1949\"],[\"melbourne\", \"12.8 (80)\", \"collingwood\", \"11.16 (82)\", \"mcg\", \"29000\", \"23 april 1949\"],[\"fitzroy\", \"15.16 (106)\", \"carlton\", \"15.15 (105)\", \"brunswick street oval\", \"25000\", \"23 april 1949\"]]\nQuestion = Is it true that south melbourne 's home side score is 12.13 (85)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    for home_team, home_team_score in zip(home_teams, home_team_scores):\n        if home_team.lower() == \"south melbourne\":\n            answer = equal_to(home_team_score, \"12.13 (85)\")\n            break \n    return answer\n\n### END"}
{"id": "35349acb-e21e-4a83-9e9a-621764f6469d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of largest airlines in central america & the caribbean\ntable_data = [[\"rank\", \"airline\", \"country\", \"fleet size\", \"remarks\"],[\"1\", \"caribbean airlines\", \"trinidad and tobago\", \"22\", \"largest airline in the caribbean\"],[\"2\", \"liat\", \"antigua and barbuda\", \"17\", \"second largest airline in the caribbean\"],[\"3\", \"cubana de aviaciã cubicn\", \"cuba\", \"14\", \"operational since 1929\"],[\"4\", \"inselair\", \"curacao\", \"12\", \"operational since 2006\"],[\"5\", \"dutch antilles express\", \"curacao\", \"4\", \"curacao second national carrier\"],[\"6\", \"air jamaica\", \"trinidad and tobago\", \"5\", \"parent company is caribbean airlines\"],[\"7\", \"tiara air\", \"aruba\", \"3\", \"aruba 's national airline\"]]\nQuestion = Is it true that the airline dutch antilles express is curacao second national carrier?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    airlines = get_column_by_name(table_data, \"airline\")\n    remarks = get_column_by_name(table_data, \"remarks\")\n    answer = False\n    for airline, remark in zip(airlines, remarks):\n        if \"dutch antilles express\" in airline.lower() and \"curacao second national carrier\" in remark.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "6da40d84-cacf-4002-9e29-ad5e97e9b797", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of teachers (uk tv series) episodes\ntable_data = [[\"no overall\",\"no in series\",\"title\",\"director\",\"writer\",\"original air date\",\"production code\"],[\"32\", \"1\", \"episode 1\", \"barnaby southcomb\", \"richard stoneman\", \"26 october 2004\", \"401\"],[\"33\", \"2\", \"episode 2\", \"barnaby southcomb\", \"ed roe\", \"3 november 2004\", \"402\"],[\"34\", \"3\", \"episode 3\", \"barnaby southcomb\", \"charlie martin\", \"10 november 2004\", \"403\"],[\"35\", \"4\", \"episode 4\", \"sean grundy\", \"linton chiswick\", \"17 november 2004\", \"404\"],[\"36\", \"5\", \"episode 5\", \"sean grundy\", \"jack lothian\", \"24 november 2004\", \"405\"],[\"37\", \"6\", \"episode 6\", \"sean grundy\", \"tony basgallop\", \"1 december 2004\", \"406\"],[\"38\", \"7\", \"episode 7\", \"iain b macdonald\", \"charlie martin\", \"8 december 2004\", \"407\"],[\"39\", \"8\", \"episode 8\", \"iain b macdonald\", \"richard stoneman\", \"15 december 2004\", \"408\"]]\nQuestion = Is it true that episode 7 is is number 38 overall?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    no_overall = get_column_by_name(table_data, \"no overall\")\n    titles = get_column_by_name(table_data, \"title\")\n    for no, title in zip(no_overall, titles):\n        if title.lower() == \"episode 7\":\n            answer = equal_to(no, \"38\")\n            break \n    return answer\n\n### END"}
{"id": "3a4aa250-104d-4b46-936a-161b5039f766", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1983 nfl draft\ntable_data = [[\"pick\", \"nfl team\", \"player\", \"position\", \"college\"],[\"29\", \"baltimore colts\", \"vernon maxwell\", \"linebacker\", \"arizona state\"],[\"30\", \"houston oilers\", \"harvey salem\", \"tackle\", \"california\"],[\"31\", \"denver broncos\", \"mark cooper\", \"tackle\", \"miami (fl)\"],[\"32\", \"los angeles rams\", \"henry ellard\", \"wide receiver\", \"fresno state\"],[\"33\", \"chicago bears\", \"mike richardson\", \"defensive back\", \"arizona state\"],[\"34\", \"kansas city chiefs\", \"dave lutz\", \"guard\", \"georgia tech\"],[\"35\", \"philadelphia eagles\", \"wes hopkins\", \"safety\", \"southern methodist\"],[\"36\", \"los angeles rams\", \"mike wilcher\", \"linebacker\", \"north carolina\"],[\"37\", \"new york giants\", \"leonard marshall\", \"defensive end\", \"louisiana state\"],[\"38\", \"new orleans saints\", \"steve korte\", \"center\", \"arkansas\"],[\"39\", \"buffalo bills\", \"darryl talley\", \"linebacker\", \"west virginia\"],[\"40\", \"detroit lions\", \"rich strenger\", \"tackle\", \"michigan\"],[\"41\", \"cleveland browns\", \"ron brown\", \"cornerback\", \"arizona state\"],[\"42\", \"houston oilers\", \"keith bostic\", \"defensive back\", \"michigan\"],[\"43\", \"atlanta falcons\", \"james britt\", \"defensive back\", \"louisiana state\"],[\"44\", \"st louis cardinals\", \"cedric mack\", \"cornerback\", \"baylor\"],[\"45\", \"tampa bay buccaneers\", \"randy grimes\", \"center\", \"baylor\"],[\"46\", \"philadelphia eagles\", \"jody schulz\", \"linebacker\", \"east carolina\"],[\"47\", \"new england patriots\", \"darryal wilson\", \"wide receiver\", \"tennessee\"],[\"48\", \"green bay packers\", \"dave drechsler\", \"guard\", \"north carolina\"],[\"49\", \"san francisco 49ers\", \"roger craig\", \"running back\", \"nebraska\"],[\"50\", \"dallas cowboys\", \"mike walter\", \"linebacker\", \"oregon\"],[\"51\", \"new york jets\", \"johnny hector\", \"running back\", \"texas a&m\"],[\"52\", \"pittsburgh steelers\", \"wayne capers\", \"wide receiver\", \"kansas\"],[\"53\", \"cincinnati bengals\", \"ray horton\", \"safety\", \"washington\"],[\"54\", \"los angeles raiders\", \"bill pickel\", \"defensive tackle\", \"rutgers\"],[\"55\", \"miami dolphins\", \"mike charles\", \"defensive tackle\", \"syracuse\"]]\nQuestion = Is it true that pick number 34 was a guard for the kansas city chiefs?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    picks = get_column_by_name(table_data, \"pick\")\n    positions = get_column_by_name(table_data, \"position\")\n    teams = get_column_by_name(table_data, \"nfl team\")\n    for pick, position, team in zip(picks, positions, teams):\n        if pick == \"34\":\n            answer = equal_to(position.lower(), \"guard\") and equal_to(team.lower(), \"kansas city chiefs\")\n            break \n    return answer\n\n### END"}
{"id": "32b28f35-d1ac-4f50-8121-c0b9c66be7c0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = statistics relating to enlargement of the european union\ntable_data = [[\"member countries\", \"population\", \"area (km square)\", \"gdp (billion us)\", \"gdp per capita (us)\"],[\"belgium\", \"9052707\", \"30528\", \"58.316\", \"46878\"],[\"france\", \"44788852\", \"674843\", \"312.966\", \"40690\"],[\"west germany\", \"54292038\", \"248717\", \"400.554\", \"41168\"],[\"italy\", \"49476000\", \"301336\", \"265.192\", \"30116\"],[\"luxembourg\", \"310291\", \"2586\", \"2.938\", \"113533\"],[\"netherlands\", \"11186847\", \"41526\", \"83.351\", \"50355\"],[\"ec6 (1958)\", \"169106736\", \"1299536\", \"1123.317\", \"6643\"]]\nQuestion = Is it true that there are no nations that have a population under 44788852 and a gdp of greater than 83.351 billion?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less(num1, num2):\n    return num1 < num2\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    populations = get_column_by_name(table_data, \"population\")\n    gdps = get_column_by_name(table_data, \"gdp (billion us)\")\n    answer = True\n    for population, gdp in zip(populations, gdps):\n        if less(int(population), 44788852) and greater(float(gdp), 83.351):\n            answer = False\n            break\n    return answer\n\n### END"}
{"id": "07357889-1b3e-49ba-8636-0492c25d561f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 14 icc world cricket league\ntable_data = [[\"details\",\"host nation (s)\",\"final venue\",\"winner\",\"result\",\"runner - up\"],[\"2009 division seven\",\"guernsey\",\"king george v sports ground , castel\",\"207 / 7 (46.1 overs)\",\"bahrain won by 3 wickets scorecard\",\"guernsey 204 / 9 (50.0 overs)\"],[\"2009 division six\",\"singapore\",\"kallang cricket ground , singapore\",\"242 / 8 (50.0 overs)\",\"singapore won by 68 runs scorecard\",\"174 all out (48.4 overs)\"],[\"2010 division one\",\"netherlands\",\"vra ground , amstelveen\",\"ireland 233 / 4 (44.5 overs)\",\"ireland won by 6 wickets scorecard\",\"232 all out (48.5 overs)\"],[\"2010 division four\",\"italy\",\"ovale di rastignano , pianoro\",\"united states 188 / 2 (21.4 overs)\",\"united states won by 8 wickets scorecard\",\"italy 185 / 9 (50 overs)\"],[\"2010 division eight\",\"kuwait\",\"kuwait oil company hubara ground , ahmadi city\",\"164 / 4 (33.1 overs)\",\"kuwait won by 6 wickets scorecard\",\"163 / 8 (50 overs)\"],[\"2011 division three\",\"hong kong\",\"kowloon cricket club\",\"hong kong 207 / 6 (47.1 overs)\",\"hong kong won by 4 wickets scorecard\",\"202 (50 overs)\"],[\"2011 division two\",\"united arab emirates\",\"dsc cricket stadium , dubai\",\"201 / 5 (45.3 overs)\",\"united arab emirates won by 5 wickets scorecard\",\"namibia 200 (49.3 overs)\"],[\"2011 division seven\",\"botswana\",\"botswana cricket association oval 1 , gaborone\",\"219 / 9 (50 overs)\",\"kuwait won by 72 runs scorecard\",\"147 (36.5 overs)\"],[\"2011 division six\",\"malaysia\",\"kinrara academy oval , kuala lumpur\",\"guernsey 211 / 8 (49.3 overs)\",\"guernsey won by 2 wickets scorecard\",\"208 / 9 (50 overs)\"],[\"2012 division five\",\"singapore\",\"kallang ground , singapore\",\"164 / 1 (26.4 overs)\",\"singapore won by 9 wickets scorecard\",\"159 (47 overs)\"],[\"2012 division four\",\"malaysia\",\"kinrara academy oval , kuala lumpur\",\"147 / 2 (28 overs)\",\"nepal won by 8 wickets scorecard\",\"united states 145 (48.1 overs)\"],[\"2012 division eight\",\"samoa\",\"faleata oval no 1 , apia\",\"222 / 9 (50 overs)\",\"vanuatu won by 39 runs scorecard\",\"183 (42.5 overs)\"],[\"2013 division seven\",\"botswana\",\"botswana cricket association oval 1 , gaborone\",\"134 / 4 (32.1 overs)\",\"nigeria won by 6 wickets ( d / l ) scorecard\",\"133 (38 , 4 overs)\"],[\"2013 division three\",\"bermuda\",\"national stadium , hamilton\",\"153 / 5 (39.2 overs)\",\"nepal won by 5 wickets scorecard\",\"151 / 8 (50.0 overs)\"],[\"2013 division six\",\"jersey\",\"grainville cricket ground , st saviour\",\"jersey 10 points\",\"jersey won on points table\",\"8 points\"]]\nQuestion = Is it true that hong kong won the division the year they hosted the event?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    host_nations = get_column_by_name(table_data, \"host nation (s)\")\n    winners = get_column_by_name(table_data, \"winner\")\n    answer = False\n    for host_nation, winner in zip(host_nations, winners):\n        if \"hong kong\" in host_nation.lower() and \"hong kong\" in winner.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "4c31e676-3946-49c1-8cd1-cf24cd194d53", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = skal vi danse? (season 6)\ntable_data = [[\"couple\", \"style\", \"music\", \"trine dehli cleve\", \"tor fløysvik\", \"karianne gulliksen\", \"christer tornell\", \"total\"],[\"håvard & elena\", \"samba\", \"livin' la vida loca - ricky martin\", \"8\", \"7\", \"7\", \"7\", \"29\"],[\"stine & tom - erik\", \"slowfox\", \"why don't you do right - julie london\", \"8\", \"7\", \"8\", \"7\", \"30\"],[\"aylar & egor\", \"samba\", \"whenever , wherever - shakira\", \"7\", \"8\", \"8\", \"8\", \"31\"],[\"tommy & rakel\", \"slowfox\", \"ain't that a kick in the head - robbie williams\", \"6\", \"3\", \"5\", \"6\", \"20\"],[\"maria & asmund\", \"samba\", \"mas que nada - salomé de bahia\", \"8\", \"7\", \"8\", \"8\", \"31\"],[\"cecilie & tobias\", \"samba\", \"conga - gloria estefan\", \"5\", \"5\", \"6\", \"6\", \"22\"]]\nQuestion = Is it true that both karianne gulliksen and christer tornell gave a 7?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    karianne_gulliksen_scores = get_column_by_name(table_data, \"karianne gulliksen\")\n    christer_tornell_scores = get_column_by_name(table_data, \"christer tornell\")\n    answer = False\n    for karianne_score, christer_score in zip(karianne_gulliksen_scores, christer_tornell_scores):\n        if equal_to(karianne_score, \"7\") and equal_to(christer_score, \"7\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "5291b540-5aa1-4acb-972b-ba283b0a8253", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1970 isle of man tt\ntable_data = [[\"rank\", \"rider\", \"team\", \"speed\", \"time\"],[\"1\", \"chas mortimer\", \"ducati\", \"84.87 mph\", \"2:13.23.4\"],[\"2\", \"john williams\", \"honda\", \"84.80 mph\", \"2:13.29.0\"],[\"3\", \"stan woods\", \"suzuki\", \"84.06 mph\", \"2:14.40.6\"],[\"4\", \"ghunter\", \"ducati\", \"83.94 mph\", \"2:14.52.4\"],[\"5\", \"roy boughley\", \"honda\", \"82.26 mph\", \"2:17.37.6\"],[\"6\", \"raymond ashcroft\", \"suzuki\", \"76.59 mph\", \"2:27.48.8\"],[\"7\", \"tom loughridge\", \"suzuki\", \"76.32 mph\", \"2:28.19.0\"],[\"8\", \"cluton\", \"ducati\", \"72.50 mph\", \"2:36.08.0\"]]\nQuestion = Is it true that tom loughridge is ranked 7th and is a rider for team suzuki?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    riders = get_column_by_name(table_data, \"rider\")\n    teams = get_column_by_name(table_data, \"team\")\n    for rank, rider, team in zip(ranks, riders, teams):\n        if equal_to(rank, \"7\") and equal_to(rider, \"tom loughridge\") and equal_to(team, \"suzuki\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "4b823805-04f8-4d9a-837a-a1694ae679ba", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 miller superbike world championship round\ntable_data = [[\"rider\", \"bike\", \"laps\", \"time\", \"grid\"],[\"carlos checa\", \"honda cbr1000rr\", \"20\", \"37:04.991\", \"1\"],[\"troy corser\", \"yamaha yzf - r1\", \"20\", \"+ 2.809\", \"5\"],[\"michel fabrizio\", \"ducati 1098 f08\", \"20\", \"+ 6.546\", \"4\"],[\"max neukirchner\", \"suzuki gsx - r1000\", \"20\", \"+ 7.764\", \"2\"],[\"fonsi nieto\", \"suzuki gsx - r1000\", \"20\", \"+ 16.475\", \"13\"],[\"jakub smrz\", \"ducati 1098 rs 08\", \"20\", \"+ 17.126\", \"11\"],[\"karl muggeridge\", \"honda cbr1000rr\", \"20\", \"+ 17.284\", \"12\"],[\"yukio kagayama\", \"suzuki gsx - r1000\", \"20\", \"+ 17.416\", \"8\"],[\"max biaggi\", \"ducati 1098 rs 08\", \"20\", \"+ 18.117\", \"9\"],[\"ryuichi kiyonari\", \"honda cbr1000rr\", \"20\", \"+ 20.467\", \"20\"],[\"lorenzo lanzi\", \"ducati 1098 rs 08\", \"20\", \"+ 21.742\", \"15\"],[\"kenan sofuoğlu\", \"honda cbr1000rr\", \"20\", \"+ 27.533\", \"25\"],[\"gregorio lavilla\", \"honda cbr1000rr\", \"20\", \"+ 32.609\", \"23\"],[\"ruben xaus\", \"ducati 1098 rs 08\", \"20\", \"+ 33.165\", \"6\"],[\"russell holland\", \"honda cbr1000rr\", \"20\", \"+ 34.182\", \"17\"],[\"shinichi nakatomi\", \"yamaha yzf - r1\", \"20\", \"+ 34.500\", \"22\"],[\"ayrton badovini\", \"kawasaki zx - 10r\", \"20\", \"+ 36.155\", \"16\"],[\"sébastien gimbert\", \"yamaha yzf - r1\", \"20\", \"+ 41.685\", \"24\"],[\"makoto tamada\", \"kawasaki zx - 10r\", \"20\", \"+ 43.579\", \"18\"],[\"roberto rolfo\", \"honda cbr1000rr\", \"20\", \"+ 54.195\", \"28\"],[\"jason pridmore\", \"honda cbr1000rr\", \"20\", \"+ 1:00.388\", \"19\"],[\"vittorio iannuzzo\", \"kawasaki zx - 10r\", \"20\", \"+ 1:02.104\", \"21\"],[\"scott jensen\", \"suzuki gsx - r1000 k8\", \"20\", \"+ 1:09.953\", \"29\"],[\"loic napoleone\", \"yamaha yzf - r1\", \"20\", \"+ 1:12.258\", \"27\"],[\"shuhei aoyama\", \"honda cbr1000rr\", \"14\", \"retirement\", \"14\"],[\"david checa\", \"yamaha yzf - r1\", \"6\", \"retirement\", \"26\"],[\"noriyuki haga\", \"yamaha yzf - r1\", \"5\", \"accident\", \"10\"],[\"troy bayliss\", \"ducati 1098 f08\", \"4\", \"accident\", \"3\"],[\"régis laconi\", \"kawasaki zx - 10r\", \"4\", \"retirement\", \"7\"]]\nQuestion = Is it true that vittorio iannuzzo completed 20 laps in a suzuki gsx - r1000 k8?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    riders = get_column_by_name(table_data, \"rider\")\n    bikes = get_column_by_name(table_data, \"bike\")\n    laps = get_column_by_name(table_data, \"laps\")\n    answer = False\n    for rider, bike, lap in zip(riders, bikes, laps):\n        if rider.lower() == \"vittorio iannuzzo\" and bike.lower() == \"suzuki gsx - r1000 k8\" and lap == \"20\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "e2dd3daf-de1a-4633-a154-9c0afc0af34d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = usa today all - usa high school baseball team\ntable_data = [[\"player\",\"position\",\"school\",\"hometown\",\"mlb draft\"],[\"delmon young\",\"outfielder\",\"camarillo high school\",\"camarillo , ca\",\"1st round - 1st pick of 2003 draft ( devil rays )\"],[\"chris lubanski\",\"outfielder\",\"kennedy - kenrick catholic high school\",\"norristown , pa\",\"1st round - 5th pick of 2003 draft ( royals )\"],[\"lastings milledge\",\"outfielder\",\"lakewood ranch high school\",\"bradenton , fl\",\"1st round - 12th pick of 2003 draft ( mets )\"],[\"brandon wood\",\"infielder\",\"horizon high school\",\"scottsdale , az\",\"1st round - 23rd pick of 2003 draft ( angels )\"],[\"john danks\",\"pitcher\",\"round rock high school\",\"round rock , tx\",\"1st round - 9th pick of 2003 draft ( rangers )\"],[\"jonathan fulton\",\"infielder\",\"george washington high school\",\"danville , va\",\"3rd round - 83rd pick of 2003 draft ( marlins )\"],[\"ian stewart\",\"infielder\",\"la quinta high school\",\"westminster , ca\",\"1st round - 10th pick of 2003 draft ( rockies )\"],[\"jeff allison\",\"pitcher\",\"veterans memorial high school\",\"peabody , ma\",\"1st round - 16th pick of 2003 draft ( marlins )\"],[\"daric barton\",\"catcher\",\"marina high school\",\"huntington beach , ca\",\"1st round - 28th pick of 2003 draft ( cardinals )\"],[\"eric duncan\",\"infielder\",\"seton hall preparatory school\",\"west orange , nj\",\"1st round - 27th pick of 2003 draft ( yankees )\"]]\nQuestion = Is it true that ian stewart attended a school in the state where seton hall preparatory school is located?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef get_state_from_hometown(hometown):\n    return hometown.split(\",\")[-1].strip()\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    hometowns = get_column_by_name(table_data, \"hometown\")\n    schools = get_column_by_name(table_data, \"school\")\n    ian_stewart_state = None\n    seton_hall_state = None\n    for player, hometown, school in zip(players, hometowns, schools):\n        if player.lower() == \"ian stewart\":\n            ian_stewart_state = get_state_from_hometown(hometown)\n        if school.lower() == \"seton hall preparatory school\":\n            seton_hall_state = get_state_from_hometown(hometown)\n    answer = ian_stewart_state == seton_hall_state\n    return answer\n\n### END"}
{"id": "ea4d2053-f6ab-4abe-86e2-e358d279a8ae", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = orlando magic all - time roster\ntable_data = [[\"player\",\"nationality\",\"position\",\"years in orlando\",\"school / club team\"],[\"matt barnes\",\"united states\",\"guard - forward\",\"2009 - 2010\",\"ucla\"],[\"andre barrett\",\"united states\",\"guard\",\"2005\",\"seton hall\"],[\"brandon bass\",\"united states\",\"forward\",\"2009 - 2011\",\"louisiana state\"],[\"tony battie\",\"united states\",\"forward - center\",\"2004 - 2009\",\"texas tech\"],[\"david benoit\",\"united states\",\"forward\",\"1998\",\"alabama\"],[\"keith bogans\",\"united states\",\"guard\",\"2003 - 2004\",\"kentucky\"],[\"keith bogans\",\"united states\",\"guard\",\"2006 - 2009\",\"kentucky\"],[\"anthony bonner\",\"united states\",\"forward\",\"1995 - 1996\",\"st louis\"],[\"anthony bowie\",\"united states\",\"guard\",\"1991 - 1996\",\"oklahoma\"],[\"earl boykins\",\"united states\",\"guard\",\"1999\",\"eastern michigan\"],[\"michael bradley\",\"united states\",\"forward\",\"2004 - 2005\",\"villanova\"],[\"dee brown\",\"united states\",\"guard\",\"2000 - 2002\",\"jacksonville\"],[\"jud buechler\",\"united states\",\"guard - forward\",\"2001 - 2002\",\"arizona\"],[\"pat burke\",\"ireland\",\"center\",\"2002 - 2003\",\"auburn\"]]\nQuestion = Is it true that michael bradley plays for villanova?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    schools = get_column_by_name(table_data, \"school / club team\")\n    for player, school in zip(players, schools):\n        if player.lower() == \"michael bradley\" and school.lower() == \"villanova\":\n            return True\n    return False\n\n### END"}
{"id": "80a87278-9b3e-47d1-912c-bc92048a8269", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = bmw m1 procar championship\ntable_data = [[\"round\", \"date\", \"event\", \"circuit\", \"winning driver\", \"winning team\"],[\"1\", \"may 12\", \"belgian grand prix\", \"circuit zolder\", \"elio de angelis\", \"squadra osella corse\"],[\"2\", \"may 26\", \"monaco grand prix\", \"circuit de monaco\", \"niki lauda\", \"project four\"],[\"-\", \"june 3\", \"gunnar nilsson trophy\", \"donington park\", \"nelson piquet\", \"bmw motorsport\"],[\"3\", \"june 30\", \"french grand prix\", \"dijon - prenois\", \"nelson piquet\", \"bmw motorsport\"],[\"4\", \"july 13\", \"british grand prix\", \"silverstone circuit\", \"niki lauda\", \"project four\"],[\"5\", \"july 28\", \"german grand prix\", \"hockenheimring\", \"niki lauda\", \"project four\"],[\"6\", \"august 11\", \"austrian grand prix\", \"österreichring\", \"jacques laffite\", \"bmw motorsport\"],[\"7\", \"august 25\", \"dutch grand prix\", \"circuit zandvoort\", \"hans - joachim stuck\", \"cassani racing\"],[\"8\", \"september 8\", \"italian grand prix\", \"autodromo nazionale monza\", \"hans - joachim stuck\", \"cassani racing\"]]\nQuestion = Is it true that the winning team for round 3 , french grand prix , was bmw motorsport?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    events = get_column_by_name(table_data, \"event\")\n    winning_teams = get_column_by_name(table_data, \"winning team\")\n    for round, event, winning_team in zip(rounds, events, winning_teams):\n        if round == \"3\" and event.lower() == \"french grand prix\":\n            answer = equal_to(winning_team.lower(), \"bmw motorsport\")\n            break \n    return answer\n\n### END"}
{"id": "0af11c48-971c-424f-a3fe-5bdd6b520b1c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mark donohue\ntable_data = [[\"year\", \"chassis\", \"engine\", \"start\", \"finish\", \"entrant\"],[\"1969\", \"lola\", \"offy\", \"4th\", \"7th\", \"penske\"],[\"1970\", \"lola\", \"ford\", \"5th\", \"2nd\", \"penske\"],[\"1971\", \"mclaren\", \"offy\", \"2nd\", \"25th\", \"penske\"],[\"1972\", \"mclaren\", \"offy\", \"3rd\", \"1st\", \"penske\"],[\"1973\", \"eagle\", \"offy\", \"3rd\", \"15th\", \"penske\"]]\nQuestion = Is it true that offy engine started 3rd in 1972 at eagle chassis?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    chassis = get_column_by_name(table_data, \"chassis\")\n    engines = get_column_by_name(table_data, \"engine\")\n    starts = get_column_by_name(table_data, \"start\")\n    for year, chassi, engine, start in zip(years, chassis, engines, starts):\n        if year == \"1972\" and chassi.lower() == \"eagle\" and engine.lower() == \"offy\" and start == \"3rd\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "caaa3037-e470-4770-9d81-4a7413e610ed", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2000 - 01 prva hnl\ntable_data = [[\"team\",\"manager\",\"home city\",\"stadium\",\"capacity\"],[\"cibalia\",\"davor mladina\",\"vinkovci\",\"stadion hnk cibalia\",\"9920\"],[\"čakovec\",\"ilija lončarević\",\"čakovec\",\"stadion src mladost\",\"8000\"],[\"dinamo zagreb\",\"marijan vlak\",\"zagreb\",\"stadion maksimir\",\"37168\"],[\"hajduk split\",\"petar nadoveza\",\"split\",\"gradski stadion u poljudu\",\"35000\"],[\"hrvatski dragovoljac\",\"milivoj bračun\",\"zagreb\",\"stadion nšc stjepan spajić\",\"5000\"],[\"marsonia\",\"stjepan deverić\",\"slavonski brod\",\"gradski stadion uz savu\",\"10000\"],[\"osijek\",\"stanko mršić\",\"osijek\",\"stadion gradski vrt\",\"19500\"],[\"rijeka\",\"nenad gračan\",\"rijeka\",\"stadion na kantridi\",\"10275\"],[\"slaven belupo\",\"mladen frančić\",\"koprivnica\",\"gradski stadion u koprivnici\",\"4000\"],[\"šibenik\",\"milo nižetić\",\"šibenik\",\"stadion šubićevac\",\"8000\"],[\"varteks\",\"ivan katalinić\",\"varaždin\",\"stadion nk varteks\",\"10800\"],[\"nk zagreb\",\"branko karačić\",\"zagreb\",\"stadion u kranjčevićevoj ulici\",\"8850\"]]\nQuestion = Is it true that mladen frančić was the manager of the team slaven belupo with koprivnica as the home city?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    managers = get_column_by_name(table_data, \"manager\")\n    home_cities = get_column_by_name(table_data, \"home city\")\n    for team, manager, home_city in zip(teams, managers, home_cities):\n        if team.lower() == \"slaven belupo\" and manager.lower() == \"mladen frančić\" and home_city.lower() == \"koprivnica\":\n            return True\n    return False\n\n### END"}
{"id": "ae669b3d-2a0e-4e51-951a-644dc2ff0020", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the simpsons (season 21)\ntable_data = [[\"-\", \"-\", \"title\", \"directed by\", \"written by\", \"original air date\", \"production code\", \"us viewers (millions)\"],[\"442\", \"1\", \"homer the whopper\", \"lance kramer\", \"seth rogen & evan goldberg\", \"september 27 , 2009\", \"labf13\", \"8.31\"],[\"443\", \"2\", \"bart gets a 'z'\", \"mark kirkland\", \"matt selman\", \"october 4 , 2009\", \"labf15\", \"9.32\"],[\"444\", \"3\", \"the great wife hope\", \"matthew faughnan\", \"carolyn omine\", \"october 11 , 2009\", \"labf16\", \"7.5\"],[\"446\", \"5\", \"the devil wears nada\", \"nancy kruse\", \"tim long\", \"november 15 , 2009\", \"labf17\", \"9.04\"],[\"447\", \"6\", \"pranks and greens\", \"chuck sheetz\", \"jeff westbrook\", \"november 22 , 2009\", \"labf18\", \"7.03\"],[\"448\", \"7\", \"rednecks and broomsticks\", \"bob anderson & rob oliver\", \"kevin curran\", \"november 29 , 2009\", \"labf19\", \"9.02\"],[\"449\", \"8\", \"o brother , where bart thou\", \"steven dean moore\", \"matt selman\", \"december 13 , 2009\", \"mabf01\", \"7.11\"],[\"450\", \"9\", \"thursdays with abie\", \"michael polcino\", \"don payne & mitchell h glazer\", \"january 3 , 2010\", \"mabf02\", \"8.65\"],[\"451\", \"10\", \"once upon a time in springfield\", \"matthew nastuk\", \"stephanie gillis\", \"january 10 , 2010\", \"labf20\", \"21.01\"],[\"452\", \"11\", \"million dollar maybe\", \"chris clements\", \"bill odenkirk\", \"january 31 , 2010\", \"mabf03\", \"5.11\"],[\"453\", \"12\", \"boy meets curl\", \"chuck sheetz\", \"rob lazebnik\", \"february 14 , 2010\", \"mabf05\", \"5.87\"],[\"454\", \"13\", \"the color yellow\", \"raymond s persi\", \"billy kimball & ian maxtone - graham\", \"february 21 , 2010\", \"mabf06\", \"6.08\"],[\"455\", \"14\", \"postcards from the wedge\", \"mark kirkland\", \"brian kelley\", \"march 14 , 2010\", \"mabf04\", \"5.23\"],[\"456\", \"15\", \"stealing first base\", \"steven dean moore\", \"john frink\", \"march 21 , 2010\", \"mabf07\", \"5.69\"],[\"457\", \"16\", \"the greatest story ever d'ohed\", \"michael polcino\", \"kevin curran\", \"march 28 , 2010\", \"mabf10\", \"5.69\"],[\"458\", \"17\", \"american history x - cellent\", \"bob anderson\", \"michael price\", \"april 11 , 2010\", \"mabf08\", \"5.65\"],[\"459\", \"18\", \"chief of hearts\", \"chris clements\", \"carolyn omine & william wright\", \"april 18 , 2010\", \"mabf09\", \"5.93\"],[\"460\", \"19\", \"the squirt and the whale\", \"mark kirkland\", \"matt warburton\", \"april 25 , 2010\", \"mabf14\", \"5.94\"],[\"461\", \"20\", \"to surveil with love\", \"lance kramer\", \"michael nobori\", \"may 2 , 2010\", \"mabf12\", \"6.06\"],[\"462\", \"21\", \"moe letter blues\", \"matthew nastuk\", \"stephanie gillis\", \"may 9 , 2010\", \"mabf13\", \"5.66\"],[\"463\", \"22\", \"the bob next door\", \"nancy kruse\", \"john frink\", \"may 16 , 2010\", \"mabf11\", \"6.26\"]]\nQuestion = Is it true that the production code for the show less than 9.32 us viewers was labf15?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    production_codes = get_column_by_name(table_data, \"production code\")\n    viewers = get_column_by_name(table_data, \"us viewers (millions)\")\n    answer = False\n    for production_code, viewer in zip(production_codes, viewers):\n        if float(viewer) < 9.32 and equal_to(production_code, \"labf15\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "48bb7d8f-5537-4eb9-afd6-9ff1fb8d2b09", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 veikkausliiga\ntable_data = [[\"club\", \"location\", \"stadium\", \"capacity\", \"manager\", \"kitmaker\"],[\"ac oulu\", \"oulu\", \"castrén\", \"4000\", \"juha malinen\", \"umbro\"],[\"fc honka\", \"espoo\", \"tapiolan urheilupuisto\", \"6000\", \"mika lehkosuo\", \"kappa\"],[\"fc inter\", \"turku\", \"veritas stadion\", \"9372\", \"job dragtsma\", \"nike\"],[\"fc lahti\", \"lahti\", \"lahden stadion\", \"15000\", \"ilkka mäkelä\", \"umbro\"],[\"ff jaro\", \"jakobstad\", \"jakobstads centralplan\", \"5000\", \"alexei eremenko sr\", \"errea\"],[\"haka\", \"valkeakoski\", \"tehtaan kenttä\", \"3516\", \"sami ristilä\", \"umbro\"],[\"hjk\", \"helsinki\", \"sonera stadium\", \"10770\", \"antti muurinen\", \"adidas\"],[\"ifk mariehamn\", \"mariehamn\", \"wiklöf holding arena\", \"4000\", \"pekka lyyski\", \"puma\"],[\"jjk\", \"jyväskylä\", \"harjun stadion\", \"3000\", \"kari martonen\", \"legea\"],[\"kups\", \"kuopio\", \"kuopion keskuskenttä\", \"5000\", \"esa pekonen\", \"puma\"],[\"mypa\", \"anjalankoski\", \"saviniemi\", \"4167\", \"janne lindberg\", \"puma\"],[\"tampere united\", \"tampere\", \"ratina stadion\", \"17000\", \"ari hjelm\", \"puma\"],[\"tps\", \"turku\", \"veritas stadion\", \"9372\", \"marko rajamäki\", \"puma\"]]\nQuestion = Is it true that the stadium with the largest capacity is ratina standion with a capacity of 15000?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef get_max_value(lst):\n    return max(lst)\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    capacities = get_column_by_name(table_data, \"capacity\")\n    max_capacity = get_max_value(list(map(int, capacities)))\n    max_capacity_stadium = stadiums[capacities.index(str(max_capacity))]\n    expected_stadium = \"ratina stadion\"\n    expected_capacity = 15000\n    answer = equal_to(max_capacity_stadium, expected_stadium) and equal_to(max_capacity, expected_capacity)\n    return answer\n\n### END"}
{"id": "38aeb79f-58c7-42bc-8031-58ba12c573e4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 3. liga\ntable_data = [[\"team\",\"outgoing manager\",\"manner of departure\",\"date of vacancy\",\"replaced by\",\"date of appointment\",\"position in table\"],[\"vfl osnabrück\",\"claus - dieter wollitz\",\"fc energie cottbus purchased rights\",\"30 june 2009\",\"karsten baumann\",\"1 july 2009\",\"pre - season\"],[\"fc carl zeiss jena\",\"marc fascher\",\"end of contract\",\"30 june 2009\",\"rené van eck\",\"1 july 2009\",\"pre - season\"],[\"fc rot - weiß erfurt\",\"henri fuchs\",\"end of tenure as caretaker\",\"30 june 2009\",\"rainer hörgl\",\"1 july 2009\",\"pre - season\"],[\"vfb stuttgart ii\",\"rainer adrion\",\"new coach of germany u - 21\",\"30 june 2009\",\"reiner geyer\",\"1 july 2009\",\"pre - season\"],[\"sv wacker burghausen\",\"ralf santelli\",\"end of contract\",\"30 june 2009\",\"jürgen press\",\"1 july 2009\",\"pre - season\"]]\nQuestion = Is it true that marc fascher is the outgoing manager for the team of vfb stuttgart ii?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    outgoing_managers = get_column_by_name(table_data, \"outgoing manager\")\n    for team, outgoing_manager in zip(teams, outgoing_managers):\n        if equal_to(team, \"vfb stuttgart ii\"):\n            answer = equal_to(outgoing_manager, \"marc fascher\")\n            break \n    return answer\n\n### END"}
{"id": "0c56ae0e-95fa-4b17-894b-1d14065e26f2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 veikkausliiga\ntable_data = [[\"club\",\"location\",\"stadium\",\"capacity\",\"manager\",\"kitmaker\"],[\"ac oulu\",\"oulu\",\"castrén\",\"4000\",\"juha malinen\",\"umbro\"],[\"fc honka\",\"espoo\",\"tapiolan urheilupuisto\",\"6000\",\"mika lehkosuo\",\"kappa\"],[\"fc inter\",\"turku\",\"veritas stadion\",\"9372\",\"job dragtsma\",\"nike\"],[\"fc lahti\",\"lahti\",\"lahden stadion\",\"15000\",\"ilkka mäkelä\",\"umbro\"],[\"ff jaro\",\"jakobstad\",\"jakobstads centralplan\",\"5000\",\"alexei eremenko sr\",\"errea\"],[\"haka\",\"valkeakoski\",\"tehtaan kenttä\",\"3516\",\"sami ristilä\",\"umbro\"],[\"hjk\",\"helsinki\",\"sonera stadium\",\"10770\",\"antti muurinen\",\"adidas\"],[\"ifk mariehamn\",\"mariehamn\",\"wiklöf holding arena\",\"4000\",\"pekka lyyski\",\"puma\"],[\"jjk\",\"jyväskylä\",\"harjun stadion\",\"3000\",\"kari martonen\",\"legea\"],[\"kups\",\"kuopio\",\"kuopion keskuskenttä\",\"5000\",\"esa pekonen\",\"puma\"],[\"mypa\",\"anjalankoski\",\"saviniemi\",\"4167\",\"janne lindberg\",\"puma\"],[\"tampere united\",\"tampere\",\"ratina stadion\",\"17000\",\"ari hjelm\",\"puma\"],[\"tps\",\"turku\",\"veritas stadion\",\"9372\",\"marko rajamäki\",\"puma\"]]\nQuestion = Is it true that kari martonen is the manager of harjun stadion?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    managers = get_column_by_name(table_data, \"manager\")\n    for stadium, manager in zip(stadiums, managers):\n        if stadium.lower() == \"harjun stadion\" and manager.lower() == \"kari martonen\":\n            return True\n    return False\n\n### END"}
{"id": "1c8f8ea3-8f0d-4f92-a9a7-5b888f5a77a1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 issf world cup final (shotgun)\ntable_data = [[\"shooter\", \"event\", \"rank points\", \"score points\", \"total\"],[\"georgios achilleos ( cyp )\", \"wcf 2007\", \"defending champion\", \"defending champion\", \"defending champion\"],[\"vincent hancock ( usa )\", \"og beijing\", \"olympic gold medalist\", \"olympic gold medalist\", \"olympic gold medalist\"],[\"tore brovold ( nor )\", \"og beijing\", \"olympic silver medalist\", \"olympic silver medalist\", \"olympic silver medalist\"],[\"anthony terras ( fra )\", \"og beijing\", \"olympic bronze medalist\", \"olympic bronze medalist\", \"olympic bronze medalist\"],[\"ariel mauricio flores ( mex )\", \"wc kerrville\", \"15\", \"12\", \"27\"],[\"qu ridong ( chn )\", \"wc beijing\", \"15\", \"10\", \"25\"],[\"andrea benelli ( ita )\", \"wc belgrade\", \"10\", \"13\", \"23\"],[\"konstantin tsuranov ( rus )\", \"wc beijing\", \"10\", \"10\", \"20\"],[\"jan sychra ( cze )\", \"wc belgrade\", \"5\", \"13\", \"18\"],[\"valerio luchini ( ita )\", \"wc kerrville\", \"8\", \"10\", \"18\"],[\"leos hlavacek ( cze )\", \"wc suhl\", \"5\", \"11\", \"16\"],[\"abdullah alrashidi ( kuw )\", \"wc belgrade\", \"3\", \"12\", \"15\"]]\nQuestion = Is it true that georgios achilleos (cyp) is one of two shooters with score points of defending champion?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef solution(table_data):\n    score_points = get_column_by_name(table_data, \"score points\")\n    count = count_occurrences(\"defending champion\", score_points)\n    answer = equal_to(count, 2)\n    return answer\n\n### END"}
{"id": "9df42ea5-66c0-4943-882e-d9a6088ed346", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = golden gate transit\ntable_data = [[\"make\", \"year placed in service\", \"quantity\", \"number of seats\", \"wheelchair accessible\", \"current status\"],[\"gm new look\", \"1971 , 1972\", \"132\", \"45\", \"no\", \"retired , one bus retained for historical purposes\"],[\"gm advanced design\", \"1981\", \"16\", \"43\", \"yes\", \"retired\"],[\"gm advanced design\", \"1983\", \"50\", \"41\", \"yes\", \"retired\"],[\"gillig\", \"1986\", \"4\", \"26\", \"yes\", \"retired\"],[\"mci\", \"1987\", \"21\", \"45\", \"yes\", \"retired\"],[\"tmc\", \"1990\", \"48\", \"39\", \"yes\", \"retired\"],[\"tmc\", \"1991\", \"49\", \"40\", \"yes\", \"retired (26) , reserve fleet (10) , for sale (13)\"],[\"flxible\", \"1994\", \"40\", \"45\", \"yes\", \"retired\"],[\"mci\", \"1996 , 1997\", \"32\", \"57\", \"yes\", \"for sale (21) , unknown (11)\"],[\"novabus\", \"1997\", \"10\", \"43\", \"yes\", \"retired\"],[\"new flyer\", \"2003\", \"8\", \"62\", \"yes\", \"retired\"]]\nQuestion = Is it true that three of the 11 makes are not wheelchair accessible?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_no(lst):\n    return lst.count(\"no\")\n\ndef solution(table_data):\n    wheelchair_accessible = get_column_by_name(table_data, \"wheelchair accessible\")\n    answer = count_no(wheelchair_accessible) == 3\n    return answer\n\n### END"}
{"id": "796f7e89-630a-48a1-8b7c-0dfe86927b38", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = boise state broncos men 's basketball\ntable_data = [[\"year\", \"round\", \"opponent\", \"result\", \"bsu head coach\"],[\"1976\", \"first round\", \"unlv\", \"l 78 - 103\", \"bus conner\"],[\"1988\", \"first round\", \"michigan\", \"l 58 - 63\", \"bobby dye\"],[\"1993\", \"first round\", \"vanderbilt\", \"l 72 - 92\", \"bobby dye\"],[\"1994\", \"first round\", \"louisville\", \"l 58 - 67\", \"bobby dye\"],[\"2008\", \"first round\", \"louisville\", \"l 61 - 79\", \"greg graham\"],[\"2013\", \"first four\", \"la salle\", \"l 71 - 80\", \"leon rice\"]]\nQuestion = Is it true that greg graham was the bsu head coach in 1994 , when the opponent was louisville?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    coaches = get_column_by_name(table_data, \"bsu head coach\")\n    for year, opponent, coach in zip(years, opponents, coaches):\n        if equal_to(year, \"1994\") and equal_to(opponent, \"louisville\"):\n            answer = equal_to(coach, \"greg graham\")\n            break\n    return answer\n\n### END"}
{"id": "42e39e25-3c79-42d2-aac9-e79ea4fa28bf", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1968 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"17.24 (126)\", \"south melbourne\", \"19.12 (126)\", \"glenferrie oval\", \"13536\", \"20 april 1968\"],[\"st kilda\", \"16.22 (118)\", \"melbourne\", \"9.8 (62)\", \"moorabbin oval\", \"21758\", \"20 april 1968\"],[\"geelong\", \"9.17 (71)\", \"footscray\", \"6.11 (47)\", \"kardinia park\", \"14589\", \"20 april 1968\"],[\"north melbourne\", \"9.9 (63)\", \"essendon\", \"10.22 (82)\", \"arden street oval\", \"14810\", \"20 april 1968\"],[\"fitzroy\", \"14.16 (100)\", \"collingwood\", \"10.11 (71)\", \"princes park\", \"17149\", \"20 april 1968\"],[\"richmond\", \"17.16 (118)\", \"carlton\", \"10.12 (72)\", \"mcg\", \"51889\", \"20 april 1968\"]]\nQuestion = Is it true that north melbourne was the home team playing at the arden street oval venue when their score was 9.9 (63)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    venues = get_column_by_name(table_data, \"venue\")\n    for home_team, home_team_score, venue in zip(home_teams, home_team_scores, venues):\n        if home_team.lower() == \"north melbourne\" and venue.lower() == \"arden street oval\":\n            answer = equal_to(home_team_score, \"9.9 (63)\")\n            break \n    return answer\n\n### END"}
{"id": "36da56d3-186b-4230-8514-f36b19a0d035", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 geylang united fc season\ntable_data = [[\"match\", \"date\", \"tournament\", \"location\", \"opponent team\", \"score\"],[\"1\", \"january 19 , 2008\", \"friendly\", \"bedok stadium\", \"police sa\", \"4 - 0\"],[\"2\", \"january 23 , 2008\", \"friendly\", \"bedok stadium\", \"katong fc\", \"7 - 1\"],[\"3\", \"january 26 , 2008\", \"friendly\", \"penang , malaysia\", \"chinese recreation club\", \"0 - 5\"],[\"4\", \"january 27 , 2008\", \"friendly\", \"penang , malaysia\", \"kampong seronong\", \"0 - 1\"],[\"5\", \"january 31 , 2008\", \"friendly\", \"bedok stadium\", \"admiralty\", \"4 - 0\"],[\"6\", \"february 4 , 2008\", \"friendly\", \"pasir gudang , malaysia\", \"johor pg\", \"2 - 3\"],[\"7\", \"february 11 , 2008\", \"friendly\", \"seri gelam , malaysia\", \"majlis bandaraya johor bahru\", \"0 - 3\"],[\"8\", \"february 16 , 2008\", \"friendly\", \"bedok stadium\", \"summerville fc\", \"9 - 0\"]]\nQuestion = Is it true that bedok stadium was only the location of the game when police sa was the opponent?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"location\")\n    opponent_teams = get_column_by_name(table_data, \"opponent team\")\n    answer = True\n    for location, opponent_team in zip(locations, opponent_teams):\n        if location.lower() == \"bedok stadium\" and opponent_team.lower() != \"police sa\":\n            answer = False\n            break\n    return answer\n\n### END"}
{"id": "c3e14639-c8ea-454b-9be5-9a0fef2e94fd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = .38 special\ntable_data = [[\"cartridge\", \"bullet weight\", \"muzzle velocity\", \"muzzle energy\", \"max pressure\"],[\".38 short colt\", \"gr (g)\", \"ft / s (m / s)\", \"181ft lbf (245 j)\", \"7500 cup\"],[\".38 long colt\", \"gr (g)\", \"ft / s (m / s)\", \"201ft lbf (273 j)\", \"12000 cup\"],[\".38 s&w\", \"gr (g)\", \"ft / s (m / s)\", \"206ft lbf (279 j)\", \"14500 psi\"],[\".38 s&w special\", \"gr (g)\", \"ft / s (m / s)\", \"310ft lbf (420 j)\", \"17000 psi\"],[\".38 special + p\", \"gr (g)\", \"ft / s (m / s)\", \"351ft lbf (476 j)\", \"20000 psi\"],[\".38 special + p +\", \"gr (g)\", \"ft / s (m / s)\", \"295ft lbf (400 j)\", \">20000 psi\"],[\".380 acp\", \"gr (g)\", \"ft / s (m / s)\", \"178ft lbf (241 j)\", \"21500 psi\"],[\"9x19 mm parabellum\", \"gr (g)\", \"ft / s (m / s)\", \"420ft lbf (570 j)\", \"39200 psi\"],[\"9x19 mm parabellum\", \"gr (g)\", \"ft / s (m / s)\", \"383ft lbf (520 j)\", \"39200 psi\"],[\"9x18 mm makarov\", \"gr (g)\", \"ft / s (m / s)\", \"231ft lbf (313 j)\", \"23206 psi\"],[\".38 super\", \"grains (g)\", \"ft / s (m / s)\", \"468ft lbf (634 j)\", \"36500 psi\"],[\".357 magnum\", \"grains (g)\", \"ft / s (m / s)\", \"639ft lbf (866 j)\", \"35000 psi\"],[\".357 sig\", \"grains (g)\", \"ft / s (m / s)\", \"506ft lbf (686 j)\", \"40000 psi\"]]\nQuestion = Is it true that ft / s (m / s) is the muzzle velocity for the 38 long colt cartridge with over 12000 psi max pressure?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef parse_pressure_to_int(pressure_str):\n    if \"psi\" in pressure_str:\n        return int(pressure_str.replace(\" psi\", \"\"))\n    elif \"cup\" in pressure_str:\n        return int(pressure_str.replace(\" cup\", \"\"))\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    cartridges = get_column_by_name(table_data, \"cartridge\")\n    muzzle_velocities = get_column_by_name(table_data, \"muzzle velocity\")\n    max_pressures = get_column_by_name(table_data, \"max pressure\")\n    answer = False\n    for cartridge, muzzle_velocity, max_pressure in zip(cartridges, muzzle_velocities, max_pressures):\n        if \".38 long colt\" in cartridge.lower():\n            parsed_pressure = parse_pressure_to_int(max_pressure)\n            if greater(parsed_pressure, 12000) and \"ft / s (m / s)\" in muzzle_velocity.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "cefb9146-648d-4e9a-b666-c86f2de16862", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2003 - 04 isu junior grand prix\ntable_data = [[\"rank\", \"nation\", \"gold\", \"silver\", \"bronze\", \"total\"],[\"1\", \"russia\", \"10\", \"14\", \"8\", \"32\"],[\"2\", \"united states\", \"9\", \"6\", \"7\", \"22\"],[\"3\", \"canada\", \"4\", \"2\", \"10\", \"16\"],[\"4\", \"japan\", \"4\", \"5\", \"4\", \"13\"],[\"5\", \"hungary\", \"4\", \"0\", \"2\", \"6\"],[\"6\", \"czech republic\", \"2\", \"1\", \"1\", \"4\"],[\"6\", \"ukraine\", \"1\", \"3\", \"0\", \"4\"],[\"6\", \"italy\", \"0\", \"1\", \"3\", \"4\"],[\"7\", \"sweden\", \"1\", \"2\", \"0\", \"3\"],[\"8\", \"israel\", \"1\", \"1\", \"0\", \"2\"],[\"9\", \"finland\", \"0\", \"0\", \"1\", \"1\"],[\"9\", \"france\", \"0\", \"1\", \"0\", \"1\"]]\nQuestion = Is it true that ukarine , ranked 6th , has 4 total medals : 1 gold and 3 silver?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    nations = get_column_by_name(table_data, \"nation\")\n    golds = get_column_by_name(table_data, \"gold\")\n    silvers = get_column_by_name(table_data, \"silver\")\n    totals = get_column_by_name(table_data, \"total\")\n    for nation, gold, silver, total in zip(nations, golds, silvers, totals):\n        if nation.lower() == \"ukraine\":\n            answer = equal_to(gold, \"1\") and equal_to(silver, \"3\") and equal_to(total, \"4\")\n            break \n    return answer\n\n### END"}
{"id": "2557513d-0251-4d67-97cb-1cec4186c873", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1949 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"5.13 (43)\", \"richmond\", \"20.12 (132)\", \"glenferrie oval\", \"13000\", \"23 april 1949\"],[\"footscray\", \"12.7 (79)\", \"geelong\", \"9.14 (68)\", \"western oval\", \"15500\", \"23 april 1949\"],[\"south melbourne\", \"12.13 (85)\", \"st kilda\", \"12.10 (82)\", \"lake oval\", \"9000\", \"23 april 1949\"],[\"north melbourne\", \"7.14 (56)\", \"essendon\", \"10.15 (75)\", \"arden street oval\", \"20000\", \"23 april 1949\"],[\"melbourne\", \"12.8 (80)\", \"collingwood\", \"11.16 (82)\", \"mcg\", \"29000\", \"23 april 1949\"],[\"fitzroy\", \"15.16 (106)\", \"carlton\", \"15.15 (105)\", \"brunswick street oval\", \"25000\", \"23 april 1949\"]]\nQuestion = Is it true that the home team score for fitzroy is 12.8 (80)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    for home_team, home_team_score in zip(home_teams, home_team_scores):\n        if home_team.lower() == \"fitzroy\":\n            answer = equal_to(home_team_score, \"12.8 (80)\")\n            break \n    return answer\n\n### END"}
{"id": "1f90927f-aa3b-46d6-b980-e126cd7a766d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 cleveland cavaliers season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"18\", \"december 2\", \"phoenix suns\", \"w 107 - 90 (ot)\", \"zydrunas ilgauskas (14)\", \"shaquille o'neal (9)\", \"lebron james (10)\", \"quicken loans arena 20562\", \"13 - 5\"],[\"19\", \"december 4\", \"chicago bulls\", \"w 101 - 87 (ot)\", \"lebron james (23)\", \"zydrunas ilgauskas , shaquille o'neal (7)\", \"lebron james (11)\", \"quicken loans arena 20562\", \"14 - 5\"],[\"20\", \"december 6\", \"milwaukee bucks\", \"w 101 - 86 (ot)\", \"delonte west (21)\", \"anderson varejão (12)\", \"lebron james (10)\", \"bradley center 16625\", \"15 - 5\"],[\"21\", \"december 8\", \"memphis grizzlies\", \"l 109 - 111 (ot)\", \"lebron james (43)\", \"lebron james (13)\", \"mo williams (8)\", \"fedex forum 16325\", \"15 - 6\"],[\"22\", \"december 9\", \"houston rockets\", \"l 85 - 95 (ot)\", \"lebron james (27)\", \"shaquille o'neal , j j hickson (10)\", \"lebron james (7)\", \"toyota center 18200\", \"15 - 7\"],[\"23\", \"december 11\", \"portland trail blazers\", \"w 104 - 99 (ot)\", \"lebron james (33)\", \"shaquille o'neal (11)\", \"mo williams (10)\", \"quicken loans arena 20562\", \"16 - 7\"],[\"24\", \"december 13\", \"oklahoma city thunder\", \"w 102 - 89 (ot)\", \"lebron james (44)\", \"anderson varejão (10)\", \"lebron james (6)\", \"ford center 18203\", \"17 - 7\"],[\"25\", \"december 15\", \"new jersey nets\", \"w 99 - 89 (ot)\", \"lebron james (23)\", \"mo williams , jamario moon (8)\", \"lebron james (7)\", \"quicken loans arena 20562\", \"18 - 7\"],[\"26\", \"december 16\", \"philadelphia 76ers\", \"w 108 - 101 (ot)\", \"lebron james (36)\", \"shaquille o'neal (9)\", \"lebron james (7)\", \"wachovia center 19517\", \"19 - 7\"],[\"27\", \"december 18\", \"milwaukee bucks\", \"w 85 - 82 (ot)\", \"lebron james (26)\", \"lebron james (10)\", \"lebron james (8)\", \"quicken loans arena 20562\", \"20 - 7\"],[\"28\", \"december 20\", \"dallas mavericks\", \"l 95 - 102 (ot)\", \"lebron james (25)\", \"anderson varejão , shaquille o'neal (8)\", \"lebron james (6)\", \"american airlines center 20346\", \"20 - 8\"],[\"29\", \"december 21\", \"phoenix suns\", \"w 109 - 91 (ot)\", \"lebron james (29)\", \"mo williams , lebron james , jj hickson (6)\", \"delonte west (6)\", \"us airways center 18221\", \"21 - 8\"],[\"30\", \"december 23\", \"sacramento kings\", \"w 117 - 104 (ot)\", \"lebron james (34)\", \"lebron james (16)\", \"lebron james (10)\", \"arco arena 16407\", \"22 - 8\"],[\"31\", \"december 25\", \"la lakers\", \"w 102 - 87 (ot)\", \"mo williams (28)\", \"anderson varejão , zydrunas ilgauskas (9)\", \"lebron james (9)\", \"staples center 18997\", \"23 - 8\"],[\"32\", \"december 27\", \"houston rockets\", \"w 108 - 83 (ot)\", \"lebron james (29)\", \"shaquille o'neal (11)\", \"lebron james (6)\", \"quicken loans arena 20562\", \"24 - 8\"]]\nQuestion = Is it true that the game played at the arco arena had an attendance of 16407 when the record went to 22 - 8?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"location attendance\")\n    records = get_column_by_name(table_data, \"record\")\n    for location, record in zip(locations, records):\n        if \"arco arena 16407\" in location.lower() and \"22 - 8\" in record.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "6865772f-9629-4671-8d8b-4427213f3022", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of airlines of tunisia\ntable_data = [[\"airline\", \"airline (in arabic)\", \"icao\", \"callsign\", \"commenced operations\"],[\"karthago airlines\", \"قرطاج للطيران\", \"kaj\", \"karthago\", \"2001\"],[\"nouvelair\", \"الطيران الجديد تونس\", \"lbt\", \"nouvelair\", \"1989\"],[\"tunisair express\", \"الخطوط التونسية السريعة\", \"tux\", \"tunexpress\", \"1991\"],[\"syphax airlines\", \"سيفاكس أيرلاينز\", \"sya\", \"syphaxair\", \"2011\"],[\"tunisair\", \"الخطوط التونسية\", \"tar\", \"tunair\", \"1948\"],[\"tunisavia\", \"الشركة التونسية للنقل و الخدمات الجوية\", \"taj\", \"tunisavia\", \"2010\"]]\nQuestion = Is it true that the airline with the call sign syphaxair began operations in 2011?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    callsigns = get_column_by_name(table_data, \"callsign\")\n    commenced_operations = get_column_by_name(table_data, \"commenced operations\")\n    for callsign, commenced_operation in zip(callsigns, commenced_operations):\n        if callsign.lower() == \"syphaxair\":\n            answer = equal_to(commenced_operation, \"2011\")\n            break \n    return answer\n\n### END"}
{"id": "80421a6c-d511-460f-96fb-441c4387d947", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 top 14 season\ntable_data = [[\"club\", \"played\", \"drawn\", \"lost\", \"points for\", \"points against\", \"bonus points\", \"points\"],[\"clermont\", \"26\", \"0\", \"6\", \"773\", \"380\", \"16\", \"96\"],[\"toulouse\", \"26\", \"0\", \"7\", \"723\", \"394\", \"15\", \"91\"],[\"stade franã§ais\", \"26\", \"0\", \"8\", \"617\", \"417\", \"8\", \"80\"],[\"perpignan\", \"26\", \"2\", \"7\", \"531\", \"392\", \"7\", \"79\"],[\"castres\", \"26\", \"0\", \"11\", \"564\", \"524\", \"9\", \"69\"],[\"biarritz\", \"26\", \"1\", \"12\", \"385\", \"339\", \"12\", \"66\"],[\"montauban\", \"26\", \"0\", \"13\", \"420\", \"446\", \"11\", \"63\"],[\"montpellier\", \"26\", \"0\", \"12\", \"426\", \"490\", \"5\", \"61\"],[\"bayonne\", \"26\", \"1\", \"14\", \"457\", \"535\", \"8\", \"54\"],[\"bourgoin\", \"26\", \"2\", \"14\", \"453\", \"526\", \"8\", \"52\"],[\"brive\", \"26\", \"0\", \"16\", \"425\", \"514\", \"11\", \"51\"],[\"albi\", \"26\", \"1\", \"16\", \"415\", \"549\", \"10\", \"48\"],[\"dax\", \"26\", \"1\", \"19\", \"314\", \"645\", \"8\", \"34\"],[\"auch\", \"26\", \"0\", \"23\", \"336\", \"688\", \"7\", \"19\"]]\nQuestion = Is it true that stade français had 618 points and a draw of 0?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    clubs = get_column_by_name(table_data, \"club\")\n    points_for = get_column_by_name(table_data, \"points for\")\n    draws = get_column_by_name(table_data, \"drawn\")\n    for club, points, draw in zip(clubs, points_for, draws):\n        if club.lower() == \"stade franã§ais\":\n            answer = equal_to(points, \"618\") and equal_to(draw, \"0\")\n            break \n    return answer\n\n### END"}
{"id": "9fe9be42-676f-43bc-97b2-eb82944bb661", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 dallas cowboys season\ntable_data = [[\"week\",\"date\",\"time (cst)\",\"opponent\",\"result\",\"game site\",\"record\",\"nfl recap\"],[\"1\",\"september 7, 2008\",\"3:15 pm\",\"cleveland browns\",\"w, 28 - 10\",\"cleveland browns stadium\",\"1 - 0\",\"recap\"],[\"2\",\"september 15, 2008\",\"7:15 pm\",\"philadelphia eagles\",\"w, 41 - 37\",\"texas stadium\",\"2 - 0\",\"recap\"],[\"3\",\"september 21, 2008\",\"7:15 pm\",\"green bay packers\",\"w, 27 - 16\",\"lambeau field\",\"3 - 0\",\"recap\"],[\"4\",\"september 28, 2008\",\"3:15 pm\",\"washington redskins\",\"l, 26 - 24\",\"texas stadium\",\"3 - 1\",\"recap\"],[\"5\",\"october 5, 2008\",\"3:15 pm\",\"cincinnati bengals\",\"w, 31 - 22\",\"texas stadium\",\"4 - 1\",\"recap\"],[\"6\",\"october 12, 2008\",\"3:15 pm\",\"arizona cardinals\",\"l, 30 - 24 ot\",\"university of phoenix stadium\",\"4 - 2\",\"recap\"],[\"7\",\"october 19, 2008\",\"12:00 pm\",\"st louis rams\",\"l, 14 - 34\",\"edward jones dome\",\"4 - 3\",\"recap\"],[\"8\",\"october 26, 2008\",\"12:00 pm\",\"tampa bay buccaneers\",\"w, 13 - 9\",\"texas stadium\",\"5 - 3\",\"recap\"],[\"9\",\"november 2, 2008\",\"3:15 pm\",\"new york giants\",\"l, 14 - 35\",\"giants stadium\",\"5 - 4\",\"recap\"],[\"10\",\"bye week\",\"bye week\",\"bye week\",\"bye week\",\"bye week\",\"bye week\",\"bye week\"],[\"11\",\"november 16, 2008\",\"7:15 pm\",\"washington redskins\",\"w, 14 - 10\",\"fedexfield\",\"6 - 4\",\"recap\"],[\"12\",\"november 23, 2008\",\"12:00 pm\",\"san francisco 49ers\",\"w, 35 - 22\",\"texas stadium\",\"7 - 4\",\"recap\"],[\"13\",\"november 27, 2008\",\"3:15 pm\",\"seattle seahawks\",\"w, 34 - 9\",\"texas stadium\",\"8 - 4\",\"recap\"],[\"14\",\"december 7, 2008\",\"3:15 pm\",\"pittsburgh steelers\",\"l, 13 - 20\",\"heinz field\",\"8 - 5\",\"recap\"],[\"15\",\"december 14, 2008\",\"7:15 pm\",\"new york giants\",\"w, 20 - 8\",\"texas stadium\",\"9 - 5\",\"recap\"],[\"16\",\"december 20, 2008\",\"7:15 pm\",\"baltimore ravens\",\"l, 33 - 24\",\"texas stadium\",\"9 - 6\",\"recap\"],[\"17\",\"december 28, 2008\",\"3:15 pm\",\"philadelphia eagles\",\"l, 44 - 6\",\"lincoln financial field\",\"9 - 7\",\"recap\"]]\nQuestion = Is it true that the game at fedexfield was played at 7:15 pm (cst) on week 11?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    times = get_column_by_name(table_data, \"time (cst)\")\n    game_sites = get_column_by_name(table_data, \"game site\")\n    for week, time, game_site in zip(weeks, times, game_sites):\n        if week == \"11\" and time == \"7:15 pm\" and game_site.lower() == \"fedexfield\":\n            return True\n    return False\n\n### END"}
{"id": "f1cdba2e-d695-43ac-b2f4-25b8453f767e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of philippine submissions for the academy award for best foreign language film\ntable_data = [[\"year (ceremony)\",\"film title used in nomination\",\"original title\",\"director\",\"result\"],[\"1953 (26th)\",\"genghis khan\",\"genghis khan\",\"manuel conde\",\"not nominated\"],[\"1956 (29th)\",\"anak dalita\",\"anak dalita\",\"lamberto v avellana\",\"not nominated\"],[\"1961 (34th)\",\"the moises padilla story\",\"the moises padilla story\",\"gerardo de león\",\"not nominated\"],[\"1967 (40th)\",\"because of a flower\",\"dahil sa isang bulaklak\",\"luis nepomuceno\",\"not nominated\"],[\"1976 (49th)\",\"ganito kami noon , paano kayo ngayon\",\"ganito kami noon , paano kayo ngayon\",\"eddie romero\",\"not nominated\"],[\"1984 (57th)\",\"of the flesh\",\"karnal\",\"marilou diaz - abaya\",\"not nominated\"],[\"1985 (58th)\",\"my country\",\"bayan ko : kapit sa patalim\",\"lino brocka\",\"not nominated\"],[\"1995 (68th)\",\"harvest home\",\"inagaw mo ang lahat sa akin\",\"carlos sigiuon - reyna\",\"not nominated\"],[\"1996 (69th)\",\"dead sure\",\"segurista\",\"tikoy aguiluz\",\"not nominated\"],[\"1997 (70th)\",\"milagros\",\"milagros\",\"marilou diaz - abaya\",\"not nominated\"],[\"1998 (71st)\",\"in the navel of the sea\",\"sa pusod ng dagat\",\"marilou diaz - abaya\",\"not nominated\"],[\"1999 (72nd)\",\"the kite\",\"saranggola\",\"gil portes\",\"not nominated\"],[\"2000 (73rd)\",\"anak\",\"anak\",\"rory quintos\",\"not nominated\"],[\"2001 (74th)\",\"in the bosom of the enemy\",\"gatas sa dibdib ng kaaway\",\"gil portes\",\"not nominated\"],[\"2002 (75th)\",\"small voices\",\"mga munting tinig\",\"gil portes\",\"not nominated\"],[\"2003 (76th)\",\"dekada '70\",\"dekada '70\",\"chito roño\",\"not nominated\"],[\"2004 (77th)\",\"crying ladies\",\"crying ladies\",\"mark meily\",\"not nominated\"],[\"2006 (79th)\",\"the blossoming of maximo oliveros\",\"ang pagdadalaga ni maximo oliveros\",\"auraeus solito\",\"not nominated\"],[\"2007 (80th)\",\"donsol\",\"donsol\",\"adolfo alix , jr\",\"not nominated\"],[\"2008 (81st)\",\"ploning\",\"ploning\",\"dante nico garcia\",\"not nominated\"],[\"2009 (82nd)\",\"grandfather is dead\",\"ded na si lolo\",\"soxie topacio\",\"not nominated\"],[\"2010 (83rd)\",\"noy\",\"noy\",\"dondon santos\",\"not nominated\"],[\"2011 (84th)\",\"the woman in the septic tank\",\"ang babae sa septic tank\",\"marlon rivera\",\"not nominated\"],[\"2012 (85th)\",\"bwakaw\",\"bwakaw\",\"jun robles lana\",\"not nominated\"]]\nQuestion = Is it true that the moises padilla story directed by luis nepomuceno in the year 1976 (49th) was nominated?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year (ceremony)\")\n    films = get_column_by_name(table_data, \"film title used in nomination\")\n    directors = get_column_by_name(table_data, \"director\")\n    results = get_column_by_name(table_data, \"result\")\n    answer = False\n    for year, film, director, result in zip(years, films, directors, results):\n        if year == \"1976 (49th)\" and film.lower() == \"the moises padilla story\" and director.lower() == \"luis nepomuceno\":\n            if result.lower() == \"nominated\":\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "55c7e5af-7ac8-42b9-8aa3-5e2d9d2ad7bd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of how it 's made episodes\ntable_data = [[\"series ep\", \"episode\", \"segment a\", \"segment b\", \"segment c\", \"segment d\"],[\"20 - 01\", \"248\", \"native healing drums\", \"s raisin\", \"stereoscopic viewers\", \"ribbon microphones\"],[\"20 - 02\", \"249\", \"horse bits\", \"oat cereal\", \"turquoise jewellery\", \"electric scooters\"],[\"20 - 03\", \"250\", \"nail nippers\", \"jade putters\", \"ice cider\", \"water skis\"],[\"20 - 04\", \"251\", \"es stagecoach\", \"road reflectors\", \"fire baked pottery\", \"custom motorcycle tanks\"],[\"20 - 05\", \"252\", \"replica clay pipes\", \"drinking fountains\", \"orange liqueur\", \"compound bows\"],[\"20 - 06\", \"253\", \"tissues\", \"travel trailers\", \"s slipper\", \"motorcycle helmets\"],[\"20 - 07\", \"254\", \"u - locks\", \"tepees\", \"s croissant\", \"rolling luggage\"],[\"20 - 08\", \"255\", \"prams\", \"factory - built homes\", \"wood flutes\", \"bicycle tires\"],[\"20 - 09\", \"256\", \"thinning shears\", \"wagon wheels\", \"toaster pastries\", \"violin bows\"],[\"20 - 10\", \"257\", \"cast iron tubs\", \"hopi kachina dolls\", \"mine truck engine rebuild\", \"memory cards\"],[\"20 - 11\", \"258\", \"cycling shoes\", \"s yurt\", \"marine plywood\", \"oil & encaustic paint\"],[\"20 - 12\", \"259\", \"paper fans\", \"walnut oil\", \"copper (part 1)\", \"copper (part 2)\"]]\nQuestion = Is it true that episode 256 has oat cereal on segment b?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    episodes = get_column_by_name(table_data, \"episode\")\n    segment_b = get_column_by_name(table_data, \"segment b\")\n    for episode, segment in zip(episodes, segment_b):\n        if episode == \"256\":\n            answer = equal_to(segment, \"oat cereal\")\n            break \n    return answer\n\n### END"}
{"id": "b24d0e1b-8b33-4dcf-b73f-11a1559ce33a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 football league one\ntable_data = [[\"team\",\"outgoing manager\",\"manner of departure\",\"date of vacancy\",\"replaced by\",\"date of appointment\",\"position in table\"],[\"milton keynes dons\",\"paul ince\",\"signed by blackburn rovers (mutual consent)\",\"22 june 2008\",\"roberto di matteo\",\"2 july 2008\",\"pre - season\"],[\"cheltenham town\",\"keith downing\",\"mutual consent\",\"13 september 2008\",\"martin allen\",\"15 september 2008\",\"24th\"],[\"colchester united\",\"geraint williams\",\"mutual consent\",\"22 september 2008\",\"paul lambert\",\"24 september 2008\",\"23rd\"],[\"carlisle united\",\"john ward\",\"mutual consent\",\"3 november 2008\",\"greg abbott\",\"5 december 2008\",\"20th\"],[\"huddersfield town\",\"stan ternent\",\"mutual consent\",\"4 november 2008\",\"lee clark\",\"11 december 2008\",\"16th\"],[\"swindon town\",\"maurice malpas\",\"mutual consent\",\"14 november 2008\",\"danny wilson\",\"26 december 2008\",\"16th\"],[\"crewe alexandra\",\"steve holland\",\"contract terminated\",\"18 november 2008\",\"guðjón þórðarson\",\"24 december 2008\",\"24th\"],[\"hartlepool united\",\"danny wilson\",\"contract terminated\",\"15 december 2008\",\"chris turner\",\"15 december 2008\",\"13th\"],[\"leeds united\",\"gary mcallister\",\"contract terminated\",\"21 december 2008\",\"simon grayson\",\"23 december 2008\",\"9th\"],[\"walsall\",\"jimmy mullen\",\"contract terminated\",\"10 january 2009\",\"chris hutchings\",\"20 january 2009\",\"12th\"],[\"leyton orient\",\"martin ling\",\"mutual consent\",\"18 january 2009\",\"geraint williams\",\"5 february 2009\",\"21st\"],[\"yeovil town\",\"russell slade\",\"contract terminated\",\"16 february 2009\",\"terry skiverton\",\"18 february 2009\",\"16th\"],[\"brighton & hove albion\",\"micky adams\",\"contract terminated\",\"21 february 2009\",\"russell slade\",\"6 march 2009\",\"21st\"]]\nQuestion = Is it true that leeds united replaced their manager after 23 december 2008?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\nfrom datetime import datetime\n\ndef parse_date(date_str):\n    return datetime.strptime(date_str, '%d %B %Y')\n\ndef later_than(date1, date2):\n    return date1 > date2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    dates_of_appointment = get_column_by_name(table_data, \"date of appointment\")\n    for team, date_of_appointment in zip(teams, dates_of_appointment):\n        if team.lower() == \"leeds united\":\n            parsed_date = parse_date(date_of_appointment)\n            answer = later_than(parsed_date, parse_date(\"23 december 2008\"))\n            break\n    return answer\n\n### END"}
{"id": "5172fce2-6ab6-4415-aad5-c15a82bf2a1b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"order\",\"episode\",\"air date\",\"us timeslot (est)\",\"18 - 49\",\"viewers\"],[\"16\",\"so i think i can dance\",\"october 13 , 2008\",\"monday 9:30 pm\",\"3.1\",\"11.45\"],[\"17\",\"out of africa\",\"october 20 , 2008\",\"monday 9:30 pm\",\"3.0\",\"9.64\"],[\"18\",\"the pill\",\"october 27 , 2008\",\"monday 9:30 pm\",\"3.0\",\"10.45\"],[\"19\",\"the building\",\"november 3 , 2008\",\"monday 9:30 pm\",\"2.7\",\"9.71\"],[\"20\",\"help\",\"november 10 , 2008\",\"monday 9:30 pm\",\"3.0\",\"11.03\"],[\"21\",\"the - ex\",\"november 17 , 2008\",\"monday 9:30 pm\",\"3.0\",\"11.12\"],[\"22\",\"the farm\",\"november 24 , 2008\",\"monday 9:30 pm\",\"3.2\",\"11.93\"],[\"23\",\"the park\",\"december 1 , 2008\",\"monday 9:00 pm\",\"2.2\",\"6.70\"],[\"24\",\"the family vacation\",\"december 1 , 2008\",\"monday 9:30 pm\",\"2.1\",\"6.79\"],[\"25\",\"my best friends boyfriend\",\"march 26 , 2009\",\"thursday 8:30 pm\",\"2.2\",\"6.57\"],[\"26\",\"the dog\",\"april 2 , 2009\",\"thursday 8:30 pm\",\"1.4\",\"4.90\"],[\"27\",\"the amazing racist\",\"april 9 , 2009\",\"thursday 8:30 pm\",\"1.4\",\"4.87\"],[\"28\",\"the debt\",\"april 16 , 2009\",\"thursday 8:30 pm\",\"1.5\",\"4.96\"],[\"29\",\"the rock star\",\"june 25 , 2009\",\"thursday 8:00 pm\",\"1.0\",\"3.72\"],[\"30\",\"todd 's job\",\"july 2 , 2009\",\"thursday 8:00 pm / 8:30 pm\",\"1.0\",\"3.50\"],[\"31\",\"the sister\",\"july 2 , 2009\",\"thursday 8:00 pm / 8:30 pm\",\"1.0\",\"3.28\"],[\"32\",\"the dream job\",\"july 9 , 2009\",\"thursday 8:00 pm / 8:30 pm\",\"1.0\",\"3.59\"],[\"33\",\"the first date\",\"july 9 , 2009\",\"thursday 8:00 pm / 8:30 pm\",\"1.0\",\"3.23\"],[\"34\",\"the other woman\",\"july 23 , 2009\",\"thursday 8:00 pm / 8:30 pm\",\"0.9\",\"3.46\"],[\"35\",\"with this ring\",\"july 23 , 2009\",\"thursday 8:00 pm / 8:30 pm\",\"0.9\",\"3.31\"]]\nQuestion = Is it true that the episode the other woman aired on july , 23 , 2009 with 3.46 viewership share?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    episodes = get_column_by_name(table_data, \"episode\")\n    air_dates = get_column_by_name(table_data, \"air date\")\n    viewers = get_column_by_name(table_data, \"viewers\")\n    for episode, air_date, viewer in zip(episodes, air_dates, viewers):\n        if episode.lower() == \"the other woman\" and air_date.lower() == \"july 23 , 2009\" and viewer == \"3.46\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "de95b6ba-2264-4a7d-bbf3-762a3789e76d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = er (season 15)\ntable_data = [[\"series\",\"season\",\"title\",\"directed by\",\"written by\",\"original air date\"],[\"310\",\"1\",\"life after death\",\"christopher misiano\",\"joe sachs\",\"september 25 , 2008\"],[\"311\",\"2\",\"another thursday at county\",\"paul mccrane\",\"lisa zwerling\",\"october 9 , 2008\"],[\"312\",\"3\",\"the book of abby\",\"christopher chulack\",\"david zabel\",\"october 16 , 2008\"],[\"313\",\"4\",\"parental guidance\",\"john gallagher\",\"janine sherman barrois\",\"october 23 , 2008\"],[\"314\",\"5\",\"haunted\",\"christopher chulack\",\"karen maser\",\"october 30 , 2008\"],[\"315\",\"6\",\"oh , brother\",\"stephen cragg\",\"virgil williams\",\"november 6 , 2008\"],[\"316\",\"7\",\"heal thyself\",\"david zabel\",\"david zabel\",\"november 13 , 2008\"],[\"317\",\"8\",\"age of innocence\",\"paul mccrane\",\"janine sherman barrois\",\"november 20 , 2008\"],[\"318\",\"9\",\"let it snow\",\"charles haid\",\"joe sachs\",\"december 4 , 2008\"],[\"319\",\"10\",\"the high holiday\",\"lesli linka glatter\",\"shannon goss\",\"december 11 , 2008\"],[\"320\",\"11\",\"separation anxiety\",\"terence nightingall\",\"virgil williams\",\"january 8 , 2009\"],[\"321\",\"12\",\"dream runner\",\"andrew bernstein\",\"lisa zwerling\",\"january 15 , 2009\"],[\"322\",\"13\",\"love is a battlefield\",\"richard thorpe\",\"karen maser\",\"january 22 , 2009\"],[\"323\",\"14\",\"a long , strange trip\",\"mimi leder\",\"joe sachs\",\"february 5 , 2009\"],[\"324\",\"15\",\"the family man\",\"eriq la salle\",\"andrew fash\",\"february 12 , 2009\"],[\"325\",\"16\",\"the beginning of the end\",\"jonathan kaplan\",\"david zabel and lisa zwerling\",\"february 19 , 2009\"],[\"326\",\"17\",\"t - minus - 6\",\"rod holcomb\",\"david zabel and lisa zwerling\",\"february 26 , 2009\"],[\"327\",\"18\",\"what we do\",\"david zabel\",\"david zabel\",\"march 5 , 2009\"],[\"328\",\"19\",\"old times\",\"john wells\",\"john wells\",\"march 12 , 2009\"],[\"329\",\"20\",\"shifting equilibrium\",\"andrew bernstein\",\"lisa zwerling\",\"march 19 , 2009\"],[\"330\",\"21\",\"i feel good\",\"stephen cragg\",\"joe sachs\",\"march 26 , 2009\"]]\nQuestion = Is it true that joe sachs is the writer of series number 330 titled i feel good?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    series = get_column_by_name(table_data, \"series\")\n    titles = get_column_by_name(table_data, \"title\")\n    writers = get_column_by_name(table_data, \"written by\")\n    for serie, title, writer in zip(series, titles, writers):\n        if serie == \"330\" and title.lower() == \"i feel good\":\n            answer = writer.lower() == \"joe sachs\"\n            break\n    return answer\n\n### END"}
{"id": "0c120e64-7198-43e4-9f75-8b11397d1374", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of how it 's made episodes\ntable_data = [[\"series ep\", \"episode\", \"segment a\", \"segment b\", \"segment c\", \"segment d\"],[\"20 - 01\", \"248\", \"native healing drums\", \"s raisin\", \"stereoscopic viewers\", \"ribbon microphones\"],[\"20 - 02\", \"249\", \"horse bits\", \"oat cereal\", \"turquoise jewellery\", \"electric scooters\"],[\"20 - 03\", \"250\", \"nail nippers\", \"jade putters\", \"ice cider\", \"water skis\"],[\"20 - 04\", \"251\", \"es stagecoach\", \"road reflectors\", \"fire baked pottery\", \"custom motorcycle tanks\"],[\"20 - 05\", \"252\", \"replica clay pipes\", \"drinking fountains\", \"orange liqueur\", \"compound bows\"],[\"20 - 06\", \"253\", \"tissues\", \"travel trailers\", \"s slipper\", \"motorcycle helmets\"],[\"20 - 07\", \"254\", \"u - locks\", \"tepees\", \"s croissant\", \"rolling luggage\"],[\"20 - 08\", \"255\", \"prams\", \"factory - built homes\", \"wood flutes\", \"bicycle tires\"],[\"20 - 09\", \"256\", \"thinning shears\", \"wagon wheels\", \"toaster pastries\", \"violin bows\"],[\"20 - 10\", \"257\", \"cast iron tubs\", \"hopi kachina dolls\", \"mine truck engine rebuild\", \"memory cards\"],[\"20 - 11\", \"258\", \"cycling shoes\", \"s yurt\", \"marine plywood\", \"oil & encaustic paint\"],[\"20 - 12\", \"259\", \"paper fans\", \"walnut oil\", \"copper (part 1)\", \"copper (part 2)\"]]\nQuestion = Is it true that episode 251 had two segments on road reflectors and hopi kachina dolls?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    episodes = get_column_by_name(table_data, \"episode\")\n    segment_a = get_column_by_name(table_data, \"segment a\")\n    segment_b = get_column_by_name(table_data, \"segment b\")\n    segment_c = get_column_by_name(table_data, \"segment c\")\n    segment_d = get_column_by_name(table_data, \"segment d\")\n    for episode, a, b, c, d in zip(episodes, segment_a, segment_b, segment_c, segment_d):\n        if episode == \"251\":\n            answer = equal_to(a, \"road reflectors\") and equal_to(b, \"hopi kachina dolls\") or equal_to(c, \"road reflectors\") and equal_to(d, \"hopi kachina dolls\")\n            break \n    return answer\n\n### END"}
{"id": "c151ffbc-bde2-46f5-aa83-54209a08312b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = türk telekom arena\ntable_data = [[\"project\", \"year\", \"location\", \"capacity\", \"suites\", \"architect\", \"cost\"],[\"faruk süren project\", \"1997 - 2001\", \"mecidiyeköy\", \"40482\", \"125 + 72 boxes without outside seating\", \"bbb architects\", \"118.5 million ( in 2014 dollars)\"],[\"mehmet cansun project\", \"2001\", \"mecidiyeköy\", \"35000\", \"132\", \"gs member architecture group\", \"35 million ( in 2014 dollars)\"],[\"özhan canaydın : back to süren 's project\", \"2002 - 2005\", \"aslantepe\", \"40482\", \"125\", \"bbb architects\", \"90 million ( in 2014 dollars)\"],[\"eren talu bidding project\", \"2007\", \"aslantepe\", \"52000\", \"150\", \"populous\", \"n / a\"],[\"özhan canaydın project\", \"2007\", \"aslantepe\", \"52652\", \"157\", \"asp stuttgart\", \"250 million ( in 2014 dollars)\"]]\nQuestion = Is it true that the eren talu bidding project is located at aslantepe?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    projects = get_column_by_name(table_data, \"project\")\n    locations = get_column_by_name(table_data, \"location\")\n    answer = False\n    for project, location in zip(projects, locations):\n        if \"eren talu bidding project\" in project.lower():\n            if \"aslantepe\" in location.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "0fa96b30-371f-4b08-9751-f2bf6b4e037f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = big day out lineups by year\ntable_data = [[\"sydney\", \"melbourne\", \"perth\", \"adelaide\", \"gold coast\", \"auckland\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"cancelled\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\"],[\"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"no\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"no\"],[\"no\", \"yes\", \"no\", \"no\", \"no\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"]]\nQuestion = Is it true that sydney is the only one that has a cancelled?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    sydney = get_column_by_name(table_data, \"sydney\")\n    melbourne = get_column_by_name(table_data, \"melbourne\")\n    perth = get_column_by_name(table_data, \"perth\")\n    adelaide = get_column_by_name(table_data, \"adelaide\")\n    gold_coast = get_column_by_name(table_data, \"gold coast\")\n    auckland = get_column_by_name(table_data, \"auckland\")\n    cities = [sydney, melbourne, perth, adelaide, gold_coast, auckland]\n    answer = False\n    for city in cities:\n        if \"cancelled\" in city:\n            if city == sydney:\n                answer = True\n            else:\n                answer = False\n                break\n    return answer\n\n### END"}
{"id": "0e3b4844-d6cb-48d5-8f65-6b7d42578ac4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sanya\ntable_data = [[\"english name\", \"simplified\", \"traditional\", \"pinyin\", \"area\", \"population\", \"density\"],[\"hexi district\", \"河西区\", \"河西區\", \"héxī qū\", \"10\", \"134026\", \"13403\"],[\"hedong district\", \"河东区\", \"河東區\", \"hédōng qū\", \"35\", \"147944\", \"4227\"],[\"haitangwan\", \"海棠湾镇\", \"海棠灣鎮\", \"hǎitángwān zhèn\", \"254\", \"44617\", \"176\"],[\"jiyang\", \"吉阳镇\", \"吉陽鎮\", \"jíyáng zhèn\", \"199\", \"92316\", \"464\"],[\"fenghuang\", \"凤凰镇\", \"鳳凰鎮\", \"fènghuáng zhèn\", \"487\", \"66801\", \"137\"],[\"yacheng\", \"崖城镇\", \"崖城鎮\", \"yáchéng zhèn\", \"383\", \"74779\", \"195\"],[\"tianya\", \"天涯镇\", \"天涯鎮\", \"tiānyá zhèn\", \"269\", \"34934\", \"130\"],[\"yucai\", \"育才镇\", \"育才鎮\", \"yùcái zhèn\", \"315\", \"17515\", \"56\"],[\"nantian farm\", \"国营南田农场\", \"國營南田農場\", \"guóyíng nántián nóngchǎng\", \"nd\", \"24280\", \"nd\"],[\"nanxin farm\", \"国营南新农场\", \"國營南新農場\", \"guóyíng nánxīn nóngchǎng\", \"nd\", \"16801\", \"nd\"],[\"licai farm\", \"国营立才农场\", \"國營立才農場\", \"guóyíng lìcái nóngchǎng\", \"nd\", \"16659\", \"nd\"]]\nQuestion = Is it true that yacheng has a population of 16801?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    english_names = get_column_by_name(table_data, \"english name\")\n    populations = get_column_by_name(table_data, \"population\")\n    for english_name, population in zip(english_names, populations):\n        if english_name.lower() == \"yacheng\":\n            answer = equal_to(population, \"16801\")\n            break \n    return answer\n\n### END"}
{"id": "df31e676-6835-404a-8c57-4c3a0ec2017b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of quadrangles on mercury\ntable_data = [[\"name\",\"number\",\"namesake\",\"albedo feature name\",\"area\",\"current map\"],[\"borealis\",\"h - 1\",\"borealis planitia\",\"borea\",\"north pole to 67 degree latitude\",\"h - 1\"],[\"victoria\",\"h - 2\",\"victoria rupes\",\"aurora\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 2\"],[\"shakespeare\",\"h - 3\",\"shakespeare crater\",\"caduceata\",\"90 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 3\"],[\"raditladi\",\"h - 4\",\"raditladi basin\",\"liguria\",\"270 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 4\"],[\"hokusai\",\"h - 5\",\"hokusai crater\",\"apollonia\",\"360 to 270 degree longitude , 21 to 66 degree latitude\",\"h - 5\"],[\"kuiper\",\"h - 6\",\"kuiper crater\",\"tricrena\",\"0 to 72 degree longitude , 22 to 22 degree latitude\",\"h - 6\"],[\"beethoven\",\"h - 7\",\"beethoven crater\",\"solitudo lycaonis\",\"72 to 144 degree longitude , 22 to 22 degree latitude\",\"h - 7\"],[\"tolstoj\",\"h - 8\",\"tolstoj crater\",\"phaethontias\",\"144 to 216 degree longitude , 22 to 22 degree latitude\",\"h - 8\"],[\"eminescu\",\"h - 9\",\"eminescu crater\",\"solitudo criophori\",\"216 to 288 degree longitude , 22 to 22 degree latitude\",\"h - 9\"],[\"derain\",\"h - 10\",\"derain crater\",\"pieria\",\"288 to 360 degree longitude , - 22 to 22 degree latitude\",\"h - 10\"],[\"discovery\",\"h - 11\",\"discovery rupes\",\"solitudo hermae trismegisti\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 11\"],[\"michelangelo\",\"h - 12\",\"michelangelo crater\",\"solitudo promethei\",\"90 to 180 degree longitude , 21 to - 66 degree latitude\",\"h - 12\"],[\"neruda\",\"h - 13\",\"neruda crater\",\"solitudo persephones\",\"180 to 270 degree longitude , 21 to - 66 degree latitude\",\"h - 13\"],[\"debussy\",\"h - 14\",\"debussy crater\",\"cyllene\",\"270 to 360 degree longitude , 21 to 66 degree latitude\",\"h - 14\"],[\"bach\",\"h - 15\",\"bach crater\",\"australia\",\"south pole to 67 degree latitude\",\"h - 15\"]]\nQuestion = Is it true that neruda and bach have an equal area?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    areas = get_column_by_name(table_data, \"area\")\n    neruda_area = areas[names.index(\"neruda\")]\n    bach_area = areas[names.index(\"bach\")]\n    answer = equal_to(neruda_area, bach_area)\n    return answer\n\n### END"}
{"id": "3e97a1a6-59e1-42f2-9b11-ddbd161f1647", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = volleyball at the 2008 summer olympics - men 's team rosters\ntable_data = [[\"name\", \"height\", \"weight\", \"spike\", \"2008 club\"],[\"bian hongmin\", \"m\", \"-\", \"cm (in)\", \"zhejiang\"],[\"yuan zhi\", \"m\", \"-\", \"cm (in)\", \"liaoning\"],[\"guo peng\", \"m\", \"-\", \"cm (in)\", \"army\"],[\"shi hairong\", \"m\", \"-\", \"cm (in)\", \"jiangsu\"],[\"cui jianjun\", \"m\", \"-\", \"cm (in)\", \"henan\"],[\"jiao shuai\", \"m\", \"-\", \"cm (in)\", \"henan\"],[\"yu dawei\", \"m\", \"-\", \"cm (in)\", \"shangdong\"],[\"shen qiong\", \"m\", \"-\", \"cm (in)\", \"shanghai\"],[\"jiang fudong\", \"m\", \"-\", \"cm (in)\", \"sichuan\"],[\"ren qi\", \"m\", \"-\", \"cm (in)\", \"shanghai\"],[\"sui shengsheng\", \"m\", \"-\", \"cm (in)\", \"liaoning\"],[\"fang yingchao\", \"m\", \"-\", \"cm (in)\", \"shanghai\"]]\nQuestion = Is it true that the spikes are shown in the table?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef is_in_list(value, list):\n    return value in list\n\ndef solution(table_data):\n    spikes = get_column_by_name(table_data, \"spike\")\n    answer = is_in_list(\"cm (in)\", spikes)\n    return not answer\n\n### END"}
{"id": "5b20b182-723b-48eb-816f-3fd989575903", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"satellite\", \"cospar id\", \"satcat no\", \"product number\", \"launch date\", \"estimated end date\", \"estimated operational life\"],[\"kosmos 2133\", \"1991 - 010a\", \"21111\", \"7120\", \"14 february 1991\", \"9 november 1995\", \"4 years 9 months\"],[\"kosmos 2224\", \"1992 - 088a\", \"22269\", \"7121\", \"17 december 1992\", \"17 june 1999\", \"6 years 6 months\"],[\"kosmos 2282\", \"1994 - 038a\", \"23168\", \"7123\", \"6 july 1994\", \"29 december 1995\", \"1 year 5 months\"],[\"kosmos 2350\", \"1998 - 025a\", \"25315\", \"7122\", \"29 april 1998\", \"29 june 1998\", \"2 months\"],[\"kosmos 2379\", \"2001 - 037a\", \"26892\", \"7124\", \"24 august 2001\", \"late 2009 / early 2010\", \"8 years\"],[\"kosmos 2397\", \"2003 - 015a\", \"27775\", \"7126\", \"24 april 2003\", \"june 2003\", \"2 months\"],[\"kosmos 2440\", \"2008 - 033a\", \"33108\", \"7127\", \"26 june 2008\", \"february 2010\", \"1 year 4 months\"]]\nQuestion = Is it true that the kosmos 2397 satellite , which has an estimated operational life of 2 months , has a cospar id of 2003 - 015a?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    satellites = get_column_by_name(table_data, \"satellite\")\n    cospar_ids = get_column_by_name(table_data, \"cospar id\")\n    estimated_operational_lives = get_column_by_name(table_data, \"estimated operational life\")\n    for satellite, cospar_id, estimated_operational_life in zip(satellites, cospar_ids, estimated_operational_lives):\n        if satellite.lower() == \"kosmos 2397\" and estimated_operational_life.lower() == \"2 months\":\n            answer = equal_to(cospar_id, \"2003 - 015a\")\n            break \n    return answer\n\n### END"}
{"id": "fe0c1f21-66b0-476a-a17d-a9d618a16261", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 brazilian grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"felipe massa\", \"ferrari\", \"71\", \"1:34:11.435\", \"1\"],[\"fernando alonso\", \"renault\", \"71\", \"+ 13.298\", \"6\"],[\"kimi räikkönen\", \"ferrari\", \"71\", \"+ 16.235\", \"3\"],[\"sebastian vettel\", \"toro rosso - ferrari\", \"71\", \"+ 38.011\", \"7\"],[\"lewis hamilton\", \"mclaren - mercedes\", \"71\", \"+ 38.907\", \"4\"],[\"timo glock\", \"toyota\", \"71\", \"+ 44.368\", \"10\"],[\"heikki kovalainen\", \"mclaren - mercedes\", \"71\", \"+ 55.074\", \"5\"],[\"jarno trulli\", \"toyota\", \"71\", \"+ 1:08.433\", \"2\"],[\"mark webber\", \"red bull - renault\", \"71\", \"+ 1:19.666\", \"12\"],[\"nick heidfeld\", \"bmw sauber\", \"70\", \"+ 1 lap\", \"8\"],[\"robert kubica\", \"bmw sauber\", \"70\", \"+ 1 lap\", \"13\"],[\"nico rosberg\", \"williams - toyota\", \"70\", \"+ 1 lap\", \"18\"],[\"jenson button\", \"honda\", \"70\", \"+ 1 lap\", \"17\"],[\"sébastien bourdais\", \"toro rosso - ferrari\", \"70\", \"+ 1 lap\", \"9\"],[\"rubens barrichello\", \"honda\", \"70\", \"+ 1 lap\", \"15\"],[\"adrian sutil\", \"force india - ferrari\", \"69\", \"+ 2 laps\", \"20\"],[\"kazuki nakajima\", \"williams - toyota\", \"69\", \"+ 2 laps\", \"16\"],[\"giancarlo fisichella\", \"force india - ferrari\", \"69\", \"+ 2 laps\", \"19\"],[\"nelson piquet jr\", \"renault\", \"0\", \"accident\", \"11\"],[\"david coulthard\", \"red bull - renault\", \"0\", \"collision\", \"14\"]]\nQuestion = Is it true that there is one grid with a time / retired of plus one lap , a driver of sebastien bourdias , and laps larger than seventy?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    laps = get_column_by_name(table_data, \"laps\")\n    time_retired = get_column_by_name(table_data, \"time / retired\")\n    answer = False\n    for driver, lap, time in zip(drivers, laps, time_retired):\n        if driver.lower() == \"sebastien bourdais\" and \"+ 1 lap\" in time.lower() and greater(int(lap), 70):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "6558cb20-b00e-4c9f-801c-ea50ead178b1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1993 open championship\ntable_data = [[\"place\", \"player\", \"country\", \"score\", \"to par\"],[\"t1\", \"mark calcavecchia\", \"united states\", \"66\", \"- 4\"],[\"t1\", \"greg norman\", \"australia\", \"66\", \"- 4\"],[\"t1\", \"peter senior\", \"australia\", \"66\", \"- 4\"],[\"t1\", \"fuzzy zoeller\", \"united states\", \"66\", \"- 4\"],[\"t5\", \"stephen ames\", \"trinidad and tobago\", \"67\", \"- 3\"],[\"t5\", \"howard clark\", \"england\", \"67\", \"- 3\"],[\"t5\", \"glen day\", \"united states\", \"67\", \"- 3\"],[\"t5\", \"gary evans\", \"england\", \"67\", \"- 3\"],[\"t5\", \"bernhard langer\", \"germany\", \"67\", \"- 3\"],[\"t5\", \"mark mcnulty\", \"zimbabwe\", \"67\", \"- 3\"],[\"t5\", \"larry mize\", \"united states\", \"67\", \"- 3\"],[\"t5\", \"des smyth\", \"ireland\", \"67\", \"- 3\"],[\"t5\", \"greg turner\", \"new zealand\", \"67\", \"- 3\"],[\"t5\", \"wayne westner\", \"south africa\", \"67\", \"- 3\"]]\nQuestion = Is it true that howard clark is english?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    countries = get_column_by_name(table_data, \"country\")\n    answer = False\n    for player, country in zip(players, countries):\n        if player.lower() == \"howard clark\" and country.lower() == \"england\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "6d10065b-7ff9-449d-a274-dd967483c37f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"\", \"date\", \"vs\", \"opponent\", \"score\", \"attendance\", \"record\"],[\"1\", \"january 5 , 1991\", \"at\", \"detroit turbos\", \"8 - 18\", \"6847\", \"loss\"],[\"2\", \"january 11 , 1991\", \"vs\", \"new england blazers\", \"11 - 10\", \"14789\", \"win\"],[\"3\", \"january 19 , 1991\", \"at\", \"new york saints\", \"13 - 19\", \"9081\", \"loss\"],[\"4\", \"january 26 , 1991\", \"vs\", \"new york saints\", \"13 - 8\", \"16282\", \"win\"],[\"5\", \"february 10 , 1991\", \"vs\", \"detroit turbos\", \"12 - 14\", \"16642\", \"loss\"],[\"6\", \"february 22 , 1991\", \"at\", \"new england blazers\", \"11 - 13\", \"7095\", \"loss\"],[\"7\", \"february 28 , 1991\", \"vs\", \"pittsburgh bulls\", \"11 - 9\", \"13712\", \"win\"],[\"8\", \"march 9 , 1991\", \"at\", \"pittsburgh bulls\", \"15 - 7\", \"8589\", \"win\"],[\"9\", \"march 17 , 1991\", \"vs\", \"baltimore thunder\", \"14 - 17\", \"16289\", \"loss\"]]\nQuestion = Is it true that baltimore thunder was the opponent on february 28 , 1991?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    answer = False\n    for date, opponent in zip(dates, opponents):\n        if \"february 28 , 1991\" in date.lower():\n            if \"baltimore thunder\" in opponent.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "e610f9aa-bc48-4402-97c7-2815ec45b3ba", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 fc schalke 04 season\ntable_data = [[\"nat\",\"name\",\"moving from\",\"type\",\"transfer window\",\"ends\",\"transfer fee\"],[\"ned\",\"engelaar\",\"twente\",\"transfer\",\"summer\",\"2011\",\"6 m\"],[\"per\",\"farfán\",\"psv\",\"transfer\",\"summer\",\"2012\",\"10 m\"],[\"mar\",\"amsif\",\"youth system\",\"promotion\",\"summer\",\"2010\",\"n / a\"],[\"geo\",\"kenia\",\"youth system\",\"promotion\",\"summer\",\"2012\",\"n / a\"],[\"per\",\"zambrano\",\"youth system\",\"promotion\",\"summer\",\"2012\",\"n / a\"]]\nQuestion = Is it true that moving from psv has a transfer of 10 m that ends in 2012?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    moving_from = get_column_by_name(table_data, \"moving from\")\n    ends = get_column_by_name(table_data, \"ends\")\n    transfer_fee = get_column_by_name(table_data, \"transfer fee\")\n    for move_from, end, fee in zip(moving_from, ends, transfer_fee):\n        if move_from.lower() == \"psv\" and end == \"2012\" and fee == \"10 m\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "7e05bbe3-8b77-4a52-947e-e300cc4540ba", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = emergency shipbuilding program\ntable_data = [[\"yard name\", \"location (city , state)\", \"1st ship delivery date\", \"ship types delivered\", \"total number of ways\", \"total vessels built\"],[\"moore dry dock company\", \"oakland , california\", \"july 1940\", \"c2 type , r2 type , c3 type\", \"4 ways\", \"__ ships for usmc (remainder for usn)\"],[\"bethlehem steel corp\", \"san francisco , california\", \"february 1941\", \"c1 type\", \"number\", \"5 ships for usmc (remainder for usn)\"],[\"seattle - tacoma shipbuilding\", \"tacoma , washington\", \"april 1941\", \"c1 type , c3 type , t1 type\", \"8 ways\", \"__ ships for usmc (remainder for usn)\"],[\"western pipe & steel corp\", \"south san francisco , california\", \"april 1941\", \"c1 type , c3 type\", \"4 ways\", \"__ ships for usmc\"],[\"kaiser permanente (richmond yard 1)\", \"richmond , california\", \"august 1941\", \"british ocean type , ec2 type , vc2 type\", \"7 ways\", \"30 ships for uk , __ ships for usmc\"],[\"kaiser permanente (richmond yard 2)\", \"richmond , california\", \"september 1941\", \"ec2 type , vc2 type\", \"12 ways\", \"__ ships for usmc\"],[\"oregon shipbuilding co\", \"portland , oregon\", \"january 1942\", \"ec2 type , vc2 type\", \"11 ways\", \"__ ships for usmc\"],[\"california shipbuilding corp (calship)\", \"terminal island , los angeles , california\", \"february 1942\", \"ec2 type , vc2 type\", \"14 ways\", \"__ ships for usmc\"],[\"marinship corp\", \"sausalito , california\", \"october 1942\", \"ec2 type , t2 type\", \"6 ways\", \"__ ships for usmc\"],[\"pacific bridge co\", \"alameda , california\", \"december 1942\", \"n3 type\", \"2 ways (basins)\", \"9 ships for usmc (remainder for usn)\"],[\"kaiser company , inc\", \"swan island , portland , oregon\", \"december 1942\", \"t2 type\", \"8 ways\", \"__ ships for usmc\"],[\"kaiser cargo (richmond yard 4)\", \"richmond , california\", \"april 1943\", \"s2 (lst) type , s2 (frigate) type , c1 - m type\", \"3 ways\", \"__ ships for usmc\"],[\"kaiser shipbuilding (richmond yard 3)\", \"richmond , california\", \"august 1943\", \"c4 type\", \"5 ways (basins)\", \"__ ships for usmc\"]]\nQuestion = Is it true that the 12 ways of delivery were done on april 1941?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    delivery_dates = get_column_by_name(table_data, \"1st ship delivery date\")\n    ways = get_column_by_name(table_data, \"total number of ways\")\n    for delivery_date, way in zip(delivery_dates, ways):\n        if \"april 1941\" in delivery_date.lower():\n            answer = equal_to(way, \"12 ways\")\n            break \n    return answer\n\n### END"}
{"id": "3a676154-c356-4ce5-9fca-093544ec68a4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 cleveland cavaliers season\ntable_data = [[\"game\",\"date\",\"team\",\"score\",\"high points\",\"high rebounds\",\"high assists\",\"location attendance\",\"record\"],[\"18\",\"december 2\",\"phoenix suns\",\"w 107 - 90 (ot)\",\"zydrunas ilgauskas (14)\",\"shaquille o'neal (9)\",\"lebron james (10)\",\"quicken loans arena 20562\",\"13 - 5\"],[\"19\",\"december 4\",\"chicago bulls\",\"w 101 - 87 (ot)\",\"lebron james (23)\",\"zydrunas ilgauskas , shaquille o'neal (7)\",\"lebron james (11)\",\"quicken loans arena 20562\",\"14 - 5\"],[\"20\",\"december 6\",\"milwaukee bucks\",\"w 101 - 86 (ot)\",\"delonte west (21)\",\"anderson varejão (12)\",\"lebron james (10)\",\"bradley center 16625\",\"15 - 5\"],[\"21\",\"december 8\",\"memphis grizzlies\",\"l 109 - 111 (ot)\",\"lebron james (43)\",\"lebron james (13)\",\"mo williams (8)\",\"fedex forum 16325\",\"15 - 6\"],[\"22\",\"december 9\",\"houston rockets\",\"l 85 - 95 (ot)\",\"lebron james (27)\",\"shaquille o'neal , j j hickson (10)\",\"lebron james (7)\",\"toyota center 18200\",\"15 - 7\"],[\"23\",\"december 11\",\"portland trail blazers\",\"w 104 - 99 (ot)\",\"lebron james (33)\",\"shaquille o'neal (11)\",\"mo williams (10)\",\"quicken loans arena 20562\",\"16 - 7\"],[\"24\",\"december 13\",\"oklahoma city thunder\",\"w 102 - 89 (ot)\",\"lebron james (44)\",\"anderson varejão (10)\",\"lebron james (6)\",\"ford center 18203\",\"17 - 7\"],[\"25\",\"december 15\",\"new jersey nets\",\"w 99 - 89 (ot)\",\"lebron james (23)\",\"mo williams , jamario moon (8)\",\"lebron james (7)\",\"quicken loans arena 20562\",\"18 - 7\"],[\"26\",\"december 16\",\"philadelphia 76ers\",\"w 108 - 101 (ot)\",\"lebron james (36)\",\"shaquille o'neal (9)\",\"lebron james (7)\",\"wachovia center 19517\",\"19 - 7\"],[\"27\",\"december 18\",\"milwaukee bucks\",\"w 85 - 82 (ot)\",\"lebron james (26)\",\"lebron james (10)\",\"lebron james (8)\",\"quicken loans arena 20562\",\"20 - 7\"],[\"28\",\"december 20\",\"dallas mavericks\",\"l 95 - 102 (ot)\",\"lebron james (25)\",\"anderson varejão , shaquille o'neal (8)\",\"lebron james (6)\",\"american airlines center 20346\",\"20 - 8\"],[\"29\",\"december 21\",\"phoenix suns\",\"w 109 - 91 (ot)\",\"lebron james (29)\",\"mo williams , lebron james , jj hickson (6)\",\"delonte west (6)\",\"us airways center 18221\",\"21 - 8\"],[\"30\",\"december 23\",\"sacramento kings\",\"w 117 - 104 (ot)\",\"lebron james (34)\",\"lebron james (16)\",\"lebron james (10)\",\"arco arena 16407\",\"22 - 8\"],[\"31\",\"december 25\",\"la lakers\",\"w 102 - 87 (ot)\",\"mo williams (28)\",\"anderson varejão , zydrunas ilgauskas (9)\",\"lebron james (9)\",\"staples center 18997\",\"23 - 8\"],[\"32\",\"december 27\",\"houston rockets\",\"w 108 - 83 (ot)\",\"lebron james (29)\",\"shaquille o'neal (11)\",\"lebron james (6)\",\"quicken loans arena 20562\",\"24 - 8\"]]\nQuestion = Is it true that chicago bulls won with 101 - 87 (ot) scores?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    scores = get_column_by_name(table_data, \"score\")\n    for team, score in zip(teams, scores):\n        if team.lower() == \"chicago bulls\":\n            answer = equal_to(score, \"w 101 - 87 (ot)\")\n            break \n    return answer\n\n### END"}
{"id": "0ec020eb-8d7d-4ebf-81f3-cabffe9e6de8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glover teixeira\ntable_data = [[\"result\", \"opponent\", \"method\", \"event\", \"date\"],[\"loss\", \"gabriel vella\", \"points\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"armando sapo\", \"submission\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"salvador minnit\", \"submission\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"jorge bezerra\", \"points\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"loss\", \"vinny magalhães\", \"submission (armbar)\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"loss\", \"gerardi rinaldi\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"dean lister\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"vesa vuori\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"leonardo chocolate\", \"submission (rear naked choke)\", \"adcc brasil trails (under 99 kg)\", \"2009\"],[\"win\", \"renato ferreira\", \"points\", \"adcc brasil trails (under 99 kg)\", \"2009\"]]\nQuestion = Is it true that adcc brasil trails (under 99 kg) was the event with leonardo chocolate after 2009?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef in_string(str1, str2):\n    return str1 in str2\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    events = get_column_by_name(table_data, \"event\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for opponent, event, date in zip(opponents, events, dates):\n        if in_string(\"leonardo chocolate\", opponent.lower()) and in_string(\"adcc brasil trails (under 99 kg)\", event.lower()) and int(date) > 2009:\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "0b48e5c9-3d04-4fab-85a5-0745e3435921", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mahmoud amnah\ntable_data = [[\"date\", \"venue\", \"score\", \"result\", \"competition\"],[\"08 oct 2004\", \"doha , qatar\", \"1 - 0\", \"2 - 1\", \"international friendly\"],[\"26 jan 2005\", \"kuwait city , kuwait\", \"1 - 1\", \"2 - 3\", \"international friendly\"],[\"04 dec 2005\", \"al - gharafa stadium , doha , qatar\", \"1 - 0\", \"2 - 2\", \"west asian games 2005\"],[\"10 dec 2005\", \"qatar sc stadium , doha , qatar\", \"1 - 0\", \"2 - 2\", \"west asian games 2005\"],[\"17 may 2008\", \"abbasiyyin stadium , damascus , syria\", \"1 - 0\", \"2 - 1\", \"international friendly\"]]\nQuestion = Is it true that the west asian games 2005 on both dec 4th , and dec 10th , had a score of 1 - 0 and a result of 2 - 2?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    scores = get_column_by_name(table_data, \"score\")\n    results = get_column_by_name(table_data, \"result\")\n    competitions = get_column_by_name(table_data, \"competition\")\n    answer = False\n    for date, score, result, competition in zip(dates, scores, results, competitions):\n        if \"dec\" in date.lower() and \"2005\" in date.lower() and competition.lower() == \"west asian games 2005\":\n            if equal_to(score, \"1 - 0\") and equal_to(result, \"2 - 2\"):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "f841cb0c-0452-4d2b-b7e5-56220dddb1d9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = south carolina gamecocks men 's soccer\ntable_data = [[\"rank\", \"player\", \"goals\", \"assists\", \"points\", \"years\"],[\"1\", \"doug allison\", \"63\", \"32\", \"158\", \"1984 - 87\"],[\"2\", \"chris faklaris\", \"55\", \"14\", \"124\", \"1991 - 94\"],[\"3\", \"clint mathis\", \"53\", \"15\", \"121\", \"1994 - 97\"],[\"4\", \"clark brisson\", \"36\", \"26\", \"98\", \"1987 - 90\"],[\"5\", \"dan ratcliff\", \"37\", \"20\", \"94\", \"1983 - 86\"],[\"6\", \"jordan quinn\", \"37\", \"13\", \"87\", \"1999 - 02\"],[\"7\", \"andrew coggins\", \"33\", \"15\", \"81\", \"1988 - 91\"],[\"8\", \"brian winstead\", \"33\", \"14\", \"80\", \"1978 - 79\"],[\"9\", \"billy baumhoff\", \"22\", \"34\", \"78\", \"1991 - 94\"],[\"9\", \"rob smith\", \"19\", \"40\", \"78\", \"1991 - 94\"],[\"11\", \"john harr\", \"28\", \"20\", \"76\", \"1997 - 99\"],[\"12\", \"arni arnthorsson\", \"22\", \"25\", \"69\", \"1984 - 87\"],[\"13\", \"dave goodchild\", \"28\", \"12\", \"68\", \"1979 - 82\"],[\"14\", \"rubãn tufiã±o\", \"18\", \"30\", \"66\", \"1989 - 92\"],[\"15\", \"joey worthen\", \"25\", \"15\", \"65\", \"1998 - 01\"]]\nQuestion = Is it true that during the years of 1987 - 1990 a player had scored 36 goals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"years\")\n    goals = get_column_by_name(table_data, \"goals\")\n    for year, goal in zip(years, goals):\n        if \"1987 - 90\" in year:\n            answer = equal_to(goal, \"36\")\n            break \n    return answer\n\n### END"}
{"id": "36552caf-0db9-4b1e-a695-1b8e1d0c2736", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glamorgan county cricket club\ntable_data = [[\"score\", \"batsmen\", \"against\", \"location\", \"year\"],[\"374\", \"matthew elliott and steve james\", \"sussex\", \"colwyn bay\", \"2000\"],[\"252\", \"matthew maynard and david hemp\", \"northamptonshire\", \"sophia gardens\", \"2002\"],[\"313\", \"emrys davies and willie jones\", \"essex\", \"brentwood\", \"1948\"],[\"425\", \"adrian dale and viv richards\", \"middlesex\", \"sophia gardens\", \"1993\"],[\"264\", \"maurice robinson and stan montgomery\", \"hampshire\", \"bournemouth\", \"1949\"],[\"240\", \"jim allenby and mark wallace\", \"surrey\", \"the brit oval\", \"2009\"],[\"211\", \"tony cottey and ottis gibson\", \"leicestershire\", \"swansea\", \"1996\"],[\"202\", \"dai davies and joe hills\", \"sussex\", \"eastbourne\", \"1928\"],[\"203\", \"joe hills and johnnie clay\", \"worcestershire\", \"swansea\", \"1929\"],[\"143\", \"terry davies and simon daniels\", \"gloucestershire\", \"swansea\", \"1982\"]]\nQuestion = Is it true that the score in 1927 is 204?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    scores = get_column_by_name(table_data, \"score\")\n    for year, score in zip(years, scores):\n        if year == \"1927\":\n            answer = equal_to(score, \"204\")\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "c3c3c32d-4a0c-495b-8b34-d953154a8f11", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1935 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"16.18 (114)\", \"north melbourne\", \"6.10 (46)\", \"glenferrie oval\", \"4000\", \"13 july 1935\"],[\"fitzroy\", \"9.10 (64)\", \"st kilda\", \"12.12 (84)\", \"brunswick street oval\", \"15000\", \"13 july 1935\"],[\"essendon\", \"10.14 (74)\", \"melbourne\", \"12.21 (93)\", \"windy hill\", \"8000\", \"13 july 1935\"],[\"richmond\", \"16.10 (106)\", \"footscray\", \"3.11 (29)\", \"punt road oval\", \"16000\", \"13 july 1935\"],[\"south melbourne\", \"18.16 (124)\", \"collingwood\", \"10.11 (71)\", \"lake oval\", \"31000\", \"13 july 1935\"],[\"geelong\", \"6.7 (43)\", \"carlton\", \"11.10 (76)\", \"corio oval\", \"14500\", \"13 july 1935\"]]\nQuestion = Is it true that geelong scored 6.7 (43) and carlton scored 11.10 (76)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    away_team_scores = get_column_by_name(table_data, \"away team score\")\n    for home_team, home_team_score, away_team, away_team_score in zip(home_teams, home_team_scores, away_teams, away_team_scores):\n        if home_team.lower() == \"geelong\" and away_team.lower() == \"carlton\":\n            answer = equal_to(home_team_score, \"6.7 (43)\") and equal_to(away_team_score, \"11.10 (76)\")\n            break \n    return answer\n\n### END"}
{"id": "a9d99cad-41b9-4d7e-bd1d-8b68bfc0543b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = media in fargo - moorhead\ntable_data = [[\"frequency\", \"call sign\", \"name\", \"format\", \"owner\"],[\"88.7 fm\", \"kfbn\", \"heaven 88.7\", \"christian\", \"fargo baptist church\"],[\"90.3 fm\", \"kccd\", \"minnesota public radio / npr\", \"news / talk\", \"minnesota public radio\"],[\"91.1 fm\", \"kccm\", \"minnesota public radio / npr\", \"classical\", \"minnesota public radio\"],[\"91.9 fm\", \"kdsu\", \"prairie public / npr\", \"adult album alternative\", \"north dakota state university\"],[\"92.7 fm\", \"kzdr\", \"92.7 the bone\", \"active rock\", \"mediactive\"],[\"93.7 fm\", \"wday - fm\", \"y94\", \"top 40 (chr)\", \"radio fargo - moorhead\"],[\"95.1 fm\", \"kbvb\", \"bob 95 fm\", \"country\", \"radio fargo - moorhead\"],[\"95.9 fm\", \"kxbq - lp\", \"dive 95.9\", \"alternative\", \"women 's care clinic\"],[\"96.3 fm\", \"knds - lp\", \"thunderradio radio free fargo\", \"college\", \"north dakota state university\"],[\"97.9 fm\", \"kfnw - fm\", \"life 97.9\", \"contemporary christian music\", \"northwestern college\"],[\"98.7 fm\", \"klta\", \"big 98.7\", \"adult chr\", \"triad broadcasting\"],[\"99.3 fm\", \"k257ep\", \"k - love\", \"contemporary christian music ( kklq translator )\", \"educational media foundation\"],[\"99.9 fm\", \"kvox - fm\", \"froggy 99.9\", \"country\", \"triad broadcasting\"],[\"100.7 fm\", \"kklq\", \"k - love\", \"contemporary christian music\", \"educational media foundation\"],[\"101.9 fm\", \"krwk\", \"101.9 talk fm\", \"talk\", \"radio fargo - moorhead\"],[\"103.3 fm\", \"kzcr\", \"z 103.3\", \"rock / aaa\", \"jerry papenfuss\"],[\"103.9 fm\", \"kvmi\", \"103.9 the truck\", \"country\", \"vision media incorporated\"],[\"104.1 fm\", \"kbot\", \"104.1 the wave\", \"adult contemporary\", \"leighton broadcasting\"],[\"104.7 fm\", \"kmjo\", \"104.7 popster fm\", \"adult hits\", \"radio fargo - moorhead\"],[\"105.1 fm\", \"kqwb\", \"q 105.1\", \"active rock\", \"triad broadcasting\"],[\"106.1 fm\", \"kqlx - fm\", \"thunder 106.1\", \"classic country\", \"great plains integrated marketing\"],[\"106.5 fm\", \"krjb\", \"krjb 106.5\", \"country\", \"r&j broadcasting\"],[\"106.9 fm\", \"kegk\", \"eagle 106.9\", \"classic hits\", \"great plains integrated marketing\"],[\"107.9 fm\", \"kpfx\", \"107.9 the fox\", \"classic rock\", \"triad broadcasting\"]]\nQuestion = Is it true that the owner of the contemporary christian music station on life 97.9 fm is northwestern college?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_frequency = get_column_by_name(table_data, \"frequency\")\n    column_format = get_column_by_name(table_data, \"format\")\n    column_owner = get_column_by_name(table_data, \"owner\")\n    answer = False\n    for frequency, format, owner in zip(column_frequency, column_format, column_owner):\n        if frequency == \"97.9 fm\" and format == \"contemporary christian music\":\n            answer = owner == \"northwestern college\"\n            break\n    return answer\n\n### END"}
{"id": "5e50d786-847e-48c8-953e-4f196b05df01", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1928 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"fitzroy\", \"17.11 (113)\", \"south melbourne\", \"11.11 (77)\", \"brunswick street oval\", \"8000\", \"2 june 1928\"],[\"carlton\", \"12.12 (84)\", \"collingwood\", \"13.9 (87)\", \"princes park\", \"30000\", \"2 june 1928\"],[\"north melbourne\", \"5.7 (37)\", \"melbourne\", \"14.16 (100)\", \"arden street oval\", \"9000\", \"2 june 1928\"],[\"richmond\", \"12.21 (93)\", \"geelong\", \"13.12 (90)\", \"punt road oval\", \"10000\", \"2 june 1928\"],[\"st kilda\", \"9.17 (71)\", \"footscray\", \"11.6 (72)\", \"junction oval\", \"12000\", \"2 june 1928\"],[\"hawthorn\", \"7.15 (57)\", \"essendon\", \"13.20 (98)\", \"glenferrie oval\", \"6000\", \"2 june 1928\"]]\nQuestion = Is it true that geelong played away at punt road oval?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    away_teams = get_column_by_name(table_data, \"away team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    answer = False\n    for away_team, venue in zip(away_teams, venues):\n        if away_team.lower() == \"geelong\" and venue.lower() == \"punt road oval\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "26693fcd-3c63-4a85-a21e-1847ce9368e0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1999 tennessee titans season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 12 , 1999\", \"cincinnati bengals\", \"w 36 - 35\", \"65272\"],[\"2\", \"september 19 , 1999\", \"cleveland browns\", \"w 26 - 9\", \"65904\"],[\"3\", \"september 26 , 1999\", \"jacksonville jaguars\", \"w 20 - 19\", \"61502\"],[\"4\", \"october 3 , 1999\", \"san francisco 49ers\", \"l 22 - 24\", \"67447\"],[\"5\", \"october 10 , 1999\", \"baltimore ravens\", \"w 14 - 11\", \"65487\"],[\"6\", \"october 17 , 1999\", \"new orleans saints\", \"w 24 - 21\", \"51875\"],[\"8\", \"october 31 , 1999\", \"st louis rams\", \"w 24 - 21\", \"66415\"],[\"9\", \"november 7 , 1999\", \"miami dolphins\", \"l 0 - 17\", \"74109\"],[\"10\", \"november 14 , 1999\", \"cincinnati bengals\", \"w 24 - 14\", \"46017\"],[\"11\", \"november 21 , 1999\", \"pittsburgh steelers\", \"w 16 - 10\", \"66619\"],[\"12\", \"november 28 , 1999\", \"cleveland browns\", \"w 33 - 21\", \"72008\"],[\"13\", \"december 5 , 1999\", \"baltimore ravens\", \"l 14 - 41\", \"67854\"],[\"14\", \"december 9 , 1999\", \"oakland raiders\", \"w 21 - 14\", \"66357\"],[\"15\", \"december 19 , 1999\", \"atlanta falcons\", \"w 30 - 17\", \"66196\"],[\"16\", \"december 26 , 1999\", \"jacksonville jaguars\", \"w 41 - 14\", \"66641\"],[\"17\", \"january 2 , 2000\", \"pittsburgh steelers\", \"w 47 - 36\", \"48025\"]]\nQuestion = Is it true that the game on the week 1 had an attendance of 65272?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    for week, attendance in zip(weeks, attendances):\n        if week == \"1\":\n            answer = equal_to(attendance, \"65272\")\n            break \n    return answer\n\n### END"}
{"id": "4116fad6-f9f3-48fb-a8c6-6bd12b891d13", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 big ten conference football season\ntable_data = [[\"bowl game\", \"date\", \"stadium\", \"city\", \"television\", \"conference matchups\", \"payout ( us )\"],[\"insight bowl\", \"december 31 , 2008\", \"sun devil stadium\", \"tempe , arizona\", \"nfl\", \"minnesota vs kansas\", \"1.2 million\"],[\"champs sports bowl\", \"december 27 , 2008\", \"citrus bowl\", \"orlando , florida\", \"espn\", \"wisconsin vs florida state\", \"2.25 million\"],[\"alamo bowl\", \"december 29 , 2008\", \"alamodome\", \"san antonio , texas\", \"espn\", \"northwestern vs missouri\", \"2.2 million\"],[\"outback bowl\", \"january 1 , 2009\", \"raymond james stadium\", \"tampa , florida\", \"espn\", \"iowa vs south carolina\", \"3 million\"],[\"capital one\", \"january 1 , 2009\", \"citrus bowl\", \"orlando , florida\", \"abc\", \"michigan state vs georgia\", \"4.25 million\"],[\"fiesta bowl\", \"january 5 , 2009\", \"university of phoenix stadium\", \"glendale , arizona\", \"fox\", \"ohio state vs texas\", \"17.5 million\"]]\nQuestion = Is it true that sun devil stadium has a payout of 3 million?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    payouts = get_column_by_name(table_data, \"payout ( us )\")\n    for stadium, payout in zip(stadiums, payouts):\n        if stadium.lower() == \"sun devil stadium\":\n            answer = equal_to(payout, \"3 million\")\n            break \n    return answer\n\n### END"}
{"id": "3e5e43ce-5313-469a-b664-af7609257215", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 - 11 new jersey nets season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"34\", \"january 1\", \"minnesota\", \"l 88 - 103 (ot)\", \"sasha vujačić (22)\", \"kris humphries (14)\", \"devin harris (8)\", \"target center 12665\", \"9 - 25\"],[\"35\", \"january 5\", \"chicago\", \"w 96 - 94 (ot)\", \"kris humphries (20)\", \"kris humphries (11)\", \"devin harris (11)\", \"prudential center 15025\", \"10 - 25\"],[\"36\", \"january 7\", \"washington\", \"l 77 - 97 (ot)\", \"jordan farmar , brook lopez (14)\", \"stephen graham (9)\", \"devin harris (3)\", \"verizon center 16017\", \"10 - 26\"],[\"37\", \"january 8\", \"milwaukee\", \"l 92 - 115 (ot)\", \"kris humphries (22)\", \"kris humphries (8)\", \"jordan farmar (10)\", \"prudential center 12898\", \"10 - 27\"],[\"38\", \"january 12\", \"phoenix\", \"l 109 - 118 (ot)\", \"sasha vujačić (19)\", \"travis outlaw (11)\", \"devin harris (15)\", \"us airways center 16334\", \"10 - 28\"],[\"39\", \"january 14\", \"la lakers\", \"l 88 - 100 (ot)\", \"brook lopez (35)\", \"kris humphries (15)\", \"devin harris (8)\", \"staples center 18997\", \"10 - 29\"],[\"40\", \"january 15\", \"portland\", \"l 89 - 96 (ot)\", \"brook lopez (32)\", \"kris humphries (10)\", \"devin harris (6)\", \"rose garden 20441\", \"10 - 30\"],[\"41\", \"january 17\", \"golden state\", \"l 100 - 109 (ot)\", \"brook lopez (20)\", \"kris humphries (10)\", \"devin harris (8)\", \"oracle arena 18563\", \"10 - 31\"],[\"42\", \"january 19\", \"utah\", \"w 103 - 95 (ot)\", \"brook lopez (20)\", \"travis outlaw (8)\", \"devin harris (8)\", \"prudential center 13251\", \"11 - 31\"],[\"43\", \"january 21\", \"detroit\", \"w 89 - 74 (ot)\", \"brook lopez (15)\", \"kris humphries (12)\", \"devin harris (9)\", \"prudential center 13316\", \"12 - 31\"],[\"44\", \"january 22\", \"dallas\", \"l 86 - 87 (ot)\", \"brook lopez (24)\", \"kris humphries (15)\", \"devin harris (11)\", \"prudential center 14051\", \"12 - 32\"],[\"45\", \"january 24\", \"cleveland\", \"w 103 - 101 (ot)\", \"brook lopez (28)\", \"kris humphries (11)\", \"devin harris (10)\", \"prudential center 10197\", \"13 - 32\"],[\"46\", \"january 26\", \"memphis\", \"w 93 - 88 (ot)\", \"anthony morrow (19)\", \"derrick favors (9)\", \"devin harris (9)\", \"prudential center 8866\", \"14 - 32\"],[\"47\", \"january 28\", \"indiana\", \"l 92 - 124 (ot)\", \"brook lopez (28)\", \"travis outlaw (6)\", \"devin harris (9)\", \"conseco fieldhouse 11337\", \"14 - 33\"],[\"48\", \"january 29\", \"milwaukee\", \"l 81 - 91 (ot)\", \"brook lopez (26)\", \"kris humphries (10)\", \"devin harris (16)\", \"bradley center 17173\", \"14 - 34\"]]\nQuestion = Is it true that on january 5 only one game was held?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    count = dates.count(\"january 5\")\n    answer = count == 1\n    return answer\n\n### END"}
{"id": "23a057f8-6f0a-4a3d-87b6-37abb578b6a3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = cultural interest fraternities and sororities\ntable_data = [[\"letters\", \"organization\", \"nickname\", \"founding date\", \"founding university\", \"type\"],[\"δλφ\", \"delta lambda phi\", \"dlp , deltas' , or lambda men\", \"1986 - 10 - 15\", \"washington , dc\", \"fraternity\"],[\"κψκ\", \"kappa psi kappa\", \"canes , k - psis , diamonds , or angels\", \"2001 - 08 - 17\", \"tallahassee , florida\", \"fraternity\"],[\"οεπ\", \"omicron epsilon pi\", \"the epps\", \"2000 - 12 - 07\", \"tallahassee , florida\", \"sorority\"],[\"γρλ\", \"gamma rho lambda 1\", \"grl\", \"2003 - 08 - 25\", \"tempe , arizona\", \"sorority\"],[\"αλζ\", \"alpha lambda zeta\", \"the regal alphas\", \"2006 - 01 - 09\", \"houston , texas and atlanta , georgia\", \"fraternity\"],[\"καλ\", \"kappa alpha lambda\", \"the kappas\", \"2003 - 10 - 19\", \"clark atlanta university\", \"sorority\"],[\"φαν\", \"phi alpha nu\", \"phi - nomenal gentlewomen\", \"2006 - 07 - 30\", \"charlotte , nc\", \"fraternity\"]]\nQuestion = Is it true that the kappas is the nickname given to a fraternity in charlotte , nc?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    nicknames = get_column_by_name(table_data, \"nickname\")\n    founding_universities = get_column_by_name(table_data, \"founding university\")\n    types = get_column_by_name(table_data, \"type\")\n    answer = False\n    for nickname, founding_university, type in zip(nicknames, founding_universities, types):\n        if \"charlotte , nc\" in founding_university.lower() and \"fraternity\" in type.lower():\n            if \"the kappas\" in nickname.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "a412d6fe-000e-4931-bfc8-2e2be4670059", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = harald ertl\ntable_data = [[\"year\", \"entrant\", \"chassis\", \"engine\", \"points\"],[\"1975\", \"warsteiner brewery\", \"hesketh 308\", \"cosworth v8\", \"0\"],[\"1976\", \"hesketh racing\", \"hesketh 308d\", \"cosworth v8\", \"0\"],[\"1977\", \"hesketh racing\", \"hesketh 308e\", \"cosworth v8\", \"0\"],[\"1978\", \"sachs racing\", \"ensign n177\", \"cosworth v8\", \"0\"],[\"1978\", \"ats engineering\", \"ats hs1\", \"cosworth v8\", \"0\"],[\"1980\", \"team ats\", \"ats d4\", \"cosworth v8\", \"0\"]]\nQuestion = Is it true that 01 is the lowest number of points with a year of 1978 , and a chassis of ensign n177?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    chassis = get_column_by_name(table_data, \"chassis\")\n    points = get_column_by_name(table_data, \"points\")\n    for year, chassi, point in zip(years, chassis, points):\n        if year == \"1978\" and chassi.lower() == \"ensign n177\":\n            answer = equal_to(point, \"01\")\n            break \n    return answer\n\n### END"}
{"id": "5280f500-66c2-4195-a669-f59b44fda2af", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the howie carr show\ntable_data = [[\"calls\", \"frequency\", \"branding\", \"format\", \"timeslot\", \"group owner\"],[\"wgan\", \"560 khz\", \"news radio 560 wgan\", \"news / talk\", \"live 3p - 6p\", \"saga communications\"],[\"whyn\", \"560 khz\", \"news / talk 560 whyn\", \"news / talk\", \"live 3p - 7p\", \"clear channel communications\"],[\"wvmt\", \"620 khz\", \"news / talk 620 wvmt\", \"news / talk\", \"live 3p - 7p\", \"sison broadcasting\"],[\"wrko\", \"680 khz\", \"am 680 wrko\", \"news / talk\", \"live 3p - 7p\", \"entercom\"],[\"wcrn\", \"830 khz\", \"wcrn 830 true talk\", \"news / talk\", \"live 3p - 7p\", \"carter broadcasting\"],[\"wkbk\", \"1290 khz\", \"1290 wkbk w281au 104.1\", \"news / talk\", \"live 3p - 6p\", \"saga communications\"],[\"wegp\", \"1390 khz\", \"wegp 1390 am - the talk of the county\", \"news / talk\", \"live 3p - 6p\", \"decelles / media , inc\"],[\"wxtk\", \"95.1 mhz\", \"news radio 95 wxtk\", \"news / talk\", \"live 3p - 7p\", \"qantam of cape cod , llc\"],[\"wntk - fm\", \"99.7 mhz\", \"wntk talk radio\", \"news / talk\", \"live 3p - 6p\", \"koor communications\"],[\"wuvr\", \"1490 khz\", \"wntk talk radio\", \"news / talk\", \"live 3p - 6p\", \"koor communications\"],[\"wvom - fm / wvqm\", \"103.9 / 101.3 mhz\", \"the voice of maine\", \"news / talk\", \"live 3p - 7p\", \"blueberry broadcasting\"]]\nQuestion = Is it true that the format of the calls of wrko is the only instance when it is not news / talk?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    calls = get_column_by_name(table_data, \"calls\")\n    formats = get_column_by_name(table_data, \"format\")\n    for call, format in zip(calls, formats):\n        if equal_to(call, \"wrko\"):\n            wrko_format = format\n            break\n    answer = all(equal_to(format, wrko_format) for format in formats)\n    return not answer\n\n### END"}
{"id": "cf6926af-2e31-4ed2-ab4c-1d53275fce67", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = atlanta falcons draft history\ntable_data = [[\"round\", \"pick\", \"overall\", \"name\", \"position\", \"college\"],[\"1\", \"6\", \"6\", \"warren bryant\", \"offensive tackle\", \"kentucky\"],[\"1\", \"20\", \"20\", \"wilson faumuina\", \"defensive tackle\", \"san josã state\"],[\"2\", \"8\", \"36\", \"r c thielemann\", \"guard\", \"arkansas\"],[\"4\", \"6\", \"90\", \"allan leavitt\", \"kicker\", \"georgia\"],[\"5\", \"8\", \"120\", \"shelton diggs\", \"wide receiver\", \"usc\"],[\"6\", \"22\", \"161\", \"keith jenkins\", \"defensive back\", \"cincinnati\"],[\"8\", \"8\", \"203\", \"walter packer\", \"wide receiver\", \"mississippi state\"],[\"9\", \"7\", \"230\", \"john maxwell\", \"offensive tackle\", \"boston college\"],[\"9\", \"19\", \"242\", \"robert speer\", \"defensive end\", \"arkansas state\"],[\"10\", \"6\", \"257\", \"billy ryckman\", \"wide receiver\", \"louisiana tech\"],[\"11\", \"8\", \"287\", \"dave farmer\", \"running back\", \"usc\"],[\"12\", \"7\", \"312\", \"don parrish\", \"defensive tackle\", \"pittsburgh\"]]\nQuestion = Is it true that a defensive end was taken from arkansas state in the 9th round?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    positions = get_column_by_name(table_data, \"position\")\n    colleges = get_column_by_name(table_data, \"college\")\n    answer = False\n    for round, position, college in zip(rounds, positions, colleges):\n        if round == \"9\" and position.lower() == \"defensive end\" and college.lower() == \"arkansas state\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "8717acf7-211f-4e36-b8dc-e9c32b8debad", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = los angeles lakers all - time roster\ntable_data = [[\"player\", \"nationality\", \"position\", \"from\", \"school / country\"],[\"bo lamar\", \"united states\", \"guard\", \"1977\", \"louisiana - lafayette\"],[\"jeff lamp\", \"united states\", \"guard / forward\", \"1987\", \"virginia\"],[\"mark landsberger\", \"united states\", \"forward / center\", \"1979\", \"arizona state\"],[\"stu lantz\", \"united states\", \"guard\", \"1974\", \"nebraska\"],[\"rudy larusso\", \"united states\", \"forward / center\", \"1959\", \"dartmouth\"],[\"butch lee\", \"united states\", \"guard\", \"1979\", \"marquette\"],[\"slick leonard\", \"united states\", \"guard\", \"1956\", \"indiana\"],[\"ronnie lester\", \"united states\", \"guard\", \"1984\", \"iowa\"],[\"stan love\", \"united states\", \"forward\", \"1973\", \"oregon\"],[\"clyde lovellette\", \"united states\", \"forward / center\", \"1953\", \"kansas\"],[\"maurice lucas\", \"united states\", \"forward / center\", \"1985\", \"marquette\"],[\"tyronn lue\", \"united states\", \"guard\", \"1998\", \"nebraska\"],[\"george lynch\", \"united states\", \"forward\", \"1993\", \"north carolina\"],[\"mike lynn\", \"united states\", \"forward\", \"1969\", \"ucla\"]]\nQuestion = Is it true that , bo lamar from virginia won in 1987?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    years = get_column_by_name(table_data, \"from\")\n    schools = get_column_by_name(table_data, \"school / country\")\n    answer = False\n    for player, year, school in zip(players, years, schools):\n        if player.lower() == \"bo lamar\" and year == \"1987\" and school.lower() == \"virginia\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "ebc0fd82-863d-49a5-ae51-ffe9c4c64ceb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2004 - 05 in scottish football\ntable_data = [[\"date\",\"venue\",\"score\",\"competition\",\"report\"],[\"18 august\",\"hampden park , glasgow (h)\",\"0 - 3\",\"friendly\",\"bbc sport\"],[\"3 september\",\"estadio ciudad de valencia , valencia (a)\",\"1 - 1\",\"friendly\",\"bbc sport\"],[\"8 september\",\"hampden park , glasgow (h)\",\"0 - 0\",\"wcq5\",\"bbc sport\"],[\"9 october\",\"hampden park , glasgow (h)\",\"0 - 1\",\"wcq5\",\"bbc sport\"],[\"13 october\",\"republican stadium , chişinău (a)\",\"1 - 1\",\"wcq5\",\"bbc sport\"],[\"17 november\",\"easter road , edinburgh (h)\",\"1 - 4\",\"friendly\",\"bbc sport\"],[\"26 march\",\"san siro , milan (a)\",\"0 - 2\",\"wcq5\",\"bbc sport\"],[\"4 june\",\"hampden park , glasgow (h)\",\"2 - 0\",\"wcq5\",\"bbc sport\"],[\"8 june\",\"dinamo stadion , minsk (a)\",\"0 - 0\",\"wcq5\",\"bbc sport\"]]\nQuestion = Is it true that the score was 2 - 0 on 4 june?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    scores = get_column_by_name(table_data, \"score\")\n    for date, score in zip(dates, scores):\n        if \"4 june\" in date.lower():\n            answer = equal_to(score, \"2 - 0\")\n            break \n    return answer\n\n### END"}
{"id": "58e6cfbe-f269-49fc-a6c7-22fe16bdbc0b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states house of representatives elections , 1812\ntable_data = [[\"district\", \"incumbent\", \"party\", \"first elected\", \"result\", \"candidates\"],[\"north carolina 2\", \"willis alston\", \"democratic - republican\", \"1798\", \"re - elected\", \"willis alston (dr) 56.0% daniel mason (f) 44.0%\"],[\"north carolina 5\", \"william r king\", \"democratic - republican\", \"1810\", \"re - elected\", \"william r king (dr) 100%\"],[\"north carolina 6\", \"nathaniel macon\", \"democratic - republican\", \"1791\", \"re - elected\", \"nathaniel macon (dr)\"],[\"north carolina 9\", \"none (district created)\", \"none (district created)\", \"none (district created)\", \"new seat democratic - republican gain\", \"bartlett yancey (dr) 61.1% james martin (f) 38.9%\"],[\"north carolina 10\", \"joseph pearson\", \"federalist\", \"1808\", \"re - elected\", \"joseph pearson (f) 54.1% alexander gary (dr) 45.9%\"]]\nQuestion = Is it true that the candidate at the distract where the incumbent was nathaniel macon was nathaniel macon?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef in_string(str1, str2):\n    return str1 in str2\n\ndef solution(table_data):\n    incumbents = get_column_by_name(table_data, \"incumbent\")\n    candidates = get_column_by_name(table_data, \"candidates\")\n    for incumbent, candidate in zip(incumbents, candidates):\n        if incumbent.lower() == \"nathaniel macon\":\n            answer = in_string(incumbent.lower(), candidate.lower())\n            break \n    return answer\n\n### END"}
{"id": "99f07ed2-2002-474b-8b22-e0ef8d732fb6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = orlando magic all - time roster\ntable_data = [[\"player\", \"nationality\", \"position\", \"years in orlando\", \"school / club team\"],[\"matt barnes\", \"united states\", \"guard - forward\", \"2009 - 2010\", \"ucla\"],[\"andre barrett\", \"united states\", \"guard\", \"2005\", \"seton hall\"],[\"brandon bass\", \"united states\", \"forward\", \"2009 - 2011\", \"louisiana state\"],[\"tony battie\", \"united states\", \"forward - center\", \"2004 - 2009\", \"texas tech\"],[\"david benoit\", \"united states\", \"forward\", \"1998\", \"alabama\"],[\"keith bogans\", \"united states\", \"guard\", \"2003 - 2004\", \"kentucky\"],[\"keith bogans\", \"united states\", \"guard\", \"2006 - 2009\", \"kentucky\"],[\"anthony bonner\", \"united states\", \"forward\", \"1995 - 1996\", \"st louis\"],[\"anthony bowie\", \"united states\", \"guard\", \"1991 - 1996\", \"oklahoma\"],[\"earl boykins\", \"united states\", \"guard\", \"1999\", \"eastern michigan\"],[\"michael bradley\", \"united states\", \"forward\", \"2004 - 2005\", \"villanova\"],[\"dee brown\", \"united states\", \"guard\", \"2000 - 2002\", \"jacksonville\"],[\"jud buechler\", \"united states\", \"guard - forward\", \"2001 - 2002\", \"arizona\"],[\"pat burke\", \"ireland\", \"center\", \"2002 - 2003\", \"auburn\"]]\nQuestion = Is it true that pat burke 's nationality is ireland?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    answer = False\n    for player, nationality in zip(players, nationalities):\n        if player.lower() == \"pat burke\":\n            answer = nationality.lower() == \"ireland\"\n            break\n    return answer\n\n### END"}
{"id": "bb43327e-7907-4594-aba2-6b9bdd3e54e6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 seattle supersonics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"47\", \"february 2\", \"new york\", \"w 86 - 85 (ot)\", \"kevin durant (21)\", \"nick collison (12)\", \"earl watson (8)\", \"keyarena 12783\", \"12 - 35\"],[\"48\", \"february 4\", \"chicago\", \"l 108 - 118 (ot)\", \"wally szczerbiak (21)\", \"nick collison (9)\", \"earl watson (8)\", \"keyarena 10935\", \"12 - 36\"],[\"49\", \"february 6\", \"sacramento\", \"w 105 - 92 (ot)\", \"earl watson (23)\", \"earl watson chris wilcox (10)\", \"earl watson (10)\", \"arco arena 13136\", \"13 - 36\"],[\"50\", \"february 8\", \"phoenix\", \"l 99 - 103 (ot)\", \"chris wilcox (22)\", \"chris wilcox (15)\", \"earl watson (5)\", \"us airways center 18422\", \"13 - 37\"],[\"51\", \"february 13\", \"utah\", \"l 93 - 112 (ot)\", \"kevin durant (19)\", \"kurt thomas (13)\", \"earl watson (14)\", \"keyarena 10618\", \"13 - 38\"],[\"52\", \"february 19\", \"memphis\", \"w 108 - 101 (ot)\", \"earl watson (26)\", \"nick collison jeff green (9)\", \"earl watson (9)\", \"keyarena 11391\", \"14 - 38\"],[\"53\", \"february 21\", \"portland\", \"l 88 - 92 (ot)\", \"kevin durant (20)\", \"nick collison (14)\", \"earl watson (9)\", \"rose garden 20168\", \"14 - 39\"],[\"54\", \"february 22\", \"portland\", \"w 99 - 87 (ot)\", \"kevin durant (17)\", \"jeff green (9)\", \"earl watson (4)\", \"keyarena 16640\", \"15 - 39\"],[\"55\", \"february 24\", \"l a lakers\", \"l 91 - 111 (ot)\", \"mickaël gelabale (21)\", \"johan petro (10)\", \"earl watson (8)\", \"keyarena 17072\", \"15 - 40\"],[\"56\", \"february 26\", \"golden state\", \"l 99 - 105 (ot)\", \"kevin durant jeff green (21)\", \"nick collison (13)\", \"luke ridnour (15)\", \"oracle arena 19412\", \"15 - 41\"],[\"57\", \"february 27\", \"denver\", \"l 96 - 138 (ot)\", \"kevin durant mickaël gelabale (16)\", \"johan petro (8)\", \"mickaël gelabale (6)\", \"keyarena 13627\", \"15 - 42\"]]\nQuestion = Is it true that the team playing on february 8th was phoenix?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    teams = get_column_by_name(table_data, \"team\")\n    answer = False\n    for date, team in zip(dates, teams):\n        if \"february 8\" in date.lower():\n            answer = \"phoenix\" in team.lower()\n            break\n    return answer\n\n### END"}
{"id": "4bbc858f-954c-4942-9bed-b86e1d9a9535", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = john mcenroe career statistics\ntable_data = [[\"outcome\", \"year\", \"championship\", \"surface\", \"partner\", \"opponents in the final\", \"score in the final\"],[\"winner\", \"2007\", \"french open\", \"clay\", \"järryd\", \"fitzgerald vilas\", \"6 - 1 , 6 - 2\"],[\"winner\", \"2008\", \"french open\", \"clay\", \"järryd\", \"bahrami leconte\", \"6 - 4 , 7 - 6 2\"],[\"winner\", \"2009\", \"french open\", \"clay\", \"järryd\", \"bahrami leconte\", \"7 - 6 2 , 6 - 1\"],[\"winner\", \"2010\", \"french open\", \"clay\", \"gómez\", \"bahrami leconte\", \"6 - 1 , 6 - 1\"],[\"runner - up\", \"2011\", \"french open\", \"clay\", \"gómez\", \"forget leconte\", \"6 - 3 , 5 - 7 ,\"]]\nQuestion = Is it true that at the french open games the surface that fitzgerald vilas played on was clay?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    championships = get_column_by_name(table_data, \"championship\")\n    surfaces = get_column_by_name(table_data, \"surface\")\n    opponents = get_column_by_name(table_data, \"opponents in the final\")\n    answer = False\n    for championship, surface, opponent in zip(championships, surfaces, opponents):\n        if \"french open\" in championship.lower() and \"fitzgerald vilas\" in opponent.lower():\n            answer = \"clay\" in surface.lower()\n            break\n    return answer\n\n### END"}
{"id": "cb28d5d5-2065-44fe-8953-8708a955357b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mike hailwood\ntable_data = [[\"year\", \"entrant\", \"chassis\", \"engine\", \"pts\"],[\"1963\", \"reg parnell racing\", \"lotus 24\", \"climax\", \"0\"],[\"1963\", \"reg parnell racing\", \"lola mk4\", \"climax\", \"0\"],[\"1964\", \"reg parnell racing\", \"lotus 25\", \"brm\", \"1\"],[\"1965\", \"reg parnell racing\", \"lotus 25\", \"brm\", \"0\"],[\"1971\", \"team surtees\", \"surtees ts9\", \"ford\", \"3\"],[\"1972\", \"brooke bond oxo team surtees\", \"surtees ts9b\", \"ford\", \"13\"],[\"1973\", \"brooke bond oxo team surtees\", \"surtees ts14a\", \"ford\", \"0\"],[\"1974\", \"yardley team mclaren\", \"mclaren m23\", \"ford\", \"12\"]]\nQuestion = Is it true that 1973 the engine used was a climax , earning 13 points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    engines = get_column_by_name(table_data, \"engine\")\n    points = get_column_by_name(table_data, \"pts\")\n    for year, engine, point in zip(years, engines, points):\n        if year == \"1973\":\n            answer = equal_to(engine, \"climax\") and equal_to(point, \"13\")\n            break \n    return answer\n\n### END"}
{"id": "31243738-4644-45ac-9673-f8ab141533d7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = busiest airports in the united kingdom by total passenger traffic\ntable_data = [[\"rank\", \"airport\", \"total passengers\", \"% change 2006 / 2007\", \"international passengers\", \"domestic passengers\", \"transit passengers\", \"aircraft movements\", \"freight (metric tonnes)\"],[\"1\", \"london heathrow\", \"68066028\", \"0.8%\", \"62098911\", \"5753476\", \"213641\", \"481476\", \"1310987\"],[\"2\", \"london gatwick\", \"35216113\", \"3.1%\", \"31142002\", \"4023402\", \"50709\", \"266550\", \"171078\"],[\"3\", \"london stansted\", \"23779697\", \"0.4%\", \"21204946\", \"2554304\", \"20447\", \"208462\", \"203747\"],[\"4\", \"manchester\", \"22112625\", \"1.5%\", \"18662468\", \"3229255\", \"220902\", \"222703\", \"165366\"],[\"5\", \"london luton\", \"9927321\", \"5.3%\", \"8427894\", \"1491467\", \"7960\", \"120238\", \"38095\"],[\"6\", \"birmingham airport\", \"9226340\", \"0.9%\", \"7592240\", \"1541815\", \"92285\", \"114679\", \"13585\"],[\"7\", \"edinburgh\", \"9047558\", \"5.1%\", \"3417891\", \"5619309\", \"10358\", \"128172\", \"19292\"],[\"8\", \"glasgow international\", \"8795727\", \"0.6%\", \"4131512\", \"4594575\", \"69640\", \"108305\", \"4276\"],[\"9\", \"bristol\", \"5926774\", \"2.9%\", \"4608290\", \"1275566\", \"42918\", \"76428\", \"20\"],[\"10\", \"newcastle\", \"5650716\", \"4.0%\", \"3948594\", \"1675013\", \"27109\", \"79200\", \"785\"],[\"11\", \"liverpool\", \"5468510\", \"10.2%\", \"4636149\", \"827085\", \"5276\", \"86668\", \"3709\"],[\"12\", \"east midlands\", \"5413360\", \"14.5%\", \"4709855\", \"696649\", \"6856\", \"93989\", \"274753\"],[\"13\", \"belfast international\", \"5272664\", \"4.6%\", \"1788807\", \"3447248\", \"36609\", \"77395\", \"38429\"],[\"14\", \"aberdeen\", \"3412257\", \"7.8%\", \"1475988\", \"1935152\", \"1117\", \"121927\", \"3434\"],[\"15\", \"london city\", \"2912123\", \"23.5%\", \"2214884\", \"697239\", \"0\", \"91177\", \"0\"],[\"16\", \"leeds bradford\", \"2881539\", \"3.2%\", \"2229283\", \"630575\", \"21681\", \"65249\", \"109\"],[\"17\", \"glasgow prestwick\", \"2422332\", \"1.0%\", \"1827592\", \"593117\", \"1623\", \"47910\", \"31517\"],[\"18\", \"belfast city\", \"2186993\", \"3.9%\", \"93547\", \"2093320\", \"126\", \"43022\", \"1057\"],[\"19\", \"cardiff\", \"2111148\", \"4.3%\", \"1665247\", \"428260\", \"17641\", \"43963\", \"2391\"]]\nQuestion = Is it true that the number of transit passengers for london gatwick is 50709?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    airports = get_column_by_name(table_data, \"airport\")\n    transit_passengers = get_column_by_name(table_data, \"transit passengers\")\n    for airport, transit_passenger in zip(airports, transit_passengers):\n        if airport.lower() == \"london gatwick\":\n            answer = equal_to(transit_passenger, \"50709\")\n            break \n    return answer\n\n### END"}
{"id": "f29647fd-a0d5-4d61-a367-a0b5acf9183b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = los angeles lakers all - time roster\ntable_data = [[\"player\",\"nationality\",\"position\",\"from\",\"school / country\"],[\"bo lamar\",\"united states\",\"guard\",\"1977\",\"louisiana - lafayette\"],[\"jeff lamp\",\"united states\",\"guard / forward\",\"1987\",\"virginia\"],[\"mark landsberger\",\"united states\",\"forward / center\",\"1979\",\"arizona state\"],[\"stu lantz\",\"united states\",\"guard\",\"1974\",\"nebraska\"],[\"rudy larusso\",\"united states\",\"forward / center\",\"1959\",\"dartmouth\"],[\"butch lee\",\"united states\",\"guard\",\"1979\",\"marquette\"],[\"slick leonard\",\"united states\",\"guard\",\"1956\",\"indiana\"],[\"ronnie lester\",\"united states\",\"guard\",\"1984\",\"iowa\"],[\"stan love\",\"united states\",\"forward\",\"1973\",\"oregon\"],[\"clyde lovellette\",\"united states\",\"forward / center\",\"1953\",\"kansas\"],[\"maurice lucas\",\"united states\",\"forward / center\",\"1985\",\"marquette\"],[\"tyronn lue\",\"united states\",\"guard\",\"1998\",\"nebraska\"],[\"george lynch\",\"united states\",\"forward\",\"1993\",\"north carolina\"],[\"mike lynn\",\"united states\",\"forward\",\"1969\",\"ucla\"]]\nQuestion = Is it true that jeff lamp is from virginia and played in 1987?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    years = get_column_by_name(table_data, \"from\")\n    schools = get_column_by_name(table_data, \"school / country\")\n    for player, year, school in zip(players, years, schools):\n        if player.lower() == \"jeff lamp\":\n            answer = equal_to(year, \"1987\") and equal_to(school, \"virginia\")\n            break \n    return answer\n\n### END"}
{"id": "3264f301-7a2e-407a-86d3-9675af12fd3a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = westinghouse broadcasting\ntable_data = [[\"city of license / market\", \"station\", \"channel tv ( dt )\", \"years owned\", \"current affiliation\"],[\"san francisco - oakland - san jose\", \"kpix\", \"5 (29)\", \"1954 - 1995\", \"cbs owned - and - operated ( o&o )\"],[\"baltimore\", \"wjz - tv\", \"13 (13)\", \"1957 - 1995\", \"cbs owned - and - operated (o&o)\"],[\"boston\", \"wbz - tv\", \"4 (30)\", \"1948 - 1995\", \"cbs owned - and - operated (o&o)\"],[\"charlotte\", \"wpcq - tv (now wcnc - tv )\", \"36 (22)\", \"1980 - 1985\", \"nbc affiliate owned by belo corporation\"],[\"cleveland\", \"kyw - tv (now wkyc - tv )\", \"3 (17)\", \"1956 - 1965\", \"nbc affiliate owned by gannett company\"],[\"philadelphia\", \"wptz / kyw - tv\", \"3 (26)\", \"1953 - 1956 1965 - 1995\", \"cbs owned - and - operated (o&o)\"]]\nQuestion = Is it true that the city of license / market for station kpix is baltimore?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    cities = get_column_by_name(table_data, \"city of license / market\")\n    stations = get_column_by_name(table_data, \"station\")\n    answer = False\n    for city, station in zip(cities, stations):\n        if \"kpix\" in station.lower():\n            if \"baltimore\" in city.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "34aeefdf-1983-4610-839e-cbfb39f5d635", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = india national under - 23 football team results\ntable_data = [[\"date\", \"tournament\", \"location\", \"opponent\", \"stadium\", \"score\", \"indian scorers\"],[\"23 february 2011\", \"2012 olympic qualifier\", \"pune , india\", \"myanmar\", \"balewadi sports complex\", \"2 - 1\", \"jeje lalpekhlua , malsawmfela\"],[\"9 march 2011\", \"2012 olympic qualifier\", \"yangon , myanmar\", \"myanmar\", \"thuwunna stadium\", \"1 - 1\", \"chinadorai sabeeth\"],[\"19 june 2011\", \"2012 olympic qualifier\", \"doha , qatar\", \"qatar\", \"jassim bin hamad stadium\", \"1 - 3\", \"jeje lalpekhlua\"],[\"23 june 2011\", \"2012 olympic qualifier\", \"pune , india\", \"qatar\", \"balewadi sports complex\", \"1 - 1\", \"own goal\"],[\"25 june 2012\", \"2014 afc u - 22 asian cup qualifiers\", \"muscat , oman\", \"iraq\", \"royal oman police stadium\", \"1 - 2\", \"alwyn george\"],[\"28 june 2012\", \"2014 afc u - 22 asian cup qualifiers\", \"muscat , oman\", \"united arab emirates\", \"royal oman police stadium\", \"1 - 1\", \"romeo fernandes\"]]\nQuestion = Is it true that the outcome in yangon , myanmar , was 1 - 1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"location\")\n    scores = get_column_by_name(table_data, \"score\")\n    for location, score in zip(locations, scores):\n        if \"yangon , myanmar\" in location.lower():\n            answer = equal_to(score, \"1 - 1\")\n            break \n    return answer\n\n### END"}
{"id": "616b2f86-5fdb-4c26-9ed5-0a54df107003", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 big ten conference football season\ntable_data = [[\"bowl game\", \"date\", \"stadium\", \"city\", \"television\", \"conference matchups\", \"payout ( us )\"],[\"insight bowl\", \"december 31 , 2008\", \"sun devil stadium\", \"tempe , arizona\", \"nfl\", \"minnesota vs kansas\", \"1.2 million\"],[\"champs sports bowl\", \"december 27 , 2008\", \"citrus bowl\", \"orlando , florida\", \"espn\", \"wisconsin vs florida state\", \"2.25 million\"],[\"alamo bowl\", \"december 29 , 2008\", \"alamodome\", \"san antonio , texas\", \"espn\", \"northwestern vs missouri\", \"2.2 million\"],[\"outback bowl\", \"january 1 , 2009\", \"raymond james stadium\", \"tampa , florida\", \"espn\", \"iowa vs south carolina\", \"3 million\"],[\"capital one\", \"january 1 , 2009\", \"citrus bowl\", \"orlando , florida\", \"abc\", \"michigan state vs georgia\", \"4.25 million\"],[\"fiesta bowl\", \"january 5 , 2009\", \"university of phoenix stadium\", \"glendale , arizona\", \"fox\", \"ohio state vs texas\", \"17.5 million\"]]\nQuestion = Is it true that the outback bowl played in raymond james stadium has a payout of 3 million?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    bowl_games = get_column_by_name(table_data, \"bowl game\")\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    payouts = get_column_by_name(table_data, \"payout ( us )\")\n    for bowl_game, stadium, payout in zip(bowl_games, stadiums, payouts):\n        if bowl_game.lower() == \"outback bowl\" and stadium.lower() == \"raymond james stadium\":\n            answer = equal_to(payout, \"3 million\")\n            break \n    return answer\n\n### END"}
{"id": "3ea442c5-9077-453a-a400-759b26b1ca59", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1989 - 90 fa cup\ntable_data = [[\"tie no\",\"home team\",\"score\",\"away team\",\"date\"],[\"1\",\"blackpool\",\"2 - 2\",\"queens park rangers\",\"18 feb 1990\"],[\"replay\",\"queens park rangers\",\"0 - 0\",\"blackpool\",\"21 feb 1990\"],[\"replay\",\"queens park rangers\",\"3 - 0\",\"blackpool\",\"26 feb 1990\"],[\"2\",\"bristol city\",\"0 - 0\",\"cambridge united\",\"17 feb 1990\"],[\"replay\",\"cambridge united\",\"1 - 1\",\"bristol city\",\"21 feb 1990\"],[\"replay\",\"cambridge united\",\"5 - 1\",\"bristol city\",\"27 feb 1990\"],[\"3\",\"liverpool\",\"3 - 0\",\"southampton\",\"17 feb 1990\"],[\"4\",\"west bromwich albion\",\"0 - 2\",\"aston villa\",\"17 feb 1990\"],[\"5\",\"sheffield united\",\"2 - 2\",\"barnsley\",\"18 feb 1990\"],[\"replay\",\"barnsley\",\"0 - 0\",\"sheffield united\",\"21 feb 1990\"],[\"replay\",\"barnsley\",\"0 - 1\",\"sheffield united\",\"5 mar 1990\"],[\"6\",\"newcastle united\",\"2 - 3\",\"manchester united\",\"18 feb 1990\"],[\"7\",\"oldham athletic\",\"2 - 2\",\"everton\",\"17 feb 1990\"],[\"replay\",\"everton\",\"1 - 1\",\"oldham athletic\",\"21 feb 1990\"],[\"replay\",\"oldham athletic\",\"2 - 1\",\"everton\",\"10 mar 1990\"],[\"8\",\"crystal palace\",\"1 - 0\",\"rochdale\",\"17 feb 1990\"]]\nQuestion = Is it true that 16 feb 1991 is the date of the match with newcastle united as the away team?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    away_teams = get_column_by_name(table_data, \"away team\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for away_team, date in zip(away_teams, dates):\n        if \"newcastle united\" in away_team.lower() and \"16 feb 1991\" in date.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "6963b780-b93f-452b-afd9-2b573efad1ed", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = history of test cricket from 1901 to 1914\ntable_data = [[\"date\", \"home captain\", \"away captain\", \"venue\", \"result\"],[\"15 , 16 , 18 , 19 , 20 , 21 dec 1911\", \"clem hill\", \"johnny douglas\", \"sydney cricket ground\", \"aus by 146 runs\"],[\"30 dec , 1 , 2 , 3 jan 1911 / 2\", \"clem hill\", \"johnny douglas\", \"melbourne cricket ground\", \"eng by 8 wkts\"],[\"12 , 13 , 15 , 16 , 17 jan 1912\", \"clem hill\", \"johnny douglas\", \"adelaide oval\", \"eng by 7 wkts\"],[\"9 , 10 , 12 , 13 feb 1912\", \"clem hill\", \"johnny douglas\", \"melbourne cricket ground\", \"eng by inns&225 runs\"],[\"23 , 24 , 26 , 27 , 28 , 29 feb , 1 mar 1912\", \"clem hill\", \"johnny douglas\", \"sydney cricket ground\", \"eng by 70 runs\"]]\nQuestion = Is it true that the english won by 70 runs at the sydney cricket ground on the 23rd of february - the 1st of march , 1912?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    venues = get_column_by_name(table_data, \"venue\")\n    results = get_column_by_name(table_data, \"result\")\n    for date, venue, result in zip(dates, venues, results):\n        if \"23 , 24 , 26 , 27 , 28 , 29 feb , 1 mar 1912\" in date.lower() and \"sydney cricket ground\" in venue.lower():\n            answer = equal_to(result, \"eng by 70 runs\")\n            break \n    return answer\n\n### END"}
{"id": "c438c912-e2ee-4e83-a3ca-65209c861be7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date\",\"visitor\",\"score\",\"home\",\"decision\",\"record\"],[\"february 2\",\"phoenix\",\"2 - 3\",\"nashville\",\"ellis\",\"27 - 21 - 5\"],[\"february 5\",\"carolina\",\"0 - 1\",\"nashville\",\"ellis\",\"28 - 21 - 5\"],[\"february 7\",\"tampa bay\",\"2 - 1\",\"nashville\",\"ellis\",\"28 - 21 - 6\"],[\"february 9\",\"nashville\",\"3 - 4\",\"san jose\",\"ellis\",\"28 - 22 - 6\"],[\"february 10\",\"nashville\",\"6 - 3\",\"phoenix\",\"ellis\",\"29 - 22 - 6\"],[\"february 12\",\"detroit\",\"2 - 4\",\"nashville\",\"ellis\",\"30 - 22 - 6\"],[\"february 14\",\"chicago\",\"6 - 1\",\"nashville\",\"mason\",\"30 - 23 - 6\"],[\"february 16\",\"st louis\",\"1 - 2\",\"nashville\",\"ellis\",\"31 - 23 - 6\"],[\"february 17\",\"nashville\",\"4 - 5\",\"minnesota\",\"ellis\",\"31 - 23 - 7\"],[\"february 19\",\"edmonton\",\"4 - 5\",\"nashville\",\"ellis\",\"32 - 23 - 7\"],[\"february 21\",\"vancouver\",\"3 - 2\",\"nashville\",\"ellis\",\"32 - 23 - 8\"],[\"february 23\",\"dallas\",\"6 - 3\",\"nashville\",\"ellis\",\"32 - 24 - 8\"],[\"february 27\",\"nashville\",\"4 - 8\",\"buffalo\",\"mason\",\"32 - 25 - 8\"]]\nQuestion = Is it true that on february 14 , the game that ended with a decision of mason featured nashville as the home team and ended with a record of 30 - 23 - 6?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    homes = get_column_by_name(table_data, \"home\")\n    decisions = get_column_by_name(table_data, \"decision\")\n    records = get_column_by_name(table_data, \"record\")\n    for date, home, decision, record in zip(dates, homes, decisions, records):\n        if date.lower() == \"february 14\" and home.lower() == \"nashville\" and decision.lower() == \"mason\" and record == \"30 - 23 - 6\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "19f7640a-d2d8-44de-b140-43d359361558", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glamorgan county cricket club\ntable_data = [[\"score\", \"batsmen\", \"against\", \"location\", \"year\"],[\"374\", \"matthew elliott and steve james\", \"sussex\", \"colwyn bay\", \"2000\"],[\"252\", \"matthew maynard and david hemp\", \"northamptonshire\", \"sophia gardens\", \"2002\"],[\"313\", \"emrys davies and willie jones\", \"essex\", \"brentwood\", \"1948\"],[\"425\", \"adrian dale and viv richards\", \"middlesex\", \"sophia gardens\", \"1993\"],[\"264\", \"maurice robinson and stan montgomery\", \"hampshire\", \"bournemouth\", \"1949\"],[\"240\", \"jim allenby and mark wallace\", \"surrey\", \"the brit oval\", \"2009\"],[\"211\", \"tony cottey and ottis gibson\", \"leicestershire\", \"swansea\", \"1996\"],[\"202\", \"dai davies and joe hills\", \"sussex\", \"eastbourne\", \"1928\"],[\"203\", \"joe hills and johnnie clay\", \"worcestershire\", \"swansea\", \"1929\"],[\"143\", \"terry davies and simon daniels\", \"gloucestershire\", \"swansea\", \"1982\"]]\nQuestion = Is it true that jim allenby and mark wallace played at the brit oval location?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    batsmen = get_column_by_name(table_data, \"batsmen\")\n    locations = get_column_by_name(table_data, \"location\")\n    answer = False\n    for batsman, location in zip(batsmen, locations):\n        if \"jim allenby and mark wallace\" in batsman.lower() and \"the brit oval\" in location.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "1cf6c7e3-383f-4358-a712-9b6c1f89f3f3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1970 isle of man tt\ntable_data = [[\"rank\", \"rider\", \"team\", \"speed\", \"time\"],[\"1\", \"chas mortimer\", \"ducati\", \"84.87 mph\", \"2:13.23.4\"],[\"2\", \"john williams\", \"honda\", \"84.80 mph\", \"2:13.29.0\"],[\"3\", \"stan woods\", \"suzuki\", \"84.06 mph\", \"2:14.40.6\"],[\"4\", \"ghunter\", \"ducati\", \"83.94 mph\", \"2:14.52.4\"],[\"5\", \"roy boughley\", \"honda\", \"82.26 mph\", \"2:17.37.6\"],[\"6\", \"raymond ashcroft\", \"suzuki\", \"76.59 mph\", \"2:27.48.8\"],[\"7\", \"tom loughridge\", \"suzuki\", \"76.32 mph\", \"2:28.19.0\"],[\"8\", \"cluton\", \"ducati\", \"72.50 mph\", \"2:36.08.0\"]]\nQuestion = Is it true that tom loughridge is ranked 7th and finished with a time of 2:27.48.8 for team suzuki?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    riders = get_column_by_name(table_data, \"rider\")\n    teams = get_column_by_name(table_data, \"team\")\n    times = get_column_by_name(table_data, \"time\")\n    for rank, rider, team, time in zip(ranks, riders, teams, times):\n        if rider.lower() == \"tom loughridge\" and team.lower() == \"suzuki\":\n            answer = equal_to(rank, \"7\") and equal_to(time, \"2:27.48.8\")\n            break \n    return answer\n\n### END"}
{"id": "4367464e-0041-4900-b399-b0a27edaa8c5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sandro cortese\ntable_data = [[\"season\",\"class\",\"team\",\"motorcycle\",\"type\",\"races\",\"wins\",\"podiums\",\"poles\",\"fastest laps\",\"pts\",\"position\"],[\"2005\",\"125cc\",\"kiefer - bos - castrol honda\",\"honda\",\"honda rs125r\",\"16\",\"0\",\"0\",\"0\",\"0\",\"8\",\"26th\"],[\"2006\",\"125cc\",\"elit - caffè latte\",\"honda\",\"honda rs125r\",\"16\",\"0\",\"0\",\"0\",\"0\",\"23\",\"17th\"],[\"2007\",\"125cc\",\"emmi - caffè latte\",\"aprilia\",\"aprilia rs 125\",\"17\",\"0\",\"0\",\"0\",\"0\",\"66\",\"14th\"],[\"2008\",\"125cc\",\"emmi - caffè latte\",\"aprilia\",\"aprilia rsa 125\",\"17\",\"0\",\"0\",\"0\",\"1\",\"141\",\"8th\"],[\"2009\",\"125cc\",\"ajo interwetten\",\"derbi\",\"derbi rsa 125\",\"16\",\"0\",\"3\",\"1\",\"2\",\"130\",\"6th\"],[\"2010\",\"125cc\",\"ajo motorsport\",\"derbi\",\"derbi rs 125 r\",\"17\",\"0\",\"2\",\"1\",\"2\",\"143\",\"7th\"],[\"2011\",\"125cc\",\"intact - racing team germany\",\"aprilia\",\"aprilia rsa 125\",\"17\",\"2\",\"6\",\"1\",\"2\",\"225\",\"4th\"],[\"2012\",\"moto3\",\"red bull ktm ajo\",\"ktm\",\"ktm m32\",\"17\",\"5\",\"15\",\"7\",\"4\",\"325\",\"1st\"],[\"2013\",\"moto2\",\"dynavolt intact gp\",\"kalex\",\"kalex moto2\",\"16\",\"0\",\"0\",\"0\",\"0\",\"19\",\"20th\"]]\nQuestion = Is it true that in 2012 , ktm motorcycle was in 1st position?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    motorcycles = get_column_by_name(table_data, \"motorcycle\")\n    positions = get_column_by_name(table_data, \"position\")\n    for season, motorcycle, position in zip(seasons, motorcycles, positions):\n        if season == \"2012\" and motorcycle.lower() == \"ktm\":\n            answer = position == \"1st\"\n            break\n    return answer\n\n### END"}
{"id": "7a1ddfc3-bbd4-4ea6-bc95-cca4ae76d7aa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = julia glushko\ntable_data = [[\"outcome\", \"date\", \"tournament\", \"surface\", \"opponent in the final\", \"score\"],[\"winner\", \"november 11 , 2007\", \"mallorca , spain\", \"clay\", \"diana buzean\", \"6 - 0 , 6 - 0\"],[\"winner\", \"may 30 , 2010\", \"ra'anana , israel\", \"hard\", \"keren shlomo\", \"6 - 1 , 6 - 3\"],[\"winner\", \"october 24 , 2010\", \"akko , israel\", \"hard\", \"julia kimmelmann\", \"6 - 2 , 6 - 2\"],[\"winner\", \"november 7 , 2010\", \"kalgoorlie , australia\", \"hard\", \"isabella holland\", \"6 - 1 , 6 - 2\"],[\"winner\", \"november 28 , 2010\", \"traralgon , australia\", \"hard\", \"sacha jones\", \"2 - 6 , 7 - 5 , 7 - 6 (7 - 4)\"],[\"runner - up\", \"july 15 , 2012\", \"waterloo , canada\", \"clay\", \"sharon fichman\", \"6 - 3 , 6 - 2\"],[\"winner\", \"july 29 , 2012\", \"lexington , united states\", \"hard\", \"johanna konta\", \"6 - 3 , 6 - 0\"],[\"winner\", \"march 24 , 2013\", \"innisbrook resort and golf club , united states\", \"clay\", \"patricia mayr - achleitner\", \"2 - 6 , 6 - 0 , 6 - 4\"],[\"winner\", \"july 7 , 2013\", \"waterloo , canada\", \"clay\", \"gabriela dabrowski\", \"6 - 1 , 6 - 3\"]]\nQuestion = Is it true that the tournament 's surface , in traralgon , australia , was hard on november 28 , 2010?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    tournaments = get_column_by_name(table_data, \"tournament\")\n    surfaces = get_column_by_name(table_data, \"surface\")\n    for date, tournament, surface in zip(dates, tournaments, surfaces):\n        if equal_to(date, \"november 28 , 2010\") and equal_to(tournament, \"traralgon , australia\"):\n            answer = equal_to(surface, \"hard\")\n            break\n    return answer\n\n### END"}
{"id": "1edb7c61-3d35-49a5-89e4-6b1db78399c1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = india national under - 23 football team results\ntable_data = [[\"date\", \"tournament\", \"location\", \"opponent\", \"stadium\", \"score\", \"indian scorers\"],[\"23 february 2011\", \"2012 olympic qualifier\", \"pune, india\", \"myanmar\", \"balewadi sports complex\", \"2 - 1\", \"jeje lalpekhlua, malsawmfela\"],[\"9 march 2011\", \"2012 olympic qualifier\", \"yangon, myanmar\", \"myanmar\", \"thuwunna stadium\", \"1 - 1\", \"chinadorai sabeeth\"],[\"19 june 2011\", \"2012 olympic qualifier\", \"doha, qatar\", \"qatar\", \"jassim bin hamad stadium\", \"1 - 3\", \"jeje lalpekhlua\"],[\"23 june 2011\", \"2012 olympic qualifier\", \"pune, india\", \"qatar\", \"balewadi sports complex\", \"1 - 1\", \"own goal\"],[\"25 june 2012\", \"2014 afc u - 22 asian cup qualifiers\", \"muscat, oman\", \"iraq\", \"royal oman police stadium\", \"1 - 2\", \"alwyn george\"],[\"28 june 2012\", \"2014 afc u - 22 asian cup qualifiers\", \"muscat, oman\", \"united arab emirates\", \"royal oman police stadium\", \"1 - 1\", \"romeo fernandes\"]]\nQuestion = Is it true that chinadorai sabeeth was the indian scorer on the 1 - 1 outcome on march 9 , 2011?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    scores = get_column_by_name(table_data, \"score\")\n    indian_scorers = get_column_by_name(table_data, \"indian scorers\")\n    for date, score, indian_scorer in zip(dates, scores, indian_scorers):\n        if date == \"9 march 2011\" and score == \"1 - 1\":\n            answer = equal_to(indian_scorer, \"chinadorai sabeeth\")\n            break \n    return answer\n\n### END"}
{"id": "c635fbc5-9a32-4871-bb55-5d6f64fa6b84", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of venezuelan submissions for the academy award for best foreign language film\ntable_data = [[\"year (ceremony)\",\"original title\",\"film title used in nomination\",\"director\",\"result\"],[\"1978 (50th)\",\"el pez que fuma\",\"el pez que fuma\",\"román chalbaud\",\"not nominated\"],[\"1984 (57th)\",\"la casa de agua\",\"the house of water\",\"jacobo penzo\",\"not nominated\"],[\"1985 (58th)\",\"oriana\",\"oriana\",\"fina torres\",\"not nominated\"],[\"1991 (64th)\",\"jericó\",\"jericho\",\"luis alberto lamata\",\"not nominated\"],[\"1994 (67th)\",\"golpes a mi puerta\",\"knocks at my door\",\"alejandro saderman\",\"not nominated\"],[\"1995 (68th)\",\"sicario\",\"sicario\",\"josé ramón novoa\",\"not nominated\"],[\"1997 (70th)\",\"una vida y dos mandados\",\"one life and two trails\",\"alberto aruelo\",\"not nominated\"],[\"1998 (71st)\",\"rizo\",\"loop\",\"julio sosa\",\"not nominated\"],[\"1999 (72nd)\",\"huelepega : ley de la calle\",\"huelepega\",\"elia schneider\",\"not nominated\"],[\"2000 (73rd)\",\"oro diablo\",\"oro diablo\",\"josé ramón novoa\",\"not nominated\"],[\"2001 (74th)\",\"una casa con vista al mar\",\"a house with a view of the sea\",\"alberto aruelo\",\"not nominated\"],[\"2002 (75th)\",\"la pluma del arcángel\",\"the archangel 's feather\",\"luis manzo\",\"not nominated\"],[\"2003 (76th)\",\"sangrador\",\"sangrador\",\"leonardo henriquez\",\"not nominated\"],[\"2004 (77th)\",\"punto y raya\",\"punto y raya\",\"elia schneider\",\"not nominated\"],[\"2005 (78th)\",\"1888: el extraordinario viaje de santa isabel\",\"1888: the extraordinary voyage of the santa isabel\",\"alfredo anzola\",\"disqualified\"],[\"2006 (79th)\",\"maroa : una niña de la calle\",\"maroa\",\"solveig hoogesteijn\",\"not nominated\"],[\"2007 (80th)\",\"postales de leningrado\",\"postcards from leningrad\",\"mariana rondon\",\"not nominated\"],[\"2008 (81st)\",\"el tinte de la fama\",\"the color of fame\",\"alberto bellame\",\"not nominated\"],[\"2009 (82nd)\",\"libertador morales , el justiciero\",\"libertador morales , el justiciero\",\"efterpi charalambidis\",\"not nominated\"],[\"2010 (83rd)\",\"hermano\",\"hermano\",\"marcel rasquin\",\"not nominated\"],[\"2011 (84th)\",\"the rumble of the stones\",\"el rumor de las piedras\",\"alejandro bellame\",\"not nominated\"],[\"2012 (85th)\",\"rock , paper , scissors\",\"piedra , papel o tijera\",\"hernán jabes\",\"not nominated\"],[\"2013 (86th)\",\"breach in the silence\",\"brecha en el silencio\",\"luis rodríguez , andrés rodríguez\",\"tbd\"]]\nQuestion = Is it true that the original title of the nomination title piedra , papel o tijera is breach in the silence?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    original_titles = get_column_by_name(table_data, \"original title\")\n    nomination_titles = get_column_by_name(table_data, \"film title used in nomination\")\n    for original_title, nomination_title in zip(original_titles, nomination_titles):\n        if nomination_title.lower() == \"piedra , papel o tijera\":\n            answer = equal_to(original_title, \"breach in the silence\")\n            break \n    return answer\n\n### END"}
{"id": "3d9bc2f5-97d5-4479-8497-a7f2c9981b00", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united kingdom general election records\ntable_data = [[\"candidate\", \"party\", \"constituency\", \"year\", \"days\"],[\"alfred dobbs\", \"labour\", \"smethwick\", \"1945\", \"1 1\"],[\"john sunderland\", \"labour\", \"preston\", \"1945\", \"122 1\"],[\"john whittaker\", \"labour\", \"heywood and radcliffe\", \"1945\", \"137 1\"],[\"philip clarke\", \"sinn féin\", \"fermanagh and south tyrone\", \"1955\", \"152 3x\"],[\"thomas mitchell\", \"sinn féin\", \"mid - ulster\", \"1955\", \"152 3x\"],[\"harry west\", \"ulster unionist\", \"fermanagh and south tyrone\", \"february 1974\", \"224 2\"],[\"michael ancram\", \"conservative\", \"berwick and east lothian\", \"february 1974\", \"224 2a\"],[\"barry henderson\", \"conservative\", \"east dunbartonshire\", \"february 1974\", \"224 2a\"],[\"paul tyler\", \"liberal\", \"bodmin\", \"february 1974\", \"224 2a\"],[\"michael winstanley\", \"liberal\", \"hazel grove\", \"february 1974\", \"224 2b\"],[\"james godfrey macmanaway\", \"ulster unionist\", \"belfast west\", \"1950\", \"238 3\"],[\"judith chaplin\", \"conservative\", \"newbury\", \"1992\", \"316 1\"],[\"peter law\", \"independent\", \"blaenau gwent\", \"2005\", \"355 1\"]]\nQuestion = Is it true that the days totaled 137 1 in 1945 when the constituency was heywood and radcliffe?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    constituencies = get_column_by_name(table_data, \"constituency\")\n    years = get_column_by_name(table_data, \"year\")\n    days = get_column_by_name(table_data, \"days\")\n    for constituency, year, day in zip(constituencies, years, days):\n        if constituency.lower() == \"heywood and radcliffe\" and year == \"1945\":\n            answer = equal_to(day, \"137 1\")\n            break \n    return answer\n\n### END"}
{"id": "a63afa70-87f5-4431-9fc2-08a423919fb7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 fis ski jumping world cup\ntable_data = [[\"rank\", \"name\", \"nationality\", \"1st (m)\", \"2nd (m)\", \"points\", \"overall fht points\", \"overall wc points (rank)\"],[\"1\", \"thomas morgenstern\", \"austria\", \"133.0\", \"136.0\", \"264.7\", \"987.1 (6)\", \"440 (4)\"],[\"2\", \"janne ahonen\", \"finland\", \"134.0\", \"133.5\", \"264.0\", \"1013.9 (2)\", \"350 (7)\"],[\"3\", \"simon ammann\", \"switzerland\", \"136.0\", \"131.5\", \"261.5\", \"1008.3 (5)\", \"669 (1)\"],[\"4\", \"wolfgang loitzl\", \"austria\", \"130.5\", \"135.0\", \"260.9\", \"1011.6 (3)\", \"411 (5)\"],[\"5\", \"andreas kofler\", \"austria\", \"129.0\", \"133.5\", \"255.0\", \"1027.2 (1)\", \"521 (3)\"]]\nQuestion = Is it true that the overall fht points for simon ammann is 1008.3 (5)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    overall_fht_points = get_column_by_name(table_data, \"overall fht points\")\n    for name, overall_fht_point in zip(names, overall_fht_points):\n        if name.lower() == \"simon ammann\":\n            answer = equal_to(overall_fht_point, \"1008.3 (5)\")\n            break \n    return answer\n\n### END"}
{"id": "6e4e10ee-f060-4280-a5e0-1704592b41f9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of tallest buildings in germany\ntable_data = [[\"name\", \"city\", \"height (m)\", \"height (ft)\", \"floors\", \"years as tallest\"],[\"commerzbank tower\", \"frankfurt\", \"259\", \"850\", \"56\", \"1997 - present\"],[\"messeturm\", \"frankfurt\", \"257\", \"843\", \"55\", \"1990 - 1997\"],[\"silberturm\", \"frankfurt\", \"166\", \"545\", \"32\", \"1978 - 1990\"],[\"westend gate\", \"frankfurt\", \"159\", \"522\", \"47\", \"1976 - 1978\"],[\"colonia - hochhaus\", \"cologne\", \"147\", \"482\", \"42\", \"1973 - 1976\"],[\"city - hochhaus leipzig\", \"leipzig\", \"143\", \"468\", \"36\", \"1972 - 1973\"],[\"bayer - hochhaus\", \"leverkusen\", \"122\", \"400\", \"29\", \"1963 - 1972\"],[\"friedrich - engelhorn - hochhaus\", \"ludwigshafen\", \"102\", \"335\", \"28\", \"1957 - 1963\"]]\nQuestion = Is it true that the commerzbank tower is 850 feet or 259 meters tall?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    heights_m = get_column_by_name(table_data, \"height (m)\")\n    heights_ft = get_column_by_name(table_data, \"height (ft)\")\n    for name, height_m, height_ft in zip(names, heights_m, heights_ft):\n        if name.lower() == \"commerzbank tower\":\n            answer = equal_to(height_m, \"259\") and equal_to(height_ft, \"850\")\n            break \n    return answer\n\n### END"}
{"id": "c50911da-11e4-4c31-b861-b715d200fe55", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = orlando magic all - time roster\ntable_data = [[\"player\",\"nationality\",\"position\",\"years in orlando\",\"school / club team\"],[\"matt barnes\",\"united states\",\"guard - forward\",\"2009 - 2010\",\"ucla\"],[\"andre barrett\",\"united states\",\"guard\",\"2005\",\"seton hall\"],[\"brandon bass\",\"united states\",\"forward\",\"2009 - 2011\",\"louisiana state\"],[\"tony battie\",\"united states\",\"forward - center\",\"2004 - 2009\",\"texas tech\"],[\"david benoit\",\"united states\",\"forward\",\"1998\",\"alabama\"],[\"keith bogans\",\"united states\",\"guard\",\"2003 - 2004\",\"kentucky\"],[\"keith bogans\",\"united states\",\"guard\",\"2006 - 2009\",\"kentucky\"],[\"anthony bonner\",\"united states\",\"forward\",\"1995 - 1996\",\"st louis\"],[\"anthony bowie\",\"united states\",\"guard\",\"1991 - 1996\",\"oklahoma\"],[\"earl boykins\",\"united states\",\"guard\",\"1999\",\"eastern michigan\"],[\"michael bradley\",\"united states\",\"forward\",\"2004 - 2005\",\"villanova\"],[\"dee brown\",\"united states\",\"guard\",\"2000 - 2002\",\"jacksonville\"],[\"jud buechler\",\"united states\",\"guard - forward\",\"2001 - 2002\",\"arizona\"],[\"pat burke\",\"ireland\",\"center\",\"2002 - 2003\",\"auburn\"]]\nQuestion = Is it true that arizona has a player named jud buechler?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    schools = get_column_by_name(table_data, \"school / club team\")\n    answer = False\n    for player, school in zip(players, schools):\n        if player.lower() == \"jud buechler\" and school.lower() == \"arizona\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "15c22538-ebc0-4da6-8449-9a8038dc3d37", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1990 toronto blue jays season\ntable_data = [[\"date\",\"opponent\",\"score\",\"loss\",\"attendance\",\"record\"],[\"may 1\",\"indians\",\"4 - 3\",\"candiotti (3 - 1)\",\"5111\",\"13 - 9\"],[\"may 2\",\"indians\",\"3 - 0\",\"cerutti (1 - 4)\",\"8801\",\"13 - 10\"],[\"may 4\",\"tigers\",\"3 - 1\",\"flanagan (2 - 2)\",\"49146\",\"13 - 11\"],[\"may 5\",\"tigers\",\"5 - 1\",\"robinson (1 - 3)\",\"49219\",\"14 - 11\"],[\"may 6\",\"tigers\",\"11 - 7\",\"dubois (0 - 1)\",\"49206\",\"15 - 11\"],[\"may 7\",\"white sox\",\"6 - 1\",\"mcdowell (1 - 2)\",\"41384\",\"16 - 11\"],[\"may 8\",\"white sox\",\"4 - 1\",\"cerutti (1 - 5)\",\"41101\",\"16 - 12\"],[\"may 9\",\"white sox\",\"4 - 3\",\"edwards (0 - 1)\",\"43128\",\"17 - 12\"],[\"may 10\",\"tigers\",\"10 - 5\",\"stottlemyre (4 - 3)\",\"11296\",\"17 - 13\"],[\"may 11\",\"tigers\",\"4 - 2\",\"dubois (0 - 2)\",\"17376\",\"18 - 13\"],[\"may 12\",\"tigers\",\"postponed (rain) rescheduled for may 14\",\"postponed (rain) rescheduled for may 14\",\"postponed (rain) rescheduled for may 14\",\"postponed (rain) rescheduled for may 14\"],[\"may 13\",\"tigers\",\"6 - 3\",\"morris (2 - 5)\",\"17068\",\"19 - 13\"],[\"may 14\",\"tigers\",\"8 - 3 (10)\",\"henneman (0 - 3)\",\"10833\",\"20 - 13\"],[\"may 15\",\"mariners\",\"4 - 3 (10)\",\"acker (0 - 1)\",\"41108\",\"20 - 14\"],[\"may 16\",\"mariners\",\"4 - 2\",\"stottlemyre (4 - 4)\",\"45640\",\"20 - 15\"],[\"may 17\",\"mariners\",\"14 - 6\",\"key (4 - 2)\",\"47283\",\"20 - 16\"],[\"may 18\",\"angels\",\"4 - 2\",\"stieb (5 - 2)\",\"49339\",\"20 - 17\"],[\"may 19\",\"angels\",\"11 - 9\",\"ward (1 - 1)\",\"49335\",\"20 - 18\"],[\"may 20\",\"angels\",\"5 - 1\",\"langston (3 - 4)\",\"49421\",\"21 - 18\"],[\"may 21\",\"athletics\",\"4 - 1\",\"stottlemyre (4 - 5)\",\"49471\",\"21 - 19\"],[\"may 22\",\"athletics\",\"5 - 4\",\"wills (3 - 2)\",\"49559\",\"21 - 20\"],[\"may 23\",\"angels\",\"5 - 4\",\"ward (1 - 2)\",\"25179\",\"21 - 21\"],[\"may 24\",\"angels\",\"4 - 3 (11)\",\"henke (0 - 1)\",\"24460\",\"21 - 22\"],[\"may 25\",\"mariners\",\"3 - 1 (11)\",\"swift (2 - 2)\",\"15334\",\"22 - 22\"],[\"may 26\",\"mariners\",\"11 - 4\",\"holman (6 - 3)\",\"25004\",\"23 - 22\"],[\"may 27\",\"mariners\",\"5 - 1\",\"johnson (3 - 3)\",\"25858\",\"24 - 22\"],[\"may 28\",\"athletics\",\"1 - 0\",\"moore (4 - 4)\",\"45005\",\"25 - 22\"],[\"may 29\",\"athletics\",\"2 - 1\",\"stewart (8 - 2)\",\"25255\",\"26 - 22\"],[\"may 30\",\"athletics\",\"8 - 5\",\"blair (0 - 1)\",\"24257\",\"26 - 23\"]]\nQuestion = Is it true that moore (4 - 3) lost the game on may 25?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    losses = get_column_by_name(table_data, \"loss\")\n    answer = False\n    for date, loss in zip(dates, losses):\n        if \"may 25\" in date.lower():\n            answer = \"moore (4 - 3)\" in loss.lower()\n            break\n    return answer\n\n### END"}
{"id": "1b0b6ad9-eb94-4cd4-a89f-76a2fc034593", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 chelsea f.c. season\ntable_data = [[\"competition\",\"current position / round\",\"final position / round\",\"first match\",\"last match\"],[\"fa community shield\",\"-\",\"runner - up\",\"5 aug 2007\",\"5 aug 2007\"],[\"premier league\",\"-\",\"runner - up\",\"12 aug 2007\",\"11 may 2008\"],[\"uefa champions league\",\"-\",\"runner - up\",\"18 sep 2007\",\"21 may 2008\"],[\"football league cup\",\"-\",\"runner - up\",\"24 sep 2007\",\"24 feb 2008\"],[\"fa cup\",\"-\",\"quarter - finals\",\"5 jan 2008\",\"3 mar 2008\"]]\nQuestion = Is it true that the first match played on 24 sep 2007 and the last match was 3 mar 2008?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    first_matches = get_column_by_name(table_data, \"first match\")\n    last_matches = get_column_by_name(table_data, \"last match\")\n    answer = equal_to(first_matches[0], \"24 sep 2007\") and equal_to(last_matches[-1], \"3 mar 2008\")\n    return answer\n\n### END"}
{"id": "63c7e028-c090-41b3-ab0e-dd44c181b6df", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"title\", \"from album\", \"label\", \"label - nr\"],[\"1962\", \"tonight / sinnin' sam\", \"lookin' ahead\", \"pacific jazz\", \"x - 340\"],[\"1962\", \"the young rabbits / song of india\", \"lookin' ahead\", \"pacific jazz\", \"x - 342\"],[\"1962\", \"congolese sermon / weather beat\", \"(only on 45)\", \"pacific jazz\", \"x - 357\"],[\"1963\", \"no name samba / tough talk\", \"tough talk\", \"world pacific\", \"x - 371\"],[\"1963\", \"turkish black / boopie\", \"tough talk\", \"world pacific\", \"x - 388\"],[\"1963\", \"spanish castles / bluesette\", \"jazz waltz (w les mccann)\", \"world pacific\", \"406\"],[\"1964\", \"heat wave / on broadway\", \"heat wave\", \"world pacific\", \"401\"],[\"1964\", \"i remember tomorrow / long john\", \"stretchin' out\", \"world pacific\", \"412\"],[\"1965\", \"tough talk / the thing\", \"the thing\", \"world pacific\", \"77800\"],[\"1965\", \"aqua dulce / soul bourgeoisie\", \"chile con soul\", \"world pacific\", \"77806\"],[\"1966\", \"scratch / uptight\", \"talk that talk\", \"pacific jazz\", \"88125\"],[\"1968\", \"ooga - boo - ga - loo / eleanor rigby\", \"lighthouse '68\", \"pacific jazz\", \"88144\"],[\"1968\", \"hey jude / love and peace\", \"powerhouse\", \"pacific jazz\", \"88146\"],[\"1969\", \"get back / willie and laura mae jones\", \"lighthouse '69\", \"word pacific jazz\", \"88153\"],[\"1970\", \"way back home / jackson\", \"old socks , new shoes\", \"chisa\", \"c - 8010\"]]\nQuestion = Is it true that in 1964 the album heat wave was released?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    albums = get_column_by_name(table_data, \"from album\")\n    answer = False\n    for year, album in zip(years, albums):\n        if year == \"1964\" and album.lower() == \"heat wave\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "f561d91b-d69b-4d55-a8f5-ad067e478b98", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = media in fargo - moorhead\ntable_data = [[\"frequency\", \"call sign\", \"name\", \"format\", \"owner\"],[\"88.7 fm\", \"kfbn\", \"heaven 88.7\", \"christian\", \"fargo baptist church\"],[\"90.3 fm\", \"kccd\", \"minnesota public radio / npr\", \"news / talk\", \"minnesota public radio\"],[\"91.1 fm\", \"kccm\", \"minnesota public radio / npr\", \"classical\", \"minnesota public radio\"],[\"91.9 fm\", \"kdsu\", \"prairie public / npr\", \"adult album alternative\", \"north dakota state university\"],[\"92.7 fm\", \"kzdr\", \"92.7 the bone\", \"active rock\", \"mediactive\"],[\"93.7 fm\", \"wday - fm\", \"y94\", \"top 40 (chr)\", \"radio fargo - moorhead\"],[\"95.1 fm\", \"kbvb\", \"bob 95 fm\", \"country\", \"radio fargo - moorhead\"],[\"95.9 fm\", \"kxbq - lp\", \"dive 95.9\", \"alternative\", \"women 's care clinic\"],[\"96.3 fm\", \"knds - lp\", \"thunderradio radio free fargo\", \"college\", \"north dakota state university\"],[\"97.9 fm\", \"kfnw - fm\", \"life 97.9\", \"contemporary christian music\", \"northwestern college\"],[\"98.7 fm\", \"klta\", \"big 98.7\", \"adult chr\", \"triad broadcasting\"],[\"99.3 fm\", \"k257ep\", \"k - love\", \"contemporary christian music ( kklq translator )\", \"educational media foundation\"],[\"99.9 fm\", \"kvox - fm\", \"froggy 99.9\", \"country\", \"triad broadcasting\"],[\"100.7 fm\", \"kklq\", \"k - love\", \"contemporary christian music\", \"educational media foundation\"],[\"101.9 fm\", \"krwk\", \"101.9 talk fm\", \"talk\", \"radio fargo - moorhead\"],[\"103.3 fm\", \"kzcr\", \"z 103.3\", \"rock / aaa\", \"jerry papenfuss\"],[\"103.9 fm\", \"kvmi\", \"103.9 the truck\", \"country\", \"vision media incorporated\"],[\"104.1 fm\", \"kbot\", \"104.1 the wave\", \"adult contemporary\", \"leighton broadcasting\"],[\"104.7 fm\", \"kmjo\", \"104.7 popster fm\", \"adult hits\", \"radio fargo - moorhead\"],[\"105.1 fm\", \"kqwb\", \"q 105.1\", \"active rock\", \"triad broadcasting\"],[\"106.1 fm\", \"kqlx - fm\", \"thunder 106.1\", \"classic country\", \"great plains integrated marketing\"],[\"106.5 fm\", \"krjb\", \"krjb 106.5\", \"country\", \"r&j broadcasting\"],[\"106.9 fm\", \"kegk\", \"eagle 106.9\", \"classic hits\", \"great plains integrated marketing\"],[\"107.9 fm\", \"kpfx\", \"107.9 the fox\", \"classic rock\", \"triad broadcasting\"]]\nQuestion = Is it true that jerry papenfuss is the owner of z 103.3 that has a frequency of 103.3 fm?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    names = get_column_by_name(table_data, \"name\")\n    owners = get_column_by_name(table_data, \"owner\")\n    for frequency, name, owner in zip(frequencies, names, owners):\n        if frequency.lower() == \"103.3 fm\" and name.lower() == \"z 103.3\" and owner.lower() == \"jerry papenfuss\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "1e440b7d-ef41-47a4-9159-d60dbbc9ad64", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1978 world series\ntable_data = [[\"game\", \"date\", \"location\", \"time\", \"attendance\"],[\"1\", \"october 10\", \"dodger stadium\", \"2:48\", \"55997\"],[\"2\", \"october 11\", \"dodger stadium\", \"2:37\", \"55982\"],[\"3\", \"october 13\", \"yankee stadium (i)\", \"2:27\", \"56447\"],[\"4\", \"october 14\", \"yankee stadium (i)\", \"3:17\", \"56445\"],[\"5\", \"october 15\", \"yankee stadium (i)\", \"2:56\", \"56448\"],[\"6\", \"october 17\", \"dodger stadium\", \"2:34\", \"55985\"]]\nQuestion = Is it true that dodger stadium was the location of the october 10th game?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    locations = get_column_by_name(table_data, \"location\")\n    for date, location in zip(dates, locations):\n        if date == \"october 10\" and location == \"dodger stadium\":\n            return True\n    return False\n\n### END"}
{"id": "9ad2d9d8-d68c-4b56-85f3-1bc4ab201906", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = los angeles lakers all - time roster\ntable_data = [[\"player\", \"nationality\", \"position\", \"from\", \"school / country\"],[\"bo lamar\", \"united states\", \"guard\", \"1977\", \"louisiana - lafayette\"],[\"jeff lamp\", \"united states\", \"guard / forward\", \"1987\", \"virginia\"],[\"mark landsberger\", \"united states\", \"forward / center\", \"1979\", \"arizona state\"],[\"stu lantz\", \"united states\", \"guard\", \"1974\", \"nebraska\"],[\"rudy larusso\", \"united states\", \"forward / center\", \"1959\", \"dartmouth\"],[\"butch lee\", \"united states\", \"guard\", \"1979\", \"marquette\"],[\"slick leonard\", \"united states\", \"guard\", \"1956\", \"indiana\"],[\"ronnie lester\", \"united states\", \"guard\", \"1984\", \"iowa\"],[\"stan love\", \"united states\", \"forward\", \"1973\", \"oregon\"],[\"clyde lovellette\", \"united states\", \"forward / center\", \"1953\", \"kansas\"],[\"maurice lucas\", \"united states\", \"forward / center\", \"1985\", \"marquette\"],[\"tyronn lue\", \"united states\", \"guard\", \"1998\", \"nebraska\"],[\"george lynch\", \"united states\", \"forward\", \"1993\", \"north carolina\"],[\"mike lynn\", \"united states\", \"forward\", \"1969\", \"ucla\"]]\nQuestion = Is it true that rudy larusso , who played in 1959 , played the position of forward / center?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    positions = get_column_by_name(table_data, \"position\")\n    years = get_column_by_name(table_data, \"from\")\n    for player, position, year in zip(players, positions, years):\n        if player.lower() == \"rudy larusso\" and year == \"1959\":\n            answer = equal_to(position, \"forward / center\")\n            break \n    return answer\n\n### END"}
{"id": "c3d69bc3-98f4-4656-8ec3-7037a7aa1a84", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states house of representatives elections , 1984\ntable_data = [[\"district\",\"incumbent\",\"party\",\"first elected\",\"result\",\"candidates\"],[\"florida 1\",\"earl dewitt hutto\",\"democratic\",\"1978\",\"re - elected\",\"earl dewitt hutto (d) unopposed\"],[\"florida 2\",\"don fuqua\",\"democratic\",\"1962\",\"re - elected\",\"don fuqua (d) unopposed\"],[\"florida 3\",\"charles edward bennett\",\"democratic\",\"1948\",\"re - elected\",\"charles edward bennett (d) unopposed\"],[\"florida 5\",\"bill mccollum\",\"republican\",\"1980\",\"re - elected\",\"bill mccollum (r) unopposed\"],[\"florida 6\",\"buddy mackay\",\"democratic\",\"1982\",\"re - elected\",\"buddy mackay (d) 99.3% others 0.7%\"],[\"florida 8\",\"bill young\",\"republican\",\"1970\",\"re - elected\",\"bill young (r) 80.3% robert kent (d) 19.7%\"],[\"florida 9\",\"michael bilirakis\",\"republican\",\"1982\",\"re - elected\",\"michael bilirakis (r) 78.6% jack wilson (d) 21.4%\"],[\"florida 10\",\"andy ireland\",\"republican\",\"1976\",\"re - elected\",\"andy ireland (r) 61.9% patricia m glass (d) 38.1%\"],[\"florida 11\",\"bill nelson\",\"democratic\",\"1978\",\"re - elected\",\"bill nelson (d) 60.5% rob quartel (r) 39.5%\"],[\"florida 12\",\"tom lewis\",\"republican\",\"1982\",\"re - elected\",\"tom lewis (r) unopposed\"],[\"florida 13\",\"connie mack\",\"republican\",\"1982\",\"re - elected\",\"connie mack (r) unopposed\"],[\"florida 14\",\"dan mica\",\"democratic\",\"1978\",\"re - elected\",\"dan mica (d) 55.4% don ross (r) 44.6%\"],[\"florida 16\",\"lawrence j smith\",\"democratic\",\"1982\",\"re - elected\",\"lawrence j smith (d) 56.4% tom bush (r) 43.6%\"],[\"florida 17\",\"william lehman\",\"democratic\",\"1972\",\"re - elected\",\"william lehman (d) unopposed\"],[\"florida 18\",\"claude pepper\",\"democratic\",\"1962\",\"re - elected\",\"claude pepper (d) 60.5% ricardo nunez (r) 39.5%\"]]\nQuestion = Is it true that in 1980 , bill mccollum faced three opponents?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_opponents(candidates):\n    return len(candidates.split('%')) - 1\n\ndef solution(table_data):\n    incumbents = get_column_by_name(table_data, \"incumbent\")\n    candidates = get_column_by_name(table_data, \"candidates\")\n    for incumbent, candidate in zip(incumbents, candidates):\n        if incumbent.lower() == \"bill mccollum\":\n            answer = count_opponents(candidate) == 3\n            break\n    return answer\n\n### END"}
{"id": "b41cb114-7dd9-49a3-adeb-fc7fca7d5f61", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = papal conclave , 1314 - 16\ntable_data = [[\"elector\",\"nationality\",\"faction\",\"elevated\",\"elevator\"],[\"nicolò albertini , op\",\"prato\",\"italian\",\"1303 , december 18\",\"benedict xi\"],[\"bérenger frédol , seniore\",\"french\",\"french\",\"1305 , december 15\",\"clement v\"],[\"arnaud de falguières\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"],[\"guillaume de mandagot , crsa\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"arnaud d'aux\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"jacques d'euse\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"nicolas de fréauville , op\",\"french\",\"french\",\"1305 , december 15\",\"clement v\"],[\"arnaud nouvel , ocist\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"],[\"bérenguer frédol , iuniore\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"michel du bec - crespin\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"guillaume teste\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"guillaume pierre godin , op\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"vital du four , ofm\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"raymond , osb\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"giacomo colonna\",\"roman\",\"italian\",\"1278 , march 12\",\"nicholas iii\"],[\"napoleone orsini\",\"roman\",\"italian\",\"1288 , may 16\",\"nicholas iv\"],[\"pietro colonna\",\"roman\",\"italian\",\"1288 , may 16\",\"nicholas iv\"],[\"guglielmo de longhi\",\"bergamo\",\"italian\",\"1294 , september 18\",\"celestine v\"],[\"giacomo gaetani stefaneschi\",\"rome\",\"italian\",\"1295 , december 17\",\"boniface viii\"],[\"francesco caetani\",\"rome\",\"italian\",\"1295 , december 17\",\"boniface viii\"],[\"luc fieschi\",\"genoese\",\"italian\",\"1300 , march 2\",\"boniface viii\"],[\"arnaud de pellegrue\",\"french\",\"gascon\",\"1305 , december 15\",\"clement v\"],[\"raymond guillaume des forges\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"],[\"bernard de garves\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"]]\nQuestion = Is it true that the nationality for nicholas iii is french?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    elevators = get_column_by_name(table_data, \"elevator\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    for elevator, nationality in zip(elevators, nationalities):\n        if \"nicholas iii\" in elevator.lower():\n            answer = nationality.lower() == \"french\"\n            break\n    return answer\n\n### END"}
{"id": "a6424275-00d0-4ad9-9a3d-390d9a9c3919", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of how it 's made episodes\ntable_data = [[\"series ep\", \"episode\", \"segment a\", \"segment b\", \"segment c\", \"segment d\"],[\"20 - 01\", \"248\", \"native healing drums\", \"s raisin\", \"stereoscopic viewers\", \"ribbon microphones\"],[\"20 - 02\", \"249\", \"horse bits\", \"oat cereal\", \"turquoise jewellery\", \"electric scooters\"],[\"20 - 03\", \"250\", \"nail nippers\", \"jade putters\", \"ice cider\", \"water skis\"],[\"20 - 04\", \"251\", \"es stagecoach\", \"road reflectors\", \"fire baked pottery\", \"custom motorcycle tanks\"],[\"20 - 05\", \"252\", \"replica clay pipes\", \"drinking fountains\", \"orange liqueur\", \"compound bows\"],[\"20 - 06\", \"253\", \"tissues\", \"travel trailers\", \"s slipper\", \"motorcycle helmets\"],[\"20 - 07\", \"254\", \"u - locks\", \"tepees\", \"s croissant\", \"rolling luggage\"],[\"20 - 08\", \"255\", \"prams\", \"factory - built homes\", \"wood flutes\", \"bicycle tires\"],[\"20 - 09\", \"256\", \"thinning shears\", \"wagon wheels\", \"toaster pastries\", \"violin bows\"],[\"20 - 10\", \"257\", \"cast iron tubs\", \"hopi kachina dolls\", \"mine truck engine rebuild\", \"memory cards\"],[\"20 - 11\", \"258\", \"cycling shoes\", \"s yurt\", \"marine plywood\", \"oil & encaustic paint\"],[\"20 - 12\", \"259\", \"paper fans\", \"walnut oil\", \"copper (part 1)\", \"copper (part 2)\"]]\nQuestion = Is it true that 251.0 episode has segment c on custom motorcycle tanks?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    episodes = get_column_by_name(table_data, \"episode\")\n    segment_c = get_column_by_name(table_data, \"segment c\")\n    for episode, segment in zip(episodes, segment_c):\n        if episode == \"251\":\n            answer = equal_to(segment, \"custom motorcycle tanks\")\n            break \n    return answer\n\n### END"}
{"id": "7b123259-389e-4374-b845-9753dc08af39", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = gambrinus liga\ntable_data = [[\"season\", \"champions\", \"runner - up\", \"third place\", \"top goalscorer\", \"club\"],[\"1993 - 94\", \"sparta prague (1)\", \"slavia prague\", \"baník ostrava\", \"horst siegl (20)\", \"sparta prague\"],[\"1994 - 95\", \"sparta prague (2)\", \"slavia prague\", \"fc brno\", \"radek drulák (15)\", \"drnovice\"],[\"1995 - 96\", \"slavia prague (1)\", \"sigma olomouc\", \"baumit jablonec\", \"radek drulák (22)\", \"drnovice\"],[\"1996 - 97\", \"sparta prague (3)\", \"slavia prague\", \"baumit jablonec\", \"horst siegl (19)\", \"sparta prague\"],[\"1997 - 98\", \"sparta prague (4)\", \"slavia prague\", \"sigma olomouc\", \"horst siegl (13)\", \"sparta prague\"],[\"1998 - 99\", \"sparta prague (5)\", \"teplice\", \"slavia prague\", \"horst siegl (18)\", \"sparta prague\"],[\"1999 - 00\", \"sparta prague (6)\", \"slavia prague\", \"drnovice\", \"vratislav lokvenc (21)\", \"sparta prague\"],[\"2000 - 01\", \"sparta prague (7)\", \"slavia prague\", \"sigma olomouc\", \"vítězslav tuma (15)\", \"drnovice\"],[\"2001 - 02\", \"slovan liberec (1)\", \"sparta prague\", \"viktoria žižkov\", \"jiří štajner (15)\", \"slovan liberec\"],[\"2002 - 03\", \"sparta prague (8)\", \"slavia prague\", \"viktoria žižkov\", \"jiří kowalík (16)\", \"1. fc synot\"],[\"2003 - 04\", \"baník ostrava (1)\", \"sparta prague\", \"sigma olomouc\", \"marek heinz (19)\", \"baník ostrava\"],[\"2004 - 05\", \"sparta prague (9)\", \"slavia prague\", \"teplice\", \"tomáš jun (14)\", \"sparta prague\"],[\"2005 - 06\", \"slovan liberec (2)\", \"mladá boleslav\", \"slavia prague\", \"milan ivana (11)\", \"fc slovácko\"],[\"2006 - 07\", \"sparta prague (10)\", \"slavia prague\", \"mladá boleslav\", \"luboš pecka (16)\", \"mladá boleslav\"],[\"2007 - 08\", \"slavia prague (2)\", \"sparta prague\", \"baník ostrava\", \"václav svěrkoš (15)\", \"baník ostrava\"],[\"2008 - 09\", \"slavia prague (3)\", \"sparta prague\", \"slovan liberec\", \"andrej kerić (15)\", \"slovan liberec\"],[\"2009 - 10\", \"sparta prague (11)\", \"jablonec\", \"baník ostrava\", \"michal ordoš (12)\", \"sigma olomouc\"],[\"2010 - 11\", \"viktoria plzeň (1)\", \"sparta prague\", \"jablonec\", \"david lafata (19)\", \"jablonec\"],[\"2011 - 12\", \"slovan liberec (3)\", \"sparta prague\", \"viktoria plzeň\", \"david lafata (25)\", \"jablonec\"]]\nQuestion = Is it true that sigma olomouc came third when banik ostrava was champion?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    champions = get_column_by_name(table_data, \"champions\")\n    third_places = get_column_by_name(table_data, \"third place\")\n    answer = False\n    for champion, third_place in zip(champions, third_places):\n        if \"baník ostrava\" in champion.lower() and \"sigma olomouc\" in third_place.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "27c906f0-fd56-4740-8bf9-a702946f4607", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = daniel gimeno - traver\ntable_data = [[\"date\", \"tournament\", \"surface\", \"opponent\", \"score\"],[\"5 september 2005\", \"brasov\", \"clay\", \"daniel elsner\", \"5 - 7 , 2 - 6\"],[\"5 november 2007\", \"guayaquil\", \"clay\", \"nicolás lapentti\", \"3 - 6 , 7 - 6 (6) , 5 - 7\"],[\"10 march 2008\", \"tanger\", \"clay\", \"marcel granollers\", \"4 - 6 , 4 - 6\"],[\"15 september 2008\", \"banja luka\", \"clay\", \"ilija bozoljac\", \"4 - 6 , 4 - 6\"],[\"12 october 2009\", \"asunción\", \"clay\", \"ramón delgado\", \"6 - 7 (2 - 7) , 6 - 1 , 3 - 6\"],[\"5 july 2010\", \"san benedetto\", \"clay\", \"carlos berlocq\", \"3 - 6 , 6 - 4 , 4 - 6\"],[\"2 october 2011\", \"madrid\", \"clay\", \"jérémy chardy\", \"1 - 6 , 7 - 5 , 6 - 7 (3 - 7)\"],[\"12 august 2012\", \"cordenos\", \"clay\", \"paolo lorenzi\", \"6 - 7 (5 - 7) , 3 - 6\"]]\nQuestion = Is it true that the opponent in the banja luka tournament was carlos berlocq with a score of 4 - 6 , 4 - 6?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    tournaments = get_column_by_name(table_data, \"tournament\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    scores = get_column_by_name(table_data, \"score\")\n    for tournament, opponent, score in zip(tournaments, opponents, scores):\n        if tournament.lower() == \"banja luka\":\n            answer = equal_to(opponent, \"carlos berlocq\") and equal_to(score, \"4 - 6 , 4 - 6\")\n            break \n    return answer\n\n### END"}
{"id": "8482356e-1930-45e8-8d3c-c16a08461f74", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = türk telekom arena\ntable_data = [[\"project\", \"year\", \"location\", \"capacity\", \"suites\", \"architect\", \"cost\"],[\"faruk süren project\", \"1997 - 2001\", \"mecidiyeköy\", \"40482\", \"125 + 72 boxes without outside seating\", \"bbb architects\", \"118.5 million ( in 2014 dollars)\"],[\"mehmet cansun project\", \"2001\", \"mecidiyeköy\", \"35000\", \"132\", \"gs member architecture group\", \"35 million ( in 2014 dollars)\"],[\"özhan canaydın : back to süren 's project\", \"2002 - 2005\", \"aslantepe\", \"40482\", \"125\", \"bbb architects\", \"90 million ( in 2014 dollars)\"],[\"eren talu bidding project\", \"2007\", \"aslantepe\", \"52000\", \"150\", \"populous\", \"n / a\"],[\"özhan canaydın project\", \"2007\", \"aslantepe\", \"52652\", \"157\", \"asp stuttgart\", \"250 million ( in 2014 dollars)\"]]\nQuestion = Is it true that aslantepe location has a capacity larger than 52000?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"location\")\n    capacities = get_column_by_name(table_data, \"capacity\")\n    answer = False\n    for location, capacity in zip(locations, capacities):\n        if location.lower() == \"aslantepe\" and greater(int(capacity), 52000):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "5086b096-38e3-4800-9d9c-b6fd8fdca5f6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = jimmy davies\ntable_data = [[\"year\", \"entrant\", \"chassis\", \"engine\", \"points\"],[\"1950\", \"pat clancy\", \"ewing\", \"offenhauser l4\", \"0\"],[\"1951\", \"parks offenhauser / le parks\", \"pawl\", \"offenhauser l4\", \"0\"],[\"1953\", \"pat clancy\", \"kurtis kraft 500b\", \"offenhauser l4\", \"0\"],[\"1954\", \"bardahl / ed walsh\", \"kurtis kraft 4000\", \"offenhauser l4\", \"0\"],[\"1955\", \"bardahl / pat clancy\", \"kurtis kraft 500b\", \"offenhauser l4\", \"4\"],[\"1956\", \"novi racing\", \"kurtis kraft 500f\", \"novi v8\", \"0\"],[\"1957\", \"trio brdeact wind allass\", \"kurtis kraft 500d\", \"offenhauser l4\", \"0\"],[\"1959\", \"sumar / chapman root\", \"kurtis kraft 500 g\", \"offenhauser l4\", \"0\"]]\nQuestion = Is it true that it was before 1957 that trio brdeact wind allas was the entrant?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    entrants = get_column_by_name(table_data, \"entrant\")\n    for year, entrant in zip(years, entrants):\n        if entrant.lower() == \"trio brdeact wind allass\":\n            answer = less_than(int(year), 1957)\n            break \n    return answer\n\n### END"}
{"id": "aace96e6-e39e-4396-8797-2f623c30387b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sheffield and hallamshire association cup\ntable_data = [[\"season\", \"winner\", \"result\", \"runner - up\", \"final venue\"],[\"2002 - 03\", \"elm tree\", \"1 - 0\", \"stocksbridge park steels reserves\", \"belle vue\"],[\"2003 - 04\", \"hsbc\", \"3 - 2\", \"athersley recreation\", \"belle vue\"],[\"2004 - 05\", \"kiveton park\", \"2 - 2\", \"athersley recreation\", \"sandy lane\"],[\"2005 - 06\", \"kiveton park\", \"5 - 0\", \"sheffield lane top\", \"belle vue\"],[\"2006 - 07\", \"stocksbridge park steels reserves\", \"3 - 1\", \"hemsworth miners welfare\", \"millmoor\"],[\"2007 - 08\", \"athersley recreation\", \"1 - 0\", \"hollinsend amateurs\", \"oakwell\"],[\"2008 - 09\", \"hall green united\", \"2 - 1\", \"kirkburton\", \"keepmoat stadium (pitch 2)\"],[\"2009 - 10\", \"sheffield reserves\", \"2 - 1\", \"dearne colliery miners welfare\", \"inkersall road\"],[\"2010 - 11\", \"stocksbridge park steels reserves\", \"3 - 0\", \"kirkburton\", \"green lane\"],[\"2012 - 13\", \"swinton athletic\", \"3 - 0\", \"kirkburton\", \"sandy lane\"]]\nQuestion = Is it true that the result in the 2005 - 6 season was 5 - 0?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    results = get_column_by_name(table_data, \"result\")\n    for season, result in zip(seasons, results):\n        if season == \"2005 - 06\":\n            answer = equal_to(result, \"5 - 0\")\n            break \n    return answer\n\n### END"}
{"id": "3a679949-5c8d-40a0-bb76-f9ee22f3943d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2006 - 07 seattle supersonics season\ntable_data = [[\"game\",\"date\",\"team\",\"score\",\"high points\",\"high rebounds\",\"high assists\",\"location attendance\",\"record\"],[\"1\",\"november 1\",\"portland\",\"l 106 - 110\",\"rashard lewis (25)\",\"rashard lewis (8)\",\"luke ridnour (13)\",\"keyarena 17072\",\"0 - 1\"],[\"2\",\"november 3\",\"l a lakers\",\"l 112 - 118\",\"ray allen (30)\",\"chris wilcox (12)\",\"earl watson (7)\",\"staples center 18997\",\"0 - 2\"],[\"3\",\"november 5\",\"l a lakers\",\"w 117 - 101\",\"ray allen (32)\",\"chris wilcox (8)\",\"luke ridnour (7)\",\"keyarena 17072\",\"1 - 2\"],[\"4\",\"november 7\",\"miami\",\"l 87 - 90\",\"rashard lewis (23)\",\"nick collison (10)\",\"earl watson (6)\",\"american airlines arena 19600\",\"1 - 3\"],[\"5\",\"november 8\",\"orlando\",\"l 87 - 88\",\"ray allen (21)\",\"danny fortson (8)\",\"luke ridnour (6)\",\"amway arena 16312\",\"1 - 4\"],[\"6\",\"november 10\",\"charlotte\",\"w 99 - 85\",\"ray allen (26)\",\"nick collison (15)\",\"luke ridnour (7)\",\"charlotte bobcats arena 13515\",\"2 - 4\"],[\"7\",\"november 11\",\"atlanta\",\"w 113 - 112 (ot)\",\"ray allen (33)\",\"chris wilcox (15)\",\"luke ridnour (5)\",\"philips arena 19309\",\"3 - 4\"],[\"8\",\"november 13\",\"new jersey\",\"w 119 - 113\",\"luke ridnour (32)\",\"rashard lewis (11)\",\"luke ridnour , earl watson (7)\",\"continental airlines arena 14392\",\"4 - 4\"],[\"9\",\"november 15\",\"philadelphia\",\"l 90 - 96\",\"rashard lewis (25)\",\"rashard lewis , chris wilcox (15)\",\"luke ridnour (7)\",\"keyarena 14936\",\"4 - 5\"],[\"10\",\"november 17\",\"utah\",\"l 109 - 118\",\"ray allen (32)\",\"chris wilcox (11)\",\"luke ridnour (7)\",\"keyarena 15513\",\"4 - 6\"],[\"11\",\"november 18\",\"golden state\",\"l 95 - 107\",\"ray allen (34)\",\"ray allen (11)\",\"earl watson (7)\",\"oracle arena 17205\",\"4 - 7\"],[\"12\",\"november 20\",\"new jersey\",\"w 99 - 87\",\"ray allen (29)\",\"ray allen (9)\",\"ray allen , luke ridnour (5)\",\"keyarena 14621\",\"5 - 7\"],[\"13\",\"november 22\",\"l a clippers\",\"w 95 - 85\",\"rashard lewis (35)\",\"nick collison , rashard lewis (13)\",\"luke ridnour (9)\",\"staples center 16290\",\"6 - 7\"],[\"14\",\"november 24\",\"sacramento\",\"l 100 - 109\",\"rashard lewis (26)\",\"chris wilcox (13)\",\"luke ridnour (8)\",\"keyarena 16757\",\"6 - 8\"],[\"15\",\"november 26\",\"san antonio\",\"l 78 - 98\",\"ray allen (21)\",\"johan petro (9)\",\"chris wilcox (5)\",\"keyarena 15483\",\"6 - 9\"]]\nQuestion = Is it true that the location attendance for the utah game is oracle arena 17205?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    locations = get_column_by_name(table_data, \"location attendance\")\n    for team, location in zip(teams, locations):\n        if \"utah\" in team.lower():\n            answer = \"oracle arena 17205\" in location.lower()\n            break\n    return answer\n\n### END"}
{"id": "210ae9fd-97e2-4632-b818-8f6c94e95598", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date\", \"round\", \"opponent\", \"venue\", \"result\", \"attendance\"],[\"23 january 1999\", \"r3\", \"stenhousemuir\", \"h\", \"2 - 0\", \"37759\"],[\"14 february 1999\", \"r4\", \"hamilton academical\", \"a\", \"6 - 0\", \"7339\"],[\"6 march 1999\", \"qf\", \"falkirk\", \"h\", \"2 - 1\", \"39250\"],[\"11 april 1999\", \"sf\", \"st johnstone\", \"n\", \"4 - 0\", \"20664\"],[\"29 may 1999\", \"f\", \"celtic\", \"n\", \"1 - 0\", \"52670\"]]\nQuestion = Is it true that on the 14th of february the venue was a and the result was 6 - 0?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    venues = get_column_by_name(table_data, \"venue\")\n    results = get_column_by_name(table_data, \"result\")\n    for date, venue, result in zip(dates, venues, results):\n        if \"14 february\" in date.lower():\n            answer = equal_to(venue, \"a\") and equal_to(result, \"6 - 0\")\n            break \n    return answer\n\n### END"}
{"id": "801afdd0-de96-4fa8-87cb-ad9cc66e947b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1972 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"st kilda\", \"13.12 (90)\", \"melbourne\", \"13.11 (89)\", \"moorabbin oval\", \"18836\", \"19 august 1972\"],[\"south melbourne\", \"9.12 (66)\", \"footscray\", \"11.13 (79)\", \"lake oval\", \"9154\", \"19 august 1972\"],[\"richmond\", \"20.17 (137)\", \"fitzroy\", \"13.22 (100)\", \"mcg\", \"27651\", \"19 august 1972\"],[\"geelong\", \"17.10 (112)\", \"collingwood\", \"17.9 (111)\", \"kardinia park\", \"23108\", \"19 august 1972\"],[\"north melbourne\", \"8.12 (60)\", \"carlton\", \"23.11 (149)\", \"arden street oval\", \"11271\", \"19 august 1972\"],[\"hawthorn\", \"15.16 (106)\", \"essendon\", \"12.15 (87)\", \"vfl park\", \"36749\", \"19 august 1972\"]]\nQuestion = Is it true that on august 19 , 1972 , the away team was st kilda?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    away_teams = get_column_by_name(table_data, \"away team\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for date, away_team in zip(dates, away_teams):\n        if \"19 august 1972\" in date.lower() and \"st kilda\" in away_team.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "e14aea43-d381-412b-ac97-1b94b3be0aa2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mercedes - benz r170\ntable_data = [[\"model\", \"years\", \"engine\", \"power\", \"0 - 100 km / h (62 mph)\", \"top speed\"],[\"slk200\", \"1997 - 2004\", \"2l m111.946 l4\", \"102 kw (136hp)\", \"9.3 seconds\", \"208 km / h (129 mph)\"],[\"slk200k\", \"1997 - 2000\", \"2l m111.943 l4\", \"143 kw (192hp)\", \"6.8 seconds\", \"236 km / h (147 mph)\"],[\"slk200k\", \"2001 - 2004\", \"2l m111.958 l4\", \"122 kw (163hp)\", \"7.4 seconds\", \"223 km / h (138 mph)\"],[\"slk230k\", \"1996 - 2000\", \"2.3l m111.973 l4\", \"144 kw (193hp)\", \"6.9 seconds\", \"231 km / h (143 mph)\"],[\"slk230k\", \"2001 - 2004\", \"2.3l m111.983 l4\", \"147 kw (197hp)\", \"6.8 seconds\", \"240 km / h (148 mph)\"],[\"slk320\", \"2001 - 2004\", \"3.2l m112.947 v6\", \"162 kw (218hp)\", \"6.5 seconds\", \"250 / 276 km / h (155 / 171 mph)\"],[\"slk32 amg\", \"2001 - 2004\", \"3.2l m112.960 v6\", \"264 kw (354hp)\", \"5.2 seconds\", \"250 / 280 / 310 km / h (155 / 174 / 193 mph)\"]]\nQuestion = Is it true that the model with a top speed less than 231 km / h (143 mph) is the slk230k?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef parse_speed_to_mph(speed_str):\n    speed = int(speed_str.split(' ')[0])\n    return speed\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    models = get_column_by_name(table_data, \"model\")\n    top_speeds = get_column_by_name(table_data, \"top speed\")\n    answer = False\n    for model, top_speed in zip(models, top_speeds):\n        if \"slk230k\" in model.lower():\n            parsed_speed = parse_speed_to_mph(top_speed)\n            if less_than(parsed_speed, 231):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "3bcd7d99-5a29-441d-8371-a6f26903c6c7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1970 isle of man tt\ntable_data = [[\"rank\", \"rider\", \"team\", \"speed\", \"time\"],[\"1\", \"chas mortimer\", \"ducati\", \"84.87 mph\", \"2:13.23.4\"],[\"2\", \"john williams\", \"honda\", \"84.80 mph\", \"2:13.29.0\"],[\"3\", \"stan woods\", \"suzuki\", \"84.06 mph\", \"2:14.40.6\"],[\"4\", \"ghunter\", \"ducati\", \"83.94 mph\", \"2:14.52.4\"],[\"5\", \"roy boughley\", \"honda\", \"82.26 mph\", \"2:17.37.6\"],[\"6\", \"raymond ashcroft\", \"suzuki\", \"76.59 mph\", \"2:27.48.8\"],[\"7\", \"tom loughridge\", \"suzuki\", \"76.32 mph\", \"2:28.19.0\"],[\"8\", \"cluton\", \"ducati\", \"72.50 mph\", \"2:36.08.0\"]]\nQuestion = Is it true that tom loughridge is suzuki 's fastest rider?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef parse_speed_to_float(speed_str):\n    return float(speed_str.split(' ')[0])\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    riders = get_column_by_name(table_data, \"rider\")\n    teams = get_column_by_name(table_data, \"team\")\n    speeds = get_column_by_name(table_data, \"speed\")\n    suzuki_riders_speeds = [(rider, parse_speed_to_float(speed)) for rider, team, speed in zip(riders, teams, speeds) if team.lower() == \"suzuki\"]\n    fastest_suzuki_rider = max(suzuki_riders_speeds, key=lambda x: x[1])[0]\n    answer = equal_to(fastest_suzuki_rider, \"tom loughridge\")\n    return answer\n\n### END"}
{"id": "49a4461e-8e70-455b-8a4c-6b230344ed34", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of americas records in swimming\ntable_data = [[\"event\", \"time\", \"nationality\", \"date\", \"meet\", \"location\"],[\"50 m freestyle\", \"20.91\", \"brazil\", \"18 december 2009\", \"brazilian championships\", \"são paulo, brazil\"],[\"100 m freestyle\", \"46.91\", \"brazil\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m freestyle\", \"1:42.96\", \"united states\", \"12 august 2008\", \"olympic games\", \"beijing, china\"],[\"400 m freestyle\", \"3:42.78\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"800 m freestyle\", \"7:41.86\", \"canada\", \"27 july 2011\", \"world championships\", \"shanghai, china\"],[\"1500 m freestyle\", \"14:39.63\", \"canada\", \"4 august 2012\", \"olympic games\", \"london, united kingdom\"],[\"50 m backstroke\", \"24.33\", \"united states\", \"5 december 2008\", \"dutch swim cup\", \"eindhoven, netherlands\"],[\"100 m backstroke\", \"51.94\", \"united states\", \"8 july 2009\", \"us championships\", \"indianapolis, united states\"],[\"200 m backstroke\", \"1:51.92\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m breaststroke\", \"26.76\", \"brazil\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"100 m breaststroke\", \"58.96\", \"united states\", \"26 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m breaststroke\", \"2:07.42\", \"united states\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m butterfly\", \"22.76\", \"brazil\", \"26 april 2012\", \"maria lenk trophy\", \"rio de janeiro, brazil\"],[\"100 m butterfly\", \"49.82\", \"united states\", \"1 august 2009\", \"world championships\", \"rome, italy\"],[\"200 m butterfly\", \"1:51.51\", \"united states\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m individual medley\", \"1:54.00\", \"united states\", \"28 july 2011\", \"world championships\", \"shanghai, china\"],[\"400 m individual medley\", \"4:03.84\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"4100 m freestyle relay\", \"3:08.24\", \"united states\", \"11 august 2008\", \"olympic games\", \"beijing, china\"],[\"4200 m freestyle relay\", \"6:58.55\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"4100 m medley relay\", \"3:27.28\", \"united states\", \"2 august 2009\", \"world championships\", \"rome, italy\"]]\nQuestion = Is it true that the 200 m breaststroke event took place for the first time that year on august 3 , 2012?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    dates = get_column_by_name(table_data, \"date\")\n    for event, date in zip(events, dates):\n        if event.lower() == \"200 m breaststroke\":\n            answer = equal_to(date, \"august 3 , 2012\")\n            break \n    return answer\n\n### END"}
{"id": "43dba8f4-aed3-40eb-aa38-f8e3c667e09b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = prr locomotive classification\ntable_data = [[\"prr class\", \"builders model\", \"build date\", \"total produced\", \"wheel arrangement\", \"service\", \"power output\"],[\"bs6\", \"vo - 660\", \"1942 - 1945\", \"12\", \"b - b\", \"switcher\", \"\"],[\"bs6\", \"ds - 4 - 4 - 660\", \"1942 - 1945\", \"99\", \"b - b\", \"switcher\", \"\"],[\"bs7\", \"ds - 4 - 4 - 750\", \"1951\", \"24\", \"b - b\", \"switcher\", \"\"],[\"bs7\", \"s7\", \"1951\", \"7\", \"b - b\", \"switcher\", \"\"],[\"bs10\", \"vo\", \"1943 - 1945\", \"8\", \"b - b\", \"switcher\", \"\"],[\"bs10\", \"ds - 4 - 4 - 1000\", \"1948 - 1950\", \"137\", \"b - b\", \"switcher\", \"\"],[\"bs12\", \"s - 12\", \"1951 - 1956\", \"98\", \"b - b\", \"switcher\", \"\"],[\"bf15\", \"dr - 4 - 4 - 1500\", \"1940 - 1950\", \"34\", \"b - b\", \"freight\", \"\"],[\"bf16\", \"rf - 16 (a)\", \"1950 - 1952\", \"72\", \"b - b\", \"freight\", \"\"],[\"bf16\", \"rf - 16 (b)\", \"1950 - 1952\", \"30\", \"b - b\", \"freight\", \"\"],[\"bp60a\", \"dr - 12 - 8 - 3000\", \"1947 - 1948\", \"24\", \"2 - d - d - 2\", \"pass\", \"\"],[\"bp20\", \"dr - 6 - 4 - 2000\", \"1948\", \"18\", \"a1a - a1a\", \"pass\", \"\"],[\"bp20\", \"dr - 6 - 4 - 2000\", \"1948\", \"9\", \"a1a - a1a\", \"pass\", \"\"],[\"brs10\", \"drs - 4 - 4 - 1000\", \"1949 - 1950\", \"6\", \"b - b\", \"pass\", \"\"],[\"brs12\", \"rs - 12\", \"1951 - 1954\", \"8\", \"b - b\", \"pass\", \"\"],[\"brs15\", \"drs - 4 - 4 - 1500\", \"1950\", \"8\", \"b - b\", \"pass\", \"\"],[\"brs16\", \"as - 16\", \"1953 - 1955\", \"28\", \"c - c\", \"pass\", \"\"],[\"brs24\", \"rt - 624\", \"1951 - 1954\", \"22\", \"c - c\", \"transfer\", \"\"],[\"lrs25\", \"t2500\", \"1950 - 1951\", \"22\", \"c - c\", \"transfer\", \"\"]]\nQuestion = Is it true that the ds - 4 - 4 - 660 model with prr class of bs6 and wheel arrangement of b - b had 99 units total produced?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    prr_classes = get_column_by_name(table_data, \"prr class\")\n    builders_models = get_column_by_name(table_data, \"builders model\")\n    total_produced = get_column_by_name(table_data, \"total produced\")\n    wheel_arrangements = get_column_by_name(table_data, \"wheel arrangement\")\n    for prr_class, builders_model, total, wheel_arrangement in zip(prr_classes, builders_models, total_produced, wheel_arrangements):\n        if prr_class.lower() == \"bs6\" and builders_model.lower() == \"ds - 4 - 4 - 660\" and wheel_arrangement.lower() == \"b - b\":\n            answer = equal_to(total, \"99\")\n            break \n    return answer\n\n### END"}
{"id": "572911bc-4ab0-47a7-a6b4-441cc48e2b2d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the howie carr show\ntable_data = [[\"calls\", \"frequency\", \"branding\", \"format\", \"timeslot\", \"group owner\"],[\"wgan\", \"560 khz\", \"news radio 560 wgan\", \"news / talk\", \"live 3p - 6p\", \"saga communications\"],[\"whyn\", \"560 khz\", \"news / talk 560 whyn\", \"news / talk\", \"live 3p - 7p\", \"clear channel communications\"],[\"wvmt\", \"620 khz\", \"news / talk 620 wvmt\", \"news / talk\", \"live 3p - 7p\", \"sison broadcasting\"],[\"wrko\", \"680 khz\", \"am 680 wrko\", \"news / talk\", \"live 3p - 7p\", \"entercom\"],[\"wcrn\", \"830 khz\", \"wcrn 830 true talk\", \"news / talk\", \"live 3p - 7p\", \"carter broadcasting\"],[\"wkbk\", \"1290 khz\", \"1290 wkbk w281au 104.1\", \"news / talk\", \"live 3p - 6p\", \"saga communications\"],[\"wegp\", \"1390 khz\", \"wegp 1390 am - the talk of the county\", \"news / talk\", \"live 3p - 6p\", \"decelles / media , inc\"],[\"wxtk\", \"95.1 mhz\", \"news radio 95 wxtk\", \"news / talk\", \"live 3p - 7p\", \"qantam of cape cod , llc\"],[\"wntk - fm\", \"99.7 mhz\", \"wntk talk radio\", \"news / talk\", \"live 3p - 6p\", \"koor communications\"],[\"wuvr\", \"1490 khz\", \"wntk talk radio\", \"news / talk\", \"live 3p - 6p\", \"koor communications\"],[\"wvom - fm / wvqm\", \"103.9 / 101.3 mhz\", \"the voice of maine\", \"news / talk\", \"live 3p - 7p\", \"blueberry broadcasting\"]]\nQuestion = Is it true that am 680 wrko is branding at the frequency of 680 khz?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    brandings = get_column_by_name(table_data, \"branding\")\n    for frequency, branding in zip(frequencies, brandings):\n        if branding.lower() == \"am 680 wrko\":\n            answer = equal_to(frequency, \"680 khz\")\n            break \n    return answer\n\n### END"}
{"id": "c723f649-c633-4914-bff6-e1bca09fa7a1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date\", \"visitor\", \"score\", \"home\", \"decision\", \"record\"],[\"february 2\", \"phoenix\", \"2 - 3\", \"nashville\", \"ellis\", \"27 - 21 - 5\"],[\"february 5\", \"carolina\", \"0 - 1\", \"nashville\", \"ellis\", \"28 - 21 - 5\"],[\"february 7\", \"tampa bay\", \"2 - 1\", \"nashville\", \"ellis\", \"28 - 21 - 6\"],[\"february 9\", \"nashville\", \"3 - 4\", \"san jose\", \"ellis\", \"28 - 22 - 6\"],[\"february 10\", \"nashville\", \"6 - 3\", \"phoenix\", \"ellis\", \"29 - 22 - 6\"],[\"february 12\", \"detroit\", \"2 - 4\", \"nashville\", \"ellis\", \"30 - 22 - 6\"],[\"february 14\", \"chicago\", \"6 - 1\", \"nashville\", \"mason\", \"30 - 23 - 6\"],[\"february 16\", \"st louis\", \"1 - 2\", \"nashville\", \"ellis\", \"31 - 23 - 6\"],[\"february 17\", \"nashville\", \"4 - 5\", \"minnesota\", \"ellis\", \"31 - 23 - 7\"],[\"february 19\", \"edmonton\", \"4 - 5\", \"nashville\", \"ellis\", \"32 - 23 - 7\"],[\"february 21\", \"vancouver\", \"3 - 2\", \"nashville\", \"ellis\", \"32 - 23 - 8\"],[\"february 23\", \"dallas\", \"6 - 3\", \"nashville\", \"ellis\", \"32 - 24 - 8\"],[\"february 27\", \"nashville\", \"4 - 8\", \"buffalo\", \"mason\", \"32 - 25 - 8\"]]\nQuestion = Is it true that on february 16 , the game between nashville and visiting st louis had ellis as the decision?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    visitors = get_column_by_name(table_data, \"visitor\")\n    homes = get_column_by_name(table_data, \"home\")\n    decisions = get_column_by_name(table_data, \"decision\")\n    answer = False\n    for date, visitor, home, decision in zip(dates, visitors, homes, decisions):\n        if date == \"february 16\" and visitor == \"st louis\" and home == \"nashville\" and decision == \"ellis\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "3273f5a8-dadf-4261-9c29-4b2c837b8d07", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of radio stations in tamaulipas\ntable_data = [[\"frequency\", \"callsign\", \"brand\", \"city of license\", \"type\"],[\"580\", \"xehp\", \"la mas prendida\", \"ciudad victoria\", \"norteño\"],[\"640\", \"xetam\", \"la poderosa\", \"santa elena\", \"norteño\"],[\"970\", \"xebj - am\", \"radio 970\", \"ciudad victoria\", \"contemporary\"],[\"1340\", \"xerpv - am\", \"la cotorra\", \"ciudad victoria\", \"norteño\"],[\"1380\", \"xegw\", \"planeta w 1380\", \"ciudad victoria\", \"christian pop\"],[\"1480\", \"xevic\", \"radio tamaulipas\", \"ciudad victoria\", \"state government\"]]\nQuestion = Is it true that christian pop is on frequency 1380?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    types = get_column_by_name(table_data, \"type\")\n    for frequency, type in zip(frequencies, types):\n        if equal_to(frequency, \"1380\") and equal_to(type, \"christian pop\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "6841c0ea-d795-4d10-8650-6eca03990d97", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = american dad! (season 1)\ntable_data = [[\"no in series\", \"title\", \"directed by\", \"written by\", \"original air date\", \"production code\", \"us viewers (millions)\"],[\"1\", \"pilot\", \"ron hughart\", \"seth macfarlane , mike barker & matt weitzman\", \"february 6 , 2005\", \"1ajn01\", \"15.10\"],[\"2\", \"threat levels\", \"brent woods\", \"david zuckerman\", \"may 1 , 2005\", \"1ajn02\", \"9.47\"],[\"3\", \"stan knows best\", \"pam cooke\", \"mike barker & matt weitzman\", \"may 8 , 2005\", \"1ajn03\", \"8.23\"],[\"4\", \"francine 's flashback\", \"caleb meurer & brent woods\", \"rick wiener & kenny schwartz\", \"may 15 , 2005\", \"1ajn05\", \"7.84\"],[\"5\", \"roger codger\", \"albert calleros\", \"dan vebber\", \"june 5 , 2005\", \"1ajn04\", \"6.09\"],[\"6\", \"homeland insecurity\", \"rodney clouden\", \"neal boushell & sam o'neal\", \"june 12 , 2005\", \"1ajn06\", \"6.85\"]]\nQuestion = Is it true that roger codger directed by pam cooke had 7.84 million people as viewers and was aired on june 12 , 2005?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    directors = get_column_by_name(table_data, \"directed by\")\n    air_dates = get_column_by_name(table_data, \"original air date\")\n    viewers = get_column_by_name(table_data, \"us viewers (millions)\")\n    for title, director, air_date, viewer in zip(titles, directors, air_dates, viewers):\n        if title.lower() == \"roger codger\" and director.lower() == \"pam cooke\" and air_date.lower() == \"june 12 , 2005\" and viewer == \"7.84\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "0ed864eb-0d6a-419d-bab5-d5560547b5b4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = prr locomotive classification\ntable_data = [[\"prr class\", \"builders model\", \"build date\", \"total produced\", \"wheel arrangement\", \"service\", \"power output\"],[\"bs6\", \"vo - 660\", \"1942 - 1945\", \"12\", \"b - b\", \"switcher\", \"\"],[\"bs6\", \"ds - 4 - 4 - 660\", \"1942 - 1945\", \"99\", \"b - b\", \"switcher\", \"\"],[\"bs7\", \"ds - 4 - 4 - 750\", \"1951\", \"24\", \"b - b\", \"switcher\", \"\"],[\"bs7\", \"s7\", \"1951\", \"7\", \"b - b\", \"switcher\", \"\"],[\"bs10\", \"vo\", \"1943 - 1945\", \"8\", \"b - b\", \"switcher\", \"\"],[\"bs10\", \"ds - 4 - 4 - 1000\", \"1948 - 1950\", \"137\", \"b - b\", \"switcher\", \"\"],[\"bs12\", \"s - 12\", \"1951 - 1956\", \"98\", \"b - b\", \"switcher\", \"\"],[\"bf15\", \"dr - 4 - 4 - 1500\", \"1940 - 1950\", \"34\", \"b - b\", \"freight\", \"\"],[\"bf16\", \"rf - 16 (a)\", \"1950 - 1952\", \"72\", \"b - b\", \"freight\", \"\"],[\"bf16\", \"rf - 16 (b)\", \"1950 - 1952\", \"30\", \"b - b\", \"freight\", \"\"],[\"bp60a\", \"dr - 12 - 8 - 3000\", \"1947 - 1948\", \"24\", \"2 - d - d - 2\", \"pass\", \"\"],[\"bp20\", \"dr - 6 - 4 - 2000\", \"1948\", \"18\", \"a1a - a1a\", \"pass\", \"\"],[\"bp20\", \"dr - 6 - 4 - 2000\", \"1948\", \"9\", \"a1a - a1a\", \"pass\", \"\"],[\"brs10\", \"drs - 4 - 4 - 1000\", \"1949 - 1950\", \"6\", \"b - b\", \"pass\", \"\"],[\"brs12\", \"rs - 12\", \"1951 - 1954\", \"8\", \"b - b\", \"pass\", \"\"],[\"brs15\", \"drs - 4 - 4 - 1500\", \"1950\", \"8\", \"b - b\", \"pass\", \"\"],[\"brs16\", \"as - 16\", \"1953 - 1955\", \"28\", \"c - c\", \"pass\", \"\"],[\"brs24\", \"rt - 624\", \"1951 - 1954\", \"22\", \"c - c\", \"transfer\", \"\"],[\"lrs25\", \"t2500\", \"1950 - 1951\", \"22\", \"c - c\", \"transfer\", \"\"]]\nQuestion = Is it true that 99 units of ds - 4 - 4 - 660 were produced in 1951?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    builders_models = get_column_by_name(table_data, \"builders model\")\n    build_dates = get_column_by_name(table_data, \"build date\")\n    total_produced = get_column_by_name(table_data, \"total produced\")\n    for builders_model, build_date, total in zip(builders_models, build_dates, total_produced):\n        if builders_model.lower() == \"ds - 4 - 4 - 660\" and build_date == \"1951\" and total == \"99\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "8c347830-1f53-4253-8ec2-f4a1bfb3b368", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2000 - 01 prva hnl\ntable_data = [[\"team\",\"manager\",\"home city\",\"stadium\",\"capacity\"],[\"cibalia\",\"davor mladina\",\"vinkovci\",\"stadion hnk cibalia\",\"9920\"],[\"čakovec\",\"ilija lončarević\",\"čakovec\",\"stadion src mladost\",\"8000\"],[\"dinamo zagreb\",\"marijan vlak\",\"zagreb\",\"stadion maksimir\",\"37168\"],[\"hajduk split\",\"petar nadoveza\",\"split\",\"gradski stadion u poljudu\",\"35000\"],[\"hrvatski dragovoljac\",\"milivoj bračun\",\"zagreb\",\"stadion nšc stjepan spajić\",\"5000\"],[\"marsonia\",\"stjepan deverić\",\"slavonski brod\",\"gradski stadion uz savu\",\"10000\"],[\"osijek\",\"stanko mršić\",\"osijek\",\"stadion gradski vrt\",\"19500\"],[\"rijeka\",\"nenad gračan\",\"rijeka\",\"stadion na kantridi\",\"10275\"],[\"slaven belupo\",\"mladen frančić\",\"koprivnica\",\"gradski stadion u koprivnici\",\"4000\"],[\"šibenik\",\"milo nižetić\",\"šibenik\",\"stadion šubićevac\",\"8000\"],[\"varteks\",\"ivan katalinić\",\"varaždin\",\"stadion nk varteks\",\"10800\"],[\"nk zagreb\",\"branko karačić\",\"zagreb\",\"stadion u kranjčevićevoj ulici\",\"8850\"]]\nQuestion = Is it true that gradski stadion u poljudu is the stadium at the home city of split?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_cities = get_column_by_name(table_data, \"home city\")\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    answer = False\n    for home_city, stadium in zip(home_cities, stadiums):\n        if home_city.lower() == \"split\" and stadium.lower() == \"gradski stadion u poljudu\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "37bc0766-9b10-4a66-8557-1882334c4f37", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2006 cincinnati reds season\ntable_data = [[\"date\",\"opponent\",\"score\",\"loss\",\"attendance\",\"record\"],[\"august 1\",\"dodgers\",\"10 - 4\",\"bray (2 - 2)\",\"25127\",\"55 - 51\"],[\"august 2\",\"dodgers\",\"5 - 3\",\"ramírez (4 - 7)\",\"22110\",\"55 - 52\"],[\"august 3\",\"dodgers\",\"3 - 0\",\"milton (7 - 7)\",\"26053\",\"55 - 53\"],[\"august 4\",\"braves\",\"5 - 4\",\"james (4 - 3)\",\"33661\",\"56 - 53\"],[\"august 5\",\"braves\",\"8 - 6\",\"yates (1 - 2)\",\"33170\",\"57 - 53\"],[\"august 6\",\"braves\",\"6 - 4\",\"majewski (3 - 1)\",\"29660\",\"57 - 54\"],[\"august 7\",\"cardinals\",\"13 - 1\",\"ramírez (4 - 8)\",\"34262\",\"57 - 55\"],[\"august 8\",\"cardinals\",\"10 - 3\",\"marquis (12 - 10)\",\"40094\",\"58 - 55\"],[\"august 9\",\"cardinals\",\"8 - 7\",\"isringhausen (3 - 5)\",\"41649\",\"59 - 55\"],[\"august 10\",\"cardinals\",\"6 - 1\",\"arroyo (9 - 8)\",\"39591\",\"59 - 56\"],[\"august 11\",\"phillies\",\"6 - 5\",\"ramírez (4 - 9)\",\"41461\",\"59 - 57\"],[\"august 12\",\"phillies\",\"9 - 7\",\"gordon (3 - 0)\",\"39553\",\"60 - 57\"],[\"august 13\",\"phillies\",\"7 - 5\",\"madson (10 - 8)\",\"37677\",\"61 - 57\"],[\"august 15\",\"cardinals\",\"5 - 0\",\"harang (12 - 8)\",\"42761\",\"61 - 58\"],[\"august 16\",\"cardinals\",\"7 - 2\",\"reyes (4 - 6)\",\"42752\",\"62 - 58\"],[\"august 17\",\"cardinals\",\"2 - 1\",\"franklin (2 - 6)\",\"40346\",\"62 - 59\"],[\"august 18\",\"pirates\",\"7 - 3\",\"michalak (1 - 1)\",\"31718\",\"62 - 60\"],[\"august 19\",\"pirates\",\"14 - 7\",\"torres (3 - 6)\",\"34245\",\"63 - 60\"],[\"august 20\",\"pirates\",\"5 - 1\",\"santos (5 - 8)\",\"29935\",\"64 - 60\"],[\"august 21\",\"astros\",\"4 - 3\",\"qualls (4 - 3)\",\"24110\",\"65 - 60\"],[\"august 22\",\"astros\",\"14 - 0\",\"hirsh (1 - 2)\",\"22556\",\"66 - 60\"],[\"august 23\",\"astros\",\"7 - 3\",\"coffey (6 - 5)\",\"24873\",\"66 - 61\"],[\"august 24\",\"giants\",\"6 - 3\",\"chulk (0 - 2)\",\"38754\",\"67 - 61\"],[\"august 25\",\"giants\",\"4 - 1\",\"harang (13 - 9)\",\"37801\",\"67 - 62\"],[\"august 26\",\"giants\",\"4 - 1\",\"arroyo (10 - 9)\",\"41362\",\"67 - 63\"],[\"august 27\",\"giants\",\"8 - 0\",\"lohse (1 - 1)\",\"39097\",\"67 - 64\"],[\"august 28\",\"dodgers\",\"6 - 5\",\"michalak (1 - 2)\",\"44176\",\"67 - 65\"],[\"august 29\",\"dodgers\",\"6 - 5\",\"franklin (5 - 7)\",\"44697\",\"67 - 66\"],[\"august 30\",\"dodgers\",\"7 - 3\",\"harang (13 - 10)\",\"47356\",\"67 - 67\"]]\nQuestion = Is it true that when the braves played james and won 56 to 53 , the attendance was 33661?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    scores = get_column_by_name(table_data, \"score\")\n    losses = get_column_by_name(table_data, \"loss\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    for opponent, score, loss, attendance in zip(opponents, scores, losses, attendances):\n        if opponent.lower() == \"braves\" and score == \"5 - 4\" and loss == \"james (4 - 3)\":\n            answer = equal_to(attendance, \"33661\")\n            break \n    return answer\n\n### END"}
{"id": "2ed21b0d-1744-405a-adbe-e73f69d1fddc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = piia pantsu\ntable_data = [[\"competition\", \"place\", \"year\", \"horse\", \"rank\"],[\"world championship\", \"haag\", \"1994\", \"cyna\", \"5\"],[\"european championship\", \"rome\", \"1995\", \"cyna\", \"4\"],[\"european championship\", \"burghley\", \"1997\", \"cyna\", \"stopped in second event\"],[\"world championship\", \"rooma\", \"1998\", \"uppercut\", \"9\"],[\"european championship\", \"luhmühlen\", \"1999\", \"uppercut\", \"4\"],[\"olympics\", \"sydney\", \"2000\", \"uppercut\", \"disqualification in second event\"],[\"european championship\", \"pau\", \"2001\", \"ypäjä karuso\", \"17\"],[\"world championship\", \"jerez\", \"2002\", \"ypäjä karuso\", \"3\"],[\"badminton horse trials\", \"gloucestershire , england\", \"2003\", \"ypäjä karuso\", \"2\"],[\"european championship\", \"blenheim\", \"2005\", \"ypäjä karuso\", \"6\"],[\"world cup final\", \"malmö\", \"2005\", \"ypäjä karuso\", \"3\"],[\"world championship\", \"aachen\", \"2006\", \"ypäjä karuso\", \"stopped in second event\"],[\"finland championship\", \"kerava , finland\", \"2007\", \"ypäjä karuso\", \"1\"]]\nQuestion = Is it true that the horse was ypäjä karuso on the badminton horse trials competition?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    competitions = get_column_by_name(table_data, \"competition\")\n    horses = get_column_by_name(table_data, \"horse\")\n    answer = False\n    for competition, horse in zip(competitions, horses):\n        if \"badminton horse trials\" in competition.lower() and \"ypäjä karuso\" in horse.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "df5c38af-d199-4631-9a5e-2bb2c1c90dcd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = leonardo de souza\ntable_data = [[\"season\", \"series\", \"team name\", \"races\", \"poles\", \"wins\", \"podiums\", \"f / laps\", \"points\", \"final placing\"],[\"2005\", \"formula renault brasil\", \"kemba racing\", \"14\", \"0\", \"0\", \"0\", \"0\", \"18\", \"21st\"],[\"2006\", \"formula renault brasil\", \"eng makers\", \"10\", \"0\", \"0\", \"0\", \"0\", \"8\", \"18th\"],[\"2008\", \"formula three sudamericana\", \"kemba racing\", \"14\", \"0\", \"0\", \"0\", \"0\", \"24\", \"8th\"],[\"2009\", \"formula three sudamericana\", \"kemba racing\", \"14\", \"0\", \"1\", \"2\", \"0\", \"33\", \"9th\"],[\"2010\", \"formula three sudamericana\", \"kemba racing\", \"20\", \"0\", \"1\", \"4\", \"1\", \"171\", \"5th\"]]\nQuestion = Is it true that the 2010 formula three sudamericana series kemba racing team performed 20 races and then placed 5th in the final?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    series = get_column_by_name(table_data, \"series\")\n    team_names = get_column_by_name(table_data, \"team name\")\n    races = get_column_by_name(table_data, \"races\")\n    final_placings = get_column_by_name(table_data, \"final placing\")\n    for season, serie, team_name, race, final_placing in zip(seasons, series, team_names, races, final_placings):\n        if season == \"2010\" and serie.lower() == \"formula three sudamericana\" and team_name.lower() == \"kemba racing\":\n            answer = equal_to(race, \"20\") and equal_to(final_placing, \"5th\")\n            break \n    return answer\n\n### END"}
{"id": "e11cb9f3-88b4-4f43-a1fc-81c9c02d4e98", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"title\", \"from album\", \"label\", \"label - nr\"],[\"1962\", \"tonight / sinnin' sam\", \"lookin' ahead\", \"pacific jazz\", \"x - 340\"],[\"1962\", \"the young rabbits / song of india\", \"lookin' ahead\", \"pacific jazz\", \"x - 342\"],[\"1962\", \"congolese sermon / weather beat\", \"(only on 45)\", \"pacific jazz\", \"x - 357\"],[\"1963\", \"no name samba / tough talk\", \"tough talk\", \"world pacific\", \"x - 371\"],[\"1963\", \"turkish black / boopie\", \"tough talk\", \"world pacific\", \"x - 388\"],[\"1963\", \"spanish castles / bluesette\", \"jazz waltz (w les mccann)\", \"world pacific\", \"406\"],[\"1964\", \"heat wave / on broadway\", \"heat wave\", \"world pacific\", \"401\"],[\"1964\", \"i remember tomorrow / long john\", \"stretchin' out\", \"world pacific\", \"412\"],[\"1965\", \"tough talk / the thing\", \"the thing\", \"world pacific\", \"77800\"],[\"1965\", \"aqua dulce / soul bourgeoisie\", \"chile con soul\", \"world pacific\", \"77806\"],[\"1966\", \"scratch / uptight\", \"talk that talk\", \"pacific jazz\", \"88125\"],[\"1968\", \"ooga - boo - ga - loo / eleanor rigby\", \"lighthouse '68\", \"pacific jazz\", \"88144\"],[\"1968\", \"hey jude / love and peace\", \"powerhouse\", \"pacific jazz\", \"88146\"],[\"1969\", \"get back / willie and laura mae jones\", \"lighthouse '69\", \"word pacific jazz\", \"88153\"],[\"1970\", \"way back home / jackson\", \"old socks , new shoes\", \"chisa\", \"c - 8010\"]]\nQuestion = Is it true that the chile con soul has a label - nr of 77806?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    from_albums = get_column_by_name(table_data, \"from album\")\n    label_nrs = get_column_by_name(table_data, \"label - nr\")\n    for from_album, label_nr in zip(from_albums, label_nrs):\n        if from_album.lower() == \"chile con soul\":\n            answer = equal_to(label_nr, \"77806\")\n            break \n    return answer\n\n### END"}
{"id": "e0c3a506-f930-4f20-8dfd-ccb5e3b2e8db", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"poll source\",\"sample size\",\"date\",\"democrat\",\"republican\"],[\"survey usa\",\"520\",\"mar 14 - 16 , 2008\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"520\",\"mar 14 - 16 , 2008\",\"barack obama\",\"john mccain\"],[\"rasmussen reports\",\"500\",\"feb 17 - 18 , 2008\",\"hillary clinton\",\"john mccain\"],[\"rasmussen reports\",\"500\",\"feb 17 - 18 , 2008\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"506\",\"feb 15 - 17 , 2008\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"506\",\"feb 15 - 17 , 2008\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"hillary clinton\",\"rudy giuliani\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"hillary clinton\",\"mike huckabee\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"hillary clinton\",\"mitt romney\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"barack obama\",\"rudy giuliani\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"barack obama\",\"mike huckabee\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"501\",\"jan 20 - 21 , 2008\",\"barack obama\",\"mitt romney\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"hillary clinton\",\"rudy giuliani\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"hillary clinton\",\"mike huckabee\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"hillary clinton\",\"mitt romney\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"barack obama\",\"rudy giuliani\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"barack obama\",\"mike huckabee\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"523\",\"dec 13 - 15 , 2007\",\"barack obama\",\"mitt romney\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"hillary clinton\",\"rudy giuliani\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"hillary clinton\",\"mike huckabee\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"hillary clinton\",\"mitt romney\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"barack obama\",\"rudy giuliani\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"barack obama\",\"mike huckabee\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"barack obama\",\"john mccain\"],[\"survey usa\",\"506\",\"nov 9 - 11 , 2007\",\"barack obama\",\"mitt romney\"],[\"survey usa\",\"495\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"rudy giuliani\"],[\"survey usa\",\"472\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"mike huckabee\"],[\"survey usa\",\"468\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"john mccain\"],[\"survey usa\",\"464\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"ron paul\"],[\"survey usa\",\"482\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"mitt romney\"],[\"survey usa\",\"492\",\"oct 12 - 14 , 2007\",\"hillary clinton\",\"fred thompson\"]]\nQuestion = Is it true that a survey usa poll conducted on oct 12 - 14 , 2007 , was the only poll with ron paul as the republican and a sample size less than 472?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    poll_sources = get_column_by_name(table_data, \"poll source\")\n    sample_sizes = get_column_by_name(table_data, \"sample size\")\n    dates = get_column_by_name(table_data, \"date\")\n    republicans = get_column_by_name(table_data, \"republican\")\n    answer = False\n    for poll_source, sample_size, date, republican in zip(poll_sources, sample_sizes, dates, republicans):\n        if poll_source.lower() == \"survey usa\" and date.lower() == \"oct 12 - 14 , 2007\" and republican.lower() == \"ron paul\":\n            if less_than(int(sample_size), 472):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "09224224-7c85-4bc4-b46b-7efc54e48877", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = jewelpet universe\ntable_data = [[\"name\",\"sweet\",\"species\",\"gender\",\"attribute\",\"birthday\",\"media debut\",\"voice actor\"],[\"sakuran ( さくらん )\",\"sakuramochi\",\"brown bear\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"rina hidaka\"],[\"melorina ( メロリーナ )\",\"melonpan\",\"poodle\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"asuka ōgame (sweets dance princess)\"],[\"eclan ( エクレン )\",\"eclair\",\"rex rabbit\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"chiwa saito (sweets dance princess)\"],[\"macaronia ( マカロニア )\",\"macaron\",\"holland lop\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"miyu matsuki (sweets dance princess)\"],[\"donadona ( ドナドナ )\",\"donut\",\"golden hamster\",\"male\",\"magical red\",\"unknown\",\"jps ep 38\",\"saki fujita (sweets dance princess)\"],[\"honey ( ハニー )\",\"honey waffles\",\"flying squirrel\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"megumi mukai (sweets dance princess)\"],[\"purinki ( プリンキー )\",\"crème caramel\",\"common squirrel monkey\",\"female\",\"magical green\",\"unknown\",\"jps ep 38\",\"mana matsufuji (sweets dance princess)\"],[\"chocolat ( ショコラ )\",\"chocolate ice cream\",\"asian black bear\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"marie miyake (sweets dance princess)\"],[\"maco ( マコ )\",\"macaron\",\"roborovski hamster\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"mako\"],[\"kaco ( カコ )\",\"macaron\",\"roborovski hamster\",\"male\",\"magical green\",\"unknown\",\"jps ep 38\",\"asuka ōgame\"],[\"roco ( ロコ )\",\"macaron\",\"roborovski hamster\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"marie miyake\"],[\"coron ( コロン )\",\"macaron\",\"roborovski hamster\",\"male\",\"magical red\",\"unknown\",\"jps ep 38\",\"saki fujita\"]]\nQuestion = Is it true that the gender of the holland lop was female?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    species = get_column_by_name(table_data, \"species\")\n    genders = get_column_by_name(table_data, \"gender\")\n    for specie, gender in zip(species, genders):\n        if \"holland lop\" in specie.lower():\n            answer = gender.lower() == \"female\"\n            break\n    return answer\n\n### END"}
{"id": "41806b17-d2ac-4b97-9cf0-eec64c2642f2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = oregon city - class cruiser\ntable_data = [[\"hull number\", \"name\", \"builder\", \"laid down\", \"launched\", \"completed\"],[\"ca 122\", \"ussoregon city\", \"bethlehem steel\", \"8 april 1944\", \"9 june 1945\", \"16 february 1946\"],[\"ca 123\", \"ussalbany\", \"bethlehem steel\", \"6 mar 1944\", \"30 jun 1945\", \"11 jun 1946\"],[\"ca - 124\", \"ussrochester\", \"bethlehem steel\", \"29 may 1944\", \"28 august 1945\", \"20 december 1946\"],[\"ca - 125\", \"ussnorthampton\", \"bethlehem steel\", \"31 august 1944\", \"27 january 1951\", \"7 march 1953\"],[\"ca - 126\", \"uss cambridge\", \"bethlehem steel\", \"16 december 1944\", \"n / a\", \"n / a\"],[\"ca - 127\", \"uss bridgeport\", \"bethlehem steel\", \"13 january 1945\", \"n / a\", \"n / a\"],[\"ca - 128\", \"uss kansas city\", \"bethlehem steel\", \"n / a\", \"n / a\", \"n / a\"],[\"ca - 129\", \"uss tulsa\", \"bethlehem steel\", \"n / a\", \"n / a\", \"n / a\"],[\"ca - 137\", \"uss norfolk\", \"philadelphia naval shipyard\", \"n / a\", \"n / a\", \"n / a\"],[\"ca - 138\", \"uss scranton\", \"philadelphia naval shipyard\", \"n / a\", \"n / a\", \"n / a\"]]\nQuestion = Is it true that bethlehem steel was the builder for the uss cambridge?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_name = get_column_by_name(table_data, \"name\")\n    column_builder = get_column_by_name(table_data, \"builder\")\n    answer = False\n    for name, builder in zip(column_name, column_builder):\n        if \"uss cambridge\" in name.lower():\n            if \"bethlehem steel\" in builder.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "52cc79e2-5318-4f25-a15c-174b40f81262", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1930 grand prix season\ntable_data = [[\"name\",\"circuit\",\"date\",\"winning driver\",\"winning constructor\",\"report\"],[\"circuit d'esterel plage\",\"saint - raphaël\",\"2 march\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"tripoli grand prix\",\"tripoli\",\"23 march\",\"baconin borzacchini\",\"maserati\",\"report\"],[\"monaco grand prix\",\"monte carlo\",\"6 april\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"alessandria circuit\",\"bordino\",\"20 april\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"oran grand prix\",\"arcole\",\"27 april\",\"jean de maleplane\",\"bugatti\",\"report\"],[\"targa florio\",\"madonie\",\"4 may\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"picardy grand prix\",\"péronne\",\"18 may\",\"max fourny\",\"bugatti\",\"report\"],[\"rome grand prix\",\"tre fontane\",\"25 may\",\"luigi arcangeli\",\"maserati\",\"report\"],[\"grand prix des frontières\",\"chimay\",\"9 june\",\"georges de marotte\",\"salmson\",\"report\"],[\"lyon grand prix\",\"quincieux\",\"15 june\",\"louis chiron\",\"bugatti\",\"report\"],[\"grand prix de la marne\",\"reims\",\"29 june\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"eifelrennen\",\"nürburgring\",\"20 july\",\"heinrich - joachim von morgen\",\"bugatti\",\"report\"],[\"dieppe grand prix\",\"dieppe\",\"20 july\",\"marcel lehoux\",\"bugatti\",\"report\"],[\"coppa ciano\",\"montenero\",\"3 august\",\"luigi fagioli\",\"maserati\",\"report\"],[\"dauphiné circuit\",\"grenoble\",\"10 august\",\"philippe étancelin\",\"bugatti\",\"report\"],[\"coppa acerbo\",\"pescara\",\"17 august\",\"achille varzi\",\"maserati\",\"report\"],[\"grand prix du comminges\",\"saint - gaudens\",\"17 august\",\"françois miquel\",\"bugatti\",\"report\"],[\"monza grand prix\",\"monza\",\"7 september\",\"achille varzi\",\"maserati\",\"report\"],[\"lviv grand prix\",\"lviv\",\"8 september\",\"henryk liefeldt\",\"austro daimler\",\"report\"],[\"masaryk circuit\",\"brno\",\"28 september\",\"hermann of leiningen\",\"bugatti\",\"report\"],[\"san sebastián grand prix\",\"lasarte\",\"5 october\",\"achille varzi\",\"maserati\",\"report\"]]\nQuestion = Is it true that winning drivers with the first name of luigi only appear one time?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef solution(table_data):\n    winning_drivers = get_column_by_name(table_data, \"winning driver\")\n    luigi_count = 0\n    for driver in winning_drivers:\n        if \"luigi\" in driver.lower():\n            luigi_count += 1\n    answer = luigi_count == 1\n    return answer\n\n### END"}
{"id": "8a27d486-d323-4591-b436-41fecda5c1f0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"satellite\",\"cospar id\",\"satcat no\",\"product number\",\"launch date\",\"estimated end date\",\"estimated operational life\"],[\"kosmos 2133\",\"1991 - 010a\",\"21111\",\"7120\",\"14 february 1991\",\"9 november 1995\",\"4 years 9 months\"],[\"kosmos 2224\",\"1992 - 088a\",\"22269\",\"7121\",\"17 december 1992\",\"17 june 1999\",\"6 years 6 months\"],[\"kosmos 2282\",\"1994 - 038a\",\"23168\",\"7123\",\"6 july 1994\",\"29 december 1995\",\"1 year 5 months\"],[\"kosmos 2350\",\"1998 - 025a\",\"25315\",\"7122\",\"29 april 1998\",\"29 june 1998\",\"2 months\"],[\"kosmos 2379\",\"2001 - 037a\",\"26892\",\"7124\",\"24 august 2001\",\"late 2009 / early 2010\",\"8 years\"],[\"kosmos 2397\",\"2003 - 015a\",\"27775\",\"7126\",\"24 april 2003\",\"june 2003\",\"2 months\"],[\"kosmos 2440\",\"2008 - 033a\",\"33108\",\"7127\",\"26 june 2008\",\"february 2010\",\"1 year 4 months\"]]\nQuestion = Is it true that the kosmos 2379 satellite has a cospar id of 2001 - 037a?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    satellites = get_column_by_name(table_data, \"satellite\")\n    cospar_ids = get_column_by_name(table_data, \"cospar id\")\n    for satellite, cospar_id in zip(satellites, cospar_ids):\n        if satellite.lower() == \"kosmos 2379\":\n            answer = equal_to(cospar_id, \"2001 - 037a\")\n            break \n    return answer\n\n### END"}
{"id": "0b11a85a-7efc-4baa-afc8-01211fab4537", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1996 - 97 montreal canadiens season\ntable_data = [[\"round\", \"player\", \"position\", \"nationality\", \"college / junior / club team\"],[\"1\", \"matt higgins\", \"center\", \"canada\", \"moose jaw warriors (whl)\"],[\"2\", \"mathieu garon\", \"goalie\", \"canada\", \"victoriaville tigres (qmjhl)\"],[\"3\", \"arron asham\", \"right wing\", \"canada\", \"red deer rebels (whl)\"],[\"4\", \"kim staal\", \"left wing\", \"denmark\", \"malmã if (sweden)\"],[\"4\", \"etienne drapeau\", \"center\", \"canada\", \"beauport harfangs (qmjhl)\"],[\"5\", \"daniel archambault\", \"defence\", \"canada\", \"val - d'or foreurs (qmjhl)\"],[\"6\", \"brett clark\", \"defenceman\", \"canada\", \"university of maine (ncaa)\"],[\"7\", \"timo vertala\", \"left wing\", \"finland\", \"jyp (finland)\"],[\"8\", \"mattia baldi\", \"left wing\", \"switzerland\", \"ambri - piotta (swiss)\"],[\"9\", \"michel tremblay\", \"left wing\", \"canada\", \"shawinigan cataractes (qmjhl)\"]]\nQuestion = Is it true that with mattia baldi as the player , switzerland has a position of left wing and a round greater than 4?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    positions = get_column_by_name(table_data, \"position\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    rounds = get_column_by_name(table_data, \"round\")\n    answer = False\n    for player, position, nationality, round in zip(players, positions, nationalities, rounds):\n        if player.lower() == \"mattia baldi\" and nationality.lower() == \"switzerland\" and position.lower() == \"left wing\":\n            if greater(int(round), 4):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "8b81cfa9-4d82-4e5d-8878-5b6a1c76ae29", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of career achievements by tiger woods\ntable_data = [[\"year\", \"championship\", \"54 holes\", \"winning score\", \"margin of victory\", \"runner (s) - up\"],[\"1999\", \"wgc - nec invitational\", \"5 shot lead\", \"- 10 (66 + 71 + 62 + 71 = 270)\", \"1 stroke\", \"phil mickelson\"],[\"1999\", \"wgc - american express championship\", \"1 shot deficit\", \"- 6 (71 + 69 + 70 + 68 = 278)\", \"playoff 1\", \"miguel ángel jiménez\"],[\"2000\", \"wgc - nec invitational (2)\", \"9 shot lead\", \"- 21 (64 + 61 + 67 + 67 = 259)\", \"11 strokes\", \"justin leonard , phillip price\"],[\"2001\", \"wgc - nec invitational (3)\", \"2 shot deficit\", \"- 12 (66 + 67 + 66 + 69 = 268)\", \"playoff 2\", \"jim furyk\"],[\"2002\", \"wgc - american express championship (2)\", \"5 shot lead\", \"- 25 (65 + 65 + 67 + 66 = 263)\", \"1 stroke\", \"retief goosen\"],[\"2003\", \"wgc - accenture match play championship\", \"n / a\", \"2 & 1\", \"2 & 1\", \"david toms\"],[\"2003\", \"wgc - american express championship (3)\", \"2 shot lead\", \"- 6 (67 + 66 + 69 + 72 = 274)\", \"2 strokes\", \"stuart appleby , tim herron , vijay singh\"],[\"2004\", \"wgc - accenture match play championship (2)\", \"n / a\", \"3 & 2\", \"3 & 2\", \"davis love iii\"],[\"2005\", \"wgc - nec invitational (4)\", \"tied for lead\", \"- 6 (66 + 70 + 67 + 71 = 274)\", \"1 stroke\", \"chris dimarco\"],[\"2005\", \"wgc - american express championship (4)\", \"2 shot deficit\", \"- 10 (67 + 68 + 68 + 67 = 270)\", \"playoff 3\", \"john daly\"],[\"2006\", \"wgc - american express championship (5)\", \"6 shot lead\", \"- 23 (63 + 64 + 67 + 67 = 261)\", \"8 strokes\", \"ian poulter , adam scott\"]]\nQuestion = Is it true that 10 strokes was the margin of victory over justin leonard , phillip price?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    margin_of_victory = get_column_by_name(table_data, \"margin of victory\")\n    runner_ups = get_column_by_name(table_data, \"runner (s) - up\")\n    for margin, runner_up in zip(margin_of_victory, runner_ups):\n        if \"justin leonard , phillip price\" in runner_up.lower():\n            answer = equal_to(margin, \"10 strokes\")\n            break \n    return answer\n\n### END"}
{"id": "cc411635-02d6-4ecb-8124-67c136d7d4e1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1930 grand prix season\ntable_data = [[\"name\",\"circuit\",\"date\",\"winning driver\",\"winning constructor\",\"report\"],[\"circuit d'esterel plage\",\"saint - raphaël\",\"2 march\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"tripoli grand prix\",\"tripoli\",\"23 march\",\"baconin borzacchini\",\"maserati\",\"report\"],[\"monaco grand prix\",\"monte carlo\",\"6 april\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"alessandria circuit\",\"bordino\",\"20 april\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"oran grand prix\",\"arcole\",\"27 april\",\"jean de maleplane\",\"bugatti\",\"report\"],[\"targa florio\",\"madonie\",\"4 may\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"picardy grand prix\",\"péronne\",\"18 may\",\"max fourny\",\"bugatti\",\"report\"],[\"rome grand prix\",\"tre fontane\",\"25 may\",\"luigi arcangeli\",\"maserati\",\"report\"],[\"grand prix des frontières\",\"chimay\",\"9 june\",\"georges de marotte\",\"salmson\",\"report\"],[\"lyon grand prix\",\"quincieux\",\"15 june\",\"louis chiron\",\"bugatti\",\"report\"],[\"grand prix de la marne\",\"reims\",\"29 june\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"eifelrennen\",\"nürburgring\",\"20 july\",\"heinrich - joachim von morgen\",\"bugatti\",\"report\"],[\"dieppe grand prix\",\"dieppe\",\"20 july\",\"marcel lehoux\",\"bugatti\",\"report\"],[\"coppa ciano\",\"montenero\",\"3 august\",\"luigi fagioli\",\"maserati\",\"report\"],[\"dauphiné circuit\",\"grenoble\",\"10 august\",\"philippe étancelin\",\"bugatti\",\"report\"],[\"coppa acerbo\",\"pescara\",\"17 august\",\"achille varzi\",\"maserati\",\"report\"],[\"grand prix du comminges\",\"saint - gaudens\",\"17 august\",\"françois miquel\",\"bugatti\",\"report\"],[\"monza grand prix\",\"monza\",\"7 september\",\"achille varzi\",\"maserati\",\"report\"],[\"lviv grand prix\",\"lviv\",\"8 september\",\"henryk liefeldt\",\"austro daimler\",\"report\"],[\"masaryk circuit\",\"brno\",\"28 september\",\"hermann of leiningen\",\"bugatti\",\"report\"],[\"san sebastián grand prix\",\"lasarte\",\"5 october\",\"achille varzi\",\"maserati\",\"report\"]]\nQuestion = Is it true that bugattis is the winning constructor with the name of rome grand prix?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    constructors = get_column_by_name(table_data, \"winning constructor\")\n    for name, constructor in zip(names, constructors):\n        if name.lower() == \"rome grand prix\":\n            answer = constructor.lower() == \"bugattis\"\n            break\n    return answer\n\n### END"}
{"id": "1954b14f-6238-45e5-9fcb-8f12f0c1ea47", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"class\", \"part 1\", \"part 2\", \"part 3\", \"part 4\", \"verb meaning\"],[\"1\", \"rīdan\", \"rād\", \"ridon\", \"riden\", \"to ride\"],[\"2a\", \"frēosan\", \"frēas\", \"fruron\", \"froren\", \"to freeze\"],[\"2b\", \"lūcan\", \"lēac\", \"lucon\", \"locen\", \"to lock\"],[\"3a\", \"bindan\", \"band\", \"bundon\", \"bunden\", \"to bind\"],[\"3b\", \"weorþan\", \"wearþ\", \"wurdon\", \"worden\", \"to become\"],[\"4\", \"beran\", \"bær\", \"bǣron\", \"boren\", \"to bear\"],[\"5\", \"lesan\", \"læs\", \"lǣron\", \"leren\", \"to gather\"],[\"6\", \"alan\", \"ōl\", \"ōlon\", \"alen\", \"to nourish , to grow\"],[\"7a\", \"hātan\", \"hēt\", \"hēton\", \"hāten\", \"to call , to be called\"],[\"7b\", \"hlēapan\", \"hlēop\", \"hlēppon\", \"hlēapen\", \"to leap\"],[\"7c\", \"healdan\", \"hēold\", \"hēoldon\", \"healden\", \"to hold\"],[\"7d\", \"rǣdan\", \"rēd\", \"rēdon\", \"rǣden\", \"to advise , to interpret\"]]\nQuestion = Is it true that the verb bǣron is part 3 of class 4?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    classes = get_column_by_name(table_data, \"class\")\n    part_3s = get_column_by_name(table_data, \"part 3\")\n    for class_, part_3 in zip(classes, part_3s):\n        if class_.lower() == \"4\" and part_3.lower() == \"bǣron\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "0aff13d0-6e17-42e3-b8e5-a45299c92883", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = cultural interest fraternities and sororities\ntable_data = [[\"letters\", \"organization\", \"nickname\", \"founding date\", \"founding university\", \"type\"],[\"δλφ\", \"delta lambda phi\", \"dlp , deltas' , or lambda men\", \"1986 - 10 - 15\", \"washington , dc\", \"fraternity\"],[\"κψκ\", \"kappa psi kappa\", \"canes , k - psis , diamonds , or angels\", \"2001 - 08 - 17\", \"tallahassee , florida\", \"fraternity\"],[\"οεπ\", \"omicron epsilon pi\", \"the epps\", \"2000 - 12 - 07\", \"tallahassee , florida\", \"sorority\"],[\"γρλ\", \"gamma rho lambda 1\", \"grl\", \"2003 - 08 - 25\", \"tempe , arizona\", \"sorority\"],[\"αλζ\", \"alpha lambda zeta\", \"the regal alphas\", \"2006 - 01 - 09\", \"houston , texas and atlanta , georgia\", \"fraternity\"],[\"καλ\", \"kappa alpha lambda\", \"the kappas\", \"2003 - 10 - 19\", \"clark atlanta university\", \"sorority\"],[\"φαν\", \"phi alpha nu\", \"phi - nomenal gentlewomen\", \"2006 - 07 - 30\", \"charlotte , nc\", \"fraternity\"]]\nQuestion = Is it true that sorority is the type if the organization name is gamma rho lambda 1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    organizations = get_column_by_name(table_data, \"organization\")\n    types = get_column_by_name(table_data, \"type\")\n    for organization, type in zip(organizations, types):\n        if equal_to(organization, \"gamma rho lambda 1\"):\n            answer = equal_to(type, \"sorority\")\n            break \n    return answer\n\n### END"}
{"id": "05f518d3-e852-4f43-90da-bf17466b5964", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 top 14 season\ntable_data = [[\"club\", \"played\", \"drawn\", \"lost\", \"points for\", \"points against\", \"bonus points\", \"points\"],[\"clermont\", \"26\", \"0\", \"6\", \"773\", \"380\", \"16\", \"96\"],[\"toulouse\", \"26\", \"0\", \"7\", \"723\", \"394\", \"15\", \"91\"],[\"stade franã§ais\", \"26\", \"0\", \"8\", \"617\", \"417\", \"8\", \"80\"],[\"perpignan\", \"26\", \"2\", \"7\", \"531\", \"392\", \"7\", \"79\"],[\"castres\", \"26\", \"0\", \"11\", \"564\", \"524\", \"9\", \"69\"],[\"biarritz\", \"26\", \"1\", \"12\", \"385\", \"339\", \"12\", \"66\"],[\"montauban\", \"26\", \"0\", \"13\", \"420\", \"446\", \"11\", \"63\"],[\"montpellier\", \"26\", \"0\", \"12\", \"426\", \"490\", \"5\", \"61\"],[\"bayonne\", \"26\", \"1\", \"14\", \"457\", \"535\", \"8\", \"54\"],[\"bourgoin\", \"26\", \"2\", \"14\", \"453\", \"526\", \"8\", \"52\"],[\"brive\", \"26\", \"0\", \"16\", \"425\", \"514\", \"11\", \"51\"],[\"albi\", \"26\", \"1\", \"16\", \"415\", \"549\", \"10\", \"48\"],[\"dax\", \"26\", \"1\", \"19\", \"314\", \"645\", \"8\", \"34\"],[\"auch\", \"26\", \"0\", \"23\", \"336\", \"688\", \"7\", \"19\"]]\nQuestion = Is it true that the castres have 564 positive points after 26 games played?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    clubs = get_column_by_name(table_data, \"club\")\n    points_for = get_column_by_name(table_data, \"points for\")\n    for club, points in zip(clubs, points_for):\n        if club.lower() == \"castres\":\n            answer = equal_to(points, \"564\")\n            break \n    return answer\n\n### END"}
{"id": "91ffdcd9-05a5-4b16-b493-67992f29a7e9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = lynyrd skynyrd\ntable_data = [[\"date of release\", \"title\", \"billboard peak\", \"riaa cert\", \"label\"],[\"august 13 , 1973\", \"(pronounced 'lĕh - 'nérd 'skin - 'nérd)\", \"27\", \"2 platinum\", \"mca\"],[\"april 15 , 1974\", \"second helping\", \"12\", \"2 platinum\", \"mca\"],[\"march 24 , 1975\", \"nuthin' fancy\", \"9\", \"platinum\", \"mca\"],[\"february 2 , 1976\", \"gimme back my bullets\", \"20\", \"gold\", \"mca\"],[\"october 17 , 1977\", \"street survivors\", \"5\", \"2 platinum\", \"mca\"],[\"june 11 , 1991\", \"lynyrd skynyrd 1991\", \"64\", \"-\", \"atlantic\"],[\"february 16 , 1993\", \"the last rebel\", \"64\", \"-\", \"atlantic\"],[\"august 9 , 1994\", \"endangered species\", \"-\", \"-\", \"capricorn\"],[\"april 29 , 1997\", \"twenty\", \"97\", \"-\", \"cmc\"],[\"august 10 , 1999\", \"edge of forever\", \"96\", \"-\", \"cmc\"],[\"september 12 , 2000\", \"christmas time again\", \"38\", \"-\", \"sanctuary\"],[\"may 20 , 2003\", \"vicious cycle\", \"30\", \"-\", \"sanctuary\"],[\"september 29 , 2009\", \"god & guns\", \"18\", \"-\", \"roadrunner\"],[\"august 21 , 2012\", \"last of a dyin' breed\", \"14\", \"-\", \"roadrunner\"]]\nQuestion = Is it true that the album released on september 12 , 2000 by sanctuary had billboard peak under 38?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    release_dates = get_column_by_name(table_data, \"date of release\")\n    billboard_peaks = get_column_by_name(table_data, \"billboard peak\")\n    labels = get_column_by_name(table_data, \"label\")\n    for release_date, billboard_peak, label in zip(release_dates, billboard_peaks, labels):\n        if \"september 12 , 2000\" in release_date.lower() and \"sanctuary\" in label.lower():\n            answer = less_than(int(billboard_peak), 38)\n            break \n    return answer\n\n### END"}
{"id": "5eb5a54e-133a-4b86-a505-931407a0abdc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = media in fargo - moorhead\ntable_data = [[\"frequency\", \"call sign\", \"name\", \"format\", \"owner\"],[\"88.7 fm\", \"kfbn\", \"heaven 88.7\", \"christian\", \"fargo baptist church\"],[\"90.3 fm\", \"kccd\", \"minnesota public radio / npr\", \"news / talk\", \"minnesota public radio\"],[\"91.1 fm\", \"kccm\", \"minnesota public radio / npr\", \"classical\", \"minnesota public radio\"],[\"91.9 fm\", \"kdsu\", \"prairie public / npr\", \"adult album alternative\", \"north dakota state university\"],[\"92.7 fm\", \"kzdr\", \"92.7 the bone\", \"active rock\", \"mediactive\"],[\"93.7 fm\", \"wday - fm\", \"y94\", \"top 40 (chr)\", \"radio fargo - moorhead\"],[\"95.1 fm\", \"kbvb\", \"bob 95 fm\", \"country\", \"radio fargo - moorhead\"],[\"95.9 fm\", \"kxbq - lp\", \"dive 95.9\", \"alternative\", \"women 's care clinic\"],[\"96.3 fm\", \"knds - lp\", \"thunderradio radio free fargo\", \"college\", \"north dakota state university\"],[\"97.9 fm\", \"kfnw - fm\", \"life 97.9\", \"contemporary christian music\", \"northwestern college\"],[\"98.7 fm\", \"klta\", \"big 98.7\", \"adult chr\", \"triad broadcasting\"],[\"99.3 fm\", \"k257ep\", \"k - love\", \"contemporary christian music ( kklq translator )\", \"educational media foundation\"],[\"99.9 fm\", \"kvox - fm\", \"froggy 99.9\", \"country\", \"triad broadcasting\"],[\"100.7 fm\", \"kklq\", \"k - love\", \"contemporary christian music\", \"educational media foundation\"],[\"101.9 fm\", \"krwk\", \"101.9 talk fm\", \"talk\", \"radio fargo - moorhead\"],[\"103.3 fm\", \"kzcr\", \"z 103.3\", \"rock / aaa\", \"jerry papenfuss\"],[\"103.9 fm\", \"kvmi\", \"103.9 the truck\", \"country\", \"vision media incorporated\"],[\"104.1 fm\", \"kbot\", \"104.1 the wave\", \"adult contemporary\", \"leighton broadcasting\"],[\"104.7 fm\", \"kmjo\", \"104.7 popster fm\", \"adult hits\", \"radio fargo - moorhead\"],[\"105.1 fm\", \"kqwb\", \"q 105.1\", \"active rock\", \"triad broadcasting\"],[\"106.1 fm\", \"kqlx - fm\", \"thunder 106.1\", \"classic country\", \"great plains integrated marketing\"],[\"106.5 fm\", \"krjb\", \"krjb 106.5\", \"country\", \"r&j broadcasting\"],[\"106.9 fm\", \"kegk\", \"eagle 106.9\", \"classic hits\", \"great plains integrated marketing\"],[\"107.9 fm\", \"kpfx\", \"107.9 the fox\", \"classic rock\", \"triad broadcasting\"]]\nQuestion = Is it true that q 105.1 is the owner of contemporary christian music station on 97.9 fm?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    names = get_column_by_name(table_data, \"name\")\n    formats = get_column_by_name(table_data, \"format\")\n    owners = get_column_by_name(table_data, \"owner\")\n    for frequency, name, format, owner in zip(frequencies, names, formats, owners):\n        if equal_to(frequency, \"97.9 fm\") and equal_to(format, \"contemporary christian music\"):\n            answer = equal_to(owner, \"q 105.1\")\n            break \n    return answer\n\n### END"}
{"id": "fb71e1f2-18ac-431e-9926-8440d73d002d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states house of representatives elections , 1984\ntable_data = [[\"district\", \"incumbent\", \"party\", \"first elected\", \"result\", \"candidates\"],[\"florida 1\", \"earl dewitt hutto\", \"democratic\", \"1978\", \"re - elected\", \"earl dewitt hutto (d) unopposed\"],[\"florida 2\", \"don fuqua\", \"democratic\", \"1962\", \"re - elected\", \"don fuqua (d) unopposed\"],[\"florida 3\", \"charles edward bennett\", \"democratic\", \"1948\", \"re - elected\", \"charles edward bennett (d) unopposed\"],[\"florida 5\", \"bill mccollum\", \"republican\", \"1980\", \"re - elected\", \"bill mccollum (r) unopposed\"],[\"florida 6\", \"buddy mackay\", \"democratic\", \"1982\", \"re - elected\", \"buddy mackay (d) 99.3% others 0.7%\"],[\"florida 8\", \"bill young\", \"republican\", \"1970\", \"re - elected\", \"bill young (r) 80.3% robert kent (d) 19.7%\"],[\"florida 9\", \"michael bilirakis\", \"republican\", \"1982\", \"re - elected\", \"michael bilirakis (r) 78.6% jack wilson (d) 21.4%\"],[\"florida 10\", \"andy ireland\", \"republican\", \"1976\", \"re - elected\", \"andy ireland (r) 61.9% patricia m glass (d) 38.1%\"],[\"florida 11\", \"bill nelson\", \"democratic\", \"1978\", \"re - elected\", \"bill nelson (d) 60.5% rob quartel (r) 39.5%\"],[\"florida 12\", \"tom lewis\", \"republican\", \"1982\", \"re - elected\", \"tom lewis (r) unopposed\"],[\"florida 13\", \"connie mack\", \"republican\", \"1982\", \"re - elected\", \"connie mack (r) unopposed\"],[\"florida 14\", \"dan mica\", \"democratic\", \"1978\", \"re - elected\", \"dan mica (d) 55.4% don ross (r) 44.6%\"],[\"florida 16\", \"lawrence j smith\", \"democratic\", \"1982\", \"re - elected\", \"lawrence j smith (d) 56.4% tom bush (r) 43.6%\"],[\"florida 17\", \"william lehman\", \"democratic\", \"1972\", \"re - elected\", \"william lehman (d) unopposed\"],[\"florida 18\", \"claude pepper\", \"democratic\", \"1962\", \"re - elected\", \"claude pepper (d) 60.5% ricardo nunez (r) 39.5%\"]]\nQuestion = Is it true that the incumbent charles edward bennett is a part of the democratic party?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    incumbents = get_column_by_name(table_data, \"incumbent\")\n    parties = get_column_by_name(table_data, \"party\")\n    for incumbent, party in zip(incumbents, parties):\n        if incumbent.lower() == \"charles edward bennett\":\n            answer = party.lower() == \"democratic\"\n            break\n    return answer\n\n### END"}
{"id": "a549d2ea-15cd-415d-9fa6-534aa01f116e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1982 - 83 atlanta hawks season\ntable_data = [[\"round\", \"pick\", \"player\", \"nationality\", \"college\"],[\"1\", \"10\", \"keith edmonson\", \"united states\", \"purdue\"],[\"3\", \"56\", \"joe kopicki\", \"united states\", \"detroit mercy\"],[\"5\", \"102\", \"mark hall\", \"united states\", \"minnesota\"],[\"6\", \"126\", \"jay bruchak\", \"united states\", \"mount st mary 's\"],[\"7\", \"148\", \"horace wyatt\", \"united states\", \"clemson\"],[\"8\", \"172\", \"james ratiff\", \"united states\", \"howard\"],[\"9\", \"194\", \"pierre bland\", \"united states\", \"elizabeth city state\"],[\"10\", \"216\", \"ronnie mcadoo\", \"united states\", \"old dominion\"]]\nQuestion = Is it true that pierre bland had a pick of 194 in round 9?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    picks = get_column_by_name(table_data, \"pick\")\n    rounds = get_column_by_name(table_data, \"round\")\n    for player, pick, round in zip(players, picks, rounds):\n        if player.lower() == \"pierre bland\":\n            answer = equal_to(pick, \"194\") and equal_to(round, \"9\")\n            break \n    return answer\n\n### END"}
{"id": "2c493ad6-78f2-4c9c-a332-8086c007a434", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = busiest airports in the united kingdom by total passenger traffic\ntable_data = [[\"rank\", \"airport\", \"total passengers\", \"% change 2006 / 2007\", \"international passengers\", \"domestic passengers\", \"transit passengers\", \"aircraft movements\", \"freight (metric tonnes)\"],[\"1\", \"london heathrow\", \"68066028\", \"0.8%\", \"62098911\", \"5753476\", \"213641\", \"481476\", \"1310987\"],[\"2\", \"london gatwick\", \"35216113\", \"3.1%\", \"31142002\", \"4023402\", \"50709\", \"266550\", \"171078\"],[\"3\", \"london stansted\", \"23779697\", \"0.4%\", \"21204946\", \"2554304\", \"20447\", \"208462\", \"203747\"],[\"4\", \"manchester\", \"22112625\", \"1.5%\", \"18662468\", \"3229255\", \"220902\", \"222703\", \"165366\"],[\"5\", \"london luton\", \"9927321\", \"5.3%\", \"8427894\", \"1491467\", \"7960\", \"120238\", \"38095\"],[\"6\", \"birmingham airport\", \"9226340\", \"0.9%\", \"7592240\", \"1541815\", \"92285\", \"114679\", \"13585\"],[\"7\", \"edinburgh\", \"9047558\", \"5.1%\", \"3417891\", \"5619309\", \"10358\", \"128172\", \"19292\"],[\"8\", \"glasgow international\", \"8795727\", \"0.6%\", \"4131512\", \"4594575\", \"69640\", \"108305\", \"4276\"],[\"9\", \"bristol\", \"5926774\", \"2.9%\", \"4608290\", \"1275566\", \"42918\", \"76428\", \"20\"],[\"10\", \"newcastle\", \"5650716\", \"4.0%\", \"3948594\", \"1675013\", \"27109\", \"79200\", \"785\"],[\"11\", \"liverpool\", \"5468510\", \"10.2%\", \"4636149\", \"827085\", \"5276\", \"86668\", \"3709\"],[\"12\", \"east midlands\", \"5413360\", \"14.5%\", \"4709855\", \"696649\", \"6856\", \"93989\", \"274753\"],[\"13\", \"belfast international\", \"5272664\", \"4.6%\", \"1788807\", \"3447248\", \"36609\", \"77395\", \"38429\"],[\"14\", \"aberdeen\", \"3412257\", \"7.8%\", \"1475988\", \"1935152\", \"1117\", \"121927\", \"3434\"],[\"15\", \"london city\", \"2912123\", \"23.5%\", \"2214884\", \"697239\", \"0\", \"91177\", \"0\"],[\"16\", \"leeds bradford\", \"2881539\", \"3.2%\", \"2229283\", \"630575\", \"21681\", \"65249\", \"109\"],[\"17\", \"glasgow prestwick\", \"2422332\", \"1.0%\", \"1827592\", \"593117\", \"1623\", \"47910\", \"31517\"],[\"18\", \"belfast city\", \"2186993\", \"3.9%\", \"93547\", \"2093320\", \"126\", \"43022\", \"1057\"],[\"19\", \"cardiff\", \"2111148\", \"4.3%\", \"1665247\", \"428260\", \"17641\", \"43963\", \"2391\"]]\nQuestion = Is it true that the rank 1 transit passengers for 171078 is 50709?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    transit_passengers = get_column_by_name(table_data, \"transit passengers\")\n    for rank, transit_passenger in zip(ranks, transit_passengers):\n        if rank == \"1\":\n            answer = equal_to(transit_passenger, \"50709\")\n            break \n    return answer\n\n### END"}
{"id": "aeb6f2f4-276e-4f7a-bf46-65aac0306f07", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1997 pga championship\ntable_data = [[\"player\", \"country\", \"year (s) won\", \"total\", \"to par\", \"finish\"],[\"nick price\", \"zimbabwe\", \"1992 , 1994\", \"284\", \"+ 4\", \"t13\"],[\"bob tway\", \"united states\", \"1986\", \"284\", \"+ 4\", \"t13\"],[\"john daly\", \"united states\", \"1991\", \"286\", \"+ 6\", \"t29\"],[\"paul azinger\", \"united states\", \"1993\", \"286\", \"+ 6\", \"t29\"],[\"payne stewart\", \"united states\", \"1989\", \"286\", \"+ 6\", \"t29\"],[\"steve elkington\", \"australia\", \"1995\", \"288\", \"+ 8\", \"t45\"],[\"lanny wadkins\", \"united states\", \"1977\", \"291\", \"+ 11\", \"t58\"],[\"larry nelson\", \"united states\", \"1981 , 1987\", \"295\", \"+ 15\", \"t71\"]]\nQuestion = Is it true that payne stewart is the player who won the pga in 1989?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    years_won = get_column_by_name(table_data, \"year (s) won\")\n    for player, year in zip(players, years_won):\n        if player.lower() == \"payne stewart\" and \"1989\" in year:\n            return True\n    return False\n\n### END"}
{"id": "885272a9-7521-4407-b114-5900a3c00902", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 issf world cup final (shotgun)\ntable_data = [[\"shooter\", \"event\", \"rank points\", \"score points\", \"total\"],[\"georgios achilleos ( cyp )\", \"wcf 2007\", \"defending champion\", \"defending champion\", \"defending champion\"],[\"vincent hancock ( usa )\", \"og beijing\", \"olympic gold medalist\", \"olympic gold medalist\", \"olympic gold medalist\"],[\"tore brovold ( nor )\", \"og beijing\", \"olympic silver medalist\", \"olympic silver medalist\", \"olympic silver medalist\"],[\"anthony terras ( fra )\", \"og beijing\", \"olympic bronze medalist\", \"olympic bronze medalist\", \"olympic bronze medalist\"],[\"ariel mauricio flores ( mex )\", \"wc kerrville\", \"15\", \"12\", \"27\"],[\"qu ridong ( chn )\", \"wc beijing\", \"15\", \"10\", \"25\"],[\"andrea benelli ( ita )\", \"wc belgrade\", \"10\", \"13\", \"23\"],[\"konstantin tsuranov ( rus )\", \"wc beijing\", \"10\", \"10\", \"20\"],[\"jan sychra ( cze )\", \"wc belgrade\", \"5\", \"13\", \"18\"],[\"valerio luchini ( ita )\", \"wc kerrville\", \"8\", \"10\", \"18\"],[\"leos hlavacek ( cze )\", \"wc suhl\", \"5\", \"11\", \"16\"],[\"abdullah alrashidi ( kuw )\", \"wc belgrade\", \"3\", \"12\", \"15\"]]\nQuestion = Is it true that the total for the wc belgrade event with 10 rank points is 18?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    rank_points = get_column_by_name(table_data, \"rank points\")\n    totals = get_column_by_name(table_data, \"total\")\n    for event, rank_point, total in zip(events, rank_points, totals):\n        if event.lower() == \"wc belgrade\" and rank_point == \"10\":\n            answer = equal_to(total, \"18\")\n            break \n    return answer\n\n### END"}
{"id": "1fde7505-098d-4399-8a67-409e4ff9ee23", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1982 toronto blue jays season\ntable_data = [[\"date\",\"opponent\",\"score\",\"loss\",\"record\"],[\"august 1\",\"tigers\",\"8 - 5\",\"leal (8 - 8)\",\"48 - 53\"],[\"august 2\",\"brewers\",\"9 - 4\",\"mcclure (8 - 4)\",\"49 - 53\"],[\"august 3\",\"brewers\",\"7 - 4\",\"clancy (8 - 10)\",\"49 - 54\"],[\"august 4\",\"brewers\",\"8 - 0\",\"gott (2 - 7)\",\"49 - 55\"],[\"august 5\",\"tigers\",\"5 - 2\",\"leal (8 - 9)\",\"49 - 56\"],[\"august 5\",\"tigers\",\"7 - 4\",\"jackson (3 - 8)\",\"49 - 57\"],[\"august 6\",\"tigers\",\"6 - 0\",\"stieb (11 - 11)\",\"49 - 58\"],[\"august 7\",\"tigers\",\"7 - 4\",\"pashnick (3 - 4)\",\"50 - 58\"],[\"august 8\",\"tigers\",\"7 - 4\",\"underwood (3 - 8)\",\"51 - 58\"],[\"august 8\",\"tigers\",\"7 - 4\",\"rucker (2 - 2)\",\"52 - 58\"],[\"august 9\",\"red sox\",\"4 - 2\",\"eckersley (11 - 10)\",\"53 - 58\"],[\"august 10\",\"red sox\",\"4 - 0\",\"torrez (7 - 7)\",\"54 - 58\"],[\"august 11\",\"red sox\",\"4 - 3\",\"stanley (7 - 5)\",\"55 - 58\"],[\"august 12\",\"brewers\",\"7 - 1\",\"gott (3 - 8)\",\"55 - 59\"],[\"august 12\",\"brewers\",\"4 - 3\",\"murray (7 - 4)\",\"55 - 60\"],[\"august 13\",\"brewers\",\"3 - 1\",\"leal (8 - 10)\",\"55 - 61\"],[\"august 14\",\"brewers\",\"4 - 2\",\"caldwell (10 - 11)\",\"56 - 61\"],[\"august 15\",\"brewers\",\"3 - 2\",\"slaton (9 - 4)\",\"57 - 61\"],[\"august 16\",\"indians\",\"2 - 1\",\"waits (1 - 12)\",\"58 - 61\"],[\"august 17\",\"indians\",\"6 - 5\",\"mclaughlin (8 - 5)\",\"58 - 62\"],[\"august 17\",\"indians\",\"9 - 5\",\"geisel (1 - 1)\",\"58 - 63\"],[\"august 20\",\"yankees\",\"4 - 2\",\"stieb (13 - 12)\",\"58 - 64\"],[\"august 21\",\"yankees\",\"3 - 1\",\"guidry (11 - 5)\",\"59 - 64\"],[\"august 22\",\"yankees\",\"3 - 1\",\"gott (4 - 9)\",\"59 - 65\"],[\"august 23\",\"yankees\",\"4 - 3\",\"leal (8 - 11)\",\"59 - 66\"],[\"august 24\",\"orioles\",\"7 - 3 (10)\",\"mclaughlin (8 - 6)\",\"59 - 67\"],[\"august 25\",\"orioles\",\"8 - 3\",\"clancy (11 - 11)\",\"59 - 68\"],[\"august 26\",\"orioles\",\"12 - 5\",\"gott (4 - 10)\",\"59 - 69\"],[\"august 27\",\"yankees\",\"10 - 3\",\"righetti (8 - 6)\",\"60 - 69\"],[\"august 28\",\"yankees\",\"3 - 2 (11)\",\"laroche (4 - 2)\",\"61 - 69\"],[\"august 29\",\"yankees\",\"8 - 2\",\"clancy (11 - 12)\",\"61 - 70\"],[\"august 30\",\"orioles\",\"6 - 3\",\"eichhorn (0 - 1)\",\"61 - 71\"],[\"august 31\",\"orioles\",\"1 - 0\",\"leal (9 - 12)\",\"61 - 72\"]]\nQuestion = Is it true that the opponent in the game when the record was 60 - 69 was the orioles?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    records = get_column_by_name(table_data, \"record\")\n    for opponent, record in zip(opponents, records):\n        if record == \"60 - 69\":\n            answer = opponent.lower() == \"orioles\"\n            break\n    return answer\n\n### END"}
{"id": "7aa04a29-c3ff-4e16-b9ff-cf68442e145b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date\", \"opponent\", \"result\", \"score\", \"record\", \"streak\"],[\"sun , apr 9 , 1972\", \"milwaukee bucks\", \"loss\", \"72 - 93\", \"0 - 1\", \"lost 1\"],[\"wed , apr 12 , 1972\", \"milwaukee bucks\", \"win\", \"135 - 134\", \"1 - 1\", \"won 1\"],[\"fri , apr 14 , 1972\", \"milwaukee bucks\", \"win\", \"108 - 105\", \"2 - 1\", \"won 2\"],[\"sun , apr 16 , 1972\", \"milwaukee bucks\", \"loss\", \"88 - 114\", \"2 - 2\", \"lost 1\"],[\"tue , apr 18 , 1972\", \"milwaukee bucks\", \"win\", \"115 - 90\", \"3 - 2\", \"won 1\"],[\"sat , apr 22 , 1972\", \"milwaukee bucks\", \"win\", \"104 - 100\", \"4 - 2\", \"won 2\"]]\nQuestion = Is it true that the milwaukee bucks had a 1 - 1 record with a score of 135 - 134 on wednesday , april 12 , 1972?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    scores = get_column_by_name(table_data, \"score\")\n    records = get_column_by_name(table_data, \"record\")\n    for date, opponent, score, record in zip(dates, opponents, scores, records):\n        if date.lower() == \"wed , apr 12 , 1972\" and opponent.lower() == \"milwaukee bucks\":\n            answer = equal_to(score, \"135 - 134\") and equal_to(record, \"1 - 1\")\n            break \n    return answer\n\n### END"}
{"id": "607fdb68-8d24-4ae9-8a5a-d3233e8e3b7d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = bmw m1 procar championship\ntable_data = [[\"round\", \"date\", \"event\", \"circuit\", \"winning driver\", \"winning team\"],[\"1\", \"may 12\", \"belgian grand prix\", \"circuit zolder\", \"elio de angelis\", \"squadra osella corse\"],[\"2\", \"may 26\", \"monaco grand prix\", \"circuit de monaco\", \"niki lauda\", \"project four\"],[\"-\", \"june 3\", \"gunnar nilsson trophy\", \"donington park\", \"nelson piquet\", \"bmw motorsport\"],[\"3\", \"june 30\", \"french grand prix\", \"dijon - prenois\", \"nelson piquet\", \"bmw motorsport\"],[\"4\", \"july 13\", \"british grand prix\", \"silverstone circuit\", \"niki lauda\", \"project four\"],[\"5\", \"july 28\", \"german grand prix\", \"hockenheimring\", \"niki lauda\", \"project four\"],[\"6\", \"august 11\", \"austrian grand prix\", \"österreichring\", \"jacques laffite\", \"bmw motorsport\"],[\"7\", \"august 25\", \"dutch grand prix\", \"circuit zandvoort\", \"hans - joachim stuck\", \"cassani racing\"],[\"8\", \"september 8\", \"italian grand prix\", \"autodromo nazionale monza\", \"hans - joachim stuck\", \"cassani racing\"]]\nQuestion = Is it true that project four was the winning team on july 13?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    winning_teams = get_column_by_name(table_data, \"winning team\")\n    answer = False\n    for date, winning_team in zip(dates, winning_teams):\n        if \"july 13\" in date.lower() and \"project four\" in winning_team.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "c5277343-88f5-428c-b888-d1b08cbc09b7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 football league one\ntable_data = [[\"team\",\"outgoing manager\",\"manner of departure\",\"date of vacancy\",\"replaced by\",\"date of appointment\",\"position in table\"],[\"milton keynes dons\",\"paul ince\",\"signed by blackburn rovers (mutual consent)\",\"22 june 2008\",\"roberto di matteo\",\"2 july 2008\",\"pre - season\"],[\"cheltenham town\",\"keith downing\",\"mutual consent\",\"13 september 2008\",\"martin allen\",\"15 september 2008\",\"24th\"],[\"colchester united\",\"geraint williams\",\"mutual consent\",\"22 september 2008\",\"paul lambert\",\"24 september 2008\",\"23rd\"],[\"carlisle united\",\"john ward\",\"mutual consent\",\"3 november 2008\",\"greg abbott\",\"5 december 2008\",\"20th\"],[\"huddersfield town\",\"stan ternent\",\"mutual consent\",\"4 november 2008\",\"lee clark\",\"11 december 2008\",\"16th\"],[\"swindon town\",\"maurice malpas\",\"mutual consent\",\"14 november 2008\",\"danny wilson\",\"26 december 2008\",\"16th\"],[\"crewe alexandra\",\"steve holland\",\"contract terminated\",\"18 november 2008\",\"guðjón þórðarson\",\"24 december 2008\",\"24th\"],[\"hartlepool united\",\"danny wilson\",\"contract terminated\",\"15 december 2008\",\"chris turner\",\"15 december 2008\",\"13th\"],[\"leeds united\",\"gary mcallister\",\"contract terminated\",\"21 december 2008\",\"simon grayson\",\"23 december 2008\",\"9th\"],[\"walsall\",\"jimmy mullen\",\"contract terminated\",\"10 january 2009\",\"chris hutchings\",\"20 january 2009\",\"12th\"],[\"leyton orient\",\"martin ling\",\"mutual consent\",\"18 january 2009\",\"geraint williams\",\"5 february 2009\",\"21st\"],[\"yeovil town\",\"russell slade\",\"contract terminated\",\"16 february 2009\",\"terry skiverton\",\"18 february 2009\",\"16th\"],[\"brighton & hove albion\",\"micky adams\",\"contract terminated\",\"21 february 2009\",\"russell slade\",\"6 march 2009\",\"21st\"]]\nQuestion = Is it true that keith downing left by mutual consent only one time?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef solution(table_data):\n    managers = get_column_by_name(table_data, \"outgoing manager\")\n    departures = get_column_by_name(table_data, \"manner of departure\")\n    keith_downing_departures = [departure for manager, departure in zip(managers, departures) if manager.lower() == \"keith downing\"]\n    answer = count_occurrences(\"mutual consent\", keith_downing_departures) == 1\n    return answer\n\n### END"}
{"id": "e1895b4c-e72f-44b7-8d98-17c6c23e213e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of australian football league pre - season and night series premiers\ntable_data = [[\"season\", \"premier\", \"runner up\", \"score\", \"venue\", \"attendance\", \"premiership\"],[\"1984\", \"essendon\", \"sydney swans\", \"13.11 (89) - 5.8 (38)\", \"waverley park\", \"30824\", \"night series\"],[\"1984\", \"essendon\", \"hawthorn\", \"14.21 (105) - 12.9 (81)\", \"mcg\", \"92685\", \"vfl grand final\"],[\"1986\", \"hawthorn\", \"carlton\", \"9.12 (66) - 5.6 (36)\", \"waverley park\", \"19627\", \"night series\"],[\"1986\", \"hawthorn\", \"carlton\", \"16.14 (110) - 9.14 (68)\", \"mcg\", \"101861\", \"vfl grand final\"],[\"1988\", \"hawthorn\", \"geelong\", \"10.10 (70) - 9.13 (67)\", \"waverley park\", \"35803\", \"pre - season cup\"],[\"1988\", \"hawthorn\", \"melbourne\", \"22.20 (152) - 6.20 (56)\", \"mcg\", \"93754\", \"vfl grand final\"],[\"1993\", \"essendon\", \"richmond\", \"14.18 (102) - 11.13 (79)\", \"waverley park\", \"75533\", \"pre - season cup\"],[\"1993\", \"essendon\", \"carlton carlton\", \"20.13 (133) - 13.11 (89)\", \"mcg\", \"96862\", \"afl grand final\"],[\"2000\", \"essendon\", \"north melbourne\", \"16.21 (117) - 11.10 (76)\", \"mcg\", \"56720\", \"pre - season cup\"],[\"2000\", \"essendon\", \"melbourne\", \"19.21 (135) - 11.9 (75)\", \"mcg\", \"96249\", \"afl grand final\"],[\"2009\", \"geelong\", \"collingwood\", \"0.18.19 (127) - 1.6.6 (51)\", \"etihad stadium\", \"37277\", \"pre - season cup\"]]\nQuestion = Is it true that in 1984 , essendon was the premier at waverley park with an attendance of 30824?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    premiers = get_column_by_name(table_data, \"premier\")\n    venues = get_column_by_name(table_data, \"venue\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    answer = False\n    for season, premier, venue, attendance in zip(seasons, premiers, venues, attendances):\n        if season == \"1984\" and premier.lower() == \"essendon\" and venue.lower() == \"waverley park\" and attendance == \"30824\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "9e1034e9-2e92-40c7-bcd6-3a74228d0f57", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"\", \"date\", \"vs\", \"opponent\", \"score\", \"attendance\", \"record\"],[\"1\", \"january 5 , 1991\", \"at\", \"detroit turbos\", \"8 - 18\", \"6847\", \"loss\"],[\"2\", \"january 11 , 1991\", \"vs\", \"new england blazers\", \"11 - 10\", \"14789\", \"win\"],[\"3\", \"january 19 , 1991\", \"at\", \"new york saints\", \"13 - 19\", \"9081\", \"loss\"],[\"4\", \"january 26 , 1991\", \"vs\", \"new york saints\", \"13 - 8\", \"16282\", \"win\"],[\"5\", \"february 10 , 1991\", \"vs\", \"detroit turbos\", \"12 - 14\", \"16642\", \"loss\"],[\"6\", \"february 22 , 1991\", \"at\", \"new england blazers\", \"11 - 13\", \"7095\", \"loss\"],[\"7\", \"february 28 , 1991\", \"vs\", \"pittsburgh bulls\", \"11 - 9\", \"13712\", \"win\"],[\"8\", \"march 9 , 1991\", \"at\", \"pittsburgh bulls\", \"15 - 7\", \"8589\", \"win\"],[\"9\", \"march 17 , 1991\", \"vs\", \"baltimore thunder\", \"14 - 17\", \"16289\", \"loss\"]]\nQuestion = Is it true that the detroit turbos was the opponent and the attendance was 16642?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    for opponent, attendance in zip(opponents, attendances):\n        if opponent.lower() == \"detroit turbos\" and equal_to(attendance, \"16642\"):\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "83048f35-896c-4ca5-9fb5-345f52375a1e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of radio stations in tamaulipas\ntable_data = [[\"frequency\", \"callsign\", \"brand\", \"city of license\", \"type\"],[\"580\", \"xehp\", \"la mas prendida\", \"ciudad victoria\", \"norteño\"],[\"640\", \"xetam\", \"la poderosa\", \"santa elena\", \"norteño\"],[\"970\", \"xebj - am\", \"radio 970\", \"ciudad victoria\", \"contemporary\"],[\"1340\", \"xerpv - am\", \"la cotorra\", \"ciudad victoria\", \"norteño\"],[\"1380\", \"xegw\", \"planeta w 1380\", \"ciudad victoria\", \"christian pop\"],[\"1480\", \"xevic\", \"radio tamaulipas\", \"ciudad victoria\", \"state government\"]]\nQuestion = Is it true that ciudad victoria is the city of license when the frequency is greater than 1380?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    cities = get_column_by_name(table_data, \"city of license\")\n    answer = False\n    for frequency, city in zip(frequencies, cities):\n        if greater(int(frequency), 1380) and city.lower() == \"ciudad victoria\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "b5f49526-2cec-4087-ab32-7204427243d2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"class\", \"part 1\", \"part 2\", \"part 3\", \"part 4\", \"verb meaning\"],[\"1\", \"rīdan\", \"rād\", \"ridon\", \"riden\", \"to ride\"],[\"2a\", \"frēosan\", \"frēas\", \"fruron\", \"froren\", \"to freeze\"],[\"2b\", \"lūcan\", \"lēac\", \"lucon\", \"locen\", \"to lock\"],[\"3a\", \"bindan\", \"band\", \"bundon\", \"bunden\", \"to bind\"],[\"3b\", \"weorþan\", \"wearþ\", \"wurdon\", \"worden\", \"to become\"],[\"4\", \"beran\", \"bær\", \"bǣron\", \"boren\", \"to bear\"],[\"5\", \"lesan\", \"læs\", \"lǣron\", \"leren\", \"to gather\"],[\"6\", \"alan\", \"ōl\", \"ōlon\", \"alen\", \"to nourish , to grow\"],[\"7a\", \"hātan\", \"hēt\", \"hēton\", \"hāten\", \"to call , to be called\"],[\"7b\", \"hlēapan\", \"hlēop\", \"hlēppon\", \"hlēapen\", \"to leap\"],[\"7c\", \"healdan\", \"hēold\", \"hēoldon\", \"healden\", \"to hold\"],[\"7d\", \"rǣdan\", \"rēd\", \"rēdon\", \"rǣden\", \"to advise , to interpret\"]]\nQuestion = Is it true that class 2b verbs , meaning to lock , have lucon as their third part?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    classes = get_column_by_name(table_data, \"class\")\n    part_3s = get_column_by_name(table_data, \"part 3\")\n    verb_meanings = get_column_by_name(table_data, \"verb meaning\")\n    for class_, part_3, verb_meaning in zip(classes, part_3s, verb_meanings):\n        if class_.lower() == \"2b\" and verb_meaning.lower() == \"to lock\":\n            answer = equal_to(part_3, \"lucon\")\n            break \n    return answer\n\n### END"}
{"id": "d35c20d2-db0d-47ea-b535-59965edd834f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = usa today all - usa high school baseball team\ntable_data = [[\"player\", \"position\", \"school\", \"hometown\", \"mlb draft\"],[\"delmon young\", \"outfielder\", \"camarillo high school\", \"camarillo , ca\", \"1st round - 1st pick of 2003 draft ( devil rays )\"],[\"chris lubanski\", \"outfielder\", \"kennedy - kenrick catholic high school\", \"norristown , pa\", \"1st round - 5th pick of 2003 draft ( royals )\"],[\"lastings milledge\", \"outfielder\", \"lakewood ranch high school\", \"bradenton , fl\", \"1st round - 12th pick of 2003 draft ( mets )\"],[\"brandon wood\", \"infielder\", \"horizon high school\", \"scottsdale , az\", \"1st round - 23rd pick of 2003 draft ( angels )\"],[\"john danks\", \"pitcher\", \"round rock high school\", \"round rock , tx\", \"1st round - 9th pick of 2003 draft ( rangers )\"],[\"jonathan fulton\", \"infielder\", \"george washington high school\", \"danville , va\", \"3rd round - 83rd pick of 2003 draft ( marlins )\"],[\"ian stewart\", \"infielder\", \"la quinta high school\", \"westminster , ca\", \"1st round - 10th pick of 2003 draft ( rockies )\"],[\"jeff allison\", \"pitcher\", \"veterans memorial high school\", \"peabody , ma\", \"1st round - 16th pick of 2003 draft ( marlins )\"],[\"daric barton\", \"catcher\", \"marina high school\", \"huntington beach , ca\", \"1st round - 28th pick of 2003 draft ( cardinals )\"],[\"eric duncan\", \"infielder\", \"seton hall preparatory school\", \"west orange , nj\", \"1st round - 27th pick of 2003 draft ( yankees )\"]]\nQuestion = Is it true that the person who attended camarillo high school is from camarillo , ca?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    schools = get_column_by_name(table_data, \"school\")\n    hometowns = get_column_by_name(table_data, \"hometown\")\n    answer = False\n    for school, hometown in zip(schools, hometowns):\n        if \"camarillo high school\" in school.lower():\n            if \"camarillo , ca\" in hometown.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "240f839f-0785-4d99-9753-d2b0d4044580", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 veikkausliiga\ntable_data = [[\"club\", \"location\", \"stadium\", \"capacity\", \"manager\", \"kitmaker\"],[\"ac oulu\", \"oulu\", \"castrén\", \"4000\", \"juha malinen\", \"umbro\"],[\"fc honka\", \"espoo\", \"tapiolan urheilupuisto\", \"6000\", \"mika lehkosuo\", \"kappa\"],[\"fc inter\", \"turku\", \"veritas stadion\", \"9372\", \"job dragtsma\", \"nike\"],[\"fc lahti\", \"lahti\", \"lahden stadion\", \"15000\", \"ilkka mäkelä\", \"umbro\"],[\"ff jaro\", \"jakobstad\", \"jakobstads centralplan\", \"5000\", \"alexei eremenko sr\", \"errea\"],[\"haka\", \"valkeakoski\", \"tehtaan kenttä\", \"3516\", \"sami ristilä\", \"umbro\"],[\"hjk\", \"helsinki\", \"sonera stadium\", \"10770\", \"antti muurinen\", \"adidas\"],[\"ifk mariehamn\", \"mariehamn\", \"wiklöf holding arena\", \"4000\", \"pekka lyyski\", \"puma\"],[\"jjk\", \"jyväskylä\", \"harjun stadion\", \"3000\", \"kari martonen\", \"legea\"],[\"kups\", \"kuopio\", \"kuopion keskuskenttä\", \"5000\", \"esa pekonen\", \"puma\"],[\"mypa\", \"anjalankoski\", \"saviniemi\", \"4167\", \"janne lindberg\", \"puma\"],[\"tampere united\", \"tampere\", \"ratina stadion\", \"17000\", \"ari hjelm\", \"puma\"],[\"tps\", \"turku\", \"veritas stadion\", \"9372\", \"marko rajamäki\", \"puma\"]]\nQuestion = Is it true that marko rajamäki is the manager for the tps club in turku , whose kitmaker is puma?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    clubs = get_column_by_name(table_data, \"club\")\n    locations = get_column_by_name(table_data, \"location\")\n    managers = get_column_by_name(table_data, \"manager\")\n    kitmakers = get_column_by_name(table_data, \"kitmaker\")\n    answer = False\n    for club, location, manager, kitmaker in zip(clubs, locations, managers, kitmakers):\n        if club.lower() == \"tps\" and location.lower() == \"turku\" and manager.lower() == \"marko rajamäki\" and kitmaker.lower() == \"puma\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "b259c320-8e30-4daa-8380-2d0e1bb9a739", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = daniel gimeno - traver\ntable_data = [[\"date\", \"tournament\", \"surface\", \"opponent\", \"score\"],[\"5 september 2005\", \"brasov\", \"clay\", \"daniel elsner\", \"5 - 7 , 2 - 6\"],[\"5 november 2007\", \"guayaquil\", \"clay\", \"nicolás lapentti\", \"3 - 6 , 7 - 6 (6) , 5 - 7\"],[\"10 march 2008\", \"tanger\", \"clay\", \"marcel granollers\", \"4 - 6 , 4 - 6\"],[\"15 september 2008\", \"banja luka\", \"clay\", \"ilija bozoljac\", \"4 - 6 , 4 - 6\"],[\"12 october 2009\", \"asunción\", \"clay\", \"ramón delgado\", \"6 - 7 (2 - 7) , 6 - 1 , 3 - 6\"],[\"5 july 2010\", \"san benedetto\", \"clay\", \"carlos berlocq\", \"3 - 6 , 6 - 4 , 4 - 6\"],[\"2 october 2011\", \"madrid\", \"clay\", \"jérémy chardy\", \"1 - 6 , 7 - 5 , 6 - 7 (3 - 7)\"],[\"12 august 2012\", \"cordenos\", \"clay\", \"paolo lorenzi\", \"6 - 7 (5 - 7) , 3 - 6\"]]\nQuestion = Is it true that opponent daniel elsner played at the brasov tournament?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    tournaments = get_column_by_name(table_data, \"tournament\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    answer = False\n    for tournament, opponent in zip(tournaments, opponents):\n        if \"brasov\" in tournament.lower() and \"daniel elsner\" in opponent.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "4d4f3161-5a18-44e7-bc89-0dacc0896861", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"census year\", \"number of muslims 000\", \"population of england and wales 000\", \"muslim (% of total population)\", \"registered mosques\", \"muslims per mosque\"],[\"1961\", \"50\", \"46196\", \"0.11\", \"7\", \"7143\"],[\"1971\", \"226\", \"49152\", \"0.46\", \"30\", \"7533\"],[\"1981\", \"553\", \"49634\", \"1.11\", \"149\", \"3711\"],[\"1991\", \"950\", \"51099\", \"1.86\", \"443\", \"2144\"],[\"2001\", \"1600\", \"52042\", \"3.07\", \"614\", \"2606\"]]\nQuestion = Is it true that the number of registered mosques in the census year before the 1971 census year is 30?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    census_years = get_column_by_name(table_data, \"census year\")\n    mosques = get_column_by_name(table_data, \"registered mosques\")\n    for year, mosque in zip(census_years, mosques):\n        if int(year) < 1971:\n            answer = equal_to(int(mosque), 30)\n            break\n    return answer\n\n### END"}
{"id": "275255b2-4743-4108-a3b1-9c9bf73da6af", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = comparison of e - book formats\ntable_data = [[\"format\", \"filename extension\", \"image support\", \"interactivity support\", \"word wrap support\", \"open standard\"],[\"djvu\", \"djvu\", \"yes\", \"no\", \"no\", \"yes\"],[\"epub (idpf)\", \"epub\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"fictionbook\", \"fb2\", \"yes\", \"no\", \"yes\", \"yes\"],[\"html\", \"html\", \"yes\", \"no\", \"yes\", \"yes\"],[\"kindle\", \"azw\", \"yes\", \"yes\", \"yes\", \"no\"],[\"microsoft reader\", \"lit\", \"yes\", \"no\", \"yes\", \"no\"],[\"mobipocket\", \"prc , mobi\", \"yes\", \"yes\", \"yes\", \"no\"],[\"multimedia ebook\", \"exe\", \"yes\", \"yes\", \"no\", \"yes\"],[\"newton book\", \"pkg\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ereader\", \"pdb\", \"yes\", \"no\", \"yes\", \"no\"],[\"plain text\", \"txt\", \"no\", \"no\", \"yes\", \"yes\"],[\"plucker\", \"pdb\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"portable document format\", \"pdf\", \"yes\", \"yes\", \"yes though not all readers implement support\", \"yes\"],[\"postscript\", \"ps\", \"yes\", \"no\", \"no\", \"yes\"],[\"tome raider\", \"tr2 , tr3\", \"yes\", \"no\", \"yes\", \"no\"],[\"openxps\", \"oxps , xps\", \"yes\", \"no\", \"no\", \"yes\"]]\nQuestion = Is it true that fictionbook / html format both have an interactivity support and a word wrap support?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    formats = get_column_by_name(table_data, \"format\")\n    interactivity_supports = get_column_by_name(table_data, \"interactivity support\")\n    word_wrap_supports = get_column_by_name(table_data, \"word wrap support\")\n    for format, interactivity_support, word_wrap_support in zip(formats, interactivity_supports, word_wrap_supports):\n        if format.lower() in [\"fictionbook\", \"html\"]:\n            if interactivity_support.lower() == \"yes\" and word_wrap_support.lower() == \"yes\":\n                return True\n    return False\n\n### END"}
{"id": "ab65b6bc-99c4-491c-864a-683283e7528e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mike hailwood\ntable_data = [[\"year\", \"entrant\", \"chassis\", \"engine\", \"pts\"],[\"1963\", \"reg parnell racing\", \"lotus 24\", \"climax\", \"0\"],[\"1963\", \"reg parnell racing\", \"lola mk4\", \"climax\", \"0\"],[\"1964\", \"reg parnell racing\", \"lotus 25\", \"brm\", \"1\"],[\"1965\", \"reg parnell racing\", \"lotus 25\", \"brm\", \"0\"],[\"1971\", \"team surtees\", \"surtees ts9\", \"ford\", \"3\"],[\"1972\", \"brooke bond oxo team surtees\", \"surtees ts9b\", \"ford\", \"13\"],[\"1973\", \"brooke bond oxo team surtees\", \"surtees ts14a\", \"ford\", \"0\"],[\"1974\", \"yardley team mclaren\", \"mclaren m23\", \"ford\", \"12\"]]\nQuestion = Is it true that 1972.0 year had 12 points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    points = get_column_by_name(table_data, \"pts\")\n    for year, point in zip(years, points):\n        if year == \"1972\":\n            answer = equal_to(point, \"12\")\n            break \n    return answer\n\n### END"}
{"id": "63d5df3f-986c-46ea-a33c-2f865a0a7f05", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1967 - 68 new york rangers season\ntable_data = [[\"game\", \"october\", \"opponent\", \"score\", \"record\"],[\"1\", \"11\", \"chicago black hawks\", \"6 - 3\", \"1 - 0 - 0\"],[\"2\", \"15\", \"detroit red wings\", \"3 - 2\", \"1 - 1 - 0\"],[\"3\", \"18\", \"montreal canadiens\", \"2 - 2\", \"1 - 1 - 1\"],[\"4\", \"21\", \"toronto maple leafs\", \"5 - 3\", \"2 - 1 - 1\"],[\"5\", \"22\", \"pittsburgh penguins\", \"6 - 4\", \"3 - 1 - 1\"],[\"6\", \"25\", \"chicago black hawks\", \"2 - 2\", \"3 - 1 - 2\"],[\"7\", \"26\", \"montreal canadiens\", \"1 - 1\", \"3 - 1 - 3\"],[\"8\", \"29\", \"toronto maple leafs\", \"3 - 2\", \"4 - 1 - 3\"],[\"9\", \"31\", \"los angeles kings\", \"6 - 1\", \"5 - 1 - 3\"]]\nQuestion = Is it true that toronto maple leafs was the opponent on october 29 in game 8?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    games = get_column_by_name(table_data, \"game\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    for game, opponent in zip(games, opponents):\n        if game == \"8\":\n            answer = equal_to(opponent, \"toronto maple leafs\")\n            break \n    return answer\n\n### END"}
{"id": "5ded72af-f53b-4b6e-9391-9073546dbc3d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = toronto and nipissing railway\ntable_data = [[\"number\",\"builder\",\"type\",\"date\",\"works number\"],[\"1\",\"avonside engine company\",\"4 - 4 - 0\",\"september 1870\",\"808\"],[\"2\",\"canadian engine & machinery company\",\"4 - 4 - 0\",\"november 1870\",\"83\"],[\"3\",\"canadian engine & machinery company\",\"4 - 4 - 0\",\"december 1870\",\"84\"],[\"4\",\"canadian engine & machinery company\",\"4 - 4 - 0\",\"early 1871\",\"85\"],[\"5\",\"canadian engine & machinery company\",\"4 - 4 - 0\",\"march 1871\",\"86\"],[\"6\",\"canadian engine & machinery company\",\"4 - 4 - 0\",\"may 1871\",\"87\"],[\"7\",\"canadian engine & machinery company\",\"4 - 4 - 0\",\"may 1871\",\"88\"],[\"8\",\"avonside engine company\",\"4 - 6 - 0\",\"december 1871\",\"867\"],[\"9\",\"avonside engine company\",\"0 - 6 - 6 - 0 fairlie\",\"december 1871\",\"864 & 865\"],[\"10\",\"avonside engine company\",\"4 - 6 - 0\",\"early 1873\",\"uncertain but probably one of 931 - 934\"],[\"11\",\"avonside engine company\",\"4 - 6 - 0\",\"1872\",\"uncertain but probably one of 935 - 939\"],[\"12\",\"avonside engine company\",\"4 - 6 - 0\",\"early 1873\",\"uncertain but probably one of 935 - 939\"]]\nQuestion = Is it true that works number 867 had a builder of avonside engine company , and a type of 0 - 6 - 6 - 0 , and a number smaller than 12 , and a date of december 1871?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef smaller_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    numbers = get_column_by_name(table_data, \"number\")\n    builders = get_column_by_name(table_data, \"builder\")\n    types = get_column_by_name(table_data, \"type\")\n    dates = get_column_by_name(table_data, \"date\")\n    works_numbers = get_column_by_name(table_data, \"works number\")\n    for number, builder, type, date, works_number in zip(numbers, builders, types, dates, works_numbers):\n        if equal_to(works_number, \"867\") and equal_to(builder, \"avonside engine company\") and equal_to(type, \"0 - 6 - 6 - 0\") and smaller_than(int(number), 12) and equal_to(date, \"december 1871\"):\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "f1394f8f-e0e8-4ae6-970f-d2d054d28efa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"episode\", \"broadcast date\", \"run time\", \"viewers (in millions)\", \"archive\"],[\"episode 1\", \"21 march 1970\", \"24:33\", \"7.1\", \"pal 2 colour videotape\"],[\"episode 2\", \"28 march 1970\", \"24:39\", \"7.6\", \"chroma dot colour recovery\"],[\"episode 3\", \"4 april 1970\", \"24:38\", \"8.0\", \"chroma dot colour recovery\"],[\"episode 4\", \"11 april 1970\", \"24:37\", \"9.3\", \"chroma dot colour recovery\"],[\"episode 5\", \"18 april 1970\", \"24:17\", \"7.1\", \"pal d3 colour restoration\"],[\"episode 6\", \"25 april 1970\", \"24:31\", \"6.9\", \"chroma dot colour recovery\"],[\"episode 7\", \"2 may 1970\", \"24:32\", \"6.4\", \"chroma dot colour recovery\"]]\nQuestion = Is it true that 7.6 million viewers tuned in on april 4th , 1970?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    broadcast_dates = get_column_by_name(table_data, \"broadcast date\")\n    viewers = get_column_by_name(table_data, \"viewers (in millions)\")\n    for date, viewer in zip(broadcast_dates, viewers):\n        if \"4 april 1970\" in date.lower():\n            answer = equal_to(viewer, \"7.6\")\n            break \n    return answer\n\n### END"}
{"id": "ee80ee89-bb7c-4821-a99c-58758619d31a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1965 american football league draft\ntable_data = [[\"pick\", \"team\", \"player\", \"position\", \"college\"],[\"9\", \"denver broncos\", \"dick butkus\", \"linebacker\", \"illinois\"],[\"10\", \"houston oilers\", \"malcolm walker\", \"center\", \"rice\"],[\"11\", \"oakland raiders\", \"fred biletnikoff\", \"wide receiver\", \"florida state\"],[\"12\", \"new york jets\", \"john huarte\", \"quarterback\", \"notre dame\"],[\"13\", \"kansas city chiefs\", \"jack chapple\", \"linebacker\", \"stanford\"],[\"14\", \"san diego chargers\", \"roy jefferson\", \"linebacker\", \"utah\"],[\"15\", \"houston oilers (from boston patriots)\", \"ralph neely\", \"tackle\", \"oklahoma\"],[\"16\", \"kansas city chiefs (from buffalo bills)\", \"ronnie caveness\", \"linebacker\", \"arkansas\"]]\nQuestion = Is it true that the new york jets quarterback was from notre dame?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    positions = get_column_by_name(table_data, \"position\")\n    colleges = get_column_by_name(table_data, \"college\")\n    for team, position, college in zip(teams, positions, colleges):\n        if team.lower() == \"new york jets\" and position.lower() == \"quarterback\":\n            answer = college.lower() == \"notre dame\"\n            break \n    return answer\n\n### END"}
{"id": "34686ca9-5f2c-45a1-b759-3eccec36bea5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1996 - 97 european challenge cup\ntable_data = [[\"team\", \"tries for\", \"tries against\", \"try diff\", \"points for\", \"points against\", \"points diff\"],[\"bourgoin\", \"27\", \"4\", \"+ 23\", \"196\", \"66\", \"+ 130\"],[\"bordeaux - bègles\", \"29\", \"13\", \"+ 16\", \"195\", \"99\", \"+ 96\"],[\"swansea\", \"28\", \"19\", \"+ 9\", \"207\", \"138\", \"+ 69\"],[\"gloucester\", \"17\", \"17\", \"0\", \"119\", \"123\", \"4\"],[\"ebbw vale\", \"6\", \"36\", \"30\", \"48\", \"243\", \"195\"],[\"london irish\", \"12\", \"30\", \"18\", \"90\", \"186\", \"96\"]]\nQuestion = Is it true that gloucester had a total of 123 points against?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    points_against = get_column_by_name(table_data, \"points against\")\n    for team, points in zip(teams, points_against):\n        if team.lower() == \"gloucester\":\n            answer = equal_to(points, \"123\")\n            break \n    return answer\n\n### END"}
{"id": "4864b890-0a97-4644-a849-2d42f0d17731", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = strikeout\ntable_data = [[\"pitcher\", \"strikeouts\", \"season\", \"team\", \"league\", \"overall rank\"],[\"matt kilroy\", \"513\", \"1886\", \"baltimore orioles\", \"aa\", \"1\"],[\"toad ramsey\", \"499\", \"1886\", \"louisville colonels\", \"aa\", \"2\"],[\"dupee shaw\", \"451\", \"1884\", \"detroit wolverines / boston reds\", \"nl / ua\", \"4\"],[\"old hoss radbourn\", \"441\", \"1884\", \"providence grays\", \"nl\", \"5\"],[\"charlie buffington\", \"417\", \"1884\", \"boston beaneaters\", \"nl\", \"6\"],[\"guy hecker\", \"385\", \"1884\", \"louisville eclipse\", \"aa\", \"7\"],[\"nolan ryan\", \"383\", \"1973\", \"california angels\", \"al\", \"8\"],[\"sandy koufax\", \"382\", \"1965\", \"los angeles dodgers\", \"nl\", \"9\"]]\nQuestion = Is it true that matt kilroy had the most strikeouts in 1886 for the baltimore orioles?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    pitchers = get_column_by_name(table_data, \"pitcher\")\n    seasons = get_column_by_name(table_data, \"season\")\n    teams = get_column_by_name(table_data, \"team\")\n    for pitcher, season, team in zip(pitchers, seasons, teams):\n        if pitcher.lower() == \"matt kilroy\" and season == \"1886\" and team.lower() == \"baltimore orioles\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "2c91bb55-c5f3-4243-8f58-21c89993f95b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 top 14 season\ntable_data = [[\"club\", \"played\", \"drawn\", \"lost\", \"points for\", \"points against\", \"bonus points\", \"points\"],[\"clermont\", \"26\", \"0\", \"6\", \"773\", \"380\", \"16\", \"96\"],[\"toulouse\", \"26\", \"0\", \"7\", \"723\", \"394\", \"15\", \"91\"],[\"stade franã§ais\", \"26\", \"0\", \"8\", \"617\", \"417\", \"8\", \"80\"],[\"perpignan\", \"26\", \"2\", \"7\", \"531\", \"392\", \"7\", \"79\"],[\"castres\", \"26\", \"0\", \"11\", \"564\", \"524\", \"9\", \"69\"],[\"biarritz\", \"26\", \"1\", \"12\", \"385\", \"339\", \"12\", \"66\"],[\"montauban\", \"26\", \"0\", \"13\", \"420\", \"446\", \"11\", \"63\"],[\"montpellier\", \"26\", \"0\", \"12\", \"426\", \"490\", \"5\", \"61\"],[\"bayonne\", \"26\", \"1\", \"14\", \"457\", \"535\", \"8\", \"54\"],[\"bourgoin\", \"26\", \"2\", \"14\", \"453\", \"526\", \"8\", \"52\"],[\"brive\", \"26\", \"0\", \"16\", \"425\", \"514\", \"11\", \"51\"],[\"albi\", \"26\", \"1\", \"16\", \"415\", \"549\", \"10\", \"48\"],[\"dax\", \"26\", \"1\", \"19\", \"314\", \"645\", \"8\", \"34\"],[\"auch\", \"26\", \"0\", \"23\", \"336\", \"688\", \"7\", \"19\"]]\nQuestion = Is it true that the castres have 565 points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    clubs = get_column_by_name(table_data, \"club\")\n    points_for = get_column_by_name(table_data, \"points for\")\n    for club, points in zip(clubs, points_for):\n        if club.lower() == \"castres\":\n            answer = equal_to(int(points), 565)\n            break \n    return answer\n\n### END"}
{"id": "951b7c19-6959-4f94-a3dd-e575ad4eb3d7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1984 u.s. open (golf)\ntable_data = [[\"place\", \"player\", \"country\", \"score\", \"to par\"],[\"1\", \"hale irwin\", \"united states\", \"68 + 68 = 136\", \"- 4\"],[\"2\", \"fuzzy zoeller\", \"united states\", \"71 + 66 = 137\", \"-- 3\"],[\"t3\", \"david canipe\", \"united states\", \"69 + 69 = 138\", \"- 2\"],[\"t3\", \"greg norman\", \"australia\", \"70 + 68 = 138\", \"- 2\"],[\"t5\", \"curtis strange\", \"united states\", \"70 + 69 = 139\", \"- 1\"],[\"t5\", \"jim thorpe\", \"united states\", \"68 + 71 = 139\", \"- 1\"],[\"7\", \"fred couples\", \"united states\", \"69 + 71 = 140\", \"e\"],[\"t8\", \"andy bean\", \"united states\", \"70 + 71 = 141\", \"+ 1\"],[\"t8\", \"jay sigel (a)\", \"united states\", \"69 + 72 = 141\", \"+ 1\"],[\"t10\", \"isao aoki\", \"japan\", \"72 + 70 = 142\", \"+ 2\"],[\"t10\", \"seve ballesteros\", \"spain\", \"69 + 73 = 142\", \"+ 2\"],[\"t10\", \"johnny miller\", \"united states\", \"74 + 68 = 142\", \"+ 2\"],[\"t10\", \"jack nicklaus\", \"united states\", \"71 + 71 = 142\", \"+ 2\"],[\"t10\", \"mike reid\", \"united states\", \"70 + 72 = 142\", \"+ 2\"]]\nQuestion = Is it true that the country with a score of 69 - 71 - 140 is the japan?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    countries = get_column_by_name(table_data, \"country\")\n    scores = get_column_by_name(table_data, \"score\")\n    for country, score in zip(countries, scores):\n        if equal_to(score, \"69 + 71 = 140\"):\n            answer = equal_to(country.lower(), \"japan\")\n            break \n    return answer\n\n### END"}
{"id": "e60b6471-afe2-4a8d-a23b-b8da52db7ead", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 veikkausliiga\ntable_data = [[\"club\",\"location\",\"stadium\",\"capacity\",\"manager\",\"kitmaker\"],[\"ac oulu\",\"oulu\",\"castrén\",\"4000\",\"juha malinen\",\"umbro\"],[\"fc honka\",\"espoo\",\"tapiolan urheilupuisto\",\"6000\",\"mika lehkosuo\",\"kappa\"],[\"fc inter\",\"turku\",\"veritas stadion\",\"9372\",\"job dragtsma\",\"nike\"],[\"fc lahti\",\"lahti\",\"lahden stadion\",\"15000\",\"ilkka mäkelä\",\"umbro\"],[\"ff jaro\",\"jakobstad\",\"jakobstads centralplan\",\"5000\",\"alexei eremenko sr\",\"errea\"],[\"haka\",\"valkeakoski\",\"tehtaan kenttä\",\"3516\",\"sami ristilä\",\"umbro\"],[\"hjk\",\"helsinki\",\"sonera stadium\",\"10770\",\"antti muurinen\",\"adidas\"],[\"ifk mariehamn\",\"mariehamn\",\"wiklöf holding arena\",\"4000\",\"pekka lyyski\",\"puma\"],[\"jjk\",\"jyväskylä\",\"harjun stadion\",\"3000\",\"kari martonen\",\"legea\"],[\"kups\",\"kuopio\",\"kuopion keskuskenttä\",\"5000\",\"esa pekonen\",\"puma\"],[\"mypa\",\"anjalankoski\",\"saviniemi\",\"4167\",\"janne lindberg\",\"puma\"],[\"tampere united\",\"tampere\",\"ratina stadion\",\"17000\",\"ari hjelm\",\"puma\"],[\"tps\",\"turku\",\"veritas stadion\",\"9372\",\"marko rajamäki\",\"puma\"]]\nQuestion = Is it true that the capacity of jakobstads centralplan , where ff jaro rule , is 5000?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    clubs = get_column_by_name(table_data, \"club\")\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    capacities = get_column_by_name(table_data, \"capacity\")\n    for club, stadium, capacity in zip(clubs, stadiums, capacities):\n        if club.lower() == \"ff jaro\" and stadium.lower() == \"jakobstads centralplan\":\n            answer = equal_to(capacity, \"5000\")\n            break \n    return answer\n\n### END"}
{"id": "3e04738b-d0db-46e3-8958-54e5a57e38bc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = history of test cricket from 1901 to 1914\ntable_data = [[\"date\", \"home captain\", \"away captain\", \"venue\", \"result\"],[\"15 , 16 , 18 , 19 , 20 , 21 dec 1911\", \"clem hill\", \"johnny douglas\", \"sydney cricket ground\", \"aus by 146 runs\"],[\"30 dec , 1 , 2 , 3 jan 1911 / 2\", \"clem hill\", \"johnny douglas\", \"melbourne cricket ground\", \"eng by 8 wkts\"],[\"12 , 13 , 15 , 16 , 17 jan 1912\", \"clem hill\", \"johnny douglas\", \"adelaide oval\", \"eng by 7 wkts\"],[\"9 , 10 , 12 , 13 feb 1912\", \"clem hill\", \"johnny douglas\", \"melbourne cricket ground\", \"eng by inns&225 runs\"],[\"23 , 24 , 26 , 27 , 28 , 29 feb , 1 mar 1912\", \"clem hill\", \"johnny douglas\", \"sydney cricket ground\", \"eng by 70 runs\"]]\nQuestion = Is it true that johnny douglas was the away captain from december 30th , 1911 - january 3rd , 1912?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    away_captains = get_column_by_name(table_data, \"away captain\")\n    for date, away_captain in zip(dates, away_captains):\n        if \"30 dec , 1 , 2 , 3 jan 1911 / 2\" in date.lower():\n            answer = equal_to(away_captain, \"johnny douglas\")\n            break \n    return answer\n\n### END"}
{"id": "baccd02a-932c-4c05-8c7c-c878608bd66d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 uci track cycling world cup classics\ntable_data = [[\"rank\", \"team\", \"round1\", \"round2\", \"round3\", \"round4\", \"round5\", \"total points\"],[\"1\", \"germany\", \"92\", \"56\", \"62\", \"52\", \"74\", \"336\"],[\"2\", \"netherlands\", \"41\", \"60\", \"17\", \"72\", \"99\", \"289\"],[\"3\", \"great britain\", \"133\", \"36\", \"15\", \"32\", \"57\", \"273\"],[\"4\", \"france\", \"24\", \"25\", \"65\", \"64\", \"71\", \"249\"],[\"5\", \"spain\", \"49\", \"66\", \"78\", \"17\", \"31\", \"241\"],[\"6\", \"china\", \"41\", \"38\", \"23\", \"108\", \"31\", \"241\"],[\"7\", \"team toshiba\", \"12\", \"98\", \"38\", \"29\", \"35\", \"212\"],[\"8\", \"russia\", \"45\", \"55\", \"51\", \"37\", \"11\", \"199\"],[\"9\", \"ukraine\", \"51\", \"67\", \"22\", \"30\", \"24\", \"194\"]]\nQuestion = Is it true that great britain 's round 2 score was 133?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    round2_scores = get_column_by_name(table_data, \"round2\")\n    for team, round2_score in zip(teams, round2_scores):\n        if team.lower() == \"great britain\":\n            answer = equal_to(round2_score, \"133\")\n            break \n    return answer\n\n### END"}
{"id": "1b5a7151-debf-45ec-8b7a-beb6fff4eaf8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"population (region total)\", \"population (stanthorpe)\", \"population (warwick)\", \"population (allora)\", \"population (glengallan)\", \"population (rosenthal)\"],[\"1933\", \"25016\", \"6934\", \"6664\", \"2624\", \"6334\", \"2460\"],[\"1947\", \"24009\", \"7419\", \"7129\", \"2217\", \"5269\", \"1975\"],[\"1954\", \"25862\", \"8335\", \"9151\", \"2106\", \"4639\", \"1631\"],[\"1961\", \"26288\", \"8514\", \"9843\", \"1961\", \"4388\", \"1582\"],[\"1966\", \"25917\", \"8503\", \"10065\", \"1890\", \"3906\", \"1553\"],[\"1971\", \"24115\", \"8189\", \"9303\", \"1719\", \"3410\", \"1494\"],[\"1976\", \"24583\", \"8709\", \"9169\", \"1666\", \"3491\", \"1548\"],[\"1981\", \"24300\", \"8576\", \"8853\", \"1679\", \"3611\", \"1581\"],[\"1986\", \"26270\", \"9143\", \"9435\", \"2041\", \"3688\", \"1963\"],[\"1991\", \"28288\", \"9556\", \"10393\", \"2132\", \"3966\", \"2241\"],[\"1996\", \"29563\", \"9596\", \"10896\", \"2234\", \"3990\", \"2742\"],[\"2001\", \"30554\", \"9860\", \"10956\", \"2439\", \"4088\", \"3129\"]]\nQuestion = Is it true that in 1976 , rosenthal had a population of 1548 , and stanthorpe had a population of 8709?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    stanthorpe_populations = get_column_by_name(table_data, \"population (stanthorpe)\")\n    rosenthal_populations = get_column_by_name(table_data, \"population (rosenthal)\")\n    for year, stanthorpe_population, rosenthal_population in zip(years, stanthorpe_populations, rosenthal_populations):\n        if year == \"1976\":\n            answer = equal_to(stanthorpe_population, \"8709\") and equal_to(rosenthal_population, \"1548\")\n            break \n    return answer\n\n### END"}
{"id": "c248797d-1cbc-4f76-a01e-61795930b91b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"class\", \"part 1\", \"part 2\", \"part 3\", \"part 4\", \"verb meaning\"],[\"1\", \"rīdan\", \"rād\", \"ridon\", \"riden\", \"to ride\"],[\"2a\", \"frēosan\", \"frēas\", \"fruron\", \"froren\", \"to freeze\"],[\"2b\", \"lūcan\", \"lēac\", \"lucon\", \"locen\", \"to lock\"],[\"3a\", \"bindan\", \"band\", \"bundon\", \"bunden\", \"to bind\"],[\"3b\", \"weorþan\", \"wearþ\", \"wurdon\", \"worden\", \"to become\"],[\"4\", \"beran\", \"bær\", \"bǣron\", \"boren\", \"to bear\"],[\"5\", \"lesan\", \"læs\", \"lǣron\", \"leren\", \"to gather\"],[\"6\", \"alan\", \"ōl\", \"ōlon\", \"alen\", \"to nourish , to grow\"],[\"7a\", \"hātan\", \"hēt\", \"hēton\", \"hāten\", \"to call , to be called\"],[\"7b\", \"hlēapan\", \"hlēop\", \"hlēppon\", \"hlēapen\", \"to leap\"],[\"7c\", \"healdan\", \"hēold\", \"hēoldon\", \"healden\", \"to hold\"],[\"7d\", \"rǣdan\", \"rēd\", \"rēdon\", \"rǣden\", \"to advise , to interpret\"]]\nQuestion = Is it true that part 3 of the verb in class 5 is baeron?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    classes = get_column_by_name(table_data, \"class\")\n    part_3s = get_column_by_name(table_data, \"part 3\")\n    for class_, part_3 in zip(classes, part_3s):\n        if class_.lower() == \"5\":\n            answer = equal_to(part_3, \"baeron\")\n            break \n    return answer\n\n### END"}
{"id": "e823ecf0-2986-47c6-87ed-d8037f94d0d3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1968 houston oilers season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 9 , 1968\", \"kansas city chiefs\", \"l 26 - 21\", \"45083\"],[\"2\", \"september 14 , 1968\", \"miami dolphins\", \"w 24 - 10\", \"40067\"],[\"3\", \"september 21 , 1968\", \"san diego chargers\", \"l 30 - 14\", \"46217\"],[\"4\", \"september 29 , 1968\", \"oakland raiders\", \"l 24 - 15\", \"46098\"],[\"5\", \"october 6 , 1968\", \"miami dolphins\", \"l 24 - 7\", \"36109\"],[\"6\", \"october 13 , 1968\", \"boston patriots\", \"w 16 - 0\", \"32502\"],[\"7\", \"october 20 , 1968\", \"new york jets\", \"l 20 - 14\", \"51710\"],[\"8\", \"october 27 , 1968\", \"buffalo bills\", \"w 30 - 7\", \"34339\"],[\"9\", \"november 3 , 1968\", \"cincinnati bengals\", \"w 27 - 17\", \"24012\"],[\"10\", \"november 10 , 1968\", \"new york jets\", \"l 26 - 7\", \"60242\"],[\"11\", \"november 17 , 1968\", \"denver broncos\", \"w 38 - 17\", \"36075\"],[\"12\", \"november 28 , 1968\", \"kansas city chiefs\", \"l 24 - 10\", \"48493\"],[\"13\", \"december 7 , 1968\", \"buffalo bills\", \"w 35 - 6\", \"34110\"],[\"14\", \"december 15 , 1968\", \"boston patriots\", \"w 45 - 17\", \"34198\"]]\nQuestion = Is it true that one and only people attended the october 13 , 1968 , 1968 game?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    for date, attendance in zip(dates, attendances):\n        if \"october 13 , 1968\" in date.lower():\n            answer = attendance == \"1\"\n            break\n    return answer\n\n### END"}
{"id": "3d191713-3f41-4ec6-b8ff-72d7e041ed33", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = peaches & herb\ntable_data = [[\"title\", \"label\", \"year of release\", \"country of release\", \"peaches :\"],[\"for your love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"let 's fall in love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"peaches & herb\", \"mca\", \"1977\", \"usa\", \"linda greene\"],[\"2 hot\", \"mvp / polydor\", \"1978\", \"usa\", \"linda greene\"],[\"twice the fire\", \"mvp / polydor\", \"1979\", \"usa\", \"linda greene\"],[\"demasiado candente\", \"mvp / polydor\", \"1979\", \"argentina\", \"linda greene\"],[\"worth the wait\", \"mvp / polydor\", \"1980\", \"usa\", \"linda greene\"],[\"sayin' something\", \"mvp / polydor\", \"1981\", \"usa\", \"linda greene\"],[\"remember\", \"the entertainment co / columbia\", \"1983\", \"usa\", \"linda greene\"],[\"colors of love\", \"imagen\", \"2009\", \"usa\", \"meritxell negre\"]]\nQuestion = Is it true that peaches & herb was released in the usa in 1977?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    years = get_column_by_name(table_data, \"year of release\")\n    countries = get_column_by_name(table_data, \"country of release\")\n    for title, year, country in zip(titles, years, countries):\n        if title.lower() == \"peaches & herb\" and year == \"1977\" and country.lower() == \"usa\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "b05f138a-89b1-45cf-996b-dcd57531101c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1961 houston oilers season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 9 , 1961\", \"oakland raiders\", \"w 55 - 0\", \"16231\"],[\"3\", \"september 24 , 1961\", \"san diego chargers\", \"l 34 - 24\", \"29210\"],[\"4\", \"october 1 , 1961\", \"dallas texans\", \"l 26 - 21\", \"28000\"],[\"5\", \"october 8 , 1961\", \"buffalo bills\", \"l 22 - 12\", \"22761\"],[\"6\", \"october 13 , 1961\", \"boston patriots\", \"t 31 - 31\", \"15070\"],[\"7\", \"october 22 , 1961\", \"dallas texans\", \"w 38 - 7\", \"21237\"],[\"8\", \"october 29 , 1961\", \"buffalo bills\", \"w 28 - 16\", \"23228\"],[\"9\", \"november 5 , 1961\", \"denver broncos\", \"w 55 - 14\", \"11564\"],[\"10\", \"november 12 , 1961\", \"boston patriots\", \"w 27 - 15\", \"35649\"],[\"11\", \"november 19 , 1961\", \"new york titans\", \"w 49 - 13\", \"33428\"],[\"12\", \"november 26 , 1961\", \"denver broncos\", \"w 45 - 14\", \"27864\"],[\"13\", \"december 3 , 1961\", \"san diego chargers\", \"w 33 - 13\", \"37845\"],[\"14\", \"december 10 , 1961\", \"new york titans\", \"w 48 - 21\", \"9462\"],[\"15\", \"december 17 , 1961\", \"oakland raiders\", \"w 47 - 16\", \"4821\"]]\nQuestion = Is it true that 28000 were in attendance of the game with w 27 - 15 result?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    results = get_column_by_name(table_data, \"result\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    for result, attendance in zip(results, attendances):\n        if result.lower() == \"w 27 - 15\":\n            answer = equal_to(attendance, \"28000\")\n            break \n    return answer\n\n### END"}
{"id": "d0c1397a-248f-4b08-b159-5a1388ebdece", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2004 - 05 in scottish football\ntable_data = [[\"date\",\"venue\",\"score\",\"competition\",\"report\"],[\"18 august\",\"hampden park , glasgow (h)\",\"0 - 3\",\"friendly\",\"bbc sport\"],[\"3 september\",\"estadio ciudad de valencia , valencia (a)\",\"1 - 1\",\"friendly\",\"bbc sport\"],[\"8 september\",\"hampden park , glasgow (h)\",\"0 - 0\",\"wcq5\",\"bbc sport\"],[\"9 october\",\"hampden park , glasgow (h)\",\"0 - 1\",\"wcq5\",\"bbc sport\"],[\"13 october\",\"republican stadium , chişinău (a)\",\"1 - 1\",\"wcq5\",\"bbc sport\"],[\"17 november\",\"easter road , edinburgh (h)\",\"1 - 4\",\"friendly\",\"bbc sport\"],[\"26 march\",\"san siro , milan (a)\",\"0 - 2\",\"wcq5\",\"bbc sport\"],[\"4 june\",\"hampden park , glasgow (h)\",\"2 - 0\",\"wcq5\",\"bbc sport\"],[\"8 june\",\"dinamo stadion , minsk (a)\",\"0 - 0\",\"wcq5\",\"bbc sport\"]]\nQuestion = Is it true that the score at the san siro , milan (a) venue was 0 - 2?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"venue\")\n    scores = get_column_by_name(table_data, \"score\")\n    for venue, score in zip(venues, scores):\n        if \"san siro , milan (a)\" in venue.lower():\n            answer = equal_to(score, \"0 - 2\")\n            break \n    return answer\n\n### END"}
{"id": "cd5b252e-274e-4f9d-aa55-cdb55d771a4e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rowing at the 2008 summer olympics - women 's lightweight double sculls\ntable_data = [[\"rank\", \"rowers\", \"country\", \"time\", \"notes\"],[\"1\", \"melanie kok , tracy cameron\", \"canada\", \"7:10.70\", \"fa\"],[\"2\", \"xu dongxiang , chen haixia\", \"china\", \"7:11.59\", \"fa\"],[\"3\", \"chrysi biskitzi , alexandra tsiavou\", \"greece\", \"7:11.99\", \"fa\"],[\"4\", \"renee hykel , jennifer goldsack\", \"united states\", \"7:12.15\", \"fb\"],[\"5\", \"amber halliday , marguerite houston\", \"australia\", \"7:13.80\", \"fb\"],[\"6\", \"misaki kumakura , akiko iwamoto\", \"japan\", \"7:16.13\", \"fb\"]]\nQuestion = Is it true that the japanese team finished with a time of 7:16:13 in 6th place?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    countries = get_column_by_name(table_data, \"country\")\n    times = get_column_by_name(table_data, \"time\")\n    for rank, country, time in zip(ranks, countries, times):\n        if country.lower() == \"japan\" and rank == \"6\":\n            answer = equal_to(time, \"7:16.13\")\n            break \n    return answer\n\n### END"}
{"id": "29282a9a-e5e2-4d82-95f5-de61e7f7642a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = zorro (musical)\ntable_data = [[\"year\", \"award\", \"category\", \"nominee\", \"result\"],[\"2009\", \"laurence olivier award\", \"best new musical\", \"best new musical\", \"nominated\"],[\"2009\", \"laurence olivier award\", \"best actor in a musical\", \"matt rawle\", \"nominated\"],[\"2009\", \"laurence olivier award\", \"best actress in a musical\", \"emma williams\", \"nominated\"],[\"2009\", \"laurence olivier award\", \"best performance in a supporting role in a musical\", \"lesli margherita\", \"won\"],[\"2009\", \"laurence olivier award\", \"best theatre choreographer\", \"rafael amargo\", \"nominated\"]]\nQuestion = Is it true that rafael amargo was nominated for choreography?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    nominees = get_column_by_name(table_data, \"nominee\")\n    answer = \"rafael amargo\" in nominees\n    return answer\n\n### END"}
{"id": "5fdfcf12-f087-4be8-9bde-973e6032f8ef", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 geylang united fc season\ntable_data = [[\"match\", \"date\", \"tournament\", \"location\", \"opponent team\", \"score\"],[\"1\", \"january 19 , 2008\", \"friendly\", \"bedok stadium\", \"police sa\", \"4 - 0\"],[\"2\", \"january 23 , 2008\", \"friendly\", \"bedok stadium\", \"katong fc\", \"7 - 1\"],[\"3\", \"january 26 , 2008\", \"friendly\", \"penang , malaysia\", \"chinese recreation club\", \"0 - 5\"],[\"4\", \"january 27 , 2008\", \"friendly\", \"penang , malaysia\", \"kampong seronong\", \"0 - 1\"],[\"5\", \"january 31 , 2008\", \"friendly\", \"bedok stadium\", \"admiralty\", \"4 - 0\"],[\"6\", \"february 4 , 2008\", \"friendly\", \"pasir gudang , malaysia\", \"johor pg\", \"2 - 3\"],[\"7\", \"february 11 , 2008\", \"friendly\", \"seri gelam , malaysia\", \"majlis bandaraya johor bahru\", \"0 - 3\"],[\"8\", \"february 16 , 2008\", \"friendly\", \"bedok stadium\", \"summerville fc\", \"9 - 0\"]]\nQuestion = Is it true that the team played beat police sa and katong fc in its first two matches before losing to chinese recreation club on january 26 , 2008?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponent_teams = get_column_by_name(table_data, \"opponent team\")\n    scores = get_column_by_name(table_data, \"score\")\n    first_match = equal_to(dates[0], \"january 19 , 2008\") and equal_to(opponent_teams[0], \"police sa\") and equal_to(scores[0], \"4 - 0\")\n    second_match = equal_to(dates[1], \"january 23 , 2008\") and equal_to(opponent_teams[1], \"katong fc\") and equal_to(scores[1], \"7 - 1\")\n    third_match = equal_to(dates[2], \"january 26 , 2008\") and equal_to(opponent_teams[2], \"chinese recreation club\") and equal_to(scores[2], \"0 - 5\")\n    answer = first_match and second_match and third_match\n    return answer\n\n### END"}
{"id": "47ba2cbf-0999-489d-a7ae-304069287ab3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1966 american football league draft\ntable_data = [[\"pick\", \"afl team\", \"player\", \"position\", \"college\"],[\"1\", \"miami dolphins\", \"jim grabowski\", \"running back\", \"illinois\"],[\"2\", \"miami dolphins\", \"rick norton\", \"quarterback\", \"kentucky\"],[\"3\", \"boston patriots\", \"karl singer\", \"offensive tackle\", \"purdue\"],[\"4\", \"denver broncos\", \"jerry shay\", \"offensive tackle\", \"purdue\"],[\"5\", \"houston oilers\", \"tommy nobis\", \"linebacker\", \"texas\"],[\"6\", \"kansas city chiefs\", \"aaron brown\", \"end\", \"minnesota\"],[\"7\", \"san diego chargers\", \"don davis\", \"offensive tackle\", \"cal state - la\"],[\"8\", \"buffalo bills\", \"mike dennis\", \"running back\", \"ole 'miss\"],[\"9\", \"new york jets\", \"bill yearby\", \"offensive tackle\", \"michigan\"],[\"10\", \"oakland raiders\", \"rodger bird\", \"running back\", \"kentucky\"]]\nQuestion = Is it true that denver broncos has the 4th pick of jerry shay for the offensive tackle position?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    afl_teams = get_column_by_name(table_data, \"afl team\")\n    players = get_column_by_name(table_data, \"player\")\n    positions = get_column_by_name(table_data, \"position\")\n    for afl_team, player, position in zip(afl_teams, players, positions):\n        if afl_team.lower() == \"denver broncos\" and player.lower() == \"jerry shay\" and position.lower() == \"offensive tackle\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "a75ce16f-0550-44f4-b2d0-a2bb0036908e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 honda indy 300\ntable_data = [[\"driver\", \"team\", \"laps\", \"time / retired\", \"grid\"],[\"cristiano da matta\", \"newman - haas racing\", \"65\", \"1:51:47.260\", \"3\"],[\"michael andretti\", \"team green\", \"65\", \"+ 5.8 secs\", \"6\"],[\"alex tagliani\", \"forsythe racing\", \"65\", \"+ 7.5 secs\", \"7\"],[\"gil de ferran\", \"team penske\", \"65\", \"+ 20.9 secs\", \"2\"],[\"kenny brack\", \"team rahal\", \"65\", \"+ 22.6 secs\", \"13\"],[\"jimmy vasser\", \"patrick racing\", \"65\", \"+ 24.7 secs\", \"10\"],[\"michel jourdain , jr\", \"bettenhausen racing\", \"65\", \"+ 39.5 secs\", \"16\"],[\"christian fittipaldi\", \"newman - haas racing\", \"65\", \"+ 40.5 secs\", \"15\"],[\"max papis\", \"team rahal\", \"65\", \"+ 42.6 secs\", \"14\"],[\"memo gidley\", \"chip ganassi racing\", \"65\", \"+ 42.9 secs\", \"23\"],[\"patrick carpentier\", \"forsythe racing\", \"65\", \"+ 46.7 secs\", \"9\"],[\"shinji nakano\", \"fernández racing\", \"65\", \"+ 46.9 secs\", \"18\"],[\"alex barron\", \"arciero - blair racing\", \"65\", \"+ 46.9 secs\", \"26\"],[\"paul tracy\", \"team green\", \"65\", \"+ 62.6 secs\", \"4\"],[\"scott dixon\", \"pacwest racing\", \"65\", \"+ 72.0 secs\", \"8\"],[\"tora takagi\", \"walker racing\", \"65\", \"+ 81.8 secs\", \"20\"],[\"tony kanaan\", \"mo nunn racing\", \"65\", \"+ 82.0 secs\", \"3\"],[\"bryan herta\", \"forsythe racing\", \"65\", \"+ 82.4 secs\", \"22\"],[\"adrián fernández\", \"fernández racing\", \"65\", \"+ 100.3 secs\", \"17\"],[\"hélio castroneves\", \"team penske\", \"64\", \"+ 1 lap\", \"11\"],[\"bruno junqueira\", \"chip ganassi racing\", \"56\", \"contact\", \"21\"],[\"roberto moreno\", \"patrick racing\", \"54\", \"mechanical\", \"1\"],[\"dario franchitti\", \"team green\", \"35\", \"mechanical\", \"5\"],[\"maurício gugelmin\", \"pacwest racing\", \"34\", \"mechanical\", \"25\"],[\"oriol servià\", \"sigma autosport\", \"10\", \"mechanical\", \"12\"],[\"casey mears\", \"mo nunn racing\", \"0\", \"contact\", \"24\"]]\nQuestion = Is it true that scott dixon has a time / retired of + 72.0 seconds?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    times = get_column_by_name(table_data, \"time / retired\")\n    for driver, time in zip(drivers, times):\n        if driver.lower() == \"scott dixon\":\n            answer = equal_to(time, \"+ 72.0 secs\")\n            break \n    return answer\n\n### END"}
{"id": "6277ea08-28d7-4967-b3de-8f6dc2bf6e3a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1925 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"8.11 (59)\", \"st kilda\", \"8.8 (56)\", \"glenferrie oval\", \"10000\", \"8 august 1925\"],[\"geelong\", \"11.20 (86)\", \"richmond\", \"4.8 (32)\", \"corio oval\", \"13500\", \"8 august 1925\"],[\"fitzroy\", \"17.18 (120)\", \"north melbourne\", \"11.8 (74)\", \"brunswick street oval\", \"7000\", \"8 august 1925\"],[\"south melbourne\", \"13.14 (92)\", \"footscray\", \"12.15 (87)\", \"lake oval\", \"15000\", \"8 august 1925\"],[\"melbourne\", \"7.10 (52)\", \"collingwood\", \"9.11 (65)\", \"mcg\", \"33642\", \"8 august 1925\"],[\"essendon\", \"15.11 (101)\", \"carlton\", \"8.14 (62)\", \"windy hill\", \"10000\", \"8 august 1925\"]]\nQuestion = Is it true that the brunswick street oval was the venue where the home team was essendon?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    answer = False\n    for home_team, venue in zip(home_teams, venues):\n        if home_team.lower() == \"essendon\" and venue.lower() == \"brunswick street oval\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "019ebe17-fc4f-4c7d-9611-73e83a49da50", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = westinghouse broadcasting\ntable_data = [[\"city of license / market\", \"station\", \"channel tv ( dt )\", \"years owned\", \"current affiliation\"],[\"san francisco - oakland - san jose\", \"kpix\", \"5 (29)\", \"1954 - 1995\", \"cbs owned - and - operated ( o&o )\"],[\"baltimore\", \"wjz - tv\", \"13 (13)\", \"1957 - 1995\", \"cbs owned - and - operated (o&o)\"],[\"boston\", \"wbz - tv\", \"4 (30)\", \"1948 - 1995\", \"cbs owned - and - operated (o&o)\"],[\"charlotte\", \"wpcq - tv (now wcnc - tv )\", \"36 (22)\", \"1980 - 1985\", \"nbc affiliate owned by belo corporation\"],[\"cleveland\", \"kyw - tv (now wkyc - tv )\", \"3 (17)\", \"1956 - 1965\", \"nbc affiliate owned by gannett company\"],[\"philadelphia\", \"wptz / kyw - tv\", \"3 (26)\", \"1953 - 1956 1965 - 1995\", \"cbs owned - and - operated (o&o)\"]]\nQuestion = Is it true that philadelphia plays on channel 3?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    cities = get_column_by_name(table_data, \"city of license / market\")\n    channels = get_column_by_name(table_data, \"channel tv ( dt )\")\n    for city, channel in zip(cities, channels):\n        if \"philadelphia\" in city.lower():\n            answer = equal_to(channel.split(' ')[0], \"3\")\n            break \n    return answer\n\n### END"}
{"id": "ee0e0efc-8073-4a4c-8bc9-d3dab2d319ce", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of radio stations in tamaulipas\ntable_data = [[\"frequency\", \"callsign\", \"brand\", \"city of license\", \"type\"],[\"580\", \"xehp\", \"la mas prendida\", \"ciudad victoria\", \"norteño\"],[\"640\", \"xetam\", \"la poderosa\", \"santa elena\", \"norteño\"],[\"970\", \"xebj - am\", \"radio 970\", \"ciudad victoria\", \"contemporary\"],[\"1340\", \"xerpv - am\", \"la cotorra\", \"ciudad victoria\", \"norteño\"],[\"1380\", \"xegw\", \"planeta w 1380\", \"ciudad victoria\", \"christian pop\"],[\"1480\", \"xevic\", \"radio tamaulipas\", \"ciudad victoria\", \"state government\"]]\nQuestion = Is it true that the frequency 1380 has a callsign of xevic?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    callsigns = get_column_by_name(table_data, \"callsign\")\n    for frequency, callsign in zip(frequencies, callsigns):\n        if frequency == \"1380\":\n            answer = equal_to(callsign, \"xevic\")\n            break \n    return answer\n\n### END"}
{"id": "6a3548c0-cc47-486c-8e43-f0709c9bf5a5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"model type\", \"model designation\", \"engine\", \"wheelbase (mm / inch)\", \"gvw (kg / ton)\", \"axle ratio\"],[\"cf220\", \"97100\", \"1759 cc (107.5 cu in) gasoline\", \"2692 / 106\", \"2235 / 2.2\", \"8 / 37\"],[\"cf220\", \"97f00\", \"1998 cc (121.9 cu in) diesel\", \"2692 / 106\", \"2235 / 2.2\", \"8 / 37\"],[\"cf250\", \"97300\", \"2279 cc (139 cu in) gasoline\", \"2692 / 106\", \"2500 / 2.46\", \"8 / 37\"],[\"cf250\", \"97 g00\", \"1998 cc (121.9 cu in) diesel\", \"2692 / 106\", \"2500 / 2.46\", \"8 / 37\"],[\"cf280\", \"97500\", \"2279 cc (139 cu in) gasoline\", \"3200 / 126\", \"2828 / 2.78\", \"11 / 49\"],[\"cf280\", \"97h00\", \"1998 cc (121.9 cu in) diesel\", \"3200 / 126\", \"2828 / 2.78\", \"9 / 47\"],[\"cf340\", \"97700\", \"2279 cc (139 cu in) gasoline\", \"3200 / 126\", \"3375 / 3.32\", \"9 / 47\"],[\"cf340\", \"97k00\", \"1998 cc (121.9 cu in) diesel\", \"3200 / 126\", \"3375 / 3.32\", \"9 / 47\"],[\"cf350\", \"97700\", \"2279 cc (139 cu in) gasoline\", \"3200 / 126\", \"3375 / 3.32\", \"9 / 47\"]]\nQuestion = Is it true that model cf220 97100 has a 1759 cc gasoline engine?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    model_types = get_column_by_name(table_data, \"model type\")\n    model_designations = get_column_by_name(table_data, \"model designation\")\n    engines = get_column_by_name(table_data, \"engine\")\n    for model_type, model_designation, engine in zip(model_types, model_designations, engines):\n        if model_type.lower() == \"cf220\" and model_designation == \"97100\":\n            answer = equal_to(engine, \"1759 cc (107.5 cu in) gasoline\")\n            break \n    return answer\n\n### END"}
{"id": "54aa9254-7f69-4c2f-8e96-52fe0baa77d3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1973 all - ireland senior hurling championship\ntable_data = [[\"player\", \"team\", \"last game\", \"date\", \"opposition\", \"début\"],[\"jimmy doyle\", \"tipperary\", \"munster quarter - final\", \"may 20\", \"waterford\", \"1957\"],[\"mick culligan\", \"clare\", \"munster semi - final\", \"june 24\", \"limerick\", \"1973\"],[\"mick kilmartin\", \"clare\", \"munster semi - final\", \"june 24\", \"limerick\", \"1971\"],[\"michael o'connor\", \"clare\", \"munster semi - final\", \"june 24\", \"limerick\", \"1973\"],[\"tim ryan\", \"clare\", \"munster semi - final\", \"june 24\", \"limerick\", \"1973\"],[\"jimmy crampton\", \"tipperary\", \"july 29\", \"munster final\", \"waterford\", \"1973\"],[\"len gaynor\", \"tipperary\", \"july 29\", \"munster final\", \"waterford\", \"1973\"],[\"christy jacob\", \"wexford\", \"leinster final\", \"august 5\", \"kilkenny\", \"1966\"],[\"éamonn morrissey\", \"kilkenny\", \"leinster final\", \"august 5\", \"wexford\", \"1972\"],[\"martin coogan\", \"kilkenny\", \"all - ireland final\", \"september 2\", \"limerick\", \"1961\"],[\"john kinsella\", \"kilkenny\", \"all - ireland final\", \"september 2\", \"limerick\", \"1967\"]]\nQuestion = Is it true that there are three players that debuted in 1973 against limerick and played their last games at the munster semi - final : mick culligan , michael o'connor and tim ryan?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    last_games = get_column_by_name(table_data, \"last game\")\n    oppositions = get_column_by_name(table_data, \"opposition\")\n    debuts = get_column_by_name(table_data, \"début\")\n    target_players = [\"mick culligan\", \"michael o'connor\", \"tim ryan\"]\n    target_last_game = \"munster semi - final\"\n    target_opposition = \"limerick\"\n    target_debut = \"1973\"\n    count = 0\n    for player, last_game, opposition, debut in zip(players, last_games, oppositions, debuts):\n        if player in target_players and last_game == target_last_game and opposition == target_opposition and debut == target_debut:\n            count += 1\n    answer = equal_to(count, len(target_players))\n    return answer\n\n### END"}
{"id": "82654ada-83a8-4461-b8de-78ee42a107ff", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = hey venus!\ntable_data = [[\"region\", \"date\", \"label\", \"format\", \"catalogue\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"vinyl record\", \"rtradlp 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"compact disc\", \"rtradcd 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"download\", \"-\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"vinyl record\", \"rt - 346 - 1\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"download\", \"rt - 346 - 5\"],[\"united states\", \"22 january 2008\", \"rough trade america\", \"double compact disc\", \"rtradcd 423\"],[\"japan\", \"12 september 2007\", \"rough trade japan\", \"compact disc\", \"xqcy - 1003\"]]\nQuestion = Is it true that the rtradlp 346 catalogue has rough trade records as the label?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    labels = get_column_by_name(table_data, \"label\")\n    catalogues = get_column_by_name(table_data, \"catalogue\")\n    for label, catalogue in zip(labels, catalogues):\n        if catalogue.lower() == \"rtradlp 346\":\n            answer = equal_to(label, \"rough trade records\")\n            break \n    return answer\n\n### END"}
{"id": "01aa4518-a546-4131-a37d-4b3e59a4e797", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = toronto and nipissing railway\ntable_data = [[\"number\",\"builder\",\"type\",\"date\",\"works number\"],[\"1\",\"avonside engine company\",\"4 - 4 - 0\",\"september 1870\",\"808\"],[\"2\",\"canadian engine & machinery company\",\"4 - 4 - 0\",\"november 1870\",\"83\"],[\"3\",\"canadian engine & machinery company\",\"4 - 4 - 0\",\"december 1870\",\"84\"],[\"4\",\"canadian engine & machinery company\",\"4 - 4 - 0\",\"early 1871\",\"85\"],[\"5\",\"canadian engine & machinery company\",\"4 - 4 - 0\",\"march 1871\",\"86\"],[\"6\",\"canadian engine & machinery company\",\"4 - 4 - 0\",\"may 1871\",\"87\"],[\"7\",\"canadian engine & machinery company\",\"4 - 4 - 0\",\"may 1871\",\"88\"],[\"8\",\"avonside engine company\",\"4 - 6 - 0\",\"december 1871\",\"867\"],[\"9\",\"avonside engine company\",\"0 - 6 - 6 - 0 fairlie\",\"december 1871\",\"864 & 865\"],[\"10\",\"avonside engine company\",\"4 - 6 - 0\",\"early 1873\",\"uncertain but probably one of 931 - 934\"],[\"11\",\"avonside engine company\",\"4 - 6 - 0\",\"1872\",\"uncertain but probably one of 935 - 939\"],[\"12\",\"avonside engine company\",\"4 - 6 - 0\",\"early 1873\",\"uncertain but probably one of 935 - 939\"]]\nQuestion = Is it true that works number 867 was for builder avonside engine company the type was 4 - 6 - 0 , the number was 8 , and the date was december 1871?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    numbers = get_column_by_name(table_data, \"number\")\n    builders = get_column_by_name(table_data, \"builder\")\n    types = get_column_by_name(table_data, \"type\")\n    dates = get_column_by_name(table_data, \"date\")\n    works_numbers = get_column_by_name(table_data, \"works number\")\n    for number, builder, type, date, works_number in zip(numbers, builders, types, dates, works_numbers):\n        if equal_to(number, \"8\") and equal_to(builder, \"avonside engine company\") and equal_to(type, \"4 - 6 - 0\") and equal_to(date, \"december 1871\") and equal_to(works_number, \"867\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "16213a5a-e24a-44cc-b934-e0600f974403", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = lynyrd skynyrd\ntable_data = [[\"date of release\", \"title\", \"billboard peak\", \"riaa cert\", \"label\"],[\"august 13 , 1973\", \"(pronounced 'lĕh - 'nérd 'skin - 'nérd)\", \"27\", \"2 platinum\", \"mca\"],[\"april 15 , 1974\", \"second helping\", \"12\", \"2 platinum\", \"mca\"],[\"march 24 , 1975\", \"nuthin' fancy\", \"9\", \"platinum\", \"mca\"],[\"february 2 , 1976\", \"gimme back my bullets\", \"20\", \"gold\", \"mca\"],[\"october 17 , 1977\", \"street survivors\", \"5\", \"2 platinum\", \"mca\"],[\"june 11 , 1991\", \"lynyrd skynyrd 1991\", \"64\", \"-\", \"atlantic\"],[\"february 16 , 1993\", \"the last rebel\", \"64\", \"-\", \"atlantic\"],[\"august 9 , 1994\", \"endangered species\", \"-\", \"-\", \"capricorn\"],[\"april 29 , 1997\", \"twenty\", \"97\", \"-\", \"cmc\"],[\"august 10 , 1999\", \"edge of forever\", \"96\", \"-\", \"cmc\"],[\"september 12 , 2000\", \"christmas time again\", \"38\", \"-\", \"sanctuary\"],[\"may 20 , 2003\", \"vicious cycle\", \"30\", \"-\", \"sanctuary\"],[\"september 29 , 2009\", \"god & guns\", \"18\", \"-\", \"roadrunner\"],[\"august 21 , 2012\", \"last of a dyin' breed\", \"14\", \"-\", \"roadrunner\"]]\nQuestion = Is it true that god 's and guns was released before september 29 , 2009?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\nfrom datetime import datetime\n\ndef parse_date(date_str):\n    return datetime.strptime(date_str, '%B %d , %Y')\n\ndef earlier(date1, date2):\n    return date1 < date2\n\ndef solution(table_data):\n    release_dates = get_column_by_name(table_data, \"date of release\")\n    titles = get_column_by_name(table_data, \"title\")\n    answer = False\n    for title, release_date in zip(titles, release_dates):\n        if \"god & guns\" in title.lower():\n            parsed_date = parse_date(release_date)\n            if earlier(parsed_date, parse_date(\"september 29 , 2009\")):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "3534e03b-fde8-4e99-91c8-a4307d6b8a05", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 honda indy 300\ntable_data = [[\"driver\", \"team\", \"laps\", \"time / retired\", \"grid\"],[\"cristiano da matta\", \"newman - haas racing\", \"65\", \"1:51:47.260\", \"3\"],[\"michael andretti\", \"team green\", \"65\", \"+ 5.8 secs\", \"6\"],[\"alex tagliani\", \"forsythe racing\", \"65\", \"+ 7.5 secs\", \"7\"],[\"gil de ferran\", \"team penske\", \"65\", \"+ 20.9 secs\", \"2\"],[\"kenny brack\", \"team rahal\", \"65\", \"+ 22.6 secs\", \"13\"],[\"jimmy vasser\", \"patrick racing\", \"65\", \"+ 24.7 secs\", \"10\"],[\"michel jourdain , jr\", \"bettenhausen racing\", \"65\", \"+ 39.5 secs\", \"16\"],[\"christian fittipaldi\", \"newman - haas racing\", \"65\", \"+ 40.5 secs\", \"15\"],[\"max papis\", \"team rahal\", \"65\", \"+ 42.6 secs\", \"14\"],[\"memo gidley\", \"chip ganassi racing\", \"65\", \"+ 42.9 secs\", \"23\"],[\"patrick carpentier\", \"forsythe racing\", \"65\", \"+ 46.7 secs\", \"9\"],[\"shinji nakano\", \"fernández racing\", \"65\", \"+ 46.9 secs\", \"18\"],[\"alex barron\", \"arciero - blair racing\", \"65\", \"+ 46.9 secs\", \"26\"],[\"paul tracy\", \"team green\", \"65\", \"+ 62.6 secs\", \"4\"],[\"scott dixon\", \"pacwest racing\", \"65\", \"+ 72.0 secs\", \"8\"],[\"tora takagi\", \"walker racing\", \"65\", \"+ 81.8 secs\", \"20\"],[\"tony kanaan\", \"mo nunn racing\", \"65\", \"+ 82.0 secs\", \"3\"],[\"bryan herta\", \"forsythe racing\", \"65\", \"+ 82.4 secs\", \"22\"],[\"adrián fernández\", \"fernández racing\", \"65\", \"+ 100.3 secs\", \"17\"],[\"hélio castroneves\", \"team penske\", \"64\", \"+ 1 lap\", \"11\"],[\"bruno junqueira\", \"chip ganassi racing\", \"56\", \"contact\", \"21\"],[\"roberto moreno\", \"patrick racing\", \"54\", \"mechanical\", \"1\"],[\"dario franchitti\", \"team green\", \"35\", \"mechanical\", \"5\"],[\"maurício gugelmin\", \"pacwest racing\", \"34\", \"mechanical\", \"25\"],[\"oriol servià\", \"sigma autosport\", \"10\", \"mechanical\", \"12\"],[\"casey mears\", \"mo nunn racing\", \"0\", \"contact\", \"24\"]]\nQuestion = Is it true that oriol servià had more than 65 laps for sigma autosport?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    teams = get_column_by_name(table_data, \"team\")\n    laps = get_column_by_name(table_data, \"laps\")\n    for driver, team, lap in zip(drivers, teams, laps):\n        if driver.lower() == \"oriol servià\" and team.lower() == \"sigma autosport\":\n            answer = greater(int(lap), 65)\n            break \n    return answer\n\n### END"}
{"id": "4079db8c-7775-464e-9e92-8c128ccf3248", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 football league one\ntable_data = [[\"team\",\"outgoing manager\",\"manner of departure\",\"date of vacancy\",\"replaced by\",\"date of appointment\",\"position in table\"],[\"milton keynes dons\",\"paul ince\",\"signed by blackburn rovers (mutual consent)\",\"22 june 2008\",\"roberto di matteo\",\"2 july 2008\",\"pre - season\"],[\"cheltenham town\",\"keith downing\",\"mutual consent\",\"13 september 2008\",\"martin allen\",\"15 september 2008\",\"24th\"],[\"colchester united\",\"geraint williams\",\"mutual consent\",\"22 september 2008\",\"paul lambert\",\"24 september 2008\",\"23rd\"],[\"carlisle united\",\"john ward\",\"mutual consent\",\"3 november 2008\",\"greg abbott\",\"5 december 2008\",\"20th\"],[\"huddersfield town\",\"stan ternent\",\"mutual consent\",\"4 november 2008\",\"lee clark\",\"11 december 2008\",\"16th\"],[\"swindon town\",\"maurice malpas\",\"mutual consent\",\"14 november 2008\",\"danny wilson\",\"26 december 2008\",\"16th\"],[\"crewe alexandra\",\"steve holland\",\"contract terminated\",\"18 november 2008\",\"guðjón þórðarson\",\"24 december 2008\",\"24th\"],[\"hartlepool united\",\"danny wilson\",\"contract terminated\",\"15 december 2008\",\"chris turner\",\"15 december 2008\",\"13th\"],[\"leeds united\",\"gary mcallister\",\"contract terminated\",\"21 december 2008\",\"simon grayson\",\"23 december 2008\",\"9th\"],[\"walsall\",\"jimmy mullen\",\"contract terminated\",\"10 january 2009\",\"chris hutchings\",\"20 january 2009\",\"12th\"],[\"leyton orient\",\"martin ling\",\"mutual consent\",\"18 january 2009\",\"geraint williams\",\"5 february 2009\",\"21st\"],[\"yeovil town\",\"russell slade\",\"contract terminated\",\"16 february 2009\",\"terry skiverton\",\"18 february 2009\",\"16th\"],[\"brighton & hove albion\",\"micky adams\",\"contract terminated\",\"21 february 2009\",\"russell slade\",\"6 march 2009\",\"21st\"]]\nQuestion = Is it true that yeovil town 's 16th vacancy was on 16 february 2009?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    dates_of_vacancy = get_column_by_name(table_data, \"date of vacancy\")\n    positions_in_table = get_column_by_name(table_data, \"position in table\")\n    for team, date_of_vacancy, position_in_table in zip(teams, dates_of_vacancy, positions_in_table):\n        if team.lower() == \"yeovil town\" and position_in_table == \"16th\":\n            answer = equal_to(date_of_vacancy, \"16 february 2009\")\n            break \n    return answer\n\n### END"}
{"id": "e7584ec3-659b-40f9-9a57-d81e8c9f33bd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of teachers (uk tv series) episodes\ntable_data = [[\"no overall\",\"no in series\",\"title\",\"director\",\"writer\",\"original air date\",\"production code\"],[\"32\", \"1\", \"episode 1\", \"barnaby southcomb\", \"richard stoneman\", \"26 october 2004\", \"401\"],[\"33\", \"2\", \"episode 2\", \"barnaby southcomb\", \"ed roe\", \"3 november 2004\", \"402\"],[\"34\", \"3\", \"episode 3\", \"barnaby southcomb\", \"charlie martin\", \"10 november 2004\", \"403\"],[\"35\", \"4\", \"episode 4\", \"sean grundy\", \"linton chiswick\", \"17 november 2004\", \"404\"],[\"36\", \"5\", \"episode 5\", \"sean grundy\", \"jack lothian\", \"24 november 2004\", \"405\"],[\"37\", \"6\", \"episode 6\", \"sean grundy\", \"tony basgallop\", \"1 december 2004\", \"406\"],[\"38\", \"7\", \"episode 7\", \"iain b macdonald\", \"charlie martin\", \"8 december 2004\", \"407\"],[\"39\", \"8\", \"episode 8\", \"iain b macdonald\", \"richard stoneman\", \"15 december 2004\", \"408\"]]\nQuestion = Is it true that the original air date for barnaby southcomb for charlie martin is before 10 november 2004?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\nfrom datetime import datetime\n\ndef parse_date(date_str):\n    return datetime.strptime(date_str, '%d %B %Y')\n\ndef before(date1, date2):\n    return date1 < date2\n\ndef solution(table_data):\n    directors = get_column_by_name(table_data, \"director\")\n    writers = get_column_by_name(table_data, \"writer\")\n    air_dates = get_column_by_name(table_data, \"original air date\")\n    answer = False\n    for director, writer, air_date in zip(directors, writers, air_dates):\n        if director.lower() == \"barnaby southcomb\" and writer.lower() == \"charlie martin\":\n            parsed_date = parse_date(air_date)\n            if before(parsed_date, parse_date(\"10 november 2004\")):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "afb64935-7fba-4451-9b67-c6ee2e17119a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1977 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"carlton\", \"3.13 (31)\", \"geelong\", \"2.12 (24)\", \"princes park\", \"11009\", \"18 june 1977\"],[\"south melbourne\", \"8.22 (70)\", \"melbourne\", \"9.10 (64)\", \"lake oval\", \"20785\", \"18 june 1977\"],[\"north melbourne\", \"6.11 (47)\", \"hawthorn\", \"6.12 (48)\", \"arden street oval\", \"9027\", \"18 june 1977\"],[\"richmond\", \"13.15 (93)\", \"fitzroy\", \"6.5 (41)\", \"mcg\", \"12877\", \"18 june 1977\"],[\"footscray\", \"5.6 (36)\", \"collingwood\", \"9.15 (69)\", \"western oval\", \"11921\", \"18 june 1977\"],[\"essendon\", \"5.16 (46)\", \"st kilda\", \"5.12 (42)\", \"vfl park\", \"14337\", \"18 june 1977\"]]\nQuestion = Is it true that less than 11921 were in attendance when the home team 's score was 5.6 (36)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    for home_team_score, crowd in zip(home_team_scores, crowds):\n        if home_team_score == \"5.6 (36)\":\n            answer = less_than(int(crowd), 11921)\n            break \n    return answer\n\n### END"}
{"id": "57daa4e7-d15c-4c4e-bd9d-c7b9c57b1848", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = los angeles lakers all - time roster\ntable_data = [[\"player\", \"nationality\", \"position\", \"from\", \"school / country\"],[\"bo lamar\", \"united states\", \"guard\", \"1977\", \"louisiana - lafayette\"],[\"jeff lamp\", \"united states\", \"guard / forward\", \"1987\", \"virginia\"],[\"mark landsberger\", \"united states\", \"forward / center\", \"1979\", \"arizona state\"],[\"stu lantz\", \"united states\", \"guard\", \"1974\", \"nebraska\"],[\"rudy larusso\", \"united states\", \"forward / center\", \"1959\", \"dartmouth\"],[\"butch lee\", \"united states\", \"guard\", \"1979\", \"marquette\"],[\"slick leonard\", \"united states\", \"guard\", \"1956\", \"indiana\"],[\"ronnie lester\", \"united states\", \"guard\", \"1984\", \"iowa\"],[\"stan love\", \"united states\", \"forward\", \"1973\", \"oregon\"],[\"clyde lovellette\", \"united states\", \"forward / center\", \"1953\", \"kansas\"],[\"maurice lucas\", \"united states\", \"forward / center\", \"1985\", \"marquette\"],[\"tyronn lue\", \"united states\", \"guard\", \"1998\", \"nebraska\"],[\"george lynch\", \"united states\", \"forward\", \"1993\", \"north carolina\"],[\"mike lynn\", \"united states\", \"forward\", \"1969\", \"ucla\"]]\nQuestion = Is it true that the position of the player from 1959 was forward / center?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"from\")\n    positions = get_column_by_name(table_data, \"position\")\n    for year, position in zip(years, positions):\n        if year == \"1959\":\n            answer = equal_to(position, \"forward / center\")\n            break \n    return answer\n\n### END"}
{"id": "2ebe416c-af64-483c-926d-8bd33232ac48", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1974 formula one season\ntable_data = [[\"race\",\"circuit\",\"date\",\"pole position\",\"fastest lap\",\"winning driver\",\"constructor\",\"tyre\",\"report\"],[\"argentine grand prix\",\"buenos aires\",\"13 january\",\"ronnie peterson\",\"clay regazzoni\",\"denny hulme\",\"mclaren - ford\",\"g\",\"report\"],[\"brazilian grand prix\",\"interlagos\",\"27 january\",\"emerson fittipaldi\",\"clay regazzoni\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"south african grand prix\",\"kyalami\",\"30 march\",\"niki lauda\",\"carlos reutemann\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"],[\"spanish grand prix\",\"jarama\",\"28 april\",\"niki lauda\",\"niki lauda\",\"niki lauda\",\"ferrari\",\"g\",\"report\"],[\"belgian grand prix\",\"nivelles - baulers\",\"12 may\",\"clay regazzoni\",\"denny hulme\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"monaco grand prix\",\"monaco\",\"26 may\",\"niki lauda\",\"ronnie peterson\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"swedish grand prix\",\"anderstorp\",\"9 june\",\"patrick depailler\",\"patrick depailler\",\"jody scheckter\",\"tyrrell - ford\",\"g\",\"report\"],[\"dutch grand prix\",\"zandvoort\",\"23 june\",\"niki lauda\",\"ronnie peterson\",\"niki lauda\",\"ferrari\",\"g\",\"report\"],[\"french grand prix\",\"dijon - prenois\",\"7 july\",\"niki lauda\",\"jody scheckter\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"british grand prix\",\"brands hatch\",\"20 july\",\"niki lauda\",\"niki lauda\",\"jody scheckter\",\"tyrrell - ford\",\"g\",\"report\"],[\"german grand prix\",\"nürburgring\",\"4 august\",\"niki lauda\",\"jody scheckter\",\"clay regazzoni\",\"ferrari\",\"g\",\"report\"],[\"austrian grand prix\",\"österreichring\",\"18 august\",\"niki lauda\",\"clay regazzoni\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"],[\"italian grand prix\",\"monza\",\"8 september\",\"niki lauda\",\"carlos pace\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"canadian grand prix\",\"mosport park\",\"22 september\",\"emerson fittipaldi\",\"niki lauda\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"united states grand prix\",\"watkins glen\",\"6 october\",\"carlos reutemann\",\"carlos pace\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"]]\nQuestion = Is it true that 7 july is the date for patrick depailler having the fastest lap at the french grand prix?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    races = get_column_by_name(table_data, \"race\")\n    dates = get_column_by_name(table_data, \"date\")\n    fastest_laps = get_column_by_name(table_data, \"fastest lap\")\n    answer = False\n    for race, date, fastest_lap in zip(races, dates, fastest_laps):\n        if \"french grand prix\" in race.lower() and \"7 july\" in date.lower() and \"patrick depailler\" in fastest_lap.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "891feb38-0fd0-4d69-a8b8-8bbd7786d5e1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1950 french grand prix\ntable_data = [[\"driver\",\"entrant\",\"constructor\",\"chassis\",\"engine\",\"tyre\"],[\"nino farina\",\"sa alfa romeo\",\"alfa romeo\",\"alfa romeo 158\",\"alfa romeo l8s\",\"p\"],[\"luigi fagioli\",\"sa alfa romeo\",\"alfa romeo\",\"alfa romeo 158\",\"alfa romeo l8s\",\"p\"],[\"juan manuel fangio\",\"sa alfa romeo\",\"alfa romeo\",\"alfa romeo 158\",\"alfa romeo l8s\",\"p\"],[\"luigi villoresi\",\"scuderia ferrari\",\"ferrari\",\"ferrari 125\",\"ferrari v12s\",\"p\"],[\"alberto ascari\",\"scuderia ferrari\",\"ferrari\",\"ferrari 125\",\"ferrari v12s\",\"p\"],[\"raymond sommer\",\"automobiles talbot - darracq sa\",\"talbot - lago\",\"talbot - lago t26c - gs\",\"talbot l6\",\"d\"],[\"peter whitehead\",\"private\",\"ferrari\",\"ferrari 125\",\"ferrari v12s\",\"p\"],[\"philippe étancelin\",\"private\",\"talbot - lago\",\"talbot - lago t26c - da\",\"talbot l6\",\"d\"],[\"yves giraud cabantous\",\"automobiles talbot - darracq sa\",\"talbot - lago\",\"talbot - lago t26c - da\",\"talbot l6\",\"d\"],[\"louis rosier\",\"automobiles talbot - darracq sa\",\"talbot - lago\",\"talbot - lago t26c - da\",\"talbot l6\",\"d\"],[\"pierre levegh\",\"private\",\"talbot - lago\",\"talbot - lago t26c\",\"talbot l6\",\"d\"],[\"eugène chaboud\",\"ecurie lutetia\",\"talbot - lago\",\"talbot - lago t26c\",\"talbot l6\",\"d\"],[\"charles pozzi\",\"private\",\"talbot - lago\",\"talbot - lago t26c\",\"talbot l6\",\"d\"],[\"franco rol\",\"officine alfieri maserati\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"p\"],[\"louis chiron\",\"officine alfieri maserati\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"p\"],[\"reg parnell\",\"scuderia ambrosiana\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"d\"],[\"david hampshire\",\"scuderia ambrosiana\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"d\"],[\"josé froilán gonzález\",\"scuderia achille varzi\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"p\"],[\"gianfranco comotti\",\"scuderia achille varzi\",\"maserati\",\"maserati 4clt - 48\",\"maserati l4s\",\"p\"],[\"felice bonetto\",\"scuderia milano\",\"maserati\",\"maserati 4clt - 50\",\"milano l4s\",\"p\"],[\"johnny claes\",\"ecurie belge\",\"talbot - lago\",\"talbot - lago t26c\",\"talbot l6\",\"d\"],[\"robert manzon\",\"equipe gordini\",\"simca - gordini\",\"simca - gordini t15\",\"gordini l4s\",\"e\"]]\nQuestion = Is it true that the tyre on the talbot - lago with an entrant of automobiles talbot - darracq sa , and a chassis of talbot - lago t26c - da is d?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    entrants = get_column_by_name(table_data, \"entrant\")\n    chassis = get_column_by_name(table_data, \"chassis\")\n    tyres = get_column_by_name(table_data, \"tyre\")\n    answer = False\n    for entrant, chassi, tyre in zip(entrants, chassis, tyres):\n        if entrant.lower() == \"automobiles talbot - darracq sa\" and chassi.lower() == \"talbot - lago t26c - da\":\n            if tyre.lower() == \"d\":\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "934ea0e2-a30b-476e-b1e9-6ad08a3bcca4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"series number\",\"number of episodes\",\"original air date\",\"dvd region 2 release date\",\"dvd region 1 release date\"],[\"1\",\"6\",\"1973\",\"2 september 2002\",\"tba\"],[\"2\",\"7\",\"1975\",\"2 september 2002\",\"tba\"],[\"3\",\"7\",\"1976\",\"26 july 2004\",\"11 march 2008\"],[\"4\",\"7\",\"1977\",\"26 july 2004\",\"9 september 2008\"],[\"5\",\"7\",\"1979\",\"5 march 2007\",\"6 september 2009\"],[\"6\",\"7\",\"1982\",\"5 march 2007\",\"27 april 2010\"],[\"7\",\"6\",\"1983\",\"3 march 2008\",\"27 april 2010\"],[\"8\",\"6\",\"1985\",\"3 march 2008\",\"9 july 2010\"],[\"9\",\"12\",\"1987\",\"5 may 2008\",\"18 january 2011\"],[\"10\",\"6\",\"1988\",\"22 september 2008\",\"12 april 2011\"],[\"11\",\"7\",\"1989\",\"22 september 2008\",\"12 april 2011\"],[\"12\",\"10\",\"1990\",\"26 december 2008\",\"12 july 2011\"],[\"13\",\"6\",\"1991\",\"26 december 2008\",\"21 february 2012\"],[\"14\",\"9\",\"1992\",\"26 october 2009\",\"17 april 2012\"],[\"15\",\"9\",\"1993\",\"26 october 2009\",\"24 july 2012\"],[\"16\",\"8\",\"1995\",\"27 december 2010\",\"tba\"],[\"17\",\"10\",\"1995\",\"27 december 2010\",\"15 june 2004\"],[\"18\",\"10\",\"1997\",\"7 february 2011\",\"15 january 2013\"],[\"19\",\"10\",\"1998\",\"7 february 2011\",\"16 april 2013\"],[\"20\",\"10\",\"1999\",\"26 march 2012\",\"9 july 2013\"],[\"21\",\"10\",\"2000\",\"26 march 2012\",\"15 october 2013\"],[\"22\",\"10\",\"2001\",\"23 april 2012\",\"14 january 2014\"],[\"23\",\"10\",\"2002\",\"23 april 2012\",\"tba\"],[\"24\",\"10\",\"2003\",\"tba\",\"tba\"],[\"25\",\"10\",\"2004\",\"tba\",\"tba\"],[\"26\",\"10\",\"2005\",\"tba\",\"tba\"],[\"27\",\"9\",\"2006\",\"tba\",\"tba\"],[\"28\",\"10\",\"2007\",\"tba\",\"tba\"],[\"29\",\"11\",\"2008\",\"tba\",\"tba\"],[\"30\",\"10\",\"2009\",\"tba\",\"tba\"],[\"31\",\"6\",\"2010\",\"tba\",\"tba\"]]\nQuestion = Is it true that 1988.0 was the original air date of series number 10 with a 5 may 2008 dvd region 2 release date?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    series_numbers = get_column_by_name(table_data, \"series number\")\n    original_air_dates = get_column_by_name(table_data, \"original air date\")\n    dvd_region_2_release_dates = get_column_by_name(table_data, \"dvd region 2 release date\")\n    for series_number, original_air_date, dvd_region_2_release_date in zip(series_numbers, original_air_dates, dvd_region_2_release_dates):\n        if series_number == \"10\" and original_air_date == \"1988\" and dvd_region_2_release_date == \"5 may 2008\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "2d24d765-1e72-475f-aa75-4550130067eb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1970 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"carlton\", \"16.14 (110)\", \"st kilda\", \"10.11 (71)\", \"princes park\", \"22988\", \"18 july 1970\"],[\"south melbourne\", \"11.9 (75)\", \"richmond\", \"12.17 (89)\", \"lake oval\", \"25651\", \"18 july 1970\"],[\"north melbourne\", \"13.17 (95)\", \"fitzroy\", \"18.14 (122)\", \"arden street oval\", \"8443\", \"18 july 1970\"],[\"geelong\", \"15.16 (106)\", \"essendon\", \"8.17 (65)\", \"kardinia park\", \"17220\", \"18 july 1970\"],[\"melbourne\", \"7.19 (61)\", \"collingwood\", \"10.16 (76)\", \"mcg\", \"36044\", \"18 july 1970\"],[\"hawthorn\", \"23.9 (147)\", \"footscray\", \"6.12 (48)\", \"vfl park\", \"14151\", \"18 july 1970\"]]\nQuestion = Is it true that the crowd was over 8000 strong when the home team scored 13.17 (95)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    for home_team_score, crowd in zip(home_team_scores, crowds):\n        if home_team_score == \"13.17 (95)\":\n            answer = greater(int(crowd), 8000)\n            break \n    return answer\n\n### END"}
{"id": "64e53460-1373-434e-a190-73596363a666", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = los angeles lakers all - time roster\ntable_data = [[\"player\", \"nationality\", \"position\", \"from\", \"school / country\"],[\"bo lamar\", \"united states\", \"guard\", \"1977\", \"louisiana - lafayette\"],[\"jeff lamp\", \"united states\", \"guard / forward\", \"1987\", \"virginia\"],[\"mark landsberger\", \"united states\", \"forward / center\", \"1979\", \"arizona state\"],[\"stu lantz\", \"united states\", \"guard\", \"1974\", \"nebraska\"],[\"rudy larusso\", \"united states\", \"forward / center\", \"1959\", \"dartmouth\"],[\"butch lee\", \"united states\", \"guard\", \"1979\", \"marquette\"],[\"slick leonard\", \"united states\", \"guard\", \"1956\", \"indiana\"],[\"ronnie lester\", \"united states\", \"guard\", \"1984\", \"iowa\"],[\"stan love\", \"united states\", \"forward\", \"1973\", \"oregon\"],[\"clyde lovellette\", \"united states\", \"forward / center\", \"1953\", \"kansas\"],[\"maurice lucas\", \"united states\", \"forward / center\", \"1985\", \"marquette\"],[\"tyronn lue\", \"united states\", \"guard\", \"1998\", \"nebraska\"],[\"george lynch\", \"united states\", \"forward\", \"1993\", \"north carolina\"],[\"mike lynn\", \"united states\", \"forward\", \"1969\", \"ucla\"]]\nQuestion = Is it true that guard / forward position is the player from 1960?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    positions = get_column_by_name(table_data, \"position\")\n    years = get_column_by_name(table_data, \"from\")\n    answer = False\n    for position, year in zip(positions, years):\n        if position.lower() == \"guard / forward\" and equal_to(year, \"1960\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "0faee92f-017e-46b6-9e31-d897efa4019b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1978 - 79 fa cup\ntable_data = [[\"tie no\",\"home team\",\"score\",\"away team\",\"date\"],[\"1\",\"liverpool\",\"3 - 0\",\"burnley\",\"28 february 1979\"],[\"2\",\"nottingham forest\",\"0 - 1\",\"arsenal\",\"26 february 1979\"],[\"3\",\"west bromwich albion\",\"1 - 1\",\"southampton\",\"10 march 1979\"],[\"replay\",\"southampton\",\"2 - 1\",\"west bromwich albion\",\"12 march 1979\"],[\"4\",\"ipswich town\",\"6 - 1\",\"bristol rovers\",\"26 february 1979\"],[\"5\",\"oldham athletic\",\"0 - 1\",\"tottenham hotspur\",\"28 february 1979\"],[\"6\",\"crystal palace\",\"0 - 1\",\"wolverhampton wanderers\",\"26 february 1979\"],[\"7\",\"aldershot\",\"2 - 2\",\"shrewsbury town\",\"20 february 1979\"],[\"replay\",\"shrewsbury town\",\"3 - 1\",\"aldershot\",\"26 february 1979\"],[\"8\",\"colchester united\",\"0 - 1\",\"manchester united\",\"20 february 1979\"]]\nQuestion = Is it true that the tie no 7 was played on february 20 , 1979?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    tie_nos = get_column_by_name(table_data, \"tie no\")\n    dates = get_column_by_name(table_data, \"date\")\n    for tie_no, date in zip(tie_nos, dates):\n        if tie_no == \"7\":\n            answer = equal_to(date, \"20 february 1979\")\n            break \n    return answer\n\n### END"}
{"id": "292774cc-d412-45ca-aba8-c98f092422a4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1971 u.s. open (golf)\ntable_data = [[\"place\", \"player\", \"country\", \"score\", \"to par\", \"money\"],[\"t1\", \"lee trevino\", \"united states\", \"70 + 72 + 69 + 69 = 280\", \"e\", \"playoff\"],[\"t1\", \"jack nicklaus\", \"united states\", \"69 + 72 + 68 + 71 = 280\", \"e\", \"playoff\"],[\"t3\", \"jim colbert\", \"united states\", \"69 + 69 + 73 + 71 = 282\", \"+ 2\", \"9000\"],[\"t3\", \"bob rosburg\", \"united states\", \"71 + 72 + 70 + 69 = 282\", \"+ 2\", \"9000\"],[\"t5\", \"george archer\", \"united states\", \"71 + 70 + 70 + 72 = 283\", \"+ 3\", \"6500\"],[\"t5\", \"johnny miller\", \"united states\", \"70 + 73 + 70 + 70 = 283\", \"+ 3\", \"6500\"],[\"t5\", \"jim simons (a)\", \"united states\", \"71 + 71 + 65 + 76 = 283\", \"+ 3\", \"0\"],[\"8\", \"raymond floyd\", \"united states\", \"71 + 75 + 67 + 71 = 284\", \"+ 4\", \"5000\"],[\"t9\", \"gay brewer\", \"united states\", \"70 + 70 + 73 + 72 = 285\", \"+ 5\", \"3325\"],[\"t9\", \"larry hinson\", \"united states\", \"71 + 71 + 70 + 73 = 285\", \"+ 5\", \"3325\"],[\"t9\", \"bobby nichols\", \"united states\", \"69 + 72 + 69 + 75 = 285\", \"+ 5\", \"3325\"],[\"t9\", \"bert yancey\", \"united states\", \"75 + 69 + 69 + 72 = 285\", \"+ 5\", \"3325\"]]\nQuestion = Is it true that the united states was the country of the player at + 5?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_to_par = get_column_by_name(table_data, \"to par\")\n    column_country = get_column_by_name(table_data, \"country\")\n    answer = False\n    for to_par, country in zip(column_to_par, column_country):\n        if \"+ 5\" in to_par and \"united states\" in country.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "ae9e78b2-5dc2-4c6e-a764-9907c13980e4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1925 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"8.11 (59)\", \"st kilda\", \"8.8 (56)\", \"glenferrie oval\", \"10000\", \"8 august 1925\"],[\"geelong\", \"11.20 (86)\", \"richmond\", \"4.8 (32)\", \"corio oval\", \"13500\", \"8 august 1925\"],[\"fitzroy\", \"17.18 (120)\", \"north melbourne\", \"11.8 (74)\", \"brunswick street oval\", \"7000\", \"8 august 1925\"],[\"south melbourne\", \"13.14 (92)\", \"footscray\", \"12.15 (87)\", \"lake oval\", \"15000\", \"8 august 1925\"],[\"melbourne\", \"7.10 (52)\", \"collingwood\", \"9.11 (65)\", \"mcg\", \"33642\", \"8 august 1925\"],[\"essendon\", \"15.11 (101)\", \"carlton\", \"8.14 (62)\", \"windy hill\", \"10000\", \"8 august 1925\"]]\nQuestion = Is it true that melbourne is the home team that had a score of 7.10 (52)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    for home_team, home_team_score in zip(home_teams, home_team_scores):\n        if home_team.lower() == \"melbourne\":\n            answer = equal_to(home_team_score, \"7.10 (52)\")\n            break \n    return answer\n\n### END"}
{"id": "833e0c9c-367b-4822-baa9-7325aaa83f8d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1954 baltimore colts season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"record\", \"game site\", \"attendance\"],[\"1\", \"september 26 , 1954\", \"los angeles rams\", \"l 0 - 48\", \"0 - 1\", \"memorial stadium\", \"36215\"],[\"2\", \"october 2 , 1954\", \"new york giants\", \"w 20 - 14\", \"1 - 1\", \"memorial stadium\", \"27088\"],[\"3\", \"october 10 , 1954\", \"chicago bears\", \"l 9 - 28\", \"1 - 2\", \"wrigley field\", \"27845\"],[\"4\", \"october 16 , 1954\", \"detroit lions\", \"l 0 - 35\", \"1 - 3\", \"tiger stadium\", \"48272\"],[\"5\", \"october 24 , 1954\", \"green bay packers\", \"l 6 - 7\", \"1 - 4\", \"memorial stadium\", \"28680\"],[\"6\", \"october 31 , 1954\", \"washington redskins\", \"l 21 - 24\", \"1 - 5\", \"griffith stadium\", \"23566\"],[\"7\", \"november 6 , 1954\", \"detroit lions\", \"l 3 - 27\", \"1 - 6\", \"memorial stadium\", \"25287\"],[\"8\", \"november 13 , 1954\", \"green bay packers\", \"l 13 - 24\", \"1 - 7\", \"milwaukee county stadium\", \"19786\"],[\"9\", \"november 21 , 1954\", \"chicago bears\", \"l 13 - 28\", \"1 - 8\", \"memorial stadium\", \"23093\"],[\"10\", \"november 28 , 1954\", \"san francisco 49ers\", \"w 17 - 13\", \"2 - 8\", \"memorial stadium\", \"23875\"],[\"11\", \"december 4 , 1954\", \"los angeles rams\", \"w 22 - 21\", \"3 - 8\", \"los angeles memorial coliseum\", \"30744\"],[\"12\", \"december 11 , 1954\", \"san francisco 49ers\", \"l 7 - 10\", \"3 - 9\", \"kezar stadium\", \"26856\"]]\nQuestion = Is it true that the chicago bears were the opponent on week 7?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    for week, opponent in zip(weeks, opponents):\n        if week == \"7\":\n            answer = equal_to(opponent, \"chicago bears\")\n            break \n    return answer\n\n### END"}
{"id": "295308a0-b0a2-4c27-b4cf-eb9d06da8265", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1998 masters tournament\ntable_data = [[\"place\", \"player\", \"country\", \"score\", \"to par\"],[\"t1\", \"fred couples\", \"united states\", \"69 + 70 = 139\", \"- 5\"],[\"t1\", \"david duval\", \"united states\", \"71 + 68 = 139\", \"- 5\"],[\"3\", \"scott hoch\", \"united states\", \"70 + 71 = 141\", \"- 3\"],[\"t4\", \"paul azinger\", \"united states\", \"71 + 72 = 143\", \"- 1\"],[\"t4\", \"jay haas\", \"united states\", \"72 + 71 = 143\", \"- 1\"],[\"t4\", \"phil mickelson\", \"united states\", \"74 + 69 = 143\", \"- 1\"],[\"t4\", \"josé maría olazábal\", \"spain\", \"70 + 73 = 143\", \"- 1\"],[\"t4\", \"tiger woods\", \"united states\", \"71 + 72 = 143\", \"- 1\"],[\"t9\", \"scott mccarron\", \"united states\", \"73 + 71 = 144\", \"e\"],[\"t9\", \"mark o'meara\", \"united states\", \"74 + 70 = 144\", \"e\"]]\nQuestion = Is it true that mark o'meara is placed in the top 3?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than_or_equal_to(num1, num2):\n    return num1 <= num2\n\ndef solution(table_data):\n    places = get_column_by_name(table_data, \"place\")\n    players = get_column_by_name(table_data, \"player\")\n    answer = False\n    for place, player in zip(places, players):\n        if player.lower() == \"mark o'meara\":\n            if \"t\" in place:\n                place = place.replace(\"t\", \"\")\n            if less_than_or_equal_to(int(place), 3):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "41bf75bb-46d9-4e9b-af04-9471abe94519", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mike hailwood\ntable_data = [[\"year\", \"entrant\", \"chassis\", \"engine\", \"pts\"],[\"1963\", \"reg parnell racing\", \"lotus 24\", \"climax\", \"0\"],[\"1963\", \"reg parnell racing\", \"lola mk4\", \"climax\", \"0\"],[\"1964\", \"reg parnell racing\", \"lotus 25\", \"brm\", \"1\"],[\"1965\", \"reg parnell racing\", \"lotus 25\", \"brm\", \"0\"],[\"1971\", \"team surtees\", \"surtees ts9\", \"ford\", \"3\"],[\"1972\", \"brooke bond oxo team surtees\", \"surtees ts9b\", \"ford\", \"13\"],[\"1973\", \"brooke bond oxo team surtees\", \"surtees ts14a\", \"ford\", \"0\"],[\"1974\", \"yardley team mclaren\", \"mclaren m23\", \"ford\", \"12\"]]\nQuestion = Is it true that the surtees ts9b chassis from 1972 , has a ford engine , and has 13 points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    chassis = get_column_by_name(table_data, \"chassis\")\n    engines = get_column_by_name(table_data, \"engine\")\n    points = get_column_by_name(table_data, \"pts\")\n    for year, chassi, engine, point in zip(years, chassis, engines, points):\n        if year == \"1972\" and chassi.lower() == \"surtees ts9b\" and engine.lower() == \"ford\":\n            answer = equal_to(point, \"13\")\n            break \n    return answer\n\n### END"}
{"id": "f5d8f2c5-325b-4ff5-931b-ea1da8b91479", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1984 u.s. open (golf)\ntable_data = [[\"place\", \"player\", \"country\", \"score\", \"to par\"],[\"1\", \"hale irwin\", \"united states\", \"68 + 68 = 136\", \"- 4\"],[\"2\", \"fuzzy zoeller\", \"united states\", \"71 + 66 = 137\", \"-- 3\"],[\"t3\", \"david canipe\", \"united states\", \"69 + 69 = 138\", \"- 2\"],[\"t3\", \"greg norman\", \"australia\", \"70 + 68 = 138\", \"- 2\"],[\"t5\", \"curtis strange\", \"united states\", \"70 + 69 = 139\", \"- 1\"],[\"t5\", \"jim thorpe\", \"united states\", \"68 + 71 = 139\", \"- 1\"],[\"7\", \"fred couples\", \"united states\", \"69 + 71 = 140\", \"e\"],[\"t8\", \"andy bean\", \"united states\", \"70 + 71 = 141\", \"+ 1\"],[\"t8\", \"jay sigel (a)\", \"united states\", \"69 + 72 = 141\", \"+ 1\"],[\"t10\", \"isao aoki\", \"japan\", \"72 + 70 = 142\", \"+ 2\"],[\"t10\", \"seve ballesteros\", \"spain\", \"69 + 73 = 142\", \"+ 2\"],[\"t10\", \"johnny miller\", \"united states\", \"74 + 68 = 142\", \"+ 2\"],[\"t10\", \"jack nicklaus\", \"united states\", \"71 + 71 = 142\", \"+ 2\"],[\"t10\", \"mike reid\", \"united states\", \"70 + 72 = 142\", \"+ 2\"]]\nQuestion = Is it true that seve ballesteros from spain is + 2 over par?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    countries = get_column_by_name(table_data, \"country\")\n    to_pars = get_column_by_name(table_data, \"to par\")\n    for player, country, to_par in zip(players, countries, to_pars):\n        if player.lower() == \"seve ballesteros\" and country.lower() == \"spain\":\n            answer = equal_to(to_par, \"+ 2\")\n            break \n    return answer\n\n### END"}
{"id": "6893f34a-34b9-4115-9fd3-c554805ce470", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of georgian submissions for the academy award for best foreign language film\ntable_data = [[\"year (ceremony)\",\"film title used in nomination\",\"original title\",\"director\",\"main language (s)\",\"result\"],[\"1996 (69th)\",\"a chef in love\",\"შეყვარებული მზარეულის 1001 რეცეპტი\",\"nana dzhordzhadze\",\"french , georgian\",\"nominee\"],[\"1999 (72nd)\",\"here comes the dawn\",\"აქ თენდება\",\"zaza urushadze\",\"georgian\",\"not nominated\"],[\"2000 (73rd)\",\"27 missing kisses\",\"ზაფხული , ანუ 27 მოპარული კოცნა\",\"nana dzhordzhadze\",\"georgian , russian\",\"not nominated\"],[\"2001 (74th)\",\"migration of the angel\",\"ანგელოზის გადაფრენა\",\"nodar managadze\",\"georgian\",\"not nominated\"],[\"2005 (78th)\",\"tbilisi , tbilisi\",\"თბილისი - თბილისი\",\"levan zaqareishvili\",\"georgian\",\"not nominated\"],[\"2007 (80th)\",\"russian triangle\",\"რუსული სამკუთხედი\",\"aleko tsabadze\",\"russian\",\"not nominated\"],[\"2008 (81st)\",\"mediator\",\"მედიატორი\",\"dito tsintsadze\",\"english , german , russian\",\"not nominated\"],[\"2009 (82nd)\",\"the other bank\",\"გაღმა ნაპირი\",\"george ovashvili\",\"georgian , abkhaz , russian\",\"not nominated\"],[\"2010 (83rd)\",\"street days\",\"ქუჩის დღეები\",\"levan koguashvili\",\"georgian\",\"not nominated\"],[\"2011 (84th)\",\"chantrapas\",\"შანტრაპა\",\"otar iosseliani\",\"french , georgian\",\"not nominated\"],[\"2012 (85th)\",\"keep smiling\",\"გაიღიმეთ\",\"rusudan chkonia\",\"georgian\",\"not nominated\"]]\nQuestion = Is it true that the original title შეყვარებული მზარეულის 1001 რეცეპტი was released on the year 2009 (82nd)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year (ceremony)\")\n    original_titles = get_column_by_name(table_data, \"original title\")\n    for year, original_title in zip(years, original_titles):\n        if original_title == \"შეყვარებული მზარეულის 1001 რეცეპტი\":\n            answer = equal_to(year, \"2009 (82nd)\")\n            break\n    return answer\n\n### END"}
{"id": "77532ece-dd7c-4648-b4f8-e63c6dd08fd2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = x factor (czech tv series)\ntable_data = [[\"name\", \"category\", \"eliminated\", \"date\", \"special guest\"],[\"jiří zonyga\", \"24 + years\", \"winner\", \"june 1\", \"see the next line\"],[\"ondřej ruml\", \"24 + years\", \"final night\", \"june 1\", \"5angels , olympic\"],[\"all x\", \"vocal groups\", \"james bond night\", \"may 25\", \"mta + čhave jilestar\"],[\"martina pártlová\", \"24 + years\", \"american night\", \"may 18\", \"láďa kerndl and henry lee\"],[\"kamila nývltová\", \"15 - 24 years\", \"night of revived legends\", \"may 11\", \"zombies (dancing on michael jackson 's thriller)\"],[\"za 5 dvanáct\", \"vocal groups\", \"czechoslovak night\", \"may 4\", \"miro žbirka\"],[\"david gránský\", \"15 - 24 years\", \"banana night\", \"april 27\", \"karl wolf\"],[\"anna ungrová\", \"15 - 24 years\", \"night of broken hearts\", \"april 20\", \"helena zeťová\"],[\"pavlína ďuriačová\", \"15 - 24 years\", \"tribute to karel\", \"april 13\", \"karel gott\"],[\"divoký kočky + dante\", \"vocal groups\", \"popcorn night\", \"april 6\", \"iva frühlingová\"],[\"lukáš javůrek\", \"24 + years\", \"chocolate night\", \"march 30\", \"gipsycz\"],[\"romantic\", \"vocal groups\", \"fire night\", \"march 23\", \"shayne ward\"]]\nQuestion = Is it true that the final elimination and overall winner was announced on june 3rd?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    answer = equal_to(\"june 3\", dates[-1])\n    return answer\n\n### END"}
{"id": "2c381ace-9c70-4f80-9728-5a6a22f67737", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"game\", \"date\", \"home team\", \"result\", \"road team\"],[\"game 1\", \"april 14\", \"boston\", \"117 - 114\", \"los angeles\"],[\"game 2\", \"april 16\", \"boston\", \"113 - 106\", \"los angeles\"],[\"game 3\", \"april 17\", \"los angeles\", \"119 - 99\", \"boston\"],[\"game 4\", \"april 19\", \"los angeles\", \"105 - 108\", \"boston\"],[\"game 5\", \"april 21\", \"boston\", \"119 - 126\", \"los angeles\"],[\"game 6\", \"april 24\", \"los angeles\", \"109 - 112\", \"boston\"]]\nQuestion = Is it true that on april 21 , boston was the home team?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    home_teams = get_column_by_name(table_data, \"home team\")\n    answer = False\n    for date, home_team in zip(dates, home_teams):\n        if \"april 21\" in date.lower() and home_team.lower() == \"boston\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "c2eaa9f7-b07b-479b-b8eb-0617133b87a3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = westinghouse broadcasting\ntable_data = [[\"city of license / market\", \"station\", \"channel tv ( dt )\", \"years owned\", \"current affiliation\"],[\"san francisco - oakland - san jose\", \"kpix\", \"5 (29)\", \"1954 - 1995\", \"cbs owned - and - operated ( o&o )\"],[\"baltimore\", \"wjz - tv\", \"13 (13)\", \"1957 - 1995\", \"cbs owned - and - operated (o&o)\"],[\"boston\", \"wbz - tv\", \"4 (30)\", \"1948 - 1995\", \"cbs owned - and - operated (o&o)\"],[\"charlotte\", \"wpcq - tv (now wcnc - tv )\", \"36 (22)\", \"1980 - 1985\", \"nbc affiliate owned by belo corporation\"],[\"cleveland\", \"kyw - tv (now wkyc - tv )\", \"3 (17)\", \"1956 - 1965\", \"nbc affiliate owned by gannett company\"],[\"philadelphia\", \"wptz / kyw - tv\", \"3 (26)\", \"1953 - 1956 1965 - 1995\", \"cbs owned - and - operated (o&o)\"]]\nQuestion = Is it true that the tv channel 13 (13) has a current affiliation with the nbc affiliate owned by belo corporation?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    channels = get_column_by_name(table_data, \"channel tv ( dt )\")\n    affiliations = get_column_by_name(table_data, \"current affiliation\")\n    for channel, affiliation in zip(channels, affiliations):\n        if channel == \"13 (13)\":\n            answer = equal_to(affiliation, \"nbc affiliate owned by belo corporation\")\n            break \n    return answer\n\n### END"}
{"id": "241e1d23-f8e9-4f63-a396-f527039617a6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of radio stations in tamaulipas\ntable_data = [[\"frequency\", \"callsign\", \"brand\", \"city of license\", \"type\"],[\"580\", \"xehp\", \"la mas prendida\", \"ciudad victoria\", \"norteño\"],[\"640\", \"xetam\", \"la poderosa\", \"santa elena\", \"norteño\"],[\"970\", \"xebj - am\", \"radio 970\", \"ciudad victoria\", \"contemporary\"],[\"1340\", \"xerpv - am\", \"la cotorra\", \"ciudad victoria\", \"norteño\"],[\"1380\", \"xegw\", \"planeta w 1380\", \"ciudad victoria\", \"christian pop\"],[\"1480\", \"xevic\", \"radio tamaulipas\", \"ciudad victoria\", \"state government\"]]\nQuestion = Is it true that ciudad victoria is the city of license the xetam callsign?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    callsigns = get_column_by_name(table_data, \"callsign\")\n    cities_of_license = get_column_by_name(table_data, \"city of license\")\n    for callsign, city_of_license in zip(callsigns, cities_of_license):\n        if callsign.lower() == \"xetam\":\n            answer = equal_to(city_of_license, \"ciudad victoria\")\n            break \n    return answer\n\n### END"}
{"id": "059eb353-7534-427b-8354-01deade7eb0f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = good news network\ntable_data = [[\"call sign\", \"frequency mhz\", \"city of license\", \"erp w\", \"class\", \"fcc info\"],[\"wlpe\", \"91.7\", \"augusta , ga\", \"1150\", \"a\", \"fcc\"],[\"wgph\", \"91.5\", \"vidalia , ga\", \"31000\", \"c2\", \"fcc\"],[\"wwgf\", \"107.5\", \"donalsonville , ga\", \"6000\", \"a\", \"fcc\"],[\"wpwb\", \"90.5\", \"byron , ga\", \"16500\", \"c2\", \"fcc\"],[\"wlpf\", \"98.5\", \"ocilla , ga\", \"2300\", \"a\", \"fcc\"],[\"wziq\", \"106.5\", \"smithville , ga\", \"2450\", \"a\", \"fcc\"],[\"wlpg\", \"91.7\", \"florence , sc\", \"20000\", \"c2\", \"fcc\"],[\"wpma\", \"102.7\", \"greensboro , ga\", \"7500\", \"c3\", \"fcc\"],[\"wthp\", \"94.3\", \"gibson , ga\", \"6300\", \"c3\", \"fcc\"],[\"wlpt\", \"88.3\", \"jesup , ga\", \"20000\", \"c1\", \"fcc\"],[\"wsja\", \"91.3\", \"york , al\", \"5000\", \"a\", \"fcc\"],[\"wlgp\", \"100.3\", \"jacksonville , nc\", \"100000\", \"c1\", \"fcc\"]]\nQuestion = Is it true that call sign wsja has fcc under fcc info?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    call_signs = get_column_by_name(table_data, \"call sign\")\n    fcc_infos = get_column_by_name(table_data, \"fcc info\")\n    for call_sign, fcc_info in zip(call_signs, fcc_infos):\n        if equal_to(call_sign, \"wsja\"):\n            answer = equal_to(fcc_info, \"fcc\")\n            break \n    return answer\n\n### END"}
{"id": "98364db9-2e64-4492-a0b8-a2f23d4fd59e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1930 grand prix season\ntable_data = [[\"name\",\"circuit\",\"date\",\"winning driver\",\"winning constructor\",\"report\"],[\"circuit d'esterel plage\",\"saint - raphaël\",\"2 march\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"tripoli grand prix\",\"tripoli\",\"23 march\",\"baconin borzacchini\",\"maserati\",\"report\"],[\"monaco grand prix\",\"monte carlo\",\"6 april\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"alessandria circuit\",\"bordino\",\"20 april\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"oran grand prix\",\"arcole\",\"27 april\",\"jean de maleplane\",\"bugatti\",\"report\"],[\"targa florio\",\"madonie\",\"4 may\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"picardy grand prix\",\"péronne\",\"18 may\",\"max fourny\",\"bugatti\",\"report\"],[\"rome grand prix\",\"tre fontane\",\"25 may\",\"luigi arcangeli\",\"maserati\",\"report\"],[\"grand prix des frontières\",\"chimay\",\"9 june\",\"georges de marotte\",\"salmson\",\"report\"],[\"lyon grand prix\",\"quincieux\",\"15 june\",\"louis chiron\",\"bugatti\",\"report\"],[\"grand prix de la marne\",\"reims\",\"29 june\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"eifelrennen\",\"nürburgring\",\"20 july\",\"heinrich - joachim von morgen\",\"bugatti\",\"report\"],[\"dieppe grand prix\",\"dieppe\",\"20 july\",\"marcel lehoux\",\"bugatti\",\"report\"],[\"coppa ciano\",\"montenero\",\"3 august\",\"luigi fagioli\",\"maserati\",\"report\"],[\"dauphiné circuit\",\"grenoble\",\"10 august\",\"philippe étancelin\",\"bugatti\",\"report\"],[\"coppa acerbo\",\"pescara\",\"17 august\",\"achille varzi\",\"maserati\",\"report\"],[\"grand prix du comminges\",\"saint - gaudens\",\"17 august\",\"françois miquel\",\"bugatti\",\"report\"],[\"monza grand prix\",\"monza\",\"7 september\",\"achille varzi\",\"maserati\",\"report\"],[\"lviv grand prix\",\"lviv\",\"8 september\",\"henryk liefeldt\",\"austro daimler\",\"report\"],[\"masaryk circuit\",\"brno\",\"28 september\",\"hermann of leiningen\",\"bugatti\",\"report\"],[\"san sebastián grand prix\",\"lasarte\",\"5 october\",\"achille varzi\",\"maserati\",\"report\"]]\nQuestion = Is it true that the lyon grand prix was on june 15th , and the winning driver was louis chiron?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    dates = get_column_by_name(table_data, \"date\")\n    winning_drivers = get_column_by_name(table_data, \"winning driver\")\n    for name, date, winning_driver in zip(names, dates, winning_drivers):\n        if name.lower() == \"lyon grand prix\":\n            answer = equal_to(date, \"15 june\") and equal_to(winning_driver, \"louis chiron\")\n            break \n    return answer\n\n### END"}
{"id": "028cccc8-c772-4463-a1c8-4cf08f8f29f6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = julia glushko\ntable_data = [[\"outcome\",\"date\",\"tournament\",\"surface\",\"opponent in the final\",\"score\"],[\"winner\",\"november 11 , 2007\",\"mallorca , spain\",\"clay\",\"diana buzean\",\"6 - 0 , 6 - 0\"],[\"winner\",\"may 30 , 2010\",\"ra'anana , israel\",\"hard\",\"keren shlomo\",\"6 - 1 , 6 - 3\"],[\"winner\",\"october 24 , 2010\",\"akko , israel\",\"hard\",\"julia kimmelmann\",\"6 - 2 , 6 - 2\"],[\"winner\",\"november 7 , 2010\",\"kalgoorlie , australia\",\"hard\",\"isabella holland\",\"6 - 1 , 6 - 2\"],[\"winner\",\"november 28 , 2010\",\"traralgon , australia\",\"hard\",\"sacha jones\",\"2 - 6 , 7 - 5 , 7 - 6 (7 - 4)\"],[\"runner - up\",\"july 15 , 2012\",\"waterloo , canada\",\"clay\",\"sharon fichman\",\"6 - 3 , 6 - 2\"],[\"winner\",\"july 29 , 2012\",\"lexington , united states\",\"hard\",\"johanna konta\",\"6 - 3 , 6 - 0\"],[\"winner\",\"march 24 , 2013\",\"innisbrook resort and golf club , united states\",\"clay\",\"patricia mayr - achleitner\",\"2 - 6 , 6 - 0 , 6 - 4\"],[\"winner\",\"july 7 , 2013\",\"waterloo , canada\",\"clay\",\"gabriela dabrowski\",\"6 - 1 , 6 - 3\"]]\nQuestion = Is it true that johanna konta won over her opponent in final held march 24 2013?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent in the final\")\n    outcomes = get_column_by_name(table_data, \"outcome\")\n    answer = False\n    for date, opponent, outcome in zip(dates, opponents, outcomes):\n        if \"march 24 , 2013\" in date.lower() and \"johanna konta\" in opponent.lower():\n            if \"winner\" in outcome.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "a8adbb43-5e5f-41cf-8a20-58787ccc8006", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = los angeles lakers all - time roster\ntable_data = [[\"player\", \"nationality\", \"position\", \"from\", \"school / country\"],[\"bo lamar\", \"united states\", \"guard\", \"1977\", \"louisiana - lafayette\"],[\"jeff lamp\", \"united states\", \"guard / forward\", \"1987\", \"virginia\"],[\"mark landsberger\", \"united states\", \"forward / center\", \"1979\", \"arizona state\"],[\"stu lantz\", \"united states\", \"guard\", \"1974\", \"nebraska\"],[\"rudy larusso\", \"united states\", \"forward / center\", \"1959\", \"dartmouth\"],[\"butch lee\", \"united states\", \"guard\", \"1979\", \"marquette\"],[\"slick leonard\", \"united states\", \"guard\", \"1956\", \"indiana\"],[\"ronnie lester\", \"united states\", \"guard\", \"1984\", \"iowa\"],[\"stan love\", \"united states\", \"forward\", \"1973\", \"oregon\"],[\"clyde lovellette\", \"united states\", \"forward / center\", \"1953\", \"kansas\"],[\"maurice lucas\", \"united states\", \"forward / center\", \"1985\", \"marquette\"],[\"tyronn lue\", \"united states\", \"guard\", \"1998\", \"nebraska\"],[\"george lynch\", \"united states\", \"forward\", \"1993\", \"north carolina\"],[\"mike lynn\", \"united states\", \"forward\", \"1969\", \"ucla\"]]\nQuestion = Is it true that forward / center position is the player from 1987?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    positions = get_column_by_name(table_data, \"position\")\n    years = get_column_by_name(table_data, \"from\")\n    for position, year in zip(positions, years):\n        if equal_to(year, \"1987\"):\n            answer = equal_to(position, \"forward / center\")\n            break \n    return answer\n\n### END"}
{"id": "a0391df4-fe41-4b77-9f28-a36cc3eaa702", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1978 - 79 fa cup\ntable_data = [[\"tie no\",\"home team\",\"score\",\"away team\",\"date\"],[\"1\",\"liverpool\",\"3 - 0\",\"burnley\",\"28 february 1979\"],[\"2\",\"nottingham forest\",\"0 - 1\",\"arsenal\",\"26 february 1979\"],[\"3\",\"west bromwich albion\",\"1 - 1\",\"southampton\",\"10 march 1979\"],[\"replay\",\"southampton\",\"2 - 1\",\"west bromwich albion\",\"12 march 1979\"],[\"4\",\"ipswich town\",\"6 - 1\",\"bristol rovers\",\"26 february 1979\"],[\"5\",\"oldham athletic\",\"0 - 1\",\"tottenham hotspur\",\"28 february 1979\"],[\"6\",\"crystal palace\",\"0 - 1\",\"wolverhampton wanderers\",\"26 february 1979\"],[\"7\",\"aldershot\",\"2 - 2\",\"shrewsbury town\",\"20 february 1979\"],[\"replay\",\"shrewsbury town\",\"3 - 1\",\"aldershot\",\"26 february 1979\"],[\"8\",\"colchester united\",\"0 - 1\",\"manchester united\",\"20 february 1979\"]]\nQuestion = Is it true that tie number 7 occurred on february 20 , 1979?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    tie_nos = get_column_by_name(table_data, \"tie no\")\n    dates = get_column_by_name(table_data, \"date\")\n    for tie_no, date in zip(tie_nos, dates):\n        if tie_no == \"7\":\n            answer = equal_to(date, \"20 february 1979\")\n            break \n    return answer\n\n### END"}
{"id": "d4c182ef-b7de-40bd-afe6-533ed4d49d49", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of rna structure prediction software\ntable_data = [[\"name\", \"species specific\", \"intra - molecular structure\", \"comparative\", \"link\"],[\"diana - microt\", \"human , mouse\", \"no\", \"yes\", \"webserver\"],[\"microtar\", \"no\", \"no\", \"no\", \"sourcecode\"],[\"mitarget\", \"no\", \"no\", \"no\", \"webserver\"],[\"mirror\", \"no\", \"no\", \"no\", \"webserver\"],[\"pictar\", \"8 vertebrates\", \"no\", \"yes\", \"predictions\"],[\"pita\", \"no\", \"yes\", \"no\", \"executable , webserver , predictions\"],[\"rna22\", \"no\", \"no\", \"no\", \"predictions custom\"],[\"rnahybrid\", \"no\", \"no\", \"no\", \"sourcecode , webserver\"],[\"sylamer\", \"no\", \"no\", \"no\", \"sourcecode webserver\"],[\"taref\", \"yes\", \"no\", \"no\", \"server / sourcecode\"],[\"p - taref\", \"yes\", \"no\", \"no\", \"server / standalone\"],[\"targetscan\", \"vertebrates , flies , nematodes\", \"evaluated indirectly\", \"yes\", \"sourcecode , webserver\"]]\nQuestion = Is it true that mitarget / mirror of 8 vertebrates species specific and no intra - molecular structure has link sourcecode , webserver?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    species_specifics = get_column_by_name(table_data, \"species specific\")\n    intra_molecular_structures = get_column_by_name(table_data, \"intra - molecular structure\")\n    links = get_column_by_name(table_data, \"link\")\n    for name, species_specific, intra_molecular_structure, link in zip(names, species_specifics, intra_molecular_structures, links):\n        if name.lower() in [\"mitarget\", \"mirror\"] and species_specific.lower() == \"8 vertebrates\" and intra_molecular_structure.lower() == \"no\" and link.lower() == \"sourcecode , webserver\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "5b2513e4-f8b5-4151-bc20-10459df01f59", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1971 nhl amateur draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"15\", \"ken baird\", \"defence\", \"canada\", \"california golden seals\", \"flin flon bombers (wchl)\"],[\"16\", \"henry boucha\", \"centre\", \"united states\", \"detroit red wings\", \"us national development team\"],[\"17\", \"bobby lalonde\", \"centre\", \"canada\", \"vancouver canucks\", \"montreal junior canadiens (oha)\"],[\"18\", \"brian mckenzie\", \"left wing\", \"canada\", \"pittsburgh penguins\", \"st catharines black hawks (oha)\"],[\"19\", \"craig ramsay\", \"left wing\", \"canada\", \"buffalo sabres\", \"peterborough petes (oha)\"],[\"20\", \"larry robinson\", \"defence\", \"canada\", \"montreal canadiens\", \"kitchener rangers (oha)\"],[\"21\", \"rod norrish\", \"left wing\", \"canada\", \"minnesota north stars\", \"regina pats (wchl)\"],[\"22\", \"rick kehoe\", \"right wing\", \"canada\", \"toronto maple leafs\", \"hamilton red wings (oha)\"],[\"23\", \"dave fortier\", \"defence\", \"canada\", \"toronto maple leafs\", \"st catharines black hawks (oha)\"],[\"24\", \"michel deguise\", \"goaltender\", \"canada\", \"montreal canadiens\", \"sorel eperviers (qmjhl)\"],[\"25\", \"terry french\", \"centre\", \"canada\", \"montreal canadiens\", \"ottawa 67 's (oha)\"],[\"26\", \"dave kryskow\", \"left wing\", \"canada\", \"chicago black hawks\", \"edmonton oil kings (wchl)\"],[\"27\", \"tom williams\", \"left wing\", \"canada\", \"new york rangers\", \"hamilton red wings (oha)\"],[\"28\", \"curt ridley\", \"goaltender\", \"canada\", \"boston bruins\", \"portage terriers (mjhl)\"]]\nQuestion = Is it true that chicago black hawks play in the last position?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    nhl_teams = get_column_by_name(table_data, \"nhl team\")\n    answer = nhl_teams[-1].lower() == \"chicago black hawks\"\n    return answer\n\n### END"}
{"id": "d6008aca-9edc-4ef9-8299-360c6e551001", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = marsel ilhan\ntable_data = [[\"outcome\", \"date\", \"tournament\", \"surface\", \"opponent\", \"score\"],[\"runner - up\", \"august 20 , 2007\", \"karshi\", \"hard\", \"denis istomin\", \"1 - 6 , 4 - 6\"],[\"winner\", \"july 13 , 2008\", \"israel open\", \"hard\", \"ivo klec\", \"6 - 4 , 6 - 4\"],[\"runner - up\", \"may 17 , 2009\", \"izmir cup\", \"hard\", \"andrea stoppini\", \"6 - 7 , 2 - 6\"],[\"winner\", \"september 20 , 2010\", \"banja luka\", \"clay\", \"pere riba\", \"6 - 0 , 7 - 6 (7 - 4)\"],[\"runner - up\", \"september 26 , 2010\", \"izmir cup\", \"hard\", \"somdev devvarman\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 10 , 2011\", \"scheveningen\", \"clay\", \"steve darcis\", \"3 - 6 , 6 - 4 , 2 - 6\"],[\"runner - up\", \"september 25 , 2011\", \"izmir cup\", \"hard\", \"lukáš lacko\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 29 , 2012\", \"president 's cup (tennis)\", \"hard\", \"evgeny donskoy\", \"3 - 6 , 4 - 6\"]]\nQuestion = Is it true that in the september 20 , 2010 match the opponent was pere riba?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    answer = False\n    for date, opponent in zip(dates, opponents):\n        if \"september 20 , 2010\" in date.lower():\n            if \"pere riba\" in opponent.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "586016be-2c4a-433b-a954-7c30e769a0bd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"domestic freight\", \"domestic mail\", \"international freight\", \"international mail\", \"total freight and mail\", \"change\"],[\"2006\", \"132\", \"260\", \"2883\", \"3\", \"3278\", \"+ 9 , 8%\"],[\"2007\", \"50\", \"102\", \"3304\", \"3\", \"3459\", \"+ 5 , 5%\"],[\"2008\", \"43\", \"0\", \"4650\", \"1\", \"4695\", \"+ 35 , 7%\"],[\"2009\", \"157\", \"0\", \"6761\", \"0\", \"6919\", \"+ 47 , 4%\"],[\"2010\", \"72\", \"0\", \"6988\", \"0\", \"7061\", \"+ 2 , 1%\"],[\"2011\", \"1\", \"1\", \"7852\", \"0\", \"7853\", \"+ 11 , 2%\"]]\nQuestion = Is it true that the total number for domestic frieght is 1 when the domestic mail is 1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    domestic_freight = get_column_by_name(table_data, \"domestic freight\")\n    domestic_mail = get_column_by_name(table_data, \"domestic mail\")\n    for freight, mail in zip(domestic_freight, domestic_mail):\n        if equal_to(freight, \"1\") and equal_to(mail, \"1\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "d1ec4b59-cf98-4eaa-95c8-f549303429a1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sanya\ntable_data = [[\"english name\", \"simplified\", \"traditional\", \"pinyin\", \"area\", \"population\", \"density\"],[\"hexi district\", \"河西区\", \"河西區\", \"héxī qū\", \"10\", \"134026\", \"13403\"],[\"hedong district\", \"河东区\", \"河東區\", \"hédōng qū\", \"35\", \"147944\", \"4227\"],[\"haitangwan\", \"海棠湾镇\", \"海棠灣鎮\", \"hǎitángwān zhèn\", \"254\", \"44617\", \"176\"],[\"jiyang\", \"吉阳镇\", \"吉陽鎮\", \"jíyáng zhèn\", \"199\", \"92316\", \"464\"],[\"fenghuang\", \"凤凰镇\", \"鳳凰鎮\", \"fènghuáng zhèn\", \"487\", \"66801\", \"137\"],[\"yacheng\", \"崖城镇\", \"崖城鎮\", \"yáchéng zhèn\", \"383\", \"74779\", \"195\"],[\"tianya\", \"天涯镇\", \"天涯鎮\", \"tiānyá zhèn\", \"269\", \"34934\", \"130\"],[\"yucai\", \"育才镇\", \"育才鎮\", \"yùcái zhèn\", \"315\", \"17515\", \"56\"],[\"nantian farm\", \"国营南田农场\", \"國營南田農場\", \"guóyíng nántián nóngchǎng\", \"nd\", \"24280\", \"nd\"],[\"nanxin farm\", \"国营南新农场\", \"國營南新農場\", \"guóyíng nánxīn nóngchǎng\", \"nd\", \"16801\", \"nd\"],[\"licai farm\", \"国营立才农场\", \"國營立才農場\", \"guóyíng lìcái nóngchǎng\", \"nd\", \"16659\", \"nd\"]]\nQuestion = Is it true that the hexi district has a population density 176?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    english_names = get_column_by_name(table_data, \"english name\")\n    densities = get_column_by_name(table_data, \"density\")\n    for english_name, density in zip(english_names, densities):\n        if english_name.lower() == \"hexi district\":\n            answer = equal_to(int(density), 176)\n            break \n    return answer\n\n### END"}
{"id": "9f09aa4c-b05f-45dc-a277-e1499bdc1d99", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glamorgan county cricket club\ntable_data = [[\"score\", \"batsmen\", \"against\", \"location\", \"year\"],[\"374\", \"matthew elliott and steve james\", \"sussex\", \"colwyn bay\", \"2000\"],[\"252\", \"matthew maynard and david hemp\", \"northamptonshire\", \"sophia gardens\", \"2002\"],[\"313\", \"emrys davies and willie jones\", \"essex\", \"brentwood\", \"1948\"],[\"425\", \"adrian dale and viv richards\", \"middlesex\", \"sophia gardens\", \"1993\"],[\"264\", \"maurice robinson and stan montgomery\", \"hampshire\", \"bournemouth\", \"1949\"],[\"240\", \"jim allenby and mark wallace\", \"surrey\", \"the brit oval\", \"2009\"],[\"211\", \"tony cottey and ottis gibson\", \"leicestershire\", \"swansea\", \"1996\"],[\"202\", \"dai davies and joe hills\", \"sussex\", \"eastbourne\", \"1928\"],[\"203\", \"joe hills and johnnie clay\", \"worcestershire\", \"swansea\", \"1929\"],[\"143\", \"terry davies and simon daniels\", \"gloucestershire\", \"swansea\", \"1982\"]]\nQuestion = Is it true that the score in 1929 was 203?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    scores = get_column_by_name(table_data, \"score\")\n    years = get_column_by_name(table_data, \"year\")\n    for score, year in zip(scores, years):\n        if year == \"1929\":\n            answer = equal_to(score, \"203\")\n            break \n    return answer\n\n### END"}
{"id": "f33f8766-7b5a-4d67-991b-20f10a5ed8ae", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1981 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"footscray\", \"10.14 (74)\", \"hawthorn\", \"11.18 (84)\", \"western oval\", \"13789\", \"23 may 1981\"],[\"fitzroy\", \"13.15 (93)\", \"geelong\", \"16.18 (114)\", \"junction oval\", \"15604\", \"23 may 1981\"],[\"carlton\", \"25.22 (172)\", \"south melbourne\", \"11.7 (73)\", \"princes park\", \"22445\", \"23 may 1981\"],[\"melbourne\", \"10.10 (70)\", \"essendon\", \"14.20 (104)\", \"mcg\", \"31769\", \"23 may 1981\"],[\"north melbourne\", \"12.26 (98)\", \"collingwood\", \"16.15 (111)\", \"arden street oval\", \"24625\", \"23 may 1981\"],[\"richmond\", \"20.16 (136)\", \"st kilda\", \"15.15 (105)\", \"vfl park\", \"40240\", \"23 may 1981\"]]\nQuestion = Is it true that in mcg venue does melbourne play as the home team with a crowd of 41230?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    for home_team, venue, crowd in zip(home_teams, venues, crowds):\n        if home_team.lower() == \"melbourne\" and venue.lower() == \"mcg\":\n            answer = equal_to(int(crowd), 41230)\n            break \n    return answer\n\n### END"}
{"id": "68742557-9d87-4805-9206-3ec7bd750496", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mahmoud amnah\ntable_data = [[\"date\", \"venue\", \"score\", \"result\", \"competition\"],[\"08 oct 2004\", \"doha , qatar\", \"1 - 0\", \"2 - 1\", \"international friendly\"],[\"26 jan 2005\", \"kuwait city , kuwait\", \"1 - 1\", \"2 - 3\", \"international friendly\"],[\"04 dec 2005\", \"al - gharafa stadium , doha , qatar\", \"1 - 0\", \"2 - 2\", \"west asian games 2005\"],[\"10 dec 2005\", \"qatar sc stadium , doha , qatar\", \"1 - 0\", \"2 - 2\", \"west asian games 2005\"],[\"17 may 2008\", \"abbasiyyin stadium , damascus , syria\", \"1 - 0\", \"2 - 1\", \"international friendly\"]]\nQuestion = Is it true that kuwait city was the venue for 26 jan 2005?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    venues = get_column_by_name(table_data, \"venue\")\n    for date, venue in zip(dates, venues):\n        if date == \"26 jan 2005\":\n            answer = equal_to(venue, \"kuwait city , kuwait\")\n            break \n    return answer\n\n### END"}
{"id": "3eb178c6-3d9e-4996-b1b0-16cdfa3c71af", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = türk telekom arena\ntable_data = [[\"project\", \"year\", \"location\", \"capacity\", \"suites\", \"architect\", \"cost\"],[\"faruk süren project\", \"1997 - 2001\", \"mecidiyeköy\", \"40482\", \"125 + 72 boxes without outside seating\", \"bbb architects\", \"118.5 million ( in 2014 dollars)\"],[\"mehmet cansun project\", \"2001\", \"mecidiyeköy\", \"35000\", \"132\", \"gs member architecture group\", \"35 million ( in 2014 dollars)\"],[\"özhan canaydın : back to süren 's project\", \"2002 - 2005\", \"aslantepe\", \"40482\", \"125\", \"bbb architects\", \"90 million ( in 2014 dollars)\"],[\"eren talu bidding project\", \"2007\", \"aslantepe\", \"52000\", \"150\", \"populous\", \"n / a\"],[\"özhan canaydın project\", \"2007\", \"aslantepe\", \"52652\", \"157\", \"asp stuttgart\", \"250 million ( in 2014 dollars)\"]]\nQuestion = Is it true that the average capacity is 40482 for 150 suites?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    capacities = get_column_by_name(table_data, \"capacity\")\n    suites = get_column_by_name(table_data, \"suites\")\n    for capacity, suite in zip(capacities, suites):\n        if \"150\" in suite:\n            answer = equal_to(int(capacity), 40482)\n            break\n    return answer\n\n### END"}
{"id": "31d93f30-221b-4ad4-bdb1-ac02f9b434d9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = .38 special\ntable_data = [[\"cartridge\", \"bullet weight\", \"muzzle velocity\", \"muzzle energy\", \"max pressure\"],[\".38 short colt\", \"gr (g)\", \"ft / s (m / s)\", \"181ft lbf (245 j)\", \"7500 cup\"],[\".38 long colt\", \"gr (g)\", \"ft / s (m / s)\", \"201ft lbf (273 j)\", \"12000 cup\"],[\".38 s&w\", \"gr (g)\", \"ft / s (m / s)\", \"206ft lbf (279 j)\", \"14500 psi\"],[\".38 s&w special\", \"gr (g)\", \"ft / s (m / s)\", \"310ft lbf (420 j)\", \"17000 psi\"],[\".38 special + p\", \"gr (g)\", \"ft / s (m / s)\", \"351ft lbf (476 j)\", \"20000 psi\"],[\".38 special + p +\", \"gr (g)\", \"ft / s (m / s)\", \"295ft lbf (400 j)\", \">20000 psi\"],[\".380 acp\", \"gr (g)\", \"ft / s (m / s)\", \"178ft lbf (241 j)\", \"21500 psi\"],[\"9x19 mm parabellum\", \"gr (g)\", \"ft / s (m / s)\", \"420ft lbf (570 j)\", \"39200 psi\"],[\"9x19 mm parabellum\", \"gr (g)\", \"ft / s (m / s)\", \"383ft lbf (520 j)\", \"39200 psi\"],[\"9x18 mm makarov\", \"gr (g)\", \"ft / s (m / s)\", \"231ft lbf (313 j)\", \"23206 psi\"],[\".38 super\", \"grains (g)\", \"ft / s (m / s)\", \"468ft lbf (634 j)\", \"36500 psi\"],[\".357 magnum\", \"grains (g)\", \"ft / s (m / s)\", \"639ft lbf (866 j)\", \"35000 psi\"],[\".357 sig\", \"grains (g)\", \"ft / s (m / s)\", \"506ft lbf (686 j)\", \"40000 psi\"]]\nQuestion = Is it true that the 357 sig cartridge has a muzzle energy of 686 joules with a maximum pressure of 40000 psi?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    cartridges = get_column_by_name(table_data, \"cartridge\")\n    muzzle_energies = get_column_by_name(table_data, \"muzzle energy\")\n    max_pressures = get_column_by_name(table_data, \"max pressure\")\n    for cartridge, muzzle_energy, max_pressure in zip(cartridges, muzzle_energies, max_pressures):\n        if cartridge.lower() == \".357 sig\":\n            answer = equal_to(muzzle_energy, \"506ft lbf (686 j)\") and equal_to(max_pressure, \"40000 psi\")\n            break \n    return answer\n\n### END"}
{"id": "02e28a43-4dc0-4f5b-b42e-85d6e7870c36", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"title\", \"from album\", \"label\", \"label - nr\"],[\"1962\", \"tonight / sinnin' sam\", \"lookin' ahead\", \"pacific jazz\", \"x - 340\"],[\"1962\", \"the young rabbits / song of india\", \"lookin' ahead\", \"pacific jazz\", \"x - 342\"],[\"1962\", \"congolese sermon / weather beat\", \"(only on 45)\", \"pacific jazz\", \"x - 357\"],[\"1963\", \"no name samba / tough talk\", \"tough talk\", \"world pacific\", \"x - 371\"],[\"1963\", \"turkish black / boopie\", \"tough talk\", \"world pacific\", \"x - 388\"],[\"1963\", \"spanish castles / bluesette\", \"jazz waltz (w les mccann)\", \"world pacific\", \"406\"],[\"1964\", \"heat wave / on broadway\", \"heat wave\", \"world pacific\", \"401\"],[\"1964\", \"i remember tomorrow / long john\", \"stretchin' out\", \"world pacific\", \"412\"],[\"1965\", \"tough talk / the thing\", \"the thing\", \"world pacific\", \"77800\"],[\"1965\", \"aqua dulce / soul bourgeoisie\", \"chile con soul\", \"world pacific\", \"77806\"],[\"1966\", \"scratch / uptight\", \"talk that talk\", \"pacific jazz\", \"88125\"],[\"1968\", \"ooga - boo - ga - loo / eleanor rigby\", \"lighthouse '68\", \"pacific jazz\", \"88144\"],[\"1968\", \"hey jude / love and peace\", \"powerhouse\", \"pacific jazz\", \"88146\"],[\"1969\", \"get back / willie and laura mae jones\", \"lighthouse '69\", \"word pacific jazz\", \"88153\"],[\"1970\", \"way back home / jackson\", \"old socks , new shoes\", \"chisa\", \"c - 8010\"]]\nQuestion = Is it true that hey jude / love and peace is from the album chile con soul and has a record label - nr of 77806?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    albums = get_column_by_name(table_data, \"from album\")\n    label_nrs = get_column_by_name(table_data, \"label - nr\")\n    for title, album, label_nr in zip(titles, albums, label_nrs):\n        if title.lower() == \"hey jude / love and peace\":\n            answer = equal_to(album, \"chile con soul\") and equal_to(label_nr, \"77806\")\n            break \n    return answer\n\n### END"}
{"id": "3f7068aa-6eb4-44cb-9fb1-b513382ab99c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the howie carr show\ntable_data = [[\"calls\",\"frequency\",\"branding\",\"format\",\"timeslot\",\"group owner\"],[\"wgan\",\"560 khz\",\"news radio 560 wgan\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"whyn\",\"560 khz\",\"news / talk 560 whyn\",\"news / talk\",\"live 3p - 7p\",\"clear channel communications\"],[\"wvmt\",\"620 khz\",\"news / talk 620 wvmt\",\"news / talk\",\"live 3p - 7p\",\"sison broadcasting\"],[\"wrko\",\"680 khz\",\"am 680 wrko\",\"news / talk\",\"live 3p - 7p\",\"entercom\"],[\"wcrn\",\"830 khz\",\"wcrn 830 true talk\",\"news / talk\",\"live 3p - 7p\",\"carter broadcasting\"],[\"wkbk\",\"1290 khz\",\"1290 wkbk w281au 104.1\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"wegp\",\"1390 khz\",\"wegp 1390 am - the talk of the county\",\"news / talk\",\"live 3p - 6p\",\"decelles / media , inc\"],[\"wxtk\",\"95.1 mhz\",\"news radio 95 wxtk\",\"news / talk\",\"live 3p - 7p\",\"qantam of cape cod , llc\"],[\"wntk - fm\",\"99.7 mhz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wuvr\",\"1490 khz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wvom - fm / wvqm\",\"103.9 / 101.3 mhz\",\"the voice of maine\",\"news / talk\",\"live 3p - 7p\",\"blueberry broadcasting\"]]\nQuestion = Is it true that news / talk is the format for the frequency of 1290 khz owned by saga communications?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    formats = get_column_by_name(table_data, \"format\")\n    owners = get_column_by_name(table_data, \"group owner\")\n    for frequency, format, owner in zip(frequencies, formats, owners):\n        if frequency.lower() == \"1290 khz\" and owner.lower() == \"saga communications\":\n            answer = equal_to(format, \"news / talk\")\n            break \n    return answer\n\n### END"}
{"id": "23da4a24-e6fd-421a-b44c-5837bd4a3bec", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1925 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"8.11 (59)\", \"st kilda\", \"8.8 (56)\", \"glenferrie oval\", \"10000\", \"8 august 1925\"],[\"geelong\", \"11.20 (86)\", \"richmond\", \"4.8 (32)\", \"corio oval\", \"13500\", \"8 august 1925\"],[\"fitzroy\", \"17.18 (120)\", \"north melbourne\", \"11.8 (74)\", \"brunswick street oval\", \"7000\", \"8 august 1925\"],[\"south melbourne\", \"13.14 (92)\", \"footscray\", \"12.15 (87)\", \"lake oval\", \"15000\", \"8 august 1925\"],[\"melbourne\", \"7.10 (52)\", \"collingwood\", \"9.11 (65)\", \"mcg\", \"33642\", \"8 august 1925\"],[\"essendon\", \"15.11 (101)\", \"carlton\", \"8.14 (62)\", \"windy hill\", \"10000\", \"8 august 1925\"]]\nQuestion = Is it true that melbourne is the home team that scored 8.10 (52)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    for home_team, home_team_score in zip(home_teams, home_team_scores):\n        if home_team.lower() == \"melbourne\":\n            answer = equal_to(home_team_score, \"8.10 (52)\")\n            break \n    return answer\n\n### END"}
{"id": "0eccf669-7e1b-4a72-9aeb-826c4f31aec5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = savannah braves\ntable_data = [[\"year\", \"record\", \"finish\", \"manager\", \"playoffs\"],[\"1971\", \"57 - 84\", \"5th\", \"eddie haas\", \"not eligible\"],[\"1972\", \"80 - 59\", \"2nd\", \"clint courtney\", \"not eligible\"],[\"1973\", \"71 - 68\", \"3rd\", \"clint courtney (34 - 23) / tommie aaron (37 - 45)\", \"not eligible\"],[\"1974\", \"73 - 65\", \"4th\", \"tommie aaron\", \"not eligible\"],[\"1975\", \"70 - 64\", \"3rd (t)\", \"tommie aaron\", \"not eligible\"],[\"1976\", \"69 - 71\", \"5th\", \"tommie aaron\", \"not eligible\"],[\"1977\", \"77 - 63\", \"3rd\", \"gene hassell\", \"lost in 1st round\"],[\"1978\", \"72 - 72\", \"4th\", \"bobby dews\", \"lost league finals\"],[\"1979\", \"60 - 83\", \"10th\", \"eddie haas\", \"not eligible\"],[\"1980\", \"77 - 67\", \"3rd\", \"eddie haas\", \"lost in 1st round\"],[\"1981\", \"70 - 70\", \"5th\", \"andy gilbert\", \"lost in 1st round\"],[\"1982\", \"69 - 75\", \"8th\", \"andy gilbert\", \"not eligible\"],[\"1983\", \"81 - 64\", \"3rd\", \"bobby dews\", \"lost in 1st round\"]]\nQuestion = Is it true that clint courtney was the manager when record 77 - 63 / 77 - 67 / 81 - 64 had a finish of 3rd and year was 1975?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    records = get_column_by_name(table_data, \"record\")\n    finishes = get_column_by_name(table_data, \"finish\")\n    managers = get_column_by_name(table_data, \"manager\")\n    answer = False\n    for year, record, finish, manager in zip(years, records, finishes, managers):\n        if year == \"1975\" and record in [\"77 - 63\", \"77 - 67\", \"81 - 64\"] and finish == \"3rd\" and \"clint courtney\" in manager.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "cc4d2b0b-de0e-4ee7-ac02-9378cec3222b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"singular abbreviation\", \"singular word\", \"plural abbreviation\", \"plural word\", \"discipline\"],[\"d\", \"didot\", \"dd\", \"didots\", \"typography\"],[\"f\", \"following line or page\", \"ff\", \"following lines or pages\", \"notes\"],[\"f\", \"folio\", \"ff\", \"folios\", \"literature\"],[\"h\", \"hand\", \"hh\", \"hands\", \"horse height\"],[\"l\", \"line\", \"ll\", \"lines\", \"notes\"],[\"ms\", \"manuscript\", \"mss\", \"manuscripts\", \"notes\"],[\"op\", \"opus\", \"opp\", \"opera\", \"notes\"],[\"p\", \"page\", \"pp\", \"pages\", \"notes\"],[\"q\", \"quarto\", \"qq\", \"quartos\", \"literature\"],[\"s (or §)\", \"section\", \"ss (or §§)\", \"sections\", \"notes\"],[\"v\", \"volume\", \"vv\", \"volumes\", \"notes\"]]\nQuestion = Is it true that the plural word of hands uses the singular word h?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    singular_words = get_column_by_name(table_data, \"singular word\")\n    plural_words = get_column_by_name(table_data, \"plural word\")\n    answer = False\n    for singular_word, plural_word in zip(singular_words, plural_words):\n        if singular_word.lower() == \"h\" and plural_word.lower() == \"hands\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "532c0626-092a-4ca8-92c2-d4dba9ea0b0d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1968 houston oilers season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 9 , 1968\", \"kansas city chiefs\", \"l 26 - 21\", \"45083\"],[\"2\", \"september 14 , 1968\", \"miami dolphins\", \"w 24 - 10\", \"40067\"],[\"3\", \"september 21 , 1968\", \"san diego chargers\", \"l 30 - 14\", \"46217\"],[\"4\", \"september 29 , 1968\", \"oakland raiders\", \"l 24 - 15\", \"46098\"],[\"5\", \"october 6 , 1968\", \"miami dolphins\", \"l 24 - 7\", \"36109\"],[\"6\", \"october 13 , 1968\", \"boston patriots\", \"w 16 - 0\", \"32502\"],[\"7\", \"october 20 , 1968\", \"new york jets\", \"l 20 - 14\", \"51710\"],[\"8\", \"october 27 , 1968\", \"buffalo bills\", \"w 30 - 7\", \"34339\"],[\"9\", \"november 3 , 1968\", \"cincinnati bengals\", \"w 27 - 17\", \"24012\"],[\"10\", \"november 10 , 1968\", \"new york jets\", \"l 26 - 7\", \"60242\"],[\"11\", \"november 17 , 1968\", \"denver broncos\", \"w 38 - 17\", \"36075\"],[\"12\", \"november 28 , 1968\", \"kansas city chiefs\", \"l 24 - 10\", \"48493\"],[\"13\", \"december 7 , 1968\", \"buffalo bills\", \"w 35 - 6\", \"34110\"],[\"14\", \"december 15 , 1968\", \"boston patriots\", \"w 45 - 17\", \"34198\"]]\nQuestion = Is it true that 51710 people attended the home game against the new york jets?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    for opponent, attendance in zip(opponents, attendances):\n        if opponent.lower() == \"new york jets\":\n            answer = equal_to(attendance, \"51710\")\n            break \n    return answer\n\n### END"}
{"id": "f68e757a-471b-43ff-b07c-8407953a07b3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1928 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"fitzroy\", \"17.11 (113)\", \"south melbourne\", \"11.11 (77)\", \"brunswick street oval\", \"8000\", \"2 june 1928\"],[\"carlton\", \"12.12 (84)\", \"collingwood\", \"13.9 (87)\", \"princes park\", \"30000\", \"2 june 1928\"],[\"north melbourne\", \"5.7 (37)\", \"melbourne\", \"14.16 (100)\", \"arden street oval\", \"9000\", \"2 june 1928\"],[\"richmond\", \"12.21 (93)\", \"geelong\", \"13.12 (90)\", \"punt road oval\", \"10000\", \"2 june 1928\"],[\"st kilda\", \"9.17 (71)\", \"footscray\", \"11.6 (72)\", \"junction oval\", \"12000\", \"2 june 1928\"],[\"hawthorn\", \"7.15 (57)\", \"essendon\", \"13.20 (98)\", \"glenferrie oval\", \"6000\", \"2 june 1928\"]]\nQuestion = Is it true that the crowd size for the match played at junction oval is the smallest?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef is_smallest(num, num_list):\n    return num == min(num_list)\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"venue\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    crowds = list(map(int, crowds))\n    for venue, crowd in zip(venues, crowds):\n        if venue.lower() == \"junction oval\":\n            answer = is_smallest(crowd, crowds)\n            break \n    return answer\n\n### END"}
{"id": "4ff40f11-933a-44df-8093-9498bfe5ef20", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states house of representatives elections , 2010\ntable_data = [[\"district\",\"incumbent\",\"party\",\"first elected\",\"result\",\"candidates\"],[\"pennsylvania 1\",\"bob brady\",\"democratic\",\"1998\",\"re - elected\",\"bob brady (d) unopposed\"],[\"pennsylvania 2\",\"chaka fattah\",\"democratic\",\"1994\",\"re - elected\",\"chaka fattah (d) 89.3% rick hellberg (r) 10.7%\"],[\"pennsylvania 3\",\"kathy dahlkemper\",\"democratic\",\"2008\",\"lost re - election republican gain\",\"mike kelly (r) 55.7% kathy dahlkemper (d) 44.3%\"],[\"pennsylvania 4\",\"jason altmire\",\"democratic\",\"2006\",\"re - elected\",\"jason altmire (d) 50.8% keith rothfuss (r) 49.2%\"],[\"pennsylvania 6\",\"jim gerlach\",\"republican\",\"2002\",\"re - elected\",\"jim gerlach (r) 57.1% manan trivedi (d) 42.9%\"],[\"pennsylvania 9\",\"bill shuster\",\"republican\",\"2001\",\"re - elected\",\"bill shuster (r) 73.1% tom conners (d) 26.9%\"],[\"pennsylvania 10\",\"chris carney\",\"democratic\",\"2006\",\"lost re - election republican gain\",\"tom marino (r) 55.2% chris carney (d) 44.8%\"],[\"pennsylvania 11\",\"paul kanjorski\",\"democratic\",\"1984\",\"lost re - election republican gain\",\"lou barletta (r) 54.7% paul kanjorski (d) 45.3%\"],[\"pennsylvania 12\",\"mark critz\",\"democratic\",\"2010\",\"re - elected\",\"mark critz (d) 50.8% tim burns (r) 49.2%\"],[\"pennsylvania 13\",\"allyson schwartz\",\"democratic\",\"2004\",\"re - elected\",\"allyson schwartz (d) 56.3% dee adcock (r) 43.7%\"],[\"pennsylvania 16\",\"joe pitts\",\"republican\",\"1996\",\"re - elected\",\"joe pitts (r) 65.4% lois herr (d) 34.6%\"],[\"pennsylvania 17\",\"tim holden\",\"democratic\",\"1992\",\"re - elected\",\"tim holden (d) 55.5% dave argall (r) 44.5%\"]]\nQuestion = Is it true that when mark critz (d) 50.8% tim burns (r) 49.2% are the candidates then the party is republican?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    parties = get_column_by_name(table_data, \"party\")\n    candidates = get_column_by_name(table_data, \"candidates\")\n    for party, candidate in zip(parties, candidates):\n        if equal_to(candidate, \"mark critz (d) 50.8% tim burns (r) 49.2%\"):\n            answer = equal_to(party, \"republican\")\n            break \n    return answer\n\n### END"}
{"id": "209a2d24-b898-430e-ab56-97a90c0310c6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1971 nhl amateur draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"15\", \"ken baird\", \"defence\", \"canada\", \"california golden seals\", \"flin flon bombers (wchl)\"],[\"16\", \"henry boucha\", \"centre\", \"united states\", \"detroit red wings\", \"us national development team\"],[\"17\", \"bobby lalonde\", \"centre\", \"canada\", \"vancouver canucks\", \"montreal junior canadiens (oha)\"],[\"18\", \"brian mckenzie\", \"left wing\", \"canada\", \"pittsburgh penguins\", \"st catharines black hawks (oha)\"],[\"19\", \"craig ramsay\", \"left wing\", \"canada\", \"buffalo sabres\", \"peterborough petes (oha)\"],[\"20\", \"larry robinson\", \"defence\", \"canada\", \"montreal canadiens\", \"kitchener rangers (oha)\"],[\"21\", \"rod norrish\", \"left wing\", \"canada\", \"minnesota north stars\", \"regina pats (wchl)\"],[\"22\", \"rick kehoe\", \"right wing\", \"canada\", \"toronto maple leafs\", \"hamilton red wings (oha)\"],[\"23\", \"dave fortier\", \"defence\", \"canada\", \"toronto maple leafs\", \"st catharines black hawks (oha)\"],[\"24\", \"michel deguise\", \"goaltender\", \"canada\", \"montreal canadiens\", \"sorel eperviers (qmjhl)\"],[\"25\", \"terry french\", \"centre\", \"canada\", \"montreal canadiens\", \"ottawa 67 's (oha)\"],[\"26\", \"dave kryskow\", \"left wing\", \"canada\", \"chicago black hawks\", \"edmonton oil kings (wchl)\"],[\"27\", \"tom williams\", \"left wing\", \"canada\", \"new york rangers\", \"hamilton red wings (oha)\"],[\"28\", \"curt ridley\", \"goaltender\", \"canada\", \"boston bruins\", \"portage terriers (mjhl)\"]]\nQuestion = Is it true that dave fortier 's pick number is 23?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    picks = get_column_by_name(table_data, \"pick\")\n    for player, pick in zip(players, picks):\n        if player.lower() == \"dave fortier\":\n            answer = equal_to(pick, \"23\")\n            break \n    return answer\n\n### END"}
{"id": "02c2003a-7ead-4c65-b3c0-31cc5dcbbdb4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = usa today all - usa high school baseball team\ntable_data = [[\"player\", \"position\", \"school\", \"hometown\", \"mlb draft\"],[\"delmon young\", \"outfielder\", \"camarillo high school\", \"camarillo , ca\", \"1st round - 1st pick of 2003 draft ( devil rays )\"],[\"chris lubanski\", \"outfielder\", \"kennedy - kenrick catholic high school\", \"norristown , pa\", \"1st round - 5th pick of 2003 draft ( royals )\"],[\"lastings milledge\", \"outfielder\", \"lakewood ranch high school\", \"bradenton , fl\", \"1st round - 12th pick of 2003 draft ( mets )\"],[\"brandon wood\", \"infielder\", \"horizon high school\", \"scottsdale , az\", \"1st round - 23rd pick of 2003 draft ( angels )\"],[\"john danks\", \"pitcher\", \"round rock high school\", \"round rock , tx\", \"1st round - 9th pick of 2003 draft ( rangers )\"],[\"jonathan fulton\", \"infielder\", \"george washington high school\", \"danville , va\", \"3rd round - 83rd pick of 2003 draft ( marlins )\"],[\"ian stewart\", \"infielder\", \"la quinta high school\", \"westminster , ca\", \"1st round - 10th pick of 2003 draft ( rockies )\"],[\"jeff allison\", \"pitcher\", \"veterans memorial high school\", \"peabody , ma\", \"1st round - 16th pick of 2003 draft ( marlins )\"],[\"daric barton\", \"catcher\", \"marina high school\", \"huntington beach , ca\", \"1st round - 28th pick of 2003 draft ( cardinals )\"],[\"eric duncan\", \"infielder\", \"seton hall preparatory school\", \"west orange , nj\", \"1st round - 27th pick of 2003 draft ( yankees )\"]]\nQuestion = Is it true that the draft status of the person who attended seton hall preparatory school was drafted by the same team as brandon wood?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef get_team_from_draft_status(draft_status):\n    return draft_status.split('(')[-1].split(')')[0].strip()\n\ndef solution(table_data):\n    schools = get_column_by_name(table_data, \"school\")\n    draft_statuses = get_column_by_name(table_data, \"mlb draft\")\n    for school, draft_status in zip(schools, draft_statuses):\n        if \"seton hall preparatory school\" in school.lower():\n            seton_hall_team = get_team_from_draft_status(draft_status)\n        if \"horizon high school\" in school.lower():\n            brandon_wood_team = get_team_from_draft_status(draft_status)\n    answer = seton_hall_team == brandon_wood_team\n    return answer\n\n### END"}
{"id": "7ec5c9a9-37e4-403e-b52d-85a66ef62778", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states house of representatives elections , 2010\ntable_data = [[\"district\", \"incumbent\", \"party\", \"first elected\", \"result\", \"candidates\"],[\"pennsylvania 1\", \"bob brady\", \"democratic\", \"1998\", \"re - elected\", \"bob brady (d) unopposed\"],[\"pennsylvania 2\", \"chaka fattah\", \"democratic\", \"1994\", \"re - elected\", \"chaka fattah (d) 89.3% rick hellberg (r) 10.7%\"],[\"pennsylvania 3\", \"kathy dahlkemper\", \"democratic\", \"2008\", \"lost re - election republican gain\", \"mike kelly (r) 55.7% kathy dahlkemper (d) 44.3%\"],[\"pennsylvania 4\", \"jason altmire\", \"democratic\", \"2006\", \"re - elected\", \"jason altmire (d) 50.8% keith rothfuss (r) 49.2%\"],[\"pennsylvania 6\", \"jim gerlach\", \"republican\", \"2002\", \"re - elected\", \"jim gerlach (r) 57.1% manan trivedi (d) 42.9%\"],[\"pennsylvania 9\", \"bill shuster\", \"republican\", \"2001\", \"re - elected\", \"bill shuster (r) 73.1% tom conners (d) 26.9%\"],[\"pennsylvania 10\", \"chris carney\", \"democratic\", \"2006\", \"lost re - election republican gain\", \"tom marino (r) 55.2% chris carney (d) 44.8%\"],[\"pennsylvania 11\", \"paul kanjorski\", \"democratic\", \"1984\", \"lost re - election republican gain\", \"lou barletta (r) 54.7% paul kanjorski (d) 45.3%\"],[\"pennsylvania 12\", \"mark critz\", \"democratic\", \"2010\", \"re - elected\", \"mark critz (d) 50.8% tim burns (r) 49.2%\"],[\"pennsylvania 13\", \"allyson schwartz\", \"democratic\", \"2004\", \"re - elected\", \"allyson schwartz (d) 56.3% dee adcock (r) 43.7%\"],[\"pennsylvania 16\", \"joe pitts\", \"republican\", \"1996\", \"re - elected\", \"joe pitts (r) 65.4% lois herr (d) 34.6%\"],[\"pennsylvania 17\", \"tim holden\", \"democratic\", \"1992\", \"re - elected\", \"tim holden (d) 55.5% dave argall (r) 44.5%\"]]\nQuestion = Is it true that when chris carney (d) is the incumbent then the results are lost re - election republican gain?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    incumbents = get_column_by_name(table_data, \"incumbent\")\n    results = get_column_by_name(table_data, \"result\")\n    for incumbent, result in zip(incumbents, results):\n        if equal_to(incumbent, \"chris carney\"):\n            answer = equal_to(result, \"lost re - election republican gain\")\n            break\n    return answer\n\n### END"}
{"id": "2a794243-223c-4386-a895-f6033afe2015", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1974 formula one season\ntable_data = [[\"race\",\"circuit\",\"date\",\"pole position\",\"fastest lap\",\"winning driver\",\"constructor\",\"tyre\",\"report\"],[\"argentine grand prix\",\"buenos aires\",\"13 january\",\"ronnie peterson\",\"clay regazzoni\",\"denny hulme\",\"mclaren - ford\",\"g\",\"report\"],[\"brazilian grand prix\",\"interlagos\",\"27 january\",\"emerson fittipaldi\",\"clay regazzoni\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"south african grand prix\",\"kyalami\",\"30 march\",\"niki lauda\",\"carlos reutemann\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"],[\"spanish grand prix\",\"jarama\",\"28 april\",\"niki lauda\",\"niki lauda\",\"niki lauda\",\"ferrari\",\"g\",\"report\"],[\"belgian grand prix\",\"nivelles - baulers\",\"12 may\",\"clay regazzoni\",\"denny hulme\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"monaco grand prix\",\"monaco\",\"26 may\",\"niki lauda\",\"ronnie peterson\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"swedish grand prix\",\"anderstorp\",\"9 june\",\"patrick depailler\",\"patrick depailler\",\"jody scheckter\",\"tyrrell - ford\",\"g\",\"report\"],[\"dutch grand prix\",\"zandvoort\",\"23 june\",\"niki lauda\",\"ronnie peterson\",\"niki lauda\",\"ferrari\",\"g\",\"report\"],[\"french grand prix\",\"dijon - prenois\",\"7 july\",\"niki lauda\",\"jody scheckter\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"british grand prix\",\"brands hatch\",\"20 july\",\"niki lauda\",\"niki lauda\",\"jody scheckter\",\"tyrrell - ford\",\"g\",\"report\"],[\"german grand prix\",\"nürburgring\",\"4 august\",\"niki lauda\",\"jody scheckter\",\"clay regazzoni\",\"ferrari\",\"g\",\"report\"],[\"austrian grand prix\",\"österreichring\",\"18 august\",\"niki lauda\",\"clay regazzoni\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"],[\"italian grand prix\",\"monza\",\"8 september\",\"niki lauda\",\"carlos pace\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"canadian grand prix\",\"mosport park\",\"22 september\",\"emerson fittipaldi\",\"niki lauda\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"united states grand prix\",\"watkins glen\",\"6 october\",\"carlos reutemann\",\"carlos pace\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"]]\nQuestion = Is it true that ronnie peterson was the winning driver at the monza circuit?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    circuits = get_column_by_name(table_data, \"circuit\")\n    winning_drivers = get_column_by_name(table_data, \"winning driver\")\n    answer = False\n    for circuit, winning_driver in zip(circuits, winning_drivers):\n        if \"monza\" in circuit.lower() and \"ronnie peterson\" in winning_driver.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "e4a3c35d-1f52-4ec1-98fc-f55ca5483dce", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\", \"10:30\"],[\"heartland\", \"heartland\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"cbc news : sunday night\", \"cbc news : sunday night\"],[\"law and order : criminal intent\", \"law and order : criminal intent\", \"cold case\", \"cold case\", \"desperate housewives\", \"desperate housewives\", \"dirty sexy money\", \"dirty sexy money\"],[\"the simpsons\", \"da kink in my hair\", \"the simpsons\", \"king of the hill\", \"family guy\", \"american dad!\", \"brothers & sisters\", \"brothers & sisters\"],[\"america 's funniest home videos\", \"america 's funniest home videos\", \"kyle xy\", \"kyle xy\", \"america 's next top model\", \"america 's next top model\", \"stargate sg - 1\", \"stargate sg - 1\"],[\"everybody hates chris\", \"speakers' corner\", \"behind the movies\", \"bravo!fact presents\", \"great movies\", \"great movies\", \"great movies\", \"great movies\"],[\"viva laughlin\", \"viva laughlin\", \"extreme makeover : home edition\", \"extreme makeover : home edition\", \"e! countdowns\", \"e! countdowns\", \"e! live encore\", \"e! live encore\"],[\"découverte\", \"et dieu créa laflaque\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"le téléjournal\", \"le téléjournal\"],[\"le banquier / dieu merci!\", \"le banquier / dieu merci!\", \"occupation double\", \"occupation double\", \"occupation double\", \"occupation double\", \"le tva week - end\", \"le tva week - end\"],[\"loft story\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal weekend\"]]\nQuestion = Is it true that the show , le journal weekend , is on at 10:30 and movies is on at 9:30?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    column_930 = get_column_by_index(table_data, 5)\n    column_1030 = get_column_by_index(table_data, 7)\n    answer = equal_to(\"movies\", column_930[9]) and equal_to(\"le journal weekend\", column_1030[9])\n    return answer\n\n### END"}
{"id": "6d002909-b5f1-414b-ab38-d569e566044e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\", \"10:30\"],[\"heartland\", \"heartland\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"cbc news : sunday night\", \"cbc news : sunday night\"],[\"law and order : criminal intent\", \"law and order : criminal intent\", \"cold case\", \"cold case\", \"desperate housewives\", \"desperate housewives\", \"dirty sexy money\", \"dirty sexy money\"],[\"the simpsons\", \"da kink in my hair\", \"the simpsons\", \"king of the hill\", \"family guy\", \"american dad!\", \"brothers & sisters\", \"brothers & sisters\"],[\"america 's funniest home videos\", \"america 's funniest home videos\", \"kyle xy\", \"kyle xy\", \"america 's next top model\", \"america 's next top model\", \"stargate sg - 1\", \"stargate sg - 1\"],[\"everybody hates chris\", \"speakers' corner\", \"behind the movies\", \"bravo!fact presents\", \"great movies\", \"great movies\", \"great movies\", \"great movies\"],[\"viva laughlin\", \"viva laughlin\", \"extreme makeover : home edition\", \"extreme makeover : home edition\", \"e! countdowns\", \"e! countdowns\", \"e! live encore\", \"e! live encore\"],[\"découverte\", \"et dieu créa laflaque\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"le téléjournal\", \"le téléjournal\"],[\"le banquier / dieu merci!\", \"le banquier / dieu merci!\", \"occupation double\", \"occupation double\", \"occupation double\", \"occupation double\", \"le tva week - end\", \"le tva week - end\"],[\"loft story\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal weekend\"]]\nQuestion = Is it true that movies has a le journal weekend greater than 11:00?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef in_string(str1, str2):\n    return str1 in str2\n\ndef solution(table_data):\n    column_10_30 = get_column_by_index(table_data, 7)\n    answer = in_string(\"movies\", column_10_30[-1])\n    return answer\n\n### END"}
{"id": "a0d1a3fa-76ea-421d-8a2b-9e416802d277", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 nbl season\ntable_data = [[\"date\",\"home team\",\"score\",\"away team\",\"venue\",\"crowd\",\"box score\",\"report\"],[\"24 february\",\"south dragons\",\"94 - 81\",\"townsville crocodiles\",\"hisense arena\",\"3613\",\"box score\",\"-\"],[\"25 february\",\"melbourne tigers\",\"117 - 99\",\"new zealand breakers\",\"state netball and hockey centre\",\"2998\",\"box score\",\"-\"],[\"26 february\",\"townsville crocodiles\",\"82 - 77\",\"south dragons\",\"townsville entertainment centre\",\"4505\",\"box score\",\"-\"],[\"27 february\",\"new zealand breakers\",\"97 - 103\",\"melbourne tigers\",\"north shore events centre\",\"4500\",\"box score\",\"-\"],[\"28 february\",\"south dragons\",\"101 - 78\",\"townsville crocodiles\",\"hisense arena\",\"3007\",\"box score\",\"-\"]]\nQuestion = Is it true that the away team with the lowest crowd number of 2998 is the new zealand breakers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef get_min_index(lst):\n    return lst.index(min(lst))\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    crowds = get_column_by_name(table_data, \"crowd\")\n    crowds = list(map(int, crowds))\n    away_teams = get_column_by_name(table_data, \"away team\")\n    min_index = get_min_index(crowds)\n    answer = equal_to(away_teams[min_index], \"new zealand breakers\")\n    return answer\n\n### END"}
{"id": "2c2c9dd0-da3c-4d8a-8801-cb6a53223c12", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = india national under - 23 football team results\ntable_data = [[\"date\", \"tournament\", \"location\", \"opponent\", \"stadium\", \"score\", \"indian scorers\"],[\"23 february 2011\", \"2012 olympic qualifier\", \"pune , india\", \"myanmar\", \"balewadi sports complex\", \"2 - 1\", \"jeje lalpekhlua , malsawmfela\"],[\"9 march 2011\", \"2012 olympic qualifier\", \"yangon , myanmar\", \"myanmar\", \"thuwunna stadium\", \"1 - 1\", \"chinadorai sabeeth\"],[\"19 june 2011\", \"2012 olympic qualifier\", \"doha , qatar\", \"qatar\", \"jassim bin hamad stadium\", \"1 - 3\", \"jeje lalpekhlua\"],[\"23 june 2011\", \"2012 olympic qualifier\", \"pune , india\", \"qatar\", \"balewadi sports complex\", \"1 - 1\", \"own goal\"],[\"25 june 2012\", \"2014 afc u - 22 asian cup qualifiers\", \"muscat , oman\", \"iraq\", \"royal oman police stadium\", \"1 - 2\", \"alwyn george\"],[\"28 june 2012\", \"2014 afc u - 22 asian cup qualifiers\", \"muscat , oman\", \"united arab emirates\", \"royal oman police stadium\", \"1 - 1\", \"romeo fernandes\"]]\nQuestion = Is it true that indian scorer chinadorai sabeeth played a tournament at thuwunna stadium with a score of 1 - 1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    scores = get_column_by_name(table_data, \"score\")\n    indian_scorers = get_column_by_name(table_data, \"indian scorers\")\n    for stadium, score, indian_scorer in zip(stadiums, scores, indian_scorers):\n        if \"chinadorai sabeeth\" in indian_scorer.lower() and stadium.lower() == \"thuwunna stadium\":\n            answer = equal_to(score, \"1 - 1\")\n            break \n    return answer\n\n### END"}
{"id": "f7fea026-1bbc-4e7d-87c5-0e3b78395369", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 miller superbike world championship round\ntable_data = [[\"rider\", \"bike\", \"laps\", \"time\", \"grid\"],[\"carlos checa\", \"honda cbr1000rr\", \"20\", \"37:04.991\", \"1\"],[\"troy corser\", \"yamaha yzf - r1\", \"20\", \"+ 2.809\", \"5\"],[\"michel fabrizio\", \"ducati 1098 f08\", \"20\", \"+ 6.546\", \"4\"],[\"max neukirchner\", \"suzuki gsx - r1000\", \"20\", \"+ 7.764\", \"2\"],[\"fonsi nieto\", \"suzuki gsx - r1000\", \"20\", \"+ 16.475\", \"13\"],[\"jakub smrz\", \"ducati 1098 rs 08\", \"20\", \"+ 17.126\", \"11\"],[\"karl muggeridge\", \"honda cbr1000rr\", \"20\", \"+ 17.284\", \"12\"],[\"yukio kagayama\", \"suzuki gsx - r1000\", \"20\", \"+ 17.416\", \"8\"],[\"max biaggi\", \"ducati 1098 rs 08\", \"20\", \"+ 18.117\", \"9\"],[\"ryuichi kiyonari\", \"honda cbr1000rr\", \"20\", \"+ 20.467\", \"20\"],[\"lorenzo lanzi\", \"ducati 1098 rs 08\", \"20\", \"+ 21.742\", \"15\"],[\"kenan sofuoğlu\", \"honda cbr1000rr\", \"20\", \"+ 27.533\", \"25\"],[\"gregorio lavilla\", \"honda cbr1000rr\", \"20\", \"+ 32.609\", \"23\"],[\"ruben xaus\", \"ducati 1098 rs 08\", \"20\", \"+ 33.165\", \"6\"],[\"russell holland\", \"honda cbr1000rr\", \"20\", \"+ 34.182\", \"17\"],[\"shinichi nakatomi\", \"yamaha yzf - r1\", \"20\", \"+ 34.500\", \"22\"],[\"ayrton badovini\", \"kawasaki zx - 10r\", \"20\", \"+ 36.155\", \"16\"],[\"sébastien gimbert\", \"yamaha yzf - r1\", \"20\", \"+ 41.685\", \"24\"],[\"makoto tamada\", \"kawasaki zx - 10r\", \"20\", \"+ 43.579\", \"18\"],[\"roberto rolfo\", \"honda cbr1000rr\", \"20\", \"+ 54.195\", \"28\"],[\"jason pridmore\", \"honda cbr1000rr\", \"20\", \"+ 1:00.388\", \"19\"],[\"vittorio iannuzzo\", \"kawasaki zx - 10r\", \"20\", \"+ 1:02.104\", \"21\"],[\"scott jensen\", \"suzuki gsx - r1000 k8\", \"20\", \"+ 1:09.953\", \"29\"],[\"loic napoleone\", \"yamaha yzf - r1\", \"20\", \"+ 1:12.258\", \"27\"],[\"shuhei aoyama\", \"honda cbr1000rr\", \"14\", \"retirement\", \"14\"],[\"david checa\", \"yamaha yzf - r1\", \"6\", \"retirement\", \"26\"],[\"noriyuki haga\", \"yamaha yzf - r1\", \"5\", \"accident\", \"10\"],[\"troy bayliss\", \"ducati 1098 f08\", \"4\", \"accident\", \"3\"],[\"régis laconi\", \"kawasaki zx - 10r\", \"4\", \"retirement\", \"7\"]]\nQuestion = Is it true that vittorio iannuzzo has completed all twenty laps?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    riders = get_column_by_name(table_data, \"rider\")\n    laps = get_column_by_name(table_data, \"laps\")\n    for rider, lap in zip(riders, laps):\n        if rider.lower() == \"vittorio iannuzzo\":\n            answer = equal_to(lap, \"20\")\n            break \n    return answer\n\n### END"}
{"id": "d8f4881e-a9ef-4c31-b68c-12fc8bc81053", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = latin america\ntable_data = [[\"rank\", \"metropolitan area\", \"country\", \"gdp (ppp) (2008) billions of us\", \"metropolitan population (2006) millions\", \"gdp (ppp) us per capita\"],[\"1\", \"mexico city\", \"mexico\", \"390\", \"21.2\", \"20300\"],[\"2\", \"são paulo\", \"brazil\", \"388\", \"18.61\", \"20800\"],[\"3\", \"buenos aires\", \"argentina\", \"362\", \"13.52\", \"28000\"],[\"4\", \"rio de janeiro\", \"brazil\", \"201\", \"11.62\", \"17300\"],[\"5\", \"bogotá\", \"colombia\", \"180\", \"8.55\", \"21050\"],[\"6\", \"santiago\", \"chile\", \"120\", \"5.70\", \"21050\"],[\"7\", \"brasilia\", \"brazil\", \"110\", \"3.48\", \"31600\"],[\"8\", \"lima\", \"peru\", \"109\", \"8.35\", \"13100\"],[\"9\", \"medellín\", \"colombia\", \"102\", \"3.58\", \"28500\"],[\"10\", \"guadalajara\", \"mexico\", \"81\", \"3.95\", \"20500\"]]\nQuestion = Is it true that the metropolitan population of lima in 2006 was 8.35 million?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    metropolitan_areas = get_column_by_name(table_data, \"metropolitan area\")\n    populations = get_column_by_name(table_data, \"metropolitan population (2006) millions\")\n    for metropolitan_area, population in zip(metropolitan_areas, populations):\n        if metropolitan_area.lower() == \"lima\":\n            answer = equal_to(population, \"8.35\")\n            break \n    return answer\n\n### END"}
{"id": "18af5ed2-8dd2-4de9-bd17-f81a0e5c1de2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = savannah braves\ntable_data = [[\"year\", \"record\", \"finish\", \"manager\", \"playoffs\"],[\"1971\", \"57 - 84\", \"5th\", \"eddie haas\", \"not eligible\"],[\"1972\", \"80 - 59\", \"2nd\", \"clint courtney\", \"not eligible\"],[\"1973\", \"71 - 68\", \"3rd\", \"clint courtney (34 - 23) / tommie aaron (37 - 45)\", \"not eligible\"],[\"1974\", \"73 - 65\", \"4th\", \"tommie aaron\", \"not eligible\"],[\"1975\", \"70 - 64\", \"3rd (t)\", \"tommie aaron\", \"not eligible\"],[\"1976\", \"69 - 71\", \"5th\", \"tommie aaron\", \"not eligible\"],[\"1977\", \"77 - 63\", \"3rd\", \"gene hassell\", \"lost in 1st round\"],[\"1978\", \"72 - 72\", \"4th\", \"bobby dews\", \"lost league finals\"],[\"1979\", \"60 - 83\", \"10th\", \"eddie haas\", \"not eligible\"],[\"1980\", \"77 - 67\", \"3rd\", \"eddie haas\", \"lost in 1st round\"],[\"1981\", \"70 - 70\", \"5th\", \"andy gilbert\", \"lost in 1st round\"],[\"1982\", \"69 - 75\", \"8th\", \"andy gilbert\", \"not eligible\"],[\"1983\", \"81 - 64\", \"3rd\", \"bobby dews\", \"lost in 1st round\"]]\nQuestion = Is it true that gene hassell was the manager when record was 73 - 65 in year 1975?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    records = get_column_by_name(table_data, \"record\")\n    managers = get_column_by_name(table_data, \"manager\")\n    for record, manager in zip(records, managers):\n        if record == \"73 - 65\" and manager.lower() == \"gene hassell\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "13e92cd6-4d48-4f0a-a676-9b1879628007", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 boston celtics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"74\", \"april 1\", \"chicago\", \"106 - 92\", \"allen (22)\", \"perkins (9)\", \"rondo (10)\", \"united center 22225\", \"59 - 15\"],[\"75\", \"april 2\", \"indiana\", \"92 - 77\", \"garnett (20)\", \"garnett (11)\", \"rondo (6)\", \"td banknorth garden 18624\", \"60 - 15\"],[\"76\", \"april 5\", \"charlotte\", \"101 - 78\", \"powe (22)\", \"powe (9)\", \"rondo (5)\", \"charlotte bobcats arena 19403\", \"61 - 15\"],[\"77\", \"april 8\", \"milwaukee\", \"107 - 104 (ot)\", \"garnett (21)\", \"perkins (10)\", \"pierce (4)\", \"bradley center 15921\", \"62 - 15\"],[\"78\", \"april 9\", \"washington\", \"95 - 109\", \"pierce (28)\", \"garnett (14)\", \"pierce , rondo (7)\", \"verizon center 20173\", \"62 - 16\"],[\"79\", \"april 11\", \"milwaukee\", \"102 - 86\", \"rondo (16)\", \"garnett , posey (8)\", \"rondo (10)\", \"td banknorth garden 18624\", \"63 - 16\"],[\"80\", \"april 12\", \"atlanta\", \"99 - 89\", \"garnett (24)\", \"davis (10)\", \"cassell , rondo (5)\", \"philips arena 20098\", \"64 - 16\"],[\"81\", \"april 14\", \"new york\", \"99 - 93\", \"rondo (23)\", \"rondo (10)\", \"rondo (5)\", \"madison square garden 19763\", \"65 - 16\"],[\"82\", \"april 16\", \"new jersey\", \"105 - 94\", \"powe (27)\", \"powe (11)\", \"cassell (4)\", \"td banknorth garden 18624\", \"66 - 16\"]]\nQuestion = Is it true that chicago had a high rebound of garnett (21) and a game smaller than 77?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef parse_score(score_str):\n    score1, score2 = map(int, score_str.split(' - '))\n    return score1, score2\n\ndef smaller(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    scores = get_column_by_name(table_data, \"score\")\n    high_rebounds = get_column_by_name(table_data, \"high rebounds\")\n    for team, score, high_rebound in zip(teams, scores, high_rebounds):\n        if team.lower() == \"chicago\":\n            score1, score2 = parse_score(score)\n            answer = \"garnett (21)\" in high_rebound and smaller(score1, 77)\n            break \n    return answer\n\n### END"}
{"id": "81dad98b-7bd7-4316-8ede-6116d00f75aa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = comparison of e - book formats\ntable_data = [[\"format\", \"filename extension\", \"image support\", \"interactivity support\", \"word wrap support\", \"open standard\"],[\"djvu\", \"djvu\", \"yes\", \"no\", \"no\", \"yes\"],[\"epub (idpf)\", \"epub\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"fictionbook\", \"fb2\", \"yes\", \"no\", \"yes\", \"yes\"],[\"html\", \"html\", \"yes\", \"no\", \"yes\", \"yes\"],[\"kindle\", \"azw\", \"yes\", \"yes\", \"yes\", \"no\"],[\"microsoft reader\", \"lit\", \"yes\", \"no\", \"yes\", \"no\"],[\"mobipocket\", \"prc , mobi\", \"yes\", \"yes\", \"yes\", \"no\"],[\"multimedia ebook\", \"exe\", \"yes\", \"yes\", \"no\", \"yes\"],[\"newton book\", \"pkg\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ereader\", \"pdb\", \"yes\", \"no\", \"yes\", \"no\"],[\"plain text\", \"txt\", \"no\", \"no\", \"yes\", \"yes\"],[\"plucker\", \"pdb\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"portable document format\", \"pdf\", \"yes\", \"yes\", \"yes though not all readers implement support\", \"yes\"],[\"postscript\", \"ps\", \"yes\", \"no\", \"no\", \"yes\"],[\"tome raider\", \"tr2 , tr3\", \"yes\", \"no\", \"yes\", \"no\"],[\"openxps\", \"oxps , xps\", \"yes\", \"no\", \"no\", \"yes\"]]\nQuestion = Is it true that mobipocket has word wrap support?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    formats = get_column_by_name(table_data, \"format\")\n    word_wrap_supports = get_column_by_name(table_data, \"word wrap support\")\n    for format, word_wrap_support in zip(formats, word_wrap_supports):\n        if format.lower() == \"mobipocket\":\n            answer = equal_to(word_wrap_support, \"yes\")\n            break \n    return answer\n\n### END"}
{"id": "cff61fb4-a88b-4380-aa82-24b95496506a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = türk telekom arena\ntable_data = [[\"project\", \"year\", \"location\", \"capacity\", \"suites\", \"architect\", \"cost\"],[\"faruk süren project\", \"1997 - 2001\", \"mecidiyeköy\", \"40482\", \"125 + 72 boxes without outside seating\", \"bbb architects\", \"118.5 million ( in 2014 dollars)\"],[\"mehmet cansun project\", \"2001\", \"mecidiyeköy\", \"35000\", \"132\", \"gs member architecture group\", \"35 million ( in 2014 dollars)\"],[\"özhan canaydın : back to süren 's project\", \"2002 - 2005\", \"aslantepe\", \"40482\", \"125\", \"bbb architects\", \"90 million ( in 2014 dollars)\"],[\"eren talu bidding project\", \"2007\", \"aslantepe\", \"52000\", \"150\", \"populous\", \"n / a\"],[\"özhan canaydın project\", \"2007\", \"aslantepe\", \"52652\", \"157\", \"asp stuttgart\", \"250 million ( in 2014 dollars)\"]]\nQuestion = Is it true that the mehmet cansun project was located in aslantepe as of 2001?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    projects = get_column_by_name(table_data, \"project\")\n    locations = get_column_by_name(table_data, \"location\")\n    for project, location in zip(projects, locations):\n        if \"mehmet cansun project\" in project.lower():\n            answer = equal_to(location.lower(), \"aslantepe\")\n            break \n    return answer\n\n### END"}
{"id": "788e4910-f643-4f79-832f-8def8fb2da24", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1980 - 81 philadelphia flyers season\ntable_data = [[\"game\", \"december\", \"opponent\", \"score\", \"record\", \"points\"],[\"27\", \"4\", \"chicago black hawks\", \"7 - 5\", \"18 - 5 - 4\", \"40\"],[\"28\", \"6\", \"detroit red wings\", \"2 - 4\", \"18 - 6 - 4\", \"40\"],[\"29\", \"7\", \"colorado rockies\", \"4 - 2\", \"19 - 6 - 4\", \"42\"],[\"30\", \"10\", \"chicago black hawks\", \"2 - 2\", \"19 - 6 - 5\", \"43\"],[\"31\", \"13\", \"pittsburgh penguins\", \"6 - 5\", \"20 - 6 - 5\", \"45\"],[\"32\", \"14\", \"st louis blues\", \"5 - 4\", \"21 - 6 - 5\", \"47\"],[\"33\", \"18\", \"colorado rockies\", \"2 - 0\", \"22 - 6 - 5\", \"49\"],[\"34\", \"20\", \"washington capitals\", \"5 - 2\", \"23 - 6 - 5\", \"51\"],[\"35\", \"21\", \"washington capitals\", \"0 - 6\", \"23 - 7 - 5\", \"51\"],[\"36\", \"27\", \"calgary flames\", \"1 - 2\", \"23 - 8 - 5\", \"51\"],[\"37\", \"28\", \"edmonton oilers\", \"2 - 1\", \"24 - 8 - 5\", \"53\"],[\"38\", \"30\", \"minnesota north stars\", \"5 - 6\", \"24 - 9 - 5\", \"53\"]]\nQuestion = Is it true that forty - five points were scored in the game on dec 13 with the pittsburgh penguins?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"december\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    points = get_column_by_name(table_data, \"points\")\n    for date, opponent, point in zip(dates, opponents, points):\n        if date == \"13\" and opponent.lower() == \"pittsburgh penguins\":\n            answer = equal_to(point, \"45\")\n            break \n    return answer\n\n### END"}
{"id": "bb11d684-386c-4cc2-8857-9f6e5624f1b8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 miller superbike world championship round\ntable_data = [[\"rider\", \"bike\", \"laps\", \"time\", \"grid\"],[\"carlos checa\", \"honda cbr1000rr\", \"20\", \"37:04.991\", \"1\"],[\"troy corser\", \"yamaha yzf - r1\", \"20\", \"+ 2.809\", \"5\"],[\"michel fabrizio\", \"ducati 1098 f08\", \"20\", \"+ 6.546\", \"4\"],[\"max neukirchner\", \"suzuki gsx - r1000\", \"20\", \"+ 7.764\", \"2\"],[\"fonsi nieto\", \"suzuki gsx - r1000\", \"20\", \"+ 16.475\", \"13\"],[\"jakub smrz\", \"ducati 1098 rs 08\", \"20\", \"+ 17.126\", \"11\"],[\"karl muggeridge\", \"honda cbr1000rr\", \"20\", \"+ 17.284\", \"12\"],[\"yukio kagayama\", \"suzuki gsx - r1000\", \"20\", \"+ 17.416\", \"8\"],[\"max biaggi\", \"ducati 1098 rs 08\", \"20\", \"+ 18.117\", \"9\"],[\"ryuichi kiyonari\", \"honda cbr1000rr\", \"20\", \"+ 20.467\", \"20\"],[\"lorenzo lanzi\", \"ducati 1098 rs 08\", \"20\", \"+ 21.742\", \"15\"],[\"kenan sofuoğlu\", \"honda cbr1000rr\", \"20\", \"+ 27.533\", \"25\"],[\"gregorio lavilla\", \"honda cbr1000rr\", \"20\", \"+ 32.609\", \"23\"],[\"ruben xaus\", \"ducati 1098 rs 08\", \"20\", \"+ 33.165\", \"6\"],[\"russell holland\", \"honda cbr1000rr\", \"20\", \"+ 34.182\", \"17\"],[\"shinichi nakatomi\", \"yamaha yzf - r1\", \"20\", \"+ 34.500\", \"22\"],[\"ayrton badovini\", \"kawasaki zx - 10r\", \"20\", \"+ 36.155\", \"16\"],[\"sébastien gimbert\", \"yamaha yzf - r1\", \"20\", \"+ 41.685\", \"24\"],[\"makoto tamada\", \"kawasaki zx - 10r\", \"20\", \"+ 43.579\", \"18\"],[\"roberto rolfo\", \"honda cbr1000rr\", \"20\", \"+ 54.195\", \"28\"],[\"jason pridmore\", \"honda cbr1000rr\", \"20\", \"+ 1:00.388\", \"19\"],[\"vittorio iannuzzo\", \"kawasaki zx - 10r\", \"20\", \"+ 1:02.104\", \"21\"],[\"scott jensen\", \"suzuki gsx - r1000 k8\", \"20\", \"+ 1:09.953\", \"29\"],[\"loic napoleone\", \"yamaha yzf - r1\", \"20\", \"+ 1:12.258\", \"27\"],[\"shuhei aoyama\", \"honda cbr1000rr\", \"14\", \"retirement\", \"14\"],[\"david checa\", \"yamaha yzf - r1\", \"6\", \"retirement\", \"26\"],[\"noriyuki haga\", \"yamaha yzf - r1\", \"5\", \"accident\", \"10\"],[\"troy bayliss\", \"ducati 1098 f08\", \"4\", \"accident\", \"3\"],[\"régis laconi\", \"kawasaki zx - 10r\", \"4\", \"retirement\", \"7\"]]\nQuestion = Is it true that régis laconi rode kawasaki zx - 10r with grid 7?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    riders = get_column_by_name(table_data, \"rider\")\n    bikes = get_column_by_name(table_data, \"bike\")\n    grids = get_column_by_name(table_data, \"grid\")\n    for rider, bike, grid in zip(riders, bikes, grids):\n        if rider.lower() == \"régis laconi\":\n            answer = equal_to(bike, \"kawasaki zx - 10r\") and equal_to(grid, \"7\")\n            break \n    return answer\n\n### END"}
{"id": "3a63c330-0ef5-4d50-b9c9-e255a0ffc419", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sandro cortese\ntable_data = [[\"season\", \"class\", \"team\", \"motorcycle\", \"type\", \"races\", \"wins\", \"podiums\", \"poles\", \"fastest laps\", \"pts\", \"position\"],[\"2005\", \"125cc\", \"kiefer - bos - castrol honda\", \"honda\", \"honda rs125r\", \"16\", \"0\", \"0\", \"0\", \"0\", \"8\", \"26th\"],[\"2006\", \"125cc\", \"elit - caffè latte\", \"honda\", \"honda rs125r\", \"16\", \"0\", \"0\", \"0\", \"0\", \"23\", \"17th\"],[\"2007\", \"125cc\", \"emmi - caffè latte\", \"aprilia\", \"aprilia rs 125\", \"17\", \"0\", \"0\", \"0\", \"0\", \"66\", \"14th\"],[\"2008\", \"125cc\", \"emmi - caffè latte\", \"aprilia\", \"aprilia rsa 125\", \"17\", \"0\", \"0\", \"0\", \"1\", \"141\", \"8th\"],[\"2009\", \"125cc\", \"ajo interwetten\", \"derbi\", \"derbi rsa 125\", \"16\", \"0\", \"3\", \"1\", \"2\", \"130\", \"6th\"],[\"2010\", \"125cc\", \"ajo motorsport\", \"derbi\", \"derbi rs 125 r\", \"17\", \"0\", \"2\", \"1\", \"2\", \"143\", \"7th\"],[\"2011\", \"125cc\", \"intact - racing team germany\", \"aprilia\", \"aprilia rsa 125\", \"17\", \"2\", \"6\", \"1\", \"2\", \"225\", \"4th\"],[\"2012\", \"moto3\", \"red bull ktm ajo\", \"ktm\", \"ktm m32\", \"17\", \"5\", \"15\", \"7\", \"4\", \"325\", \"1st\"],[\"2013\", \"moto2\", \"dynavolt intact gp\", \"kalex\", \"kalex moto2\", \"16\", \"0\", \"0\", \"0\", \"0\", \"19\", \"20th\"]]\nQuestion = Is it true that in 2005 , kiefer - bos - castrol honda had 16 races and 8 pts?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    teams = get_column_by_name(table_data, \"team\")\n    races = get_column_by_name(table_data, \"races\")\n    pts = get_column_by_name(table_data, \"pts\")\n    for season, team, race, pt in zip(seasons, teams, races, pts):\n        if season == \"2005\" and team.lower() == \"kiefer - bos - castrol honda\":\n            answer = equal_to(race, \"16\") and equal_to(pt, \"8\")\n            break \n    return answer\n\n### END"}
{"id": "c13bade0-5a1a-43ac-92bd-47a0c13a857e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 3. liga\ntable_data = [[\"team\",\"outgoing manager\",\"manner of departure\",\"date of vacancy\",\"replaced by\",\"date of appointment\",\"position in table\"],[\"vfl osnabrück\",\"claus - dieter wollitz\",\"fc energie cottbus purchased rights\",\"30 june 2009\",\"karsten baumann\",\"1 july 2009\",\"pre - season\"],[\"fc carl zeiss jena\",\"marc fascher\",\"end of contract\",\"30 june 2009\",\"rené van eck\",\"1 july 2009\",\"pre - season\"],[\"fc rot - weiß erfurt\",\"henri fuchs\",\"end of tenure as caretaker\",\"30 june 2009\",\"rainer hörgl\",\"1 july 2009\",\"pre - season\"],[\"vfb stuttgart ii\",\"rainer adrion\",\"new coach of germany u - 21\",\"30 june 2009\",\"reiner geyer\",\"1 july 2009\",\"pre - season\"],[\"sv wacker burghausen\",\"ralf santelli\",\"end of contract\",\"30 june 2009\",\"jürgen press\",\"1 july 2009\",\"pre - season\"]]\nQuestion = Is it true that on july 1st , 2009 , reiner geyer was the replacement for rainer adrion?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    outgoing_managers = get_column_by_name(table_data, \"outgoing manager\")\n    replaced_bys = get_column_by_name(table_data, \"replaced by\")\n    date_of_appointments = get_column_by_name(table_data, \"date of appointment\")\n    for outgoing_manager, replaced_by, date_of_appointment in zip(outgoing_managers, replaced_bys, date_of_appointments):\n        if equal_to(outgoing_manager, \"rainer adrion\") and equal_to(replaced_by, \"reiner geyer\") and equal_to(date_of_appointment, \"1 july 2009\"):\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "a5c92992-d07e-4ec5-8df2-7cd7e43ef024", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2006 - 07 seattle supersonics season\ntable_data = [[\"game\",\"date\",\"team\",\"score\",\"high points\",\"high rebounds\",\"high assists\",\"location attendance\",\"record\"],[\"1\",\"november 1\",\"portland\",\"l 106 - 110\",\"rashard lewis (25)\",\"rashard lewis (8)\",\"luke ridnour (13)\",\"keyarena 17072\",\"0 - 1\"],[\"2\",\"november 3\",\"l a lakers\",\"l 112 - 118\",\"ray allen (30)\",\"chris wilcox (12)\",\"earl watson (7)\",\"staples center 18997\",\"0 - 2\"],[\"3\",\"november 5\",\"l a lakers\",\"w 117 - 101\",\"ray allen (32)\",\"chris wilcox (8)\",\"luke ridnour (7)\",\"keyarena 17072\",\"1 - 2\"],[\"4\",\"november 7\",\"miami\",\"l 87 - 90\",\"rashard lewis (23)\",\"nick collison (10)\",\"earl watson (6)\",\"american airlines arena 19600\",\"1 - 3\"],[\"5\",\"november 8\",\"orlando\",\"l 87 - 88\",\"ray allen (21)\",\"danny fortson (8)\",\"luke ridnour (6)\",\"amway arena 16312\",\"1 - 4\"],[\"6\",\"november 10\",\"charlotte\",\"w 99 - 85\",\"ray allen (26)\",\"nick collison (15)\",\"luke ridnour (7)\",\"charlotte bobcats arena 13515\",\"2 - 4\"],[\"7\",\"november 11\",\"atlanta\",\"w 113 - 112 (ot)\",\"ray allen (33)\",\"chris wilcox (15)\",\"luke ridnour (5)\",\"philips arena 19309\",\"3 - 4\"],[\"8\",\"november 13\",\"new jersey\",\"w 119 - 113\",\"luke ridnour (32)\",\"rashard lewis (11)\",\"luke ridnour , earl watson (7)\",\"continental airlines arena 14392\",\"4 - 4\"],[\"9\",\"november 15\",\"philadelphia\",\"l 90 - 96\",\"rashard lewis (25)\",\"rashard lewis , chris wilcox (15)\",\"luke ridnour (7)\",\"keyarena 14936\",\"4 - 5\"],[\"10\",\"november 17\",\"utah\",\"l 109 - 118\",\"ray allen (32)\",\"chris wilcox (11)\",\"luke ridnour (7)\",\"keyarena 15513\",\"4 - 6\"],[\"11\",\"november 18\",\"golden state\",\"l 95 - 107\",\"ray allen (34)\",\"ray allen (11)\",\"earl watson (7)\",\"oracle arena 17205\",\"4 - 7\"],[\"12\",\"november 20\",\"new jersey\",\"w 99 - 87\",\"ray allen (29)\",\"ray allen (9)\",\"ray allen , luke ridnour (5)\",\"keyarena 14621\",\"5 - 7\"],[\"13\",\"november 22\",\"l a clippers\",\"w 95 - 85\",\"rashard lewis (35)\",\"nick collison , rashard lewis (13)\",\"luke ridnour (9)\",\"staples center 16290\",\"6 - 7\"],[\"14\",\"november 24\",\"sacramento\",\"l 100 - 109\",\"rashard lewis (26)\",\"chris wilcox (13)\",\"luke ridnour (8)\",\"keyarena 16757\",\"6 - 8\"],[\"15\",\"november 26\",\"san antonio\",\"l 78 - 98\",\"ray allen (21)\",\"johan petro (9)\",\"chris wilcox (5)\",\"keyarena 15483\",\"6 - 9\"]]\nQuestion = Is it true that the supersonics record after game 2 was 0 - 2?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    games = get_column_by_name(table_data, \"game\")\n    records = get_column_by_name(table_data, \"record\")\n    for game, record in zip(games, records):\n        if game == \"2\":\n            answer = equal_to(record, \"0 - 2\")\n            break \n    return answer\n\n### END"}
{"id": "c8d0e15d-3abb-4c2e-9878-ed538273b033", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = hey venus!\ntable_data = [[\"region\", \"date\", \"label\", \"format\", \"catalogue\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"vinyl record\", \"rtradlp 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"compact disc\", \"rtradcd 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"download\", \"-\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"vinyl record\", \"rt - 346 - 1\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"download\", \"rt - 346 - 5\"],[\"united states\", \"22 january 2008\", \"rough trade america\", \"double compact disc\", \"rtradcd 423\"],[\"japan\", \"12 september 2007\", \"rough trade japan\", \"compact disc\", \"xqcy - 1003\"]]\nQuestion = Is it true that the catalogue code of rtradlp 346 has a vinyl record format?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    formats = get_column_by_name(table_data, \"format\")\n    catalogues = get_column_by_name(table_data, \"catalogue\")\n    for format, catalogue in zip(formats, catalogues):\n        if equal_to(catalogue, \"rtradlp 346\"):\n            answer = equal_to(format, \"vinyl record\")\n            break \n    return answer\n\n### END"}
{"id": "1fcf320d-1933-40d3-b1ec-ff7d333c5911", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1990 formula one season\ntable_data = [[\"round\", \"grand prix\", \"date\", \"location\", \"pole position\", \"fastest lap\", \"winning driver\", \"winning constructor\", \"report\"],[\"1\", \"united states grand prix\", \"11 march\", \"phoenix\", \"gerhard berger\", \"gerhard berger\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"2\", \"brazilian grand prix\", \"25 march\", \"interlagos\", \"ayrton senna\", \"gerhard berger\", \"alain prost\", \"ferrari\", \"report\"],[\"3\", \"san marino grand prix\", \"13 may\", \"imola\", \"ayrton senna\", \"alessandro nannini\", \"riccardo patrese\", \"williams - renault\", \"report\"],[\"4\", \"monaco grand prix\", \"27 may\", \"monaco\", \"ayrton senna\", \"ayrton senna\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"5\", \"canadian grand prix\", \"10 june\", \"circuit gilles villeneuve\", \"ayrton senna\", \"gerhard berger\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"6\", \"mexican grand prix\", \"24 june\", \"hermanos rodrã­guez\", \"gerhard berger\", \"alain prost\", \"alain prost\", \"ferrari\", \"report\"],[\"7\", \"french grand prix\", \"8 july\", \"paul ricard\", \"nigel mansell\", \"nigel mansell\", \"alain prost\", \"ferrari\", \"report\"],[\"8\", \"british grand prix\", \"15 july\", \"silverstone\", \"nigel mansell\", \"nigel mansell\", \"alain prost\", \"ferrari\", \"report\"],[\"9\", \"german grand prix\", \"29 july\", \"hockenheimring\", \"ayrton senna\", \"thierry boutsen\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"10\", \"hungarian grand prix\", \"12 august\", \"hungaroring\", \"thierry boutsen\", \"riccardo patrese\", \"thierry boutsen\", \"williams - renault\", \"report\"],[\"11\", \"belgian grand prix\", \"26 august\", \"spa - francorchamps\", \"ayrton senna\", \"alain prost\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"12\", \"italian grand prix\", \"9 september\", \"monza\", \"ayrton senna\", \"ayrton senna\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"13\", \"portuguese grand prix\", \"23 september\", \"estoril\", \"nigel mansell\", \"riccardo patrese\", \"nigel mansell\", \"ferrari\", \"report\"],[\"14\", \"spanish grand prix\", \"30 september\", \"jerez\", \"ayrton senna\", \"riccardo patrese\", \"alain prost\", \"ferrari\", \"report\"],[\"15\", \"japanese grand prix\", \"21 october\", \"suzuka\", \"ayrton senna\", \"riccardo patrese\", \"nelson piquet\", \"benetton - ford\", \"report\"]]\nQuestion = Is it true that ayrton senna had the pole position and the fastest lap in round 2 , the brazilian grand prix , on 25 march?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    pole_positions = get_column_by_name(table_data, \"pole position\")\n    fastest_laps = get_column_by_name(table_data, \"fastest lap\")\n    for round, pole_position, fastest_lap in zip(rounds, pole_positions, fastest_laps):\n        if round == \"2\":\n            answer = equal_to(pole_position, \"ayrton senna\") and equal_to(fastest_lap, \"ayrton senna\")\n            break \n    return answer\n\n### END"}
{"id": "2f58e6d3-9bd2-4c5e-9d68-64ed3bd0f671", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of quadrangles on mercury\ntable_data = [[\"name\",\"number\",\"namesake\",\"albedo feature name\",\"area\",\"current map\"],[\"borealis\",\"h - 1\",\"borealis planitia\",\"borea\",\"north pole to 67 degree latitude\",\"h - 1\"],[\"victoria\",\"h - 2\",\"victoria rupes\",\"aurora\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 2\"],[\"shakespeare\",\"h - 3\",\"shakespeare crater\",\"caduceata\",\"90 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 3\"],[\"raditladi\",\"h - 4\",\"raditladi basin\",\"liguria\",\"270 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 4\"],[\"hokusai\",\"h - 5\",\"hokusai crater\",\"apollonia\",\"360 to 270 degree longitude , 21 to 66 degree latitude\",\"h - 5\"],[\"kuiper\",\"h - 6\",\"kuiper crater\",\"tricrena\",\"0 to 72 degree longitude , 22 to 22 degree latitude\",\"h - 6\"],[\"beethoven\",\"h - 7\",\"beethoven crater\",\"solitudo lycaonis\",\"72 to 144 degree longitude , 22 to 22 degree latitude\",\"h - 7\"],[\"tolstoj\",\"h - 8\",\"tolstoj crater\",\"phaethontias\",\"144 to 216 degree longitude , 22 to 22 degree latitude\",\"h - 8\"],[\"eminescu\",\"h - 9\",\"eminescu crater\",\"solitudo criophori\",\"216 to 288 degree longitude , 22 to 22 degree latitude\",\"h - 9\"],[\"derain\",\"h - 10\",\"derain crater\",\"pieria\",\"288 to 360 degree longitude , - 22 to 22 degree latitude\",\"h - 10\"],[\"discovery\",\"h - 11\",\"discovery rupes\",\"solitudo hermae trismegisti\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 11\"],[\"michelangelo\",\"h - 12\",\"michelangelo crater\",\"solitudo promethei\",\"90 to 180 degree longitude , 21 to - 66 degree latitude\",\"h - 12\"],[\"neruda\",\"h - 13\",\"neruda crater\",\"solitudo persephones\",\"180 to 270 degree longitude , 21 to - 66 degree latitude\",\"h - 13\"],[\"debussy\",\"h - 14\",\"debussy crater\",\"cyllene\",\"270 to 360 degree longitude , 21 to 66 degree latitude\",\"h - 14\"],[\"bach\",\"h - 15\",\"bach crater\",\"australia\",\"south pole to 67 degree latitude\",\"h - 15\"]]\nQuestion = Is it true that the location with the name of neruda has the albedo feature name of solitudo persephones?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    albedo_feature_names = get_column_by_name(table_data, \"albedo feature name\")\n    answer = False\n    for name, albedo_feature_name in zip(names, albedo_feature_names):\n        if name.lower() == \"neruda\" and albedo_feature_name.lower() == \"solitudo persephones\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "753f83df-7d33-49f0-831a-dbb3c25bdd45", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1930 grand prix season\ntable_data = [[\"name\",\"circuit\",\"date\",\"winning driver\",\"winning constructor\",\"report\"],[\"circuit d'esterel plage\",\"saint - raphaël\",\"2 march\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"tripoli grand prix\",\"tripoli\",\"23 march\",\"baconin borzacchini\",\"maserati\",\"report\"],[\"monaco grand prix\",\"monte carlo\",\"6 april\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"alessandria circuit\",\"bordino\",\"20 april\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"oran grand prix\",\"arcole\",\"27 april\",\"jean de maleplane\",\"bugatti\",\"report\"],[\"targa florio\",\"madonie\",\"4 may\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"picardy grand prix\",\"péronne\",\"18 may\",\"max fourny\",\"bugatti\",\"report\"],[\"rome grand prix\",\"tre fontane\",\"25 may\",\"luigi arcangeli\",\"maserati\",\"report\"],[\"grand prix des frontières\",\"chimay\",\"9 june\",\"georges de marotte\",\"salmson\",\"report\"],[\"lyon grand prix\",\"quincieux\",\"15 june\",\"louis chiron\",\"bugatti\",\"report\"],[\"grand prix de la marne\",\"reims\",\"29 june\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"eifelrennen\",\"nürburgring\",\"20 july\",\"heinrich - joachim von morgen\",\"bugatti\",\"report\"],[\"dieppe grand prix\",\"dieppe\",\"20 july\",\"marcel lehoux\",\"bugatti\",\"report\"],[\"coppa ciano\",\"montenero\",\"3 august\",\"luigi fagioli\",\"maserati\",\"report\"],[\"dauphiné circuit\",\"grenoble\",\"10 august\",\"philippe étancelin\",\"bugatti\",\"report\"],[\"coppa acerbo\",\"pescara\",\"17 august\",\"achille varzi\",\"maserati\",\"report\"],[\"grand prix du comminges\",\"saint - gaudens\",\"17 august\",\"françois miquel\",\"bugatti\",\"report\"],[\"monza grand prix\",\"monza\",\"7 september\",\"achille varzi\",\"maserati\",\"report\"],[\"lviv grand prix\",\"lviv\",\"8 september\",\"henryk liefeldt\",\"austro daimler\",\"report\"],[\"masaryk circuit\",\"brno\",\"28 september\",\"hermann of leiningen\",\"bugatti\",\"report\"],[\"san sebastián grand prix\",\"lasarte\",\"5 october\",\"achille varzi\",\"maserati\",\"report\"]]\nQuestion = Is it true that maserati was the winning constructor and françois miquel was the winning driver at the monza grand prix per the report?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    winning_drivers = get_column_by_name(table_data, \"winning driver\")\n    winning_constructors = get_column_by_name(table_data, \"winning constructor\")\n    for name, winning_driver, winning_constructor in zip(names, winning_drivers, winning_constructors):\n        if equal_to(name, \"monza grand prix\"):\n            answer = equal_to(winning_driver, \"françois miquel\") and equal_to(winning_constructor, \"maserati\")\n            break \n    return answer\n\n### END"}
{"id": "3de7d76c-a01d-4b06-9f8d-c13401e2d430", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2003 - 04 isu junior grand prix\ntable_data = [[\"rank\", \"nation\", \"gold\", \"silver\", \"bronze\", \"total\"],[\"1\", \"russia\", \"10\", \"14\", \"8\", \"32\"],[\"2\", \"united states\", \"9\", \"6\", \"7\", \"22\"],[\"3\", \"canada\", \"4\", \"2\", \"10\", \"16\"],[\"4\", \"japan\", \"4\", \"5\", \"4\", \"13\"],[\"5\", \"hungary\", \"4\", \"0\", \"2\", \"6\"],[\"6\", \"czech republic\", \"2\", \"1\", \"1\", \"4\"],[\"6\", \"ukraine\", \"1\", \"3\", \"0\", \"4\"],[\"6\", \"italy\", \"0\", \"1\", \"3\", \"4\"],[\"7\", \"sweden\", \"1\", \"2\", \"0\", \"3\"],[\"8\", \"israel\", \"1\", \"1\", \"0\", \"2\"],[\"9\", \"finland\", \"0\", \"0\", \"1\", \"1\"],[\"9\", \"france\", \"0\", \"1\", \"0\", \"1\"]]\nQuestion = Is it true that ukraine has two bronze medals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    nations = get_column_by_name(table_data, \"nation\")\n    bronzes = get_column_by_name(table_data, \"bronze\")\n    for nation, bronze in zip(nations, bronzes):\n        if nation.lower() == \"ukraine\":\n            answer = equal_to(int(bronze), 2)\n            break \n    return answer\n\n### END"}
{"id": "5f39d710-cec7-4a32-8f83-083b76288bb4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sanya\ntable_data = [[\"english name\",\"simplified\",\"traditional\",\"pinyin\",\"area\",\"population\",\"density\"],[\"hexi district\",\"河西区\",\"河西區\",\"héxī qū\",\"10\",\"134026\",\"13403\"],[\"hedong district\",\"河东区\",\"河東區\",\"hédōng qū\",\"35\",\"147944\",\"4227\"],[\"haitangwan\",\"海棠湾镇\",\"海棠灣鎮\",\"hǎitángwān zhèn\",\"254\",\"44617\",\"176\"],[\"jiyang\",\"吉阳镇\",\"吉陽鎮\",\"jíyáng zhèn\",\"199\",\"92316\",\"464\"],[\"fenghuang\",\"凤凰镇\",\"鳳凰鎮\",\"fènghuáng zhèn\",\"487\",\"66801\",\"137\"],[\"yacheng\",\"崖城镇\",\"崖城鎮\",\"yáchéng zhèn\",\"383\",\"74779\",\"195\"],[\"tianya\",\"天涯镇\",\"天涯鎮\",\"tiānyá zhèn\",\"269\",\"34934\",\"130\"],[\"yucai\",\"育才镇\",\"育才鎮\",\"yùcái zhèn\",\"315\",\"17515\",\"56\"],[\"nantian farm\",\"国营南田农场\",\"國營南田農場\",\"guóyíng nántián nóngchǎng\",\"nd\",\"24280\",\"nd\"],[\"nanxin farm\",\"国营南新农场\",\"國營南新農場\",\"guóyíng nánxīn nóngchǎng\",\"nd\",\"16801\",\"nd\"],[\"licai farm\",\"国营立才农场\",\"國營立才農場\",\"guóyíng lìcái nóngchǎng\",\"nd\",\"16659\",\"nd\"]]\nQuestion = Is it true that the hǎitángwān zhèn pinyin has the population of 44617 and density of 176?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    pinyins = get_column_by_name(table_data, \"pinyin\")\n    populations = get_column_by_name(table_data, \"population\")\n    densities = get_column_by_name(table_data, \"density\")\n    for pinyin, population, density in zip(pinyins, populations, densities):\n        if pinyin.lower() == \"hǎitángwān zhèn\":\n            answer = equal_to(population, \"44617\") and equal_to(density, \"176\")\n            break \n    return answer\n\n### END"}
{"id": "41f5750b-116a-4e7f-8982-778205d5b133", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rowing at the 2008 summer olympics - women 's lightweight double sculls\ntable_data = [[\"rank\", \"rowers\", \"country\", \"time\", \"notes\"],[\"1\", \"melanie kok , tracy cameron\", \"canada\", \"7:10.70\", \"fa\"],[\"2\", \"xu dongxiang , chen haixia\", \"china\", \"7:11.59\", \"fa\"],[\"3\", \"chrysi biskitzi , alexandra tsiavou\", \"greece\", \"7:11.99\", \"fa\"],[\"4\", \"renee hykel , jennifer goldsack\", \"united states\", \"7:12.15\", \"fb\"],[\"5\", \"amber halliday , marguerite houston\", \"australia\", \"7:13.80\", \"fb\"],[\"6\", \"misaki kumakura , akiko iwamoto\", \"japan\", \"7:16.13\", \"fb\"]]\nQuestion = Is it true that the rowers for greece were ranked at number 3?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    countries = get_column_by_name(table_data, \"country\")\n    for rank, country in zip(ranks, countries):\n        if country.lower() == \"greece\":\n            answer = equal_to(rank, \"3\")\n            break \n    return answer\n\n### END"}
{"id": "bacaf40e-7167-49ce-9e54-0a3cdfa5bd91", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 14 icc world cricket league\ntable_data = [[\"details\",\"host nation (s)\",\"final venue\",\"winner\",\"result\",\"runner - up\"],[\"2009 division seven\",\"guernsey\",\"king george v sports ground , castel\",\"207 / 7 (46.1 overs)\",\"bahrain won by 3 wickets scorecard\",\"guernsey 204 / 9 (50.0 overs)\"],[\"2009 division six\",\"singapore\",\"kallang cricket ground , singapore\",\"242 / 8 (50.0 overs)\",\"singapore won by 68 runs scorecard\",\"174 all out (48.4 overs)\"],[\"2010 division one\",\"netherlands\",\"vra ground , amstelveen\",\"ireland 233 / 4 (44.5 overs)\",\"ireland won by 6 wickets scorecard\",\"232 all out (48.5 overs)\"],[\"2010 division four\",\"italy\",\"ovale di rastignano , pianoro\",\"united states 188 / 2 (21.4 overs)\",\"united states won by 8 wickets scorecard\",\"italy 185 / 9 (50 overs)\"],[\"2010 division eight\",\"kuwait\",\"kuwait oil company hubara ground , ahmadi city\",\"164 / 4 (33.1 overs)\",\"kuwait won by 6 wickets scorecard\",\"163 / 8 (50 overs)\"],[\"2011 division three\",\"hong kong\",\"kowloon cricket club\",\"hong kong 207 / 6 (47.1 overs)\",\"hong kong won by 4 wickets scorecard\",\"202 (50 overs)\"],[\"2011 division two\",\"united arab emirates\",\"dsc cricket stadium , dubai\",\"201 / 5 (45.3 overs)\",\"united arab emirates won by 5 wickets scorecard\",\"namibia 200 (49.3 overs)\"],[\"2011 division seven\",\"botswana\",\"botswana cricket association oval 1 , gaborone\",\"219 / 9 (50 overs)\",\"kuwait won by 72 runs scorecard\",\"147 (36.5 overs)\"],[\"2011 division six\",\"malaysia\",\"kinrara academy oval , kuala lumpur\",\"guernsey 211 / 8 (49.3 overs)\",\"guernsey won by 2 wickets scorecard\",\"208 / 9 (50 overs)\"],[\"2012 division five\",\"singapore\",\"kallang ground , singapore\",\"164 / 1 (26.4 overs)\",\"singapore won by 9 wickets scorecard\",\"159 (47 overs)\"],[\"2012 division four\",\"malaysia\",\"kinrara academy oval , kuala lumpur\",\"147 / 2 (28 overs)\",\"nepal won by 8 wickets scorecard\",\"united states 145 (48.1 overs)\"],[\"2012 division eight\",\"samoa\",\"faleata oval no 1 , apia\",\"222 / 9 (50 overs)\",\"vanuatu won by 39 runs scorecard\",\"183 (42.5 overs)\"],[\"2013 division seven\",\"botswana\",\"botswana cricket association oval 1 , gaborone\",\"134 / 4 (32.1 overs)\",\"nigeria won by 6 wickets ( d / l ) scorecard\",\"133 (38 , 4 overs)\"],[\"2013 division three\",\"bermuda\",\"national stadium , hamilton\",\"153 / 5 (39.2 overs)\",\"nepal won by 5 wickets scorecard\",\"151 / 8 (50.0 overs)\"],[\"2013 division six\",\"jersey\",\"grainville cricket ground , st saviour\",\"jersey 10 points\",\"jersey won on points table\",\"8 points\"]]\nQuestion = Is it true that guernsey 211 / 8 (49.3 overs) won when hong kong was the hosting nation?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    host_nations = get_column_by_name(table_data, \"host nation (s)\")\n    winners = get_column_by_name(table_data, \"winner\")\n    answer = False\n    for host_nation, winner in zip(host_nations, winners):\n        if \"hong kong\" in host_nation.lower() and \"guernsey 211 / 8 (49.3 overs)\" in winner.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "f1c9c9ca-6006-4fb4-b8e0-e884e69c4d0e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2011 the dominion tankard\ntable_data = [[\"skip (club)\", \"w\", \"l\", \"pf\", \"pa\", \"ends won\", \"ends lost\", \"blank ends\", \"stolen ends\"],[\"peter corner (brampton)\", \"8\", \"2\", \"69\", \"54\", \"41\", \"36\", \"8\", \"11\"],[\"glenn howard (coldwater)\", \"8\", \"2\", \"79\", \"35\", \"40\", \"22\", \"8\", \"11\"],[\"greg balsdon (loonie)\", \"7\", \"3\", \"80\", \"57\", \"46\", \"37\", \"5\", \"12\"],[\"john epping (donalda)\", \"7\", \"3\", \"76\", \"64\", \"43\", \"41\", \"5\", \"10\"],[\"mark bice (sarnia)\", \"6\", \"4\", \"70\", \"76\", \"45\", \"44\", \"8\", \"7\"],[\"chris gardner (renfrew)\", \"5\", \"5\", \"73\", \"72\", \"47\", \"41\", \"7\", \"16\"],[\"dale matchett (bradford)\", \"4\", \"6\", \"57\", \"75\", \"35\", \"42\", \"7\", \"7\"],[\"mark kean (annandale)\", \"3\", \"7\", \"53\", \"67\", \"43\", \"35\", \"12\", \"8\"],[\"howard rajala (rideau)\", \"3\", \"7\", \"67\", \"71\", \"43\", \"48\", \"5\", \"9\"],[\"nick rizzo (brantford)\", \"3\", \"7\", \"56\", \"74\", \"35\", \"42\", \"4\", \"5\"]]\nQuestion = Is it true that peter corner had 46 ends won?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    skips = get_column_by_name(table_data, \"skip (club)\")\n    ends_won = get_column_by_name(table_data, \"ends won\")\n    for skip, ends in zip(skips, ends_won):\n        if \"peter corner\" in skip.lower():\n            answer = equal_to(ends, \"46\")\n            break \n    return answer\n\n### END"}
{"id": "0062939a-86f0-4a8b-99be-124c565fa9f4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1994 nhl entry draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"261\", \"per gustafsson\", \"defence\", \"sweden\", \"florida panthers\", \"hv71 (sweden)\"],[\"262\", \"jeremy stevenson\", \"left wing\", \"united states\", \"mighty ducks of anaheim\", \"sault ste marie greyhounds (ohl)\"],[\"263\", \"rob mara\", \"left wing\", \"united states\", \"chicago blackhawks\", \"belmont hill high school (hs - massachusetts)\"],[\"264\", \"jason issel\", \"left wing\", \"canada\", \"winnipeg jets\", \"prince albert raiders (whl)\"],[\"265\", \"steve nimigon\", \"left wing\", \"canada\", \"hartford whalers\", \"niagara falls thunder (ohl)\"],[\"266\", \"ladislav benysek\", \"defence\", \"czech republic\", \"edmonton oilers\", \"olomouc hc (czech republic)\"],[\"267\", \"jamie butt\", \"left wing\", \"canada\", \"ny rangers\", \"tacoma rockets (whl)\"],[\"268\", \"brian white\", \"defence\", \"united states\", \"tampa bay lightning\", \"arlington catholic high school (hs - massachusetts)\"],[\"269\", \"mike hanson\", \"centre\", \"united states\", \"new jersey devils\", \"minot high school (hs - north dakota)\"],[\"270\", \"jan lipiansky\", \"forward\", \"slovakia\", \"philadelphia flyers\", \"slovan bratislava (slovakia)\"],[\"271\", \"david beauregard\", \"left wing\", \"canada\", \"san jose sharks\", \"st hyacinthe lasers (qmjhl)\"],[\"272\", \"dick tarnstrom\", \"defence\", \"sweden\", \"new york islanders\", \"aik (sweden)\"],[\"273\", \"robert longpre\", \"centre\", \"canada\", \"vancouver canucks\", \"medicine hat tigers (whl)\"],[\"274\", \"antti tormanen\", \"left wing\", \"finland\", \"ottawa senators\", \"jokerit (finland)\"],[\"275\", \"sergei tertyshny\", \"defence\", \"russia\", \"washington capitals\", \"chelyabinsk traktor (russia)\"],[\"276\", \"scott fankhouser\", \"goaltender\", \"united states\", \"st louis blues\", \"university of massachusetts lowell (ncaa)\"],[\"277\", \"shayne wright\", \"defence\", \"canada\", \"buffalo sabres\", \"owen sound platers (ohl)\"],[\"278\", \"ross parsons\", \"defence\", \"canada\", \"montreal canadiens\", \"regina pats (whl)\"],[\"279\", \"pavel torgayev\", \"centre\", \"russia\", \"calgary flames\", \"tps (finland)\"],[\"280\", \"chris szysky\", \"right wing\", \"canada\", \"dallas stars\", \"swift current broncos (whl)\"],[\"281\", \"andrei yakhanov\", \"defence\", \"russia\", \"boston bruins\", \"ufa salavat yulayev (russia)\"],[\"282\", \"doug nolan\", \"defence\", \"united states\", \"toronto maple leafs\", \"catholic memorial high school (hs - massachusetts)\"],[\"283\", \"toivo suursoo\", \"left wing\", \"estonia\", \"detroit red wings\", \"krylya sovetov moscow (russia)\"],[\"284\", \"brian leitza\", \"goaltender\", \"united states\", \"pittsburgh penguins\", \"sioux city musketeers (ushl)\"],[\"285\", \"steven low\", \"defence\", \"canada\", \"quebec nordiques\", \"sherbrooke faucons (qmjhl)\"],[\"286\", \"kim johnsson\", \"defence\", \"sweden\", \"new york rangers\", \"malmã if (sweden)\"]]\nQuestion = Is it true that calgary flames is the nhl team for which the players from malmö if (sweden) play for?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    nhl_teams = get_column_by_name(table_data, \"nhl team\")\n    clubs = get_column_by_name(table_data, \"college / junior / club team\")\n    answer = False\n    for nhl_team, club in zip(nhl_teams, clubs):\n        if \"malmã if (sweden)\" in club.lower() and \"calgary flames\" in nhl_team.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "5ce99ea7-b8c6-4a08-9f05-eefbecea8cdf", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = los angeles lakers all - time roster\ntable_data = [[\"player\", \"nationality\", \"position\", \"from\", \"school / country\"],[\"bo lamar\", \"united states\", \"guard\", \"1977\", \"louisiana - lafayette\"],[\"jeff lamp\", \"united states\", \"guard / forward\", \"1987\", \"virginia\"],[\"mark landsberger\", \"united states\", \"forward / center\", \"1979\", \"arizona state\"],[\"stu lantz\", \"united states\", \"guard\", \"1974\", \"nebraska\"],[\"rudy larusso\", \"united states\", \"forward / center\", \"1959\", \"dartmouth\"],[\"butch lee\", \"united states\", \"guard\", \"1979\", \"marquette\"],[\"slick leonard\", \"united states\", \"guard\", \"1956\", \"indiana\"],[\"ronnie lester\", \"united states\", \"guard\", \"1984\", \"iowa\"],[\"stan love\", \"united states\", \"forward\", \"1973\", \"oregon\"],[\"clyde lovellette\", \"united states\", \"forward / center\", \"1953\", \"kansas\"],[\"maurice lucas\", \"united states\", \"forward / center\", \"1985\", \"marquette\"],[\"tyronn lue\", \"united states\", \"guard\", \"1998\", \"nebraska\"],[\"george lynch\", \"united states\", \"forward\", \"1993\", \"north carolina\"],[\"mike lynn\", \"united states\", \"forward\", \"1969\", \"ucla\"]]\nQuestion = Is it true that the position of the player from 1987 was guard / forward?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"from\")\n    positions = get_column_by_name(table_data, \"position\")\n    for year, position in zip(years, positions):\n        if year == \"1987\":\n            answer = equal_to(position, \"guard / forward\")\n            break \n    return answer\n\n### END"}
{"id": "c5663db1-818f-45b7-a795-cf63f5b75e2e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of all that episodes\ntable_data = [[\"season\", \"series\", \"episode title\", \"original air date\", \"nick prod\"],[\"1\", \"139\", \"lillix\", \"october 11 , 2003\", \"941\"],[\"2\", \"140\", \"nodesha\", \"october 18 , 2003\", \"942\"],[\"3\", \"141\", \"da razkalz cru\", \"october 25 , 2003\", \"943\"],[\"4\", \"142\", \"third eye blind\", \"november 1 , 2003\", \"944\"],[\"5\", \"143\", \"fefe dobson\", \"november 22 , 2003\", \"945\"],[\"7\", \"145\", \"drake bell\", \"january 10 , 2004\", \"947\"],[\"8\", \"146\", \"ok go\", \"january 24 , 2004\", \"948\"],[\"9\", \"147\", \"britney spears / nick cannon\", \"january 31 , 2004\", \"949\"],[\"10\", \"148\", \"brittany snow / wakefield\", \"february 7 , 2004\", \"950\"],[\"11\", \"149\", \"boomkat\", \"february 14 , 2004\", \"951\"],[\"12\", \"150\", \"nick lachey\", \"april 17 , 2004\", \"952\"],[\"13\", \"151\", \"avril lavigne\", \"june 12 , 2004\", \"953\"],[\"14\", \"152\", \"substitute jack\", \"june 19 , 2004\", \"954\"],[\"15\", \"153\", \"aaron carter\", \"june 26 , 2004\", \"955\"]]\nQuestion = Is it true that the last episode aired with a nick production number of 945 on november 22 , 2003?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    nick_prod = get_column_by_name(table_data, \"nick prod\")\n    air_dates = get_column_by_name(table_data, \"original air date\")\n    for prod, date in zip(nick_prod, air_dates):\n        if prod == \"945\" and date == \"november 22 , 2003\":\n            answer = equal_to(prod, nick_prod[-1])\n            break \n    return answer\n\n### END"}
{"id": "1d168dfb-bf33-4fab-926b-61be0b0eb345", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1925 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"8.11 (59)\", \"st kilda\", \"8.8 (56)\", \"glenferrie oval\", \"10000\", \"8 august 1925\"],[\"geelong\", \"11.20 (86)\", \"richmond\", \"4.8 (32)\", \"corio oval\", \"13500\", \"8 august 1925\"],[\"fitzroy\", \"17.18 (120)\", \"north melbourne\", \"11.8 (74)\", \"brunswick street oval\", \"7000\", \"8 august 1925\"],[\"south melbourne\", \"13.14 (92)\", \"footscray\", \"12.15 (87)\", \"lake oval\", \"15000\", \"8 august 1925\"],[\"melbourne\", \"7.10 (52)\", \"collingwood\", \"9.11 (65)\", \"mcg\", \"33642\", \"8 august 1925\"],[\"essendon\", \"15.11 (101)\", \"carlton\", \"8.14 (62)\", \"windy hill\", \"10000\", \"8 august 1925\"]]\nQuestion = Is it true that the away team scored 9.11 (65) at the venue of mcg?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    away_team_scores = get_column_by_name(table_data, \"away team score\")\n    venues = get_column_by_name(table_data, \"venue\")\n    for away_team_score, venue in zip(away_team_scores, venues):\n        if venue.lower() == \"mcg\":\n            answer = equal_to(away_team_score, \"9.11 (65)\")\n            break \n    return answer\n\n### END"}
{"id": "1d49fb4d-efd7-40a3-88c2-4a4bc840a2dd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of how it 's made episodes\ntable_data = [[\"series ep\", \"episode\", \"segment a\", \"segment b\", \"segment c\", \"segment d\"],[\"20 - 01\", \"248\", \"native healing drums\", \"s raisin\", \"stereoscopic viewers\", \"ribbon microphones\"],[\"20 - 02\", \"249\", \"horse bits\", \"oat cereal\", \"turquoise jewellery\", \"electric scooters\"],[\"20 - 03\", \"250\", \"nail nippers\", \"jade putters\", \"ice cider\", \"water skis\"],[\"20 - 04\", \"251\", \"es stagecoach\", \"road reflectors\", \"fire baked pottery\", \"custom motorcycle tanks\"],[\"20 - 05\", \"252\", \"replica clay pipes\", \"drinking fountains\", \"orange liqueur\", \"compound bows\"],[\"20 - 06\", \"253\", \"tissues\", \"travel trailers\", \"s slipper\", \"motorcycle helmets\"],[\"20 - 07\", \"254\", \"u - locks\", \"tepees\", \"s croissant\", \"rolling luggage\"],[\"20 - 08\", \"255\", \"prams\", \"factory - built homes\", \"wood flutes\", \"bicycle tires\"],[\"20 - 09\", \"256\", \"thinning shears\", \"wagon wheels\", \"toaster pastries\", \"violin bows\"],[\"20 - 10\", \"257\", \"cast iron tubs\", \"hopi kachina dolls\", \"mine truck engine rebuild\", \"memory cards\"],[\"20 - 11\", \"258\", \"cycling shoes\", \"s yurt\", \"marine plywood\", \"oil & encaustic paint\"],[\"20 - 12\", \"259\", \"paper fans\", \"walnut oil\", \"copper (part 1)\", \"copper (part 2)\"]]\nQuestion = Is it true that episode 256 contains a segment on thinning shears?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef in_string(str1, str2):\n    return str1 in str2\n\ndef solution(table_data):\n    episodes = get_column_by_name(table_data, \"episode\")\n    segment_a = get_column_by_name(table_data, \"segment a\")\n    segment_b = get_column_by_name(table_data, \"segment b\")\n    segment_c = get_column_by_name(table_data, \"segment c\")\n    segment_d = get_column_by_name(table_data, \"segment d\")\n    answer = False\n    for episode, a, b, c, d in zip(episodes, segment_a, segment_b, segment_c, segment_d):\n        if episode == \"256\":\n            if in_string(\"thinning shears\", a) or in_string(\"thinning shears\", b) or in_string(\"thinning shears\", c) or in_string(\"thinning shears\", d):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "14f7d0bc-9488-4623-ba06-70add62fb20a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1971 nhl amateur draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"15\", \"ken baird\", \"defence\", \"canada\", \"california golden seals\", \"flin flon bombers (wchl)\"],[\"16\", \"henry boucha\", \"centre\", \"united states\", \"detroit red wings\", \"us national development team\"],[\"17\", \"bobby lalonde\", \"centre\", \"canada\", \"vancouver canucks\", \"montreal junior canadiens (oha)\"],[\"18\", \"brian mckenzie\", \"left wing\", \"canada\", \"pittsburgh penguins\", \"st catharines black hawks (oha)\"],[\"19\", \"craig ramsay\", \"left wing\", \"canada\", \"buffalo sabres\", \"peterborough petes (oha)\"],[\"20\", \"larry robinson\", \"defence\", \"canada\", \"montreal canadiens\", \"kitchener rangers (oha)\"],[\"21\", \"rod norrish\", \"left wing\", \"canada\", \"minnesota north stars\", \"regina pats (wchl)\"],[\"22\", \"rick kehoe\", \"right wing\", \"canada\", \"toronto maple leafs\", \"hamilton red wings (oha)\"],[\"23\", \"dave fortier\", \"defence\", \"canada\", \"toronto maple leafs\", \"st catharines black hawks (oha)\"],[\"24\", \"michel deguise\", \"goaltender\", \"canada\", \"montreal canadiens\", \"sorel eperviers (qmjhl)\"],[\"25\", \"terry french\", \"centre\", \"canada\", \"montreal canadiens\", \"ottawa 67 's (oha)\"],[\"26\", \"dave kryskow\", \"left wing\", \"canada\", \"chicago black hawks\", \"edmonton oil kings (wchl)\"],[\"27\", \"tom williams\", \"left wing\", \"canada\", \"new york rangers\", \"hamilton red wings (oha)\"],[\"28\", \"curt ridley\", \"goaltender\", \"canada\", \"boston bruins\", \"portage terriers (mjhl)\"]]\nQuestion = Is it true that the chicago black hawks only make one selection within the data on this chart?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    nhl_teams = get_column_by_name(table_data, \"nhl team\")\n    answer = nhl_teams.count(\"chicago black hawks\") == 1\n    return answer\n\n### END"}
{"id": "c56be5b0-4b9f-4fa4-ac6d-a3472d1f63e9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"\", \"original title\", \"directed by\", \"written by\", \"original airdate\", \"prod code\", \"viewers\"],[\"1 - 1\", \"tracy returns\", \"susan tully\", \"elly brewer\", \"8 july 2002\", \"1.1\", \"267000\"],[\"1 - 2\", \"dares\", \"david skynner\", \"elly brewer\", \"15 july 2002\", \"1.2\", \"363000\"],[\"1 - 3\", \"sneaking in ben\", \"susan tully\", \"andy walker\", \"22 july 2002\", \"1.3\", \"499000\"],[\"1 - 4\", \"cam 's first visit\", \"susan tully\", \"elly brewer\", \"29 july 2002\", \"1.4\", \"233000\"],[\"1 - 5\", \"child of the week\", \"susan tully\", \"elly brewer\", \"29 july 2002\", \"1.5\", \"278000\"],[\"1 - 6\", \"the truth is revealed\", \"susan tully\", \"carol russell\", \"5 august 2002\", \"1.6\", \"315000\"],[\"1 - 7\", \"never ever wanna see him again\", \"susan tully\", \"mary morris\", \"5 august 2002\", \"1.7\", \"221000\"],[\"1 - 8\", \"1000 words about tracy\", \"susan tully\", \"arnold evans\", \"12 august 2002\", \"1.8\", \"261000\"],[\"1 - 9\", \"bad peter\", \"susan tully\", \"mary morris\", \"12 august 2002\", \"1.9\", \"242000\"],[\"1 - 10\", \"cam 's place\", \"susan tully\", \"andy walker\", \"19 august 2002\", \"1.10\", \"423000\"],[\"1 - 11\", \"dumping ground virus\", \"david skynner\", \"elly brewer\", \"19 august 2002\", \"1.11\", \"444000\"],[\"1 - 12\", \"justine 's tv\", \"susan tully\", \"elly brewer\", \"26 august 2002\", \"1.12\", \"417000\"],[\"1 - 13\", \"tracy and cam row\", \"susan tully\", \"elly brewer\", \"26 august 2002\", \"1.13\", \"526000\"],[\"1 - 14\", \"sleepover\", \"david skynner\", \"mary morris\", \"3 september 2002\", \"1.14\", \"658000\"],[\"1 - 15\", \"parent 's evening\", \"susan tully\", \"laura summers\", \"3 september 2002\", \"1.15\", \"215000\"],[\"1 - 16\", \"the postcard\", \"susan tully\", \"roger griffiths\", \"10 september 2002\", \"1.16\", \"215000\"],[\"1 - 18\", \"helpful tracy\", \"david skynner\", \"mary morris\", \"10 september 2002\", \"1.17\", \"145000\"],[\"1 - 19\", \"friend\", \"david skynner\", \"laura summers\", \"17 september 2002\", \"1.19\", \"815000\"],[\"1 - 20\", \"treasure hunt\", \"david skynner\", \"laura summers\", \"24 september 2002\", \"1.20\", \"234000\"],[\"1 - 21\", \"romance\", \"david skynner\", \"elly brewer\", \"24 september 2002\", \"1.21\", \"415000\"],[\"1 - 22\", \"temporary care worker\", \"david skynner\", \"othniel smith\", \"1 october 2002\", \"1.22\", \"615000\"],[\"1 - 23\", \"cut the weed\", \"david skynner\", \"graham alborough\", \"1 october 2002\", \"1.23\", \"522000\"],[\"1 - 24\", \"need armbands\", \"david skynner\", \"laura summers\", \"8 october 2002\", \"1.24\", \"195000\"],[\"1 - 25\", \"miss you\", \"david skynner\", \"mary morris\", \"8 october 2002\", \"1.25\", \"395000\"]]\nQuestion = Is it true that justine 's tv 's production code is 1.12?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    original_titles = get_column_by_name(table_data, \"original title\")\n    prod_codes = get_column_by_name(table_data, \"prod code\")\n    for original_title, prod_code in zip(original_titles, prod_codes):\n        if original_title.lower() == \"justine 's tv\":\n            answer = equal_to(prod_code, \"1.12\")\n            break \n    return answer\n\n### END"}
{"id": "462cd5e3-18c0-4719-b572-efcc70462f61", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 fis ski jumping world cup\ntable_data = [[\"rank\", \"name\", \"nationality\", \"1st (m)\", \"2nd (m)\", \"points\", \"overall fht points\", \"overall wc points (rank)\"],[\"1\", \"thomas morgenstern\", \"austria\", \"133.0\", \"136.0\", \"264.7\", \"987.1 (6)\", \"440 (4)\"],[\"2\", \"janne ahonen\", \"finland\", \"134.0\", \"133.5\", \"264.0\", \"1013.9 (2)\", \"350 (7)\"],[\"3\", \"simon ammann\", \"switzerland\", \"136.0\", \"131.5\", \"261.5\", \"1008.3 (5)\", \"669 (1)\"],[\"4\", \"wolfgang loitzl\", \"austria\", \"130.5\", \"135.0\", \"260.9\", \"1011.6 (3)\", \"411 (5)\"],[\"5\", \"andreas kofler\", \"austria\", \"129.0\", \"133.5\", \"255.0\", \"1027.2 (1)\", \"521 (3)\"]]\nQuestion = Is it true that simon ammann with nationality as switzerland has the rank of 3?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    ranks = get_column_by_name(table_data, \"rank\")\n    for name, nationality, rank in zip(names, nationalities, ranks):\n        if name.lower() == \"simon ammann\" and nationality.lower() == \"switzerland\":\n            answer = equal_to(rank, \"3\")\n            break \n    return answer\n\n### END"}
{"id": "f4a8af4d-a811-46ad-8dd9-60631396e22c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the yardbirds discography\ntable_data = [[\"date\", \"title\", \"origin\", \"label & cat no\", \"chart no\"],[\"6 / 1965\", \"for your love\", \"us\", \"epic ln 24167 / bn - 26167\", \"96\"],[\"11 / 1965\", \"having a rave up with the yardbirds\", \"us\", \"epic ln 24177 / bn 26177\", \"53\"],[\"7 / 1966\", \"yardbirds aka roger the engineer\", \"uk\", \"columbia sx 6063 / scx 6063\", \"20\"],[\"7 / 1966\", \"over under sideways down\", \"us\", \"epic ln 24210 / bn 26210\", \"52\"],[\"8 / 1967\", \"little games\", \"us\", \"epic ln 24313 / bn 26313\", \"80\"]]\nQuestion = Is it true that in november 1965 having a rave up with the yardbrirds ranked 53 on the chart?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    titles = get_column_by_name(table_data, \"title\")\n    chart_nos = get_column_by_name(table_data, \"chart no\")\n    for date, title, chart_no in zip(dates, titles, chart_nos):\n        if date == \"11 / 1965\" and title.lower() == \"having a rave up with the yardbirds\":\n            answer = equal_to(chart_no, \"53\")\n            break \n    return answer\n\n### END"}
{"id": "8aa950fa-452b-466b-a465-f6dc4d6a38b2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date\", \"visitor\", \"score\", \"home\", \"record\"],[\"february 2\", \"vancouver\", \"5 - 1\", \"california\", \"15 - 28 - 5\"],[\"february 4\", \"chicago\", \"6 - 2\", \"vancouver\", \"15 - 29 - 5\"],[\"february 6\", \"montreal\", \"4 - 2\", \"vancouver\", \"15 - 30 - 5\"],[\"february 8\", \"philadelphia\", \"3 - 1\", \"vancouver\", \"15 - 31 - 5\"],[\"february 10\", \"vancouver\", \"1 - 9\", \"boston\", \"15 - 32 - 5\"],[\"february 12\", \"vancouver\", \"4 - 5\", \"st louis\", \"15 - 33 - 5\"],[\"february 13\", \"vancouver\", \"4 - 6\", \"pittsburgh\", \"15 - 34 - 5\"],[\"february 15\", \"new york\", \"5 - 1\", \"vancouver\", \"15 - 35 - 5\"],[\"february 18\", \"st louis\", \"2 - 5\", \"vancouver\", \"16 - 35 - 5\"],[\"february 19\", \"vancouver\", \"3 - 5\", \"los angeles\", \"16 - 36 - 5\"],[\"february 22\", \"boston\", \"4 - 3\", \"vancouver\", \"16 - 37 - 5\"],[\"february 24\", \"vancouver\", \"0 - 2\", \"detroit\", \"16 - 38 - 5\"],[\"february 26\", \"vancouver\", \"1 - 7\", \"toronto\", \"16 - 39 - 5\"],[\"february 27\", \"vancouver\", \"3 - 3\", \"chicago\", \"16 - 39 - 6\"],[\"february 29\", \"vancouver\", \"2 - 8\", \"detroit\", \"16 - 40 - 6\"]]\nQuestion = Is it true that vancouver was the home team that played against chicago?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home\")\n    visitors = get_column_by_name(table_data, \"visitor\")\n    answer = False\n    for home_team, visitor in zip(home_teams, visitors):\n        if home_team.lower() == \"vancouver\" and visitor.lower() == \"chicago\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "728a180d-69c9-422f-a6c5-c89bae42cd22", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = extreme engineering\ntable_data = [[\"no in series\",\"no in season\",\"title\",\"country\",\"project\",\"status at production\",\"original air date\"],[\"70\", \"1\", \"rebuilding new york city 's subway\", \"united states\", \"new york city subway expansion\", \"under construction\", \"april 8 , 2011\"],[\"71\", \"2\", \"drought - proofing australia\", \"australia\", \"wonthaggi desalination plant\", \"under construction\", \"april 15 , 2011\"],[\"72\", \"3\", \"azerbaijan 's amazing transformation\", \"azerbaijan\", \"flame towers and heydar aliyev cultural centre\", \"under construction\", \"april 22 , 2011\"],[\"73\", \"4\", \"london 's olympic aquatic stadium\", \"united kingdom\", \"london aquatics centre\", \"under construction\", \"april 29 , 2011\"],[\"74\", \"5\", \"constructing serbia 's largest bridge\", \"serbia\", \"ada bridge\", \"under construction\", \"june 18 , 2011\"],[\"75\", \"6\", \"amsterdam 's futuristic floating city\", \"netherlands\", \"netherlands land expansion\", \"under construction\", \"june 25 , 2011\"],[\"76\", \"7\", \"building mumbai 's modern airport\", \"india\", \"chhatrapati shivaji international airport\", \"under construction\", \"july 2 , 2011\"]]\nQuestion = Is it true that the rebuilding new york city 's subway title was for the project new york city subway expansion and was 72 in the no in series?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    no_in_series = get_column_by_name(table_data, \"no in series\")\n    titles = get_column_by_name(table_data, \"title\")\n    projects = get_column_by_name(table_data, \"project\")\n    for no, title, project in zip(no_in_series, titles, projects):\n        if title.lower() == \"rebuilding new york city 's subway\" and project.lower() == \"new york city subway expansion\":\n            answer = equal_to(no, \"72\")\n            break \n    return answer\n\n### END"}
{"id": "b4d57ef4-290e-4de8-bfdb-5062f4f2af29", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = radio iq\ntable_data = [[\"call sign\", \"frequency mhz\", \"city of license\", \"erp w\", \"class\", \"fcc info\"],[\"wvtw\", \"88.5\", \"charlottesville , virginia\", \"1000\", \"b1\", \"fcc\"],[\"wffc\", \"89.9\", \"ferrum , virginia\", \"1100\", \"a\", \"fcc\"],[\"wqiq\", \"88.3\", \"spotsylvania , virginia\", \"3500\", \"a\", \"fcc\"],[\"wriq\", \"88.7\", \"lexington , virginia\", \"3900\", \"a\", \"fcc\"],[\"wwvt\", \"1260\", \"christiansburg , virginia\", \"5000 day 25 night\", \"d\", \"fcc\"]]\nQuestion = Is it true that wvtw has a higher frequency than wffc?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef get_column_cell_value(row_index, column):\n    return column[row_index]\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    column_call_sign = get_column_by_name(table_data, \"call sign\")\n    column_frequency = get_column_by_name(table_data, \"frequency mhz\")\n    wvtw_index = column_call_sign.index(\"wvtw\")\n    wffc_index = column_call_sign.index(\"wffc\")\n    wvtw_frequency = float(get_column_cell_value(wvtw_index, column_frequency))\n    wffc_frequency = float(get_column_cell_value(wffc_index, column_frequency))\n    answer = greater(wvtw_frequency, wffc_frequency)\n    return answer\n\n### END"}
{"id": "796701cc-fb4e-4f11-8ffe-f24bc969241d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"census year\", \"number of muslims 000\", \"population of england and wales 000\", \"muslim (% of total population)\", \"registered mosques\", \"muslims per mosque\"],[\"1961\", \"50\", \"46196\", \"0.11\", \"7\", \"7143\"],[\"1971\", \"226\", \"49152\", \"0.46\", \"30\", \"7533\"],[\"1981\", \"553\", \"49634\", \"1.11\", \"149\", \"3711\"],[\"1991\", \"950\", \"51099\", \"1.86\", \"443\", \"2144\"],[\"2001\", \"1600\", \"52042\", \"3.07\", \"614\", \"2606\"]]\nQuestion = Is it true that in 1991 , there were 149 registered mosques with 7533 muslims per mosque?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    census_years = get_column_by_name(table_data, \"census year\")\n    registered_mosques = get_column_by_name(table_data, \"registered mosques\")\n    muslims_per_mosque = get_column_by_name(table_data, \"muslims per mosque\")\n    for year, mosque, muslim_per_mosque in zip(census_years, registered_mosques, muslims_per_mosque):\n        if year == \"1991\":\n            answer = equal_to(mosque, \"149\") and equal_to(muslim_per_mosque, \"7533\")\n            break \n    return answer\n\n### END"}
{"id": "57a888eb-f94c-4d8b-960f-14209ce10d95", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = american dad! (season 1)\ntable_data = [[\"no in series\", \"title\", \"directed by\", \"written by\", \"original air date\", \"production code\", \"us viewers (millions)\"],[\"1\", \"pilot\", \"ron hughart\", \"seth macfarlane , mike barker & matt weitzman\", \"february 6 , 2005\", \"1ajn01\", \"15.10\"],[\"2\", \"threat levels\", \"brent woods\", \"david zuckerman\", \"may 1 , 2005\", \"1ajn02\", \"9.47\"],[\"3\", \"stan knows best\", \"pam cooke\", \"mike barker & matt weitzman\", \"may 8 , 2005\", \"1ajn03\", \"8.23\"],[\"4\", \"francine 's flashback\", \"caleb meurer & brent woods\", \"rick wiener & kenny schwartz\", \"may 15 , 2005\", \"1ajn05\", \"7.84\"],[\"5\", \"roger codger\", \"albert calleros\", \"dan vebber\", \"june 5 , 2005\", \"1ajn04\", \"6.09\"],[\"6\", \"homeland insecurity\", \"rodney clouden\", \"neal boushell & sam o'neal\", \"june 12 , 2005\", \"1ajn06\", \"6.85\"]]\nQuestion = Is it true that francine 's flashback aired on june 5 , 2005 with david zuckerman as the writer had 6.09 million viewers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    air_dates = get_column_by_name(table_data, \"original air date\")\n    writers = get_column_by_name(table_data, \"written by\")\n    viewers = get_column_by_name(table_data, \"us viewers (millions)\")\n    for title, air_date, writer, viewer in zip(titles, air_dates, writers, viewers):\n        if title.lower() == \"francine 's flashback\" and air_date.lower() == \"june 5 , 2005\" and writer.lower() == \"david zuckerman\" and equal_to(viewer, \"6.09\"):\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "1f98f2eb-f3df-4bf2-92c1-e41873c1abec", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = emergency shipbuilding program\ntable_data = [[\"yard name\", \"location (city , state)\", \"1st ship delivery date\", \"ship types delivered\", \"total number of ways\"],[\"cargill inc\", \"savage , minnesota\", \"november 1941\", \"t1 type\", \"number\"],[\"leatham d smith shipbuilding co\", \"sturgeon bay , wisconsin\", \"november 1942\", \"c1 - m type , n3 type , s2 (frigate) type\", \"number\"],[\"walter butler shipbuilders\", \"superior , wisconsin\", \"december 1942\", \"c1 - m type , n3 type , s2 (frigate) type\", \"number\"],[\"froemming brothers\", \"milwaukee , wisconsin\", \"april 1943\", \"c1 - m type , v4 type , s2 (frigate) type\", \"number\"],[\"american shipbuilding\", \"lorain , ohio\", \"may 1943\", \"l6 type , s2 (frigate) type\", \"number\"],[\"walter butler shipbuilders inc\", \"duluth , minnesota\", \"may 1943\", \"c1 - m type , n3 type , t1 type\", \"number\"],[\"globe shipbuilding co\", \"superior , wisconsin\", \"may 1943\", \"c1 - m type , v4 type , s2 (frigate) type\", \"number\"],[\"great lakes engineering co\", \"ecorse , michigan\", \"may 1943\", \"l6 type\", \"number\"],[\"great lakes engineering co\", \"ashtabula , ohio\", \"may 1943\", \"l6 type\", \"number\"],[\"american shipbuilding\", \"cleveland , ohio\", \"june 1943\", \"l6 type , s2 (frigate) type\", \"number\"]]\nQuestion = Is it true that froemming brothers ship yard produced c1 - m type , v4 type , s2 (frigate) type ships?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    yard_names = get_column_by_name(table_data, \"yard name\")\n    ship_types_delivered = get_column_by_name(table_data, \"ship types delivered\")\n    for yard_name, ship_type in zip(yard_names, ship_types_delivered):\n        if yard_name.lower() == \"froemming brothers\":\n            answer = equal_to(ship_type, \"c1 - m type , v4 type , s2 (frigate) type\")\n            break \n    return answer\n\n### END"}
{"id": "5cfce41e-9057-463f-b0fc-fa23a8cfe4f0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 veikkausliiga\ntable_data = [[\"club\", \"location\", \"stadium\", \"capacity\", \"manager\", \"kitmaker\"],[\"ac oulu\", \"oulu\", \"castrén\", \"4000\", \"juha malinen\", \"umbro\"],[\"fc honka\", \"espoo\", \"tapiolan urheilupuisto\", \"6000\", \"mika lehkosuo\", \"kappa\"],[\"fc inter\", \"turku\", \"veritas stadion\", \"9372\", \"job dragtsma\", \"nike\"],[\"fc lahti\", \"lahti\", \"lahden stadion\", \"15000\", \"ilkka mäkelä\", \"umbro\"],[\"ff jaro\", \"jakobstad\", \"jakobstads centralplan\", \"5000\", \"alexei eremenko sr\", \"errea\"],[\"haka\", \"valkeakoski\", \"tehtaan kenttä\", \"3516\", \"sami ristilä\", \"umbro\"],[\"hjk\", \"helsinki\", \"sonera stadium\", \"10770\", \"antti muurinen\", \"adidas\"],[\"ifk mariehamn\", \"mariehamn\", \"wiklöf holding arena\", \"4000\", \"pekka lyyski\", \"puma\"],[\"jjk\", \"jyväskylä\", \"harjun stadion\", \"3000\", \"kari martonen\", \"legea\"],[\"kups\", \"kuopio\", \"kuopion keskuskenttä\", \"5000\", \"esa pekonen\", \"puma\"],[\"mypa\", \"anjalankoski\", \"saviniemi\", \"4167\", \"janne lindberg\", \"puma\"],[\"tampere united\", \"tampere\", \"ratina stadion\", \"17000\", \"ari hjelm\", \"puma\"],[\"tps\", \"turku\", \"veritas stadion\", \"9372\", \"marko rajamäki\", \"puma\"]]\nQuestion = Is it true that the stadium in kuopio is esa pekonen?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    locations = get_column_by_name(table_data, \"location\")\n    answer = False\n    for location, stadium in zip(locations, stadiums):\n        if \"kuopio\" in location.lower():\n            if \"esa pekonen\" in stadium.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "33e3f6ab-1caf-4bee-adb1-59f26cdbd9b8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = los angeles lakers all - time roster\ntable_data = [[\"player\", \"nationality\", \"position\", \"from\", \"school / country\"],[\"bo lamar\", \"united states\", \"guard\", \"1977\", \"louisiana - lafayette\"],[\"jeff lamp\", \"united states\", \"guard / forward\", \"1987\", \"virginia\"],[\"mark landsberger\", \"united states\", \"forward / center\", \"1979\", \"arizona state\"],[\"stu lantz\", \"united states\", \"guard\", \"1974\", \"nebraska\"],[\"rudy larusso\", \"united states\", \"forward / center\", \"1959\", \"dartmouth\"],[\"butch lee\", \"united states\", \"guard\", \"1979\", \"marquette\"],[\"slick leonard\", \"united states\", \"guard\", \"1956\", \"indiana\"],[\"ronnie lester\", \"united states\", \"guard\", \"1984\", \"iowa\"],[\"stan love\", \"united states\", \"forward\", \"1973\", \"oregon\"],[\"clyde lovellette\", \"united states\", \"forward / center\", \"1953\", \"kansas\"],[\"maurice lucas\", \"united states\", \"forward / center\", \"1985\", \"marquette\"],[\"tyronn lue\", \"united states\", \"guard\", \"1998\", \"nebraska\"],[\"george lynch\", \"united states\", \"forward\", \"1993\", \"north carolina\"],[\"mike lynn\", \"united states\", \"forward\", \"1969\", \"ucla\"]]\nQuestion = Is it true that the position of the player from 1987 was guard?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"from\")\n    positions = get_column_by_name(table_data, \"position\")\n    for year, position in zip(years, positions):\n        if year == \"1987\":\n            answer = equal_to(position, \"guard\")\n            break \n    return answer\n\n### END"}
{"id": "176bc81a-9c41-43d6-829e-30b242f3fe7d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2002 french motorcycle grand prix\ntable_data = [[\"rider\", \"manufacturer\", \"laps\", \"time / retired\", \"grid\"],[\"valentino rossi\", \"honda\", \"21\", \"34:22.335\", \"1\"],[\"tohru ukawa\", \"honda\", \"21\", \"+ 0.217\", \"4\"],[\"max biaggi\", \"yamaha\", \"21\", \"+ 0.604\", \"3\"],[\"norifumi abe\", \"yamaha\", \"21\", \"+ 1.701\", \"11\"],[\"kenny roberts , jr\", \"suzuki\", \"21\", \"+ 8.464\", \"9\"],[\"nobuatsu aoki\", \"proton kr\", \"21\", \"+ 10.212\", \"10\"],[\"loris capirossi\", \"honda\", \"21\", \"+ 12.437\", \"7\"],[\"alex barros\", \"honda\", \"21\", \"+ 15.231\", \"15\"],[\"régis laconi\", \"aprilia\", \"21\", \"+ 17.155\", \"14\"],[\"jeremy mcwilliams\", \"proton kr\", \"21\", \"+ 21.847\", \"6\"],[\"john hopkins\", \"yamaha\", \"21\", \"+ 25.121\", \"19\"],[\"sete gibernau\", \"suzuki\", \"21\", \"+ 25.919\", \"16\"],[\"shinya nakano\", \"yamaha\", \"21\", \"+ 26.227\", \"13\"],[\"jean - michel bayle\", \"yamaha\", \"21\", \"+ 27.011\", \"18\"],[\"jurgen vd goorbergh\", \"honda\", \"21\", \"+ 30.342\", \"17\"],[\"josé luis cardoso\", \"yamaha\", \"21\", \"+ 36.574\", \"20\"],[\"daijiro kato\", \"honda\", \"11\", \"accident\", \"5\"],[\"olivier jacque\", \"yamaha\", \"10\", \"retirement\", \"12\"],[\"tetsuya harada\", \"honda\", \"10\", \"retirement\", \"8\"],[\"carlos checa\", \"yamaha\", \"8\", \"accident\", \"2\"]]\nQuestion = Is it true that jeremy mcwilliams got a time of 21.847 on a grid size 6 doing 21 laps?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    riders = get_column_by_name(table_data, \"rider\")\n    laps = get_column_by_name(table_data, \"laps\")\n    times = get_column_by_name(table_data, \"time / retired\")\n    grids = get_column_by_name(table_data, \"grid\")\n    for rider, lap, time, grid in zip(riders, laps, times, grids):\n        if rider.lower() == \"jeremy mcwilliams\":\n            answer = equal_to(lap, \"21\") and equal_to(time, \"+ 21.847\") and equal_to(grid, \"6\")\n            break \n    return answer\n\n### END"}
{"id": "ee3d3f0b-c0c0-4314-9b10-a0d94a0867af", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the howie carr show\ntable_data = [[\"calls\",\"frequency\",\"branding\",\"format\",\"timeslot\",\"group owner\"],[\"wgan\",\"560 khz\",\"news radio 560 wgan\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"whyn\",\"560 khz\",\"news / talk 560 whyn\",\"news / talk\",\"live 3p - 7p\",\"clear channel communications\"],[\"wvmt\",\"620 khz\",\"news / talk 620 wvmt\",\"news / talk\",\"live 3p - 7p\",\"sison broadcasting\"],[\"wrko\",\"680 khz\",\"am 680 wrko\",\"news / talk\",\"live 3p - 7p\",\"entercom\"],[\"wcrn\",\"830 khz\",\"wcrn 830 true talk\",\"news / talk\",\"live 3p - 7p\",\"carter broadcasting\"],[\"wkbk\",\"1290 khz\",\"1290 wkbk w281au 104.1\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"wegp\",\"1390 khz\",\"wegp 1390 am - the talk of the county\",\"news / talk\",\"live 3p - 6p\",\"decelles / media , inc\"],[\"wxtk\",\"95.1 mhz\",\"news radio 95 wxtk\",\"news / talk\",\"live 3p - 7p\",\"qantam of cape cod , llc\"],[\"wntk - fm\",\"99.7 mhz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wuvr\",\"1490 khz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wvom - fm / wvqm\",\"103.9 / 101.3 mhz\",\"the voice of maine\",\"news / talk\",\"live 3p - 7p\",\"blueberry broadcasting\"]]\nQuestion = Is it true that live 3p - 7p is the frequency for calls of whyn?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    calls = get_column_by_name(table_data, \"calls\")\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    for call, frequency in zip(calls, frequencies):\n        if call.lower() == \"whyn\":\n            answer = equal_to(frequency, \"live 3p - 7p\")\n            break \n    return answer\n\n### END"}
{"id": "c4e6f1d2-909f-44d7-b42b-703869b3fa5d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 veikkausliiga\ntable_data = [[\"club\", \"location\", \"stadium\", \"capacity\", \"manager\", \"kitmaker\"],[\"ac oulu\", \"oulu\", \"castrén\", \"4000\", \"juha malinen\", \"umbro\"],[\"fc honka\", \"espoo\", \"tapiolan urheilupuisto\", \"6000\", \"mika lehkosuo\", \"kappa\"],[\"fc inter\", \"turku\", \"veritas stadion\", \"9372\", \"job dragtsma\", \"nike\"],[\"fc lahti\", \"lahti\", \"lahden stadion\", \"15000\", \"ilkka mäkelä\", \"umbro\"],[\"ff jaro\", \"jakobstad\", \"jakobstads centralplan\", \"5000\", \"alexei eremenko sr\", \"errea\"],[\"haka\", \"valkeakoski\", \"tehtaan kenttä\", \"3516\", \"sami ristilä\", \"umbro\"],[\"hjk\", \"helsinki\", \"sonera stadium\", \"10770\", \"antti muurinen\", \"adidas\"],[\"ifk mariehamn\", \"mariehamn\", \"wiklöf holding arena\", \"4000\", \"pekka lyyski\", \"puma\"],[\"jjk\", \"jyväskylä\", \"harjun stadion\", \"3000\", \"kari martonen\", \"legea\"],[\"kups\", \"kuopio\", \"kuopion keskuskenttä\", \"5000\", \"esa pekonen\", \"puma\"],[\"mypa\", \"anjalankoski\", \"saviniemi\", \"4167\", \"janne lindberg\", \"puma\"],[\"tampere united\", \"tampere\", \"ratina stadion\", \"17000\", \"ari hjelm\", \"puma\"],[\"tps\", \"turku\", \"veritas stadion\", \"9372\", \"marko rajamäki\", \"puma\"]]\nQuestion = Is it true that tps' kit is made by puma?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    clubs = get_column_by_name(table_data, \"club\")\n    kitmakers = get_column_by_name(table_data, \"kitmaker\")\n    for club, kitmaker in zip(clubs, kitmakers):\n        if club.lower() == \"tps\":\n            answer = kitmaker.lower() == \"puma\"\n            break\n    return answer\n\n### END"}
{"id": "19b11981-4f98-4aa6-9792-ba98548605f1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of how it 's made episodes\ntable_data = [[\"series ep\", \"episode\", \"segment a\", \"segment b\", \"segment c\", \"segment d\"],[\"20 - 01\", \"248\", \"native healing drums\", \"s raisin\", \"stereoscopic viewers\", \"ribbon microphones\"],[\"20 - 02\", \"249\", \"horse bits\", \"oat cereal\", \"turquoise jewellery\", \"electric scooters\"],[\"20 - 03\", \"250\", \"nail nippers\", \"jade putters\", \"ice cider\", \"water skis\"],[\"20 - 04\", \"251\", \"es stagecoach\", \"road reflectors\", \"fire baked pottery\", \"custom motorcycle tanks\"],[\"20 - 05\", \"252\", \"replica clay pipes\", \"drinking fountains\", \"orange liqueur\", \"compound bows\"],[\"20 - 06\", \"253\", \"tissues\", \"travel trailers\", \"s slipper\", \"motorcycle helmets\"],[\"20 - 07\", \"254\", \"u - locks\", \"tepees\", \"s croissant\", \"rolling luggage\"],[\"20 - 08\", \"255\", \"prams\", \"factory - built homes\", \"wood flutes\", \"bicycle tires\"],[\"20 - 09\", \"256\", \"thinning shears\", \"wagon wheels\", \"toaster pastries\", \"violin bows\"],[\"20 - 10\", \"257\", \"cast iron tubs\", \"hopi kachina dolls\", \"mine truck engine rebuild\", \"memory cards\"],[\"20 - 11\", \"258\", \"cycling shoes\", \"s yurt\", \"marine plywood\", \"oil & encaustic paint\"],[\"20 - 12\", \"259\", \"paper fans\", \"walnut oil\", \"copper (part 1)\", \"copper (part 2)\"]]\nQuestion = Is it true that the first episode numbered 248 has segments dealing with native healing drums , ribbon microphones , and motorcycle helmets?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    episodes = get_column_by_name(table_data, \"episode\")\n    segment_a = get_column_by_name(table_data, \"segment a\")\n    segment_b = get_column_by_name(table_data, \"segment b\")\n    segment_c = get_column_by_name(table_data, \"segment c\")\n    segment_d = get_column_by_name(table_data, \"segment d\")\n    for episode, a, b, c, d in zip(episodes, segment_a, segment_b, segment_c, segment_d):\n        if episode == \"248\":\n            answer = equal_to(a, \"native healing drums\") and equal_to(d, \"ribbon microphones\") and equal_to(c, \"motorcycle helmets\")\n            break \n    return answer\n\n### END"}
{"id": "0dc08b57-44d5-4bc2-b7da-e047321d0630", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1930 grand prix season\ntable_data = [[\"name\",\"circuit\",\"date\",\"winning driver\",\"winning constructor\",\"report\"],[\"circuit d'esterel plage\",\"saint - raphaël\",\"2 march\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"tripoli grand prix\",\"tripoli\",\"23 march\",\"baconin borzacchini\",\"maserati\",\"report\"],[\"monaco grand prix\",\"monte carlo\",\"6 april\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"alessandria circuit\",\"bordino\",\"20 april\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"oran grand prix\",\"arcole\",\"27 april\",\"jean de maleplane\",\"bugatti\",\"report\"],[\"targa florio\",\"madonie\",\"4 may\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"picardy grand prix\",\"péronne\",\"18 may\",\"max fourny\",\"bugatti\",\"report\"],[\"rome grand prix\",\"tre fontane\",\"25 may\",\"luigi arcangeli\",\"maserati\",\"report\"],[\"grand prix des frontières\",\"chimay\",\"9 june\",\"georges de marotte\",\"salmson\",\"report\"],[\"lyon grand prix\",\"quincieux\",\"15 june\",\"louis chiron\",\"bugatti\",\"report\"],[\"grand prix de la marne\",\"reims\",\"29 june\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"eifelrennen\",\"nürburgring\",\"20 july\",\"heinrich - joachim von morgen\",\"bugatti\",\"report\"],[\"dieppe grand prix\",\"dieppe\",\"20 july\",\"marcel lehoux\",\"bugatti\",\"report\"],[\"coppa ciano\",\"montenero\",\"3 august\",\"luigi fagioli\",\"maserati\",\"report\"],[\"dauphiné circuit\",\"grenoble\",\"10 august\",\"philippe étancelin\",\"bugatti\",\"report\"],[\"coppa acerbo\",\"pescara\",\"17 august\",\"achille varzi\",\"maserati\",\"report\"],[\"grand prix du comminges\",\"saint - gaudens\",\"17 august\",\"françois miquel\",\"bugatti\",\"report\"],[\"monza grand prix\",\"monza\",\"7 september\",\"achille varzi\",\"maserati\",\"report\"],[\"lviv grand prix\",\"lviv\",\"8 september\",\"henryk liefeldt\",\"austro daimler\",\"report\"],[\"masaryk circuit\",\"brno\",\"28 september\",\"hermann of leiningen\",\"bugatti\",\"report\"],[\"san sebastián grand prix\",\"lasarte\",\"5 october\",\"achille varzi\",\"maserati\",\"report\"]]\nQuestion = Is it true that the lyon grand prix was won on 15 june by louis chiron driving a bugatti?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    dates = get_column_by_name(table_data, \"date\")\n    winning_drivers = get_column_by_name(table_data, \"winning driver\")\n    winning_constructors = get_column_by_name(table_data, \"winning constructor\")\n    for name, date, winning_driver, winning_constructor in zip(names, dates, winning_drivers, winning_constructors):\n        if equal_to(name, \"lyon grand prix\") and equal_to(date, \"15 june\") and equal_to(winning_driver, \"louis chiron\") and equal_to(winning_constructor, \"bugatti\"):\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "3f3de36e-5334-483c-b104-c90f97d79ad4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = statistics relating to enlargement of the european union\ntable_data = [[\"member countries\", \"population\", \"area (km square)\", \"gdp (billion us)\", \"gdp per capita (us)\"],[\"cyprus\", \"775927\", \"9250\", \"11.681\", \"15054\"],[\"czech republic\", \"10246178\", \"78866\", \"105.248\", \"10272\"],[\"estonia\", \"1341664\", \"45226\", \"22.384\", \"16684\"],[\"hungary\", \"10032375\", \"93030\", \"102183\", \"10185\"],[\"latvia\", \"2306306\", \"64589\", \"24.826\", \"10764\"],[\"lithuania\", \"3607899\", \"65200\", \"31.971\", \"8861\"],[\"malta\", \"396851\", \"316\", \"5.097\", \"12843\"],[\"poland\", \"38580445\", \"311904\", \"316.438\", \"8202\"],[\"slovakia\", \"5423567\", \"49036\", \"42.800\", \"7810\"],[\"slovenia\", \"2011473\", \"20273\", \"29.633\", \"14732\"],[\"accession countries\", \"74722685\", \"737690\", \"685.123\", \"9169\"],[\"existing members (2004)\", \"381781620\", \"3367154\", \"7711.871\", \"20200\"],[\"eu25 (2004)\", \"456504305 ( + 19.57%)\", \"4104844 ( + 17.97%)\", \"8396994 ( + 8.88%)\", \"18394 (8.94%)\"]]\nQuestion = Is it true that the country latvia has a gdp (billion us) 31.971 and gdp per capita (us) of 8861?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    countries = get_column_by_name(table_data, \"member countries\")\n    gdps = get_column_by_name(table_data, \"gdp (billion us)\")\n    gdps_per_capita = get_column_by_name(table_data, \"gdp per capita (us)\")\n    for country, gdp, gdp_per_capita in zip(countries, gdps, gdps_per_capita):\n        if country.lower() == \"latvia\":\n            answer = equal_to(gdp, \"31.971\") and equal_to(gdp_per_capita, \"8861\")\n            break \n    return answer\n\n### END"}
{"id": "e35df03e-84d1-45b6-8abe-9c9bd4bb4e33", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 u.s. women 's open golf championship\ntable_data = [[\"place\", \"player\", \"country\", \"score\", \"to par\", \"money\"],[\"1\", \"cristie kerr\", \"united states\", \"71 + 72 + 66 + 70 = 279\", \"- 5\", \"560000\"],[\"t2\", \"angela park\", \"brazil\", \"68 + 69 + 74 + 70 = 281\", \"- 3\", \"271022\"],[\"t2\", \"lorena ochoa\", \"mexico\", \"71 + 71 + 68 + 71 = 281\", \"- 3\", \"271022\"],[\"t4\", \"se ri pak\", \"south korea\", \"74 + 72 + 68 + 68 = 282\", \"- 2\", \"130549\"],[\"t4\", \"inbee park\", \"south korea\", \"69 + 73 + 71 + 69 = 282\", \"- 2\", \"130549\"],[\"6\", \"jiyai shin\", \"south korea\", \"70 + 69 + 71 + 74 = 284\", \"e\", \"103581\"],[\"7\", \"jee young lee\", \"south korea\", \"72 + 71 + 71 + 71 = 285\", \"+ 1\", \"93031\"],[\"t8\", \"mi hyun kim\", \"south korea\", \"71 + 75 + 70 + 70 = 286\", \"+ 2\", \"82464\"],[\"t8\", \"jeong jang\", \"south korea\", \"72 + 71 + 70 + 73 = 286\", \"+ 2\", \"82464\"],[\"t10\", \"ai miyazato\", \"japan\", \"73 + 73 + 72 + 69 = 287\", \"+ 3\", \"66177\"],[\"t10\", \"kyeong bae\", \"south korea\", \"74 + 71 + 72 + 70 = 287\", \"+ 3\", \"66177\"],[\"t10\", \"julieta granada\", \"paraguay\", \"70 + 69 + 75 + 73 = 287\", \"+ 3\", \"66177\"],[\"t10\", \"morgan pressel\", \"united states\", \"71 + 70 + 69 + 77 = 287\", \"+ 3\", \"66177\"]]\nQuestion = Is it true that when player is mi hyun kim , the place is always t10?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    places = get_column_by_name(table_data, \"place\")\n    answer = True\n    for player, place in zip(players, places):\n        if player.lower() == \"mi hyun kim\" and place.lower() != \"t10\":\n            answer = False\n            break\n    return answer\n\n### END"}
{"id": "a9fd27a8-466f-45ac-a213-93e703a30435", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 intercity football league\ntable_data = [[\"date\", \"team 1\", \"result\", \"team 2\", \"ground\"],[\"november 8 , 2008\", \"taipower\", \"0 - 1\", \"hun sing\", \"chungshan soccer stadium\"],[\"november 8 , 2008\", \"chia cheng hsin\", \"2 - 1\", \"tatung\", \"chungshan soccer stadium\"],[\"november 15 , 2008\", \"tatung\", \"0 - 1\", \"taipower\", \"pailing sport park\"],[\"november 15 , 2008\", \"hun sing\", \"0 - 4\", \"chia cheng hsin\", \"pailing sport park\"],[\"november 22 , 2008\", \"taipower\", \"1 - 0\", \"chia cheng hsin\", \"national pei men senior high school\"],[\"november 22 , 2008\", \"tatung\", \"1 - 1\", \"hun sing\", \"national pei men senior high school\"]]\nQuestion = Is it true that chia cheng hsin lost 0 - 4 at pailing sport park?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    team_1 = get_column_by_name(table_data, \"team 1\")\n    results = get_column_by_name(table_data, \"result\")\n    team_2 = get_column_by_name(table_data, \"team 2\")\n    grounds = get_column_by_name(table_data, \"ground\")\n    for t1, result, t2, ground in zip(team_1, results, team_2, grounds):\n        if t2.lower() == \"chia cheng hsin\" and ground.lower() == \"pailing sport park\":\n            answer = equal_to(result, \"0 - 4\")\n            break \n    return answer\n\n### END"}
{"id": "6c5fbec5-854d-4e21-b4a6-c2a89f1cba70", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1950 world figure skating championships\ntable_data = [[\"rank\", \"name\", \"nation\", \"placings\", \"total\"],[\"1\", \"karol kennedy / peter kennedy\", \"united states\", \"15\", \"96.07\"],[\"2\", \"jennifer nicks / john nicks\", \"united kingdom\", \"28.5\", \"92.70\"],[\"3\", \"marianne nagy / lászló nagy\", \"hungary\", \"32\", \"92.25\"],[\"4\", \"elianne steineman / andré calamé\", \"switzerland\", \"44.5\", \"90.00\"],[\"5\", \"suzanne gheldorf / jacques rénard\", \"belgium\", \"48.5\", \"89.43\"],[\"6\", \"elly stärck / harry gareis\", \"austria\", \"61\", \"88.08\"],[\"7\", \"marlene smith / donald gilchrist\", \"canada\", \"63\", \"87.07\"],[\"8\", \"joan waterhouse / gordon holloway\", \"united kingdom\", \"62\", \"88.31\"],[\"9\", \"liliane de becker / edmund verbustel\", \"belgium\", \"64\", \"88.42\"],[\"10\", \"irene maguire / walter muehlbronner\", \"united states\", \"82\", \"84.26\"],[\"11\", \"sybil cooke / bob hudson\", \"united kingdom\", \"93.5\", \"83.47\"],[\"12\", \"denise favart / jacques favart\", \"france\", \"108\", \"77.73\"]]\nQuestion = Is it true that one is the total for rank 10?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    totals = get_column_by_name(table_data, \"total\")\n    for rank, total in zip(ranks, totals):\n        if rank == \"10\":\n            answer = equal_to(float(total), 1)\n            break \n    return answer\n\n### END"}
{"id": "051274c6-8617-42d0-a653-c554ae7f5940", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 manchester city f.c. season\ntable_data = [[\"exit date\", \"pos\", \"player\", \"to club\", \"transfer fee\"],[\"15 may 2007\", \"df\", \"hatem trabelsi\", \"al - hilal\", \"released\"],[\"23 may 2007\", \"df\", \"sylvain distin\", \"portsmouth\", \"free\"],[\"14 june 2007\", \"mf\", \"joey barton\", \"newcastle united\", \"5.8 m\"],[\"4 july 2007\", \"gk\", \"nicky weaver\", \"charlton athletic\", \"free\"],[\"10 july 2007\", \"mf\", \"trevor sinclair\", \"cardiff city\", \"free\"],[\"16 july 2007\", \"df\", \"stephen jordan\", \"burnley\", \"free\"],[\"31 jan 2008\", \"mf\", \"ousmane dabo\", \"lazio\", \"free\"],[\"31 jan 2008\", \"fw\", \"ishmael miller\", \"west brom albion\", \"9 m - 1.4 m\"]]\nQuestion = Is it true that 10 july 2007 is the exit date of the player who transferred to burnley?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    exit_dates = get_column_by_name(table_data, \"exit date\")\n    to_clubs = get_column_by_name(table_data, \"to club\")\n    for exit_date, to_club in zip(exit_dates, to_clubs):\n        if to_club.lower() == \"burnley\":\n            answer = equal_to(exit_date, \"10 july 2007\")\n            break \n    return answer\n\n### END"}
{"id": "c24921c4-178f-41f2-bd43-96b903a51273", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1950 world figure skating championships\ntable_data = [[\"rank\", \"name\", \"nation\", \"placings\", \"total\"],[\"1\", \"karol kennedy / peter kennedy\", \"united states\", \"15\", \"96.07\"],[\"2\", \"jennifer nicks / john nicks\", \"united kingdom\", \"28.5\", \"92.70\"],[\"3\", \"marianne nagy / lászló nagy\", \"hungary\", \"32\", \"92.25\"],[\"4\", \"elianne steineman / andré calamé\", \"switzerland\", \"44.5\", \"90.00\"],[\"5\", \"suzanne gheldorf / jacques rénard\", \"belgium\", \"48.5\", \"89.43\"],[\"6\", \"elly stärck / harry gareis\", \"austria\", \"61\", \"88.08\"],[\"7\", \"marlene smith / donald gilchrist\", \"canada\", \"63\", \"87.07\"],[\"8\", \"joan waterhouse / gordon holloway\", \"united kingdom\", \"62\", \"88.31\"],[\"9\", \"liliane de becker / edmund verbustel\", \"belgium\", \"64\", \"88.42\"],[\"10\", \"irene maguire / walter muehlbronner\", \"united states\", \"82\", \"84.26\"],[\"11\", \"sybil cooke / bob hudson\", \"united kingdom\", \"93.5\", \"83.47\"],[\"12\", \"denise favart / jacques favart\", \"france\", \"108\", \"77.73\"]]\nQuestion = Is it true that zero is the rank number for a placing of 28.5 and a total less than 91.7?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    placings = get_column_by_name(table_data, \"placings\")\n    totals = get_column_by_name(table_data, \"total\")\n    answer = False\n    for rank, placing, total in zip(ranks, placings, totals):\n        if equal_to(placing, \"28.5\") and less_than(float(total), 91.7):\n            answer = equal_to(rank, \"0\")\n            break\n    return answer\n\n### END"}
{"id": "ec8d19b9-e4e2-4477-85ec-3e89def257a4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1983 nfl draft\ntable_data = [[\"pick\", \"nfl team\", \"player\", \"position\", \"college\"],[\"29\", \"baltimore colts\", \"vernon maxwell\", \"linebacker\", \"arizona state\"],[\"30\", \"houston oilers\", \"harvey salem\", \"tackle\", \"california\"],[\"31\", \"denver broncos\", \"mark cooper\", \"tackle\", \"miami (fl)\"],[\"32\", \"los angeles rams\", \"henry ellard\", \"wide receiver\", \"fresno state\"],[\"33\", \"chicago bears\", \"mike richardson\", \"defensive back\", \"arizona state\"],[\"34\", \"kansas city chiefs\", \"dave lutz\", \"guard\", \"georgia tech\"],[\"35\", \"philadelphia eagles\", \"wes hopkins\", \"safety\", \"southern methodist\"],[\"36\", \"los angeles rams\", \"mike wilcher\", \"linebacker\", \"north carolina\"],[\"37\", \"new york giants\", \"leonard marshall\", \"defensive end\", \"louisiana state\"],[\"38\", \"new orleans saints\", \"steve korte\", \"center\", \"arkansas\"],[\"39\", \"buffalo bills\", \"darryl talley\", \"linebacker\", \"west virginia\"],[\"40\", \"detroit lions\", \"rich strenger\", \"tackle\", \"michigan\"],[\"41\", \"cleveland browns\", \"ron brown\", \"cornerback\", \"arizona state\"],[\"42\", \"houston oilers\", \"keith bostic\", \"defensive back\", \"michigan\"],[\"43\", \"atlanta falcons\", \"james britt\", \"defensive back\", \"louisiana state\"],[\"44\", \"st louis cardinals\", \"cedric mack\", \"cornerback\", \"baylor\"],[\"45\", \"tampa bay buccaneers\", \"randy grimes\", \"center\", \"baylor\"],[\"46\", \"philadelphia eagles\", \"jody schulz\", \"linebacker\", \"east carolina\"],[\"47\", \"new england patriots\", \"darryal wilson\", \"wide receiver\", \"tennessee\"],[\"48\", \"green bay packers\", \"dave drechsler\", \"guard\", \"north carolina\"],[\"49\", \"san francisco 49ers\", \"roger craig\", \"running back\", \"nebraska\"],[\"50\", \"dallas cowboys\", \"mike walter\", \"linebacker\", \"oregon\"],[\"51\", \"new york jets\", \"johnny hector\", \"running back\", \"texas a&m\"],[\"52\", \"pittsburgh steelers\", \"wayne capers\", \"wide receiver\", \"kansas\"],[\"53\", \"cincinnati bengals\", \"ray horton\", \"safety\", \"washington\"],[\"54\", \"los angeles raiders\", \"bill pickel\", \"defensive tackle\", \"rutgers\"],[\"55\", \"miami dolphins\", \"mike charles\", \"defensive tackle\", \"syracuse\"]]\nQuestion = Is it true that steve korte was the player who was the pick by the new orleans saints?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    nfl_teams = get_column_by_name(table_data, \"nfl team\")\n    players = get_column_by_name(table_data, \"player\")\n    answer = False\n    for nfl_team, player in zip(nfl_teams, players):\n        if nfl_team.lower() == \"new orleans saints\" and player.lower() == \"steve korte\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "7d48c14a-230d-4cae-bd28-a701dc673615", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = usa today all - usa high school baseball team\ntable_data = [[\"player\",\"position\",\"school\",\"hometown\",\"mlb draft\"],[\"delmon young\",\"outfielder\",\"camarillo high school\",\"camarillo , ca\",\"1st round - 1st pick of 2003 draft ( devil rays )\"],[\"chris lubanski\",\"outfielder\",\"kennedy - kenrick catholic high school\",\"norristown , pa\",\"1st round - 5th pick of 2003 draft ( royals )\"],[\"lastings milledge\",\"outfielder\",\"lakewood ranch high school\",\"bradenton , fl\",\"1st round - 12th pick of 2003 draft ( mets )\"],[\"brandon wood\",\"infielder\",\"horizon high school\",\"scottsdale , az\",\"1st round - 23rd pick of 2003 draft ( angels )\"],[\"john danks\",\"pitcher\",\"round rock high school\",\"round rock , tx\",\"1st round - 9th pick of 2003 draft ( rangers )\"],[\"jonathan fulton\",\"infielder\",\"george washington high school\",\"danville , va\",\"3rd round - 83rd pick of 2003 draft ( marlins )\"],[\"ian stewart\",\"infielder\",\"la quinta high school\",\"westminster , ca\",\"1st round - 10th pick of 2003 draft ( rockies )\"],[\"jeff allison\",\"pitcher\",\"veterans memorial high school\",\"peabody , ma\",\"1st round - 16th pick of 2003 draft ( marlins )\"],[\"daric barton\",\"catcher\",\"marina high school\",\"huntington beach , ca\",\"1st round - 28th pick of 2003 draft ( cardinals )\"],[\"eric duncan\",\"infielder\",\"seton hall preparatory school\",\"west orange , nj\",\"1st round - 27th pick of 2003 draft ( yankees )\"]]\nQuestion = Is it true that chris lubanski of bradenton , fl attended the lakewood ranch high school?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    hometowns = get_column_by_name(table_data, \"hometown\")\n    schools = get_column_by_name(table_data, \"school\")\n    answer = False\n    for player, hometown, school in zip(players, hometowns, schools):\n        if player.lower() == \"chris lubanski\" and hometown.lower() == \"bradenton , fl\" and school.lower() == \"lakewood ranch high school\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "9ef3b581-536d-4e8a-aed6-60ea87a58843", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1996 - 97 montreal canadiens season\ntable_data = [[\"round\", \"player\", \"position\", \"nationality\", \"college / junior / club team\"],[\"1\", \"matt higgins\", \"center\", \"canada\", \"moose jaw warriors (whl)\"],[\"2\", \"mathieu garon\", \"goalie\", \"canada\", \"victoriaville tigres (qmjhl)\"],[\"3\", \"arron asham\", \"right wing\", \"canada\", \"red deer rebels (whl)\"],[\"4\", \"kim staal\", \"left wing\", \"denmark\", \"malmã if (sweden)\"],[\"4\", \"etienne drapeau\", \"center\", \"canada\", \"beauport harfangs (qmjhl)\"],[\"5\", \"daniel archambault\", \"defence\", \"canada\", \"val - d'or foreurs (qmjhl)\"],[\"6\", \"brett clark\", \"defenceman\", \"canada\", \"university of maine (ncaa)\"],[\"7\", \"timo vertala\", \"left wing\", \"finland\", \"jyp (finland)\"],[\"8\", \"mattia baldi\", \"left wing\", \"switzerland\", \"ambri - piotta (swiss)\"],[\"9\", \"michel tremblay\", \"left wing\", \"canada\", \"shawinigan cataractes (qmjhl)\"]]\nQuestion = Is it true that mathieu garon was a player in the 2nd round?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    players = get_column_by_name(table_data, \"player\")\n    for round, player in zip(rounds, players):\n        if player.lower() == \"mathieu garon\":\n            answer = equal_to(round, \"2\")\n            break \n    return answer\n\n### END"}
{"id": "f4873e05-39b9-4ad9-afaf-1a20fe60fe2c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1975 argentine grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"emerson fittipaldi\", \"mclaren - ford\", \"53\", \"1:39:26.29\", \"5\"],[\"james hunt\", \"hesketh - ford\", \"53\", \"+ 5.91\", \"6\"],[\"carlos reutemann\", \"brabham - ford\", \"53\", \"+ 17.06\", \"3\"],[\"clay regazzoni\", \"ferrari\", \"53\", \"+ 35.79\", \"7\"],[\"patrick depailler\", \"tyrrell - ford\", \"53\", \"+ 54.25\", \"8\"],[\"niki lauda\", \"ferrari\", \"53\", \"+ 1:19.65\", \"4\"],[\"mark donohue\", \"penske - ford\", \"52\", \"+ 1 lap\", \"16\"],[\"jacky ickx\", \"lotus - ford\", \"52\", \"+ 1 lap\", \"18\"],[\"vittorio brambilla\", \"march - ford\", \"52\", \"+ 1 lap\", \"12\"],[\"graham hill\", \"lola - ford\", \"52\", \"+ 1 lap\", \"21\"],[\"jody scheckter\", \"tyrrell - ford\", \"52\", \"+ 1 lap\", \"9\"],[\"tom pryce\", \"shadow - ford\", \"51\", \"transmission\", \"14\"],[\"rolf stommelen\", \"lola - ford\", \"51\", \"+ 2 laps\", \"19\"],[\"jochen mass\", \"mclaren - ford\", \"50\", \"+ 3 laps\", \"13\"],[\"carlos pace\", \"brabham - ford\", \"46\", \"engine\", \"2\"],[\"arturo merzario\", \"williams - ford\", \"44\", \"not classified\", \"20\"],[\"mario andretti\", \"parnelli - ford\", \"27\", \"transmission\", \"10\"],[\"mike wilds\", \"brm\", \"24\", \"engine\", \"22\"],[\"ronnie peterson\", \"lotus - ford\", \"15\", \"engine\", \"11\"],[\"jacques laffite\", \"williams - ford\", \"15\", \"gearbox\", \"17\"],[\"wilson fittipaldi\", \"fittipaldi - ford\", \"12\", \"accident\", \"23\"],[\"john watson\", \"surtees - ford\", \"6\", \"disqualified\", \"15\"],[\"jean - pierre jarier\", \"shadow - ford\", \"0\", \"transmission\", \"1\"]]\nQuestion = Is it true that surtees - ford is the constructor for grid less than 22 and laps of 24?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    constructors = get_column_by_name(table_data, \"constructor\")\n    laps = get_column_by_name(table_data, \"laps\")\n    grids = get_column_by_name(table_data, \"grid\")\n    answer = False\n    for constructor, lap, grid in zip(constructors, laps, grids):\n        if constructor.lower() == \"surtees - ford\" and equal_to(int(lap), 24) and less_than(int(grid), 22):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "b78edf35-dd5e-4b6d-8ab4-28cbe0a40cd1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of airlines of tunisia\ntable_data = [[\"airline\", \"airline (in arabic)\", \"icao\", \"callsign\", \"commenced operations\"],[\"karthago airlines\", \"قرطاج للطيران\", \"kaj\", \"karthago\", \"2001\"],[\"nouvelair\", \"الطيران الجديد تونس\", \"lbt\", \"nouvelair\", \"1989\"],[\"tunisair express\", \"الخطوط التونسية السريعة\", \"tux\", \"tunexpress\", \"1991\"],[\"syphax airlines\", \"سيفاكس أيرلاينز\", \"sya\", \"syphaxair\", \"2011\"],[\"tunisair\", \"الخطوط التونسية\", \"tar\", \"tunair\", \"1948\"],[\"tunisavia\", \"الشركة التونسية للنقل و الخدمات الجوية\", \"taj\", \"tunisavia\", \"2010\"]]\nQuestion = Is it true that nouvelair , with the nouvelair callsign , commenced operations in 1989?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    airlines = get_column_by_name(table_data, \"airline\")\n    callsigns = get_column_by_name(table_data, \"callsign\")\n    commenced_operations = get_column_by_name(table_data, \"commenced operations\")\n    for airline, callsign, commenced_operation in zip(airlines, callsigns, commenced_operations):\n        if airline.lower() == \"nouvelair\" and callsign.lower() == \"nouvelair\":\n            answer = equal_to(commenced_operation, \"1989\")\n            break \n    return answer\n\n### END"}
{"id": "c2b74fbf-98a1-434d-8a0b-3fab5d0e1ee1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"title\", \"from album\", \"label\", \"label - nr\"],[\"1962\", \"tonight / sinnin' sam\", \"lookin' ahead\", \"pacific jazz\", \"x - 340\"],[\"1962\", \"the young rabbits / song of india\", \"lookin' ahead\", \"pacific jazz\", \"x - 342\"],[\"1962\", \"congolese sermon / weather beat\", \"(only on 45)\", \"pacific jazz\", \"x - 357\"],[\"1963\", \"no name samba / tough talk\", \"tough talk\", \"world pacific\", \"x - 371\"],[\"1963\", \"turkish black / boopie\", \"tough talk\", \"world pacific\", \"x - 388\"],[\"1963\", \"spanish castles / bluesette\", \"jazz waltz (w les mccann)\", \"world pacific\", \"406\"],[\"1964\", \"heat wave / on broadway\", \"heat wave\", \"world pacific\", \"401\"],[\"1964\", \"i remember tomorrow / long john\", \"stretchin' out\", \"world pacific\", \"412\"],[\"1965\", \"tough talk / the thing\", \"the thing\", \"world pacific\", \"77800\"],[\"1965\", \"aqua dulce / soul bourgeoisie\", \"chile con soul\", \"world pacific\", \"77806\"],[\"1966\", \"scratch / uptight\", \"talk that talk\", \"pacific jazz\", \"88125\"],[\"1968\", \"ooga - boo - ga - loo / eleanor rigby\", \"lighthouse '68\", \"pacific jazz\", \"88144\"],[\"1968\", \"hey jude / love and peace\", \"powerhouse\", \"pacific jazz\", \"88146\"],[\"1969\", \"get back / willie and laura mae jones\", \"lighthouse '69\", \"word pacific jazz\", \"88153\"],[\"1970\", \"way back home / jackson\", \"old socks , new shoes\", \"chisa\", \"c - 8010\"]]\nQuestion = Is it true that a title from album , heat wave , is listed for the year of 1964?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    albums = get_column_by_name(table_data, \"from album\")\n    answer = False\n    for year, album in zip(years, albums):\n        if year == \"1964\" and album.lower() == \"heat wave\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "bbffbe76-3604-44c2-bec9-f7dc547d8b7c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = malayalam calendar\ntable_data = [[\"months in malayalam era\", \"in malayalam\", \"gregorian calendar\", \"tamil calendar\", \"saka era\", \"sign of zodiac\"],[\"chingam\", \"ചിങ്ങം\", \"august - september\", \"aavani\", \"sravan - bhadrapada\", \"leo\"],[\"kanni\", \"കന്നി\", \"september - october\", \"purattasi\", \"bhadrapada - asvina\", \"virgo\"],[\"tulam\", \"തുലാം\", \"october - november\", \"aippasi\", \"asvina - kartika\", \"libra\"],[\"vrscikam\", \"വൃശ്ചികം\", \"november - december\", \"karthigai\", \"kartika - agrahayana\", \"scorpio\"],[\"dhanu\", \"ധനു\", \"december - january\", \"margazhi\", \"agrahayana - pausa\", \"sagittarius\"],[\"makaram\", \"മകരം\", \"january - february\", \"thai\", \"pausa - magha\", \"capricon\"],[\"kumbham\", \"കുംഭം\", \"february - march\", \"maasi\", \"magha - phalguna\", \"aquarius\"],[\"minam\", \"മീനം\", \"march - april\", \"panguni\", \"phalguna - chaitra\", \"pisces\"],[\"medam\", \"മേടം\", \"april - may\", \"chithirai\", \"chaitra - vaisakha\", \"aries\"],[\"edavam (idavam)\", \"ഇടവം\", \"may - june\", \"vaikasi\", \"vaisakha - jyaistha\", \"taurus\"],[\"mithunam\", \"മിഥുനം\", \"june - july\", \"aani\", \"jyaistha - asada\", \"gemini\"],[\"karkadakam\", \"കര്‍ക്കടകം\", \"july - august\", \"aadi\", \"asada - sravana\", \"cancer\"]]\nQuestion = Is it true that bhadrapada - asvina is in the saka era of the virgo sign of zodiac?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    saka_era = get_column_by_name(table_data, \"saka era\")\n    zodiac_sign = get_column_by_name(table_data, \"sign of zodiac\")\n    answer = \"bhadrapada - asvina\" in saka_era and \"virgo\" in zodiac_sign\n    return answer\n\n### END"}
{"id": "4ad49950-c1b4-48d9-a9a0-80b33be1b3b3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = zorro (musical)\ntable_data = [[\"year\", \"award\", \"category\", \"nominee\", \"result\"],[\"2009\", \"laurence olivier award\", \"best new musical\", \"best new musical\", \"nominated\"],[\"2009\", \"laurence olivier award\", \"best actor in a musical\", \"matt rawle\", \"nominated\"],[\"2009\", \"laurence olivier award\", \"best actress in a musical\", \"emma williams\", \"nominated\"],[\"2009\", \"laurence olivier award\", \"best performance in a supporting role in a musical\", \"lesli margherita\", \"won\"],[\"2009\", \"laurence olivier award\", \"best theatre choreographer\", \"rafael amargo\", \"nominated\"]]\nQuestion = Is it true that rafael amargo was nominated as best theatre choreographer and won?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    nominees = get_column_by_name(table_data, \"nominee\")\n    results = get_column_by_name(table_data, \"result\")\n    for nominee, result in zip(nominees, results):\n        if nominee.lower() == \"rafael amargo\":\n            answer = equal_to(result, \"won\")\n            break \n    return answer\n\n### END"}
{"id": "00df529a-d835-4522-ab76-de4530d93296", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united kingdom general election records\ntable_data = [[\"candidate\",\"party\",\"constituency\",\"year\",\"days\"],[\"alfred dobbs\",\"labour\",\"smethwick\",\"1945\",\"1 1\"],[\"john sunderland\",\"labour\",\"preston\",\"1945\",\"122 1\"],[\"john whittaker\",\"labour\",\"heywood and radcliffe\",\"1945\",\"137 1\"],[\"philip clarke\",\"sinn féin\",\"fermanagh and south tyrone\",\"1955\",\"152 3x\"],[\"thomas mitchell\",\"sinn féin\",\"mid - ulster\",\"1955\",\"152 3x\"],[\"harry west\",\"ulster unionist\",\"fermanagh and south tyrone\",\"february 1974\",\"224 2\"],[\"michael ancram\",\"conservative\",\"berwick and east lothian\",\"february 1974\",\"224 2a\"],[\"barry henderson\",\"conservative\",\"east dunbartonshire\",\"february 1974\",\"224 2a\"],[\"paul tyler\",\"liberal\",\"bodmin\",\"february 1974\",\"224 2a\"],[\"michael winstanley\",\"liberal\",\"hazel grove\",\"february 1974\",\"224 2b\"],[\"james godfrey macmanaway\",\"ulster unionist\",\"belfast west\",\"1950\",\"238 3\"],[\"judith chaplin\",\"conservative\",\"newbury\",\"1992\",\"316 1\"],[\"peter law\",\"independent\",\"blaenau gwent\",\"2005\",\"355 1\"]]\nQuestion = Is it true that in february 1974 , hazel grove was a constituency for the liberal party?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    parties = get_column_by_name(table_data, \"party\")\n    constituencies = get_column_by_name(table_data, \"constituency\")\n    years = get_column_by_name(table_data, \"year\")\n    for party, constituency, year in zip(parties, constituencies, years):\n        if year.lower() == \"february 1974\" and constituency.lower() == \"hazel grove\" and party.lower() == \"liberal\":\n            return True\n    return False\n\n### END"}
{"id": "aa2668ce-b4d1-4480-aa46-9d3913530216", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = golden gate transit\ntable_data = [[\"make\", \"year placed in service\", \"quantity\", \"number of seats\", \"wheelchair accessible\", \"current status\"],[\"gm new look\", \"1971 , 1972\", \"132\", \"45\", \"no\", \"retired , one bus retained for historical purposes\"],[\"gm advanced design\", \"1981\", \"16\", \"43\", \"yes\", \"retired\"],[\"gm advanced design\", \"1983\", \"50\", \"41\", \"yes\", \"retired\"],[\"gillig\", \"1986\", \"4\", \"26\", \"yes\", \"retired\"],[\"mci\", \"1987\", \"21\", \"45\", \"yes\", \"retired\"],[\"tmc\", \"1990\", \"48\", \"39\", \"yes\", \"retired\"],[\"tmc\", \"1991\", \"49\", \"40\", \"yes\", \"retired (26) , reserve fleet (10) , for sale (13)\"],[\"flxible\", \"1994\", \"40\", \"45\", \"yes\", \"retired\"],[\"mci\", \"1996 , 1997\", \"32\", \"57\", \"yes\", \"for sale (21) , unknown (11)\"],[\"novabus\", \"1997\", \"10\", \"43\", \"yes\", \"retired\"],[\"new flyer\", \"2003\", \"8\", \"62\", \"yes\", \"retired\"]]\nQuestion = Is it true that gm advanced design as the highest number of seats?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef is_max(num, num_list):\n    return num == max(num_list)\n\ndef solution(table_data):\n    makes = get_column_by_name(table_data, \"make\")\n    seats = list(map(int, get_column_by_name(table_data, \"number of seats\")))\n    for make, seat in zip(makes, seats):\n        if make.lower() == \"gm advanced design\":\n            answer = is_max(seat, seats)\n            break \n    return answer\n\n### END"}
{"id": "7760e1c4-aa04-4fc1-8cfa-840ea4855d84", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2006 - 07 seattle supersonics season\ntable_data = [[\"game\",\"date\",\"team\",\"score\",\"high points\",\"high rebounds\",\"high assists\",\"location attendance\",\"record\"],[\"1\",\"november 1\",\"portland\",\"l 106 - 110\",\"rashard lewis (25)\",\"rashard lewis (8)\",\"luke ridnour (13)\",\"keyarena 17072\",\"0 - 1\"],[\"2\",\"november 3\",\"l a lakers\",\"l 112 - 118\",\"ray allen (30)\",\"chris wilcox (12)\",\"earl watson (7)\",\"staples center 18997\",\"0 - 2\"],[\"3\",\"november 5\",\"l a lakers\",\"w 117 - 101\",\"ray allen (32)\",\"chris wilcox (8)\",\"luke ridnour (7)\",\"keyarena 17072\",\"1 - 2\"],[\"4\",\"november 7\",\"miami\",\"l 87 - 90\",\"rashard lewis (23)\",\"nick collison (10)\",\"earl watson (6)\",\"american airlines arena 19600\",\"1 - 3\"],[\"5\",\"november 8\",\"orlando\",\"l 87 - 88\",\"ray allen (21)\",\"danny fortson (8)\",\"luke ridnour (6)\",\"amway arena 16312\",\"1 - 4\"],[\"6\",\"november 10\",\"charlotte\",\"w 99 - 85\",\"ray allen (26)\",\"nick collison (15)\",\"luke ridnour (7)\",\"charlotte bobcats arena 13515\",\"2 - 4\"],[\"7\",\"november 11\",\"atlanta\",\"w 113 - 112 (ot)\",\"ray allen (33)\",\"chris wilcox (15)\",\"luke ridnour (5)\",\"philips arena 19309\",\"3 - 4\"],[\"8\",\"november 13\",\"new jersey\",\"w 119 - 113\",\"luke ridnour (32)\",\"rashard lewis (11)\",\"luke ridnour , earl watson (7)\",\"continental airlines arena 14392\",\"4 - 4\"],[\"9\",\"november 15\",\"philadelphia\",\"l 90 - 96\",\"rashard lewis (25)\",\"rashard lewis , chris wilcox (15)\",\"luke ridnour (7)\",\"keyarena 14936\",\"4 - 5\"],[\"10\",\"november 17\",\"utah\",\"l 109 - 118\",\"ray allen (32)\",\"chris wilcox (11)\",\"luke ridnour (7)\",\"keyarena 15513\",\"4 - 6\"],[\"11\",\"november 18\",\"golden state\",\"l 95 - 107\",\"ray allen (34)\",\"ray allen (11)\",\"earl watson (7)\",\"oracle arena 17205\",\"4 - 7\"],[\"12\",\"november 20\",\"new jersey\",\"w 99 - 87\",\"ray allen (29)\",\"ray allen (9)\",\"ray allen , luke ridnour (5)\",\"keyarena 14621\",\"5 - 7\"],[\"13\",\"november 22\",\"l a clippers\",\"w 95 - 85\",\"rashard lewis (35)\",\"nick collison , rashard lewis (13)\",\"luke ridnour (9)\",\"staples center 16290\",\"6 - 7\"],[\"14\",\"november 24\",\"sacramento\",\"l 100 - 109\",\"rashard lewis (26)\",\"chris wilcox (13)\",\"luke ridnour (8)\",\"keyarena 16757\",\"6 - 8\"],[\"15\",\"november 26\",\"san antonio\",\"l 78 - 98\",\"ray allen (21)\",\"johan petro (9)\",\"chris wilcox (5)\",\"keyarena 15483\",\"6 - 9\"]]\nQuestion = Is it true that game 15 was played on november 24?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    game_15_date = dates[14]\n    answer = game_15_date == \"november 24\"\n    return answer\n\n### END"}
{"id": "a54d419c-d60a-41e4-b848-6fab267fd0cf", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of how it 's made episodes\ntable_data = [[\"series ep\",\"episode\",\"segment a\",\"segment b\",\"segment c\",\"segment d\"],[\"20 - 01\",\"248\",\"native healing drums\",\"s raisin\",\"stereoscopic viewers\",\"ribbon microphones\"],[\"20 - 02\",\"249\",\"horse bits\",\"oat cereal\",\"turquoise jewellery\",\"electric scooters\"],[\"20 - 03\",\"250\",\"nail nippers\",\"jade putters\",\"ice cider\",\"water skis\"],[\"20 - 04\",\"251\",\"es stagecoach\",\"road reflectors\",\"fire baked pottery\",\"custom motorcycle tanks\"],[\"20 - 05\",\"252\",\"replica clay pipes\",\"drinking fountains\",\"orange liqueur\",\"compound bows\"],[\"20 - 06\",\"253\",\"tissues\",\"travel trailers\",\"s slipper\",\"motorcycle helmets\"],[\"20 - 07\",\"254\",\"u - locks\",\"tepees\",\"s croissant\",\"rolling luggage\"],[\"20 - 08\",\"255\",\"prams\",\"factory - built homes\",\"wood flutes\",\"bicycle tires\"],[\"20 - 09\",\"256\",\"thinning shears\",\"wagon wheels\",\"toaster pastries\",\"violin bows\"],[\"20 - 10\",\"257\",\"cast iron tubs\",\"hopi kachina dolls\",\"mine truck engine rebuild\",\"memory cards\"],[\"20 - 11\",\"258\",\"cycling shoes\",\"s yurt\",\"marine plywood\",\"oil & encaustic paint\"],[\"20 - 12\",\"259\",\"paper fans\",\"walnut oil\",\"copper (part 1)\",\"copper (part 2)\"]]\nQuestion = Is it true that the topics for segment c of the shows include toaster pastries , wood flutes , and violin bows?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef contains_all(lst1, lst2):\n    return all(elem in lst1 for elem in lst2)\n\ndef solution(table_data):\n    segment_c = get_column_by_name(table_data, \"segment c\")\n    topics = [\"toaster pastries\", \"wood flutes\", \"violin bows\"]\n    answer = contains_all(segment_c, topics)\n    return answer\n\n### END"}
{"id": "75d3d43a-2c9e-4ef0-9ef6-942016750d1c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = türk telekom arena\ntable_data = [[\"project\", \"year\", \"location\", \"capacity\", \"suites\", \"architect\", \"cost\"],[\"faruk süren project\", \"1997 - 2001\", \"mecidiyeköy\", \"40482\", \"125 + 72 boxes without outside seating\", \"bbb architects\", \"118.5 million ( in 2014 dollars)\"],[\"mehmet cansun project\", \"2001\", \"mecidiyeköy\", \"35000\", \"132\", \"gs member architecture group\", \"35 million ( in 2014 dollars)\"],[\"özhan canaydın : back to süren 's project\", \"2002 - 2005\", \"aslantepe\", \"40482\", \"125\", \"bbb architects\", \"90 million ( in 2014 dollars)\"],[\"eren talu bidding project\", \"2007\", \"aslantepe\", \"52000\", \"150\", \"populous\", \"n / a\"],[\"özhan canaydın project\", \"2007\", \"aslantepe\", \"52652\", \"157\", \"asp stuttgart\", \"250 million ( in 2014 dollars)\"]]\nQuestion = Is it true that based on the data provided the following location mecidiyeköy has a capacity of less than 52000 for three different projects?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"location\")\n    capacities = get_column_by_name(table_data, \"capacity\")\n    mecidiyekoy_count = 0\n    for location, capacity in zip(locations, capacities):\n        if location.lower() == \"mecidiyeköy\" and less_than(int(capacity), 52000):\n            mecidiyekoy_count += 1\n    answer = mecidiyekoy_count >= 3\n    return answer\n\n### END"}
{"id": "21ae147e-2dbb-4e5a-9eac-b1092ba2280e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states house of representatives elections , 1984\ntable_data = [[\"district\", \"incumbent\", \"party\", \"first elected\", \"result\", \"candidates\"],[\"florida 1\", \"earl dewitt hutto\", \"democratic\", \"1978\", \"re - elected\", \"earl dewitt hutto (d) unopposed\"],[\"florida 2\", \"don fuqua\", \"democratic\", \"1962\", \"re - elected\", \"don fuqua (d) unopposed\"],[\"florida 3\", \"charles edward bennett\", \"democratic\", \"1948\", \"re - elected\", \"charles edward bennett (d) unopposed\"],[\"florida 5\", \"bill mccollum\", \"republican\", \"1980\", \"re - elected\", \"bill mccollum (r) unopposed\"],[\"florida 6\", \"buddy mackay\", \"democratic\", \"1982\", \"re - elected\", \"buddy mackay (d) 99.3% others 0.7%\"],[\"florida 8\", \"bill young\", \"republican\", \"1970\", \"re - elected\", \"bill young (r) 80.3% robert kent (d) 19.7%\"],[\"florida 9\", \"michael bilirakis\", \"republican\", \"1982\", \"re - elected\", \"michael bilirakis (r) 78.6% jack wilson (d) 21.4%\"],[\"florida 10\", \"andy ireland\", \"republican\", \"1976\", \"re - elected\", \"andy ireland (r) 61.9% patricia m glass (d) 38.1%\"],[\"florida 11\", \"bill nelson\", \"democratic\", \"1978\", \"re - elected\", \"bill nelson (d) 60.5% rob quartel (r) 39.5%\"],[\"florida 12\", \"tom lewis\", \"republican\", \"1982\", \"re - elected\", \"tom lewis (r) unopposed\"],[\"florida 13\", \"connie mack\", \"republican\", \"1982\", \"re - elected\", \"connie mack (r) unopposed\"],[\"florida 14\", \"dan mica\", \"democratic\", \"1978\", \"re - elected\", \"dan mica (d) 55.4% don ross (r) 44.6%\"],[\"florida 16\", \"lawrence j smith\", \"democratic\", \"1982\", \"re - elected\", \"lawrence j smith (d) 56.4% tom bush (r) 43.6%\"],[\"florida 17\", \"william lehman\", \"democratic\", \"1972\", \"re - elected\", \"william lehman (d) unopposed\"],[\"florida 18\", \"claude pepper\", \"democratic\", \"1962\", \"re - elected\", \"claude pepper (d) 60.5% ricardo nunez (r) 39.5%\"]]\nQuestion = Is it true that florida 9 is the district of the incumbent michael bilirakis?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    districts = get_column_by_name(table_data, \"district\")\n    incumbents = get_column_by_name(table_data, \"incumbent\")\n    answer = False\n    for district, incumbent in zip(districts, incumbents):\n        if district.lower() == \"florida 9\" and incumbent.lower() == \"michael bilirakis\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "2c9bcbfb-5f5e-43cd-81c1-dfa3ebd038c4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of rna structure prediction software\ntable_data = [[\"name\", \"species specific\", \"intra - molecular structure\", \"comparative\", \"link\"],[\"diana - microt\", \"human , mouse\", \"no\", \"yes\", \"webserver\"],[\"microtar\", \"no\", \"no\", \"no\", \"sourcecode\"],[\"mitarget\", \"no\", \"no\", \"no\", \"webserver\"],[\"mirror\", \"no\", \"no\", \"no\", \"webserver\"],[\"pictar\", \"8 vertebrates\", \"no\", \"yes\", \"predictions\"],[\"pita\", \"no\", \"yes\", \"no\", \"executable , webserver , predictions\"],[\"rna22\", \"no\", \"no\", \"no\", \"predictions custom\"],[\"rnahybrid\", \"no\", \"no\", \"no\", \"sourcecode , webserver\"],[\"sylamer\", \"no\", \"no\", \"no\", \"sourcecode webserver\"],[\"taref\", \"yes\", \"no\", \"no\", \"server / sourcecode\"],[\"p - taref\", \"yes\", \"no\", \"no\", \"server / standalone\"],[\"targetscan\", \"vertebrates , flies , nematodes\", \"evaluated indirectly\", \"yes\", \"sourcecode , webserver\"]]\nQuestion = Is it true that the link that has both server and sourcecode is species specific human?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef string_in_string(str1, str2):\n    return str1 in str2\n\ndef solution(table_data):\n    species_specific = get_column_by_name(table_data, \"species specific\")\n    links = get_column_by_name(table_data, \"link\")\n    for species, link in zip(species_specific, links):\n        if string_in_string(\"server / sourcecode\", link):\n            answer = string_in_string(\"human\", species)\n            break\n    return answer\n\n### END"}
{"id": "7c3875be-71d0-4ded-9877-b8cd72db61e1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 veikkausliiga\ntable_data = [[\"club\", \"location\", \"stadium\", \"capacity\", \"manager\", \"kitmaker\"],[\"ac oulu\", \"oulu\", \"castrén\", \"4000\", \"juha malinen\", \"umbro\"],[\"fc honka\", \"espoo\", \"tapiolan urheilupuisto\", \"6000\", \"mika lehkosuo\", \"kappa\"],[\"fc inter\", \"turku\", \"veritas stadion\", \"9372\", \"job dragtsma\", \"nike\"],[\"fc lahti\", \"lahti\", \"lahden stadion\", \"15000\", \"ilkka mäkelä\", \"umbro\"],[\"ff jaro\", \"jakobstad\", \"jakobstads centralplan\", \"5000\", \"alexei eremenko sr\", \"errea\"],[\"haka\", \"valkeakoski\", \"tehtaan kenttä\", \"3516\", \"sami ristilä\", \"umbro\"],[\"hjk\", \"helsinki\", \"sonera stadium\", \"10770\", \"antti muurinen\", \"adidas\"],[\"ifk mariehamn\", \"mariehamn\", \"wiklöf holding arena\", \"4000\", \"pekka lyyski\", \"puma\"],[\"jjk\", \"jyväskylä\", \"harjun stadion\", \"3000\", \"kari martonen\", \"legea\"],[\"kups\", \"kuopio\", \"kuopion keskuskenttä\", \"5000\", \"esa pekonen\", \"puma\"],[\"mypa\", \"anjalankoski\", \"saviniemi\", \"4167\", \"janne lindberg\", \"puma\"],[\"tampere united\", \"tampere\", \"ratina stadion\", \"17000\", \"ari hjelm\", \"puma\"],[\"tps\", \"turku\", \"veritas stadion\", \"9372\", \"marko rajamäki\", \"puma\"]]\nQuestion = Is it true that the largest stadium capacity is 17000?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef get_max_value(lst):\n    return max(lst)\n\ndef solution(table_data):\n    capacities = get_column_by_name(table_data, \"capacity\")\n    capacities = [int(capacity) for capacity in capacities]\n    max_capacity = get_max_value(capacities)\n    answer = max_capacity == 17000\n    return answer\n\n### END"}
{"id": "03ab7f6b-ea52-435d-8e81-83c3aa7e84f6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 uci track cycling world cup classics\ntable_data = [[\"rank\",\"team\",\"round1\",\"round2\",\"round3\",\"round4\",\"round5\",\"total points\"],[\"1\",\"germany\",\"92\",\"56\",\"62\",\"52\",\"74\",\"336\"],[\"2\",\"netherlands\",\"41\",\"60\",\"17\",\"72\",\"99\",\"289\"],[\"3\",\"great britain\",\"133\",\"36\",\"15\",\"32\",\"57\",\"273\"],[\"4\",\"france\",\"24\",\"25\",\"65\",\"64\",\"71\",\"249\"],[\"5\",\"spain\",\"49\",\"66\",\"78\",\"17\",\"31\",\"241\"],[\"6\",\"china\",\"41\",\"38\",\"23\",\"108\",\"31\",\"241\"],[\"7\",\"team toshiba\",\"12\",\"98\",\"38\",\"29\",\"35\",\"212\"],[\"8\",\"russia\",\"45\",\"55\",\"51\",\"37\",\"11\",\"199\"],[\"9\",\"ukraine\",\"51\",\"67\",\"22\",\"30\",\"24\",\"194\"]]\nQuestion = Is it true that the score for round 2 for team toshiba is 98?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    round2_scores = get_column_by_name(table_data, \"round2\")\n    for team, round2_score in zip(teams, round2_scores):\n        if team.lower() == \"team toshiba\":\n            answer = equal_to(round2_score, \"98\")\n            break \n    return answer\n\n### END"}
{"id": "b6350d97-0577-4a48-b51b-509c53528437", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1930 grand prix season\ntable_data = [[\"name\",\"circuit\",\"date\",\"winning driver\",\"winning constructor\",\"report\"],[\"circuit d'esterel plage\",\"saint - raphaël\",\"2 march\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"tripoli grand prix\",\"tripoli\",\"23 march\",\"baconin borzacchini\",\"maserati\",\"report\"],[\"monaco grand prix\",\"monte carlo\",\"6 april\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"alessandria circuit\",\"bordino\",\"20 april\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"oran grand prix\",\"arcole\",\"27 april\",\"jean de maleplane\",\"bugatti\",\"report\"],[\"targa florio\",\"madonie\",\"4 may\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"picardy grand prix\",\"péronne\",\"18 may\",\"max fourny\",\"bugatti\",\"report\"],[\"rome grand prix\",\"tre fontane\",\"25 may\",\"luigi arcangeli\",\"maserati\",\"report\"],[\"grand prix des frontières\",\"chimay\",\"9 june\",\"georges de marotte\",\"salmson\",\"report\"],[\"lyon grand prix\",\"quincieux\",\"15 june\",\"louis chiron\",\"bugatti\",\"report\"],[\"grand prix de la marne\",\"reims\",\"29 june\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"eifelrennen\",\"nürburgring\",\"20 july\",\"heinrich - joachim von morgen\",\"bugatti\",\"report\"],[\"dieppe grand prix\",\"dieppe\",\"20 july\",\"marcel lehoux\",\"bugatti\",\"report\"],[\"coppa ciano\",\"montenero\",\"3 august\",\"luigi fagioli\",\"maserati\",\"report\"],[\"dauphiné circuit\",\"grenoble\",\"10 august\",\"philippe étancelin\",\"bugatti\",\"report\"],[\"coppa acerbo\",\"pescara\",\"17 august\",\"achille varzi\",\"maserati\",\"report\"],[\"grand prix du comminges\",\"saint - gaudens\",\"17 august\",\"françois miquel\",\"bugatti\",\"report\"],[\"monza grand prix\",\"monza\",\"7 september\",\"achille varzi\",\"maserati\",\"report\"],[\"lviv grand prix\",\"lviv\",\"8 september\",\"henryk liefeldt\",\"austro daimler\",\"report\"],[\"masaryk circuit\",\"brno\",\"28 september\",\"hermann of leiningen\",\"bugatti\",\"report\"],[\"san sebastián grand prix\",\"lasarte\",\"5 october\",\"achille varzi\",\"maserati\",\"report\"]]\nQuestion = Is it true that henryk liefeldt with a car made by maserati , won the coppa acerbo on the pescara circuit?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    circuits = get_column_by_name(table_data, \"circuit\")\n    winning_drivers = get_column_by_name(table_data, \"winning driver\")\n    winning_constructors = get_column_by_name(table_data, \"winning constructor\")\n    for circuit, winning_driver, winning_constructor in zip(circuits, winning_drivers, winning_constructors):\n        if circuit.lower() == \"pescara\" and winning_driver.lower() == \"henryk liefeldt\" and winning_constructor.lower() == \"maserati\":\n            return True\n    return False\n\n### END"}
{"id": "b143b2da-8ef2-4e06-9f0f-8fd884ff1f5b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glamorgan county cricket club\ntable_data = [[\"score\", \"batsmen\", \"against\", \"location\", \"year\"],[\"374\", \"matthew elliott and steve james\", \"sussex\", \"colwyn bay\", \"2000\"],[\"252\", \"matthew maynard and david hemp\", \"northamptonshire\", \"sophia gardens\", \"2002\"],[\"313\", \"emrys davies and willie jones\", \"essex\", \"brentwood\", \"1948\"],[\"425\", \"adrian dale and viv richards\", \"middlesex\", \"sophia gardens\", \"1993\"],[\"264\", \"maurice robinson and stan montgomery\", \"hampshire\", \"bournemouth\", \"1949\"],[\"240\", \"jim allenby and mark wallace\", \"surrey\", \"the brit oval\", \"2009\"],[\"211\", \"tony cottey and ottis gibson\", \"leicestershire\", \"swansea\", \"1996\"],[\"202\", \"dai davies and joe hills\", \"sussex\", \"eastbourne\", \"1928\"],[\"203\", \"joe hills and johnnie clay\", \"worcestershire\", \"swansea\", \"1929\"],[\"143\", \"terry davies and simon daniels\", \"gloucestershire\", \"swansea\", \"1982\"]]\nQuestion = Is it true that in 1982 terry davies and simon daniels were the batsmen?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    batsmen = get_column_by_name(table_data, \"batsmen\")\n    years = get_column_by_name(table_data, \"year\")\n    for batsman, year in zip(batsmen, years):\n        if year == \"1982\":\n            answer = equal_to(batsman, \"terry davies and simon daniels\")\n            break \n    return answer\n\n### END"}
{"id": "8a4765c0-fd05-41d3-a3d3-d68f78eee217", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = peaches & herb\ntable_data = [[\"title\", \"label\", \"year of release\", \"country of release\", \"peaches :\"],[\"for your love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"let 's fall in love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"peaches & herb\", \"mca\", \"1977\", \"usa\", \"linda greene\"],[\"2 hot\", \"mvp / polydor\", \"1978\", \"usa\", \"linda greene\"],[\"twice the fire\", \"mvp / polydor\", \"1979\", \"usa\", \"linda greene\"],[\"demasiado candente\", \"mvp / polydor\", \"1979\", \"argentina\", \"linda greene\"],[\"worth the wait\", \"mvp / polydor\", \"1980\", \"usa\", \"linda greene\"],[\"sayin' something\", \"mvp / polydor\", \"1981\", \"usa\", \"linda greene\"],[\"remember\", \"the entertainment co / columbia\", \"1983\", \"usa\", \"linda greene\"],[\"colors of love\", \"imagen\", \"2009\", \"usa\", \"meritxell negre\"]]\nQuestion = Is it true that usa was the title that was released in 1983?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    years = get_column_by_name(table_data, \"year of release\")\n    for title, year in zip(titles, years):\n        if year == \"1983\":\n            answer = equal_to(title, \"usa\")\n            break \n    return answer\n\n### END"}
{"id": "8780ffb2-615d-41bd-b7f3-f859c6ab8223", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = meaghan francella\ntable_data = [[\"year\", \"tournaments played\", \"cuts made\", \"wins\", \"2nd\", \"top 10s\", \"best finish\", \"earnings\", \"money list rank\", \"scoring average\", \"scoring rank\"],[\"2005\", \"1\", \"1\", \"0\", \"0\", \"0\", \"t69\", \"2525\", \"n / a\", \"75.00\", \"n / a\"],[\"2006\", \"3\", \"1\", \"0\", \"0\", \"0\", \"t39\", \"55554\", \"183\", \"73.75\", \"n / a\"],[\"2007\", \"25\", \"18\", \"1\", \"0\", \"4\", \"1\", \"507292\", \"29\", \"73.09\", \"66\"],[\"2008\", \"24\", \"11\", \"0\", \"0\", \"0\", \"t13\", \"117682\", \"88\", \"73.75\", \"131\"],[\"2009\", \"22\", \"16\", \"0\", \"0\", \"2\", \"t5\", \"292266\", \"48\", \"72.51\", \"63\"],[\"2010\", \"21\", \"17\", \"0\", \"0\", \"1\", \"t7\", \"168016\", \"57\", \"73.04\", \"77\"],[\"2011\", \"15\", \"8\", \"0\", \"0\", \"0\", \"t22\", \"66813\", \"84\", \"74.23\", \"117\"],[\"2012\", \"15\", \"4\", \"0\", \"0\", \"0\", \"t24\", \"28935\", \"116\", \"74.37\", \"121\"]]\nQuestion = Is it true that the scoring average was 75.00 when the money list rank was n / a?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    money_list_ranks = get_column_by_name(table_data, \"money list rank\")\n    scoring_averages = get_column_by_name(table_data, \"scoring average\")\n    for money_list_rank, scoring_average in zip(money_list_ranks, scoring_averages):\n        if money_list_rank.lower() == \"n / a\":\n            answer = equal_to(scoring_average, \"75.00\")\n            break \n    return answer\n\n### END"}
{"id": "d7cbb7d1-1746-450a-aa81-fc98f18a6244", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"number & name\", \"description\", \"current status\", \"livery\", \"date\"],[\"no 1184\", \"4 - wheeled four compartment\", \"stored (body only)\", \"n / a\", \"circa 1870\"],[\"no de773090\", \"6 - wheeled composite\", \"stored out of view (underframe only)\", \"n / a\", \"circa 1885\"],[\"n / a\", \"third class six compartment\", \"body grounded on the platform at birkhill\", \"n / a\", \"n / a\"],[\"no 461\", \"invalid saloon\", \"stored\", \"nbr\", \"1919\"],[\"no sc3565e\", \"third class corridor compartment\", \"used as a mess room\", \"n / a\", \"1921\"],[\"no 467\", \"third class brake\", \"stored\", \"n / a\", \"1921\"]]\nQuestion = Is it true that the nbr current status before 1919 was stored?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef parse_year(date_str):\n    if \"circa\" in date_str:\n        return int(date_str.split(\" \")[1])\n    elif date_str.isdigit():\n        return int(date_str)\n    else:\n        return None\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    statuses = get_column_by_name(table_data, \"current status\")\n    for date, status in zip(dates, statuses):\n        parsed_year = parse_year(date)\n        if parsed_year is not None and parsed_year < 1919:\n            if status.lower() == \"stored\":\n                return True\n    return False\n\n### END"}
{"id": "983c327d-bb1e-4a20-b24a-a86850056555", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = malayalam calendar\ntable_data = [[\"months in malayalam era\", \"in malayalam\", \"gregorian calendar\", \"tamil calendar\", \"saka era\", \"sign of zodiac\"],[\"chingam\", \"ചിങ്ങം\", \"august - september\", \"aavani\", \"sravan - bhadrapada\", \"leo\"],[\"kanni\", \"കന്നി\", \"september - october\", \"purattasi\", \"bhadrapada - asvina\", \"virgo\"],[\"tulam\", \"തുലാം\", \"october - november\", \"aippasi\", \"asvina - kartika\", \"libra\"],[\"vrscikam\", \"വൃശ്ചികം\", \"november - december\", \"karthigai\", \"kartika - agrahayana\", \"scorpio\"],[\"dhanu\", \"ധനു\", \"december - january\", \"margazhi\", \"agrahayana - pausa\", \"sagittarius\"],[\"makaram\", \"മകരം\", \"january - february\", \"thai\", \"pausa - magha\", \"capricon\"],[\"kumbham\", \"കുംഭം\", \"february - march\", \"maasi\", \"magha - phalguna\", \"aquarius\"],[\"minam\", \"മീനം\", \"march - april\", \"panguni\", \"phalguna - chaitra\", \"pisces\"],[\"medam\", \"മേടം\", \"april - may\", \"chithirai\", \"chaitra - vaisakha\", \"aries\"],[\"edavam (idavam)\", \"ഇടവം\", \"may - june\", \"vaikasi\", \"vaisakha - jyaistha\", \"taurus\"],[\"mithunam\", \"മിഥുനം\", \"june - july\", \"aani\", \"jyaistha - asada\", \"gemini\"],[\"karkadakam\", \"കര്‍ക്കടകം\", \"july - august\", \"aadi\", \"asada - sravana\", \"cancer\"]]\nQuestion = Is it true that bhadrapada - asvina is the saka era of aries?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    saka_era = get_column_by_name(table_data, \"saka era\")\n    zodiac = get_column_by_name(table_data, \"sign of zodiac\")\n    for saka, zod in zip(saka_era, zodiac):\n        if zod.lower() == \"aries\":\n            answer = equal_to(saka, \"bhadrapada - asvina\")\n            break \n    return answer\n\n### END"}
{"id": "7460c936-0180-43b5-9421-9ff5008f7761", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united kingdom general election records\ntable_data = [[\"candidate\", \"party\", \"constituency\", \"year\", \"days\"],[\"alfred dobbs\", \"labour\", \"smethwick\", \"1945\", \"1 1\"],[\"john sunderland\", \"labour\", \"preston\", \"1945\", \"122 1\"],[\"john whittaker\", \"labour\", \"heywood and radcliffe\", \"1945\", \"137 1\"],[\"philip clarke\", \"sinn féin\", \"fermanagh and south tyrone\", \"1955\", \"152 3x\"],[\"thomas mitchell\", \"sinn féin\", \"mid - ulster\", \"1955\", \"152 3x\"],[\"harry west\", \"ulster unionist\", \"fermanagh and south tyrone\", \"february 1974\", \"224 2\"],[\"michael ancram\", \"conservative\", \"berwick and east lothian\", \"february 1974\", \"224 2a\"],[\"barry henderson\", \"conservative\", \"east dunbartonshire\", \"february 1974\", \"224 2a\"],[\"paul tyler\", \"liberal\", \"bodmin\", \"february 1974\", \"224 2a\"],[\"michael winstanley\", \"liberal\", \"hazel grove\", \"february 1974\", \"224 2b\"],[\"james godfrey macmanaway\", \"ulster unionist\", \"belfast west\", \"1950\", \"238 3\"],[\"judith chaplin\", \"conservative\", \"newbury\", \"1992\", \"316 1\"],[\"peter law\", \"independent\", \"blaenau gwent\", \"2005\", \"355 1\"]]\nQuestion = Is it true that in 1955 , candidate thomas mitchell belonged to the sinn féin party?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    candidates = get_column_by_name(table_data, \"candidate\")\n    parties = get_column_by_name(table_data, \"party\")\n    years = get_column_by_name(table_data, \"year\")\n    for candidate, party, year in zip(candidates, parties, years):\n        if candidate.lower() == \"thomas mitchell\" and year == \"1955\":\n            answer = party.lower() == \"sinn féin\"\n            break\n    return answer\n\n### END"}
{"id": "39aec734-61a0-4958-a3c4-0665f398d58d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glamorgan county cricket club\ntable_data = [[\"score\", \"batsmen\", \"against\", \"location\", \"year\"],[\"374\", \"matthew elliott and steve james\", \"sussex\", \"colwyn bay\", \"2000\"],[\"252\", \"matthew maynard and david hemp\", \"northamptonshire\", \"sophia gardens\", \"2002\"],[\"313\", \"emrys davies and willie jones\", \"essex\", \"brentwood\", \"1948\"],[\"425\", \"adrian dale and viv richards\", \"middlesex\", \"sophia gardens\", \"1993\"],[\"264\", \"maurice robinson and stan montgomery\", \"hampshire\", \"bournemouth\", \"1949\"],[\"240\", \"jim allenby and mark wallace\", \"surrey\", \"the brit oval\", \"2009\"],[\"211\", \"tony cottey and ottis gibson\", \"leicestershire\", \"swansea\", \"1996\"],[\"202\", \"dai davies and joe hills\", \"sussex\", \"eastbourne\", \"1928\"],[\"203\", \"joe hills and johnnie clay\", \"worcestershire\", \"swansea\", \"1929\"],[\"143\", \"terry davies and simon daniels\", \"gloucestershire\", \"swansea\", \"1982\"]]\nQuestion = Is it true that the score in the year 1948 was 313 against middlesex?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    scores = get_column_by_name(table_data, \"score\")\n    against = get_column_by_name(table_data, \"against\")\n    years = get_column_by_name(table_data, \"year\")\n    for score, against_team, year in zip(scores, against, years):\n        if year == \"1948\":\n            answer = equal_to(score, \"313\") and equal_to(against_team.lower(), \"middlesex\")\n            break \n    return answer\n\n### END"}
{"id": "5d69f297-977e-4802-a513-aefd24e49753", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 veikkausliiga\ntable_data = [[\"club\", \"location\", \"stadium\", \"capacity\", \"manager\", \"kitmaker\"],[\"ac oulu\", \"oulu\", \"castrén\", \"4000\", \"juha malinen\", \"umbro\"],[\"fc honka\", \"espoo\", \"tapiolan urheilupuisto\", \"6000\", \"mika lehkosuo\", \"kappa\"],[\"fc inter\", \"turku\", \"veritas stadion\", \"9372\", \"job dragtsma\", \"nike\"],[\"fc lahti\", \"lahti\", \"lahden stadion\", \"15000\", \"ilkka mäkelä\", \"umbro\"],[\"ff jaro\", \"jakobstad\", \"jakobstads centralplan\", \"5000\", \"alexei eremenko sr\", \"errea\"],[\"haka\", \"valkeakoski\", \"tehtaan kenttä\", \"3516\", \"sami ristilä\", \"umbro\"],[\"hjk\", \"helsinki\", \"sonera stadium\", \"10770\", \"antti muurinen\", \"adidas\"],[\"ifk mariehamn\", \"mariehamn\", \"wiklöf holding arena\", \"4000\", \"pekka lyyski\", \"puma\"],[\"jjk\", \"jyväskylä\", \"harjun stadion\", \"3000\", \"kari martonen\", \"legea\"],[\"kups\", \"kuopio\", \"kuopion keskuskenttä\", \"5000\", \"esa pekonen\", \"puma\"],[\"mypa\", \"anjalankoski\", \"saviniemi\", \"4167\", \"janne lindberg\", \"puma\"],[\"tampere united\", \"tampere\", \"ratina stadion\", \"17000\", \"ari hjelm\", \"puma\"],[\"tps\", \"turku\", \"veritas stadion\", \"9372\", \"marko rajamäki\", \"puma\"]]\nQuestion = Is it true that the stadium in kuopio is kuopion keskuskenttä?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"location\")\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    for location, stadium in zip(locations, stadiums):\n        if equal_to(location, \"kuopio\"):\n            answer = equal_to(stadium, \"kuopion keskuskenttä\")\n            break \n    return answer\n\n### END"}
{"id": "0a28e8bc-7bb2-4a1e-bef9-4ab8b77e8a97", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of superfund sites in alabama\ntable_data = [[\"cerclis id\",\"name\",\"county\",\"proposed\",\"listed\",\"construction completed\",\"partially deleted\",\"deleted\"],[\"al6210020008\",\"alabama army ammunition plant\",\"talladega\",\"10 / 15 / 1984\",\"07 / 22 / 1987\",\"-\",\"-\",\"-\"],[\"ald004022448\",\"alabama plating company\",\"shelby\",\"08 / 24 / 2000\",\"09 / 18 / 2012\",\"-\",\"-\",\"-\"],[\"ald981868466\",\"american brass\",\"henry\",\"01 / 19 / 1999\",\"05 / 10 / 1999\",\"09 / 01 / 2009\",\"-\",\"-\"],[\"al3210020027\",\"anniston army depot (se industrial area)\",\"calhoun\",\"10 / 15 / 1984\",\"03 / 13 / 1989\",\"-\",\"-\",\"-\"],[\"al0001058056\",\"capitol city plume\",\"montgomery\",\"05 / 11 / 2000\",\"-\",\"-\",\"-\",\"-\"],[\"ald001221902\",\"ciba - geigy corp ( mcintosh plant)\",\"washington\",\"09 / 08 / 1983\",\"09 / 21 / 1984\",\"07 / 19 / 2000\",\"-\",\"-\"],[\"ald041906173\",\"interstate lead company (ilco)\",\"jefferson\",\"09 / 18 / 1985\",\"06 / 10 / 1986\",\"-\",\"-\",\"-\"],[\"ald031618069\",\"mowbray engineering\",\"butler\",\"12 / 30 / 1982\",\"09 / 08 / 1983\",\"09 / 16 / 1991\",\"-\",\"12 / 30 / 1993\"],[\"ald008188708\",\"olin corp ( mcintosh plant)\",\"washington\",\"09 / 08 / 1983\",\"09 / 21 / 1984\",\"-\",\"-\",\"-\"],[\"ald980728703\",\"perdido ground water contamination\",\"baldwin\",\"12 / 30 / 1982\",\"09 / 08 / 1983\",\"07 / 30 / 1993\",\"-\",\"-\"],[\"al7210020742\",\"redstone arsenal ( us army / nasa )\",\"madison\",\"06 / 23 / 1993\",\"05 / 31 / 1994\",\"-\",\"-\",\"-\"],[\"ald980844385\",\"redwing carriers incorporated (saraland)\",\"mobile\",\"06 / 24 / 1988\",\"02 / 21 / 1990\",\"09 / 03 / 2009\",\"-\",\"-\"],[\"ald095688875\",\"stauffer chemical company (cold creek plant)\",\"mobile\",\"09 / 08 / 1983\",\"09 / 21 / 1984\",\"-\",\"-\",\"-\"],[\"ald008161176\",\"stauffer chemical company (lemoyne plant)\",\"mobile\",\"09 / 08 / 1983\",\"09 / 21 / 1984\",\"-\",\"-\",\"-\"],[\"ald007454085\",\"th agriculture & nutrition (montgomery)\",\"montgomery\",\"06 / 24 / 1988\",\"08 / 30 / 1990\",\"09 / 27 / 2002\",\"-\",\"-\"],[\"ald983166299\",\"triana / tennessee river\",\"morgan , limestone , and madison\",\"12 / 30 / 1982\",\"09 / 08 / 1983\",\"12 / 18 / 1991\",\"-\",\"-\"]]\nQuestion = Is it true that for stauffer chemical company (lemoyne plant) listing on 09 / 21 / 1984 no deleted date is mentioned?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    listed_dates = get_column_by_name(table_data, \"listed\")\n    deleted_dates = get_column_by_name(table_data, \"deleted\")\n    for name, listed_date, deleted_date in zip(names, listed_dates, deleted_dates):\n        if name.lower() == \"stauffer chemical company (lemoyne plant)\" and listed_date == \"09 / 21 / 1984\":\n            answer = equal_to(deleted_date, \"-\")\n            break \n    return answer\n\n### END"}
{"id": "9060bbcd-9ceb-4489-82f0-7153d30ce50b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of australian football league pre - season and night series premiers\ntable_data = [[\"season\", \"premier\", \"runner up\", \"score\", \"venue\", \"attendance\", \"premiership\"],[\"1984\", \"essendon\", \"sydney swans\", \"13.11 (89) - 5.8 (38)\", \"waverley park\", \"30824\", \"night series\"],[\"1984\", \"essendon\", \"hawthorn\", \"14.21 (105) - 12.9 (81)\", \"mcg\", \"92685\", \"vfl grand final\"],[\"1986\", \"hawthorn\", \"carlton\", \"9.12 (66) - 5.6 (36)\", \"waverley park\", \"19627\", \"night series\"],[\"1986\", \"hawthorn\", \"carlton\", \"16.14 (110) - 9.14 (68)\", \"mcg\", \"101861\", \"vfl grand final\"],[\"1988\", \"hawthorn\", \"geelong\", \"10.10 (70) - 9.13 (67)\", \"waverley park\", \"35803\", \"pre - season cup\"],[\"1988\", \"hawthorn\", \"melbourne\", \"22.20 (152) - 6.20 (56)\", \"mcg\", \"93754\", \"vfl grand final\"],[\"1993\", \"essendon\", \"richmond\", \"14.18 (102) - 11.13 (79)\", \"waverley park\", \"75533\", \"pre - season cup\"],[\"1993\", \"essendon\", \"carlton carlton\", \"20.13 (133) - 13.11 (89)\", \"mcg\", \"96862\", \"afl grand final\"],[\"2000\", \"essendon\", \"north melbourne\", \"16.21 (117) - 11.10 (76)\", \"mcg\", \"56720\", \"pre - season cup\"],[\"2000\", \"essendon\", \"melbourne\", \"19.21 (135) - 11.9 (75)\", \"mcg\", \"96249\", \"afl grand final\"],[\"2009\", \"geelong\", \"collingwood\", \"0.18.19 (127) - 1.6.6 (51)\", \"etihad stadium\", \"37277\", \"pre - season cup\"]]\nQuestion = Is it true that carlton was the runner - up to hawthorn at the mcg venue in 1986?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    premiers = get_column_by_name(table_data, \"premier\")\n    runner_ups = get_column_by_name(table_data, \"runner up\")\n    venues = get_column_by_name(table_data, \"venue\")\n    answer = False\n    for premier, runner_up, venue in zip(premiers, runner_ups, venues):\n        if premier.lower() == \"hawthorn\" and runner_up.lower() == \"carlton\" and venue.lower() == \"mcg\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "a3c3821a-c3ef-4ab4-be4f-8a76b4836e2d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = radio iq\ntable_data = [[\"call sign\", \"frequency mhz\", \"city of license\", \"erp w\", \"class\", \"fcc info\"],[\"wvtw\", \"88.5\", \"charlottesville , virginia\", \"1000\", \"b1\", \"fcc\"],[\"wffc\", \"89.9\", \"ferrum , virginia\", \"1100\", \"a\", \"fcc\"],[\"wqiq\", \"88.3\", \"spotsylvania , virginia\", \"3500\", \"a\", \"fcc\"],[\"wriq\", \"88.7\", \"lexington , virginia\", \"3900\", \"a\", \"fcc\"],[\"wwvt\", \"1260\", \"christiansburg , virginia\", \"5000 day 25 night\", \"d\", \"fcc\"]]\nQuestion = Is it true that erp w 1100 has a class of a , and a call sign of wffc?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    call_signs = get_column_by_name(table_data, \"call sign\")\n    erp_ws = get_column_by_name(table_data, \"erp w\")\n    classes = get_column_by_name(table_data, \"class\")\n    for call_sign, erp_w, class_ in zip(call_signs, erp_ws, classes):\n        if equal_to(call_sign, \"wffc\") and equal_to(erp_w, \"1100\") and equal_to(class_, \"a\"):\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "fd60f951-8b46-4d64-a5b4-fa95aded5607", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1964 all - ireland senior hurling championship\ntable_data = [[\"rank\", \"player\", \"county\", \"tally\", \"total\", \"opposition\"],[\"1\", \"richard browne\", \"cork\", \"4 - 0\", \"12\", \"galway\"],[\"2\", \"tony forrestal\", \"kilkenny\", \"3 - 2\", \"11\", \"wexford\"],[\"3\", \"pat cronin\", \"clare\", \"2 - 4\", \"10\", \"limerick\"],[\"3\", \"jimmy doyle\", \"tipperary\", \"1 - 7\", \"10\", \"clare\"],[\"3\", \"jimmy doyle\", \"tipperary\", \"0 - 10\", \"10\", \"cork\"],[\"3\", \"jimmy doyle\", \"tipperary\", \"0 - 10\", \"10\", \"kilkenny\"],[\"7\", \"donie nealon\", \"tipperary\", \"3 - 0\", \"9\", \"kilkenny\"],[\"7\", \"philly grimes\", \"waterford\", \"2 - 3\", \"9\", \"cork\"],[\"7\", \"paddy molloy\", \"offaly\", \"1 - 6\", \"9\", \"westmeath\"],[\"10\", \"fran whelan\", \"dublin\", \"2 - 2\", \"8\", \"carlow\"],[\"10\", \"pat harte\", \"cork\", \"2 - 2\", \"8\", \"waterford\"]]\nQuestion = Is it true that rank 1 has a total of 12?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    totals = get_column_by_name(table_data, \"total\")\n    for rank, total in zip(ranks, totals):\n        if rank == \"1\":\n            answer = equal_to(total, \"12\")\n            break \n    return answer\n\n### END"}
{"id": "fc929331-3ed9-421d-b036-73cbab6abfa0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = american dad! (season 1)\ntable_data = [[\"no in series\", \"title\", \"directed by\", \"written by\", \"original air date\", \"production code\", \"us viewers (millions)\"],[\"1\", \"pilot\", \"ron hughart\", \"seth macfarlane , mike barker & matt weitzman\", \"february 6 , 2005\", \"1ajn01\", \"15.10\"],[\"2\", \"threat levels\", \"brent woods\", \"david zuckerman\", \"may 1 , 2005\", \"1ajn02\", \"9.47\"],[\"3\", \"stan knows best\", \"pam cooke\", \"mike barker & matt weitzman\", \"may 8 , 2005\", \"1ajn03\", \"8.23\"],[\"4\", \"francine 's flashback\", \"caleb meurer & brent woods\", \"rick wiener & kenny schwartz\", \"may 15 , 2005\", \"1ajn05\", \"7.84\"],[\"5\", \"roger codger\", \"albert calleros\", \"dan vebber\", \"june 5 , 2005\", \"1ajn04\", \"6.09\"],[\"6\", \"homeland insecurity\", \"rodney clouden\", \"neal boushell & sam o'neal\", \"june 12 , 2005\", \"1ajn06\", \"6.85\"]]\nQuestion = Is it true that the original airing of an episode of the show on june 5 , 2005 was seen by 6.09 million people in the us?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    air_dates = get_column_by_name(table_data, \"original air date\")\n    viewers = get_column_by_name(table_data, \"us viewers (millions)\")\n    for air_date, viewer in zip(air_dates, viewers):\n        if air_date.lower() == \"june 5 , 2005\":\n            answer = equal_to(viewer, \"6.09\")\n            break \n    return answer\n\n### END"}
{"id": "8c4357b5-b200-41c1-b2c4-588e26a0fe16", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 nbl season\ntable_data = [[\"date\",\"home team\",\"score\",\"away team\",\"venue\",\"crowd\",\"box score\",\"report\"],[\"24 february\",\"south dragons\",\"94 - 81\",\"townsville crocodiles\",\"hisense arena\",\"3613\",\"box score\",\"-\"],[\"25 february\",\"melbourne tigers\",\"117 - 99\",\"new zealand breakers\",\"state netball and hockey centre\",\"2998\",\"box score\",\"-\"],[\"26 february\",\"townsville crocodiles\",\"82 - 77\",\"south dragons\",\"townsville entertainment centre\",\"4505\",\"box score\",\"-\"],[\"27 february\",\"new zealand breakers\",\"97 - 103\",\"melbourne tigers\",\"north shore events centre\",\"4500\",\"box score\",\"-\"],[\"28 february\",\"south dragons\",\"101 - 78\",\"townsville crocodiles\",\"hisense arena\",\"3007\",\"box score\",\"-\"]]\nQuestion = Is it true that the townsville crocodiles played the home team , the south dragons , at hisense arena?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    for home_team, away_team, venue in zip(home_teams, away_teams, venues):\n        if equal_to(home_team, \"south dragons\") and equal_to(away_team, \"townsville crocodiles\") and equal_to(venue, \"hisense arena\"):\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "defe0dd9-0713-4758-b7f8-5193dceb4671", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = galatasaray s.k. (superleague formula team)\ntable_data = [[\"sf round\", \"country\", \"location\", \"date\", \"driver\", \"race 1 (pts)\", \"race 2 (pts)\", \"race 3\", \"race total (pts)\"],[\"1\", \"france\", \"circuit de nevers magny - cours\", \"28 june 2009\", \"duncan tappy\", \"32\", \"16\", \"dnq\", \"48\"],[\"2\", \"belgium\", \"zolder\", \"19 july 2009\", \"duncan tappy\", \"20\", \"7\", \"n / a\", \"75\"],[\"3\", \"england\", \"donington park\", \"2 august 2009\", \"scott mansell\", \"12\", \"14\", \"dnq\", \"101\"],[\"4\", \"portugal\", \"estoril circuit\", \"6 september 2009\", \"ho pin tung\", \"17\", \"7\", \"dnq\", \"133\"],[\"5\", \"italy\", \"autodromo nazionale monza\", \"4 october 2009\", \"ho pin tung\", \"8\", \"7\", \"n / a\", \"182\"]]\nQuestion = Is it true that at race 1 , england earned 12 points at race 2 , they earned 14.0?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    countries = get_column_by_name(table_data, \"country\")\n    race_1_pts = get_column_by_name(table_data, \"race 1 (pts)\")\n    race_2_pts = get_column_by_name(table_data, \"race 2 (pts)\")\n    for country, race_1_pt, race_2_pt in zip(countries, race_1_pts, race_2_pts):\n        if country.lower() == \"england\":\n            answer = equal_to(race_1_pt, \"12\") and equal_to(race_2_pt, \"14\")\n            break \n    return answer\n\n### END"}
{"id": "a87ba522-0fab-4df0-a467-1f66cd059d79", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = ádammo\ntable_data = [[\"año\", \"trabajo nominado\", \"premio\", \"categoría\", \"country\", \"resultado\"],[\"2009\", \"adammo\", \"mtv latin america\", \"revelation artist\", \"colombia\", \"nominate\"],[\"2009\", \"adammo\", \"mtv latin america\", \"best new artist : center\", \"colombia\", \"winner\"],[\"2009\", \"adammo\", \"mtv latin america\", \"prize zone\", \"colombia\", \"nominate\"],[\"2010\", \"adammo\", \"premios apdayc\", \"rock group of the year\", \"perú\", \"winner\"],[\"2010\", \"adammo\", \"premios apdayc\", \"artist of the year\", \"perú\", \"nominate\"],[\"2010\", \"adammo\", \"premios orgullosamente latino\", \"grupo latin of the year\", \"mexico\", \"nominate\"],[\"2010\", \"algún día\", \"latin grammy awards\", \"short video of the year\", \"eeuu\", \"nominate\"],[\"2010\", \"adammo\", \"premios clarín\", \"best music video of the year\", \"argentina\", \"nominate\"],[\"2010\", \"adammo\", \"premios clarín\", \"best international breakthrough\", \"argentina\", \"nominate\"],[\"2010\", \"adammo\", \"premios clarín\", \"best international album\", \"argentina\", \"nominate\"],[\"2010\", \"algún día\", \"radio can\", \"best video\", \"colombia\", \"nominate\"],[\"2011\", \"adammo\", \"premios apdayc\", \"rock group of the year\", \"perú\", \"winner\"],[\"2011\", \"adammo\", \"mtv europe music awards\", \"world wide act latin american\", \"europa\", \"nominate\"],[\"2011\", \"adammo\", \"zona joven\", \"best pop rock peruano\", \"perú\", \"winner\"],[\"2012\", \"siento que caigo\", \"radio can\", \"song of the year\", \"perú\", \"nominate\"]]\nQuestion = Is it true that 2010 is the smallest ano?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef is_smallest(num, num_list):\n    return num == min(num_list)\n\ndef solution(table_data):\n    años = get_column_by_name(table_data, \"año\")\n    años = [int(año) for año in años]\n    answer = is_smallest(2010, años)\n    return answer\n\n### END"}
{"id": "cf237202-d444-4974-b8db-db931c2d01aa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = usa today all - usa high school baseball team\ntable_data = [[\"player\", \"position\", \"school\", \"hometown\", \"mlb draft\"],[\"delmon young\", \"outfielder\", \"camarillo high school\", \"camarillo , ca\", \"1st round - 1st pick of 2003 draft ( devil rays )\"],[\"chris lubanski\", \"outfielder\", \"kennedy - kenrick catholic high school\", \"norristown , pa\", \"1st round - 5th pick of 2003 draft ( royals )\"],[\"lastings milledge\", \"outfielder\", \"lakewood ranch high school\", \"bradenton , fl\", \"1st round - 12th pick of 2003 draft ( mets )\"],[\"brandon wood\", \"infielder\", \"horizon high school\", \"scottsdale , az\", \"1st round - 23rd pick of 2003 draft ( angels )\"],[\"john danks\", \"pitcher\", \"round rock high school\", \"round rock , tx\", \"1st round - 9th pick of 2003 draft ( rangers )\"],[\"jonathan fulton\", \"infielder\", \"george washington high school\", \"danville , va\", \"3rd round - 83rd pick of 2003 draft ( marlins )\"],[\"ian stewart\", \"infielder\", \"la quinta high school\", \"westminster , ca\", \"1st round - 10th pick of 2003 draft ( rockies )\"],[\"jeff allison\", \"pitcher\", \"veterans memorial high school\", \"peabody , ma\", \"1st round - 16th pick of 2003 draft ( marlins )\"],[\"daric barton\", \"catcher\", \"marina high school\", \"huntington beach , ca\", \"1st round - 28th pick of 2003 draft ( cardinals )\"],[\"eric duncan\", \"infielder\", \"seton hall preparatory school\", \"west orange , nj\", \"1st round - 27th pick of 2003 draft ( yankees )\"]]\nQuestion = Is it true that norristown , pa is the hometown of delmon young?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    hometowns = get_column_by_name(table_data, \"hometown\")\n    answer = False\n    for player, hometown in zip(players, hometowns):\n        if player.lower() == \"delmon young\":\n            answer = hometown.lower() == \"norristown , pa\"\n            break\n    return answer\n\n### END"}
{"id": "bf6e812b-0ad6-4fc0-9f9f-135fe6518fc4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of americas records in swimming\ntable_data = [[\"event\", \"time\", \"nationality\", \"date\", \"meet\", \"location\"],[\"50 m freestyle\", \"20.91\", \"brazil\", \"18 december 2009\", \"brazilian championships\", \"são paulo, brazil\"],[\"100 m freestyle\", \"46.91\", \"brazil\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m freestyle\", \"1:42.96\", \"united states\", \"12 august 2008\", \"olympic games\", \"beijing, china\"],[\"400 m freestyle\", \"3:42.78\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"800 m freestyle\", \"7:41.86\", \"canada\", \"27 july 2011\", \"world championships\", \"shanghai, china\"],[\"1500 m freestyle\", \"14:39.63\", \"canada\", \"4 august 2012\", \"olympic games\", \"london, united kingdom\"],[\"50 m backstroke\", \"24.33\", \"united states\", \"5 december 2008\", \"dutch swim cup\", \"eindhoven, netherlands\"],[\"100 m backstroke\", \"51.94\", \"united states\", \"8 july 2009\", \"us championships\", \"indianapolis, united states\"],[\"200 m backstroke\", \"1:51.92\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m breaststroke\", \"26.76\", \"brazil\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"100 m breaststroke\", \"58.96\", \"united states\", \"26 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m breaststroke\", \"2:07.42\", \"united states\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m butterfly\", \"22.76\", \"brazil\", \"26 april 2012\", \"maria lenk trophy\", \"rio de janeiro, brazil\"],[\"100 m butterfly\", \"49.82\", \"united states\", \"1 august 2009\", \"world championships\", \"rome, italy\"],[\"200 m butterfly\", \"1:51.51\", \"united states\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m individual medley\", \"1:54.00\", \"united states\", \"28 july 2011\", \"world championships\", \"shanghai, china\"],[\"400 m individual medley\", \"4:03.84\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"4100 m freestyle relay\", \"3:08.24\", \"united states\", \"11 august 2008\", \"olympic games\", \"beijing, china\"],[\"4200 m freestyle relay\", \"6:58.55\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"4100 m medley relay\", \"3:27.28\", \"united states\", \"2 august 2009\", \"world championships\", \"rome, italy\"]]\nQuestion = Is it true that the winning time in the 100 m freestyle event was 46.91?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    times = get_column_by_name(table_data, \"time\")\n    for event, time in zip(events, times):\n        if event.lower() == \"100 m freestyle\":\n            answer = equal_to(time, \"46.91\")\n            break \n    return answer\n\n### END"}
{"id": "a48d8bbe-934d-482d-93e1-3d61b16eef1e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = anna kournikova career statistics\ntable_data = [[\"outcome\", \"year\", \"championship\", \"surface\", \"partner\", \"opponents in final\", \"score in final\"],[\"winners\", \"1999\", \"indian wells\", \"hard\", \"martina hingis\", \"mary joe fernández jana novotná\", \"6 - 2 , 6 - 2\"],[\"winners\", \"1999\", \"rome\", \"clay\", \"martina hingis\", \"alexandra fusai nathalie tauziat\", \"6 - 2 , 6 - 2\"],[\"runner - up\", \"2000\", \"indian wells\", \"hard\", \"natasha zvereva\", \"lindsay davenport corina morariu\", \"6 - 3 , 6 - 2\"],[\"runner - up\", \"2000\", \"moscow\", \"carpet\", \"martina hingis\", \"julie halard - decugis ai sugiyama\", \"4 - 6 , 6 - 4 , 7 - 6 (7 - 5)\"],[\"winners\", \"2000\", \"zürich\", \"carpet\", \"martina hingis\", \"kimberly po anne - gaëlle sidot\", \"6 - 3 , 6 - 4\"],[\"runner - up\", \"2001\", \"tokyo\", \"hard\", \"iroda tulyaganova\", \"lisa raymond rennae stubbs\", \"7 - 6 (7 - 5) , 6 - 2 , 7 - 6 (8 - 6)\"]]\nQuestion = Is it true that the entire final score in the tokyo championship was 4 - 6 , 6 - 4 , 7 - 6 (7 - 5)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    championships = get_column_by_name(table_data, \"championship\")\n    scores = get_column_by_name(table_data, \"score in final\")\n    for championship, score in zip(championships, scores):\n        if championship.lower() == \"tokyo\":\n            answer = equal_to(score, \"4 - 6 , 6 - 4 , 7 - 6 (7 - 5)\")\n            break \n    return answer\n\n### END"}
{"id": "db97bf7f-85b3-4aa3-a021-0f074c098e7e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = somerset county cricket club in 2009\ntable_data = [[\"player\", \"matches\", \"innings\", \"wickets\", \"average\", \"bbi\", \"bbm\", \"5wi\"],[\"charl willoughby\", \"16\", \"26\", \"54\", \"30.03\", \"5 / 56\", \"7 / 170\", \"3\"],[\"david stiff\", \"10\", \"18\", \"31\", \"36.12\", \"5 / 91\", \"5 / 93\", \"1\"],[\"alfonso thomas\", \"14\", \"22\", \"35\", \"37.62\", \"5 / 53\", \"8 / 152\", \"1\"],[\"ben phillips\", \"7\", \"11\", \"12\", \"38.00\", \"4 / 46\", \"4 / 73\", \"0\"],[\"arul suppiah\", \"16\", \"19\", \"15\", \"45.46\", \"3 / 58\", \"5 / 85\", \"0\"],[\"peter trego\", \"16\", \"25\", \"19\", \"46.78\", \"3 / 53\", \"3 / 74\", \"0\"],[\"andrew caddick\", \"5\", \"8\", \"10\", \"52.50\", \"3 / 53\", \"4 / 95\", \"0\"]]\nQuestion = Is it true that charl willoughby had an average greater than 50.05 and less than 25 innings?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef less(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    averages = get_column_by_name(table_data, \"average\")\n    innings = get_column_by_name(table_data, \"innings\")\n    for player, average, inning in zip(players, averages, innings):\n        if player.lower() == \"charl willoughby\":\n            answer = greater(float(average), 50.05) and less(int(inning), 25)\n            break \n    return answer\n\n### END"}
{"id": "851c2bc9-8cee-4302-8b29-293ab3c4def9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = statistics relating to enlargement of the european union\ntable_data = [[\"member countries\", \"population\", \"area (km square)\", \"gdp (billion us)\", \"gdp per capita (us)\"],[\"cyprus\", \"775927\", \"9250\", \"11.681\", \"15054\"],[\"czech republic\", \"10246178\", \"78866\", \"105.248\", \"10272\"],[\"estonia\", \"1341664\", \"45226\", \"22.384\", \"16684\"],[\"hungary\", \"10032375\", \"93030\", \"102183\", \"10185\"],[\"latvia\", \"2306306\", \"64589\", \"24.826\", \"10764\"],[\"lithuania\", \"3607899\", \"65200\", \"31.971\", \"8861\"],[\"malta\", \"396851\", \"316\", \"5.097\", \"12843\"],[\"poland\", \"38580445\", \"311904\", \"316.438\", \"8202\"],[\"slovakia\", \"5423567\", \"49036\", \"42.800\", \"7810\"],[\"slovenia\", \"2011473\", \"20273\", \"29.633\", \"14732\"],[\"accession countries\", \"74722685\", \"737690\", \"685.123\", \"9169\"],[\"existing members (2004)\", \"381781620\", \"3367154\", \"7711.871\", \"20200\"],[\"eu25 (2004)\", \"456504305 ( + 19.57%)\", \"4104844 ( + 17.97%)\", \"8396994 ( + 8.88%)\", \"18394 (8.94%)\"]]\nQuestion = Is it true that the population of slovenia is 2011473 and her gdp per capita is 14732 us dollars?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    member_countries = get_column_by_name(table_data, \"member countries\")\n    populations = get_column_by_name(table_data, \"population\")\n    gdp_per_capita = get_column_by_name(table_data, \"gdp per capita (us)\")\n    for member_country, population, gdp in zip(member_countries, populations, gdp_per_capita):\n        if member_country.lower() == \"slovenia\":\n            answer = equal_to(population, \"2011473\") and equal_to(gdp, \"14732\")\n            break \n    return answer\n\n### END"}
{"id": "1bb21674-1660-4f54-adae-37931c5cbd0a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mysterious ways (tv series)\ntable_data = [[\"series\",\"season\",\"title\",\"director\",\"writer (s)\",\"nbc airdate\",\"code\"],[\"23\",\"1\",\"phoenix\",\"michael robison\",\"carl binder\",\"july 13 , 2001\",\"201\"],[\"24\",\"2\",\"one of us\",\"michael robison\",\"melissa r byer , treena hancock\",\"july 20 , 2001\",\"205\"],[\"25\",\"3\",\"pure of heart\",\"rick stevenson\",\"barbara covington\",\"july 27 , 2001\",\"204\"],[\"26\",\"4\",\"condemned\",\"michael robison\",\"dawn ritchie , carl binder\",\"august 3 , 2001\",\"207\"],[\"27\",\"5\",\"lost souls\",\"richard martin\",\"melissa r byer , treena hancock\",\"september 4 , 2001\",\"210\"],[\"28\",\"6\",\"spike\",\"rick stevenson\",\"eric tuchman\",\"september 18 , 2001\",\"202\"],[\"29\",\"7\",\"child of wonder\",\"ken jubenvill\",\"eric tuchman\",\"october 2 , 2001\",\"206\"],[\"30\",\"8\",\"29\",\"ken jubenvill\",\"deborah starr seibel\",\"october 9 , 2001\",\"208\"],[\"31\",\"9\",\"love 's divine\",\"scott williams\",\"john mandel\",\"october 16 , 2001\",\"209\"],[\"32\",\"10\",\"the big picture\",\"ken jubenvill\",\"philip gerson\",\"november 6 , 2001\",\"211\"],[\"33\",\"11\",\"a time to every purpose\",\"gil shilton\",\"barbara covington\",\"november 13 , 2001\",\"212\"],[\"34\",\"12\",\"doctor in the house\",\"brad turner\",\"philip gerson\",\"november 27 , 2001\",\"203\"],[\"35\",\"13\",\"the last dance\",\"ken jubenvill\",\"dan d'amelio\",\"december 11 , 2001\",\"213\"],[\"36\",\"14\",\"free spirit\",\"eric tuchman\",\"ken jubenvill\",\"january 15 , 2002\",\"214\"],[\"37\",\"15\",\"spark of life\",\"rick stevenson\",\"melissa r byer , treena hancock\",\"january 22 , 2002\",\"220\"],[\"38\",\"16\",\"face in the crowd\",\"m robison\",\"barbara covington\",\"february 5 , 2002\",\"222\"],[\"39\",\"17\",\"logan miller\",\"richard martin\",\"barbara covington\",\"february 26 , 2002\",\"217\"],[\"40\",\"18\",\"friends in need\",\"ken jubenvill\",\"eric tuchman\",\"march 19 , 2002\",\"218\"],[\"41\",\"19\",\"a man of god\",\"brad turner\",\"carl binder\",\"march 26 , 2002\",\"219\"],[\"42\",\"20\",\"muti\",\"michael robison\",\"treena hancock , melissa r byer\",\"april 30 , 2002\",\"215\"],[\"43\",\"21\",\"listen\",\"scott williams\",\"deborah starr seibel\",\"may 7 , 2002\",\"221\"]]\nQuestion = Is it true that dan d'amelio was the writer of the last dance?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_written_by = get_column_by_name(table_data, \"writer (s)\")\n    answer = \"dan d'amelio\" in column_written_by\n    return answer\n\n### END"}
{"id": "6e544089-8010-4216-8619-4cb3781342d6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"class\", \"part 1\", \"part 2\", \"part 3\", \"part 4\", \"verb meaning\"],[\"1\", \"rīdan\", \"rād\", \"ridon\", \"riden\", \"to ride\"],[\"2a\", \"frēosan\", \"frēas\", \"fruron\", \"froren\", \"to freeze\"],[\"2b\", \"lūcan\", \"lēac\", \"lucon\", \"locen\", \"to lock\"],[\"3a\", \"bindan\", \"band\", \"bundon\", \"bunden\", \"to bind\"],[\"3b\", \"weorþan\", \"wearþ\", \"wurdon\", \"worden\", \"to become\"],[\"4\", \"beran\", \"bær\", \"bǣron\", \"boren\", \"to bear\"],[\"5\", \"lesan\", \"læs\", \"lǣron\", \"leren\", \"to gather\"],[\"6\", \"alan\", \"ōl\", \"ōlon\", \"alen\", \"to nourish , to grow\"],[\"7a\", \"hātan\", \"hēt\", \"hēton\", \"hāten\", \"to call , to be called\"],[\"7b\", \"hlēapan\", \"hlēop\", \"hlēppon\", \"hlēapen\", \"to leap\"],[\"7c\", \"healdan\", \"hēold\", \"hēoldon\", \"healden\", \"to hold\"],[\"7d\", \"rǣdan\", \"rēd\", \"rēdon\", \"rǣden\", \"to advise , to interpret\"]]\nQuestion = Is it true that part 3 lucon has a verb meaning of to lock?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    part_3 = get_column_by_name(table_data, \"part 3\")\n    verb_meaning = get_column_by_name(table_data, \"verb meaning\")\n    for part, meaning in zip(part_3, verb_meaning):\n        if part.lower() == \"lucon\":\n            answer = equal_to(meaning, \"to lock\")\n            break \n    return answer\n\n### END"}
{"id": "a35d7aa3-608e-4d78-a592-593a71dfdd91", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1972 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"st kilda\", \"13.12 (90)\", \"melbourne\", \"13.11 (89)\", \"moorabbin oval\", \"18836\", \"19 august 1972\"],[\"south melbourne\", \"9.12 (66)\", \"footscray\", \"11.13 (79)\", \"lake oval\", \"9154\", \"19 august 1972\"],[\"richmond\", \"20.17 (137)\", \"fitzroy\", \"13.22 (100)\", \"mcg\", \"27651\", \"19 august 1972\"],[\"geelong\", \"17.10 (112)\", \"collingwood\", \"17.9 (111)\", \"kardinia park\", \"23108\", \"19 august 1972\"],[\"north melbourne\", \"8.12 (60)\", \"carlton\", \"23.11 (149)\", \"arden street oval\", \"11271\", \"19 august 1972\"],[\"hawthorn\", \"15.16 (106)\", \"essendon\", \"12.15 (87)\", \"vfl park\", \"36749\", \"19 august 1972\"]]\nQuestion = Is it true that the home team of geelong had a crowd of 23108 on august 19th , 1972?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    dates = get_column_by_name(table_data, \"date\")\n    for home_team, crowd, date in zip(home_teams, crowds, dates):\n        if home_team.lower() == \"geelong\" and date.lower() == \"19 august 1972\":\n            answer = equal_to(crowd, \"23108\")\n            break \n    return answer\n\n### END"}
{"id": "2eb6b0e6-ddf5-4815-93ef-7718a0e548d2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1983 nfl draft\ntable_data = [[\"pick\", \"nfl team\", \"player\", \"position\", \"college\"],[\"29\", \"baltimore colts\", \"vernon maxwell\", \"linebacker\", \"arizona state\"],[\"30\", \"houston oilers\", \"harvey salem\", \"tackle\", \"california\"],[\"31\", \"denver broncos\", \"mark cooper\", \"tackle\", \"miami (fl)\"],[\"32\", \"los angeles rams\", \"henry ellard\", \"wide receiver\", \"fresno state\"],[\"33\", \"chicago bears\", \"mike richardson\", \"defensive back\", \"arizona state\"],[\"34\", \"kansas city chiefs\", \"dave lutz\", \"guard\", \"georgia tech\"],[\"35\", \"philadelphia eagles\", \"wes hopkins\", \"safety\", \"southern methodist\"],[\"36\", \"los angeles rams\", \"mike wilcher\", \"linebacker\", \"north carolina\"],[\"37\", \"new york giants\", \"leonard marshall\", \"defensive end\", \"louisiana state\"],[\"38\", \"new orleans saints\", \"steve korte\", \"center\", \"arkansas\"],[\"39\", \"buffalo bills\", \"darryl talley\", \"linebacker\", \"west virginia\"],[\"40\", \"detroit lions\", \"rich strenger\", \"tackle\", \"michigan\"],[\"41\", \"cleveland browns\", \"ron brown\", \"cornerback\", \"arizona state\"],[\"42\", \"houston oilers\", \"keith bostic\", \"defensive back\", \"michigan\"],[\"43\", \"atlanta falcons\", \"james britt\", \"defensive back\", \"louisiana state\"],[\"44\", \"st louis cardinals\", \"cedric mack\", \"cornerback\", \"baylor\"],[\"45\", \"tampa bay buccaneers\", \"randy grimes\", \"center\", \"baylor\"],[\"46\", \"philadelphia eagles\", \"jody schulz\", \"linebacker\", \"east carolina\"],[\"47\", \"new england patriots\", \"darryal wilson\", \"wide receiver\", \"tennessee\"],[\"48\", \"green bay packers\", \"dave drechsler\", \"guard\", \"north carolina\"],[\"49\", \"san francisco 49ers\", \"roger craig\", \"running back\", \"nebraska\"],[\"50\", \"dallas cowboys\", \"mike walter\", \"linebacker\", \"oregon\"],[\"51\", \"new york jets\", \"johnny hector\", \"running back\", \"texas a&m\"],[\"52\", \"pittsburgh steelers\", \"wayne capers\", \"wide receiver\", \"kansas\"],[\"53\", \"cincinnati bengals\", \"ray horton\", \"safety\", \"washington\"],[\"54\", \"los angeles raiders\", \"bill pickel\", \"defensive tackle\", \"rutgers\"],[\"55\", \"miami dolphins\", \"mike charles\", \"defensive tackle\", \"syracuse\"]]\nQuestion = Is it true that rich strenger of nfl team buffalo bills plays at the linebacker position was pick number 39?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    picks = get_column_by_name(table_data, \"pick\")\n    nfl_teams = get_column_by_name(table_data, \"nfl team\")\n    players = get_column_by_name(table_data, \"player\")\n    positions = get_column_by_name(table_data, \"position\")\n    for pick, nfl_team, player, position in zip(picks, nfl_teams, players, positions):\n        if pick == \"39\" and nfl_team.lower() == \"buffalo bills\" and player.lower() == \"rich strenger\" and position.lower() == \"linebacker\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "05964e85-e451-42f4-b6ec-b5ed7f1f1f4c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glover teixeira\ntable_data = [[\"result\", \"opponent\", \"method\", \"event\", \"date\"],[\"loss\", \"gabriel vella\", \"points\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"armando sapo\", \"submission\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"salvador minnit\", \"submission\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"jorge bezerra\", \"points\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"loss\", \"vinny magalhães\", \"submission (armbar)\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"loss\", \"gerardi rinaldi\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"dean lister\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"vesa vuori\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"leonardo chocolate\", \"submission (rear naked choke)\", \"adcc brasil trails (under 99 kg)\", \"2009\"],[\"win\", \"renato ferreira\", \"points\", \"adcc brasil trails (under 99 kg)\", \"2009\"]]\nQuestion = Is it true that before 2009 was the date for renato ferreira?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    for date, opponent in zip(dates, opponents):\n        if opponent.lower() == \"renato ferreira\":\n            answer = less_than(int(date), 2009)\n            break \n    return answer\n\n### END"}
{"id": "5015968f-570f-473e-bc60-21123b79b4b4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of radio stations in tamaulipas\ntable_data = [[\"frequency\", \"callsign\", \"brand\", \"city of license\", \"type\"],[\"580\", \"xehp\", \"la mas prendida\", \"ciudad victoria\", \"norteño\"],[\"640\", \"xetam\", \"la poderosa\", \"santa elena\", \"norteño\"],[\"970\", \"xebj - am\", \"radio 970\", \"ciudad victoria\", \"contemporary\"],[\"1340\", \"xerpv - am\", \"la cotorra\", \"ciudad victoria\", \"norteño\"],[\"1380\", \"xegw\", \"planeta w 1380\", \"ciudad victoria\", \"christian pop\"],[\"1480\", \"xevic\", \"radio tamaulipas\", \"ciudad victoria\", \"state government\"]]\nQuestion = Is it true that when frequency is 640 the brand is radio 970 playing christian pop?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    brands = get_column_by_name(table_data, \"brand\")\n    types = get_column_by_name(table_data, \"type\")\n    for frequency, brand, type in zip(frequencies, brands, types):\n        if frequency == \"640\":\n            answer = equal_to(brand, \"radio 970\") and equal_to(type, \"christian pop\")\n            break \n    return answer\n\n### END"}
{"id": "59961752-4334-4c50-8cea-85ab5debd9b8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = florida collegiate summer league\ntable_data = [[\"player\",\"fcsl team\",\"years played\",\"year drafted\",\"round\",\"mlb team\"],[\"mike mcclendon\",\"winter park\",\"2006\",\"2006\",\"10th\",\"milwaukee brewers\"],[\"corey brown\",\"orlando shockers\",\"2006\",\"2007\",\"1st\",\"oakland athletics\"],[\"jonathan lucroy\",\"sanford\",\"2005 06\",\"2007\",\"3rd\",\"milwaukee brewers\"],[\"alan farina\",\"orlando shockers\",\"2005\",\"2007\",\"3rd\",\"toronto blue jays\"],[\"jonathan holt\",\"leesburg\",\"2006 - 2007\",\"2007\",\"5th\",\"cleveland indians\"],[\"dee gordon\",\"belleview\",\"2008\",\"2008\",\"4th\",\"los angeles dodgers\"],[\"mycal jones\",\"leesburg\",\"2007 - 2008\",\"2009\",\"4th\",\"atlanta braves\"],[\"kent matthes\",\"winter pines\",\"2008\",\"2009\",\"4th\",\"colorado rockies\"],[\"thomas berryhill\",\"deland\",\"2008\",\"2009\",\"5th\",\"atlanta braves\"],[\"jimmy nelson\",\"deland\",\"2009\",\"2010\",\"2nd\",\"milwaukee brewers\"],[\"dante bichette jr\",\"winter park\",\"2011\",\"2011\",\"1st\",\"new york yankees\"],[\"peter o'brien\",\"deland\",\"2010\",\"2012\",\"2nd\",\"new york yankees\"],[\"brandon thomas\",\"sanford\",\"2010\",\"2012\",\"4th\",\"pittsburgh pirates\"],[\"tucker donahue\",\"winter park\",\"2010\",\"2012\",\"4th\",\"toronto blue jays\"]]\nQuestion = Is it true that winter park was the fcsl team when the toronto blue jays drafted tucker donahue in the 3rd round of 2012?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    fcsl_teams = get_column_by_name(table_data, \"fcsl team\")\n    years_drafted = get_column_by_name(table_data, \"year drafted\")\n    rounds = get_column_by_name(table_data, \"round\")\n    mlb_teams = get_column_by_name(table_data, \"mlb team\")\n    for fcsl_team, year_drafted, round, mlb_team in zip(fcsl_teams, years_drafted, rounds, mlb_teams):\n        if fcsl_team.lower() == \"winter park\" and year_drafted == \"2012\" and mlb_team.lower() == \"toronto blue jays\":\n            answer = equal_to(round, \"3rd\")\n            break \n    return answer\n\n### END"}
{"id": "862f469a-5325-48e0-8691-7dfc26b87090", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of radio stations in tamaulipas\ntable_data = [[\"frequency\", \"callsign\", \"brand\", \"city of license\", \"type\"],[\"580\", \"xehp\", \"la mas prendida\", \"ciudad victoria\", \"norteño\"],[\"640\", \"xetam\", \"la poderosa\", \"santa elena\", \"norteño\"],[\"970\", \"xebj - am\", \"radio 970\", \"ciudad victoria\", \"contemporary\"],[\"1340\", \"xerpv - am\", \"la cotorra\", \"ciudad victoria\", \"norteño\"],[\"1380\", \"xegw\", \"planeta w 1380\", \"ciudad victoria\", \"christian pop\"],[\"1480\", \"xevic\", \"radio tamaulipas\", \"ciudad victoria\", \"state government\"]]\nQuestion = Is it true that la poderosa is the only norteño type?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef solution(table_data):\n    types = get_column_by_name(table_data, \"type\")\n    norteno_count = count_occurrences(\"norteño\", types)\n    answer = norteno_count == 1\n    return answer\n\n### END"}
{"id": "b53be7c8-46e6-40b6-89d5-68114cb0bfa6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of the busiest airports in africa\ntable_data = [[\"country\", \"airport\", \"city\", \"2010\", \"change (10 / 09)\"],[\"south africa\", \"or tambo international airport\", \"johannesburg\", \"18383549\", \"0 11.4%\"],[\"egypt\", \"cairo international airport\", \"cairo\", \"16148480\", \"0 12.3%\"],[\"spain\", \"gran canaria airport\", \"las palmas de gran canaria\", \"9486035\", \"0 3.6%\"],[\"egypt\", \"sharm el - sheikh international airport\", \"sharm el - sheikh\", \"8693990\", \"0 17.0%\"],[\"south africa\", \"cape town international airport\", \"cape town\", \"8107648\", \"0 5.0%\"],[\"egypt\", \"hurghada international airport\", \"hurghada\", \"8062652\", \"0 19.8%\"],[\"spain\", \"tenerife sur\", \"granadilla de abona\", \"7358986\", \"0 3.5%\"],[\"morocco\", \"mohammed v international airport\", \"casablanca\", \"7245508\", \"0 13.3%\"],[\"nigeria\", \"murtala muhammed international airport\", \"lagos\", \"6273545\", \"0 11.1%\"],[\"kenya\", \"jomo kenyatta international airport\", \"nairobi\", \"5485771\", \"0 8.0%\"],[\"spain\", \"lanzarote airport\", \"san bartolomé , las palmas\", \"4938343\", \"0 5.0%\"],[\"south africa\", \"king shaka international airport\", \"durban\", \"4757800\", \"0 10.5%\"],[\"ethiopia\", \"bole international airport\", \"addis ababa\", \"4562036\", \"0 13.83\"],[\"spain\", \"fuerteventura airport\", \"puerto del rosario\", \"4173590\", \"0 11.6%\"],[\"spain\", \"tenerife norte\", \"san cristóbal de la laguna\", \"4051356\", \"0 0.1%\"],[\"nigeria\", \"nnamdi azikiwe international airport\", \"abuja\", \"3922547\", \"0 22.7%\"],[\"morocco\", \"marrakech - menara airport\", \"marrakech\", \"3453044\", \"0 15.0%\"],[\"mauritius\", \"sir seewoosagur ramgoolam international airport\", \"mauritius\", \"2509156\", \"0 8.5%\"],[\"france\", \"la réunion roland garros airport\", \"saint - denis\", \"1911336\", \"0 13.5%\"],[\"senegal\", \"léopold sédar senghor international airport\", \"dakar\", \"1687006\", \"unknown\"],[\"morocco\", \"agadir - al massira airport\", \"agadir\", \"1621272\", \"0 11.3%\"],[\"tanzania\", \"julius nyerere international airport\", \"dar es salaam\", \"1556410\", \"0 9.4%\"],[\"south africa\", \"port elizabeth airport\", \"port elizabeth\", \"1400688\", \"0 3.2%\"],[\"ghana\", \"kotoka international airport\", \"accra\", \"1387045\", \"unknown\"],[\"nigeria\", \"port harcourt international airport\", \"port harcourt\", \"1211816\", \"0 12.0%\"],[\"south africa\", \"lanseria international airport\", \"krugersdorp\", \"1000000\", \"unknown\"]]\nQuestion = Is it true that nigeria is the country which has the nnamdi azikiwe international airport?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    countries = get_column_by_name(table_data, \"country\")\n    airports = get_column_by_name(table_data, \"airport\")\n    for country, airport in zip(countries, airports):\n        if \"nigeria\" in country.lower() and \"nnamdi azikiwe international airport\" in airport.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "4ebb7441-e248-4d92-bf90-025f66f736c0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"d 47 +\", \"d 46 +\", \"d 45 +\", \"d 44 +\", \"d 43 o\", \"d 42 o\", \"d 41\", \"d 40\"],[\"d 8\", \"d 9\", \"d 10\", \"d 11\", \"d 12\", \"d 13\", \"d 14\", \"d 15\"],[\"d 27\", \"d 26\", \"d 25\", \"d 24\", \"d 23\", \"d 22\", \"d 21\", \"d 20\"],[\"d 28\", \"d 29\", \"d 30\", \"d 31\", \"d 32\", \"d 33\", \"d 34\", \"d 35\"],[\"d 47 +\", \"d 46 +\", \"d 45 +\", \"d 44 +\", \"d 43 o\", \"d 42 o\", \"d 41\", \"d 40\"],[\"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\"],[\"r 48 +\", \"r 47 +\", \"r 46 +\", \"r 45 +\", \"r 44 +\", \"r 43 +\", \"r 42 o\", \"r 41 o\"],[\"r 29\", \"r 30\", \"r 31\", \"r 32\", \"r 33\", \"r 34\", \"r 35\", \"r 36\"],[\"r 28\", \"r 27\", \"r 26\", \"r 25\", \"r 24\", \"r 23\", \"r 22\", \"r 21\"],[\"r 9\", \"r 10\", \"r 11\", \"r 12\", \"r 13\", \"r 14\", \"r 15\", \"r 16\"],[\"r 8\", \"r 7\", \"r 6\", \"r 5\", \"r 4\", \"r 3\", \"r 2\", \"r 1\"]]\nQuestion = Is it true that the d44 which has d 42 o of d 33 is d31?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef get_column_cell_value(row_index, column):\n    return column[row_index]\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    column_index = 3\n    column_3 = get_column_by_index(table_data, column_index)\n    d44_value = get_column_cell_value(3, column_3)\n    expected_value = \"d 31\"\n    answer = equal_to(d44_value, expected_value)\n    return answer\n\n### END"}
{"id": "3835d4e4-b76c-4b3b-97ab-c7566c780bad", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"model\", \"release date\", \"price\", \"midi inputs / outputs\", \"sampling rate\", \"sampling memory / upgrade - able\", \"sampling time\", \"storage method\", \"pad banks\"],[\"mpc60\", \"1988\", \"5000\", \"2 in , 4 out\", \"12 - bit 40khz\", \"750 kb / 1.5 mb\", \"(13.1 sec) / (26.2 sec)\", \"internal 3½ floppy drive\", \"4\"],[\"mpc60 mk2\", \"1991\", \"5000\", \"2 in , 4 out\", \"12 - bit 40 khz\", \"750 kb / 1.5 mb\", \"(13.1 sec) / (26.2 sec)\", \"internal 3½ floppy drive\", \"4\"],[\"mpc3000\", \"1993\", \"3500\", \"2 in , 4 out\", \"16 - bit 44.1khz\", \"2 mb / 32 mb\", \"(22 sec) / (6 min)\", \"internal 3½ floppy drive\", \"4\"],[\"mpc2000\", \"1997\", \"2000\", \"2 in , 2 out\", \"22 or 44.1khz\", \"2 mb / 32 mb\", \"6 min mono / 3 min stereo\", \"floppy / scsi interface\", \"4\"],[\"mpc2000xl\", \"2000\", \"1100\", \"2 in , 2 out\", \"22 or 44.1khz\", \"2 mb / 32 mb\", \"6 min mono / 3 min stereo\", \"floppy / zip drive / compactflash / scsi interface\", \"4\"],[\"mpc4000\", \"2002\", \"3500\", \"2 in , 4 out\", \"96 , 48 or 44.1khz , 16 or 24 bit\", \"16 mb / 512 mb\", \"96 min / 64 min (16 / 24 bit)\", \"hard drive / cd - rom\", \"6\"],[\"mpc1000\", \"2005\", \"1000\", \"2 in , 2 out\", \"44.1khz\", \"16 mb / 128 mb\", \"136 sec / 24 m28sec\", \"compactflash / hard drive\", \"4\"],[\"mpc500\", \"2006\", \"700\", \"1 in , 1 out\", \"44.1khz\", \"16 mb / 128 mb\", \"136 sec / 24 m28sec\", \"compactflash\", \"4\"],[\"mpc2500\", \"2005\", \"1700\", \"2 in , 4 out\", \"44.1khz\", \"16 mb / 128 mb\", \"136 sec / 24 m28sec\", \"compactflash / cd - rom / dvd - rom / hard drive\", \"4\"],[\"mpc5000\", \"2008\", \"3500\", \"2 in , 4 out\", \"44.1khz\", \"64 mb / 192 mb\", \"12 m48s / 38 m24s\", \"compactflash / cd - rom / dvd - rom / hard drive\", \"4\"],[\"mpc renaissance\", \"2012\", \"1300\", \"2 in , 4 out\", \"up to 24 bit / 96 khz\", \"uses the ram in your computer\", \"varies depending on how much ram your computer has\", \"computer 's hard drive\", \"8\"]]\nQuestion = Is it true that a product with a sampling rate of 12 - bit 40khz is 5000?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    sampling_rates = get_column_by_name(table_data, \"sampling rate\")\n    prices = get_column_by_name(table_data, \"price\")\n    for sampling_rate, price in zip(sampling_rates, prices):\n        if \"12 - bit 40khz\" in sampling_rate.lower():\n            answer = equal_to(price, \"5000\")\n            break \n    return answer\n\n### END"}
{"id": "3eb85e8f-15f4-4c1f-ae42-c3d64f8d3795", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\", \"10:30\"],[\"heartland\", \"heartland\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"cbc news : sunday night\", \"cbc news : sunday night\"],[\"law and order : criminal intent\", \"law and order : criminal intent\", \"cold case\", \"cold case\", \"desperate housewives\", \"desperate housewives\", \"dirty sexy money\", \"dirty sexy money\"],[\"the simpsons\", \"da kink in my hair\", \"the simpsons\", \"king of the hill\", \"family guy\", \"american dad!\", \"brothers & sisters\", \"brothers & sisters\"],[\"america 's funniest home videos\", \"america 's funniest home videos\", \"kyle xy\", \"kyle xy\", \"america 's next top model\", \"america 's next top model\", \"stargate sg - 1\", \"stargate sg - 1\"],[\"everybody hates chris\", \"speakers' corner\", \"behind the movies\", \"bravo!fact presents\", \"great movies\", \"great movies\", \"great movies\", \"great movies\"],[\"viva laughlin\", \"viva laughlin\", \"extreme makeover : home edition\", \"extreme makeover : home edition\", \"e! countdowns\", \"e! countdowns\", \"e! live encore\", \"e! live encore\"],[\"découverte\", \"et dieu créa laflaque\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"le téléjournal\", \"le téléjournal\"],[\"le banquier / dieu merci!\", \"le banquier / dieu merci!\", \"occupation double\", \"occupation double\", \"occupation double\", \"occupation double\", \"le tva week - end\", \"le tva week - end\"],[\"loft story\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal weekend\"]]\nQuestion = Is it true that et dieu créa laflaque is on at 7:30 , followed by le téléjournal at 8:00?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    column_730 = get_column_by_index(table_data, 1)\n    column_800 = get_column_by_index(table_data, 2)\n    answer = equal_to(column_730[7], \"et dieu créa laflaque\") and equal_to(column_800[7], \"le téléjournal\")\n    return answer\n\n### END"}
{"id": "cc5b33c0-1582-410b-9095-3fe30dbc37ec", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = extreme engineering\ntable_data = [[\"no in series\",\"no in season\",\"title\",\"country\",\"project\",\"status at production\",\"original air date\"],[\"70\",\"1\",\"rebuilding new york city 's subway\",\"united states\",\"new york city subway expansion\",\"under construction\",\"april 8 , 2011\"],[\"71\",\"2\",\"drought - proofing australia\",\"australia\",\"wonthaggi desalination plant\",\"under construction\",\"april 15 , 2011\"],[\"72\",\"3\",\"azerbaijan 's amazing transformation\",\"azerbaijan\",\"flame towers and heydar aliyev cultural centre\",\"under construction\",\"april 22 , 2011\"],[\"73\",\"4\",\"london 's olympic aquatic stadium\",\"united kingdom\",\"london aquatics centre\",\"under construction\",\"april 29 , 2011\"],[\"74\",\"5\",\"constructing serbia 's largest bridge\",\"serbia\",\"ada bridge\",\"under construction\",\"june 18 , 2011\"],[\"75\",\"6\",\"amsterdam 's futuristic floating city\",\"netherlands\",\"netherlands land expansion\",\"under construction\",\"june 25 , 2011\"],[\"76\",\"7\",\"building mumbai 's modern airport\",\"india\",\"chhatrapati shivaji international airport\",\"under construction\",\"july 2 , 2011\"]]\nQuestion = Is it true that the original air date of amsterdam 's futuristic floating city was june 18 , 2011?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    air_dates = get_column_by_name(table_data, \"original air date\")\n    for title, air_date in zip(titles, air_dates):\n        if title.lower() == \"amsterdam 's futuristic floating city\":\n            answer = equal_to(air_date, \"june 18 , 2011\")\n            break \n    return answer\n\n### END"}
{"id": "054e3dd3-6a0b-440c-ae6b-0f3547ab0fad", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1970 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"carlton\", \"16.14 (110)\", \"st kilda\", \"10.11 (71)\", \"princes park\", \"22988\", \"18 july 1970\"],[\"south melbourne\", \"11.9 (75)\", \"richmond\", \"12.17 (89)\", \"lake oval\", \"25651\", \"18 july 1970\"],[\"north melbourne\", \"13.17 (95)\", \"fitzroy\", \"18.14 (122)\", \"arden street oval\", \"8443\", \"18 july 1970\"],[\"geelong\", \"15.16 (106)\", \"essendon\", \"8.17 (65)\", \"kardinia park\", \"17220\", \"18 july 1970\"],[\"melbourne\", \"7.19 (61)\", \"collingwood\", \"10.16 (76)\", \"mcg\", \"36044\", \"18 july 1970\"],[\"hawthorn\", \"23.9 (147)\", \"footscray\", \"6.12 (48)\", \"vfl park\", \"14151\", \"18 july 1970\"]]\nQuestion = Is it true that north melbourne played south melbourne at arden street oval with a crowd of 8443?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    for home_team, away_team, venue, crowd in zip(home_teams, away_teams, venues, crowds):\n        if home_team.lower() == \"north melbourne\" and away_team.lower() == \"south melbourne\" and venue.lower() == \"arden street oval\" and crowd == \"8443\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "3b86f629-9e9c-4007-a229-6e10f54b9fec", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 boston celtics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"74\", \"april 1\", \"chicago\", \"106 - 92\", \"allen (22)\", \"perkins (9)\", \"rondo (10)\", \"united center 22225\", \"59 - 15\"],[\"75\", \"april 2\", \"indiana\", \"92 - 77\", \"garnett (20)\", \"garnett (11)\", \"rondo (6)\", \"td banknorth garden 18624\", \"60 - 15\"],[\"76\", \"april 5\", \"charlotte\", \"101 - 78\", \"powe (22)\", \"powe (9)\", \"rondo (5)\", \"charlotte bobcats arena 19403\", \"61 - 15\"],[\"77\", \"april 8\", \"milwaukee\", \"107 - 104 (ot)\", \"garnett (21)\", \"perkins (10)\", \"pierce (4)\", \"bradley center 15921\", \"62 - 15\"],[\"78\", \"april 9\", \"washington\", \"95 - 109\", \"pierce (28)\", \"garnett (14)\", \"pierce , rondo (7)\", \"verizon center 20173\", \"62 - 16\"],[\"79\", \"april 11\", \"milwaukee\", \"102 - 86\", \"rondo (16)\", \"garnett , posey (8)\", \"rondo (10)\", \"td banknorth garden 18624\", \"63 - 16\"],[\"80\", \"april 12\", \"atlanta\", \"99 - 89\", \"garnett (24)\", \"davis (10)\", \"cassell , rondo (5)\", \"philips arena 20098\", \"64 - 16\"],[\"81\", \"april 14\", \"new york\", \"99 - 93\", \"rondo (23)\", \"rondo (10)\", \"rondo (5)\", \"madison square garden 19763\", \"65 - 16\"],[\"82\", \"april 16\", \"new jersey\", \"105 - 94\", \"powe (27)\", \"powe (11)\", \"cassell (4)\", \"td banknorth garden 18624\", \"66 - 16\"]]\nQuestion = Is it true that powe (16) were the high points on the date april 11?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    high_points = get_column_by_name(table_data, \"high points\")\n    for date, high_point in zip(dates, high_points):\n        if date == \"april 11\":\n            answer = equal_to(high_point, \"powe (16)\")\n            break \n    return answer\n\n### END"}
{"id": "625c3779-9d2f-48c1-8bbf-eb1a449a0324", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = lynyrd skynyrd\ntable_data = [[\"date of release\", \"title\", \"billboard peak\", \"riaa cert\", \"label\"],[\"august 13 , 1973\", \"(pronounced 'lĕh - 'nérd 'skin - 'nérd)\", \"27\", \"2 platinum\", \"mca\"],[\"april 15 , 1974\", \"second helping\", \"12\", \"2 platinum\", \"mca\"],[\"march 24 , 1975\", \"nuthin' fancy\", \"9\", \"platinum\", \"mca\"],[\"february 2 , 1976\", \"gimme back my bullets\", \"20\", \"gold\", \"mca\"],[\"october 17 , 1977\", \"street survivors\", \"5\", \"2 platinum\", \"mca\"],[\"june 11 , 1991\", \"lynyrd skynyrd 1991\", \"64\", \"-\", \"atlantic\"],[\"february 16 , 1993\", \"the last rebel\", \"64\", \"-\", \"atlantic\"],[\"august 9 , 1994\", \"endangered species\", \"-\", \"-\", \"capricorn\"],[\"april 29 , 1997\", \"twenty\", \"97\", \"-\", \"cmc\"],[\"august 10 , 1999\", \"edge of forever\", \"96\", \"-\", \"cmc\"],[\"september 12 , 2000\", \"christmas time again\", \"38\", \"-\", \"sanctuary\"],[\"may 20 , 2003\", \"vicious cycle\", \"30\", \"-\", \"sanctuary\"],[\"september 29 , 2009\", \"god & guns\", \"18\", \"-\", \"roadrunner\"],[\"august 21 , 2012\", \"last of a dyin' breed\", \"14\", \"-\", \"roadrunner\"]]\nQuestion = Is it true that edge of forever was released on april 29th , 1997?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_date_of_release = get_column_by_name(table_data, \"date of release\")\n    column_title = get_column_by_name(table_data, \"title\")\n    answer = False\n    for date_of_release, title in zip(column_date_of_release, column_title):\n        if title.lower() == \"edge of forever\":\n            answer = \"april 29 , 1997\" in date_of_release.lower()\n            break\n    return answer\n\n### END"}
{"id": "de6ac209-7fc7-4063-a88f-99b1a6f39af4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1990 formula one season\ntable_data = [[\"round\", \"grand prix\", \"date\", \"location\", \"pole position\", \"fastest lap\", \"winning driver\", \"winning constructor\", \"report\"],[\"1\", \"united states grand prix\", \"11 march\", \"phoenix\", \"gerhard berger\", \"gerhard berger\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"2\", \"brazilian grand prix\", \"25 march\", \"interlagos\", \"ayrton senna\", \"gerhard berger\", \"alain prost\", \"ferrari\", \"report\"],[\"3\", \"san marino grand prix\", \"13 may\", \"imola\", \"ayrton senna\", \"alessandro nannini\", \"riccardo patrese\", \"williams - renault\", \"report\"],[\"4\", \"monaco grand prix\", \"27 may\", \"monaco\", \"ayrton senna\", \"ayrton senna\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"5\", \"canadian grand prix\", \"10 june\", \"circuit gilles villeneuve\", \"ayrton senna\", \"gerhard berger\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"6\", \"mexican grand prix\", \"24 june\", \"hermanos rodrã­guez\", \"gerhard berger\", \"alain prost\", \"alain prost\", \"ferrari\", \"report\"],[\"7\", \"french grand prix\", \"8 july\", \"paul ricard\", \"nigel mansell\", \"nigel mansell\", \"alain prost\", \"ferrari\", \"report\"],[\"8\", \"british grand prix\", \"15 july\", \"silverstone\", \"nigel mansell\", \"nigel mansell\", \"alain prost\", \"ferrari\", \"report\"],[\"9\", \"german grand prix\", \"29 july\", \"hockenheimring\", \"ayrton senna\", \"thierry boutsen\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"10\", \"hungarian grand prix\", \"12 august\", \"hungaroring\", \"thierry boutsen\", \"riccardo patrese\", \"thierry boutsen\", \"williams - renault\", \"report\"],[\"11\", \"belgian grand prix\", \"26 august\", \"spa - francorchamps\", \"ayrton senna\", \"alain prost\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"12\", \"italian grand prix\", \"9 september\", \"monza\", \"ayrton senna\", \"ayrton senna\", \"ayrton senna\", \"mclaren - honda\", \"report\"],[\"13\", \"portuguese grand prix\", \"23 september\", \"estoril\", \"nigel mansell\", \"riccardo patrese\", \"nigel mansell\", \"ferrari\", \"report\"],[\"14\", \"spanish grand prix\", \"30 september\", \"jerez\", \"ayrton senna\", \"riccardo patrese\", \"alain prost\", \"ferrari\", \"report\"],[\"15\", \"japanese grand prix\", \"21 october\", \"suzuka\", \"ayrton senna\", \"riccardo patrese\", \"nelson piquet\", \"benetton - ford\", \"report\"]]\nQuestion = Is it true that hockenheimring was the location when thierry boutsen had the fastest lap?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"location\")\n    fastest_laps = get_column_by_name(table_data, \"fastest lap\")\n    answer = False\n    for location, fastest_lap in zip(locations, fastest_laps):\n        if \"hockenheimring\" in location.lower() and \"thierry boutsen\" in fastest_lap.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "8b054f9d-52ad-480d-9520-9a874abebfd5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = usa today all - usa high school baseball team\ntable_data = [[\"player\",\"position\",\"school\",\"hometown\",\"mlb draft\"],[\"delmon young\",\"outfielder\",\"camarillo high school\",\"camarillo, ca\",\"1st round - 1st pick of 2003 draft ( devil rays )\"],[\"chris lubanski\",\"outfielder\",\"kennedy - kenrick catholic high school\",\"norristown, pa\",\"1st round - 5th pick of 2003 draft ( royals )\"],[\"lastings milledge\",\"outfielder\",\"lakewood ranch high school\",\"bradenton, fl\",\"1st round - 12th pick of 2003 draft ( mets )\"],[\"brandon wood\",\"infielder\",\"horizon high school\",\"scottsdale, az\",\"1st round - 23rd pick of 2003 draft ( angels )\"],[\"john danks\",\"pitcher\",\"round rock high school\",\"round rock, tx\",\"1st round - 9th pick of 2003 draft ( rangers )\"],[\"jonathan fulton\",\"infielder\",\"george washington high school\",\"danville, va\",\"3rd round - 83rd pick of 2003 draft ( marlins )\"],[\"ian stewart\",\"infielder\",\"la quinta high school\",\"westminster, ca\",\"1st round - 10th pick of 2003 draft ( rockies )\"],[\"jeff allison\",\"pitcher\",\"veterans memorial high school\",\"peabody, ma\",\"1st round - 16th pick of 2003 draft ( marlins )\"],[\"daric barton\",\"catcher\",\"marina high school\",\"huntington beach, ca\",\"1st round - 28th pick of 2003 draft ( cardinals )\"],[\"eric duncan\",\"infielder\",\"seton hall preparatory school\",\"west orange, nj\",\"1st round - 27th pick of 2003 draft ( yankees )\"]]\nQuestion = Is it true that john danks attended george washington high school?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    schools = get_column_by_name(table_data, \"school\")\n    for player, school in zip(players, schools):\n        if player.lower() == \"john danks\":\n            answer = school.lower() == \"george washington high school\"\n            break\n    return answer\n\n### END"}
{"id": "759b5ce7-d7d8-46ae-8ecd-4ff65655c42f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 football league one\ntable_data = [[\"team\",\"outgoing manager\",\"manner of departure\",\"date of vacancy\",\"replaced by\",\"date of appointment\",\"position in table\"],[\"milton keynes dons\",\"paul ince\",\"signed by blackburn rovers (mutual consent)\",\"22 june 2008\",\"roberto di matteo\",\"2 july 2008\",\"pre - season\"],[\"cheltenham town\",\"keith downing\",\"mutual consent\",\"13 september 2008\",\"martin allen\",\"15 september 2008\",\"24th\"],[\"colchester united\",\"geraint williams\",\"mutual consent\",\"22 september 2008\",\"paul lambert\",\"24 september 2008\",\"23rd\"],[\"carlisle united\",\"john ward\",\"mutual consent\",\"3 november 2008\",\"greg abbott\",\"5 december 2008\",\"20th\"],[\"huddersfield town\",\"stan ternent\",\"mutual consent\",\"4 november 2008\",\"lee clark\",\"11 december 2008\",\"16th\"],[\"swindon town\",\"maurice malpas\",\"mutual consent\",\"14 november 2008\",\"danny wilson\",\"26 december 2008\",\"16th\"],[\"crewe alexandra\",\"steve holland\",\"contract terminated\",\"18 november 2008\",\"guðjón þórðarson\",\"24 december 2008\",\"24th\"],[\"hartlepool united\",\"danny wilson\",\"contract terminated\",\"15 december 2008\",\"chris turner\",\"15 december 2008\",\"13th\"],[\"leeds united\",\"gary mcallister\",\"contract terminated\",\"21 december 2008\",\"simon grayson\",\"23 december 2008\",\"9th\"],[\"walsall\",\"jimmy mullen\",\"contract terminated\",\"10 january 2009\",\"chris hutchings\",\"20 january 2009\",\"12th\"],[\"leyton orient\",\"martin ling\",\"mutual consent\",\"18 january 2009\",\"geraint williams\",\"5 february 2009\",\"21st\"],[\"yeovil town\",\"russell slade\",\"contract terminated\",\"16 february 2009\",\"terry skiverton\",\"18 february 2009\",\"16th\"],[\"brighton & hove albion\",\"micky adams\",\"contract terminated\",\"21 february 2009\",\"russell slade\",\"6 march 2009\",\"21st\"]]\nQuestion = Is it true that keith downing departed due to a terminated contract on september 13 , 2008?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_outgoing_manager = get_column_by_name(table_data, \"outgoing manager\")\n    column_manner_of_departure = get_column_by_name(table_data, \"manner of departure\")\n    column_date_of_vacancy = get_column_by_name(table_data, \"date of vacancy\")\n    answer = False\n    for manager, departure, date in zip(column_outgoing_manager, column_manner_of_departure, column_date_of_vacancy):\n        if manager.lower() == \"keith downing\" and date.lower() == \"13 september 2008\":\n            answer = departure.lower() == \"contract terminated\"\n            break \n    return answer\n\n### END"}
{"id": "fb5689cd-8a1c-43e7-b05b-275680df7162", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = zorro (musical)\ntable_data = [[\"year\", \"award\", \"category\", \"nominee\", \"result\"],[\"2009\", \"laurence olivier award\", \"best new musical\", \"best new musical\", \"nominated\"],[\"2009\", \"laurence olivier award\", \"best actor in a musical\", \"matt rawle\", \"nominated\"],[\"2009\", \"laurence olivier award\", \"best actress in a musical\", \"emma williams\", \"nominated\"],[\"2009\", \"laurence olivier award\", \"best performance in a supporting role in a musical\", \"lesli margherita\", \"won\"],[\"2009\", \"laurence olivier award\", \"best theatre choreographer\", \"rafael amargo\", \"nominated\"]]\nQuestion = Is it true that leslie margherita won best performance in a supporting role in a musical in 2009?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    nominees = get_column_by_name(table_data, \"nominee\")\n    results = get_column_by_name(table_data, \"result\")\n    answer = False\n    for nominee, result in zip(nominees, results):\n        if \"lesli margherita\" in nominee.lower() and \"won\" in result.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "11d2df55-3616-4654-8105-7da187e1a49a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the yardbirds discography\ntable_data = [[\"date\", \"title\", \"origin\", \"label & cat no\", \"chart no\"],[\"6 / 1965\", \"for your love\", \"us\", \"epic ln 24167 / bn - 26167\", \"96\"],[\"11 / 1965\", \"having a rave up with the yardbirds\", \"us\", \"epic ln 24177 / bn 26177\", \"53\"],[\"7 / 1966\", \"yardbirds aka roger the engineer\", \"uk\", \"columbia sx 6063 / scx 6063\", \"20\"],[\"7 / 1966\", \"over under sideways down\", \"us\", \"epic ln 24210 / bn 26210\", \"52\"],[\"8 / 1967\", \"little games\", \"us\", \"epic ln 24313 / bn 26313\", \"80\"]]\nQuestion = Is it true that in july of 1966 yardbirds aka roger the engineer ranked number 20 on the chart?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    titles = get_column_by_name(table_data, \"title\")\n    chart_nos = get_column_by_name(table_data, \"chart no\")\n    for date, title, chart_no in zip(dates, titles, chart_nos):\n        if \"7 / 1966\" in date and \"yardbirds aka roger the engineer\" in title.lower():\n            answer = equal_to(chart_no, \"20\")\n            break \n    return answer\n\n### END"}
{"id": "f27f9d49-1539-4757-8473-d294e350e595", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1950 world figure skating championships\ntable_data = [[\"rank\", \"name\", \"nation\", \"placings\", \"total\"],[\"1\", \"karol kennedy / peter kennedy\", \"united states\", \"15\", \"96.07\"],[\"2\", \"jennifer nicks / john nicks\", \"united kingdom\", \"28.5\", \"92.70\"],[\"3\", \"marianne nagy / lászló nagy\", \"hungary\", \"32\", \"92.25\"],[\"4\", \"elianne steineman / andré calamé\", \"switzerland\", \"44.5\", \"90.00\"],[\"5\", \"suzanne gheldorf / jacques rénard\", \"belgium\", \"48.5\", \"89.43\"],[\"6\", \"elly stärck / harry gareis\", \"austria\", \"61\", \"88.08\"],[\"7\", \"marlene smith / donald gilchrist\", \"canada\", \"63\", \"87.07\"],[\"8\", \"joan waterhouse / gordon holloway\", \"united kingdom\", \"62\", \"88.31\"],[\"9\", \"liliane de becker / edmund verbustel\", \"belgium\", \"64\", \"88.42\"],[\"10\", \"irene maguire / walter muehlbronner\", \"united states\", \"82\", \"84.26\"],[\"11\", \"sybil cooke / bob hudson\", \"united kingdom\", \"93.5\", \"83.47\"],[\"12\", \"denise favart / jacques favart\", \"france\", \"108\", \"77.73\"]]\nQuestion = Is it true that sybil cooke / bob hudson are from the united kingdom nation?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    nations = get_column_by_name(table_data, \"nation\")\n    answer = False\n    for name, nation in zip(names, nations):\n        if \"sybil cooke / bob hudson\" in name.lower():\n            if \"united kingdom\" in nation.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "c008f8fd-80cd-47f6-a6ef-32f0e7a1be16", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sheffield and hallamshire association cup\ntable_data = [[\"season\", \"winner\", \"result\", \"runner - up\", \"final venue\"],[\"2002 - 03\", \"elm tree\", \"1 - 0\", \"stocksbridge park steels reserves\", \"belle vue\"],[\"2003 - 04\", \"hsbc\", \"3 - 2\", \"athersley recreation\", \"belle vue\"],[\"2004 - 05\", \"kiveton park\", \"2 - 2\", \"athersley recreation\", \"sandy lane\"],[\"2005 - 06\", \"kiveton park\", \"5 - 0\", \"sheffield lane top\", \"belle vue\"],[\"2006 - 07\", \"stocksbridge park steels reserves\", \"3 - 1\", \"hemsworth miners welfare\", \"millmoor\"],[\"2007 - 08\", \"athersley recreation\", \"1 - 0\", \"hollinsend amateurs\", \"oakwell\"],[\"2008 - 09\", \"hall green united\", \"2 - 1\", \"kirkburton\", \"keepmoat stadium (pitch 2)\"],[\"2009 - 10\", \"sheffield reserves\", \"2 - 1\", \"dearne colliery miners welfare\", \"inkersall road\"],[\"2010 - 11\", \"stocksbridge park steels reserves\", \"3 - 0\", \"kirkburton\", \"green lane\"],[\"2012 - 13\", \"swinton athletic\", \"3 - 0\", \"kirkburton\", \"sandy lane\"]]\nQuestion = Is it true that when sandy lane was the final venue during the 2004 - 05 season kiveton park was the winner?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    winners = get_column_by_name(table_data, \"winner\")\n    venues = get_column_by_name(table_data, \"final venue\")\n    for season, winner, venue in zip(seasons, winners, venues):\n        if season == \"2004 - 05\" and venue.lower() == \"sandy lane\":\n            return winner.lower() == \"kiveton park\"\n    return False\n\n### END"}
{"id": "ad82ee70-128f-4cdd-b7c5-d6fab6096d29", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1930 grand prix season\ntable_data = [[\"name\",\"circuit\",\"date\",\"winning driver\",\"winning constructor\",\"report\"],[\"circuit d'esterel plage\",\"saint - raphaël\",\"2 march\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"tripoli grand prix\",\"tripoli\",\"23 march\",\"baconin borzacchini\",\"maserati\",\"report\"],[\"monaco grand prix\",\"monte carlo\",\"6 april\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"alessandria circuit\",\"bordino\",\"20 april\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"oran grand prix\",\"arcole\",\"27 april\",\"jean de maleplane\",\"bugatti\",\"report\"],[\"targa florio\",\"madonie\",\"4 may\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"picardy grand prix\",\"péronne\",\"18 may\",\"max fourny\",\"bugatti\",\"report\"],[\"rome grand prix\",\"tre fontane\",\"25 may\",\"luigi arcangeli\",\"maserati\",\"report\"],[\"grand prix des frontières\",\"chimay\",\"9 june\",\"georges de marotte\",\"salmson\",\"report\"],[\"lyon grand prix\",\"quincieux\",\"15 june\",\"louis chiron\",\"bugatti\",\"report\"],[\"grand prix de la marne\",\"reims\",\"29 june\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"eifelrennen\",\"nürburgring\",\"20 july\",\"heinrich - joachim von morgen\",\"bugatti\",\"report\"],[\"dieppe grand prix\",\"dieppe\",\"20 july\",\"marcel lehoux\",\"bugatti\",\"report\"],[\"coppa ciano\",\"montenero\",\"3 august\",\"luigi fagioli\",\"maserati\",\"report\"],[\"dauphiné circuit\",\"grenoble\",\"10 august\",\"philippe étancelin\",\"bugatti\",\"report\"],[\"coppa acerbo\",\"pescara\",\"17 august\",\"achille varzi\",\"maserati\",\"report\"],[\"grand prix du comminges\",\"saint - gaudens\",\"17 august\",\"françois miquel\",\"bugatti\",\"report\"],[\"monza grand prix\",\"monza\",\"7 september\",\"achille varzi\",\"maserati\",\"report\"],[\"lviv grand prix\",\"lviv\",\"8 september\",\"henryk liefeldt\",\"austro daimler\",\"report\"],[\"masaryk circuit\",\"brno\",\"28 september\",\"hermann of leiningen\",\"bugatti\",\"report\"],[\"san sebastián grand prix\",\"lasarte\",\"5 october\",\"achille varzi\",\"maserati\",\"report\"]]\nQuestion = Is it true that bugatti was the winning constructor of the eifelrennen on october 5th?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    dates = get_column_by_name(table_data, \"date\")\n    constructors = get_column_by_name(table_data, \"winning constructor\")\n    answer = False\n    for name, date, constructor in zip(names, dates, constructors):\n        if \"eifelrennen\" in name.lower() and \"october 5\" in date.lower():\n            if \"bugatti\" in constructor.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "afd72692-f65b-4b78-b4e7-d75e41984cb2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = julia glushko\ntable_data = [[\"outcome\", \"date\", \"tournament\", \"surface\", \"opponent in the final\", \"score\"],[\"winner\", \"november 11 , 2007\", \"mallorca , spain\", \"clay\", \"diana buzean\", \"6 - 0 , 6 - 0\"],[\"winner\", \"may 30 , 2010\", \"ra'anana , israel\", \"hard\", \"keren shlomo\", \"6 - 1 , 6 - 3\"],[\"winner\", \"october 24 , 2010\", \"akko , israel\", \"hard\", \"julia kimmelmann\", \"6 - 2 , 6 - 2\"],[\"winner\", \"november 7 , 2010\", \"kalgoorlie , australia\", \"hard\", \"isabella holland\", \"6 - 1 , 6 - 2\"],[\"winner\", \"november 28 , 2010\", \"traralgon , australia\", \"hard\", \"sacha jones\", \"2 - 6 , 7 - 5 , 7 - 6 (7 - 4)\"],[\"runner - up\", \"july 15 , 2012\", \"waterloo , canada\", \"clay\", \"sharon fichman\", \"6 - 3 , 6 - 2\"],[\"winner\", \"july 29 , 2012\", \"lexington , united states\", \"hard\", \"johanna konta\", \"6 - 3 , 6 - 0\"],[\"winner\", \"march 24 , 2013\", \"innisbrook resort and golf club , united states\", \"clay\", \"patricia mayr - achleitner\", \"2 - 6 , 6 - 0 , 6 - 4\"],[\"winner\", \"july 7 , 2013\", \"waterloo , canada\", \"clay\", \"gabriela dabrowski\", \"6 - 1 , 6 - 3\"]]\nQuestion = Is it true that johanna konta was the opponent in the final which was held on july 29 , 2012?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent in the final\")\n    answer = False\n    for date, opponent in zip(dates, opponents):\n        if \"july 29 , 2012\" in date.lower():\n            if \"johanna konta\" in opponent.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "7a8585ca-6c8c-4e2e-8b60-aaa93cf8f991", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = toronto and nipissing railway\ntable_data = [[\"number\", \"builder\", \"type\", \"date\", \"works number\"],[\"1\", \"avonside engine company\", \"4 - 4 - 0\", \"september 1870\", \"808\"],[\"2\", \"canadian engine & machinery company\", \"4 - 4 - 0\", \"november 1870\", \"83\"],[\"3\", \"canadian engine & machinery company\", \"4 - 4 - 0\", \"december 1870\", \"84\"],[\"4\", \"canadian engine & machinery company\", \"4 - 4 - 0\", \"early 1871\", \"85\"],[\"5\", \"canadian engine & machinery company\", \"4 - 4 - 0\", \"march 1871\", \"86\"],[\"6\", \"canadian engine & machinery company\", \"4 - 4 - 0\", \"may 1871\", \"87\"],[\"7\", \"canadian engine & machinery company\", \"4 - 4 - 0\", \"may 1871\", \"88\"],[\"8\", \"avonside engine company\", \"4 - 6 - 0\", \"december 1871\", \"867\"],[\"9\", \"avonside engine company\", \"0 - 6 - 6 - 0 fairlie\", \"december 1871\", \"864 & 865\"],[\"10\", \"avonside engine company\", \"4 - 6 - 0\", \"early 1873\", \"uncertain but probably one of 931 - 934\"],[\"11\", \"avonside engine company\", \"4 - 6 - 0\", \"1872\", \"uncertain but probably one of 935 - 939\"],[\"12\", \"avonside engine company\", \"4 - 6 - 0\", \"early 1873\", \"uncertain but probably one of 935 - 939\"]]\nQuestion = Is it true that canadian engine & machinery company had a date of early 1871?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    builders = get_column_by_name(table_data, \"builder\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for builder, date in zip(builders, dates):\n        if \"canadian engine & machinery company\" in builder.lower() and \"early 1871\" in date.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "97e430f6-ff1d-44d1-a2e7-13ccbd957bec", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = gambrinus liga\ntable_data = [[\"season\", \"champions\", \"runner - up\", \"third place\", \"top goalscorer\", \"club\"],[\"1993 - 94\", \"sparta prague (1)\", \"slavia prague\", \"baník ostrava\", \"horst siegl (20)\", \"sparta prague\"],[\"1994 - 95\", \"sparta prague (2)\", \"slavia prague\", \"fc brno\", \"radek drulák (15)\", \"drnovice\"],[\"1995 - 96\", \"slavia prague (1)\", \"sigma olomouc\", \"baumit jablonec\", \"radek drulák (22)\", \"drnovice\"],[\"1996 - 97\", \"sparta prague (3)\", \"slavia prague\", \"baumit jablonec\", \"horst siegl (19)\", \"sparta prague\"],[\"1997 - 98\", \"sparta prague (4)\", \"slavia prague\", \"sigma olomouc\", \"horst siegl (13)\", \"sparta prague\"],[\"1998 - 99\", \"sparta prague (5)\", \"teplice\", \"slavia prague\", \"horst siegl (18)\", \"sparta prague\"],[\"1999 - 00\", \"sparta prague (6)\", \"slavia prague\", \"drnovice\", \"vratislav lokvenc (21)\", \"sparta prague\"],[\"2000 - 01\", \"sparta prague (7)\", \"slavia prague\", \"sigma olomouc\", \"vítězslav tuma (15)\", \"drnovice\"],[\"2001 - 02\", \"slovan liberec (1)\", \"sparta prague\", \"viktoria žižkov\", \"jiří štajner (15)\", \"slovan liberec\"],[\"2002 - 03\", \"sparta prague (8)\", \"slavia prague\", \"viktoria žižkov\", \"jiří kowalík (16)\", \"1. fc synot\"],[\"2003 - 04\", \"baník ostrava (1)\", \"sparta prague\", \"sigma olomouc\", \"marek heinz (19)\", \"baník ostrava\"],[\"2004 - 05\", \"sparta prague (9)\", \"slavia prague\", \"teplice\", \"tomáš jun (14)\", \"sparta prague\"],[\"2005 - 06\", \"slovan liberec (2)\", \"mladá boleslav\", \"slavia prague\", \"milan ivana (11)\", \"fc slovácko\"],[\"2006 - 07\", \"sparta prague (10)\", \"slavia prague\", \"mladá boleslav\", \"luboš pecka (16)\", \"mladá boleslav\"],[\"2007 - 08\", \"slavia prague (2)\", \"sparta prague\", \"baník ostrava\", \"václav svěrkoš (15)\", \"baník ostrava\"],[\"2008 - 09\", \"slavia prague (3)\", \"sparta prague\", \"slovan liberec\", \"andrej kerić (15)\", \"slovan liberec\"],[\"2009 - 10\", \"sparta prague (11)\", \"jablonec\", \"baník ostrava\", \"michal ordoš (12)\", \"sigma olomouc\"],[\"2010 - 11\", \"viktoria plzeň (1)\", \"sparta prague\", \"jablonec\", \"david lafata (19)\", \"jablonec\"],[\"2011 - 12\", \"slovan liberec (3)\", \"sparta prague\", \"viktoria plzeň\", \"david lafata (25)\", \"jablonec\"]]\nQuestion = Is it true that the top goal scorer for the season 2001 - 2002 was jiří Štajner?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    top_goalscorers = get_column_by_name(table_data, \"top goalscorer\")\n    for season, top_goalscorer in zip(seasons, top_goalscorers):\n        if \"2001 - 02\" in season.lower():\n            answer = \"jiří štajner\" in top_goalscorer.lower()\n            break\n    return answer\n\n### END"}
{"id": "f5741c11-ce5d-41c1-b252-8b8a77753a5d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of philippine submissions for the academy award for best foreign language film\ntable_data = [[\"year (ceremony)\",\"film title used in nomination\",\"original title\",\"director\",\"result\"],[\"1953 (26th)\",\"genghis khan\",\"genghis khan\",\"manuel conde\",\"not nominated\"],[\"1956 (29th)\",\"anak dalita\",\"anak dalita\",\"lamberto v avellana\",\"not nominated\"],[\"1961 (34th)\",\"the moises padilla story\",\"the moises padilla story\",\"gerardo de león\",\"not nominated\"],[\"1967 (40th)\",\"because of a flower\",\"dahil sa isang bulaklak\",\"luis nepomuceno\",\"not nominated\"],[\"1976 (49th)\",\"ganito kami noon , paano kayo ngayon\",\"ganito kami noon , paano kayo ngayon\",\"eddie romero\",\"not nominated\"],[\"1984 (57th)\",\"of the flesh\",\"karnal\",\"marilou diaz - abaya\",\"not nominated\"],[\"1985 (58th)\",\"my country\",\"bayan ko : kapit sa patalim\",\"lino brocka\",\"not nominated\"],[\"1995 (68th)\",\"harvest home\",\"inagaw mo ang lahat sa akin\",\"carlos sigiuon - reyna\",\"not nominated\"],[\"1996 (69th)\",\"dead sure\",\"segurista\",\"tikoy aguiluz\",\"not nominated\"],[\"1997 (70th)\",\"milagros\",\"milagros\",\"marilou diaz - abaya\",\"not nominated\"],[\"1998 (71st)\",\"in the navel of the sea\",\"sa pusod ng dagat\",\"marilou diaz - abaya\",\"not nominated\"],[\"1999 (72nd)\",\"the kite\",\"saranggola\",\"gil portes\",\"not nominated\"],[\"2000 (73rd)\",\"anak\",\"anak\",\"rory quintos\",\"not nominated\"],[\"2001 (74th)\",\"in the bosom of the enemy\",\"gatas sa dibdib ng kaaway\",\"gil portes\",\"not nominated\"],[\"2002 (75th)\",\"small voices\",\"mga munting tinig\",\"gil portes\",\"not nominated\"],[\"2003 (76th)\",\"dekada '70\",\"dekada '70\",\"chito roño\",\"not nominated\"],[\"2004 (77th)\",\"crying ladies\",\"crying ladies\",\"mark meily\",\"not nominated\"],[\"2006 (79th)\",\"the blossoming of maximo oliveros\",\"ang pagdadalaga ni maximo oliveros\",\"auraeus solito\",\"not nominated\"],[\"2007 (80th)\",\"donsol\",\"donsol\",\"adolfo alix , jr\",\"not nominated\"],[\"2008 (81st)\",\"ploning\",\"ploning\",\"dante nico garcia\",\"not nominated\"],[\"2009 (82nd)\",\"grandfather is dead\",\"ded na si lolo\",\"soxie topacio\",\"not nominated\"],[\"2010 (83rd)\",\"noy\",\"noy\",\"dondon santos\",\"not nominated\"],[\"2011 (84th)\",\"the woman in the septic tank\",\"ang babae sa septic tank\",\"marlon rivera\",\"not nominated\"],[\"2012 (85th)\",\"bwakaw\",\"bwakaw\",\"jun robles lana\",\"not nominated\"]]\nQuestion = Is it true that the movie , the blossoming of maximo oliveros , was only put up for nomination one time?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef solution(table_data):\n    film_titles = get_column_by_name(table_data, \"film title used in nomination\")\n    count = count_occurrences(\"the blossoming of maximo oliveros\", film_titles)\n    answer = count == 1\n    return answer\n\n### END"}
{"id": "af277aaf-3ce4-4e49-a22c-501c55c9deed", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"census year\", \"number of muslims 000\", \"population of england and wales 000\", \"muslim (% of total population)\", \"registered mosques\", \"muslims per mosque\"],[\"1961\", \"50\", \"46196\", \"0.11\", \"7\", \"7143\"],[\"1971\", \"226\", \"49152\", \"0.46\", \"30\", \"7533\"],[\"1981\", \"553\", \"49634\", \"1.11\", \"149\", \"3711\"],[\"1991\", \"950\", \"51099\", \"1.86\", \"443\", \"2144\"],[\"2001\", \"1600\", \"52042\", \"3.07\", \"614\", \"2606\"]]\nQuestion = Is it true that 2001 is the most recent census year?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    census_years = get_column_by_name(table_data, \"census year\")\n    most_recent_year = max(census_years)\n    answer = equal_to(most_recent_year, \"2001\")\n    return answer\n\n### END"}
{"id": "446863f6-73fd-45e5-928d-bb661cccd893", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of how it 's made episodes\ntable_data = [[\"series ep\", \"episode\", \"segment a\", \"segment b\", \"segment c\", \"segment d\"],[\"20 - 01\", \"248\", \"native healing drums\", \"s raisin\", \"stereoscopic viewers\", \"ribbon microphones\"],[\"20 - 02\", \"249\", \"horse bits\", \"oat cereal\", \"turquoise jewellery\", \"electric scooters\"],[\"20 - 03\", \"250\", \"nail nippers\", \"jade putters\", \"ice cider\", \"water skis\"],[\"20 - 04\", \"251\", \"es stagecoach\", \"road reflectors\", \"fire baked pottery\", \"custom motorcycle tanks\"],[\"20 - 05\", \"252\", \"replica clay pipes\", \"drinking fountains\", \"orange liqueur\", \"compound bows\"],[\"20 - 06\", \"253\", \"tissues\", \"travel trailers\", \"s slipper\", \"motorcycle helmets\"],[\"20 - 07\", \"254\", \"u - locks\", \"tepees\", \"s croissant\", \"rolling luggage\"],[\"20 - 08\", \"255\", \"prams\", \"factory - built homes\", \"wood flutes\", \"bicycle tires\"],[\"20 - 09\", \"256\", \"thinning shears\", \"wagon wheels\", \"toaster pastries\", \"violin bows\"],[\"20 - 10\", \"257\", \"cast iron tubs\", \"hopi kachina dolls\", \"mine truck engine rebuild\", \"memory cards\"],[\"20 - 11\", \"258\", \"cycling shoes\", \"s yurt\", \"marine plywood\", \"oil & encaustic paint\"],[\"20 - 12\", \"259\", \"paper fans\", \"walnut oil\", \"copper (part 1)\", \"copper (part 2)\"]]\nQuestion = Is it true that for episode 252 , the segments were replica clay pipes , drinking fountains , fire baked pottery , and bicycle tires?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    episodes = get_column_by_name(table_data, \"episode\")\n    segment_a = get_column_by_name(table_data, \"segment a\")\n    segment_b = get_column_by_name(table_data, \"segment b\")\n    segment_c = get_column_by_name(table_data, \"segment c\")\n    segment_d = get_column_by_name(table_data, \"segment d\")\n    for episode, a, b, c, d in zip(episodes, segment_a, segment_b, segment_c, segment_d):\n        if episode == \"252\":\n            answer = equal_to([a, b, c, d], [\"replica clay pipes\", \"drinking fountains\", \"fire baked pottery\", \"bicycle tires\"])\n            break \n    return answer\n\n### END"}
{"id": "833aa580-92c9-495e-9942-fadb93a01cd9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"satellite\", \"cospar id\", \"satcat no\", \"product number\", \"launch date\", \"estimated end date\", \"estimated operational life\"],[\"kosmos 2133\", \"1991 - 010a\", \"21111\", \"7120\", \"14 february 1991\", \"9 november 1995\", \"4 years 9 months\"],[\"kosmos 2224\", \"1992 - 088a\", \"22269\", \"7121\", \"17 december 1992\", \"17 june 1999\", \"6 years 6 months\"],[\"kosmos 2282\", \"1994 - 038a\", \"23168\", \"7123\", \"6 july 1994\", \"29 december 1995\", \"1 year 5 months\"],[\"kosmos 2350\", \"1998 - 025a\", \"25315\", \"7122\", \"29 april 1998\", \"29 june 1998\", \"2 months\"],[\"kosmos 2379\", \"2001 - 037a\", \"26892\", \"7124\", \"24 august 2001\", \"late 2009 / early 2010\", \"8 years\"],[\"kosmos 2397\", \"2003 - 015a\", \"27775\", \"7126\", \"24 april 2003\", \"june 2003\", \"2 months\"],[\"kosmos 2440\", \"2008 - 033a\", \"33108\", \"7127\", \"26 june 2008\", \"february 2010\", \"1 year 4 months\"]]\nQuestion = Is it true that 26 june 2008 was the launch date the satellite with costar id is 1991 - 010a?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    cospar_ids = get_column_by_name(table_data, \"cospar id\")\n    launch_dates = get_column_by_name(table_data, \"launch date\")\n    for cospar_id, launch_date in zip(cospar_ids, launch_dates):\n        if cospar_id.lower() == \"1991 - 010a\":\n            answer = equal_to(launch_date, \"26 june 2008\")\n            break \n    return answer\n\n### END"}
{"id": "93315b5d-7fa1-4de5-8bb7-aa60ccc47bfb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = x factor (czech tv series)\ntable_data = [[\"name\",\"category\",\"eliminated\",\"date\",\"special guest\"],[\"jiří zonyga\",\"24 + years\",\"winner\",\"june 1\",\"see the next line\"],[\"ondřej ruml\",\"24 + years\",\"final night\",\"june 1\",\"5angels , olympic\"],[\"all x\",\"vocal groups\",\"james bond night\",\"may 25\",\"mta + čhave jilestar\"],[\"martina pártlová\",\"24 + years\",\"american night\",\"may 18\",\"láďa kerndl and henry lee\"],[\"kamila nývltová\",\"15 - 24 years\",\"night of revived legends\",\"may 11\",\"zombies (dancing on michael jackson 's thriller)\"],[\"za 5 dvanáct\",\"vocal groups\",\"czechoslovak night\",\"may 4\",\"miro žbirka\"],[\"david gránský\",\"15 - 24 years\",\"banana night\",\"april 27\",\"karl wolf\"],[\"anna ungrová\",\"15 - 24 years\",\"night of broken hearts\",\"april 20\",\"helena zeťová\"],[\"pavlína ďuriačová\",\"15 - 24 years\",\"tribute to karel\",\"april 13\",\"karel gott\"],[\"divoký kočky + dante\",\"vocal groups\",\"popcorn night\",\"april 6\",\"iva frühlingová\"],[\"lukáš javůrek\",\"24 + years\",\"chocolate night\",\"march 30\",\"gipsycz\"],[\"romantic\",\"vocal groups\",\"fire night\",\"march 23\",\"shayne ward\"]]\nQuestion = Is it true that on march 23 , shayne ward was the special guest of fire night?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    special_guests = get_column_by_name(table_data, \"special guest\")\n    for date, special_guest in zip(dates, special_guests):\n        if date.lower() == \"march 23\":\n            answer = equal_to(special_guest, \"shayne ward\")\n            break \n    return answer\n\n### END"}
{"id": "2da6e2b1-854f-4951-a938-85fc1fadf8cb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"class\", \"part 1\", \"part 2\", \"part 3\", \"part 4\", \"verb meaning\"],[\"1\", \"rīdan\", \"rād\", \"ridon\", \"riden\", \"to ride\"],[\"2a\", \"frēosan\", \"frēas\", \"fruron\", \"froren\", \"to freeze\"],[\"2b\", \"lūcan\", \"lēac\", \"lucon\", \"locen\", \"to lock\"],[\"3a\", \"bindan\", \"band\", \"bundon\", \"bunden\", \"to bind\"],[\"3b\", \"weorþan\", \"wearþ\", \"wurdon\", \"worden\", \"to become\"],[\"4\", \"beran\", \"bær\", \"bǣron\", \"boren\", \"to bear\"],[\"5\", \"lesan\", \"læs\", \"lǣron\", \"leren\", \"to gather\"],[\"6\", \"alan\", \"ōl\", \"ōlon\", \"alen\", \"to nourish , to grow\"],[\"7a\", \"hātan\", \"hēt\", \"hēton\", \"hāten\", \"to call , to be called\"],[\"7b\", \"hlēapan\", \"hlēop\", \"hlēppon\", \"hlēapen\", \"to leap\"],[\"7c\", \"healdan\", \"hēold\", \"hēoldon\", \"healden\", \"to hold\"],[\"7d\", \"rǣdan\", \"rēd\", \"rēdon\", \"rǣden\", \"to advise , to interpret\"]]\nQuestion = Is it true that class 5 has a part 1 of lesan?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    classes = get_column_by_name(table_data, \"class\")\n    part_1s = get_column_by_name(table_data, \"part 1\")\n    for class_, part_1 in zip(classes, part_1s):\n        if class_ == \"5\":\n            answer = equal_to(part_1, \"lesan\")\n            break \n    return answer\n\n### END"}
{"id": "a8790eaa-b9b6-4e69-9596-047402ba6b8e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = meaghan francella\ntable_data = [[\"year\", \"tournaments played\", \"cuts made\", \"wins\", \"2nd\", \"top 10s\", \"best finish\", \"earnings\", \"money list rank\", \"scoring average\", \"scoring rank\"],[\"2005\", \"1\", \"1\", \"0\", \"0\", \"0\", \"t69\", \"2525\", \"n / a\", \"75.00\", \"n / a\"],[\"2006\", \"3\", \"1\", \"0\", \"0\", \"0\", \"t39\", \"55554\", \"183\", \"73.75\", \"n / a\"],[\"2007\", \"25\", \"18\", \"1\", \"0\", \"4\", \"1\", \"507292\", \"29\", \"73.09\", \"66\"],[\"2008\", \"24\", \"11\", \"0\", \"0\", \"0\", \"t13\", \"117682\", \"88\", \"73.75\", \"131\"],[\"2009\", \"22\", \"16\", \"0\", \"0\", \"2\", \"t5\", \"292266\", \"48\", \"72.51\", \"63\"],[\"2010\", \"21\", \"17\", \"0\", \"0\", \"1\", \"t7\", \"168016\", \"57\", \"73.04\", \"77\"],[\"2011\", \"15\", \"8\", \"0\", \"0\", \"0\", \"t22\", \"66813\", \"84\", \"74.23\", \"117\"],[\"2012\", \"15\", \"4\", \"0\", \"0\", \"0\", \"t24\", \"28935\", \"116\", \"74.37\", \"121\"]]\nQuestion = Is it true that the money list ranked 183 when there was one win?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    wins = get_column_by_name(table_data, \"wins\")\n    money_list_ranks = get_column_by_name(table_data, \"money list rank\")\n    for win, money_list_rank in zip(wins, money_list_ranks):\n        if win == \"1\":\n            answer = equal_to(money_list_rank, \"183\")\n            break \n    return answer\n\n### END"}
{"id": "0b69bbd0-c5d5-481b-8cd2-378fe560427f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1965 detroit lions season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 19 , 1965\", \"los angeles rams\", \"w 20 - 0\", \"46941\"],[\"2\", \"september 26 , 1965\", \"minnesota vikings\", \"w 31 - 29\", \"46826\"],[\"3\", \"october 3 , 1965\", \"washington redskins\", \"w 14 - 10\", \"52627\"],[\"4\", \"october 10 , 1965\", \"baltimore colts\", \"l 31 - 7\", \"60238\"],[\"5\", \"october 17 , 1965\", \"green bay packers\", \"l 31 - 21\", \"56712\"],[\"6\", \"october 24 , 1965\", \"chicago bears\", \"l 38 - 10\", \"45658\"],[\"7\", \"october 31 , 1965\", \"los angeles rams\", \"w 31 - 7\", \"35137\"],[\"8\", \"november 7 , 1965\", \"green bay packers\", \"w 12 - 7\", \"50852\"],[\"9\", \"november 14 , 1965\", \"san francisco 49ers\", \"l 27 - 21\", \"54534\"],[\"10\", \"november 21 , 1965\", \"chicago bears\", \"l 17 - 10\", \"51499\"],[\"11\", \"november 25 , 1965\", \"baltimore colts\", \"t 24 - 24\", \"55036\"],[\"12\", \"december 5 , 1965\", \"san francisco 49ers\", \"l 17 - 14\", \"38463\"],[\"13\", \"december 12 , 1965\", \"minnesota vikings\", \"l 29 - 7\", \"45420\"],[\"14\", \"december 19 , 1965\", \"philadelphia eagles\", \"w 35 - 28\", \"56718\"]]\nQuestion = Is it true that opponent at minessota vikings has a week less than 12 , with november 25 , 1965 as the date?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    answer = False\n    for week, date, opponent in zip(weeks, dates, opponents):\n        if opponent.lower() == \"minnesota vikings\" and date.lower() == \"november 25 , 1965\":\n            answer = less_than(int(week), 12)\n            break\n    return answer\n\n### END"}
{"id": "1d007e27-447c-4696-ac02-12d08018b22c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"\", \"original title\", \"directed by\", \"written by\", \"original airdate\", \"prod code\", \"viewers\"],[\"1 - 1\", \"tracy returns\", \"susan tully\", \"elly brewer\", \"8 july 2002\", \"1.1\", \"267000\"],[\"1 - 2\", \"dares\", \"david skynner\", \"elly brewer\", \"15 july 2002\", \"1.2\", \"363000\"],[\"1 - 3\", \"sneaking in ben\", \"susan tully\", \"andy walker\", \"22 july 2002\", \"1.3\", \"499000\"],[\"1 - 4\", \"cam 's first visit\", \"susan tully\", \"elly brewer\", \"29 july 2002\", \"1.4\", \"233000\"],[\"1 - 5\", \"child of the week\", \"susan tully\", \"elly brewer\", \"29 july 2002\", \"1.5\", \"278000\"],[\"1 - 6\", \"the truth is revealed\", \"susan tully\", \"carol russell\", \"5 august 2002\", \"1.6\", \"315000\"],[\"1 - 7\", \"never ever wanna see him again\", \"susan tully\", \"mary morris\", \"5 august 2002\", \"1.7\", \"221000\"],[\"1 - 8\", \"1000 words about tracy\", \"susan tully\", \"arnold evans\", \"12 august 2002\", \"1.8\", \"261000\"],[\"1 - 9\", \"bad peter\", \"susan tully\", \"mary morris\", \"12 august 2002\", \"1.9\", \"242000\"],[\"1 - 10\", \"cam 's place\", \"susan tully\", \"andy walker\", \"19 august 2002\", \"1.10\", \"423000\"],[\"1 - 11\", \"dumping ground virus\", \"david skynner\", \"elly brewer\", \"19 august 2002\", \"1.11\", \"444000\"],[\"1 - 12\", \"justine 's tv\", \"susan tully\", \"elly brewer\", \"26 august 2002\", \"1.12\", \"417000\"],[\"1 - 13\", \"tracy and cam row\", \"susan tully\", \"elly brewer\", \"26 august 2002\", \"1.13\", \"526000\"],[\"1 - 14\", \"sleepover\", \"david skynner\", \"mary morris\", \"3 september 2002\", \"1.14\", \"658000\"],[\"1 - 15\", \"parent 's evening\", \"susan tully\", \"laura summers\", \"3 september 2002\", \"1.15\", \"215000\"],[\"1 - 16\", \"the postcard\", \"susan tully\", \"roger griffiths\", \"10 september 2002\", \"1.16\", \"215000\"],[\"1 - 18\", \"helpful tracy\", \"david skynner\", \"mary morris\", \"10 september 2002\", \"1.17\", \"145000\"],[\"1 - 19\", \"friend\", \"david skynner\", \"laura summers\", \"17 september 2002\", \"1.19\", \"815000\"],[\"1 - 20\", \"treasure hunt\", \"david skynner\", \"laura summers\", \"24 september 2002\", \"1.20\", \"234000\"],[\"1 - 21\", \"romance\", \"david skynner\", \"elly brewer\", \"24 september 2002\", \"1.21\", \"415000\"],[\"1 - 22\", \"temporary care worker\", \"david skynner\", \"othniel smith\", \"1 october 2002\", \"1.22\", \"615000\"],[\"1 - 23\", \"cut the weed\", \"david skynner\", \"graham alborough\", \"1 october 2002\", \"1.23\", \"522000\"],[\"1 - 24\", \"need armbands\", \"david skynner\", \"laura summers\", \"8 october 2002\", \"1.24\", \"195000\"],[\"1 - 25\", \"miss you\", \"david skynner\", \"mary morris\", \"8 october 2002\", \"1.25\", \"395000\"]]\nQuestion = Is it true that production code 1.17 is for helpful tracy which originally aired on september 10th 2002?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    original_titles = get_column_by_name(table_data, \"original title\")\n    original_airdates = get_column_by_name(table_data, \"original airdate\")\n    prod_codes = get_column_by_name(table_data, \"prod code\")\n    for original_title, original_airdate, prod_code in zip(original_titles, original_airdates, prod_codes):\n        if original_title.lower() == \"helpful tracy\" and original_airdate.lower() == \"10 september 2002\" and prod_code == \"1.17\":\n            return True\n    return False\n\n### END"}
{"id": "72f6ae10-c87a-48c4-85b4-8c1f225aa18e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sanya\ntable_data = [[\"english name\", \"simplified\", \"traditional\", \"pinyin\", \"area\", \"population\", \"density\"],[\"hexi district\", \"河西区\", \"河西區\", \"héxī qū\", \"10\", \"134026\", \"13403\"],[\"hedong district\", \"河东区\", \"河東區\", \"hédōng qū\", \"35\", \"147944\", \"4227\"],[\"haitangwan\", \"海棠湾镇\", \"海棠灣鎮\", \"hǎitángwān zhèn\", \"254\", \"44617\", \"176\"],[\"jiyang\", \"吉阳镇\", \"吉陽鎮\", \"jíyáng zhèn\", \"199\", \"92316\", \"464\"],[\"fenghuang\", \"凤凰镇\", \"鳳凰鎮\", \"fènghuáng zhèn\", \"487\", \"66801\", \"137\"],[\"yacheng\", \"崖城镇\", \"崖城鎮\", \"yáchéng zhèn\", \"383\", \"74779\", \"195\"],[\"tianya\", \"天涯镇\", \"天涯鎮\", \"tiānyá zhèn\", \"269\", \"34934\", \"130\"],[\"yucai\", \"育才镇\", \"育才鎮\", \"yùcái zhèn\", \"315\", \"17515\", \"56\"],[\"nantian farm\", \"国营南田农场\", \"國營南田農場\", \"guóyíng nántián nóngchǎng\", \"nd\", \"24280\", \"nd\"],[\"nanxin farm\", \"国营南新农场\", \"國營南新農場\", \"guóyíng nánxīn nóngchǎng\", \"nd\", \"16801\", \"nd\"],[\"licai farm\", \"国营立才农场\", \"國營立才農場\", \"guóyíng lìcái nóngchǎng\", \"nd\", \"16659\", \"nd\"]]\nQuestion = Is it true that in english , 崖城镇 is translated as yacheng?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    english_names = get_column_by_name(table_data, \"english name\")\n    simplified_names = get_column_by_name(table_data, \"simplified\")\n    for english_name, simplified_name in zip(english_names, simplified_names):\n        if simplified_name == \"崖城镇\":\n            answer = english_name == \"yacheng\"\n            break\n    return answer\n\n### END"}
{"id": "cba83c56-9e0d-44a7-a370-226598481526", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2003 - 04 isu junior grand prix\ntable_data = [[\"rank\", \"nation\", \"gold\", \"silver\", \"bronze\", \"total\"],[\"1\", \"russia\", \"10\", \"14\", \"8\", \"32\"],[\"2\", \"united states\", \"9\", \"6\", \"7\", \"22\"],[\"3\", \"canada\", \"4\", \"2\", \"10\", \"16\"],[\"4\", \"japan\", \"4\", \"5\", \"4\", \"13\"],[\"5\", \"hungary\", \"4\", \"0\", \"2\", \"6\"],[\"6\", \"czech republic\", \"2\", \"1\", \"1\", \"4\"],[\"6\", \"ukraine\", \"1\", \"3\", \"0\", \"4\"],[\"6\", \"italy\", \"0\", \"1\", \"3\", \"4\"],[\"7\", \"sweden\", \"1\", \"2\", \"0\", \"3\"],[\"8\", \"israel\", \"1\", \"1\", \"0\", \"2\"],[\"9\", \"finland\", \"0\", \"0\", \"1\", \"1\"],[\"9\", \"france\", \"0\", \"1\", \"0\", \"1\"]]\nQuestion = Is it true that ukraine gets number 4 of bronze medals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    nations = get_column_by_name(table_data, \"nation\")\n    bronzes = get_column_by_name(table_data, \"bronze\")\n    for nation, bronze in zip(nations, bronzes):\n        if nation.lower() == \"ukraine\":\n            answer = equal_to(bronze, \"4\")\n            break \n    return answer\n\n### END"}
{"id": "335ce35b-fb08-4fc8-aa3c-5957c0d4091e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of venezuelan submissions for the academy award for best foreign language film\ntable_data = [[\"year (ceremony)\", \"original title\", \"film title used in nomination\", \"director\", \"result\"],[\"1978 (50th)\", \"el pez que fuma\", \"el pez que fuma\", \"román chalbaud\", \"not nominated\"],[\"1984 (57th)\", \"la casa de agua\", \"the house of water\", \"jacobo penzo\", \"not nominated\"],[\"1985 (58th)\", \"oriana\", \"oriana\", \"fina torres\", \"not nominated\"],[\"1991 (64th)\", \"jericó\", \"jericho\", \"luis alberto lamata\", \"not nominated\"],[\"1994 (67th)\", \"golpes a mi puerta\", \"knocks at my door\", \"alejandro saderman\", \"not nominated\"],[\"1995 (68th)\", \"sicario\", \"sicario\", \"josé ramón novoa\", \"not nominated\"],[\"1997 (70th)\", \"una vida y dos mandados\", \"one life and two trails\", \"alberto aruelo\", \"not nominated\"],[\"1998 (71st)\", \"rizo\", \"loop\", \"julio sosa\", \"not nominated\"],[\"1999 (72nd)\", \"huelepega : ley de la calle\", \"huelepega\", \"elia schneider\", \"not nominated\"],[\"2000 (73rd)\", \"oro diablo\", \"oro diablo\", \"josé ramón novoa\", \"not nominated\"],[\"2001 (74th)\", \"una casa con vista al mar\", \"a house with a view of the sea\", \"alberto aruelo\", \"not nominated\"],[\"2002 (75th)\", \"la pluma del arcángel\", \"the archangel 's feather\", \"luis manzo\", \"not nominated\"],[\"2003 (76th)\", \"sangrador\", \"sangrador\", \"leonardo henriquez\", \"not nominated\"],[\"2004 (77th)\", \"punto y raya\", \"punto y raya\", \"elia schneider\", \"not nominated\"],[\"2005 (78th)\", \"1888: el extraordinario viaje de santa isabel\", \"1888: the extraordinary voyage of the santa isabel\", \"alfredo anzola\", \"disqualified\"],[\"2006 (79th)\", \"maroa : una niña de la calle\", \"maroa\", \"solveig hoogesteijn\", \"not nominated\"],[\"2007 (80th)\", \"postales de leningrado\", \"postcards from leningrad\", \"mariana rondon\", \"not nominated\"],[\"2008 (81st)\", \"el tinte de la fama\", \"the color of fame\", \"alberto bellame\", \"not nominated\"],[\"2009 (82nd)\", \"libertador morales , el justiciero\", \"libertador morales , el justiciero\", \"efterpi charalambidis\", \"not nominated\"],[\"2010 (83rd)\", \"hermano\", \"hermano\", \"marcel rasquin\", \"not nominated\"],[\"2011 (84th)\", \"the rumble of the stones\", \"el rumor de las piedras\", \"alejandro bellame\", \"not nominated\"],[\"2012 (85th)\", \"rock , paper , scissors\", \"piedra , papel o tijera\", \"hernán jabes\", \"not nominated\"],[\"2013 (86th)\", \"breach in the silence\", \"brecha en el silencio\", \"luis rodríguez , andrés rodríguez\", \"tbd\"]]\nQuestion = Is it true that the nomination title sangrador is associated with the year 2003 (76th)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year (ceremony)\")\n    titles = get_column_by_name(table_data, \"film title used in nomination\")\n    answer = False\n    for year, title in zip(years, titles):\n        if \"2003 (76th)\" in year and \"sangrador\" in title:\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "288ac48f-d694-49f5-ad9d-c8a888837861", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = english cricket team in australia in 1911 - 12\ntable_data = [[\"date\",\"home captain\",\"away captain\",\"venue\",\"result\"],[\"15 , 16 , 18 , 19 , 20 , 21 dec 1911\",\"clem hill\",\"johnny douglas\",\"sydney cricket ground\",\"aus by 146 runs\"],[\"30 dec , 1 , 2 , 3 jan 1911 / 2\",\"clem hill\",\"johnny douglas\",\"melbourne cricket ground\",\"eng by 8 wkts\"],[\"12 , 13 , 15 , 16 , 17 jan 1912\",\"clem hill\",\"johnny douglas\",\"adelaide oval\",\"eng by 7 wkts\"],[\"9 , 10 , 12 , 13 feb 1912\",\"clem hill\",\"johnny douglas\",\"melbourne cricket ground\",\"eng by inns&225 runs\"],[\"23 , 24 , 26 , 27 , 28 , 29 feb , 1 mar 1912\",\"clem hill\",\"johnny douglas\",\"sydney cricket ground\",\"eng by 70 runs\"]]\nQuestion = Is it true that the adelaide oval venue had a result of eng by inns&225 runs?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"venue\")\n    results = get_column_by_name(table_data, \"result\")\n    for venue, result in zip(venues, results):\n        if venue.lower() == \"adelaide oval\":\n            answer = equal_to(result, \"eng by inns&225 runs\")\n            break \n    return answer\n\n### END"}
{"id": "6779bb39-563b-4794-b672-cc8268f23222", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states house of representatives elections , 1812\ntable_data = [[\"district\", \"incumbent\", \"party\", \"first elected\", \"result\", \"candidates\"],[\"north carolina 2\", \"willis alston\", \"democratic - republican\", \"1798\", \"re - elected\", \"willis alston (dr) 56.0% daniel mason (f) 44.0%\"],[\"north carolina 5\", \"william r king\", \"democratic - republican\", \"1810\", \"re - elected\", \"william r king (dr) 100%\"],[\"north carolina 6\", \"nathaniel macon\", \"democratic - republican\", \"1791\", \"re - elected\", \"nathaniel macon (dr)\"],[\"north carolina 9\", \"none (district created)\", \"none (district created)\", \"none (district created)\", \"new seat democratic - republican gain\", \"bartlett yancey (dr) 61.1% james martin (f) 38.9%\"],[\"north carolina 10\", \"joseph pearson\", \"federalist\", \"1808\", \"re - elected\", \"joseph pearson (f) 54.1% alexander gary (dr) 45.9%\"]]\nQuestion = Is it true that nathaniel macon (dr) was the candidate in the district where the incumbent was william r king?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    incumbents = get_column_by_name(table_data, \"incumbent\")\n    candidates = get_column_by_name(table_data, \"candidates\")\n    for incumbent, candidate in zip(incumbents, candidates):\n        if \"william r king\" in incumbent.lower() and \"nathaniel macon (dr)\" in candidate.lower():\n            return True\n    return False\n\n### END"}
{"id": "da049d3d-46b7-4598-a2ea-a2179fbe7fea", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of collaborative software\ntable_data = [[\"name\", \"e - mail server\", \"faxing\", \"instant messaging\", \"telephony\", \"videoconferencing\", \"web conferencing\", \"data conferencing\", \"application sharing\", \"electronic meeting system\", \"synchronous conferencing\"],[\"ibm sametime\", \"no , integrated with lotus domino\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ibm lotus domino\", \"yes\", \"yes\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"no\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"no\"],[\"microsoft exchange server\", \"yes\", \"yes\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"],[\"microsoft lync server\", \"no , integrated with exchange server\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"microsoft sharepoint\", \"no , integrated with exchange server\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"],[\"name\", \"e - mail server\", \"faxing\", \"instant messaging\", \"telephony\", \"videoconferencing\", \"web conferencing\", \"data conferencing\", \"application sharing\", \"electronic meeting system\", \"synchronous conferencing\"]]\nQuestion = Is it true that microsoft sharepoint doesn't have instant messaging but does have electronic meeting system?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    instant_messaging = get_column_by_name(table_data, \"instant messaging\")\n    electronic_meeting_system = get_column_by_name(table_data, \"electronic meeting system\")\n    for name, im, ems in zip(names, instant_messaging, electronic_meeting_system):\n        if name.lower() == \"microsoft sharepoint\":\n            answer = equal_to(im, \"no\") and equal_to(ems, \"yes\")\n            break \n    return answer\n\n### END"}
{"id": "970a3130-a4d2-4bbf-8ba7-bdd3ed664a8a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 seattle supersonics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"47\", \"february 2\", \"new york\", \"w 86 - 85 (ot)\", \"kevin durant (21)\", \"nick collison (12)\", \"earl watson (8)\", \"keyarena 12783\", \"12 - 35\"],[\"48\", \"february 4\", \"chicago\", \"l 108 - 118 (ot)\", \"wally szczerbiak (21)\", \"nick collison (9)\", \"earl watson (8)\", \"keyarena 10935\", \"12 - 36\"],[\"49\", \"february 6\", \"sacramento\", \"w 105 - 92 (ot)\", \"earl watson (23)\", \"earl watson chris wilcox (10)\", \"earl watson (10)\", \"arco arena 13136\", \"13 - 36\"],[\"50\", \"february 8\", \"phoenix\", \"l 99 - 103 (ot)\", \"chris wilcox (22)\", \"chris wilcox (15)\", \"earl watson (5)\", \"us airways center 18422\", \"13 - 37\"],[\"51\", \"february 13\", \"utah\", \"l 93 - 112 (ot)\", \"kevin durant (19)\", \"kurt thomas (13)\", \"earl watson (14)\", \"keyarena 10618\", \"13 - 38\"],[\"52\", \"february 19\", \"memphis\", \"w 108 - 101 (ot)\", \"earl watson (26)\", \"nick collison jeff green (9)\", \"earl watson (9)\", \"keyarena 11391\", \"14 - 38\"],[\"53\", \"february 21\", \"portland\", \"l 88 - 92 (ot)\", \"kevin durant (20)\", \"nick collison (14)\", \"earl watson (9)\", \"rose garden 20168\", \"14 - 39\"],[\"54\", \"february 22\", \"portland\", \"w 99 - 87 (ot)\", \"kevin durant (17)\", \"jeff green (9)\", \"earl watson (4)\", \"keyarena 16640\", \"15 - 39\"],[\"55\", \"february 24\", \"l a lakers\", \"l 91 - 111 (ot)\", \"mickaël gelabale (21)\", \"johan petro (10)\", \"earl watson (8)\", \"keyarena 17072\", \"15 - 40\"],[\"56\", \"february 26\", \"golden state\", \"l 99 - 105 (ot)\", \"kevin durant jeff green (21)\", \"nick collison (13)\", \"luke ridnour (15)\", \"oracle arena 19412\", \"15 - 41\"],[\"57\", \"february 27\", \"denver\", \"l 96 - 138 (ot)\", \"kevin durant mickaël gelabale (16)\", \"johan petro (8)\", \"mickaël gelabale (6)\", \"keyarena 13627\", \"15 - 42\"]]\nQuestion = Is it true that the team had a record of 15 - 42 when they played at keyarena and attendance reached 13627?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"location attendance\")\n    records = get_column_by_name(table_data, \"record\")\n    for location, record in zip(locations, records):\n        if \"keyarena 13627\" in location.lower() and \"15 - 42\" in record.lower():\n            return True\n    return False\n\n### END"}
{"id": "85e4dd16-6d7e-47a9-b80b-f614ad4229cc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1990 toronto blue jays season\ntable_data = [[\"date\",\"opponent\",\"score\",\"loss\",\"attendance\",\"record\"],[\"may 1\",\"indians\",\"4 - 3\",\"candiotti (3 - 1)\",\"5111\",\"13 - 9\"],[\"may 2\",\"indians\",\"3 - 0\",\"cerutti (1 - 4)\",\"8801\",\"13 - 10\"],[\"may 4\",\"tigers\",\"3 - 1\",\"flanagan (2 - 2)\",\"49146\",\"13 - 11\"],[\"may 5\",\"tigers\",\"5 - 1\",\"robinson (1 - 3)\",\"49219\",\"14 - 11\"],[\"may 6\",\"tigers\",\"11 - 7\",\"dubois (0 - 1)\",\"49206\",\"15 - 11\"],[\"may 7\",\"white sox\",\"6 - 1\",\"mcdowell (1 - 2)\",\"41384\",\"16 - 11\"],[\"may 8\",\"white sox\",\"4 - 1\",\"cerutti (1 - 5)\",\"41101\",\"16 - 12\"],[\"may 9\",\"white sox\",\"4 - 3\",\"edwards (0 - 1)\",\"43128\",\"17 - 12\"],[\"may 10\",\"tigers\",\"10 - 5\",\"stottlemyre (4 - 3)\",\"11296\",\"17 - 13\"],[\"may 11\",\"tigers\",\"4 - 2\",\"dubois (0 - 2)\",\"17376\",\"18 - 13\"],[\"may 12\",\"tigers\",\"postponed (rain) rescheduled for may 14\",\"postponed (rain) rescheduled for may 14\",\"postponed (rain) rescheduled for may 14\",\"postponed (rain) rescheduled for may 14\"],[\"may 13\",\"tigers\",\"6 - 3\",\"morris (2 - 5)\",\"17068\",\"19 - 13\"],[\"may 14\",\"tigers\",\"8 - 3 (10)\",\"henneman (0 - 3)\",\"10833\",\"20 - 13\"],[\"may 15\",\"mariners\",\"4 - 3 (10)\",\"acker (0 - 1)\",\"41108\",\"20 - 14\"],[\"may 16\",\"mariners\",\"4 - 2\",\"stottlemyre (4 - 4)\",\"45640\",\"20 - 15\"],[\"may 17\",\"mariners\",\"14 - 6\",\"key (4 - 2)\",\"47283\",\"20 - 16\"],[\"may 18\",\"angels\",\"4 - 2\",\"stieb (5 - 2)\",\"49339\",\"20 - 17\"],[\"may 19\",\"angels\",\"11 - 9\",\"ward (1 - 1)\",\"49335\",\"20 - 18\"],[\"may 20\",\"angels\",\"5 - 1\",\"langston (3 - 4)\",\"49421\",\"21 - 18\"],[\"may 21\",\"athletics\",\"4 - 1\",\"stottlemyre (4 - 5)\",\"49471\",\"21 - 19\"],[\"may 22\",\"athletics\",\"5 - 4\",\"wills (3 - 2)\",\"49559\",\"21 - 20\"],[\"may 23\",\"angels\",\"5 - 4\",\"ward (1 - 2)\",\"25179\",\"21 - 21\"],[\"may 24\",\"angels\",\"4 - 3 (11)\",\"henke (0 - 1)\",\"24460\",\"21 - 22\"],[\"may 25\",\"mariners\",\"3 - 1 (11)\",\"swift (2 - 2)\",\"15334\",\"22 - 22\"],[\"may 26\",\"mariners\",\"11 - 4\",\"holman (6 - 3)\",\"25004\",\"23 - 22\"],[\"may 27\",\"mariners\",\"5 - 1\",\"johnson (3 - 3)\",\"25858\",\"24 - 22\"],[\"may 28\",\"athletics\",\"1 - 0\",\"moore (4 - 4)\",\"45005\",\"25 - 22\"],[\"may 29\",\"athletics\",\"2 - 1\",\"stewart (8 - 2)\",\"25255\",\"26 - 22\"],[\"may 30\",\"athletics\",\"8 - 5\",\"blair (0 - 1)\",\"24257\",\"26 - 23\"]]\nQuestion = Is it true that holman (6 - 3) lost the game on may 26 with a record of 23 - 22?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    losses = get_column_by_name(table_data, \"loss\")\n    records = get_column_by_name(table_data, \"record\")\n    for date, loss, record in zip(dates, losses, records):\n        if date.lower() == \"may 26\" and loss.lower() == \"holman (6 - 3)\" and record.lower() == \"23 - 22\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "3ee6fa22-37e1-4f1c-a5ae-b8bfffe44d66", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = prr locomotive classification\ntable_data = [[\"prr class\", \"builders model\", \"build date\", \"total produced\", \"wheel arrangement\", \"service\", \"power output\"],[\"bs6\", \"vo - 660\", \"1942 - 1945\", \"12\", \"b - b\", \"switcher\", \"\"],[\"bs6\", \"ds - 4 - 4 - 660\", \"1942 - 1945\", \"99\", \"b - b\", \"switcher\", \"\"],[\"bs7\", \"ds - 4 - 4 - 750\", \"1951\", \"24\", \"b - b\", \"switcher\", \"\"],[\"bs7\", \"s7\", \"1951\", \"7\", \"b - b\", \"switcher\", \"\"],[\"bs10\", \"vo\", \"1943 - 1945\", \"8\", \"b - b\", \"switcher\", \"\"],[\"bs10\", \"ds - 4 - 4 - 1000\", \"1948 - 1950\", \"137\", \"b - b\", \"switcher\", \"\"],[\"bs12\", \"s - 12\", \"1951 - 1956\", \"98\", \"b - b\", \"switcher\", \"\"],[\"bf15\", \"dr - 4 - 4 - 1500\", \"1940 - 1950\", \"34\", \"b - b\", \"freight\", \"\"],[\"bf16\", \"rf - 16 (a)\", \"1950 - 1952\", \"72\", \"b - b\", \"freight\", \"\"],[\"bf16\", \"rf - 16 (b)\", \"1950 - 1952\", \"30\", \"b - b\", \"freight\", \"\"],[\"bp60a\", \"dr - 12 - 8 - 3000\", \"1947 - 1948\", \"24\", \"2 - d - d - 2\", \"pass\", \"\"],[\"bp20\", \"dr - 6 - 4 - 2000\", \"1948\", \"18\", \"a1a - a1a\", \"pass\", \"\"],[\"bp20\", \"dr - 6 - 4 - 2000\", \"1948\", \"9\", \"a1a - a1a\", \"pass\", \"\"],[\"brs10\", \"drs - 4 - 4 - 1000\", \"1949 - 1950\", \"6\", \"b - b\", \"pass\", \"\"],[\"brs12\", \"rs - 12\", \"1951 - 1954\", \"8\", \"b - b\", \"pass\", \"\"],[\"brs15\", \"drs - 4 - 4 - 1500\", \"1950\", \"8\", \"b - b\", \"pass\", \"\"],[\"brs16\", \"as - 16\", \"1953 - 1955\", \"28\", \"c - c\", \"pass\", \"\"],[\"brs24\", \"rt - 624\", \"1951 - 1954\", \"22\", \"c - c\", \"transfer\", \"\"],[\"lrs25\", \"t2500\", \"1950 - 1951\", \"22\", \"c - c\", \"transfer\", \"\"]]\nQuestion = Is it true that the model with a prr class of brs24 was built in 1951 - 1954 with a b - b wheel arrangement?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    prr_classes = get_column_by_name(table_data, \"prr class\")\n    build_dates = get_column_by_name(table_data, \"build date\")\n    wheel_arrangements = get_column_by_name(table_data, \"wheel arrangement\")\n    for prr_class, build_date, wheel_arrangement in zip(prr_classes, build_dates, wheel_arrangements):\n        if prr_class.lower() == \"brs24\":\n            answer = equal_to(build_date, \"1951 - 1954\") and equal_to(wheel_arrangement, \"b - b\")\n            break \n    return answer\n\n### END"}
{"id": "30bc81ee-87bc-4461-8aca-99535058c164", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 croatian cup\ntable_data = [[\"round\", \"main date\", \"number of fixtures\", \"clubs\", \"new entries this round\"],[\"preliminary round\", \"27 august 2008\", \"16\", \"48 → 32\", \"none\"],[\"first round\", \"23 and 24 september 2008\", \"16\", \"32 → 16\", \"16\"],[\"second round\", \"29 october 2008\", \"8\", \"16 → 8\", \"none\"],[\"quarter - finals\", \"12 and 26 november 2008\", \"8\", \"8 → 4\", \"none\"],[\"semi - finals\", \"4 and 18 march 2009\", \"4\", \"4 → 2\", \"none\"],[\"final\", \"13 and 28 may 2009\", \"2\", \"2 → 1\", \"none\"]]\nQuestion = Is it true that in the preliminary round the clubs are listed as 48 → 32?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    clubs = get_column_by_name(table_data, \"clubs\")\n    for round, club in zip(rounds, clubs):\n        if round.lower() == \"preliminary round\":\n            answer = equal_to(club, \"48 → 32\")\n            break \n    return answer\n\n### END"}
{"id": "323109fa-9a17-4dc5-bb5d-28eff1ec6144", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of rna structure prediction software\ntable_data = [[\"name\", \"species specific\", \"intra - molecular structure\", \"comparative\", \"link\"],[\"diana - microt\", \"human , mouse\", \"no\", \"yes\", \"webserver\"],[\"microtar\", \"no\", \"no\", \"no\", \"sourcecode\"],[\"mitarget\", \"no\", \"no\", \"no\", \"webserver\"],[\"mirror\", \"no\", \"no\", \"no\", \"webserver\"],[\"pictar\", \"8 vertebrates\", \"no\", \"yes\", \"predictions\"],[\"pita\", \"no\", \"yes\", \"no\", \"executable , webserver , predictions\"],[\"rna22\", \"no\", \"no\", \"no\", \"predictions custom\"],[\"rnahybrid\", \"no\", \"no\", \"no\", \"sourcecode , webserver\"],[\"sylamer\", \"no\", \"no\", \"no\", \"sourcecode webserver\"],[\"taref\", \"yes\", \"no\", \"no\", \"server / sourcecode\"],[\"p - taref\", \"yes\", \"no\", \"no\", \"server / standalone\"],[\"targetscan\", \"vertebrates , flies , nematodes\", \"evaluated indirectly\", \"yes\", \"sourcecode , webserver\"]]\nQuestion = Is it true that the link of sourcecode is connected to taref of no species specific with no comparitive and intra - molecular structure evaluated indirectly?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    species_specifics = get_column_by_name(table_data, \"species specific\")\n    intra_molecular_structures = get_column_by_name(table_data, \"intra - molecular structure\")\n    comparatives = get_column_by_name(table_data, \"comparative\")\n    links = get_column_by_name(table_data, \"link\")\n    for name, species_specific, intra_molecular_structure, comparative, link in zip(names, species_specifics, intra_molecular_structures, comparatives, links):\n        if name.lower() == \"taref\" and species_specific.lower() == \"no\" and intra_molecular_structure.lower() == \"evaluated indirectly\" and comparative.lower() == \"no\" and \"sourcecode\" in link.lower():\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "5e103f72-c40f-485c-9e25-d68bed14ddd2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = atlanta falcons draft history\ntable_data = [[\"round\", \"pick\", \"overall\", \"name\", \"position\", \"college\"],[\"1\", \"6\", \"6\", \"warren bryant\", \"offensive tackle\", \"kentucky\"],[\"1\", \"20\", \"20\", \"wilson faumuina\", \"defensive tackle\", \"san josã state\"],[\"2\", \"8\", \"36\", \"r c thielemann\", \"guard\", \"arkansas\"],[\"4\", \"6\", \"90\", \"allan leavitt\", \"kicker\", \"georgia\"],[\"5\", \"8\", \"120\", \"shelton diggs\", \"wide receiver\", \"usc\"],[\"6\", \"22\", \"161\", \"keith jenkins\", \"defensive back\", \"cincinnati\"],[\"8\", \"8\", \"203\", \"walter packer\", \"wide receiver\", \"mississippi state\"],[\"9\", \"7\", \"230\", \"john maxwell\", \"offensive tackle\", \"boston college\"],[\"9\", \"19\", \"242\", \"robert speer\", \"defensive end\", \"arkansas state\"],[\"10\", \"6\", \"257\", \"billy ryckman\", \"wide receiver\", \"louisiana tech\"],[\"11\", \"8\", \"287\", \"dave farmer\", \"running back\", \"usc\"],[\"12\", \"7\", \"312\", \"don parrish\", \"defensive tackle\", \"pittsburgh\"]]\nQuestion = Is it true that keith jenkins is from the college of cincinnati?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    colleges = get_column_by_name(table_data, \"college\")\n    answer = False\n    for name, college in zip(names, colleges):\n        if name.lower() == \"keith jenkins\" and college.lower() == \"cincinnati\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "acd3fc15-f386-44fe-83dd-3c1d3f99c14d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of americas records in swimming\ntable_data = [[\"event\", \"time\", \"nationality\", \"date\", \"meet\", \"location\"],[\"50 m freestyle\", \"20.91\", \"brazil\", \"18 december 2009\", \"brazilian championships\", \"são paulo, brazil\"],[\"100 m freestyle\", \"46.91\", \"brazil\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m freestyle\", \"1:42.96\", \"united states\", \"12 august 2008\", \"olympic games\", \"beijing, china\"],[\"400 m freestyle\", \"3:42.78\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"800 m freestyle\", \"7:41.86\", \"canada\", \"27 july 2011\", \"world championships\", \"shanghai, china\"],[\"1500 m freestyle\", \"14:39.63\", \"canada\", \"4 august 2012\", \"olympic games\", \"london, united kingdom\"],[\"50 m backstroke\", \"24.33\", \"united states\", \"5 december 2008\", \"dutch swim cup\", \"eindhoven, netherlands\"],[\"100 m backstroke\", \"51.94\", \"united states\", \"8 july 2009\", \"us championships\", \"indianapolis, united states\"],[\"200 m backstroke\", \"1:51.92\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m breaststroke\", \"26.76\", \"brazil\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"100 m breaststroke\", \"58.96\", \"united states\", \"26 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m breaststroke\", \"2:07.42\", \"united states\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m butterfly\", \"22.76\", \"brazil\", \"26 april 2012\", \"maria lenk trophy\", \"rio de janeiro, brazil\"],[\"100 m butterfly\", \"49.82\", \"united states\", \"1 august 2009\", \"world championships\", \"rome, italy\"],[\"200 m butterfly\", \"1:51.51\", \"united states\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m individual medley\", \"1:54.00\", \"united states\", \"28 july 2011\", \"world championships\", \"shanghai, china\"],[\"400 m individual medley\", \"4:03.84\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"4100 m freestyle relay\", \"3:08.24\", \"united states\", \"11 august 2008\", \"olympic games\", \"beijing, china\"],[\"4200 m freestyle relay\", \"6:58.55\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"4100 m medley relay\", \"3:27.28\", \"united states\", \"2 august 2009\", \"world championships\", \"rome, italy\"]]\nQuestion = Is it true that the 50 m butterfly event took place on 4 august 2012?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for event, date in zip(events, dates):\n        if \"50 m butterfly\" in event.lower():\n            if \"4 august 2012\" in date.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "2ce28d72-704f-4014-a7fb-ea84c8cf5aaa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1981 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"footscray\", \"10.14 (74)\", \"hawthorn\", \"11.18 (84)\", \"western oval\", \"13789\", \"23 may 1981\"],[\"fitzroy\", \"13.15 (93)\", \"geelong\", \"16.18 (114)\", \"junction oval\", \"15604\", \"23 may 1981\"],[\"carlton\", \"25.22 (172)\", \"south melbourne\", \"11.7 (73)\", \"princes park\", \"22445\", \"23 may 1981\"],[\"melbourne\", \"10.10 (70)\", \"essendon\", \"14.20 (104)\", \"mcg\", \"31769\", \"23 may 1981\"],[\"north melbourne\", \"12.26 (98)\", \"collingwood\", \"16.15 (111)\", \"arden street oval\", \"24625\", \"23 may 1981\"],[\"richmond\", \"20.16 (136)\", \"st kilda\", \"15.15 (105)\", \"vfl park\", \"40240\", \"23 may 1981\"]]\nQuestion = Is it true that the north melbourne home game had 15604 people at the game?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    for home_team, crowd in zip(home_teams, crowds):\n        if home_team.lower() == \"north melbourne\":\n            answer = equal_to(crowd, \"15604\")\n            break \n    return answer\n\n### END"}
{"id": "98e51876-9d0a-4386-a919-763eb3e3ef7c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1926 grand prix season\ntable_data = [[\"name\", \"circuit\", \"date\", \"winning drivers\", \"winning constructor\", \"report\"],[\"indianapolis 500\", \"indianapolis\", \"31 may\", \"frank lockhart\", \"miller\", \"report\"],[\"french grand prix\", \"miramas\", \"27 june\", \"jules goux\", \"bugatti\", \"report\"],[\"san sebastián grand prix / european grand prix\", \"lasarte\", \"18 july\", \"jules goux\", \"bugatti\", \"report\"],[\"british grand prix\", \"brooklands\", \"7 august\", \"robert sénéchal louis wagner\", \"delage\", \"report\"],[\"italian grand prix\", \"monza\", \"5 september\", \"louis charavel\", \"bugatti\", \"report\"]]\nQuestion = Is it true that on september 5th , the winning constructor of the italian grand prix is bugatti?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    constructors = get_column_by_name(table_data, \"winning constructor\")\n    for date, constructor in zip(dates, constructors):\n        if \"5 september\" in date.lower():\n            answer = equal_to(constructor.lower(), \"bugatti\")\n            break \n    return answer\n\n### END"}
{"id": "06afc7b2-d763-47fe-b57a-e72150786fc5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1964 all - ireland senior hurling championship\ntable_data = [[\"rank\", \"player\", \"county\", \"tally\", \"total\", \"opposition\"],[\"1\", \"richard browne\", \"cork\", \"4 - 0\", \"12\", \"galway\"],[\"2\", \"tony forrestal\", \"kilkenny\", \"3 - 2\", \"11\", \"wexford\"],[\"3\", \"pat cronin\", \"clare\", \"2 - 4\", \"10\", \"limerick\"],[\"3\", \"jimmy doyle\", \"tipperary\", \"1 - 7\", \"10\", \"clare\"],[\"3\", \"jimmy doyle\", \"tipperary\", \"0 - 10\", \"10\", \"cork\"],[\"3\", \"jimmy doyle\", \"tipperary\", \"0 - 10\", \"10\", \"kilkenny\"],[\"7\", \"donie nealon\", \"tipperary\", \"3 - 0\", \"9\", \"kilkenny\"],[\"7\", \"philly grimes\", \"waterford\", \"2 - 3\", \"9\", \"cork\"],[\"7\", \"paddy molloy\", \"offaly\", \"1 - 6\", \"9\", \"westmeath\"],[\"10\", \"fran whelan\", \"dublin\", \"2 - 2\", \"8\", \"carlow\"],[\"10\", \"pat harte\", \"cork\", \"2 - 2\", \"8\", \"waterford\"]]\nQuestion = Is it true that rank 3 has an opposition of limerick?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    oppositions = get_column_by_name(table_data, \"opposition\")\n    answer = False\n    for rank, opposition in zip(ranks, oppositions):\n        if rank == \"3\" and opposition.lower() == \"limerick\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "0c801cdd-8f2d-4777-927f-3a54ec8a17f0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = atlanta falcons draft history\ntable_data = [[\"round\", \"pick\", \"overall\", \"name\", \"position\"],[\"1\", \"9\", \"9\", \"bubba bean\", \"running back\"],[\"2\", \"8\", \"36\", \"sonny collins\", \"running back\"],[\"3\", \"11\", \"71\", \"dave scott\", \"guard\"],[\"4\", \"10\", \"102\", \"walt brett\", \"defensive end\"],[\"6\", \"13\", \"169\", \"stan varner\", \"defensive tackle\"],[\"7\", \"11\", \"193\", \"karl farmer\", \"wide receiver\"],[\"8\", \"10\", \"219\", \"frank reed\", \"washington\"],[\"9\", \"9\", \"246\", \"phil mckinnely\", \"offensive tackle\"],[\"11\", \"11\", \"302\", \"chuck brislin\", \"offensive tackle\"],[\"12\", \"10\", \"329\", \"pat bolton\", \"kicker\"],[\"13\", \"9\", \"356\", \"mike williams\", \"offensive tackle\"],[\"14\", \"8\", \"383\", \"mark husfloen\", \"defensive end\"],[\"15\", \"11\", \"414\", \"ron olson\", \"defensive back\"],[\"16\", \"10\", \"441\", \"pat curto\", \"linebacker\"],[\"17\", \"9\", \"468\", \"tony green\", \"defensive back\"]]\nQuestion = Is it true that 11 is the highest round with a pick number of 11 or higher?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater_or_equal(num1, num2):\n    return num1 >= num2\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    picks = get_column_by_name(table_data, \"pick\")\n    highest_round = 0\n    for round, pick in zip(rounds, picks):\n        if greater_or_equal(int(pick), 11):\n            highest_round = max(highest_round, int(round))\n    answer = highest_round == 11\n    return answer\n\n### END"}
{"id": "db09ca22-d8c3-4c4c-a94c-c7e48a1e34e1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rowing at the 2008 summer olympics - women 's lightweight double sculls\ntable_data = [[\"rank\", \"rowers\", \"country\", \"time\", \"notes\"],[\"1\", \"melanie kok , tracy cameron\", \"canada\", \"7:10.70\", \"fa\"],[\"2\", \"xu dongxiang , chen haixia\", \"china\", \"7:11.59\", \"fa\"],[\"3\", \"chrysi biskitzi , alexandra tsiavou\", \"greece\", \"7:11.99\", \"fa\"],[\"4\", \"renee hykel , jennifer goldsack\", \"united states\", \"7:12.15\", \"fb\"],[\"5\", \"amber halliday , marguerite houston\", \"australia\", \"7:13.80\", \"fb\"],[\"6\", \"misaki kumakura , akiko iwamoto\", \"japan\", \"7:16.13\", \"fb\"]]\nQuestion = Is it true that greece placed better than second?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    countries = get_column_by_name(table_data, \"country\")\n    for rank, country in zip(ranks, countries):\n        if country.lower() == \"greece\":\n            answer = less_than(int(rank), 2)\n            break \n    return answer\n\n### END"}
{"id": "d3bdd4bc-5fc6-4a40-bee4-d53df27728db", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = provinces of korea\ntable_data = [[\"japanese name\",\"kana\",\"hanja / kanji\",\"korean name\",\"hangul\"],[\"chūsei - hokudō\",\"ちゅうせいほくどう\",\"忠清北道\",\"chungcheong - bukdo\",\"충청북도\"],[\"keishō - hokudō\",\"けいしょうほくどう\",\"慶尚北道\",\"gyeongsang - bukdo\",\"경상북도\"],[\"chūsei - nandō\",\"ちゅうせいなんどう\",\"忠淸南道\",\"chungcheong - namdo\",\"충청남도\"],[\"keishō - nandō\",\"けいしょうなんどう\",\"慶尚南道\",\"gyeongsang - namdo\",\"경상남도\"],[\"heian - hokudō\",\"へいあんほくどう\",\"平安北道\",\"pyeongan - bukdo\",\"평안북도\"],[\"kōgendō\",\"こうげんどう\",\"江原道\",\"gangwondo\",\"강원도\"],[\"heian - nandō\",\"へいあんなんどう\",\"平安南道\",\"pyeongan - namdo\",\"평안남도\"],[\"kōkaidō\",\"こうかいどう\",\"黃海道\",\"hwanghaedo\",\"황해도\"],[\"kankyō - hokudo\",\"かんきょうほくどう\",\"咸鏡北道\",\"hamgyeong - bukdo\",\"함경북도\"],[\"zenra - hokudō\",\"ぜんらほくどう\",\"全羅北道\",\"jeolla - bukdo\",\"전라북도\"],[\"kankyō - nandō\",\"かんきょうなんどう\",\"咸鏡南道\",\"hamgyeong - namdo\",\"함경남도\"],[\"zenra - nandō\",\"ぜんらなんどう\",\"全羅南道\",\"jeolla - namdo\",\"전라남도\"],[\"keikidō\",\"けいきどう\",\"京畿道\",\"gyeonggido\",\"경기도\"]]\nQuestion = Is it true that 忠清北道 is the hanja / kanji of the province with a korean name of chungcheong - bukdo?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    hanja_kanji = get_column_by_name(table_data, \"hanja / kanji\")\n    korean_names = get_column_by_name(table_data, \"korean name\")\n    for hanja, korean_name in zip(hanja_kanji, korean_names):\n        if korean_name.lower() == \"chungcheong - bukdo\":\n            answer = equal_to(hanja, \"忠清北道\")\n            break \n    return answer\n\n### END"}
{"id": "b96c99bf-04de-439a-90c8-4e0458cd5dfd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 big ten conference football season\ntable_data = [[\"bowl game\", \"date\", \"stadium\", \"city\", \"television\", \"conference matchups\", \"payout ( us )\"],[\"insight bowl\", \"december 31 , 2008\", \"sun devil stadium\", \"tempe , arizona\", \"nfl\", \"minnesota vs kansas\", \"1.2 million\"],[\"champs sports bowl\", \"december 27 , 2008\", \"citrus bowl\", \"orlando , florida\", \"espn\", \"wisconsin vs florida state\", \"2.25 million\"],[\"alamo bowl\", \"december 29 , 2008\", \"alamodome\", \"san antonio , texas\", \"espn\", \"northwestern vs missouri\", \"2.2 million\"],[\"outback bowl\", \"january 1 , 2009\", \"raymond james stadium\", \"tampa , florida\", \"espn\", \"iowa vs south carolina\", \"3 million\"],[\"capital one\", \"january 1 , 2009\", \"citrus bowl\", \"orlando , florida\", \"abc\", \"michigan state vs georgia\", \"4.25 million\"],[\"fiesta bowl\", \"january 5 , 2009\", \"university of phoenix stadium\", \"glendale , arizona\", \"fox\", \"ohio state vs texas\", \"17.5 million\"]]\nQuestion = Is it true that insight bowl is the name of the bowl game played in tampa , florida?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    bowl_games = get_column_by_name(table_data, \"bowl game\")\n    cities = get_column_by_name(table_data, \"city\")\n    answer = False\n    for bowl_game, city in zip(bowl_games, cities):\n        if \"insight bowl\" in bowl_game.lower() and \"tampa , florida\" in city.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "77c6ed5d-f4d8-4d5a-b9cb-ca2001307ca0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"\", \"original title\", \"directed by\", \"written by\", \"original airdate\", \"prod code\", \"viewers\"],[\"1 - 1\", \"tracy returns\", \"susan tully\", \"elly brewer\", \"8 july 2002\", \"1.1\", \"267000\"],[\"1 - 2\", \"dares\", \"david skynner\", \"elly brewer\", \"15 july 2002\", \"1.2\", \"363000\"],[\"1 - 3\", \"sneaking in ben\", \"susan tully\", \"andy walker\", \"22 july 2002\", \"1.3\", \"499000\"],[\"1 - 4\", \"cam 's first visit\", \"susan tully\", \"elly brewer\", \"29 july 2002\", \"1.4\", \"233000\"],[\"1 - 5\", \"child of the week\", \"susan tully\", \"elly brewer\", \"29 july 2002\", \"1.5\", \"278000\"],[\"1 - 6\", \"the truth is revealed\", \"susan tully\", \"carol russell\", \"5 august 2002\", \"1.6\", \"315000\"],[\"1 - 7\", \"never ever wanna see him again\", \"susan tully\", \"mary morris\", \"5 august 2002\", \"1.7\", \"221000\"],[\"1 - 8\", \"1000 words about tracy\", \"susan tully\", \"arnold evans\", \"12 august 2002\", \"1.8\", \"261000\"],[\"1 - 9\", \"bad peter\", \"susan tully\", \"mary morris\", \"12 august 2002\", \"1.9\", \"242000\"],[\"1 - 10\", \"cam 's place\", \"susan tully\", \"andy walker\", \"19 august 2002\", \"1.10\", \"423000\"],[\"1 - 11\", \"dumping ground virus\", \"david skynner\", \"elly brewer\", \"19 august 2002\", \"1.11\", \"444000\"],[\"1 - 12\", \"justine 's tv\", \"susan tully\", \"elly brewer\", \"26 august 2002\", \"1.12\", \"417000\"],[\"1 - 13\", \"tracy and cam row\", \"susan tully\", \"elly brewer\", \"26 august 2002\", \"1.13\", \"526000\"],[\"1 - 14\", \"sleepover\", \"david skynner\", \"mary morris\", \"3 september 2002\", \"1.14\", \"658000\"],[\"1 - 15\", \"parent 's evening\", \"susan tully\", \"laura summers\", \"3 september 2002\", \"1.15\", \"215000\"],[\"1 - 16\", \"the postcard\", \"susan tully\", \"roger griffiths\", \"10 september 2002\", \"1.16\", \"215000\"],[\"1 - 18\", \"helpful tracy\", \"david skynner\", \"mary morris\", \"10 september 2002\", \"1.17\", \"145000\"],[\"1 - 19\", \"friend\", \"david skynner\", \"laura summers\", \"17 september 2002\", \"1.19\", \"815000\"],[\"1 - 20\", \"treasure hunt\", \"david skynner\", \"laura summers\", \"24 september 2002\", \"1.20\", \"234000\"],[\"1 - 21\", \"romance\", \"david skynner\", \"elly brewer\", \"24 september 2002\", \"1.21\", \"415000\"],[\"1 - 22\", \"temporary care worker\", \"david skynner\", \"othniel smith\", \"1 october 2002\", \"1.22\", \"615000\"],[\"1 - 23\", \"cut the weed\", \"david skynner\", \"graham alborough\", \"1 october 2002\", \"1.23\", \"522000\"],[\"1 - 24\", \"need armbands\", \"david skynner\", \"laura summers\", \"8 october 2002\", \"1.24\", \"195000\"],[\"1 - 25\", \"miss you\", \"david skynner\", \"mary morris\", \"8 october 2002\", \"1.25\", \"395000\"]]\nQuestion = Is it true that helpful tracy received fewer than 145000 views?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"original title\")\n    viewers = get_column_by_name(table_data, \"viewers\")\n    for title, viewer in zip(titles, viewers):\n        if title.lower() == \"helpful tracy\":\n            answer = less_than(int(viewer), 145000)\n            break \n    return answer\n\n### END"}
{"id": "03ada76f-b94d-4e43-9475-fb10b6974d45", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = colin morgan\ntable_data = [[\"year\", \"award\", \"category\", \"role\", \"result\"],[\"2008\", \"variety club showbiz awards\", \"outstanding newcomer\", \"merlin in merlin\", \"won\"],[\"2009\", \"monte carlo tv festival awards\", \"outstanding actor (drama)\", \"merlin in merlin\", \"nominated\"],[\"2010\", \"monte carlo tv festival awards\", \"outstanding actor (drama)\", \"merlin in merlin\", \"nominated\"],[\"2011\", \"monte carlo tv festival awards\", \"outstanding actor (drama)\", \"merlin in merlin\", \"nominated\"],[\"2012\", \"virgin media tv awards\", \"best actor\", \"merlin in merlin\", \"won\"],[\"2013\", \"national television award\", \"drama performance : male\", \"merlin in merlin\", \"won\"]]\nQuestion = Is it true that the results were all nominated for the category outstanding actor (drama)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef all_same(items):\n    return all(x == items[0] for x in items)\n\ndef solution(table_data):\n    categories = get_column_by_name(table_data, \"category\")\n    results = get_column_by_name(table_data, \"result\")\n    category_results = [result for category, result in zip(categories, results) if category == \"outstanding actor (drama)\"]\n    answer = all_same(category_results)\n    return answer\n\n### END"}
{"id": "4ef82fe8-7622-440e-a2c0-c9d3cfcf3cd1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mcleod 's daughters (season 2)\ntable_data = [[\"season\",\"series\",\"title\",\"director (s)\",\"writer (s)\",\"original airdate\"],[\"1\",\"23\",\"the drovers connection\",\"robert klenner\",\"chris hawkshaw & susan smith\",\"27 march 2002\"],[\"2\",\"24\",\"through the looking glass\",\"robert klenner\",\"david phillips\",\"3 april 2002\"],[\"3\",\"25\",\"desperate measures\",\"lewis fitz - gerald\",\"chris mccourt\",\"10 april 2002\"],[\"4\",\"26\",\"the bore war\",\"lewis fitz - gerald\",\"alexa wyatt\",\"17 april 2002\"],[\"5\",\"27\",\"hello stranger\",\"donald crombie\",\"michaeley o'brien\",\"24 april 2002\"],[\"6\",\"28\",\"a dry spell\",\"donald crombie\",\"chris phillips\",\"1 may 2002\"],[\"7\",\"29\",\"three 's a crowd\",\"karl zwicky\",\"chris pearce & alexa wyatt\",\"8 may 2002\"],[\"8\",\"30\",\"the bridle waltz\",\"karl zwicky\",\"robert dudley & alexa wyatt\",\"15 may 2002\"],[\"9\",\"31\",\"to have & to hold\",\"chris martin - jones\",\"chris mccourt & sarah smith\",\"3 july 2002\"],[\"10\",\"32\",\"home is where the heart is\",\"chris martin - jones\",\"ysabelle dean\",\"10 july 2002\"],[\"11\",\"33\",\"wildfire\",\"ian gilmour\",\"sally webb\",\"17 july 2002\"],[\"12\",\"34\",\"hounded\",\"ian gilmour\",\"dave warner\",\"24 july 2002\"],[\"13\",\"35\",\"steer trek\",\"karl zwicky\",\"david phillips & alexa wyatt\",\"31 july 2002\"],[\"14\",\"36\",\"brave j\",\"karl zwicky\",\"louise crane\",\"7 august 2002\"],[\"15\",\"37\",\"you can leave your hat on\",\"chris martin - jones\",\"guila sandler\",\"15 august 2002\"],[\"16\",\"38\",\"stripped bare\",\"chris martin - jones\",\"chris hawkshaw\",\"21 august 2002\"],[\"17\",\"39\",\"blame it on the moonlight\",\"donald crombie\",\"chris mccourt\",\"4 september 2002\"],[\"18\",\"40\",\"made to be broken\",\"donald crombie\",\"chris mccourt\",\"18 september 2002\"],[\"19\",\"41\",\"best of enemies\",\"robert klenner\",\"david phillips\",\"25 september 2002\"],[\"20\",\"42\",\"wind change\",\"robert klenner\",\"chris phillips\",\"2 october 2002\"],[\"21\",\"43\",\"no more mr nice guy\",\"karl zwicky\",\"sarah smith\",\"9 october 2002\"]]\nQuestion = Is it true that the series number of the episode directed by donald crombie in season 18 is 40?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    directors = get_column_by_name(table_data, \"director (s)\")\n    series = get_column_by_name(table_data, \"series\")\n    seasons = get_column_by_name(table_data, \"season\")\n    for director, serie, season in zip(directors, series, seasons):\n        if director.lower() == \"donald crombie\" and season == \"18\":\n            answer = equal_to(serie, \"40\")\n            break \n    return answer\n\n### END"}
{"id": "10403124-fed4-4cdc-b21a-5bb4adac186a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rivers state\ntable_data = [[\"lga name\", \"area (km 2 )\", \"census 2006 population\", \"administrative capital\", \"postal code\"],[\"port harcourt\", \"109\", \"541115\", \"port harcourt\", \"500\"],[\"obio - akpor\", \"260\", \"464789\", \"rumuodumaya\", \"500\"],[\"okrika\", \"222\", \"222026\", \"okrika\", \"500\"],[\"ogu / bolo\", \"89\", \"74683\", \"ogu\", \"500\"],[\"eleme\", \"138\", \"190884\", \"eleme\", \"501\"],[\"tai\", \"159\", \"117797\", \"sakpenwa\", \"501\"],[\"gokana\", \"126\", \"228828\", \"kpor\", \"501\"],[\"khana\", \"560\", \"294217\", \"bori\", \"502\"],[\"oyigbo\", \"248\", \"122687\", \"afam\", \"502\"],[\"opobo / nkoro\", \"130\", \"151511\", \"opobo town\", \"503\"],[\"andoni\", \"233\", \"211009\", \"ngo\", \"503\"],[\"bonny\", \"642\", \"215358\", \"bonny\", \"503\"],[\"degema\", \"1011\", \"249773\", \"degema\", \"504\"],[\"asari - toru\", \"113\", \"220100\", \"buguma\", \"504\"],[\"akuku - toru\", \"1443\", \"156006\", \"abonnema\", \"504\"],[\"abua / odual\", \"704\", \"282988\", \"abua\", \"510\"],[\"ahoada west\", \"403\", \"249425\", \"akinima\", \"510\"],[\"ahoada east\", \"341\", \"166747\", \"ahoada\", \"510\"],[\"ogba / egbema / ndoni\", \"969\", \"284010\", \"omuku\", \"510\"],[\"emohua\", \"831\", \"201901\", \"emohua\", \"511\"],[\"ikwerre\", \"655\", \"189726\", \"isiokpo\", \"511\"],[\"etche\", \"805\", \"249454\", \"okehi\", \"512\"]]\nQuestion = Is it true that the administrative capital of lga name akuku - toru is abua?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    lga_names = get_column_by_name(table_data, \"lga name\")\n    administrative_capitals = get_column_by_name(table_data, \"administrative capital\")\n    for lga_name, administrative_capital in zip(lga_names, administrative_capitals):\n        if lga_name.lower() == \"akuku - toru\":\n            answer = equal_to(administrative_capital, \"abua\")\n            break \n    return answer\n\n### END"}
{"id": "a9ecf46d-2624-4337-b2d3-653eba3c3abb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = strikeout\ntable_data = [[\"pitcher\", \"strikeouts\", \"season\", \"team\", \"league\", \"overall rank\"],[\"matt kilroy\", \"513\", \"1886\", \"baltimore orioles\", \"aa\", \"1\"],[\"toad ramsey\", \"499\", \"1886\", \"louisville colonels\", \"aa\", \"2\"],[\"dupee shaw\", \"451\", \"1884\", \"detroit wolverines / boston reds\", \"nl / ua\", \"4\"],[\"old hoss radbourn\", \"441\", \"1884\", \"providence grays\", \"nl\", \"5\"],[\"charlie buffington\", \"417\", \"1884\", \"boston beaneaters\", \"nl\", \"6\"],[\"guy hecker\", \"385\", \"1884\", \"louisville eclipse\", \"aa\", \"7\"],[\"nolan ryan\", \"383\", \"1973\", \"california angels\", \"al\", \"8\"],[\"sandy koufax\", \"382\", \"1965\", \"los angeles dodgers\", \"nl\", \"9\"]]\nQuestion = Is it true that dupee shaw has 451 strikeouts in the nl / ua league?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    pitchers = get_column_by_name(table_data, \"pitcher\")\n    strikeouts = get_column_by_name(table_data, \"strikeouts\")\n    leagues = get_column_by_name(table_data, \"league\")\n    for pitcher, strikeout, league in zip(pitchers, strikeouts, leagues):\n        if pitcher.lower() == \"dupee shaw\" and league.lower() == \"nl / ua\":\n            answer = equal_to(strikeout, \"451\")\n            break \n    return answer\n\n### END"}
{"id": "93d9458c-2b5d-47bb-b676-70d425dd5227", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of venezuelan submissions for the academy award for best foreign language film\ntable_data = [[\"year (ceremony)\",\"original title\",\"film title used in nomination\",\"director\",\"result\"],[\"1978 (50th)\",\"el pez que fuma\",\"el pez que fuma\",\"román chalbaud\",\"not nominated\"],[\"1984 (57th)\",\"la casa de agua\",\"the house of water\",\"jacobo penzo\",\"not nominated\"],[\"1985 (58th)\",\"oriana\",\"oriana\",\"fina torres\",\"not nominated\"],[\"1991 (64th)\",\"jericó\",\"jericho\",\"luis alberto lamata\",\"not nominated\"],[\"1994 (67th)\",\"golpes a mi puerta\",\"knocks at my door\",\"alejandro saderman\",\"not nominated\"],[\"1995 (68th)\",\"sicario\",\"sicario\",\"josé ramón novoa\",\"not nominated\"],[\"1997 (70th)\",\"una vida y dos mandados\",\"one life and two trails\",\"alberto aruelo\",\"not nominated\"],[\"1998 (71st)\",\"rizo\",\"loop\",\"julio sosa\",\"not nominated\"],[\"1999 (72nd)\",\"huelepega : ley de la calle\",\"huelepega\",\"elia schneider\",\"not nominated\"],[\"2000 (73rd)\",\"oro diablo\",\"oro diablo\",\"josé ramón novoa\",\"not nominated\"],[\"2001 (74th)\",\"una casa con vista al mar\",\"a house with a view of the sea\",\"alberto aruelo\",\"not nominated\"],[\"2002 (75th)\",\"la pluma del arcángel\",\"the archangel 's feather\",\"luis manzo\",\"not nominated\"],[\"2003 (76th)\",\"sangrador\",\"sangrador\",\"leonardo henriquez\",\"not nominated\"],[\"2004 (77th)\",\"punto y raya\",\"punto y raya\",\"elia schneider\",\"not nominated\"],[\"2005 (78th)\",\"1888: el extraordinario viaje de santa isabel\",\"1888: the extraordinary voyage of the santa isabel\",\"alfredo anzola\",\"disqualified\"],[\"2006 (79th)\",\"maroa : una niña de la calle\",\"maroa\",\"solveig hoogesteijn\",\"not nominated\"],[\"2007 (80th)\",\"postales de leningrado\",\"postcards from leningrad\",\"mariana rondon\",\"not nominated\"],[\"2008 (81st)\",\"el tinte de la fama\",\"the color of fame\",\"alberto bellame\",\"not nominated\"],[\"2009 (82nd)\",\"libertador morales , el justiciero\",\"libertador morales , el justiciero\",\"efterpi charalambidis\",\"not nominated\"],[\"2010 (83rd)\",\"hermano\",\"hermano\",\"marcel rasquin\",\"not nominated\"],[\"2011 (84th)\",\"the rumble of the stones\",\"el rumor de las piedras\",\"alejandro bellame\",\"not nominated\"],[\"2012 (85th)\",\"rock , paper , scissors\",\"piedra , papel o tijera\",\"hernán jabes\",\"not nominated\"],[\"2013 (86th)\",\"breach in the silence\",\"brecha en el silencio\",\"luis rodríguez , andrés rodríguez\",\"tbd\"]]\nQuestion = Is it true that the color of fame was the film title used in nomination in the year (ceremony) of 2008 (81st) and had a result of not nominated?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year (ceremony)\")\n    film_titles = get_column_by_name(table_data, \"film title used in nomination\")\n    results = get_column_by_name(table_data, \"result\")\n    for year, film_title, result in zip(years, film_titles, results):\n        if year == \"2008 (81st)\" and film_title == \"the color of fame\" and result == \"not nominated\":\n            answer = True\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "0145514d-5f38-4b89-8f85-4624fbdc106b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = media in fargo - moorhead\ntable_data = [[\"frequency\", \"call sign\", \"name\", \"format\", \"owner\"],[\"88.7 fm\", \"kfbn\", \"heaven 88.7\", \"christian\", \"fargo baptist church\"],[\"90.3 fm\", \"kccd\", \"minnesota public radio / npr\", \"news / talk\", \"minnesota public radio\"],[\"91.1 fm\", \"kccm\", \"minnesota public radio / npr\", \"classical\", \"minnesota public radio\"],[\"91.9 fm\", \"kdsu\", \"prairie public / npr\", \"adult album alternative\", \"north dakota state university\"],[\"92.7 fm\", \"kzdr\", \"92.7 the bone\", \"active rock\", \"mediactive\"],[\"93.7 fm\", \"wday - fm\", \"y94\", \"top 40 (chr)\", \"radio fargo - moorhead\"],[\"95.1 fm\", \"kbvb\", \"bob 95 fm\", \"country\", \"radio fargo - moorhead\"],[\"95.9 fm\", \"kxbq - lp\", \"dive 95.9\", \"alternative\", \"women 's care clinic\"],[\"96.3 fm\", \"knds - lp\", \"thunderradio radio free fargo\", \"college\", \"north dakota state university\"],[\"97.9 fm\", \"kfnw - fm\", \"life 97.9\", \"contemporary christian music\", \"northwestern college\"],[\"98.7 fm\", \"klta\", \"big 98.7\", \"adult chr\", \"triad broadcasting\"],[\"99.3 fm\", \"k257ep\", \"k - love\", \"contemporary christian music ( kklq translator )\", \"educational media foundation\"],[\"99.9 fm\", \"kvox - fm\", \"froggy 99.9\", \"country\", \"triad broadcasting\"],[\"100.7 fm\", \"kklq\", \"k - love\", \"contemporary christian music\", \"educational media foundation\"],[\"101.9 fm\", \"krwk\", \"101.9 talk fm\", \"talk\", \"radio fargo - moorhead\"],[\"103.3 fm\", \"kzcr\", \"z 103.3\", \"rock / aaa\", \"jerry papenfuss\"],[\"103.9 fm\", \"kvmi\", \"103.9 the truck\", \"country\", \"vision media incorporated\"],[\"104.1 fm\", \"kbot\", \"104.1 the wave\", \"adult contemporary\", \"leighton broadcasting\"],[\"104.7 fm\", \"kmjo\", \"104.7 popster fm\", \"adult hits\", \"radio fargo - moorhead\"],[\"105.1 fm\", \"kqwb\", \"q 105.1\", \"active rock\", \"triad broadcasting\"],[\"106.1 fm\", \"kqlx - fm\", \"thunder 106.1\", \"classic country\", \"great plains integrated marketing\"],[\"106.5 fm\", \"krjb\", \"krjb 106.5\", \"country\", \"r&j broadcasting\"],[\"106.9 fm\", \"kegk\", \"eagle 106.9\", \"classic hits\", \"great plains integrated marketing\"],[\"107.9 fm\", \"kpfx\", \"107.9 the fox\", \"classic rock\", \"triad broadcasting\"]]\nQuestion = Is it true that the call sign for the classic country music station is kqlx - fm?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    call_signs = get_column_by_name(table_data, \"call sign\")\n    formats = get_column_by_name(table_data, \"format\")\n    answer = False\n    for call_sign, format in zip(call_signs, formats):\n        if \"classic country\" in format.lower() and \"kqlx - fm\" in call_sign.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "8213de37-ef39-4aa8-b185-0c4173bcee21", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"\", \"original title\", \"directed by\", \"written by\", \"original airdate\", \"prod code\", \"viewers\"],[\"1 - 1\", \"tracy returns\", \"susan tully\", \"elly brewer\", \"8 july 2002\", \"1.1\", \"267000\"],[\"1 - 2\", \"dares\", \"david skynner\", \"elly brewer\", \"15 july 2002\", \"1.2\", \"363000\"],[\"1 - 3\", \"sneaking in ben\", \"susan tully\", \"andy walker\", \"22 july 2002\", \"1.3\", \"499000\"],[\"1 - 4\", \"cam 's first visit\", \"susan tully\", \"elly brewer\", \"29 july 2002\", \"1.4\", \"233000\"],[\"1 - 5\", \"child of the week\", \"susan tully\", \"elly brewer\", \"29 july 2002\", \"1.5\", \"278000\"],[\"1 - 6\", \"the truth is revealed\", \"susan tully\", \"carol russell\", \"5 august 2002\", \"1.6\", \"315000\"],[\"1 - 7\", \"never ever wanna see him again\", \"susan tully\", \"mary morris\", \"5 august 2002\", \"1.7\", \"221000\"],[\"1 - 8\", \"1000 words about tracy\", \"susan tully\", \"arnold evans\", \"12 august 2002\", \"1.8\", \"261000\"],[\"1 - 9\", \"bad peter\", \"susan tully\", \"mary morris\", \"12 august 2002\", \"1.9\", \"242000\"],[\"1 - 10\", \"cam 's place\", \"susan tully\", \"andy walker\", \"19 august 2002\", \"1.10\", \"423000\"],[\"1 - 11\", \"dumping ground virus\", \"david skynner\", \"elly brewer\", \"19 august 2002\", \"1.11\", \"444000\"],[\"1 - 12\", \"justine 's tv\", \"susan tully\", \"elly brewer\", \"26 august 2002\", \"1.12\", \"417000\"],[\"1 - 13\", \"tracy and cam row\", \"susan tully\", \"elly brewer\", \"26 august 2002\", \"1.13\", \"526000\"],[\"1 - 14\", \"sleepover\", \"david skynner\", \"mary morris\", \"3 september 2002\", \"1.14\", \"658000\"],[\"1 - 15\", \"parent 's evening\", \"susan tully\", \"laura summers\", \"3 september 2002\", \"1.15\", \"215000\"],[\"1 - 16\", \"the postcard\", \"susan tully\", \"roger griffiths\", \"10 september 2002\", \"1.16\", \"215000\"],[\"1 - 18\", \"helpful tracy\", \"david skynner\", \"mary morris\", \"10 september 2002\", \"1.17\", \"145000\"],[\"1 - 19\", \"friend\", \"david skynner\", \"laura summers\", \"17 september 2002\", \"1.19\", \"815000\"],[\"1 - 20\", \"treasure hunt\", \"david skynner\", \"laura summers\", \"24 september 2002\", \"1.20\", \"234000\"],[\"1 - 21\", \"romance\", \"david skynner\", \"elly brewer\", \"24 september 2002\", \"1.21\", \"415000\"],[\"1 - 22\", \"temporary care worker\", \"david skynner\", \"othniel smith\", \"1 october 2002\", \"1.22\", \"615000\"],[\"1 - 23\", \"cut the weed\", \"david skynner\", \"graham alborough\", \"1 october 2002\", \"1.23\", \"522000\"],[\"1 - 24\", \"need armbands\", \"david skynner\", \"laura summers\", \"8 october 2002\", \"1.24\", \"195000\"],[\"1 - 25\", \"miss you\", \"david skynner\", \"mary morris\", \"8 october 2002\", \"1.25\", \"395000\"]]\nQuestion = Is it true that the production code 1.16 is for the postcard?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    prod_codes = get_column_by_name(table_data, \"prod code\")\n    titles = get_column_by_name(table_data, \"original title\")\n    for prod_code, title in zip(prod_codes, titles):\n        if title.lower() == \"the postcard\":\n            answer = equal_to(prod_code, \"1.16\")\n            break \n    return answer\n\n### END"}
{"id": "e528bcef-9c2a-4fbb-afe6-f3a494418ef6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the howie carr show\ntable_data = [[\"calls\",\"frequency\",\"branding\",\"format\",\"timeslot\",\"group owner\"],[\"wgan\",\"560 khz\",\"news radio 560 wgan\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"whyn\",\"560 khz\",\"news / talk 560 whyn\",\"news / talk\",\"live 3p - 7p\",\"clear channel communications\"],[\"wvmt\",\"620 khz\",\"news / talk 620 wvmt\",\"news / talk\",\"live 3p - 7p\",\"sison broadcasting\"],[\"wrko\",\"680 khz\",\"am 680 wrko\",\"news / talk\",\"live 3p - 7p\",\"entercom\"],[\"wcrn\",\"830 khz\",\"wcrn 830 true talk\",\"news / talk\",\"live 3p - 7p\",\"carter broadcasting\"],[\"wkbk\",\"1290 khz\",\"1290 wkbk w281au 104.1\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"wegp\",\"1390 khz\",\"wegp 1390 am - the talk of the county\",\"news / talk\",\"live 3p - 6p\",\"decelles / media , inc\"],[\"wxtk\",\"95.1 mhz\",\"news radio 95 wxtk\",\"news / talk\",\"live 3p - 7p\",\"qantam of cape cod , llc\"],[\"wntk - fm\",\"99.7 mhz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wuvr\",\"1490 khz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wvom - fm / wvqm\",\"103.9 / 101.3 mhz\",\"the voice of maine\",\"news / talk\",\"live 3p - 7p\",\"blueberry broadcasting\"]]\nQuestion = Is it true that wkbk has a frequency of 1290 khz?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    calls = get_column_by_name(table_data, \"calls\")\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    for call, frequency in zip(calls, frequencies):\n        if call.lower() == \"wkbk\":\n            answer = equal_to(frequency, \"1290 khz\")\n            break \n    return answer\n\n### END"}
{"id": "fc1033be-3fc1-4569-b93f-6231c88fedda", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of leverage episodes\ntable_data = [[\"series\",\"season\",\"title\",\"directed by\",\"written by\",\"original air date\",\"us viewers (in millions)\"],[\"14\", \"1\", \"the beantown bailout job\", \"dean devlin\", \"john rogers\", \"july 15 , 2009\", \"3.89\"],[\"15\", \"2\", \"the tap - out job\", \"marc roskin\", \"albert kim\", \"july 22 , 2009\", \"3.05\"],[\"16\", \"3\", \"the order 23 job\", \"rod hardy\", \"chris downey\", \"july 29 , 2009\", \"3.68\"],[\"17\", \"4\", \"the fairy godparents job\", \"jonathan frakes\", \"amy berg\", \"august 5 , 2009\", \"3.69\"],[\"18\", \"5\", \"the three days of the hunter job\", \"marc roskin\", \"melissa glenn & jessica rieder\", \"august 12 , 2009\", \"3.16\"],[\"19\", \"6\", \"the top hat job\", \"peter o'fallon\", \"m scott veach & christine boylan\", \"august 19 , 2009\", \"3.43\"],[\"20\", \"7\", \"the two live crew job\", \"dean devlin\", \"amy berg & john rogers\", \"august 26 , 2009\", \"3.73\"],[\"21\", \"8\", \"the ice man job\", \"jeremiah chechik\", \"christine boylan\", \"september 2 , 2009\", \"3.58\"],[\"22\", \"9\", \"the lost heir job\", \"peter winther\", \"chris downey\", \"september 9 , 2009\", \"3.37\"],[\"23\", \"10\", \"the runway job\", \"mark roskin\", \"albert kim\", \"january 13 , 2010\", \"3.69\"],[\"24\", \"11\", \"the bottle job\", \"jonathan frakes\", \"christine boylan\", \"january 20 , 2010\", \"3.00\"],[\"25\", \"12\", \"the zanzibar marketplace job\", \"jeremiah chechik\", \"melissa glenn & jessica rieder\", \"january 27 , 2010\", \"3.02\"],[\"26\", \"13\", \"the future job\", \"mark roskin\", \"amy berg & chris downey\", \"february 3 , 2010\", \"2.91\"],[\"27\", \"14\", \"the three strikes job\", \"dean devlin\", \"john rogers\", \"february 10 , 2010\", \"2.8\"]]\nQuestion = Is it true that the runway job was in season 8 , series 21?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    series = get_column_by_name(table_data, \"series\")\n    seasons = get_column_by_name(table_data, \"season\")\n    titles = get_column_by_name(table_data, \"title\")\n    for serie, season, title in zip(series, seasons, titles):\n        if title.lower() == \"the runway job\":\n            answer = equal_to(serie, \"21\") and equal_to(season, \"8\")\n            break \n    return answer\n\n### END"}
{"id": "78e12cce-576c-4b04-abb3-20dbf8090193", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 seattle supersonics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"47\", \"february 2\", \"new york\", \"w 86 - 85 (ot)\", \"kevin durant (21)\", \"nick collison (12)\", \"earl watson (8)\", \"keyarena 12783\", \"12 - 35\"],[\"48\", \"february 4\", \"chicago\", \"l 108 - 118 (ot)\", \"wally szczerbiak (21)\", \"nick collison (9)\", \"earl watson (8)\", \"keyarena 10935\", \"12 - 36\"],[\"49\", \"february 6\", \"sacramento\", \"w 105 - 92 (ot)\", \"earl watson (23)\", \"earl watson chris wilcox (10)\", \"earl watson (10)\", \"arco arena 13136\", \"13 - 36\"],[\"50\", \"february 8\", \"phoenix\", \"l 99 - 103 (ot)\", \"chris wilcox (22)\", \"chris wilcox (15)\", \"earl watson (5)\", \"us airways center 18422\", \"13 - 37\"],[\"51\", \"february 13\", \"utah\", \"l 93 - 112 (ot)\", \"kevin durant (19)\", \"kurt thomas (13)\", \"earl watson (14)\", \"keyarena 10618\", \"13 - 38\"],[\"52\", \"february 19\", \"memphis\", \"w 108 - 101 (ot)\", \"earl watson (26)\", \"nick collison jeff green (9)\", \"earl watson (9)\", \"keyarena 11391\", \"14 - 38\"],[\"53\", \"february 21\", \"portland\", \"l 88 - 92 (ot)\", \"kevin durant (20)\", \"nick collison (14)\", \"earl watson (9)\", \"rose garden 20168\", \"14 - 39\"],[\"54\", \"february 22\", \"portland\", \"w 99 - 87 (ot)\", \"kevin durant (17)\", \"jeff green (9)\", \"earl watson (4)\", \"keyarena 16640\", \"15 - 39\"],[\"55\", \"february 24\", \"l a lakers\", \"l 91 - 111 (ot)\", \"mickaël gelabale (21)\", \"johan petro (10)\", \"earl watson (8)\", \"keyarena 17072\", \"15 - 40\"],[\"56\", \"february 26\", \"golden state\", \"l 99 - 105 (ot)\", \"kevin durant jeff green (21)\", \"nick collison (13)\", \"luke ridnour (15)\", \"oracle arena 19412\", \"15 - 41\"],[\"57\", \"february 27\", \"denver\", \"l 96 - 138 (ot)\", \"kevin durant mickaël gelabale (16)\", \"johan petro (8)\", \"mickaël gelabale (6)\", \"keyarena 13627\", \"15 - 42\"]]\nQuestion = Is it true that the team playing on february 8 was denver?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    teams = get_column_by_name(table_data, \"team\")\n    answer = False\n    for date, team in zip(dates, teams):\n        if \"february 8\" in date.lower():\n            answer = team.lower() == \"denver\"\n            break\n    return answer\n\n### END"}
{"id": "aaf7c54c-57b6-44db-921a-7299421de686", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = papal conclave , 1314 - 16\ntable_data = [[\"elector\",\"nationality\",\"faction\",\"elevated\",\"elevator\"],[\"nicolò albertini , op\",\"prato\",\"italian\",\"1303 , december 18\",\"benedict xi\"],[\"bérenger frédol , seniore\",\"french\",\"french\",\"1305 , december 15\",\"clement v\"],[\"arnaud de falguières\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"],[\"guillaume de mandagot , crsa\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"arnaud d'aux\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"jacques d'euse\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"nicolas de fréauville , op\",\"french\",\"french\",\"1305 , december 15\",\"clement v\"],[\"arnaud nouvel , ocist\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"],[\"bérenguer frédol , iuniore\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"michel du bec - crespin\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"guillaume teste\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"guillaume pierre godin , op\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"vital du four , ofm\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"raymond , osb\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"giacomo colonna\",\"roman\",\"italian\",\"1278 , march 12\",\"nicholas iii\"],[\"napoleone orsini\",\"roman\",\"italian\",\"1288 , may 16\",\"nicholas iv\"],[\"pietro colonna\",\"roman\",\"italian\",\"1288 , may 16\",\"nicholas iv\"],[\"guglielmo de longhi\",\"bergamo\",\"italian\",\"1294 , september 18\",\"celestine v\"],[\"giacomo gaetani stefaneschi\",\"rome\",\"italian\",\"1295 , december 17\",\"boniface viii\"],[\"francesco caetani\",\"rome\",\"italian\",\"1295 , december 17\",\"boniface viii\"],[\"luc fieschi\",\"genoese\",\"italian\",\"1300 , march 2\",\"boniface viii\"],[\"arnaud de pellegrue\",\"french\",\"gascon\",\"1305 , december 15\",\"clement v\"],[\"raymond guillaume des forges\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"],[\"bernard de garves\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"]]\nQuestion = Is it true that nicolò albertini , op , was the italian prato elector?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    electors = get_column_by_name(table_data, \"elector\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    factions = get_column_by_name(table_data, \"faction\")\n    answer = False\n    for elector, nationality, faction in zip(electors, nationalities, factions):\n        if elector.lower() == \"nicolò albertini , op\" and nationality.lower() == \"prato\" and faction.lower() == \"italian\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "f1308ef3-befa-4ee5-8b82-33a0242e1db3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1970 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"footscray\", \"10.23 (83)\", \"north melbourne\", \"11.15 (81)\", \"western oval\", \"13118\", \"8 august 1970\"],[\"essendon\", \"12.16 (88)\", \"fitzroy\", \"14.10 (94)\", \"windy hill\", \"13572\", \"8 august 1970\"],[\"richmond\", \"9.10 (64)\", \"melbourne\", \"18.10 (118)\", \"mcg\", \"25158\", \"8 august 1970\"],[\"south melbourne\", \"16.7 (103)\", \"hawthorn\", \"13.8 (86)\", \"lake oval\", \"17437\", \"8 august 1970\"],[\"collingwood\", \"13.23 (101)\", \"carlton\", \"2.12 (24)\", \"victoria park\", \"39959\", \"8 august 1970\"],[\"st kilda\", \"12.16 (88)\", \"geelong\", \"5.7 (37)\", \"vfl park\", \"29667\", \"8 august 1970\"]]\nQuestion = Is it true that st kilda scored 12.16 (88) as the home team?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    for home_team, home_team_score in zip(home_teams, home_team_scores):\n        if home_team.lower() == \"st kilda\":\n            answer = equal_to(home_team_score, \"12.16 (88)\")\n            break \n    return answer\n\n### END"}
{"id": "68486d27-dbfc-4157-b123-85484cab7c34", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = jewelpet universe\ntable_data = [[\"name\",\"sweet\",\"species\",\"gender\",\"attribute\",\"birthday\",\"media debut\",\"voice actor\"],[\"sakuran ( さくらん )\",\"sakuramochi\",\"brown bear\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"rina hidaka\"],[\"melorina ( メロリーナ )\",\"melonpan\",\"poodle\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"asuka ōgame (sweets dance princess)\"],[\"eclan ( エクレン )\",\"eclair\",\"rex rabbit\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"chiwa saito (sweets dance princess)\"],[\"macaronia ( マカロニア )\",\"macaron\",\"holland lop\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"miyu matsuki (sweets dance princess)\"],[\"donadona ( ドナドナ )\",\"donut\",\"golden hamster\",\"male\",\"magical red\",\"unknown\",\"jps ep 38\",\"saki fujita (sweets dance princess)\"],[\"honey ( ハニー )\",\"honey waffles\",\"flying squirrel\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"megumi mukai (sweets dance princess)\"],[\"purinki ( プリンキー )\",\"crème caramel\",\"common squirrel monkey\",\"female\",\"magical green\",\"unknown\",\"jps ep 38\",\"mana matsufuji (sweets dance princess)\"],[\"chocolat ( ショコラ )\",\"chocolate ice cream\",\"asian black bear\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"marie miyake (sweets dance princess)\"],[\"maco ( マコ )\",\"macaron\",\"roborovski hamster\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"mako\"],[\"kaco ( カコ )\",\"macaron\",\"roborovski hamster\",\"male\",\"magical green\",\"unknown\",\"jps ep 38\",\"asuka ōgame\"],[\"roco ( ロコ )\",\"macaron\",\"roborovski hamster\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"marie miyake\"],[\"coron ( コロン )\",\"macaron\",\"roborovski hamster\",\"male\",\"magical red\",\"unknown\",\"jps ep 38\",\"saki fujita\"]]\nQuestion = Is it true that asian black bear of male gender has voice actor mako?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    species = get_column_by_name(table_data, \"species\")\n    genders = get_column_by_name(table_data, \"gender\")\n    voice_actors = get_column_by_name(table_data, \"voice actor\")\n    answer = False\n    for specie, gender, voice_actor in zip(species, genders, voice_actors):\n        if specie.lower() == \"asian black bear\" and gender.lower() == \"male\" and voice_actor.lower() == \"mako\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "5e9d6818-c203-47cf-a383-efeb81006e44", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of leverage episodes\ntable_data = [[\"series\",\"season\",\"title\",\"directed by\",\"written by\",\"original air date\",\"us viewers (in millions)\"],[\"14\",\"1\",\"the beantown bailout job\",\"dean devlin\",\"john rogers\",\"july 15 , 2009\",\"3.89\"],[\"15\",\"2\",\"the tap - out job\",\"marc roskin\",\"albert kim\",\"july 22 , 2009\",\"3.05\"],[\"16\",\"3\",\"the order 23 job\",\"rod hardy\",\"chris downey\",\"july 29 , 2009\",\"3.68\"],[\"17\",\"4\",\"the fairy godparents job\",\"jonathan frakes\",\"amy berg\",\"august 5 , 2009\",\"3.69\"],[\"18\",\"5\",\"the three days of the hunter job\",\"marc roskin\",\"melissa glenn & jessica rieder\",\"august 12 , 2009\",\"3.16\"],[\"19\",\"6\",\"the top hat job\",\"peter o'fallon\",\"m scott veach & christine boylan\",\"august 19 , 2009\",\"3.43\"],[\"20\",\"7\",\"the two live crew job\",\"dean devlin\",\"amy berg & john rogers\",\"august 26 , 2009\",\"3.73\"],[\"21\",\"8\",\"the ice man job\",\"jeremiah chechik\",\"christine boylan\",\"september 2 , 2009\",\"3.58\"],[\"22\",\"9\",\"the lost heir job\",\"peter winther\",\"chris downey\",\"september 9 , 2009\",\"3.37\"],[\"23\",\"10\",\"the runway job\",\"mark roskin\",\"albert kim\",\"january 13 , 2010\",\"3.69\"],[\"24\",\"11\",\"the bottle job\",\"jonathan frakes\",\"christine boylan\",\"january 20 , 2010\",\"3.00\"],[\"25\",\"12\",\"the zanzibar marketplace job\",\"jeremiah chechik\",\"melissa glenn & jessica rieder\",\"january 27 , 2010\",\"3.02\"],[\"26\",\"13\",\"the future job\",\"mark roskin\",\"amy berg & chris downey\",\"february 3 , 2010\",\"2.91\"],[\"27\",\"14\",\"the three strikes job\",\"dean devlin\",\"john rogers\",\"february 10 , 2010\",\"2.8\"]]\nQuestion = Is it true that season 5 had an air date of august 19.2009?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    air_dates = get_column_by_name(table_data, \"original air date\")\n    answer = False\n    for season, air_date in zip(seasons, air_dates):\n        if season == \"5\" and \"august 19 , 2009\" in air_date.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "45f3cb76-d085-4abf-b68a-4a31efe6a277", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = atlanta falcons draft history\ntable_data = [[\"round\", \"pick\", \"overall\", \"name\", \"position\"],[\"1\", \"9\", \"9\", \"bubba bean\", \"running back\"],[\"2\", \"8\", \"36\", \"sonny collins\", \"running back\"],[\"3\", \"11\", \"71\", \"dave scott\", \"guard\"],[\"4\", \"10\", \"102\", \"walt brett\", \"defensive end\"],[\"6\", \"13\", \"169\", \"stan varner\", \"defensive tackle\"],[\"7\", \"11\", \"193\", \"karl farmer\", \"wide receiver\"],[\"8\", \"10\", \"219\", \"frank reed\", \"washington\"],[\"9\", \"9\", \"246\", \"phil mckinnely\", \"offensive tackle\"],[\"11\", \"11\", \"302\", \"chuck brislin\", \"offensive tackle\"],[\"12\", \"10\", \"329\", \"pat bolton\", \"kicker\"],[\"13\", \"9\", \"356\", \"mike williams\", \"offensive tackle\"],[\"14\", \"8\", \"383\", \"mark husfloen\", \"defensive end\"],[\"15\", \"11\", \"414\", \"ron olson\", \"defensive back\"],[\"16\", \"10\", \"441\", \"pat curto\", \"linebacker\"],[\"17\", \"9\", \"468\", \"tony green\", \"defensive back\"]]\nQuestion = Is it true that 11 is the lowest round with a pick of 11 , a position of offensive tackle and overall more than 414?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    picks = get_column_by_name(table_data, \"pick\")\n    overalls = get_column_by_name(table_data, \"overall\")\n    positions = get_column_by_name(table_data, \"position\")\n    answer = False\n    for round, pick, overall, position in zip(rounds, picks, overalls, positions):\n        if pick == \"11\" and position == \"offensive tackle\" and int(overall) > 414:\n            if not answer or less_than(int(round), int(answer)):\n                answer = round\n    return equal_to(answer, \"11\")\n\n### END"}
{"id": "39b80ad1-fa63-4255-8c6d-686c9ea92b77", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1926 grand prix season\ntable_data = [[\"name\",\"circuit\",\"date\",\"winning drivers\",\"winning constructor\",\"report\"],[\"indianapolis 500\",\"indianapolis\",\"31 may\",\"frank lockhart\",\"miller\",\"report\"],[\"french grand prix\",\"miramas\",\"27 june\",\"jules goux\",\"bugatti\",\"report\"],[\"san sebastián grand prix / european grand prix\",\"lasarte\",\"18 july\",\"jules goux\",\"bugatti\",\"report\"],[\"british grand prix\",\"brooklands\",\"7 august\",\"robert sénéchal louis wagner\",\"delage\",\"report\"],[\"italian grand prix\",\"monza\",\"5 september\",\"louis charavel\",\"bugatti\",\"report\"]]\nQuestion = Is it true that the name for the race in the indianapolis circuit was indianapolis grand prix?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    circuits = get_column_by_name(table_data, \"circuit\")\n    for name, circuit in zip(names, circuits):\n        if circuit.lower() == \"indianapolis\":\n            answer = equal_to(name, \"indianapolis grand prix\")\n            break \n    return answer\n\n### END"}
{"id": "586af640-1c72-4f24-9f7f-1ceebf23b81e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1977 - 78 philadelphia flyers season\ntable_data = [[\"game\", \"october\", \"opponent\", \"score\", \"record\", \"points\"],[\"1\", \"13\", \"chicago black hawks\", \"5 - 1\", \"1 - 0 - 0\", \"2\"],[\"2\", \"15\", \"pittsburgh penguins\", \"8 - 2\", \"2 - 0 - 0\", \"4\"],[\"3\", \"16\", \"st louis blues\", \"7 - 0\", \"3 - 0 - 0\", \"6\"],[\"4\", \"20\", \"pittsburgh penguins\", \"11 - 0\", \"4 - 0 - 0\", \"8\"],[\"5\", \"22\", \"toronto maple leafs\", \"1 - 6\", \"4 - 1 - 0\", \"8\"],[\"6\", \"23\", \"toronto maple leafs\", \"3 - 6\", \"4 - 2 - 0\", \"8\"],[\"7\", \"26\", \"chicago black hawks\", \"2 - 2\", \"4 - 2 - 1\", \"9\"],[\"8\", \"29\", \"st louis blues\", \"7 - 3\", \"5 - 2 - 1\", \"11\"]]\nQuestion = Is it true that the opponent was chicago black hawks on a date after october 20 and ended with a score of 2 - 2?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"october\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    scores = get_column_by_name(table_data, \"score\")\n    for date, opponent, score in zip(dates, opponents, scores):\n        if greater(int(date), 20) and opponent.lower() == \"chicago black hawks\" and equal_to(score, \"2 - 2\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "c52c7a4d-4ef4-43ab-826a-3e789de8258f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = yrjö väisälä\ntable_data = [[\"1391 carelia\", \"1398 donnera\", \"1405 sibelius\", \"1406 komppa\", \"1407 lindelöf\"],[\"1421 esperanto\", \"1424 sundmania\", \"1446 sillanpää\", \"1447 utra\", \"1448 lindbladia\"],[\"1449 virtanen\", \"1450 raimonda\", \"1451 granö\", \"1453 fennia\", \"1454 kalevala\"],[\"1460 haltia\", \"1462 zamenhof\", \"1463 nordenmarkia\", \"1471 tornio\", \"1472 muonio\"],[\"1473 ounas\", \"1477 bonsdorffia\", \"1478 vihuri\", \"1479 inkeri\", \"1480 aunus\"],[\"1483 hakoila\", \"1488 aura\", \"1492 oppolzer\", \"1494 savo\", \"1495 helsinki\"],[\"1496 turku\", \"1497 tampere\", \"1498 lahti\", \"1499 pori\", \"1500 jyväskylä\"],[\"1503 kuopio\", \"1518 rovaniemi\", \"1519 kajaani\", \"1520 imatra\", \"1521 seinäjoki\"],[\"1523 pieksämäki\", \"1524 joensuu\", \"1525 savonlinna\", \"1526 mikkeli\", \"1527 malmquista\"],[\"1529 oterma\", \"1530 rantaseppä\", \"1532 inari\", \"1533 saimaa\", \"1534 näsi\"],[\"1535 päijänne\", \"1536 pielinen\", \"1541 estonia\", \"1542 schalén\", \"1548 palomaa\"],[\"1549 mikko\", \"1551 argelander\", \"1552 bessel\", \"1567 alikoski\", \"1631 kopff\"],[\"1646 rosseland\", \"1656 suomi\", \"1659 punkaharju\", \"1677 tycho brahe\", \"1678 hveen\"],[\"1696 nurmela\", \"1699 honkasalo\", \"1723 klemola\", \"1740 paavo nurmi\", \"1757 porvoo\"],[\"1883 rimito\", \"1928 summa\", \"1929 kollaa\", \"1947 iso - heikkilä\", \"2020 ukko\"],[\"2067 aksnes\", \"2091 sampo\", \"2096 väinö\", \"2194 arpola\", \"2204 lyyli\"],[\"2243 lönnrot\", \"2258 viipuri\", \"2292 seili\", \"2299 hanko\", \"2333 porthan\"],[\"2379 heiskanen\", \"2397 lappajärvi\", \"2454 olaus magnus\", \"2464 nordenskiöld\", \"2479 sodankylä\"],[\"2486 metsähovi\", \"2502 nummela\", \"2512 tavastia\", \"2535 hämeenlinna\", \"2638 gadolin\"],[\"2639 planman\", \"2678 aavasaksa\", \"2679 kittisvaara\", \"2690 ristiina\", \"2715 mielikki\"],[\"2716 tuulikki\", \"2733 hamina\", \"2737 kotka\", \"2750 loviisa\", \"2802 weisell\"],[\"2820 iisalmi\", \"2826 ahti\", \"2885 palva\", \"2898 neuvo\", \"2962 otto\"],[\"2972 niilo\", \"3037 alku\", \"3099 hergenrother\", \"3166 klondike\", \"3212 agricola\"],[\"3223 forsius\", \"3272 tillandz\", \"3281 maupertuis\", \"3522 becker\", \"3606 pohjola\"],[\"3897 louhi\", \"4181 kivi\", \"4266 waltari\", \"4512 sinuhe\", \"5073 junttura\"]]\nQuestion = Is it true that comet 1523 pieksämäki passed the 1391 carelia asteroid after the 1407 lindelöf neared 1527 malmquist?\n\n### RESPONSE:\ndef solution(table_data):\n    return False\n\n### END"}
{"id": "3ac04d50-53ad-4690-b8bf-95a72deab9be", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = peaches & herb\ntable_data = [[\"title\", \"label\", \"year of release\", \"country of release\", \"peaches :\"],[\"for your love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"let 's fall in love\", \"date\", \"1967\", \"usa\", \"francine barker\"],[\"peaches & herb\", \"mca\", \"1977\", \"usa\", \"linda greene\"],[\"2 hot\", \"mvp / polydor\", \"1978\", \"usa\", \"linda greene\"],[\"twice the fire\", \"mvp / polydor\", \"1979\", \"usa\", \"linda greene\"],[\"demasiado candente\", \"mvp / polydor\", \"1979\", \"argentina\", \"linda greene\"],[\"worth the wait\", \"mvp / polydor\", \"1980\", \"usa\", \"linda greene\"],[\"sayin' something\", \"mvp / polydor\", \"1981\", \"usa\", \"linda greene\"],[\"remember\", \"the entertainment co / columbia\", \"1983\", \"usa\", \"linda greene\"],[\"colors of love\", \"imagen\", \"2009\", \"usa\", \"meritxell negre\"]]\nQuestion = Is it true that two times the fire was the only title to be released in argentia?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    countries = get_column_by_name(table_data, \"country of release\")\n    answer = countries.count(\"argentina\") > 1\n    return answer\n\n### END"}
{"id": "36515036-27c3-4a5d-9288-24329d682bda", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = strikeout\ntable_data = [[\"pitcher\", \"strikeouts\", \"season\", \"team\", \"league\", \"overall rank\"],[\"matt kilroy\", \"513\", \"1886\", \"baltimore orioles\", \"aa\", \"1\"],[\"toad ramsey\", \"499\", \"1886\", \"louisville colonels\", \"aa\", \"2\"],[\"dupee shaw\", \"451\", \"1884\", \"detroit wolverines / boston reds\", \"nl / ua\", \"4\"],[\"old hoss radbourn\", \"441\", \"1884\", \"providence grays\", \"nl\", \"5\"],[\"charlie buffington\", \"417\", \"1884\", \"boston beaneaters\", \"nl\", \"6\"],[\"guy hecker\", \"385\", \"1884\", \"louisville eclipse\", \"aa\", \"7\"],[\"nolan ryan\", \"383\", \"1973\", \"california angels\", \"al\", \"8\"],[\"sandy koufax\", \"382\", \"1965\", \"los angeles dodgers\", \"nl\", \"9\"]]\nQuestion = Is it true that in 1884 , old hoss radbourn has 441 strikeouts?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    pitchers = get_column_by_name(table_data, \"pitcher\")\n    strikeouts = get_column_by_name(table_data, \"strikeouts\")\n    seasons = get_column_by_name(table_data, \"season\")\n    for pitcher, strikeout, season in zip(pitchers, strikeouts, seasons):\n        if pitcher.lower() == \"old hoss radbourn\" and season == \"1884\":\n            answer = equal_to(strikeout, \"441\")\n            break \n    return answer\n\n### END"}
{"id": "8f96d35a-7e8f-453c-827a-966fbde53697", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states house of representatives elections , 2010\ntable_data = [[\"district\", \"incumbent\", \"party\", \"first elected\", \"result\", \"candidates\"],[\"pennsylvania 1\", \"bob brady\", \"democratic\", \"1998\", \"re - elected\", \"bob brady (d) unopposed\"],[\"pennsylvania 2\", \"chaka fattah\", \"democratic\", \"1994\", \"re - elected\", \"chaka fattah (d) 89.3% rick hellberg (r) 10.7%\"],[\"pennsylvania 3\", \"kathy dahlkemper\", \"democratic\", \"2008\", \"lost re - election republican gain\", \"mike kelly (r) 55.7% kathy dahlkemper (d) 44.3%\"],[\"pennsylvania 4\", \"jason altmire\", \"democratic\", \"2006\", \"re - elected\", \"jason altmire (d) 50.8% keith rothfuss (r) 49.2%\"],[\"pennsylvania 6\", \"jim gerlach\", \"republican\", \"2002\", \"re - elected\", \"jim gerlach (r) 57.1% manan trivedi (d) 42.9%\"],[\"pennsylvania 9\", \"bill shuster\", \"republican\", \"2001\", \"re - elected\", \"bill shuster (r) 73.1% tom conners (d) 26.9%\"],[\"pennsylvania 10\", \"chris carney\", \"democratic\", \"2006\", \"lost re - election republican gain\", \"tom marino (r) 55.2% chris carney (d) 44.8%\"],[\"pennsylvania 11\", \"paul kanjorski\", \"democratic\", \"1984\", \"lost re - election republican gain\", \"lou barletta (r) 54.7% paul kanjorski (d) 45.3%\"],[\"pennsylvania 12\", \"mark critz\", \"democratic\", \"2010\", \"re - elected\", \"mark critz (d) 50.8% tim burns (r) 49.2%\"],[\"pennsylvania 13\", \"allyson schwartz\", \"democratic\", \"2004\", \"re - elected\", \"allyson schwartz (d) 56.3% dee adcock (r) 43.7%\"],[\"pennsylvania 16\", \"joe pitts\", \"republican\", \"1996\", \"re - elected\", \"joe pitts (r) 65.4% lois herr (d) 34.6%\"],[\"pennsylvania 17\", \"tim holden\", \"democratic\", \"1992\", \"re - elected\", \"tim holden (d) 55.5% dave argall (r) 44.5%\"]]\nQuestion = Is it true that kathy dahlkemper was the incumbent in the pennsylvania 3 district?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    districts = get_column_by_name(table_data, \"district\")\n    incumbents = get_column_by_name(table_data, \"incumbent\")\n    answer = False\n    for district, incumbent in zip(districts, incumbents):\n        if \"pennsylvania 3\" in district.lower() and \"kathy dahlkemper\" in incumbent.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "2a691c75-5597-43a6-ac12-c2a044396db6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of georgian submissions for the academy award for best foreign language film\ntable_data = [[\"year (ceremony)\",\"film title used in nomination\",\"original title\",\"director\",\"main language (s)\",\"result\"],[\"1996 (69th)\",\"a chef in love\",\"შეყვარებული მზარეულის 1001 რეცეპტი\",\"nana dzhordzhadze\",\"french , georgian\",\"nominee\"],[\"1999 (72nd)\",\"here comes the dawn\",\"აქ თენდება\",\"zaza urushadze\",\"georgian\",\"not nominated\"],[\"2000 (73rd)\",\"27 missing kisses\",\"ზაფხული , ანუ 27 მოპარული კოცნა\",\"nana dzhordzhadze\",\"georgian , russian\",\"not nominated\"],[\"2001 (74th)\",\"migration of the angel\",\"ანგელოზის გადაფრენა\",\"nodar managadze\",\"georgian\",\"not nominated\"],[\"2005 (78th)\",\"tbilisi , tbilisi\",\"თბილისი - თბილისი\",\"levan zaqareishvili\",\"georgian\",\"not nominated\"],[\"2007 (80th)\",\"russian triangle\",\"რუსული სამკუთხედი\",\"aleko tsabadze\",\"russian\",\"not nominated\"],[\"2008 (81st)\",\"mediator\",\"მედიატორი\",\"dito tsintsadze\",\"english , german , russian\",\"not nominated\"],[\"2009 (82nd)\",\"the other bank\",\"გაღმა ნაპირი\",\"george ovashvili\",\"georgian , abkhaz , russian\",\"not nominated\"],[\"2010 (83rd)\",\"street days\",\"ქუჩის დღეები\",\"levan koguashvili\",\"georgian\",\"not nominated\"],[\"2011 (84th)\",\"chantrapas\",\"შანტრაპა\",\"otar iosseliani\",\"french , georgian\",\"not nominated\"],[\"2012 (85th)\",\"keep smiling\",\"გაიღიმეთ\",\"rusudan chkonia\",\"georgian\",\"not nominated\"]]\nQuestion = Is it true that 27 missing kisses was a film title used in nomination one year?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_film_title = get_column_by_name(table_data, \"film title used in nomination\")\n    answer = \"27 missing kisses\" in column_film_title\n    return answer\n\n### END"}
{"id": "66838af9-7b1a-4591-a348-c740ffc4d268", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2002 - 03 boston celtics season\ntable_data = [[\"game\", \"date\", \"opponent\", \"score\", \"location\", \"record\"],[\"47\", \"february 1\", \"indiana pacers\", \"l 100 - 109\", \"conseco fieldhouse\", \"26 - 21\"],[\"48\", \"february 3\", \"new orleans hornets\", \"l 96 - 103\", \"new orleans arena\", \"26 - 22\"],[\"49\", \"february 5\", \"seattle supersonics\", \"w 114 - 74\", \"fleetcenter\", \"27 - 22\"],[\"50\", \"february 11\", \"seattle supersonics\", \"w 82 - 76\", \"keyarena at seattle center\", \"28 - 22\"],[\"51\", \"february 13\", \"portland trail blazers\", \"w 100 - 92\", \"rose garden\", \"29 - 22\"],[\"52\", \"february 15\", \"los angeles clippers\", \"w 92 - 84\", \"staples center\", \"30 - 22\"],[\"53\", \"february 16\", \"phoenix suns\", \"l 92 - 102\", \"america west arena\", \"30 - 23\"],[\"54\", \"february 18\", \"golden state warriors\", \"w 125 - 117\", \"the arena in oakland\", \"31 - 23\"],[\"55\", \"february 20\", \"sacramento kings\", \"l 83 - 105\", \"arco arena\", \"31 - 24\"],[\"56\", \"february 24\", \"houston rockets\", \"l 95 - 101 (ot)\", \"fleetcenter\", \"31 - 25\"],[\"57\", \"february 26\", \"indiana pacers\", \"w 71 - 69\", \"fleetcenter\", \"32 - 25\"],[\"58\", \"february 28\", \"toronto raptors\", \"w 90 - 85\", \"fleetcenter\", \"33 - 25\"]]\nQuestion = Is it true that the 82 - 76 win was at key arena at seattle center?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    scores = get_column_by_name(table_data, \"score\")\n    locations = get_column_by_name(table_data, \"location\")\n    for score, location in zip(scores, locations):\n        if \"w 82 - 76\" in score.lower():\n            answer = equal_to(location, \"keyarena at seattle center\")\n            break \n    return answer\n\n### END"}
{"id": "12806ea3-8cdf-4531-a4ca-8e767f1854de", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = south carolina gamecocks men 's soccer\ntable_data = [[\"rank\", \"player\", \"goals\", \"assists\", \"points\", \"years\"],[\"1\", \"doug allison\", \"63\", \"32\", \"158\", \"1984 - 87\"],[\"2\", \"chris faklaris\", \"55\", \"14\", \"124\", \"1991 - 94\"],[\"3\", \"clint mathis\", \"53\", \"15\", \"121\", \"1994 - 97\"],[\"4\", \"clark brisson\", \"36\", \"26\", \"98\", \"1987 - 90\"],[\"5\", \"dan ratcliff\", \"37\", \"20\", \"94\", \"1983 - 86\"],[\"6\", \"jordan quinn\", \"37\", \"13\", \"87\", \"1999 - 02\"],[\"7\", \"andrew coggins\", \"33\", \"15\", \"81\", \"1988 - 91\"],[\"8\", \"brian winstead\", \"33\", \"14\", \"80\", \"1978 - 79\"],[\"9\", \"billy baumhoff\", \"22\", \"34\", \"78\", \"1991 - 94\"],[\"9\", \"rob smith\", \"19\", \"40\", \"78\", \"1991 - 94\"],[\"11\", \"john harr\", \"28\", \"20\", \"76\", \"1997 - 99\"],[\"12\", \"arni arnthorsson\", \"22\", \"25\", \"69\", \"1984 - 87\"],[\"13\", \"dave goodchild\", \"28\", \"12\", \"68\", \"1979 - 82\"],[\"14\", \"rubãn tufiã±o\", \"18\", \"30\", \"66\", \"1989 - 92\"],[\"15\", \"joey worthen\", \"25\", \"15\", \"65\", \"1998 - 01\"]]\nQuestion = Is it true that the 6th ranked player had 13 assists?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    assists = get_column_by_name(table_data, \"assists\")\n    for rank, assist in zip(ranks, assists):\n        if rank == \"6\":\n            answer = equal_to(assist, \"13\")\n            break \n    return answer\n\n### END"}
{"id": "999d35a0-ab40-4ec3-a815-153852a330c9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"\", \"date\", \"vs\", \"opponent\", \"score\", \"attendance\", \"record\"],[\"1\", \"january 5 , 1991\", \"at\", \"detroit turbos\", \"8 - 18\", \"6847\", \"loss\"],[\"2\", \"january 11 , 1991\", \"vs\", \"new england blazers\", \"11 - 10\", \"14789\", \"win\"],[\"3\", \"january 19 , 1991\", \"at\", \"new york saints\", \"13 - 19\", \"9081\", \"loss\"],[\"4\", \"january 26 , 1991\", \"vs\", \"new york saints\", \"13 - 8\", \"16282\", \"win\"],[\"5\", \"february 10 , 1991\", \"vs\", \"detroit turbos\", \"12 - 14\", \"16642\", \"loss\"],[\"6\", \"february 22 , 1991\", \"at\", \"new england blazers\", \"11 - 13\", \"7095\", \"loss\"],[\"7\", \"february 28 , 1991\", \"vs\", \"pittsburgh bulls\", \"11 - 9\", \"13712\", \"win\"],[\"8\", \"march 9 , 1991\", \"at\", \"pittsburgh bulls\", \"15 - 7\", \"8589\", \"win\"],[\"9\", \"march 17 , 1991\", \"vs\", \"baltimore thunder\", \"14 - 17\", \"16289\", \"loss\"]]\nQuestion = Is it true that pittsburgh bulls was the opponent when the attendance was exactly 16642?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    for opponent, attendance in zip(opponents, attendances):\n        if equal_to(attendance, \"16642\"):\n            answer = equal_to(opponent.lower(), \"pittsburgh bulls\")\n            break \n    return answer\n\n### END"}
{"id": "826dcfb3-6fdc-4d19-b46c-e3b2ae177d24", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\",\"title\",\"from album\",\"label\",\"label - nr\"],[\"1962\",\"tonight / sinnin' sam\",\"lookin' ahead\",\"pacific jazz\",\"x - 340\"],[\"1962\",\"the young rabbits / song of india\",\"lookin' ahead\",\"pacific jazz\",\"x - 342\"],[\"1962\",\"congolese sermon / weather beat\",\"(only on 45)\",\"pacific jazz\",\"x - 357\"],[\"1963\",\"no name samba / tough talk\",\"tough talk\",\"world pacific\",\"x - 371\"],[\"1963\",\"turkish black / boopie\",\"tough talk\",\"world pacific\",\"x - 388\"],[\"1963\",\"spanish castles / bluesette\",\"jazz waltz (w les mccann)\",\"world pacific\",\"406\"],[\"1964\",\"heat wave / on broadway\",\"heat wave\",\"world pacific\",\"401\"],[\"1964\",\"i remember tomorrow / long john\",\"stretchin' out\",\"world pacific\",\"412\"],[\"1965\",\"tough talk / the thing\",\"the thing\",\"world pacific\",\"77800\"],[\"1965\",\"aqua dulce / soul bourgeoisie\",\"chile con soul\",\"world pacific\",\"77806\"],[\"1966\",\"scratch / uptight\",\"talk that talk\",\"pacific jazz\",\"88125\"],[\"1968\",\"ooga - boo - ga - loo / eleanor rigby\",\"lighthouse '68\",\"pacific jazz\",\"88144\"],[\"1968\",\"hey jude / love and peace\",\"powerhouse\",\"pacific jazz\",\"88146\"],[\"1969\",\"get back / willie and laura mae jones\",\"lighthouse '69\",\"word pacific jazz\",\"88153\"],[\"1970\",\"way back home / jackson\",\"old socks , new shoes\",\"chisa\",\"c - 8010\"]]\nQuestion = Is it true that the album chile con soul was released in 1965 under the label world pacific?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    albums = get_column_by_name(table_data, \"from album\")\n    labels = get_column_by_name(table_data, \"label\")\n    for year, album, label in zip(years, albums, labels):\n        if year == \"1965\" and album.lower() == \"chile con soul\" and label.lower() == \"world pacific\":\n            return True\n    return False\n\n### END"}
{"id": "0c96b125-02eb-42b6-acd3-c8a1d9d843ee", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = livonia cup\ntable_data = [[\"season\", \"winner\", \"score\", \"runner - up\", \"venue\"],[\"2011\", \"fc flora tallinn\", \"2 - 0\", \"skonto fc\", \"skonto hall , riga\"],[\"2008\", \"fk ventspils\", \"2 - 2 aet , 4 - 3 pen\", \"fc levadia tallinn\", \"skonto hall , riga\"],[\"2005\", \"skonto fc\", \"4 - 3\", \"fc levadia tallinn\", \"skonto hall , riga\"],[\"2004\", \"skonto fc\", \"3 - 3 aet , 4 - 3 pen\", \"fc flora tallinn\", \"skonto hall , riga\"],[\"2003\", \"skonto fc\", \"2 - 2 aet , 12 - 11 pen\", \"fc flora tallinn\", \"skonto hall , riga\"]]\nQuestion = Is it true that fc flora tallinn was the runner - up two times before the 2005 season?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    runner_ups = get_column_by_name(table_data, \"runner - up\")\n    count = 0\n    for season, runner_up in zip(seasons, runner_ups):\n        if int(season) < 2005 and runner_up.lower() == \"fc flora tallinn\":\n            count += 1\n    answer = count >= 2\n    return answer\n\n### END"}
{"id": "6366371a-bc8c-4886-bcdc-fa2dd8d8c1fd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of radio stations in tamaulipas\ntable_data = [[\"frequency\", \"callsign\", \"brand\", \"city of license\", \"type\"],[\"580\", \"xehp\", \"la mas prendida\", \"ciudad victoria\", \"norteño\"],[\"640\", \"xetam\", \"la poderosa\", \"santa elena\", \"norteño\"],[\"970\", \"xebj - am\", \"radio 970\", \"ciudad victoria\", \"contemporary\"],[\"1340\", \"xerpv - am\", \"la cotorra\", \"ciudad victoria\", \"norteño\"],[\"1380\", \"xegw\", \"planeta w 1380\", \"ciudad victoria\", \"christian pop\"],[\"1480\", \"xevic\", \"radio tamaulipas\", \"ciudad victoria\", \"state government\"]]\nQuestion = Is it true that the brand la poderosa on frequency 640?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    brands = get_column_by_name(table_data, \"brand\")\n    for frequency, brand in zip(frequencies, brands):\n        if equal_to(frequency, \"640\") and equal_to(brand, \"la poderosa\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "11d5d602-07f4-4a4d-bcd1-df6e8e24d003", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = florida collegiate summer league\ntable_data = [[\"player\",\"fcsl team\",\"years played\",\"year drafted\",\"round\",\"mlb team\"],[\"mike mcclendon\",\"winter park\",\"2006\",\"2006\",\"10th\",\"milwaukee brewers\"],[\"corey brown\",\"orlando shockers\",\"2006\",\"2007\",\"1st\",\"oakland athletics\"],[\"jonathan lucroy\",\"sanford\",\"2005 06\",\"2007\",\"3rd\",\"milwaukee brewers\"],[\"alan farina\",\"orlando shockers\",\"2005\",\"2007\",\"3rd\",\"toronto blue jays\"],[\"jonathan holt\",\"leesburg\",\"2006 - 2007\",\"2007\",\"5th\",\"cleveland indians\"],[\"dee gordon\",\"belleview\",\"2008\",\"2008\",\"4th\",\"los angeles dodgers\"],[\"mycal jones\",\"leesburg\",\"2007 - 2008\",\"2009\",\"4th\",\"atlanta braves\"],[\"kent matthes\",\"winter pines\",\"2008\",\"2009\",\"4th\",\"colorado rockies\"],[\"thomas berryhill\",\"deland\",\"2008\",\"2009\",\"5th\",\"atlanta braves\"],[\"jimmy nelson\",\"deland\",\"2009\",\"2010\",\"2nd\",\"milwaukee brewers\"],[\"dante bichette jr\",\"winter park\",\"2011\",\"2011\",\"1st\",\"new york yankees\"],[\"peter o'brien\",\"deland\",\"2010\",\"2012\",\"2nd\",\"new york yankees\"],[\"brandon thomas\",\"sanford\",\"2010\",\"2012\",\"4th\",\"pittsburgh pirates\"],[\"tucker donahue\",\"winter park\",\"2010\",\"2012\",\"4th\",\"toronto blue jays\"]]\nQuestion = Is it true that tucker donahue was drafted in 2012 to fcsl team winter park in the 4th round?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    fcsl_teams = get_column_by_name(table_data, \"fcsl team\")\n    years_drafted = get_column_by_name(table_data, \"year drafted\")\n    rounds = get_column_by_name(table_data, \"round\")\n    for player, fcsl_team, year_drafted, round in zip(players, fcsl_teams, years_drafted, rounds):\n        if player.lower() == \"tucker donahue\" and fcsl_team.lower() == \"winter park\" and year_drafted == \"2012\" and round == \"4th\":\n            return True\n    return False\n\n### END"}
{"id": "b45306c4-1f1b-4651-825a-fbdeadbb1de7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"episode\", \"broadcast date\", \"run time\", \"viewers (in millions)\", \"archive\"],[\"episode 1\", \"21 march 1970\", \"24:33\", \"7.1\", \"pal 2 colour videotape\"],[\"episode 2\", \"28 march 1970\", \"24:39\", \"7.6\", \"chroma dot colour recovery\"],[\"episode 3\", \"4 april 1970\", \"24:38\", \"8.0\", \"chroma dot colour recovery\"],[\"episode 4\", \"11 april 1970\", \"24:37\", \"9.3\", \"chroma dot colour recovery\"],[\"episode 5\", \"18 april 1970\", \"24:17\", \"7.1\", \"pal d3 colour restoration\"],[\"episode 6\", \"25 april 1970\", \"24:31\", \"6.9\", \"chroma dot colour recovery\"],[\"episode 7\", \"2 may 1970\", \"24:32\", \"6.4\", \"chroma dot colour recovery\"]]\nQuestion = Is it true that on 21 march 1970 , 7.1 million viewers tuned in?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    broadcast_dates = get_column_by_name(table_data, \"broadcast date\")\n    viewers = get_column_by_name(table_data, \"viewers (in millions)\")\n    for date, viewer in zip(broadcast_dates, viewers):\n        if date.lower() == \"21 march 1970\":\n            answer = equal_to(viewer, \"7.1\")\n            break \n    return answer\n\n### END"}
{"id": "ee9d7634-535c-4c66-814b-bf462ddb2f9d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1989 all - ireland senior hurling championship\ntable_data = [[\"rank\", \"player\", \"county\", \"tally\", \"total\", \"matches\", \"average\"],[\"1\", \"nicky english\", \"tipperary\", \"4 - 38\", \"50\", \"4\", \"12.50\"],[\"2\", \"adrian ronan\", \"kilkenny\", \"1 - 21\", \"24\", \"3\", \"8.00\"],[\"2\", \"mark corrigan\", \"offaly\", \"4 - 12\", \"24\", \"3\", \"8.00\"],[\"4\", \"finbarr delaney\", \"cork\", \"1 - 19\", \"23\", \"2\", \"8.00\"],[\"5\", \"pat fox\", \"tipperary\", \"3 - 11\", \"20\", \"4\", \"5.00\"]]\nQuestion = Is it true that pat fox from tipperary had a rank of 5?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    players = get_column_by_name(table_data, \"player\")\n    counties = get_column_by_name(table_data, \"county\")\n    for rank, player, county in zip(ranks, players, counties):\n        if player.lower() == \"pat fox\" and county.lower() == \"tipperary\":\n            answer = equal_to(rank, \"5\")\n            break \n    return answer\n\n### END"}
{"id": "7b96d123-cd21-4166-8666-47a94517f2b4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of rna structure prediction software\ntable_data = [[\"name\", \"species specific\", \"intra - molecular structure\", \"comparative\", \"link\"],[\"diana - microt\", \"human , mouse\", \"no\", \"yes\", \"webserver\"],[\"microtar\", \"no\", \"no\", \"no\", \"sourcecode\"],[\"mitarget\", \"no\", \"no\", \"no\", \"webserver\"],[\"mirror\", \"no\", \"no\", \"no\", \"webserver\"],[\"pictar\", \"8 vertebrates\", \"no\", \"yes\", \"predictions\"],[\"pita\", \"no\", \"yes\", \"no\", \"executable , webserver , predictions\"],[\"rna22\", \"no\", \"no\", \"no\", \"predictions custom\"],[\"rnahybrid\", \"no\", \"no\", \"no\", \"sourcecode , webserver\"],[\"sylamer\", \"no\", \"no\", \"no\", \"sourcecode webserver\"],[\"taref\", \"yes\", \"no\", \"no\", \"server / sourcecode\"],[\"p - taref\", \"yes\", \"no\", \"no\", \"server / standalone\"],[\"targetscan\", \"vertebrates , flies , nematodes\", \"evaluated indirectly\", \"yes\", \"sourcecode , webserver\"]]\nQuestion = Is it true that microtar had a sourcecode link , but there were no species specified?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    species_specific = get_column_by_name(table_data, \"species specific\")\n    links = get_column_by_name(table_data, \"link\")\n    for name, species, link in zip(names, species_specific, links):\n        if name.lower() == \"microtar\":\n            answer = equal_to(species, \"no\") and equal_to(link, \"sourcecode\")\n            break \n    return answer\n\n### END"}
{"id": "9ffb1e7a-9d62-4fa5-afe3-1bc864bdaaca", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"series number\",\"number of episodes\",\"original air date\",\"dvd region 2 release date\",\"dvd region 1 release date\"],[\"1\",\"6\",\"1973\",\"2 september 2002\",\"tba\"],[\"2\",\"7\",\"1975\",\"2 september 2002\",\"tba\"],[\"3\",\"7\",\"1976\",\"26 july 2004\",\"11 march 2008\"],[\"4\",\"7\",\"1977\",\"26 july 2004\",\"9 september 2008\"],[\"5\",\"7\",\"1979\",\"5 march 2007\",\"6 september 2009\"],[\"6\",\"7\",\"1982\",\"5 march 2007\",\"27 april 2010\"],[\"7\",\"6\",\"1983\",\"3 march 2008\",\"27 april 2010\"],[\"8\",\"6\",\"1985\",\"3 march 2008\",\"9 july 2010\"],[\"9\",\"12\",\"1987\",\"5 may 2008\",\"18 january 2011\"],[\"10\",\"6\",\"1988\",\"22 september 2008\",\"12 april 2011\"],[\"11\",\"7\",\"1989\",\"22 september 2008\",\"12 april 2011\"],[\"12\",\"10\",\"1990\",\"26 december 2008\",\"12 july 2011\"],[\"13\",\"6\",\"1991\",\"26 december 2008\",\"21 february 2012\"],[\"14\",\"9\",\"1992\",\"26 october 2009\",\"17 april 2012\"],[\"15\",\"9\",\"1993\",\"26 october 2009\",\"24 july 2012\"],[\"16\",\"8\",\"1995\",\"27 december 2010\",\"tba\"],[\"17\",\"10\",\"1995\",\"27 december 2010\",\"15 june 2004\"],[\"18\",\"10\",\"1997\",\"7 february 2011\",\"15 january 2013\"],[\"19\",\"10\",\"1998\",\"7 february 2011\",\"16 april 2013\"],[\"20\",\"10\",\"1999\",\"26 march 2012\",\"9 july 2013\"],[\"21\",\"10\",\"2000\",\"26 march 2012\",\"15 october 2013\"],[\"22\",\"10\",\"2001\",\"23 april 2012\",\"14 january 2014\"],[\"23\",\"10\",\"2002\",\"23 april 2012\",\"tba\"],[\"24\",\"10\",\"2003\",\"tba\",\"tba\"],[\"25\",\"10\",\"2004\",\"tba\",\"tba\"],[\"26\",\"10\",\"2005\",\"tba\",\"tba\"],[\"27\",\"9\",\"2006\",\"tba\",\"tba\"],[\"28\",\"10\",\"2007\",\"tba\",\"tba\"],[\"29\",\"11\",\"2008\",\"tba\",\"tba\"],[\"30\",\"10\",\"2009\",\"tba\",\"tba\"],[\"31\",\"6\",\"2010\",\"tba\",\"tba\"]]\nQuestion = Is it true that the sum of the number of episodes that originally aired after 1991 with a series number smaller than 21 and a dvd region 2 release date of 26 march 2012 is 10.0?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef parse_year(date_str):\n    return int(date_str.split()[-1])\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    series_numbers = get_column_by_name(table_data, \"series number\")\n    number_of_episodes = get_column_by_name(table_data, \"number of episodes\")\n    original_air_dates = get_column_by_name(table_data, \"original air date\")\n    dvd_region_2_release_dates = get_column_by_name(table_data, \"dvd region 2 release date\")\n    total_episodes = 0\n    for series_number, number_of_episode, original_air_date, dvd_region_2_release_date in zip(series_numbers, number_of_episodes, original_air_dates, dvd_region_2_release_dates):\n        if int(series_number) < 21 and parse_year(original_air_date) > 1991 and dvd_region_2_release_date == \"26 march 2012\":\n            total_episodes += int(number_of_episode)\n    answer = equal_to(total_episodes, 10.0)\n    return answer\n\n### END"}
{"id": "3044ffe8-20cf-4700-a4a2-636ecc16419d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = boise state broncos men 's basketball\ntable_data = [[\"year\", \"round\", \"opponent\", \"result\", \"bsu head coach\"],[\"1976\", \"first round\", \"unlv\", \"l 78 - 103\", \"bus conner\"],[\"1988\", \"first round\", \"michigan\", \"l 58 - 63\", \"bobby dye\"],[\"1993\", \"first round\", \"vanderbilt\", \"l 72 - 92\", \"bobby dye\"],[\"1994\", \"first round\", \"louisville\", \"l 58 - 67\", \"bobby dye\"],[\"2008\", \"first round\", \"louisville\", \"l 61 - 79\", \"greg graham\"],[\"2013\", \"first four\", \"la salle\", \"l 71 - 80\", \"leon rice\"]]\nQuestion = Is it true that unlv was the opponent before 1976?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    for year, opponent in zip(years, opponents):\n        if less_than(int(year), 1976) and opponent.lower() == \"unlv\":\n            answer = True\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "e363bc9d-9661-4bb4-af56-b0efd4eef57b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = media in fargo - moorhead\ntable_data = [[\"frequency\", \"call sign\", \"name\", \"format\", \"owner\"],[\"88.7 fm\", \"kfbn\", \"heaven 88.7\", \"christian\", \"fargo baptist church\"],[\"90.3 fm\", \"kccd\", \"minnesota public radio / npr\", \"news / talk\", \"minnesota public radio\"],[\"91.1 fm\", \"kccm\", \"minnesota public radio / npr\", \"classical\", \"minnesota public radio\"],[\"91.9 fm\", \"kdsu\", \"prairie public / npr\", \"adult album alternative\", \"north dakota state university\"],[\"92.7 fm\", \"kzdr\", \"92.7 the bone\", \"active rock\", \"mediactive\"],[\"93.7 fm\", \"wday - fm\", \"y94\", \"top 40 (chr)\", \"radio fargo - moorhead\"],[\"95.1 fm\", \"kbvb\", \"bob 95 fm\", \"country\", \"radio fargo - moorhead\"],[\"95.9 fm\", \"kxbq - lp\", \"dive 95.9\", \"alternative\", \"women 's care clinic\"],[\"96.3 fm\", \"knds - lp\", \"thunderradio radio free fargo\", \"college\", \"north dakota state university\"],[\"97.9 fm\", \"kfnw - fm\", \"life 97.9\", \"contemporary christian music\", \"northwestern college\"],[\"98.7 fm\", \"klta\", \"big 98.7\", \"adult chr\", \"triad broadcasting\"],[\"99.3 fm\", \"k257ep\", \"k - love\", \"contemporary christian music ( kklq translator )\", \"educational media foundation\"],[\"99.9 fm\", \"kvox - fm\", \"froggy 99.9\", \"country\", \"triad broadcasting\"],[\"100.7 fm\", \"kklq\", \"k - love\", \"contemporary christian music\", \"educational media foundation\"],[\"101.9 fm\", \"krwk\", \"101.9 talk fm\", \"talk\", \"radio fargo - moorhead\"],[\"103.3 fm\", \"kzcr\", \"z 103.3\", \"rock / aaa\", \"jerry papenfuss\"],[\"103.9 fm\", \"kvmi\", \"103.9 the truck\", \"country\", \"vision media incorporated\"],[\"104.1 fm\", \"kbot\", \"104.1 the wave\", \"adult contemporary\", \"leighton broadcasting\"],[\"104.7 fm\", \"kmjo\", \"104.7 popster fm\", \"adult hits\", \"radio fargo - moorhead\"],[\"105.1 fm\", \"kqwb\", \"q 105.1\", \"active rock\", \"triad broadcasting\"],[\"106.1 fm\", \"kqlx - fm\", \"thunder 106.1\", \"classic country\", \"great plains integrated marketing\"],[\"106.5 fm\", \"krjb\", \"krjb 106.5\", \"country\", \"r&j broadcasting\"],[\"106.9 fm\", \"kegk\", \"eagle 106.9\", \"classic hits\", \"great plains integrated marketing\"],[\"107.9 fm\", \"kpfx\", \"107.9 the fox\", \"classic rock\", \"triad broadcasting\"]]\nQuestion = Is it true that the 103.3 fm frequency radio is owned by r&j broadcasting?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    owners = get_column_by_name(table_data, \"owner\")\n    for frequency, owner in zip(frequencies, owners):\n        if frequency == \"103.3 fm\" and owner == \"r&j broadcasting\":\n            return True\n    return False\n\n### END"}
{"id": "3785efc6-5cae-4d77-b09c-204e3cb6ad65", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1989 all - ireland senior hurling championship\ntable_data = [[\"rank\", \"player\", \"county\", \"tally\", \"total\", \"matches\", \"average\"],[\"1\", \"nicky english\", \"tipperary\", \"4 - 38\", \"50\", \"4\", \"12.50\"],[\"2\", \"adrian ronan\", \"kilkenny\", \"1 - 21\", \"24\", \"3\", \"8.00\"],[\"2\", \"mark corrigan\", \"offaly\", \"4 - 12\", \"24\", \"3\", \"8.00\"],[\"4\", \"finbarr delaney\", \"cork\", \"1 - 19\", \"23\", \"2\", \"8.00\"],[\"5\", \"pat fox\", \"tipperary\", \"3 - 11\", \"20\", \"4\", \"5.00\"]]\nQuestion = Is it true that there are no players available with a rank greater than 1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    answer = any(greater(int(rank), 1) for rank in ranks)\n    return not answer\n\n### END"}
{"id": "9291a5c9-21df-49d9-90f4-b6a8d5287574", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of leverage episodes\ntable_data = [[\"series\",\"season\",\"title\",\"directed by\",\"written by\",\"original air date\",\"us viewers (in millions)\"],[\"14\",\"1\",\"the beantown bailout job\",\"dean devlin\",\"john rogers\",\"july 15 , 2009\",\"3.89\"],[\"15\",\"2\",\"the tap - out job\",\"marc roskin\",\"albert kim\",\"july 22 , 2009\",\"3.05\"],[\"16\",\"3\",\"the order 23 job\",\"rod hardy\",\"chris downey\",\"july 29 , 2009\",\"3.68\"],[\"17\",\"4\",\"the fairy godparents job\",\"jonathan frakes\",\"amy berg\",\"august 5 , 2009\",\"3.69\"],[\"18\",\"5\",\"the three days of the hunter job\",\"marc roskin\",\"melissa glenn & jessica rieder\",\"august 12 , 2009\",\"3.16\"],[\"19\",\"6\",\"the top hat job\",\"peter o'fallon\",\"m scott veach & christine boylan\",\"august 19 , 2009\",\"3.43\"],[\"20\",\"7\",\"the two live crew job\",\"dean devlin\",\"amy berg & john rogers\",\"august 26 , 2009\",\"3.73\"],[\"21\",\"8\",\"the ice man job\",\"jeremiah chechik\",\"christine boylan\",\"september 2 , 2009\",\"3.58\"],[\"22\",\"9\",\"the lost heir job\",\"peter winther\",\"chris downey\",\"september 9 , 2009\",\"3.37\"],[\"23\",\"10\",\"the runway job\",\"mark roskin\",\"albert kim\",\"january 13 , 2010\",\"3.69\"],[\"24\",\"11\",\"the bottle job\",\"jonathan frakes\",\"christine boylan\",\"january 20 , 2010\",\"3.00\"],[\"25\",\"12\",\"the zanzibar marketplace job\",\"jeremiah chechik\",\"melissa glenn & jessica rieder\",\"january 27 , 2010\",\"3.02\"],[\"26\",\"13\",\"the future job\",\"mark roskin\",\"amy berg & chris downey\",\"february 3 , 2010\",\"2.91\"],[\"27\",\"14\",\"the three strikes job\",\"dean devlin\",\"john rogers\",\"february 10 , 2010\",\"2.8\"]]\nQuestion = Is it true that in series 23 , the 10th episode was titled , the runway job?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    series = get_column_by_name(table_data, \"series\")\n    titles = get_column_by_name(table_data, \"title\")\n    for serie, title in zip(series, titles):\n        if serie == \"23\" and title.lower() == \"the runway job\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "186fd9f6-de0f-46d3-9c9b-3d6711c722c9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1950 world figure skating championships\ntable_data = [[\"rank\", \"name\", \"nation\", \"placings\", \"total\"],[\"1\", \"karol kennedy / peter kennedy\", \"united states\", \"15\", \"96.07\"],[\"2\", \"jennifer nicks / john nicks\", \"united kingdom\", \"28.5\", \"92.70\"],[\"3\", \"marianne nagy / lászló nagy\", \"hungary\", \"32\", \"92.25\"],[\"4\", \"elianne steineman / andré calamé\", \"switzerland\", \"44.5\", \"90.00\"],[\"5\", \"suzanne gheldorf / jacques rénard\", \"belgium\", \"48.5\", \"89.43\"],[\"6\", \"elly stärck / harry gareis\", \"austria\", \"61\", \"88.08\"],[\"7\", \"marlene smith / donald gilchrist\", \"canada\", \"63\", \"87.07\"],[\"8\", \"joan waterhouse / gordon holloway\", \"united kingdom\", \"62\", \"88.31\"],[\"9\", \"liliane de becker / edmund verbustel\", \"belgium\", \"64\", \"88.42\"],[\"10\", \"irene maguire / walter muehlbronner\", \"united states\", \"82\", \"84.26\"],[\"11\", \"sybil cooke / bob hudson\", \"united kingdom\", \"93.5\", \"83.47\"],[\"12\", \"denise favart / jacques favart\", \"france\", \"108\", \"77.73\"]]\nQuestion = Is it true that rank 2 scored a total higher than 93?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    totals = get_column_by_name(table_data, \"total\")\n    for rank, total in zip(ranks, totals):\n        if rank == \"2\":\n            answer = greater(float(total), 93)\n            break \n    return answer\n\n### END"}
{"id": "45325238-b659-4b79-a23c-45930cb857b9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of world cups and world championships for juniors and youth\ntable_data = [[\"sport\", \"competition name\", \"competing entities\", \"age groups\", \"held every\"],[\"aquatics\", \"fina world junior swimming championships\", \"individuals\", \"17 or younger\", \"two years\"],[\"athletics\", \"iaaf world junior championships in athletics\", \"individuals\", \"18 - 19\", \"two years\"],[\"athletics\", \"iaaf world youth championships in athletics\", \"individuals\", \"17 or younger\", \"two years\"],[\"badminton\", \"bwf world junior championships\", \"individuals\", \"19 or younger\", \"one year\"],[\"bandy\", \"bandy world championship u - 23\", \"nations\", \"under - 23\", \"two years\"],[\"bandy\", \"bandy world championship u - 19\", \"nations\", \"under - 19\", \"two years\"],[\"bandy\", \"bandy world championship u - 17\", \"nations\", \"under - 17\", \"two years\"],[\"bandy\", \"bandy world championship u - 15\", \"nations\", \"under - 15\", \"two years\"],[\"baseball\", \"world junior baseball championship\", \"nations\", \"under - 18\", \"one year through 2000 , now two years\"],[\"baseball\", \"world youth baseball championship\", \"nations\", \"under - 16\", \"one year through 1998 , two years starting in 2001\"],[\"baseball\", \"big league world series\", \"communities\", \"16 - 18\", \"one year\"],[\"baseball\", \"senior league world series\", \"communities\", \"14 - 16\", \"one year\"],[\"baseball\", \"junior league world series\", \"communities\", \"13 - 15\", \"one year\"],[\"baseball\", \"little league world series\", \"communities\", \"13 or younger\", \"one year\"],[\"basketball\", \"fiba under - 21 world championship\", \"nations\", \"21 or younger\", \"four years until 2005\"],[\"basketball\", \"fiba under - 19 world championship\", \"nations\", \"19 or younger\", \"four years until 2007 , now two years\"],[\"basketball\", \"fiba under - 17 world championship\", \"nations\", \"17 or younger\", \"two years\"],[\"basketball\", \"fiba 3x3 u - 18 world championships\", \"nations\", \"18 or younger\", \"year\"],[\"cricket\", \"u - 19 cricket world cup\", \"nations\", \"19 or younger\", \"two years\"],[\"figure skating\", \"world junior figure skating championships\", \"individuals\", \"13 - 19\", \"one year\"],[\"football (soccer)\", \"fifa u - 20 world cup\", \"nations\", \"20 or younger\", \"two years\"],[\"football (soccer)\", \"fifa u - 17 world cup\", \"nations\", \"17 or younger\", \"two years\"],[\"ice hockey\", \"iihf world u20 championship\", \"nations\", \"20 or younger\", \"year\"],[\"ice hockey\", \"iihf world u18 championships\", \"nations\", \"18 or younger\", \"year\"],[\"lacrosse\", \"under - 19 world lacrosse championships\", \"nations\", \"19 or younger\", \"four years\"],[\"rowing\", \"junior world rowing championships\", \"nations\", \"18 or younger\", \"year\"],[\"rugby union\", \"irb junior world championship\", \"nations\", \"20 or younger\", \"year\"],[\"rugby union\", \"under 19 rugby world championship\", \"nations\", \"19 or younger\", \"year\"],[\"rugby union\", \"under 21 rugby world championship\", \"nations\", \"21 or younger\", \"year\"],[\"speed skating\", \"world junior speed skating championships\", \"individuals and nations\", \"19 or younger\", \"one year\"],[\"speed skating\", \"isu junior world cup speed skating\", \"individuals and nations\", \"19 or younger\", \"one year\"],[\"sailing\", \"isaf youth sailing world championships\", \"nations\", \"under 19 's\", \"annually\"],[\"sailing\", \"isaf classes world championship\", \"held in the optimist , splash , zoom , rs tera etc\", \"19 or younger\", \"various\"],[\"table tennis\", \"world junior table tennis championships\", \"individuals and nations\", \"18 or younger\", \"one year\"],[\"volleyball\", \"men 's junior volleyball world championship\", \"nations\", \"21 or younger\", \"two years\"],[\"volleyball\", \"boys youth volleyball world championship\", \"nations\", \"19 or younger\", \"two years\"]]\nQuestion = Is it true that big league world series was the competition name with an age group of 16 - 18?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    competition_names = get_column_by_name(table_data, \"competition name\")\n    age_groups = get_column_by_name(table_data, \"age groups\")\n    for competition_name, age_group in zip(competition_names, age_groups):\n        if competition_name.lower() == \"big league world series\" and age_group.lower() == \"16 - 18\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "eb5e04ac-11d8-4ade-8608-d2fadd11eb98", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"class\", \"part 1\", \"part 2\", \"part 3\", \"part 4\", \"verb meaning\"],[\"1\", \"rīdan\", \"rād\", \"ridon\", \"riden\", \"to ride\"],[\"2a\", \"frēosan\", \"frēas\", \"fruron\", \"froren\", \"to freeze\"],[\"2b\", \"lūcan\", \"lēac\", \"lucon\", \"locen\", \"to lock\"],[\"3a\", \"bindan\", \"band\", \"bundon\", \"bunden\", \"to bind\"],[\"3b\", \"weorþan\", \"wearþ\", \"wurdon\", \"worden\", \"to become\"],[\"4\", \"beran\", \"bær\", \"bǣron\", \"boren\", \"to bear\"],[\"5\", \"lesan\", \"læs\", \"lǣron\", \"leren\", \"to gather\"],[\"6\", \"alan\", \"ōl\", \"ōlon\", \"alen\", \"to nourish , to grow\"],[\"7a\", \"hātan\", \"hēt\", \"hēton\", \"hāten\", \"to call , to be called\"],[\"7b\", \"hlēapan\", \"hlēop\", \"hlēppon\", \"hlēapen\", \"to leap\"],[\"7c\", \"healdan\", \"hēold\", \"hēoldon\", \"healden\", \"to hold\"],[\"7d\", \"rǣdan\", \"rēd\", \"rēdon\", \"rǣden\", \"to advise , to interpret\"]]\nQuestion = Is it true that the class with part 3 as lucon has verb meaning to bear and part 1 bindan is 2a?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    classes = get_column_by_name(table_data, \"class\")\n    part_1s = get_column_by_name(table_data, \"part 1\")\n    part_3s = get_column_by_name(table_data, \"part 3\")\n    verb_meanings = get_column_by_name(table_data, \"verb meaning\")\n    for class_, part_1, part_3, verb_meaning in zip(classes, part_1s, part_3s, verb_meanings):\n        if part_3.lower() == \"lucon\" and verb_meaning.lower() == \"to bear\" and part_1.lower() == \"bindan\" and class_.lower() == \"2a\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "de3f9751-3137-47e3-bf8c-1fd7b45a8c3f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1980 - 81 philadelphia flyers season\ntable_data = [[\"game\", \"december\", \"opponent\", \"score\", \"record\", \"points\"],[\"27\", \"4\", \"chicago black hawks\", \"7 - 5\", \"18 - 5 - 4\", \"40\"],[\"28\", \"6\", \"detroit red wings\", \"2 - 4\", \"18 - 6 - 4\", \"40\"],[\"29\", \"7\", \"colorado rockies\", \"4 - 2\", \"19 - 6 - 4\", \"42\"],[\"30\", \"10\", \"chicago black hawks\", \"2 - 2\", \"19 - 6 - 5\", \"43\"],[\"31\", \"13\", \"pittsburgh penguins\", \"6 - 5\", \"20 - 6 - 5\", \"45\"],[\"32\", \"14\", \"st louis blues\", \"5 - 4\", \"21 - 6 - 5\", \"47\"],[\"33\", \"18\", \"colorado rockies\", \"2 - 0\", \"22 - 6 - 5\", \"49\"],[\"34\", \"20\", \"washington capitals\", \"5 - 2\", \"23 - 6 - 5\", \"51\"],[\"35\", \"21\", \"washington capitals\", \"0 - 6\", \"23 - 7 - 5\", \"51\"],[\"36\", \"27\", \"calgary flames\", \"1 - 2\", \"23 - 8 - 5\", \"51\"],[\"37\", \"28\", \"edmonton oilers\", \"2 - 1\", \"24 - 8 - 5\", \"53\"],[\"38\", \"30\", \"minnesota north stars\", \"5 - 6\", \"24 - 9 - 5\", \"53\"]]\nQuestion = Is it true that there were a total of 40 points when chicago played the pittsburgh penquins?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    points = get_column_by_name(table_data, \"points\")\n    answer = False\n    for opponent, point in zip(opponents, points):\n        if \"chicago\" in opponent.lower() and \"pittsburgh penguins\" in opponent.lower():\n            answer = equal_to(int(point), 40)\n            break\n    return answer\n\n### END"}
{"id": "dcd8abfa-a2fb-44db-8089-b94c8989e410", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the howie carr show\ntable_data = [[\"calls\", \"frequency\", \"branding\", \"format\", \"timeslot\", \"group owner\"],[\"wgan\", \"560 khz\", \"news radio 560 wgan\", \"news / talk\", \"live 3p - 6p\", \"saga communications\"],[\"whyn\", \"560 khz\", \"news / talk 560 whyn\", \"news / talk\", \"live 3p - 7p\", \"clear channel communications\"],[\"wvmt\", \"620 khz\", \"news / talk 620 wvmt\", \"news / talk\", \"live 3p - 7p\", \"sison broadcasting\"],[\"wrko\", \"680 khz\", \"am 680 wrko\", \"news / talk\", \"live 3p - 7p\", \"entercom\"],[\"wcrn\", \"830 khz\", \"wcrn 830 true talk\", \"news / talk\", \"live 3p - 7p\", \"carter broadcasting\"],[\"wkbk\", \"1290 khz\", \"1290 wkbk w281au 104.1\", \"news / talk\", \"live 3p - 6p\", \"saga communications\"],[\"wegp\", \"1390 khz\", \"wegp 1390 am - the talk of the county\", \"news / talk\", \"live 3p - 6p\", \"decelles / media , inc\"],[\"wxtk\", \"95.1 mhz\", \"news radio 95 wxtk\", \"news / talk\", \"live 3p - 7p\", \"qantam of cape cod , llc\"],[\"wntk - fm\", \"99.7 mhz\", \"wntk talk radio\", \"news / talk\", \"live 3p - 6p\", \"koor communications\"],[\"wuvr\", \"1490 khz\", \"wntk talk radio\", \"news / talk\", \"live 3p - 6p\", \"koor communications\"],[\"wvom - fm / wvqm\", \"103.9 / 101.3 mhz\", \"the voice of maine\", \"news / talk\", \"live 3p - 7p\", \"blueberry broadcasting\"]]\nQuestion = Is it true that the news / talk radio station wkbk has a frequency of 1290 khz?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    calls = get_column_by_name(table_data, \"calls\")\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    for call, frequency in zip(calls, frequencies):\n        if call.lower() == \"wkbk\":\n            answer = equal_to(frequency, \"1290 khz\")\n            break \n    return answer\n\n### END"}
{"id": "b15deed7-4681-4ca7-921c-c27b693be3ca", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1973 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"geelong\", \"14.11 (95)\", \"hawthorn\", \"14.10 (94)\", \"kardinia park\", \"13546\", \"4 august 1973\"],[\"st kilda\", \"15.20 (110)\", \"footscray\", \"12.14 (86)\", \"moorabbin oval\", \"15217\", \"4 august 1973\"],[\"richmond\", \"15.14 (104)\", \"fitzroy\", \"13.14 (92)\", \"mcg\", \"20578\", \"4 august 1973\"],[\"north melbourne\", \"13.13 (91)\", \"essendon\", \"14.10 (94)\", \"arden street oval\", \"21071\", \"4 august 1973\"],[\"collingwood\", \"19.7 (121)\", \"carlton\", \"15.16 (106)\", \"victoria park\", \"37660\", \"4 august 1973\"],[\"south melbourne\", \"12.14 (86)\", \"melbourne\", \"11.12 (78)\", \"vfl park\", \"15255\", \"4 august 1973\"]]\nQuestion = Is it true that vfl park was the venue when the away team was essendon?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    away_teams = get_column_by_name(table_data, \"away team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    answer = False\n    for away_team, venue in zip(away_teams, venues):\n        if \"essendon\" in away_team.lower() and \"vfl park\" in venue.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "f904f4ea-9859-4941-9048-6f2724c39bac", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = piia pantsu\ntable_data = [[\"competition\", \"place\", \"year\", \"horse\", \"rank\"],[\"world championship\", \"haag\", \"1994\", \"cyna\", \"5\"],[\"european championship\", \"rome\", \"1995\", \"cyna\", \"4\"],[\"european championship\", \"burghley\", \"1997\", \"cyna\", \"stopped in second event\"],[\"world championship\", \"rooma\", \"1998\", \"uppercut\", \"9\"],[\"european championship\", \"luhmühlen\", \"1999\", \"uppercut\", \"4\"],[\"olympics\", \"sydney\", \"2000\", \"uppercut\", \"disqualification in second event\"],[\"european championship\", \"pau\", \"2001\", \"ypäjä karuso\", \"17\"],[\"world championship\", \"jerez\", \"2002\", \"ypäjä karuso\", \"3\"],[\"badminton horse trials\", \"gloucestershire , england\", \"2003\", \"ypäjä karuso\", \"2\"],[\"european championship\", \"blenheim\", \"2005\", \"ypäjä karuso\", \"6\"],[\"world cup final\", \"malmö\", \"2005\", \"ypäjä karuso\", \"3\"],[\"world championship\", \"aachen\", \"2006\", \"ypäjä karuso\", \"stopped in second event\"],[\"finland championship\", \"kerava , finland\", \"2007\", \"ypäjä karuso\", \"1\"]]\nQuestion = Is it true that the european championship in burghley with horse cyna was stopped in the second event?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    competitions = get_column_by_name(table_data, \"competition\")\n    places = get_column_by_name(table_data, \"place\")\n    horses = get_column_by_name(table_data, \"horse\")\n    ranks = get_column_by_name(table_data, \"rank\")\n    answer = False\n    for competition, place, horse, rank in zip(competitions, places, horses, ranks):\n        if competition.lower() == \"european championship\" and place.lower() == \"burghley\" and horse.lower() == \"cyna\":\n            if \"stopped in second event\" in rank.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "ca56774e-31ae-4cbd-9273-044d85f2a22d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 miller superbike world championship round\ntable_data = [[\"rider\", \"bike\", \"laps\", \"time\", \"grid\"],[\"carlos checa\", \"honda cbr1000rr\", \"20\", \"37:04.991\", \"1\"],[\"troy corser\", \"yamaha yzf - r1\", \"20\", \"+ 2.809\", \"5\"],[\"michel fabrizio\", \"ducati 1098 f08\", \"20\", \"+ 6.546\", \"4\"],[\"max neukirchner\", \"suzuki gsx - r1000\", \"20\", \"+ 7.764\", \"2\"],[\"fonsi nieto\", \"suzuki gsx - r1000\", \"20\", \"+ 16.475\", \"13\"],[\"jakub smrz\", \"ducati 1098 rs 08\", \"20\", \"+ 17.126\", \"11\"],[\"karl muggeridge\", \"honda cbr1000rr\", \"20\", \"+ 17.284\", \"12\"],[\"yukio kagayama\", \"suzuki gsx - r1000\", \"20\", \"+ 17.416\", \"8\"],[\"max biaggi\", \"ducati 1098 rs 08\", \"20\", \"+ 18.117\", \"9\"],[\"ryuichi kiyonari\", \"honda cbr1000rr\", \"20\", \"+ 20.467\", \"20\"],[\"lorenzo lanzi\", \"ducati 1098 rs 08\", \"20\", \"+ 21.742\", \"15\"],[\"kenan sofuoğlu\", \"honda cbr1000rr\", \"20\", \"+ 27.533\", \"25\"],[\"gregorio lavilla\", \"honda cbr1000rr\", \"20\", \"+ 32.609\", \"23\"],[\"ruben xaus\", \"ducati 1098 rs 08\", \"20\", \"+ 33.165\", \"6\"],[\"russell holland\", \"honda cbr1000rr\", \"20\", \"+ 34.182\", \"17\"],[\"shinichi nakatomi\", \"yamaha yzf - r1\", \"20\", \"+ 34.500\", \"22\"],[\"ayrton badovini\", \"kawasaki zx - 10r\", \"20\", \"+ 36.155\", \"16\"],[\"sébastien gimbert\", \"yamaha yzf - r1\", \"20\", \"+ 41.685\", \"24\"],[\"makoto tamada\", \"kawasaki zx - 10r\", \"20\", \"+ 43.579\", \"18\"],[\"roberto rolfo\", \"honda cbr1000rr\", \"20\", \"+ 54.195\", \"28\"],[\"jason pridmore\", \"honda cbr1000rr\", \"20\", \"+ 1:00.388\", \"19\"],[\"vittorio iannuzzo\", \"kawasaki zx - 10r\", \"20\", \"+ 1:02.104\", \"21\"],[\"scott jensen\", \"suzuki gsx - r1000 k8\", \"20\", \"+ 1:09.953\", \"29\"],[\"loic napoleone\", \"yamaha yzf - r1\", \"20\", \"+ 1:12.258\", \"27\"],[\"shuhei aoyama\", \"honda cbr1000rr\", \"14\", \"retirement\", \"14\"],[\"david checa\", \"yamaha yzf - r1\", \"6\", \"retirement\", \"26\"],[\"noriyuki haga\", \"yamaha yzf - r1\", \"5\", \"accident\", \"10\"],[\"troy bayliss\", \"ducati 1098 f08\", \"4\", \"accident\", \"3\"],[\"régis laconi\", \"kawasaki zx - 10r\", \"4\", \"retirement\", \"7\"]]\nQuestion = Is it true that the driver shuhei aoyama completed only fourteen laps due to retirement?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    riders = get_column_by_name(table_data, \"rider\")\n    laps = get_column_by_name(table_data, \"laps\")\n    times = get_column_by_name(table_data, \"time\")\n    for rider, lap, time in zip(riders, laps, times):\n        if rider.lower() == \"shuhei aoyama\":\n            answer = equal_to(lap, \"14\") and equal_to(time, \"retirement\")\n            break \n    return answer\n\n### END"}
{"id": "cb3c264f-d17d-49ec-bd7f-c2d89dce898d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = royal canadian mint numismatic coins (2000s)\ntable_data = [[\"year\", \"animal\", \"artist\", \"finish\", \"mintage\", \"issue price\"],[\"2007\", \"ruby - throated hummingbird\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2007\", \"red breasted nuthatch\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2008\", \"downy woodpecker\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2008\", \"northern cardinal\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2010\", \"american goldfinch\", \"arnold nogy (reverse) , susanna blunt (obverse)\", \"specimen (with selective colouring)\", \"14000\", \"24.95\"]]\nQuestion = Is it true that the downy woodpecker coin was created in the year 2008?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    animals = get_column_by_name(table_data, \"animal\")\n    for year, animal in zip(years, animals):\n        if animal.lower() == \"downy woodpecker\":\n            answer = equal_to(year, \"2008\")\n            break \n    return answer\n\n### END"}
{"id": "3116b3aa-5159-4dbd-9b8a-7cf5502a1376", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sanya\ntable_data = [[\"english name\", \"simplified\", \"traditional\", \"pinyin\", \"area\", \"population\", \"density\"],[\"hexi district\", \"河西区\", \"河西區\", \"héxī qū\", \"10\", \"134026\", \"13403\"],[\"hedong district\", \"河东区\", \"河東區\", \"hédōng qū\", \"35\", \"147944\", \"4227\"],[\"haitangwan\", \"海棠湾镇\", \"海棠灣鎮\", \"hǎitángwān zhèn\", \"254\", \"44617\", \"176\"],[\"jiyang\", \"吉阳镇\", \"吉陽鎮\", \"jíyáng zhèn\", \"199\", \"92316\", \"464\"],[\"fenghuang\", \"凤凰镇\", \"鳳凰鎮\", \"fènghuáng zhèn\", \"487\", \"66801\", \"137\"],[\"yacheng\", \"崖城镇\", \"崖城鎮\", \"yáchéng zhèn\", \"383\", \"74779\", \"195\"],[\"tianya\", \"天涯镇\", \"天涯鎮\", \"tiānyá zhèn\", \"269\", \"34934\", \"130\"],[\"yucai\", \"育才镇\", \"育才鎮\", \"yùcái zhèn\", \"315\", \"17515\", \"56\"],[\"nantian farm\", \"国营南田农场\", \"國營南田農場\", \"guóyíng nántián nóngchǎng\", \"nd\", \"24280\", \"nd\"],[\"nanxin farm\", \"国营南新农场\", \"國營南新農場\", \"guóyíng nánxīn nóngchǎng\", \"nd\", \"16801\", \"nd\"],[\"licai farm\", \"国营立才农场\", \"國營立才農場\", \"guóyíng lìcái nóngchǎng\", \"nd\", \"16659\", \"nd\"]]\nQuestion = Is it true that the pinyin héxī qū has the simplified as 河西 and population of 134026?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    pinyins = get_column_by_name(table_data, \"pinyin\")\n    simplifieds = get_column_by_name(table_data, \"simplified\")\n    populations = get_column_by_name(table_data, \"population\")\n    for pinyin, simplified, population in zip(pinyins, simplifieds, populations):\n        if pinyin == \"héxī qū\":\n            answer = equal_to(simplified, \"河西区\") and equal_to(population, \"134026\")\n            break \n    return answer\n\n### END"}
{"id": "f81c0a19-cca1-43c9-bf5d-0b55fb6240fd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1935 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"16.18 (114)\", \"north melbourne\", \"6.10 (46)\", \"glenferrie oval\", \"4000\", \"13 july 1935\"],[\"fitzroy\", \"9.10 (64)\", \"st kilda\", \"12.12 (84)\", \"brunswick street oval\", \"15000\", \"13 july 1935\"],[\"essendon\", \"10.14 (74)\", \"melbourne\", \"12.21 (93)\", \"windy hill\", \"8000\", \"13 july 1935\"],[\"richmond\", \"16.10 (106)\", \"footscray\", \"3.11 (29)\", \"punt road oval\", \"16000\", \"13 july 1935\"],[\"south melbourne\", \"18.16 (124)\", \"collingwood\", \"10.11 (71)\", \"lake oval\", \"31000\", \"13 july 1935\"],[\"geelong\", \"6.7 (43)\", \"carlton\", \"11.10 (76)\", \"corio oval\", \"14500\", \"13 july 1935\"]]\nQuestion = Is it true that when essendon played at windy hill , they had a score of 10.14 (74)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    venues = get_column_by_name(table_data, \"venue\")\n    for home_team, home_team_score, venue in zip(home_teams, home_team_scores, venues):\n        if home_team.lower() == \"essendon\" and venue.lower() == \"windy hill\":\n            answer = equal_to(home_team_score, \"10.14 (74)\")\n            break \n    return answer\n\n### END"}
{"id": "c83df5b1-29d8-4b94-9620-94665c7d4c5f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of rna structure prediction software\ntable_data = [[\"name\", \"species specific\", \"intra - molecular structure\", \"comparative\", \"link\"],[\"diana - microt\", \"human , mouse\", \"no\", \"yes\", \"webserver\"],[\"microtar\", \"no\", \"no\", \"no\", \"sourcecode\"],[\"mitarget\", \"no\", \"no\", \"no\", \"webserver\"],[\"mirror\", \"no\", \"no\", \"no\", \"webserver\"],[\"pictar\", \"8 vertebrates\", \"no\", \"yes\", \"predictions\"],[\"pita\", \"no\", \"yes\", \"no\", \"executable , webserver , predictions\"],[\"rna22\", \"no\", \"no\", \"no\", \"predictions custom\"],[\"rnahybrid\", \"no\", \"no\", \"no\", \"sourcecode , webserver\"],[\"sylamer\", \"no\", \"no\", \"no\", \"sourcecode webserver\"],[\"taref\", \"yes\", \"no\", \"no\", \"server / sourcecode\"],[\"p - taref\", \"yes\", \"no\", \"no\", \"server / standalone\"],[\"targetscan\", \"vertebrates , flies , nematodes\", \"evaluated indirectly\", \"yes\", \"sourcecode , webserver\"]]\nQuestion = Is it true that all three comparatives , with both source code and webserver links , are yes comparatives?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    comparatives = get_column_by_name(table_data, \"comparative\")\n    links = get_column_by_name(table_data, \"link\")\n    answer = True\n    for comparative, link in zip(comparatives, links):\n        if \"sourcecode\" in link.lower() and \"webserver\" in link.lower():\n            if not equal_to(comparative.lower(), \"yes\"):\n                answer = False\n                break\n    return answer\n\n### END"}
{"id": "803c0c36-996a-424b-9f2e-b565658e7086", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of americas records in swimming\ntable_data = [[\"event\", \"time\", \"nationality\", \"date\", \"meet\", \"location\"],[\"50 m freestyle\", \"20.91\", \"brazil\", \"18 december 2009\", \"brazilian championships\", \"são paulo, brazil\"],[\"100 m freestyle\", \"46.91\", \"brazil\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m freestyle\", \"1:42.96\", \"united states\", \"12 august 2008\", \"olympic games\", \"beijing, china\"],[\"400 m freestyle\", \"3:42.78\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"800 m freestyle\", \"7:41.86\", \"canada\", \"27 july 2011\", \"world championships\", \"shanghai, china\"],[\"1500 m freestyle\", \"14:39.63\", \"canada\", \"4 august 2012\", \"olympic games\", \"london, united kingdom\"],[\"50 m backstroke\", \"24.33\", \"united states\", \"5 december 2008\", \"dutch swim cup\", \"eindhoven, netherlands\"],[\"100 m backstroke\", \"51.94\", \"united states\", \"8 july 2009\", \"us championships\", \"indianapolis, united states\"],[\"200 m backstroke\", \"1:51.92\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m breaststroke\", \"26.76\", \"brazil\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"100 m breaststroke\", \"58.96\", \"united states\", \"26 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m breaststroke\", \"2:07.42\", \"united states\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m butterfly\", \"22.76\", \"brazil\", \"26 april 2012\", \"maria lenk trophy\", \"rio de janeiro, brazil\"],[\"100 m butterfly\", \"49.82\", \"united states\", \"1 august 2009\", \"world championships\", \"rome, italy\"],[\"200 m butterfly\", \"1:51.51\", \"united states\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m individual medley\", \"1:54.00\", \"united states\", \"28 july 2011\", \"world championships\", \"shanghai, china\"],[\"400 m individual medley\", \"4:03.84\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"4100 m freestyle relay\", \"3:08.24\", \"united states\", \"11 august 2008\", \"olympic games\", \"beijing, china\"],[\"4200 m freestyle relay\", \"6:58.55\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"4100 m medley relay\", \"3:27.28\", \"united states\", \"2 august 2009\", \"world championships\", \"rome, italy\"]]\nQuestion = Is it true that on 28 july 2011 the 200 m individual medley even was swam in 1:54:00?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    times = get_column_by_name(table_data, \"time\")\n    dates = get_column_by_name(table_data, \"date\")\n    for event, time, date in zip(events, times, dates):\n        if event.lower() == \"200 m individual medley\" and date.lower() == \"28 july 2011\":\n            answer = equal_to(time, \"1:54.00\")\n            break \n    return answer\n\n### END"}
{"id": "8d59f2fb-e8a3-4e9f-b5b1-7ea3d08f96f8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = meaghan francella\ntable_data = [[\"year\", \"tournaments played\", \"cuts made\", \"wins\", \"2nd\", \"top 10s\", \"best finish\", \"earnings\", \"money list rank\", \"scoring average\", \"scoring rank\"],[\"2005\", \"1\", \"1\", \"0\", \"0\", \"0\", \"t69\", \"2525\", \"n / a\", \"75.00\", \"n / a\"],[\"2006\", \"3\", \"1\", \"0\", \"0\", \"0\", \"t39\", \"55554\", \"183\", \"73.75\", \"n / a\"],[\"2007\", \"25\", \"18\", \"1\", \"0\", \"4\", \"1\", \"507292\", \"29\", \"73.09\", \"66\"],[\"2008\", \"24\", \"11\", \"0\", \"0\", \"0\", \"t13\", \"117682\", \"88\", \"73.75\", \"131\"],[\"2009\", \"22\", \"16\", \"0\", \"0\", \"2\", \"t5\", \"292266\", \"48\", \"72.51\", \"63\"],[\"2010\", \"21\", \"17\", \"0\", \"0\", \"1\", \"t7\", \"168016\", \"57\", \"73.04\", \"77\"],[\"2011\", \"15\", \"8\", \"0\", \"0\", \"0\", \"t22\", \"66813\", \"84\", \"74.23\", \"117\"],[\"2012\", \"15\", \"4\", \"0\", \"0\", \"0\", \"t24\", \"28935\", \"116\", \"74.37\", \"121\"]]\nQuestion = Is it true that in 2011 , the best finish was t22 , and the scoring rank was 117?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    best_finishes = get_column_by_name(table_data, \"best finish\")\n    scoring_ranks = get_column_by_name(table_data, \"scoring rank\")\n    for year, best_finish, scoring_rank in zip(years, best_finishes, scoring_ranks):\n        if year == \"2011\":\n            answer = equal_to(best_finish, \"t22\") and equal_to(scoring_rank, \"117\")\n            break \n    return answer\n\n### END"}
{"id": "0f95eede-6b27-442b-a3b4-d3e47933e3b4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of derbyshire county cricket club seasons\ntable_data = [[\"season\", \"pl\", \"w\", \"l\", \"d\", \"captain\", \"most runs\", \"most wkts\", \"wkt keeper\"],[\"1888\", \"12\", \"3\", \"9\", \"0\", \"william chatterton\", \"william chatterton\", \"john hulme\", \"james disney\"],[\"1889\", \"11\", \"3\", \"5\", \"3\", \"william chatterton\", \"william chatterton\", \"george davidson\", \"james disney\"],[\"1890\", \"14\", \"7\", \"5\", \"2\", \"fred spofforth\", \"levi wright\", \"george davidson\", \"no regular keeper\"],[\"1891\", \"13\", \"6\", \"4\", \"3\", \"sydney evershed\", \"william chatterton\", \"george davidson\", \"william storer\"],[\"1892\", \"13\", \"5\", \"7\", \"1\", \"sydney evershed\", \"harry bagshaw\", \"george davidson\", \"william storer\"]]\nQuestion = Is it true that four is the lowest amount of losses in any season?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef get_min_value(lst):\n    return min(lst)\n\ndef solution(table_data):\n    losses = get_column_by_name(table_data, \"l\")\n    min_losses = get_min_value(list(map(int, losses)))\n    answer = min_losses == 4\n    return answer\n\n### END"}
{"id": "8492f5c8-43ae-41a1-a77a-f68ccaf35833", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = yrjö väisälä\ntable_data = [[\"1391 carelia\",\"1398 donnera\",\"1405 sibelius\",\"1406 komppa\",\"1407 lindelöf\"],[\"1421 esperanto\",\"1424 sundmania\",\"1446 sillanpää\",\"1447 utra\",\"1448 lindbladia\"],[\"1449 virtanen\",\"1450 raimonda\",\"1451 granö\",\"1453 fennia\",\"1454 kalevala\"],[\"1460 haltia\",\"1462 zamenhof\",\"1463 nordenmarkia\",\"1471 tornio\",\"1472 muonio\"],[\"1473 ounas\",\"1477 bonsdorffia\",\"1478 vihuri\",\"1479 inkeri\",\"1480 aunus\"],[\"1483 hakoila\",\"1488 aura\",\"1492 oppolzer\",\"1494 savo\",\"1495 helsinki\"],[\"1496 turku\",\"1497 tampere\",\"1498 lahti\",\"1499 pori\",\"1500 jyväskylä\"],[\"1503 kuopio\",\"1518 rovaniemi\",\"1519 kajaani\",\"1520 imatra\",\"1521 seinäjoki\"],[\"1523 pieksämäki\",\"1524 joensuu\",\"1525 savonlinna\",\"1526 mikkeli\",\"1527 malmquista\"],[\"1529 oterma\",\"1530 rantaseppä\",\"1532 inari\",\"1533 saimaa\",\"1534 näsi\"],[\"1535 päijänne\",\"1536 pielinen\",\"1541 estonia\",\"1542 schalén\",\"1548 palomaa\"],[\"1549 mikko\",\"1551 argelander\",\"1552 bessel\",\"1567 alikoski\",\"1631 kopff\"],[\"1646 rosseland\",\"1656 suomi\",\"1659 punkaharju\",\"1677 tycho brahe\",\"1678 hveen\"],[\"1696 nurmela\",\"1699 honkasalo\",\"1723 klemola\",\"1740 paavo nurmi\",\"1757 porvoo\"],[\"1883 rimito\",\"1928 summa\",\"1929 kollaa\",\"1947 iso - heikkilä\",\"2020 ukko\"],[\"2067 aksnes\",\"2091 sampo\",\"2096 väinö\",\"2194 arpola\",\"2204 lyyli\"],[\"2243 lönnrot\",\"2258 viipuri\",\"2292 seili\",\"2299 hanko\",\"2333 porthan\"],[\"2379 heiskanen\",\"2397 lappajärvi\",\"2454 olaus magnus\",\"2464 nordenskiöld\",\"2479 sodankylä\"],[\"2486 metsähovi\",\"2502 nummela\",\"2512 tavastia\",\"2535 hämeenlinna\",\"2638 gadolin\"],[\"2639 planman\",\"2678 aavasaksa\",\"2679 kittisvaara\",\"2690 ristiina\",\"2715 mielikki\"],[\"2716 tuulikki\",\"2733 hamina\",\"2737 kotka\",\"2750 loviisa\",\"2802 weisell\"],[\"2820 iisalmi\",\"2826 ahti\",\"2885 palva\",\"2898 neuvo\",\"2962 otto\"],[\"2972 niilo\",\"3037 alku\",\"3099 hergenrother\",\"3166 klondike\",\"3212 agricola\"],[\"3223 forsius\",\"3272 tillandz\",\"3281 maupertuis\",\"3522 becker\",\"3606 pohjola\"],[\"3897 louhi\",\"4181 kivi\",\"4266 waltari\",\"4512 sinuhe\",\"5073 junttura\"]]\nQuestion = Is it true that in 1929 , kollaa was the 1405 sibelius of the asteroid which in 1407 lindelöf flew by 2020 ukko?\n\n### RESPONSE:\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    answer = equal_to(\"1929 kollaa\", \"1405 sibelius\") and equal_to(\"1407 lindelöf\", \"2020 ukko\")\n    return answer\n\n### END"}
{"id": "12bb8039-385a-408a-926a-5a6771d9e301", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of solar car teams\ntable_data = [[\"year started\", \"number of cars\", \"current car\", \"car\", \"website\"],[\"1998\", \"7\", \"b - 7\", \"77\", \"english\"],[\"1992\", \"7\", \"ã‰clipse 7\", \"92\", \"french english\"],[\"1998\", \"6\", \"esteban vi\", \"55\", \"french english\"],[\"1992\", \"3\", \"isun\", \"66\", \"french english\"],[\"1997\", \"4\", \"phoenix ii\", \"116\", \"english\"],[\"1990\", \"10\", \"midnight sun x\", \"24\", \"english\"],[\"2008\", \"1\", \"arctic sun\", \"none\", \"english\"],[\"1988\", \"11\", \"aurum\", \"100\", \"english\"],[\"1991\", \"6\", \"sunstang\", \"96\", \"english\"],[\"2008\", \"1\", \"raven\", \"none\", \"english\"],[\"2004\", \"4\", \"schulich delta\", \"65\", \"english\"],[\"1989\", \"2\", \"ralos ii\", \"125\", \"english\"],[\"1999\", \"1\", \"xof1\", \"125\", \"english french\"]]\nQuestion = Is it true that 1988 started is the lowest one that has a number of cars larger than 7 , and a car of 100 in the french english website?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    years_started = get_column_by_name(table_data, \"year started\")\n    number_of_cars = get_column_by_name(table_data, \"number of cars\")\n    cars = get_column_by_name(table_data, \"car\")\n    websites = get_column_by_name(table_data, \"website\")\n    answer = False\n    for year_started, number_of_car, car, website in zip(years_started, number_of_cars, cars, websites):\n        if equal_to(year_started, \"1988\") and greater(int(number_of_car), 7) and equal_to(car, \"100\") and equal_to(website, \"french english\"):\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "6ada3310-55c5-459b-8d10-404267eb8196", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = india national under - 23 football team results\ntable_data = [[\"date\", \"tournament\", \"location\", \"opponent\", \"stadium\", \"score\", \"indian scorers\"],[\"23 february 2011\", \"2012 olympic qualifier\", \"pune , india\", \"myanmar\", \"balewadi sports complex\", \"2 - 1\", \"jeje lalpekhlua , malsawmfela\"],[\"9 march 2011\", \"2012 olympic qualifier\", \"yangon , myanmar\", \"myanmar\", \"thuwunna stadium\", \"1 - 1\", \"chinadorai sabeeth\"],[\"19 june 2011\", \"2012 olympic qualifier\", \"doha , qatar\", \"qatar\", \"jassim bin hamad stadium\", \"1 - 3\", \"jeje lalpekhlua\"],[\"23 june 2011\", \"2012 olympic qualifier\", \"pune , india\", \"qatar\", \"balewadi sports complex\", \"1 - 1\", \"own goal\"],[\"25 june 2012\", \"2014 afc u - 22 asian cup qualifiers\", \"muscat , oman\", \"iraq\", \"royal oman police stadium\", \"1 - 2\", \"alwyn george\"],[\"28 june 2012\", \"2014 afc u - 22 asian cup qualifiers\", \"muscat , oman\", \"united arab emirates\", \"royal oman police stadium\", \"1 - 1\", \"romeo fernandes\"]]\nQuestion = Is it true that the tournament on march 9 , 2011 against opponent myanmar was played at thuwunna stadium?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    for date, opponent, stadium in zip(dates, opponents, stadiums):\n        if date.lower() == \"9 march 2011\" and opponent.lower() == \"myanmar\":\n            answer = stadium.lower() == \"thuwunna stadium\"\n            break\n    return answer\n\n### END"}
{"id": "27c77f96-b632-48ed-9bda-27c019b14e6a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1971 nhl amateur draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"15\", \"ken baird\", \"defence\", \"canada\", \"california golden seals\", \"flin flon bombers (wchl)\"],[\"16\", \"henry boucha\", \"centre\", \"united states\", \"detroit red wings\", \"us national development team\"],[\"17\", \"bobby lalonde\", \"centre\", \"canada\", \"vancouver canucks\", \"montreal junior canadiens (oha)\"],[\"18\", \"brian mckenzie\", \"left wing\", \"canada\", \"pittsburgh penguins\", \"st catharines black hawks (oha)\"],[\"19\", \"craig ramsay\", \"left wing\", \"canada\", \"buffalo sabres\", \"peterborough petes (oha)\"],[\"20\", \"larry robinson\", \"defence\", \"canada\", \"montreal canadiens\", \"kitchener rangers (oha)\"],[\"21\", \"rod norrish\", \"left wing\", \"canada\", \"minnesota north stars\", \"regina pats (wchl)\"],[\"22\", \"rick kehoe\", \"right wing\", \"canada\", \"toronto maple leafs\", \"hamilton red wings (oha)\"],[\"23\", \"dave fortier\", \"defence\", \"canada\", \"toronto maple leafs\", \"st catharines black hawks (oha)\"],[\"24\", \"michel deguise\", \"goaltender\", \"canada\", \"montreal canadiens\", \"sorel eperviers (qmjhl)\"],[\"25\", \"terry french\", \"centre\", \"canada\", \"montreal canadiens\", \"ottawa 67 's (oha)\"],[\"26\", \"dave kryskow\", \"left wing\", \"canada\", \"chicago black hawks\", \"edmonton oil kings (wchl)\"],[\"27\", \"tom williams\", \"left wing\", \"canada\", \"new york rangers\", \"hamilton red wings (oha)\"],[\"28\", \"curt ridley\", \"goaltender\", \"canada\", \"boston bruins\", \"portage terriers (mjhl)\"]]\nQuestion = Is it true that canada is the nationality of the player from buffalo sabres?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    nhl_teams = get_column_by_name(table_data, \"nhl team\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    for nhl_team, nationality in zip(nhl_teams, nationalities):\n        if \"buffalo sabres\" in nhl_team.lower():\n            answer = \"canada\" in nationality.lower()\n            break\n    return answer\n\n### END"}
{"id": "70c55c59-7677-43a9-b271-0258bd54e0bd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1930 grand prix season\ntable_data = [[\"name\",\"circuit\",\"date\",\"winning driver\",\"winning constructor\",\"report\"],[\"circuit d'esterel plage\",\"saint - raphaël\",\"2 march\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"tripoli grand prix\",\"tripoli\",\"23 march\",\"baconin borzacchini\",\"maserati\",\"report\"],[\"monaco grand prix\",\"monte carlo\",\"6 april\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"alessandria circuit\",\"bordino\",\"20 april\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"oran grand prix\",\"arcole\",\"27 april\",\"jean de maleplane\",\"bugatti\",\"report\"],[\"targa florio\",\"madonie\",\"4 may\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"picardy grand prix\",\"péronne\",\"18 may\",\"max fourny\",\"bugatti\",\"report\"],[\"rome grand prix\",\"tre fontane\",\"25 may\",\"luigi arcangeli\",\"maserati\",\"report\"],[\"grand prix des frontières\",\"chimay\",\"9 june\",\"georges de marotte\",\"salmson\",\"report\"],[\"lyon grand prix\",\"quincieux\",\"15 june\",\"louis chiron\",\"bugatti\",\"report\"],[\"grand prix de la marne\",\"reims\",\"29 june\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"eifelrennen\",\"nürburgring\",\"20 july\",\"heinrich - joachim von morgen\",\"bugatti\",\"report\"],[\"dieppe grand prix\",\"dieppe\",\"20 july\",\"marcel lehoux\",\"bugatti\",\"report\"],[\"coppa ciano\",\"montenero\",\"3 august\",\"luigi fagioli\",\"maserati\",\"report\"],[\"dauphiné circuit\",\"grenoble\",\"10 august\",\"philippe étancelin\",\"bugatti\",\"report\"],[\"coppa acerbo\",\"pescara\",\"17 august\",\"achille varzi\",\"maserati\",\"report\"],[\"grand prix du comminges\",\"saint - gaudens\",\"17 august\",\"françois miquel\",\"bugatti\",\"report\"],[\"monza grand prix\",\"monza\",\"7 september\",\"achille varzi\",\"maserati\",\"report\"],[\"lviv grand prix\",\"lviv\",\"8 september\",\"henryk liefeldt\",\"austro daimler\",\"report\"],[\"masaryk circuit\",\"brno\",\"28 september\",\"hermann of leiningen\",\"bugatti\",\"report\"],[\"san sebastián grand prix\",\"lasarte\",\"5 october\",\"achille varzi\",\"maserati\",\"report\"]]\nQuestion = Is it true that the report has a name of lyon grand prix more than one time?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef appears_more_than_once(value, lst):\n    return lst.count(value) > 1\n\ndef solution(table_data):\n    column_name = get_column_by_name(table_data, \"name\")\n    answer = appears_more_than_once(\"lyon grand prix\", column_name)\n    return answer\n\n### END"}
{"id": "f5007a5a-4164-446c-b58b-804faf195fc8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2004 - 05 in scottish football\ntable_data = [[\"date\",\"venue\",\"score\",\"competition\",\"report\"],[\"18 august\",\"hampden park , glasgow (h)\",\"0 - 3\",\"friendly\",\"bbc sport\"],[\"3 september\",\"estadio ciudad de valencia , valencia (a)\",\"1 - 1\",\"friendly\",\"bbc sport\"],[\"8 september\",\"hampden park , glasgow (h)\",\"0 - 0\",\"wcq5\",\"bbc sport\"],[\"9 october\",\"hampden park , glasgow (h)\",\"0 - 1\",\"wcq5\",\"bbc sport\"],[\"13 october\",\"republican stadium , chişinău (a)\",\"1 - 1\",\"wcq5\",\"bbc sport\"],[\"17 november\",\"easter road , edinburgh (h)\",\"1 - 4\",\"friendly\",\"bbc sport\"],[\"26 march\",\"san siro , milan (a)\",\"0 - 2\",\"wcq5\",\"bbc sport\"],[\"4 june\",\"hampden park , glasgow (h)\",\"2 - 0\",\"wcq5\",\"bbc sport\"],[\"8 june\",\"dinamo stadion , minsk (a)\",\"0 - 0\",\"wcq5\",\"bbc sport\"]]\nQuestion = Is it true that on 4 june the score was 2 - 0?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    scores = get_column_by_name(table_data, \"score\")\n    for date, score in zip(dates, scores):\n        if \"4 june\" in date.lower():\n            answer = equal_to(score, \"2 - 0\")\n            break \n    return answer\n\n### END"}
{"id": "c54343f2-693e-48a6-99a7-2b4d84643962", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1930 grand prix season\ntable_data = [[\"name\",\"circuit\",\"date\",\"winning driver\",\"winning constructor\",\"report\"],[\"circuit d'esterel plage\",\"saint - raphaël\",\"2 march\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"tripoli grand prix\",\"tripoli\",\"23 march\",\"baconin borzacchini\",\"maserati\",\"report\"],[\"monaco grand prix\",\"monte carlo\",\"6 april\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"alessandria circuit\",\"bordino\",\"20 april\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"oran grand prix\",\"arcole\",\"27 april\",\"jean de maleplane\",\"bugatti\",\"report\"],[\"targa florio\",\"madonie\",\"4 may\",\"achille varzi\",\"alfa romeo\",\"report\"],[\"picardy grand prix\",\"péronne\",\"18 may\",\"max fourny\",\"bugatti\",\"report\"],[\"rome grand prix\",\"tre fontane\",\"25 may\",\"luigi arcangeli\",\"maserati\",\"report\"],[\"grand prix des frontières\",\"chimay\",\"9 june\",\"georges de marotte\",\"salmson\",\"report\"],[\"lyon grand prix\",\"quincieux\",\"15 june\",\"louis chiron\",\"bugatti\",\"report\"],[\"grand prix de la marne\",\"reims\",\"29 june\",\"rené dreyfus\",\"bugatti\",\"report\"],[\"eifelrennen\",\"nürburgring\",\"20 july\",\"heinrich - joachim von morgen\",\"bugatti\",\"report\"],[\"dieppe grand prix\",\"dieppe\",\"20 july\",\"marcel lehoux\",\"bugatti\",\"report\"],[\"coppa ciano\",\"montenero\",\"3 august\",\"luigi fagioli\",\"maserati\",\"report\"],[\"dauphiné circuit\",\"grenoble\",\"10 august\",\"philippe étancelin\",\"bugatti\",\"report\"],[\"coppa acerbo\",\"pescara\",\"17 august\",\"achille varzi\",\"maserati\",\"report\"],[\"grand prix du comminges\",\"saint - gaudens\",\"17 august\",\"françois miquel\",\"bugatti\",\"report\"],[\"monza grand prix\",\"monza\",\"7 september\",\"achille varzi\",\"maserati\",\"report\"],[\"lviv grand prix\",\"lviv\",\"8 september\",\"henryk liefeldt\",\"austro daimler\",\"report\"],[\"masaryk circuit\",\"brno\",\"28 september\",\"hermann of leiningen\",\"bugatti\",\"report\"],[\"san sebastián grand prix\",\"lasarte\",\"5 october\",\"achille varzi\",\"maserati\",\"report\"]]\nQuestion = Is it true that the report has a winning constructor of maserati less than three times?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    winning_constructors = get_column_by_name(table_data, \"winning constructor\")\n    maserati_count = count_occurrences(\"maserati\", winning_constructors)\n    answer = less_than(maserati_count, 3)\n    return answer\n\n### END"}
{"id": "ebd45ad7-e84a-4ce6-8d6e-9aefef926cbe", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = history of test cricket from 1901 to 1914\ntable_data = [[\"date\", \"home captain\", \"away captain\", \"venue\", \"result\"],[\"2 , 3 , 4 jan 1906\", \"percy sherwell\", \"plum warner\", \"old wanderers\", \"sa by 1 wkt\"],[\"6 , 7 , 8 mar 1906\", \"percy sherwell\", \"plum warner\", \"old wanderers\", \"sa by 9 wkts\"],[\"10 , 12 , 13 , 14 mar 1906\", \"percy sherwell\", \"plum warner\", \"old wanderers\", \"sa by 243 runs\"],[\"24 , 26 , 27 mar 1906\", \"percy sherwell\", \"plum warner\", \"newlands\", \"eng by 4 wkts\"],[\"30 , 31 mar , 2 apr 1906\", \"percy sherwell\", \"plum warner\", \"newlands\", \"sa by inns&16 runs\"]]\nQuestion = Is it true that eng by 4 wkts is the final result of the newlands match?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"venue\")\n    results = get_column_by_name(table_data, \"result\")\n    for venue, result in zip(venues, results):\n        if venue.lower() == \"newlands\":\n            answer = equal_to(result, \"eng by 4 wkts\")\n            break \n    return answer\n\n### END"}
{"id": "5528245f-8472-4fda-ac7b-a8ecaabc4589", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2005 cfl draft\ntable_data = [[\"pick\", \"cfl team\", \"player\", \"position\", \"college\"],[\"45\", \"calgary stampeders\", \"brett ralph\", \"wr\", \"alberta\"],[\"46\", \"ottawa renegades\", \"lenard semajuste\", \"fb\", \"adams state\"],[\"47\", \"winnipeg blue bombers\", \"ryan bisson\", \"ol\", \"northwood\"],[\"48\", \"saskatchewan roughriders\", \"ryan gottselig\", \"dl\", \"saskatchewan\"],[\"49\", \"montreal alouettes (via edmonton)\", \"adam eckert\", \"wr\", \"dickinson state\"],[\"50\", \"hamilton tiger - cats\", \"andrew paopao\", \"dl\", \"san jose state\"],[\"51\", \"montreal alouettes\", \"olivier manigat\", \"ol\", \"columbia\"],[\"52\", \"bc lions\", \"karl ortmanns\", \"ol\", \"acadia\"],[\"53\", \"toronto argonauts\", \"ian forde\", \"rb\", \"waterloo\"]]\nQuestion = Is it true that andrew paopao plays the dl position?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    positions = get_column_by_name(table_data, \"position\")\n    for player, position in zip(players, positions):\n        if player.lower() == \"andrew paopao\":\n            answer = equal_to(position, \"dl\")\n            break \n    return answer\n\n### END"}
{"id": "5a356a2a-9508-4dda-9c05-49722216078a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = strikeout\ntable_data = [[\"pitcher\", \"strikeouts\", \"season\", \"team\", \"league\", \"overall rank\"],[\"matt kilroy\", \"513\", \"1886\", \"baltimore orioles\", \"aa\", \"1\"],[\"toad ramsey\", \"499\", \"1886\", \"louisville colonels\", \"aa\", \"2\"],[\"dupee shaw\", \"451\", \"1884\", \"detroit wolverines / boston reds\", \"nl / ua\", \"4\"],[\"old hoss radbourn\", \"441\", \"1884\", \"providence grays\", \"nl\", \"5\"],[\"charlie buffington\", \"417\", \"1884\", \"boston beaneaters\", \"nl\", \"6\"],[\"guy hecker\", \"385\", \"1884\", \"louisville eclipse\", \"aa\", \"7\"],[\"nolan ryan\", \"383\", \"1973\", \"california angels\", \"al\", \"8\"],[\"sandy koufax\", \"382\", \"1965\", \"los angeles dodgers\", \"nl\", \"9\"]]\nQuestion = Is it true that matt kilrory has the highest overall rank of 1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    pitchers = get_column_by_name(table_data, \"pitcher\")\n    overall_ranks = get_column_by_name(table_data, \"overall rank\")\n    for pitcher, overall_rank in zip(pitchers, overall_ranks):\n        if pitcher.lower() == \"matt kilroy\":\n            answer = equal_to(overall_rank, \"1\")\n            break \n    return answer\n\n### END"}
{"id": "b166c47e-13fb-483e-87cd-a6e5e8cc911a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"episode\", \"broadcast date\", \"run time\", \"viewers (in millions)\", \"archive\"],[\"episode 1\", \"21 march 1970\", \"24:33\", \"7.1\", \"pal 2 colour videotape\"],[\"episode 2\", \"28 march 1970\", \"24:39\", \"7.6\", \"chroma dot colour recovery\"],[\"episode 3\", \"4 april 1970\", \"24:38\", \"8.0\", \"chroma dot colour recovery\"],[\"episode 4\", \"11 april 1970\", \"24:37\", \"9.3\", \"chroma dot colour recovery\"],[\"episode 5\", \"18 april 1970\", \"24:17\", \"7.1\", \"pal d3 colour restoration\"],[\"episode 6\", \"25 april 1970\", \"24:31\", \"6.9\", \"chroma dot colour recovery\"],[\"episode 7\", \"2 may 1970\", \"24:32\", \"6.4\", \"chroma dot colour recovery\"]]\nQuestion = Is it true that on 28 march 1970 7.6 million viewers tuned in?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    broadcast_dates = get_column_by_name(table_data, \"broadcast date\")\n    viewers = get_column_by_name(table_data, \"viewers (in millions)\")\n    for date, viewer in zip(broadcast_dates, viewers):\n        if date == \"28 march 1970\":\n            answer = equal_to(viewer, \"7.6\")\n            break \n    return answer\n\n### END"}
{"id": "5e71fc5e-b962-44ad-a1ae-9449ba550dc3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"game\", \"date\", \"home team\", \"result\", \"road team\"],[\"game 1\", \"april 14\", \"boston\", \"117 - 114\", \"los angeles\"],[\"game 2\", \"april 16\", \"boston\", \"113 - 106\", \"los angeles\"],[\"game 3\", \"april 17\", \"los angeles\", \"119 - 99\", \"boston\"],[\"game 4\", \"april 19\", \"los angeles\", \"105 - 108\", \"boston\"],[\"game 5\", \"april 21\", \"boston\", \"119 - 126\", \"los angeles\"],[\"game 6\", \"april 24\", \"los angeles\", \"109 - 112\", \"boston\"]]\nQuestion = Is it true that los angeles played boston on the road on april 16?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    home_teams = get_column_by_name(table_data, \"home team\")\n    road_teams = get_column_by_name(table_data, \"road team\")\n    answer = False\n    for date, home_team, road_team in zip(dates, home_teams, road_teams):\n        if date == \"april 16\" and home_team == \"boston\" and road_team == \"los angeles\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "0c12ad66-9795-44fc-adde-aee6eda00237", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = zorro (musical)\ntable_data = [[\"year\", \"award\", \"category\", \"nominee\", \"result\"],[\"2009\", \"laurence olivier award\", \"best new musical\", \"best new musical\", \"nominated\"],[\"2009\", \"laurence olivier award\", \"best actor in a musical\", \"matt rawle\", \"nominated\"],[\"2009\", \"laurence olivier award\", \"best actress in a musical\", \"emma williams\", \"nominated\"],[\"2009\", \"laurence olivier award\", \"best performance in a supporting role in a musical\", \"lesli margherita\", \"won\"],[\"2009\", \"laurence olivier award\", \"best theatre choreographer\", \"rafael amargo\", \"nominated\"]]\nQuestion = Is it true that rafael amargo was nominated for best theatre choreographer in 2010?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    nominees = get_column_by_name(table_data, \"nominee\")\n    categories = get_column_by_name(table_data, \"category\")\n    for year, nominee, category in zip(years, nominees, categories):\n        if equal_to(year, \"2010\") and equal_to(nominee.lower(), \"rafael amargo\") and equal_to(category.lower(), \"best theatre choreographer\"):\n            answer = True\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "1601817e-8342-4ccb-9d61-2b70a8fa6b98", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2011 capital one world women 's curling championship\ntable_data = [[\"country\",\"skip\",\"w\",\"l\",\"pf\",\"pa\",\"ends won\",\"ends lost\",\"blank ends\",\"stolen ends\",\"shot %\"],[\"sweden\",\"anette norberg\",\"9\",\"2\",\"67\",\"53\",\"40\",\"41\",\"12\",\"8\",\"73%\"],[\"china\",\"wang bingyu\",\"8\",\"3\",\"64\",\"43\",\"44\",\"30\",\"14\",\"16\",\"82%\"],[\"denmark\",\"lene nielsen\",\"7\",\"4\",\"77\",\"55\",\"47\",\"33\",\"15\",\"14\",\"78%\"],[\"canada\",\"amber holland\",\"7\",\"4\",\"68\",\"55\",\"42\",\"40\",\"12\",\"7\",\"82%\"],[\"switzerland\",\"mirjam ott\",\"7\",\"4\",\"68\",\"58\",\"46\",\"37\",\"15\",\"15\",\"82%\"],[\"russia\",\"anna sidorova\",\"6\",\"5\",\"70\",\"65\",\"40\",\"45\",\"8\",\"8\",\"72%\"],[\"united states\",\"patti lank\",\"6\",\"5\",\"64\",\"63\",\"48\",\"36\",\"10\",\"17\",\"72%\"],[\"germany\",\"andrea schöpp\",\"5\",\"6\",\"61\",\"67\",\"40\",\"49\",\"12\",\"13\",\"78%\"],[\"scotland\",\"anna sloan\",\"4\",\"7\",\"49\",\"69\",\"33\",\"43\",\"15\",\"6\",\"76%\"],[\"norway\",\"linn githmark\",\"3\",\"8\",\"54\",\"71\",\"42\",\"48\",\"15\",\"7\",\"77%\"],[\"czech republic\",\"anna kubešková\",\"2\",\"9\",\"40\",\"73\",\"35\",\"43\",\"11\",\"7\",\"71%\"]]\nQuestion = Is it true that scotland had 43 ends lost and 6 stolen ends?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    countries = get_column_by_name(table_data, \"country\")\n    ends_lost = get_column_by_name(table_data, \"ends lost\")\n    stolen_ends = get_column_by_name(table_data, \"stolen ends\")\n    for country, end_lost, stolen_end in zip(countries, ends_lost, stolen_ends):\n        if country.lower() == \"scotland\":\n            answer = equal_to(end_lost, \"43\") and equal_to(stolen_end, \"6\")\n            break \n    return answer\n\n### END"}
{"id": "1ad375ef-ee5a-4f29-a56d-fa603ae7b314", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1972 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"st kilda\", \"13.12 (90)\", \"melbourne\", \"13.11 (89)\", \"moorabbin oval\", \"18836\", \"19 august 1972\"],[\"south melbourne\", \"9.12 (66)\", \"footscray\", \"11.13 (79)\", \"lake oval\", \"9154\", \"19 august 1972\"],[\"richmond\", \"20.17 (137)\", \"fitzroy\", \"13.22 (100)\", \"mcg\", \"27651\", \"19 august 1972\"],[\"geelong\", \"17.10 (112)\", \"collingwood\", \"17.9 (111)\", \"kardinia park\", \"23108\", \"19 august 1972\"],[\"north melbourne\", \"8.12 (60)\", \"carlton\", \"23.11 (149)\", \"arden street oval\", \"11271\", \"19 august 1972\"],[\"hawthorn\", \"15.16 (106)\", \"essendon\", \"12.15 (87)\", \"vfl park\", \"36749\", \"19 august 1972\"]]\nQuestion = Is it true that the lake oval venue hosted a game for south melbourne and carlton?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    answer = False\n    for home_team, away_team, venue in zip(home_teams, away_teams, venues):\n        if home_team.lower() == \"south melbourne\" and away_team.lower() == \"carlton\" and venue.lower() == \"lake oval\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "24757f7a-c907-45fe-995f-f3ff10b46166", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = big day out lineups by year\ntable_data = [[\"sydney\", \"melbourne\", \"perth\", \"adelaide\", \"gold coast\", \"auckland\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"cancelled\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\"],[\"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"no\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"no\"],[\"no\", \"yes\", \"no\", \"no\", \"no\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"]]\nQuestion = Is it true that gold coast yes has a perth of no , a sydney of yes , and an auckland of yes?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    sydney = get_column_by_name(table_data, \"sydney\")\n    perth = get_column_by_name(table_data, \"perth\")\n    gold_coast = get_column_by_name(table_data, \"gold coast\")\n    auckland = get_column_by_name(table_data, \"auckland\")\n    for s, p, g, a in zip(sydney, perth, gold_coast, auckland):\n        if equal_to(g, \"yes\") and equal_to(s, \"yes\") and equal_to(p, \"no\") and equal_to(a, \"yes\"):\n            answer = True\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "009a1acb-395a-45b3-94e1-65b41c5508ce", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2000 - 01 prva hnl\ntable_data = [[\"team\",\"manager\",\"home city\",\"stadium\",\"capacity\"],[\"cibalia\",\"davor mladina\",\"vinkovci\",\"stadion hnk cibalia\",\"9920\"],[\"čakovec\",\"ilija lončarević\",\"čakovec\",\"stadion src mladost\",\"8000\"],[\"dinamo zagreb\",\"marijan vlak\",\"zagreb\",\"stadion maksimir\",\"37168\"],[\"hajduk split\",\"petar nadoveza\",\"split\",\"gradski stadion u poljudu\",\"35000\"],[\"hrvatski dragovoljac\",\"milivoj bračun\",\"zagreb\",\"stadion nšc stjepan spajić\",\"5000\"],[\"marsonia\",\"stjepan deverić\",\"slavonski brod\",\"gradski stadion uz savu\",\"10000\"],[\"osijek\",\"stanko mršić\",\"osijek\",\"stadion gradski vrt\",\"19500\"],[\"rijeka\",\"nenad gračan\",\"rijeka\",\"stadion na kantridi\",\"10275\"],[\"slaven belupo\",\"mladen frančić\",\"koprivnica\",\"gradski stadion u koprivnici\",\"4000\"],[\"šibenik\",\"milo nižetić\",\"šibenik\",\"stadion šubićevac\",\"8000\"],[\"varteks\",\"ivan katalinić\",\"varaždin\",\"stadion nk varteks\",\"10800\"],[\"nk zagreb\",\"branko karačić\",\"zagreb\",\"stadion u kranjčevićevoj ulici\",\"8850\"]]\nQuestion = Is it true that the team with a home city of koprivnica has milo nižetić as manager?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_cities = get_column_by_name(table_data, \"home city\")\n    managers = get_column_by_name(table_data, \"manager\")\n    for home_city, manager in zip(home_cities, managers):\n        if home_city.lower() == \"koprivnica\" and manager.lower() == \"milo nižetić\":\n            return True\n    return False\n\n### END"}
{"id": "f2a41895-5f02-4b61-a703-b29ded826779", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = comparison of e - book formats\ntable_data = [[\"format\", \"filename extension\", \"image support\", \"interactivity support\", \"word wrap support\", \"open standard\"],[\"djvu\", \"djvu\", \"yes\", \"no\", \"no\", \"yes\"],[\"epub (idpf)\", \"epub\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"fictionbook\", \"fb2\", \"yes\", \"no\", \"yes\", \"yes\"],[\"html\", \"html\", \"yes\", \"no\", \"yes\", \"yes\"],[\"kindle\", \"azw\", \"yes\", \"yes\", \"yes\", \"no\"],[\"microsoft reader\", \"lit\", \"yes\", \"no\", \"yes\", \"no\"],[\"mobipocket\", \"prc , mobi\", \"yes\", \"yes\", \"yes\", \"no\"],[\"multimedia ebook\", \"exe\", \"yes\", \"yes\", \"no\", \"yes\"],[\"newton book\", \"pkg\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ereader\", \"pdb\", \"yes\", \"no\", \"yes\", \"no\"],[\"plain text\", \"txt\", \"no\", \"no\", \"yes\", \"yes\"],[\"plucker\", \"pdb\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"portable document format\", \"pdf\", \"yes\", \"yes\", \"yes though not all readers implement support\", \"yes\"],[\"postscript\", \"ps\", \"yes\", \"no\", \"no\", \"yes\"],[\"tome raider\", \"tr2 , tr3\", \"yes\", \"no\", \"yes\", \"no\"],[\"openxps\", \"oxps , xps\", \"yes\", \"no\", \"no\", \"yes\"]]\nQuestion = Is it true that fictionbook does not have interactivity support?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    formats = get_column_by_name(table_data, \"format\")\n    interactivity_supports = get_column_by_name(table_data, \"interactivity support\")\n    for format, interactivity_support in zip(formats, interactivity_supports):\n        if format.lower() == \"fictionbook\":\n            answer = interactivity_support.lower() == \"no\"\n            break\n    return answer\n\n### END"}
{"id": "0d65e9a0-2c52-4592-8434-aee233c53d54", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = comparison of e - book formats\ntable_data = [[\"format\", \"filename extension\", \"image support\", \"interactivity support\", \"word wrap support\", \"open standard\"],[\"djvu\", \"djvu\", \"yes\", \"no\", \"no\", \"yes\"],[\"epub (idpf)\", \"epub\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"fictionbook\", \"fb2\", \"yes\", \"no\", \"yes\", \"yes\"],[\"html\", \"html\", \"yes\", \"no\", \"yes\", \"yes\"],[\"kindle\", \"azw\", \"yes\", \"yes\", \"yes\", \"no\"],[\"microsoft reader\", \"lit\", \"yes\", \"no\", \"yes\", \"no\"],[\"mobipocket\", \"prc , mobi\", \"yes\", \"yes\", \"yes\", \"no\"],[\"multimedia ebook\", \"exe\", \"yes\", \"yes\", \"no\", \"yes\"],[\"newton book\", \"pkg\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ereader\", \"pdb\", \"yes\", \"no\", \"yes\", \"no\"],[\"plain text\", \"txt\", \"no\", \"no\", \"yes\", \"yes\"],[\"plucker\", \"pdb\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"portable document format\", \"pdf\", \"yes\", \"yes\", \"yes though not all readers implement support\", \"yes\"],[\"postscript\", \"ps\", \"yes\", \"no\", \"no\", \"yes\"],[\"tome raider\", \"tr2 , tr3\", \"yes\", \"no\", \"yes\", \"no\"],[\"openxps\", \"oxps , xps\", \"yes\", \"no\", \"no\", \"yes\"]]\nQuestion = Is it true that plain text (txt) file extensions has no interactivity support or image support , but it does have open standard?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    formats = get_column_by_name(table_data, \"format\")\n    image_supports = get_column_by_name(table_data, \"image support\")\n    interactivity_supports = get_column_by_name(table_data, \"interactivity support\")\n    open_standards = get_column_by_name(table_data, \"open standard\")\n    for format, image_support, interactivity_support, open_standard in zip(formats, image_supports, interactivity_supports, open_standards):\n        if format.lower() == \"plain text\":\n            answer = equal_to(image_support, \"no\") and equal_to(interactivity_support, \"no\") and equal_to(open_standard, \"yes\")\n            break \n    return answer\n\n### END"}
{"id": "74b79a9a-f312-4081-a3d4-cb479e8c1e3d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"census year\", \"number of muslims 000\", \"population of england and wales 000\", \"muslim (% of total population)\", \"registered mosques\", \"muslims per mosque\"],[\"1961\", \"50\", \"46196\", \"0.11\", \"7\", \"7143\"],[\"1971\", \"226\", \"49152\", \"0.46\", \"30\", \"7533\"],[\"1981\", \"553\", \"49634\", \"1.11\", \"149\", \"3711\"],[\"1991\", \"950\", \"51099\", \"1.86\", \"443\", \"2144\"],[\"2001\", \"1600\", \"52042\", \"3.07\", \"614\", \"2606\"]]\nQuestion = Is it true that in the census year 2001 where there were 614 registered mosques , the total population had a percentage of muslims of 3.07 per cent?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    census_years = get_column_by_name(table_data, \"census year\")\n    muslim_percentages = get_column_by_name(table_data, \"muslim (% of total population)\")\n    registered_mosques = get_column_by_name(table_data, \"registered mosques\")\n    for census_year, muslim_percentage, registered_mosque in zip(census_years, muslim_percentages, registered_mosques):\n        if census_year == \"2001\" and registered_mosque == \"614\":\n            answer = equal_to(muslim_percentage, \"3.07\")\n            break \n    return answer\n\n### END"}
{"id": "858e6400-dd6e-4a56-8419-8664e1a88e5a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = ghost whisperer (season 3)\ntable_data = [[\"no in series\",\"no in season\",\"title\",\"directed by\",\"written by\", \"original air date\",\"us viewers (millions)\"],[\"45\", \"1\", \"the underneath\", \"john gray\", \"john gray\", \"september 28, 2007\", \"8.72\"],[\"46\", \"2\", \"don't try this at home\", \"ian sander\", \"teddy tenenbaum & laurie mccarthy\", \"october 5, 2007\", \"8.91\"],[\"47\", \"3\", \"haunted hero\", \"eric laneuville\", \"breen frazier & karl schaefer\", \"october 12, 2007\", \"8.90\"],[\"48\", \"4\", \"no safe place\", \"peter o'fallon\", \"jeannine renshaw\", \"october 19, 2007\", \"8.95\"],[\"49\", \"5\", \"weight of what was\", \"gloria muzio\", \"pk simonds\", \"october 26, 2007\", \"9.99\"],[\"50\", \"6\", \"double exposure\", \"eric laneuville\", \"laurie mccarthy\", \"november 2, 2007\", \"9.18\"],[\"51\", \"7\", \"unhappy medium\", \"frederick eo toye\", \"breen frazier\", \"november 9, 2007\", \"9.85\"],[\"52\", \"8\", \"bad blood\", \"peter werner\", \"teddy tenenbaum\", \"november 16, 2007\", \"9.56\"],[\"53\", \"9\", \"all ghosts lead to grandview\", \"frederick eo toye\", \"pk simonds & laurie mccarthy\", \"november 23, 2007\", \"9.98\"],[\"54\", \"10\", \"holiday spirit\", \"steven robman\", \"jeannine renshaw\", \"december 14, 2007\", \"9.80\"],[\"55\", \"11\", \"slam (aka slambook)\", \"mark rosman\", \"karl schaefer & daniel sinclair\", \"january 11, 2008\", \"9.86\"],[\"56\", \"12\", \"first do no harm\", \"ian sander\", \"john gray\", \"january 18, 2008\", \"9.91\"],[\"57\", \"13\", \"home but not alone\", \"eric laneuville\", \"pk simonds & laurie mccarthy\", \"april 4, 2008\", \"9.06\"],[\"58\", \"14\", \"the grave sitter\", \"frederick eo toye\", \"john gray\", \"april 11, 2008\", \"8.55\"],[\"59\", \"15\", \"horror show\", \"ian sander\", \"jeannine renshaw\", \"april 25, 2008\", \"8.98\"],[\"60\", \"16\", \"deadbeat dads\", \"gloria muzio\", \"mark b perry\", \"may 2, 2008\", \"9.21\"],[\"61\", \"17\", \"stranglehold (part 1)\", \"eric laneuville\", \"laurie mccarthy & pk simonds\", \"may 9, 2008\", \"8.78\"]]\nQuestion = Is it true that unhappy medium was written by breen frazier and had an original air date on november 16 , 2007?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    written_by = get_column_by_name(table_data, \"written by\")\n    air_dates = get_column_by_name(table_data, \"original air date\")\n    for title, writer, air_date in zip(titles, written_by, air_dates):\n        if title.lower() == \"unhappy medium\":\n            answer = writer.lower() == \"breen frazier\" and air_date.lower() == \"november 16 , 2007\"\n            break\n    return answer\n\n### END"}
{"id": "399f3a47-ffd4-4829-81f5-9b8823a417e5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2005 japanese television dramas\ntable_data = [[\"japanese title\", \"romaji title\", \"tv station\", \"episodes\", \"average ratings\"],[\"電車男\", \"densha otoko\", \"fuji tv\", \"11\", \"21.0%\"],[\"海猿 umizaru evolution\", \"umizaru evolution\", \"fuji tv\", \"11\", \"13.2%\"],[\"スローダンス\", \"slow dance\", \"fuji tv\", \"11\", \"16.8%\"],[\"がんばっていきまっしょい\", \"ganbatte ikimasshoi\", \"fuji tv\", \"10\", \"12.4%\"],[\"幸せになりたい!\", \"shiawase ni naritai!\", \"tbs\", \"10\", \"11.8%\"],[\"女系家族\", \"nyokei kazoku\", \"tbs\", \"11\", \"13.85%\"],[\"いま、会いにゆきます\", \"ima , ai ni yukimasu\", \"tbs\", \"10\", \"11%\"],[\"ドラゴン桜\", \"dragon zakura\", \"tbs\", \"11\", \"16.4%\"],[\"はるか17\", \"haruka seventeen\", \"tv asahi\", \"10\", \"8.9%\"],[\"菊次郎とさき 2\", \"kikujirou to saki 2\", \"ntv\", \"9\", \"14.9%\"],[\"女王の教室\", \"joou no kyoushitsu\", \"ntv\", \"11\", \"15.7%\"]]\nQuestion = Is it true that eleven episodes has a romaji title of slow dance with an average rating of 8.9%?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    romaji_titles = get_column_by_name(table_data, \"romaji title\")\n    episodes = get_column_by_name(table_data, \"episodes\")\n    average_ratings = get_column_by_name(table_data, \"average ratings\")\n    for romaji_title, episode, average_rating in zip(romaji_titles, episodes, average_ratings):\n        if romaji_title.lower() == \"slow dance\" and episode == \"11\":\n            answer = equal_to(average_rating, \"8.9%\")\n            break \n    return answer\n\n### END"}
{"id": "558eda7e-2fbf-411a-9927-6ddf3239b563", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = american dad! (season 1)\ntable_data = [[\"no in series\", \"title\", \"directed by\", \"written by\", \"original air date\", \"production code\", \"us viewers (millions)\"],[\"1\", \"pilot\", \"ron hughart\", \"seth macfarlane , mike barker & matt weitzman\", \"february 6 , 2005\", \"1ajn01\", \"15.10\"],[\"2\", \"threat levels\", \"brent woods\", \"david zuckerman\", \"may 1 , 2005\", \"1ajn02\", \"9.47\"],[\"3\", \"stan knows best\", \"pam cooke\", \"mike barker & matt weitzman\", \"may 8 , 2005\", \"1ajn03\", \"8.23\"],[\"4\", \"francine 's flashback\", \"caleb meurer & brent woods\", \"rick wiener & kenny schwartz\", \"may 15 , 2005\", \"1ajn05\", \"7.84\"],[\"5\", \"roger codger\", \"albert calleros\", \"dan vebber\", \"june 5 , 2005\", \"1ajn04\", \"6.09\"],[\"6\", \"homeland insecurity\", \"rodney clouden\", \"neal boushell & sam o'neal\", \"june 12 , 2005\", \"1ajn06\", \"6.85\"]]\nQuestion = Is it true that francine 's flashback had more than 7.84 million us viewers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    viewers = get_column_by_name(table_data, \"us viewers (millions)\")\n    for title, viewer in zip(titles, viewers):\n        if title.lower() == \"francine 's flashback\":\n            answer = greater(float(viewer), 7.84)\n            break \n    return answer\n\n### END"}
{"id": "1d0ff82f-51fd-4dd0-baa4-92684ad6b710", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date\", \"visitor\", \"score\", \"home\", \"record\"],[\"february 2\", \"vancouver\", \"5 - 1\", \"california\", \"15 - 28 - 5\"],[\"february 4\", \"chicago\", \"6 - 2\", \"vancouver\", \"15 - 29 - 5\"],[\"february 6\", \"montreal\", \"4 - 2\", \"vancouver\", \"15 - 30 - 5\"],[\"february 8\", \"philadelphia\", \"3 - 1\", \"vancouver\", \"15 - 31 - 5\"],[\"february 10\", \"vancouver\", \"1 - 9\", \"boston\", \"15 - 32 - 5\"],[\"february 12\", \"vancouver\", \"4 - 5\", \"st louis\", \"15 - 33 - 5\"],[\"february 13\", \"vancouver\", \"4 - 6\", \"pittsburgh\", \"15 - 34 - 5\"],[\"february 15\", \"new york\", \"5 - 1\", \"vancouver\", \"15 - 35 - 5\"],[\"february 18\", \"st louis\", \"2 - 5\", \"vancouver\", \"16 - 35 - 5\"],[\"february 19\", \"vancouver\", \"3 - 5\", \"los angeles\", \"16 - 36 - 5\"],[\"february 22\", \"boston\", \"4 - 3\", \"vancouver\", \"16 - 37 - 5\"],[\"february 24\", \"vancouver\", \"0 - 2\", \"detroit\", \"16 - 38 - 5\"],[\"february 26\", \"vancouver\", \"1 - 7\", \"toronto\", \"16 - 39 - 5\"],[\"february 27\", \"vancouver\", \"3 - 3\", \"chicago\", \"16 - 39 - 6\"],[\"february 29\", \"vancouver\", \"2 - 8\", \"detroit\", \"16 - 40 - 6\"]]\nQuestion = Is it true that the score on february 12 was 4 - 5?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    scores = get_column_by_name(table_data, \"score\")\n    for date, score in zip(dates, scores):\n        if date.lower() == \"february 12\":\n            answer = equal_to(score, \"4 - 5\")\n            break \n    return answer\n\n### END"}
{"id": "2112deb0-cc6f-4408-9f01-ee2232076946", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = heartland collegiate athletic conference\ntable_data = [[\"institution\", \"location\", \"nickname\", \"founded\", \"type\", \"enrollment\", \"joined\"],[\"anderson university\", \"anderson , indiana\", \"ravens\", \"1917\", \"private / church of god\", \"3065\", \"1987\"],[\"bluffton university\", \"bluffton , ohio\", \"beavers\", \"1899\", \"private / mennonite\", \"1191\", \"1998\"],[\"college of mount st joseph\", \"cincinnati , ohio\", \"lions\", \"1920\", \"private / catholic\", \"2259\", \"1998\"],[\"defiance college\", \"defiance , ohio\", \"yellow jackets\", \"1850\", \"private / united church of christ\", \"1000\", \"2000\"],[\"earlham college\", \"richmond , indiana\", \"quakers\", \"1847\", \"private / quaker\", \"1194\", \"2010\"],[\"franklin college\", \"franklin , indiana\", \"grizzlies\", \"1834\", \"private / baptist\", \"1000\", \"1987\"],[\"hanover college\", \"hanover , indiana\", \"panthers\", \"1827\", \"private / presbyterian\", \"1062\", \"1987\"],[\"manchester university\", \"north manchester , indiana\", \"spartans\", \"1860\", \"private / church of the brethren\", \"1250\", \"1987\"],[\"rose - hulman institute of technology\", \"terre haute , indiana\", \"fightin' engineers\", \"1874\", \"private / non - sectarian\", \"1970\", \"1988 1\"]]\nQuestion = Is it true that the institution nicknamed fightin' engineers was founded in 1874 in north manchester , indiana?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    nicknames = get_column_by_name(table_data, \"nickname\")\n    locations = get_column_by_name(table_data, \"location\")\n    founded_years = get_column_by_name(table_data, \"founded\")\n    for nickname, location, founded_year in zip(nicknames, locations, founded_years):\n        if nickname.lower() == \"fightin' engineers\":\n            answer = location.lower() == \"north manchester , indiana\" and founded_year == \"1874\"\n            break\n    return answer\n\n### END"}
{"id": "2bbd6b4d-6090-4afc-ad88-a8f5eb48ea47", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 boston celtics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"74\", \"april 1\", \"chicago\", \"106 - 92\", \"allen (22)\", \"perkins (9)\", \"rondo (10)\", \"united center 22225\", \"59 - 15\"],[\"75\", \"april 2\", \"indiana\", \"92 - 77\", \"garnett (20)\", \"garnett (11)\", \"rondo (6)\", \"td banknorth garden 18624\", \"60 - 15\"],[\"76\", \"april 5\", \"charlotte\", \"101 - 78\", \"powe (22)\", \"powe (9)\", \"rondo (5)\", \"charlotte bobcats arena 19403\", \"61 - 15\"],[\"77\", \"april 8\", \"milwaukee\", \"107 - 104 (ot)\", \"garnett (21)\", \"perkins (10)\", \"pierce (4)\", \"bradley center 15921\", \"62 - 15\"],[\"78\", \"april 9\", \"washington\", \"95 - 109\", \"pierce (28)\", \"garnett (14)\", \"pierce , rondo (7)\", \"verizon center 20173\", \"62 - 16\"],[\"79\", \"april 11\", \"milwaukee\", \"102 - 86\", \"rondo (16)\", \"garnett , posey (8)\", \"rondo (10)\", \"td banknorth garden 18624\", \"63 - 16\"],[\"80\", \"april 12\", \"atlanta\", \"99 - 89\", \"garnett (24)\", \"davis (10)\", \"cassell , rondo (5)\", \"philips arena 20098\", \"64 - 16\"],[\"81\", \"april 14\", \"new york\", \"99 - 93\", \"rondo (23)\", \"rondo (10)\", \"rondo (5)\", \"madison square garden 19763\", \"65 - 16\"],[\"82\", \"april 16\", \"new jersey\", \"105 - 94\", \"powe (27)\", \"powe (11)\", \"cassell (4)\", \"td banknorth garden 18624\", \"66 - 16\"]]\nQuestion = Is it true that on april 11 , rondo scored the most points (16)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    high_points = get_column_by_name(table_data, \"high points\")\n    for date, high_point in zip(dates, high_points):\n        if \"april 11\" in date.lower() and \"rondo (16)\" in high_point.lower():\n            return True\n    return False\n\n### END"}
{"id": "1ae1207d-8f7c-4cb2-aece-f5849e0b1ba0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2004 - 05 in scottish football\ntable_data = [[\"date\",\"venue\",\"score\",\"competition\",\"report\"],[\"18 august\",\"hampden park , glasgow (h)\",\"0 - 3\",\"friendly\",\"bbc sport\"],[\"3 september\",\"estadio ciudad de valencia , valencia (a)\",\"1 - 1\",\"friendly\",\"bbc sport\"],[\"8 september\",\"hampden park , glasgow (h)\",\"0 - 0\",\"wcq5\",\"bbc sport\"],[\"9 october\",\"hampden park , glasgow (h)\",\"0 - 1\",\"wcq5\",\"bbc sport\"],[\"13 october\",\"republican stadium , chişinău (a)\",\"1 - 1\",\"wcq5\",\"bbc sport\"],[\"17 november\",\"easter road , edinburgh (h)\",\"1 - 4\",\"friendly\",\"bbc sport\"],[\"26 march\",\"san siro , milan (a)\",\"0 - 2\",\"wcq5\",\"bbc sport\"],[\"4 june\",\"hampden park , glasgow (h)\",\"2 - 0\",\"wcq5\",\"bbc sport\"],[\"8 june\",\"dinamo stadion , minsk (a)\",\"0 - 0\",\"wcq5\",\"bbc sport\"]]\nQuestion = Is it true that the wcq5 game had a score of 0 - 0 at the hampden park , glawgow (h) venue?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"venue\")\n    scores = get_column_by_name(table_data, \"score\")\n    competitions = get_column_by_name(table_data, \"competition\")\n    for venue, score, competition in zip(venues, scores, competitions):\n        if venue.lower() == \"hampden park , glasgow (h)\" and competition.lower() == \"wcq5\":\n            answer = equal_to(score, \"0 - 0\")\n            break \n    return answer\n\n### END"}
{"id": "ca2d4b13-c5e3-47c0-8d9b-936967a050dd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = papal election , 1292 - 94\ntable_data = [[\"elector\",\"nationality\",\"order\",\"title\",\"elevated\",\"elevator\"],[\"latino malabranca orsini , op\",\"roman\",\"cardinal - bishop\",\"bishop of ostia e velletri\",\"1278 , march 12\",\"nicholas iii\"],[\"gerardo bianchi\",\"parmigiani\",\"cardinal - bishop\",\"bishop of sabina\",\"1278 , march 12\",\"nicholas iii\"],[\"giovanni boccamazza\",\"roman\",\"cardinal - bishop\",\"bishop of frascati\",\"1285 , december 22\",\"honorius iv\"],[\"matteo d'acquasparta , ofm\",\"ni todi\",\"cardinal - bishop\",\"bishop of porto e santa rufina\",\"1288 , may 16\",\"nicholas iv\"],[\"jean cholet\",\"french\",\"cardinal - priest\",\"titulus s cecilia\",\"1281 , april 12\",\"martin iv\"],[\"benedetto caetani\",\"ni anagni ( n catalonia family)\",\"cardinal - priest\",\"titulus ss silvestro e martino ai monti\",\"1281 , april 12\",\"martin iv\"],[\"hugues aycelin de billom , op\",\"french\",\"cardinal - priest\",\"titulus s sabina\",\"1288 , may 16\",\"nicholas iv\"],[\"pietro peregrosso\",\"ese milan\",\"cardinal - priest\",\"titulus s marco\",\"1288 , may 16\",\"nicholas iv\"],[\"matteo orsini rosso\",\"roman\",\"cardinal - deacon\",\"deacon of s maria in portico\",\"1262 , may 22\",\"urban iv\"],[\"giacomo colonna\",\"roman\",\"cardinal - deacon\",\"deacon of s maria in via lata\",\"1278 , march 12\",\"nicholas iii\"],[\"napoleone orsini\",\"roman\",\"cardinal - deacon\",\"deacon of s adriano\",\"1288 , may 16\",\"nicholas iv\"],[\"pietro colonna\",\"roman\",\"cardinal - deacon\",\"deacon of s eustachio\",\"1288 , may 16\",\"nicholas iv\"]]\nQuestion = Is it true that bishop of frascati has the title of jean cholet?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    electors = get_column_by_name(table_data, \"elector\")\n    titles = get_column_by_name(table_data, \"title\")\n    answer = False\n    for elector, title in zip(electors, titles):\n        if \"jean cholet\" in elector.lower() and \"bishop of frascati\" in title.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "ae180c5d-ac45-43f6-8bb4-041c8b540e14", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of americas records in swimming\ntable_data = [[\"event\", \"time\", \"nationality\", \"date\", \"meet\", \"location\"],[\"50 m freestyle\", \"20.91\", \"brazil\", \"18 december 2009\", \"brazilian championships\", \"são paulo, brazil\"],[\"100 m freestyle\", \"46.91\", \"brazil\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m freestyle\", \"1:42.96\", \"united states\", \"12 august 2008\", \"olympic games\", \"beijing, china\"],[\"400 m freestyle\", \"3:42.78\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"800 m freestyle\", \"7:41.86\", \"canada\", \"27 july 2011\", \"world championships\", \"shanghai, china\"],[\"1500 m freestyle\", \"14:39.63\", \"canada\", \"4 august 2012\", \"olympic games\", \"london, united kingdom\"],[\"50 m backstroke\", \"24.33\", \"united states\", \"5 december 2008\", \"dutch swim cup\", \"eindhoven, netherlands\"],[\"100 m backstroke\", \"51.94\", \"united states\", \"8 july 2009\", \"us championships\", \"indianapolis, united states\"],[\"200 m backstroke\", \"1:51.92\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m breaststroke\", \"26.76\", \"brazil\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"100 m breaststroke\", \"58.96\", \"united states\", \"26 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m breaststroke\", \"2:07.42\", \"united states\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m butterfly\", \"22.76\", \"brazil\", \"26 april 2012\", \"maria lenk trophy\", \"rio de janeiro, brazil\"],[\"100 m butterfly\", \"49.82\", \"united states\", \"1 august 2009\", \"world championships\", \"rome, italy\"],[\"200 m butterfly\", \"1:51.51\", \"united states\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m individual medley\", \"1:54.00\", \"united states\", \"28 july 2011\", \"world championships\", \"shanghai, china\"],[\"400 m individual medley\", \"4:03.84\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"4100 m freestyle relay\", \"3:08.24\", \"united states\", \"11 august 2008\", \"olympic games\", \"beijing, china\"],[\"4200 m freestyle relay\", \"6:58.55\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"4100 m medley relay\", \"3:27.28\", \"united states\", \"2 august 2009\", \"world championships\", \"rome, italy\"]]\nQuestion = Is it true that brazil won the 100 m freestyle on 30 july , 2009 with a time of 46.91?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    times = get_column_by_name(table_data, \"time\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    dates = get_column_by_name(table_data, \"date\")\n    for event, time, nationality, date in zip(events, times, nationalities, dates):\n        if event.lower() == \"100 m freestyle\" and time == \"46.91\" and nationality.lower() == \"brazil\" and date.lower() == \"30 july 2009\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "8ccaccc6-755e-4e77-8b8f-7950e03053f1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 boston celtics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"74\", \"april 1\", \"chicago\", \"106 - 92\", \"allen (22)\", \"perkins (9)\", \"rondo (10)\", \"united center 22225\", \"59 - 15\"],[\"75\", \"april 2\", \"indiana\", \"92 - 77\", \"garnett (20)\", \"garnett (11)\", \"rondo (6)\", \"td banknorth garden 18624\", \"60 - 15\"],[\"76\", \"april 5\", \"charlotte\", \"101 - 78\", \"powe (22)\", \"powe (9)\", \"rondo (5)\", \"charlotte bobcats arena 19403\", \"61 - 15\"],[\"77\", \"april 8\", \"milwaukee\", \"107 - 104 (ot)\", \"garnett (21)\", \"perkins (10)\", \"pierce (4)\", \"bradley center 15921\", \"62 - 15\"],[\"78\", \"april 9\", \"washington\", \"95 - 109\", \"pierce (28)\", \"garnett (14)\", \"pierce , rondo (7)\", \"verizon center 20173\", \"62 - 16\"],[\"79\", \"april 11\", \"milwaukee\", \"102 - 86\", \"rondo (16)\", \"garnett , posey (8)\", \"rondo (10)\", \"td banknorth garden 18624\", \"63 - 16\"],[\"80\", \"april 12\", \"atlanta\", \"99 - 89\", \"garnett (24)\", \"davis (10)\", \"cassell , rondo (5)\", \"philips arena 20098\", \"64 - 16\"],[\"81\", \"april 14\", \"new york\", \"99 - 93\", \"rondo (23)\", \"rondo (10)\", \"rondo (5)\", \"madison square garden 19763\", \"65 - 16\"],[\"82\", \"april 16\", \"new jersey\", \"105 - 94\", \"powe (27)\", \"powe (11)\", \"cassell (4)\", \"td banknorth garden 18624\", \"66 - 16\"]]\nQuestion = Is it true that perkins had high rebounds of 9 when playing for chicago?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef in_string(str1, str2):\n    return str1 in str2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    high_rebounds = get_column_by_name(table_data, \"high rebounds\")\n    for team, high_rebound in zip(teams, high_rebounds):\n        if team.lower() == \"chicago\" and in_string(\"perkins (9)\", high_rebound):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "bbe92ddf-60ec-4ae2-b95e-dfbece7a0643", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sanya\ntable_data = [[\"english name\", \"simplified\", \"traditional\", \"pinyin\", \"area\", \"population\", \"density\"],[\"hexi district\", \"河西区\", \"河西區\", \"héxī qū\", \"10\", \"134026\", \"13403\"],[\"hedong district\", \"河东区\", \"河東區\", \"hédōng qū\", \"35\", \"147944\", \"4227\"],[\"haitangwan\", \"海棠湾镇\", \"海棠灣鎮\", \"hǎitángwān zhèn\", \"254\", \"44617\", \"176\"],[\"jiyang\", \"吉阳镇\", \"吉陽鎮\", \"jíyáng zhèn\", \"199\", \"92316\", \"464\"],[\"fenghuang\", \"凤凰镇\", \"鳳凰鎮\", \"fènghuáng zhèn\", \"487\", \"66801\", \"137\"],[\"yacheng\", \"崖城镇\", \"崖城鎮\", \"yáchéng zhèn\", \"383\", \"74779\", \"195\"],[\"tianya\", \"天涯镇\", \"天涯鎮\", \"tiānyá zhèn\", \"269\", \"34934\", \"130\"],[\"yucai\", \"育才镇\", \"育才鎮\", \"yùcái zhèn\", \"315\", \"17515\", \"56\"],[\"nantian farm\", \"国营南田农场\", \"國營南田農場\", \"guóyíng nántián nóngchǎng\", \"nd\", \"24280\", \"nd\"],[\"nanxin farm\", \"国营南新农场\", \"國營南新農場\", \"guóyíng nánxīn nóngchǎng\", \"nd\", \"16801\", \"nd\"],[\"licai farm\", \"国营立才农场\", \"國營立才農場\", \"guóyíng lìcái nóngchǎng\", \"nd\", \"16659\", \"nd\"]]\nQuestion = Is it true that 崖城鎮 , the traditional name for yacheng , has a population of 74779?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    traditional_names = get_column_by_name(table_data, \"traditional\")\n    populations = get_column_by_name(table_data, \"population\")\n    for traditional_name, population in zip(traditional_names, populations):\n        if traditional_name == \"崖城鎮\":\n            answer = equal_to(population, \"74779\")\n            break \n    return answer\n\n### END"}
{"id": "7600a5e4-67da-4fe6-8ab6-c657dab7b099", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1973 belgian grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"jackie stewart\", \"tyrrell - ford\", \"70\", \"1:42:13.43\", \"6\"],[\"franã§ois cevert\", \"tyrrell - ford\", \"70\", \"+ 31.84\", \"4\"],[\"emerson fittipaldi\", \"lotus - ford\", \"70\", \"+ 2:02.79\", \"9\"],[\"andrea de adamich\", \"brabham - ford\", \"69\", \"+ 1 lap\", \"18\"],[\"niki lauda\", \"brm\", \"69\", \"+ 1 lap\", \"14\"],[\"chris amon\", \"tecno\", \"67\", \"+ 3 laps\", \"15\"],[\"denny hulme\", \"mclaren - ford\", \"67\", \"+ 3 laps\", \"2\"],[\"carlos pace\", \"surtees - ford\", \"66\", \"+ 4 laps\", \"8\"],[\"graham hill\", \"shadow - ford\", \"65\", \"+ 5 laps\", \"23\"],[\"clay regazzoni\", \"brm\", \"63\", \"accident\", \"12\"],[\"mike beuttler\", \"march - ford\", \"63\", \"accident\", \"20\"],[\"jean - pierre jarier\", \"march - ford\", \"60\", \"accident\", \"16\"],[\"jean - pierre beltoise\", \"brm\", \"56\", \"not classified\", \"5\"],[\"wilson fittipaldi\", \"brabham - ford\", \"46\", \"engine\", \"19\"],[\"ronnie peterson\", \"lotus - ford\", \"42\", \"accident\", \"1\"],[\"peter revson\", \"mclaren - ford\", \"33\", \"accident\", \"10\"],[\"howden ganley\", \"iso marlboro - ford\", \"16\", \"accident\", \"21\"],[\"carlos reutemann\", \"brabham - ford\", \"14\", \"engine\", \"7\"],[\"george follmer\", \"shadow - ford\", \"13\", \"throttle\", \"11\"],[\"jackie oliver\", \"shadow - ford\", \"11\", \"accident\", \"22\"],[\"jacky ickx\", \"ferrari\", \"6\", \"oil pump\", \"3\"],[\"nanni galli\", \"iso marlboro - ford\", \"6\", \"engine\", \"17\"],[\"mike hailwood\", \"surtees - ford\", \"4\", \"accident\", \"13\"]]\nQuestion = Is it true that the grid for under 63 laps is never under 6?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    laps = get_column_by_name(table_data, \"laps\")\n    grids = get_column_by_name(table_data, \"grid\")\n    answer = True\n    for lap, grid in zip(laps, grids):\n        if less_than(int(lap), 63) and less_than(int(grid), 6):\n            answer = False\n            break\n    return answer\n\n### END"}
{"id": "65f267f7-c0d7-4503-bb72-e7ff63c88434", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1970 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"carlton\", \"16.14 (110)\", \"st kilda\", \"10.11 (71)\", \"princes park\", \"22988\", \"18 july 1970\"],[\"south melbourne\", \"11.9 (75)\", \"richmond\", \"12.17 (89)\", \"lake oval\", \"25651\", \"18 july 1970\"],[\"north melbourne\", \"13.17 (95)\", \"fitzroy\", \"18.14 (122)\", \"arden street oval\", \"8443\", \"18 july 1970\"],[\"geelong\", \"15.16 (106)\", \"essendon\", \"8.17 (65)\", \"kardinia park\", \"17220\", \"18 july 1970\"],[\"melbourne\", \"7.19 (61)\", \"collingwood\", \"10.16 (76)\", \"mcg\", \"36044\", \"18 july 1970\"],[\"hawthorn\", \"23.9 (147)\", \"footscray\", \"6.12 (48)\", \"vfl park\", \"14151\", \"18 july 1970\"]]\nQuestion = Is it true that st kilda was the away team that played at princes park with a crowd of 17220?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    away_teams = get_column_by_name(table_data, \"away team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    for away_team, venue, crowd in zip(away_teams, venues, crowds):\n        if away_team.lower() == \"st kilda\" and venue.lower() == \"princes park\":\n            answer = equal_to(crowd, \"17220\")\n            break \n    return answer\n\n### END"}
{"id": "83fbace4-a5fb-4ea7-b9f6-49a822a0554f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = anna kournikova career statistics\ntable_data = [[\"outcome\", \"year\", \"championship\", \"surface\", \"partner\", \"opponents in final\", \"score in final\"],[\"winners\", \"1999\", \"indian wells\", \"hard\", \"martina hingis\", \"mary joe fernández jana novotná\", \"6 - 2 , 6 - 2\"],[\"winners\", \"1999\", \"rome\", \"clay\", \"martina hingis\", \"alexandra fusai nathalie tauziat\", \"6 - 2 , 6 - 2\"],[\"runner - up\", \"2000\", \"indian wells\", \"hard\", \"natasha zvereva\", \"lindsay davenport corina morariu\", \"6 - 3 , 6 - 2\"],[\"runner - up\", \"2000\", \"moscow\", \"carpet\", \"martina hingis\", \"julie halard - decugis ai sugiyama\", \"4 - 6 , 6 - 4 , 7 - 6 (7 - 5)\"],[\"winners\", \"2000\", \"zürich\", \"carpet\", \"martina hingis\", \"kimberly po anne - gaëlle sidot\", \"6 - 3 , 6 - 4\"],[\"runner - up\", \"2001\", \"tokyo\", \"hard\", \"iroda tulyaganova\", \"lisa raymond rennae stubbs\", \"7 - 6 (7 - 5) , 6 - 2 , 7 - 6 (8 - 6)\"]]\nQuestion = Is it true that the score of the finals in rome was 6 - 2 , 6 - 2?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    championships = get_column_by_name(table_data, \"championship\")\n    scores = get_column_by_name(table_data, \"score in final\")\n    for championship, score in zip(championships, scores):\n        if championship.lower() == \"rome\":\n            answer = equal_to(score, \"6 - 2 , 6 - 2\")\n            break \n    return answer\n\n### END"}
{"id": "82187ab2-8c25-4af9-a023-184dce294f93", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = kansas jayhawk community college conference\ntable_data = [[\"institution\", \"main campus location\", \"founded\", \"mascot\", \"school colors\"],[\"allen community college\", \"iola\", \"1923\", \"red devils\", \"scarlet & black\"],[\"coffeyville community college\", \"coffeyville\", \"1923\", \"red ravens\", \"red & white\"],[\"cowley college\", \"arkansas city\", \"1922\", \"tigers\", \"orange & black\"],[\"fort scott community college\", \"fort scott\", \"1919\", \"greyhounds\", \"maroon & grey\"],[\"highland community college\", \"highland\", \"1858\", \"scotties\", \"navy & gold\"],[\"independence community college\", \"independence\", \"1925\", \"pirates\", \"navy blue & vegas gold\"],[\"johnson county community college\", \"overland park\", \"1967\", \"cavaliers\", \"maroon & gold\"],[\"kansas city kansas community college\", \"kansas city\", \"1923\", \"blue devils\", \"blue , red & white\"],[\"labette community college\", \"parsons\", \"1923\", \"cardinals\", \"red & white\"],[\"neosho county community college\", \"chanute\", \"1936\", \"panthers\", \"orange & black\"]]\nQuestion = Is it true that independence community college 's newest campus opened in 1925?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    institutions = get_column_by_name(table_data, \"institution\")\n    founded_years = get_column_by_name(table_data, \"founded\")\n    for institution, founded_year in zip(institutions, founded_years):\n        if institution.lower() == \"independence community college\":\n            answer = equal_to(founded_year, \"1925\")\n            break \n    return answer\n\n### END"}
{"id": "6c246f1c-48c9-488e-a050-8b213b166f09", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = gambrinus liga\ntable_data = [[\"season\", \"champions\", \"runner - up\", \"third place\", \"top goalscorer\", \"club\"],[\"1993 - 94\", \"sparta prague (1)\", \"slavia prague\", \"baník ostrava\", \"horst siegl (20)\", \"sparta prague\"],[\"1994 - 95\", \"sparta prague (2)\", \"slavia prague\", \"fc brno\", \"radek drulák (15)\", \"drnovice\"],[\"1995 - 96\", \"slavia prague (1)\", \"sigma olomouc\", \"baumit jablonec\", \"radek drulák (22)\", \"drnovice\"],[\"1996 - 97\", \"sparta prague (3)\", \"slavia prague\", \"baumit jablonec\", \"horst siegl (19)\", \"sparta prague\"],[\"1997 - 98\", \"sparta prague (4)\", \"slavia prague\", \"sigma olomouc\", \"horst siegl (13)\", \"sparta prague\"],[\"1998 - 99\", \"sparta prague (5)\", \"teplice\", \"slavia prague\", \"horst siegl (18)\", \"sparta prague\"],[\"1999 - 00\", \"sparta prague (6)\", \"slavia prague\", \"drnovice\", \"vratislav lokvenc (21)\", \"sparta prague\"],[\"2000 - 01\", \"sparta prague (7)\", \"slavia prague\", \"sigma olomouc\", \"vítězslav tuma (15)\", \"drnovice\"],[\"2001 - 02\", \"slovan liberec (1)\", \"sparta prague\", \"viktoria žižkov\", \"jiří štajner (15)\", \"slovan liberec\"],[\"2002 - 03\", \"sparta prague (8)\", \"slavia prague\", \"viktoria žižkov\", \"jiří kowalík (16)\", \"1. fc synot\"],[\"2003 - 04\", \"baník ostrava (1)\", \"sparta prague\", \"sigma olomouc\", \"marek heinz (19)\", \"baník ostrava\"],[\"2004 - 05\", \"sparta prague (9)\", \"slavia prague\", \"teplice\", \"tomáš jun (14)\", \"sparta prague\"],[\"2005 - 06\", \"slovan liberec (2)\", \"mladá boleslav\", \"slavia prague\", \"milan ivana (11)\", \"fc slovácko\"],[\"2006 - 07\", \"sparta prague (10)\", \"slavia prague\", \"mladá boleslav\", \"luboš pecka (16)\", \"mladá boleslav\"],[\"2007 - 08\", \"slavia prague (2)\", \"sparta prague\", \"baník ostrava\", \"václav svěrkoš (15)\", \"baník ostrava\"],[\"2008 - 09\", \"slavia prague (3)\", \"sparta prague\", \"slovan liberec\", \"andrej kerić (15)\", \"slovan liberec\"],[\"2009 - 10\", \"sparta prague (11)\", \"jablonec\", \"baník ostrava\", \"michal ordoš (12)\", \"sigma olomouc\"],[\"2010 - 11\", \"viktoria plzeň (1)\", \"sparta prague\", \"jablonec\", \"david lafata (19)\", \"jablonec\"],[\"2011 - 12\", \"slovan liberec (3)\", \"sparta prague\", \"viktoria plzeň\", \"david lafata (25)\", \"jablonec\"]]\nQuestion = Is it true that horst siegl (18) played for drnovice and was the top goalscorer for the season 1998 - 99?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    top_goalscorers = get_column_by_name(table_data, \"top goalscorer\")\n    clubs = get_column_by_name(table_data, \"club\")\n    for season, top_goalscorer, club in zip(seasons, top_goalscorers, clubs):\n        if season == \"1998 - 99\" and top_goalscorer == \"horst siegl (18)\" and club == \"drnovice\":\n            return True\n    return False\n\n### END"}
{"id": "6b5940ac-c51f-47d5-9926-429d0d9b8451", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"team\", \"number\", \"games\", \"kicks\", \"handballs\", \"total disposals\", \"marks\", \"tackles\", \"goals\", \"behinds\", \"goal accuracy %\", \"brownlow medal votes\"],[\"2005\", \"sydney\", \"40\", \"5\", \"21\", \"11\", \"32\", \"10\", \"3\", \"1\", \"1\", \"50%\", \"0\"],[\"2006\", \"sydney\", \"9\", \"17\", \"148\", \"57\", \"205\", \"68\", \"53\", \"9\", \"7\", \"56%\", \"0\"],[\"2007\", \"sydney\", \"9\", \"23\", \"333\", \"148\", \"481\", \"150\", \"60\", \"14\", \"5\", \"74%\", \"9\"],[\"2008\", \"sydney\", \"9\", \"11\", \"110\", \"47\", \"157\", \"53\", \"19\", \"6\", \"1\", \"86%\", \"0\"],[\"2009\", \"sydney\", \"9\", \"12\", \"112\", \"70\", \"183\", \"37\", \"16\", \"5\", \"5\", \"50%\", \"0\"],[\"2010\", \"sydney\", \"9\", \"24\", \"339\", \"204\", \"543\", \"128\", \"60\", \"7\", \"9\", \"44%\", \"4\"]]\nQuestion = Is it true that the team had a goal accuracy of 44% in 2009?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    goal_accuracies = get_column_by_name(table_data, \"goal accuracy %\")\n    for year, goal_accuracy in zip(years, goal_accuracies):\n        if year == \"2009\":\n            answer = equal_to(goal_accuracy, \"44%\")\n            break \n    return answer\n\n### END"}
{"id": "d9b20f41-3879-46bd-9e89-33147fc4d60b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1996 - 97 european challenge cup\ntable_data = [[\"team\", \"tries for\", \"tries against\", \"try diff\", \"points for\", \"points against\", \"points diff\"],[\"bourgoin\", \"27\", \"4\", \"+ 23\", \"196\", \"66\", \"+ 130\"],[\"bordeaux - bègles\", \"29\", \"13\", \"+ 16\", \"195\", \"99\", \"+ 96\"],[\"swansea\", \"28\", \"19\", \"+ 9\", \"207\", \"138\", \"+ 69\"],[\"gloucester\", \"17\", \"17\", \"0\", \"119\", \"123\", \"4\"],[\"ebbw vale\", \"6\", \"36\", \"30\", \"48\", \"243\", \"195\"],[\"london irish\", \"12\", \"30\", \"18\", \"90\", \"186\", \"96\"]]\nQuestion = Is it true that the points against is 66 for the value + 96 in the points diff?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    points_against = get_column_by_name(table_data, \"points against\")\n    points_diff = get_column_by_name(table_data, \"points diff\")\n    for points_a, points_d in zip(points_against, points_diff):\n        if points_d == \"+ 96\":\n            answer = equal_to(points_a, \"66\")\n            break \n    return answer\n\n### END"}
{"id": "b9627d59-f54d-435d-9bd1-65dffaf4e845", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"d 47 +\", \"d 46 +\", \"d 45 +\", \"d 44 +\", \"d 43 o\", \"d 42 o\", \"d 41\", \"d 40\"],[\"d 8\", \"d 9\", \"d 10\", \"d 11\", \"d 12\", \"d 13\", \"d 14\", \"d 15\"],[\"d 27\", \"d 26\", \"d 25\", \"d 24\", \"d 23\", \"d 22\", \"d 21\", \"d 20\"],[\"d 28\", \"d 29\", \"d 30\", \"d 31\", \"d 32\", \"d 33\", \"d 34\", \"d 35\"],[\"d 47 +\", \"d 46 +\", \"d 45 +\", \"d 44 +\", \"d 43 o\", \"d 42 o\", \"d 41\", \"d 40\"],[\"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\"],[\"r 48 +\", \"r 47 +\", \"r 46 +\", \"r 45 +\", \"r 44 +\", \"r 43 +\", \"r 42 o\", \"r 41 o\"],[\"r 29\", \"r 30\", \"r 31\", \"r 32\", \"r 33\", \"r 34\", \"r 35\", \"r 36\"],[\"r 28\", \"r 27\", \"r 26\", \"r 25\", \"r 24\", \"r 23\", \"r 22\", \"r 21\"],[\"r 9\", \"r 10\", \"r 11\", \"r 12\", \"r 13\", \"r 14\", \"r 15\", \"r 16\"],[\"r 8\", \"r 7\", \"r 6\", \"r 5\", \"r 4\", \"r 3\", \"r 2\", \"r 1\"]]\nQuestion = Is it true that r 12 is the answer when d 44 + has a d 40 of r 16?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef get_column_cell_value(row_index, column):\n    return column[row_index]\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    column_index = 3\n    column_3 = get_column_by_index(table_data, column_index)\n    d_44_plus = get_column_cell_value(9, column_3)\n    expected_value = \"r 12\"\n    answer = equal_to(d_44_plus, expected_value)\n    return answer\n\n### END"}
{"id": "1ef1d173-2a28-4c50-a40c-f6018afe41ad", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = john mcenroe career statistics\ntable_data = [[\"outcome\", \"year\", \"championship\", \"surface\", \"partner\", \"opponents in the final\", \"score in the final\"],[\"winner\", \"2007\", \"french open\", \"clay\", \"järryd\", \"fitzgerald vilas\", \"6 - 1 , 6 - 2\"],[\"winner\", \"2008\", \"french open\", \"clay\", \"järryd\", \"bahrami leconte\", \"6 - 4 , 7 - 6 2\"],[\"winner\", \"2009\", \"french open\", \"clay\", \"järryd\", \"bahrami leconte\", \"7 - 6 2 , 6 - 1\"],[\"winner\", \"2010\", \"french open\", \"clay\", \"gómez\", \"bahrami leconte\", \"6 - 1 , 6 - 1\"],[\"runner - up\", \"2011\", \"french open\", \"clay\", \"gómez\", \"forget leconte\", \"6 - 3 , 5 - 7 ,\"]]\nQuestion = Is it true that the score in the final where one of the opponents was forget leconte was 6 - 1 , 6 - 2?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponents in the final\")\n    scores = get_column_by_name(table_data, \"score in the final\")\n    for opponent, score in zip(opponents, scores):\n        if \"forget leconte\" in opponent.lower():\n            answer = equal_to(score, \"6 - 1 , 6 - 2\")\n            break \n    return answer\n\n### END"}
{"id": "231e6bdc-29ac-46f1-b6f7-04d45319ead0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = radio iq\ntable_data = [[\"call sign\", \"frequency mhz\", \"city of license\", \"erp w\", \"class\", \"fcc info\"],[\"wvtw\", \"88.5\", \"charlottesville , virginia\", \"1000\", \"b1\", \"fcc\"],[\"wffc\", \"89.9\", \"ferrum , virginia\", \"1100\", \"a\", \"fcc\"],[\"wqiq\", \"88.3\", \"spotsylvania , virginia\", \"3500\", \"a\", \"fcc\"],[\"wriq\", \"88.7\", \"lexington , virginia\", \"3900\", \"a\", \"fcc\"],[\"wwvt\", \"1260\", \"christiansburg , virginia\", \"5000 day 25 night\", \"d\", \"fcc\"]]\nQuestion = Is it true that wriq radio is based in charlottesville , virginia?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    call_signs = get_column_by_name(table_data, \"call sign\")\n    cities = get_column_by_name(table_data, \"city of license\")\n    answer = False\n    for call_sign, city in zip(call_signs, cities):\n        if call_sign.lower() == \"wriq\" and \"charlottesville , virginia\" in city.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "9e714533-b272-4421-aaae-8a2d66fac2e8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = israeli football league\ntable_data = [[\"season\", \"champion\", \"runner up\", \"israel bowl\", \"venue\", \"date\", \"finals mvp\"],[\"2007 - 08\", \"jerusalem lions\", \"haifa underdogs\", \"i\", \"kraft stadium , jerusalem\", \"march 28 , 2008\", \"moshe horowitz (lions)\"],[\"2008 - 09\", \"modi'in pioneers\", \"jerusalem lions\", \"ii\", \"kraft stadium , jerusalem\", \"april 3 , 2009\", \"assaf katz (pioneers)\"],[\"2009 - 10\", \"tel aviv sabres\", \"jerusalem lions\", \"iii\", \"kraft stadium , jerusalem\", \"march 26 , 2010\", \"evan reshef (sabres)\"],[\"2010 - 11\", \"judean rebels\", \"tel aviv sabres\", \"iv\", \"kraft stadium , jerusalem\", \"march 18 , 2011\", \"zack miller (rebels)\"],[\"2011 - 12\", \"tel aviv sabres\", \"tel aviv pioneers\", \"v\", \"kraft stadium , jerusalem\", \"march 30 , 2012\", \"adi hakami and jonathan curran (sabres)\"],[\"2012 - 13\", \"tel aviv sabres\", \"judean rebels\", \"vi\", \"kraft stadium , jerusalem\", \"march 22 , 2013\", \"jonathan curran and banning fudge (sabres)\"]]\nQuestion = Is it true that the venue for march 28 , 2008 is after the season 2007 - 08 and before season 2011 - 12?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef in_between(string, string1, string2):\n    return string1 < string < string2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    dates = get_column_by_name(table_data, \"date\")\n    for season, date in zip(seasons, dates):\n        if date == \"march 28 , 2008\":\n            answer = in_between(season, \"2007 - 08\", \"2011 - 12\")\n            break\n    return answer\n\n### END"}
{"id": "2884d9c4-91fe-410c-877b-ce4542347de1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2005 japanese television dramas\ntable_data = [[\"japanese title\", \"romaji title\", \"tv station\", \"episodes\", \"average ratings\"],[\"電車男\", \"densha otoko\", \"fuji tv\", \"11\", \"21.0%\"],[\"海猿 umizaru evolution\", \"umizaru evolution\", \"fuji tv\", \"11\", \"13.2%\"],[\"スローダンス\", \"slow dance\", \"fuji tv\", \"11\", \"16.8%\"],[\"がんばっていきまっしょい\", \"ganbatte ikimasshoi\", \"fuji tv\", \"10\", \"12.4%\"],[\"幸せになりたい!\", \"shiawase ni naritai!\", \"tbs\", \"10\", \"11.8%\"],[\"女系家族\", \"nyokei kazoku\", \"tbs\", \"11\", \"13.85%\"],[\"いま、会いにゆきます\", \"ima , ai ni yukimasu\", \"tbs\", \"10\", \"11%\"],[\"ドラゴン桜\", \"dragon zakura\", \"tbs\", \"11\", \"16.4%\"],[\"はるか17\", \"haruka seventeen\", \"tv asahi\", \"10\", \"8.9%\"],[\"菊次郎とさき 2\", \"kikujirou to saki 2\", \"ntv\", \"9\", \"14.9%\"],[\"女王の教室\", \"joou no kyoushitsu\", \"ntv\", \"11\", \"15.7%\"]]\nQuestion = Is it true that the romaji title slow dance has eleven episodes?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    romaji_titles = get_column_by_name(table_data, \"romaji title\")\n    episodes = get_column_by_name(table_data, \"episodes\")\n    for romaji_title, episode in zip(romaji_titles, episodes):\n        if romaji_title.lower() == \"slow dance\":\n            answer = equal_to(episode, \"11\")\n            break \n    return answer\n\n### END"}
{"id": "9791068b-13b1-4fe4-a541-7e33d6e2df2d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = locomotives of the london and north eastern railway\ntable_data = [[\"class\", \"type\", \"quantity\", \"date\", \"lner class\"],[\"2\", \"4 - 4 - 0\", \"25\", \"1887 - 1892\", \"d7\"],[\"3\", \"2 - 4 - 2t\", \"39\", \"1889 - 1892\", \"f1\"],[\"6ai\", \"0 - 6 - 0\", \"12\", \"1888\", \"j8\"],[\"6d\", \"2 - 4 - 0\", \"3\", \"1887\", \"e2\"],[\"6db\", \"4 - 4 - 0\", \"3\", \"1888\", \"d8\"],[\"9\", \"0 - 6 - 0\", \"6\", \"1888 - 89\", \"j13\"],[\"9a\", \"0 - 6 - 2t\", \"55\", \"1889 - 92\", \"n4\"],[\"9b & 9e\", \"0 - 6 - 0\", \"31\", \"1891 - 95\", \"j9\"],[\"9c & 9f\", \"0 - 6 - 2t\", \"129\", \"1891 - 1901\", \"n5\"],[\"9d , 9h & 9 m\", \"0 - 6 - 0\", \"124\", \"1892 - 1902\", \"j10\"]]\nQuestion = Is it true that lner class d8 has a class of 6db?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    classes = get_column_by_name(table_data, \"class\")\n    lner_classes = get_column_by_name(table_data, \"lner class\")\n    for class_, lner_class in zip(classes, lner_classes):\n        if equal_to(lner_class, \"d8\"):\n            answer = equal_to(class_, \"6db\")\n            break \n    return answer\n\n### END"}
{"id": "f89408c7-41a9-4c7a-8466-583ee4e4e3ba", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of tvb series (2007)\ntable_data = [[\"rank\", \"english title\", \"chinese title\", \"average\", \"peak\", \"premiere\", \"finale\", \"hk viewers\"],[\"1\", \"the family link\", \"師奶兵團\", \"33\", \"42\", \"31\", \"33\", \"2.12 million\"],[\"2\", \"fathers and sons\", \"爸爸閉翳\", \"32\", \"40\", \"31\", \"37\", \"2.11 million\"],[\"3\", \"heart of greed\", \"溏心風暴\", \"32\", \"48\", \"29\", \"40\", \"2.08 million\"],[\"4\", \"ten brothers\", \"十兄弟\", \"32\", \"39\", \"29\", \"36\", \"2.05 million\"],[\"5\", \"on the first beat\", \"學警出更\", \"31\", \"38\", \"30\", \"35\", \"2.03 million\"],[\"6\", \"the green grass of home\", \"緣來自有機\", \"31\", \"36\", \"29\", \"33\", \"2.01 million\"],[\"7\", \"dicey business\", \"賭場風雲\", \"31\", \"37\", \"30\", \"34\", \"1.99 million\"],[\"8\", \"steps\", \"舞動全城\", \"31\", \"36\", \"31\", \"32\", \"1.98 million\"],[\"9\", \"the drive of life\", \"歲月風雲\", \"30\", \"39\", \"31\", \"33\", \"1.97 million\"]]\nQuestion = Is it true that the family link has a peak of 42 and a finale of 33?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    english_titles = get_column_by_name(table_data, \"english title\")\n    peaks = get_column_by_name(table_data, \"peak\")\n    finales = get_column_by_name(table_data, \"finale\")\n    for english_title, peak, finale in zip(english_titles, peaks, finales):\n        if english_title.lower() == \"the family link\":\n            answer = equal_to(peak, \"42\") and equal_to(finale, \"33\")\n            break \n    return answer\n\n### END"}
{"id": "76648a34-d28d-47a6-8504-5a37c1825217", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1949 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"5.13 (43)\", \"richmond\", \"20.12 (132)\", \"glenferrie oval\", \"13000\", \"23 april 1949\"],[\"footscray\", \"12.7 (79)\", \"geelong\", \"9.14 (68)\", \"western oval\", \"15500\", \"23 april 1949\"],[\"south melbourne\", \"12.13 (85)\", \"st kilda\", \"12.10 (82)\", \"lake oval\", \"9000\", \"23 april 1949\"],[\"north melbourne\", \"7.14 (56)\", \"essendon\", \"10.15 (75)\", \"arden street oval\", \"20000\", \"23 april 1949\"],[\"melbourne\", \"12.8 (80)\", \"collingwood\", \"11.16 (82)\", \"mcg\", \"29000\", \"23 april 1949\"],[\"fitzroy\", \"15.16 (106)\", \"carlton\", \"15.15 (105)\", \"brunswick street oval\", \"25000\", \"23 april 1949\"]]\nQuestion = Is it true that the away team 's score was 15.15 (105) with fitzroy as the home team?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    away_team_scores = get_column_by_name(table_data, \"away team score\")\n    for home_team, away_team_score in zip(home_teams, away_team_scores):\n        if home_team.lower() == \"fitzroy\":\n            answer = equal_to(away_team_score, \"15.15 (105)\")\n            break \n    return answer\n\n### END"}
{"id": "a7dee879-f2d0-4bd3-9468-e8dd353ee460", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 malaysian grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"michael schumacher\", \"ferrari\", \"55\", \"1:47:34.801\", \"1\"],[\"rubens barrichello\", \"ferrari\", \"55\", \"+ 23.660\", \"2\"],[\"david coulthard\", \"mclaren - mercedes\", \"55\", \"+ 28.555\", \"8\"],[\"heinz - harald frentzen\", \"jordan - honda\", \"55\", \"+ 46.543\", \"9\"],[\"ralf schumacher\", \"williams - bmw\", \"55\", \"+ 48.233\", \"3\"],[\"mika häkkinen\", \"mclaren - mercedes\", \"55\", \"+ 48.606\", \"4\"],[\"jos verstappen\", \"arrows - asiatech\", \"55\", \"+ 1:21.560\", \"18\"],[\"jarno trulli\", \"jordan - honda\", \"54\", \"+ 1 lap\", \"5\"],[\"jean alesi\", \"prost - acer\", \"54\", \"+ 1 lap\", \"13\"],[\"luciano burti\", \"jaguar - cosworth\", \"54\", \"+ 1 lap\", \"15\"],[\"jenson button\", \"benetton - renault\", \"53\", \"+ 2 laps\", \"17\"],[\"gastón mazzacane\", \"prost - acer\", \"53\", \"+ 2 laps\", \"19\"],[\"fernando alonso\", \"minardi - european\", \"52\", \"+ 3 laps\", \"21\"],[\"tarso marques\", \"minardi - european\", \"51\", \"+ 4 laps\", \"20\"],[\"giancarlo fisichella\", \"benetton - renault\", \"31\", \"fuel pressure\", \"16\"],[\"jacques villeneuve\", \"bar - honda\", \"3\", \"spun off\", \"7\"],[\"nick heidfeld\", \"sauber - petronas\", \"3\", \"spun off\", \"11\"],[\"enrique bernoldi\", \"arrows - asiatech\", \"3\", \"spun off\", \"22\"],[\"juan pablo montoya\", \"williams - bmw\", \"3\", \"spun off\", \"6\"],[\"eddie irvine\", \"jaguar - cosworth\", \"3\", \"water leak\", \"12\"],[\"olivier panis\", \"bar - honda\", \"1\", \"oil leak\", \"10\"],[\"kimi räikkönen\", \"sauber - petronas\", \"0\", \"driveshaft\", \"14\"]]\nQuestion = Is it true that jordan - honda had 54 laps when the driver was jarno trulli?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    constructors = get_column_by_name(table_data, \"constructor\")\n    laps = get_column_by_name(table_data, \"laps\")\n    for driver, constructor, lap in zip(drivers, constructors, laps):\n        if driver.lower() == \"jarno trulli\" and constructor.lower() == \"jordan - honda\":\n            answer = equal_to(lap, \"54\")\n            break \n    return answer\n\n### END"}
{"id": "4204d306-ca68-4eb3-a83e-81e58e7384d3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = media in fargo - moorhead\ntable_data = [[\"frequency\", \"call sign\", \"name\", \"format\", \"owner\"],[\"88.7 fm\", \"kfbn\", \"heaven 88.7\", \"christian\", \"fargo baptist church\"],[\"90.3 fm\", \"kccd\", \"minnesota public radio / npr\", \"news / talk\", \"minnesota public radio\"],[\"91.1 fm\", \"kccm\", \"minnesota public radio / npr\", \"classical\", \"minnesota public radio\"],[\"91.9 fm\", \"kdsu\", \"prairie public / npr\", \"adult album alternative\", \"north dakota state university\"],[\"92.7 fm\", \"kzdr\", \"92.7 the bone\", \"active rock\", \"mediactive\"],[\"93.7 fm\", \"wday - fm\", \"y94\", \"top 40 (chr)\", \"radio fargo - moorhead\"],[\"95.1 fm\", \"kbvb\", \"bob 95 fm\", \"country\", \"radio fargo - moorhead\"],[\"95.9 fm\", \"kxbq - lp\", \"dive 95.9\", \"alternative\", \"women 's care clinic\"],[\"96.3 fm\", \"knds - lp\", \"thunderradio radio free fargo\", \"college\", \"north dakota state university\"],[\"97.9 fm\", \"kfnw - fm\", \"life 97.9\", \"contemporary christian music\", \"northwestern college\"],[\"98.7 fm\", \"klta\", \"big 98.7\", \"adult chr\", \"triad broadcasting\"],[\"99.3 fm\", \"k257ep\", \"k - love\", \"contemporary christian music ( kklq translator )\", \"educational media foundation\"],[\"99.9 fm\", \"kvox - fm\", \"froggy 99.9\", \"country\", \"triad broadcasting\"],[\"100.7 fm\", \"kklq\", \"k - love\", \"contemporary christian music\", \"educational media foundation\"],[\"101.9 fm\", \"krwk\", \"101.9 talk fm\", \"talk\", \"radio fargo - moorhead\"],[\"103.3 fm\", \"kzcr\", \"z 103.3\", \"rock / aaa\", \"jerry papenfuss\"],[\"103.9 fm\", \"kvmi\", \"103.9 the truck\", \"country\", \"vision media incorporated\"],[\"104.1 fm\", \"kbot\", \"104.1 the wave\", \"adult contemporary\", \"leighton broadcasting\"],[\"104.7 fm\", \"kmjo\", \"104.7 popster fm\", \"adult hits\", \"radio fargo - moorhead\"],[\"105.1 fm\", \"kqwb\", \"q 105.1\", \"active rock\", \"triad broadcasting\"],[\"106.1 fm\", \"kqlx - fm\", \"thunder 106.1\", \"classic country\", \"great plains integrated marketing\"],[\"106.5 fm\", \"krjb\", \"krjb 106.5\", \"country\", \"r&j broadcasting\"],[\"106.9 fm\", \"kegk\", \"eagle 106.9\", \"classic hits\", \"great plains integrated marketing\"],[\"107.9 fm\", \"kpfx\", \"107.9 the fox\", \"classic rock\", \"triad broadcasting\"]]\nQuestion = Is it true that the 103.3 fm radio station , z 103.3 , is owned by jerry papenfuss?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    names = get_column_by_name(table_data, \"name\")\n    owners = get_column_by_name(table_data, \"owner\")\n    for frequency, name, owner in zip(frequencies, names, owners):\n        if frequency == \"103.3 fm\" and name == \"z 103.3\":\n            return owner == \"jerry papenfuss\"\n    return False\n\n### END"}
{"id": "a170817e-7773-4db5-a43b-f77da12277f4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = media in fargo - moorhead\ntable_data = [[\"frequency\", \"call sign\", \"name\", \"format\", \"owner\"],[\"88.7 fm\", \"kfbn\", \"heaven 88.7\", \"christian\", \"fargo baptist church\"],[\"90.3 fm\", \"kccd\", \"minnesota public radio / npr\", \"news / talk\", \"minnesota public radio\"],[\"91.1 fm\", \"kccm\", \"minnesota public radio / npr\", \"classical\", \"minnesota public radio\"],[\"91.9 fm\", \"kdsu\", \"prairie public / npr\", \"adult album alternative\", \"north dakota state university\"],[\"92.7 fm\", \"kzdr\", \"92.7 the bone\", \"active rock\", \"mediactive\"],[\"93.7 fm\", \"wday - fm\", \"y94\", \"top 40 (chr)\", \"radio fargo - moorhead\"],[\"95.1 fm\", \"kbvb\", \"bob 95 fm\", \"country\", \"radio fargo - moorhead\"],[\"95.9 fm\", \"kxbq - lp\", \"dive 95.9\", \"alternative\", \"women 's care clinic\"],[\"96.3 fm\", \"knds - lp\", \"thunderradio radio free fargo\", \"college\", \"north dakota state university\"],[\"97.9 fm\", \"kfnw - fm\", \"life 97.9\", \"contemporary christian music\", \"northwestern college\"],[\"98.7 fm\", \"klta\", \"big 98.7\", \"adult chr\", \"triad broadcasting\"],[\"99.3 fm\", \"k257ep\", \"k - love\", \"contemporary christian music ( kklq translator )\", \"educational media foundation\"],[\"99.9 fm\", \"kvox - fm\", \"froggy 99.9\", \"country\", \"triad broadcasting\"],[\"100.7 fm\", \"kklq\", \"k - love\", \"contemporary christian music\", \"educational media foundation\"],[\"101.9 fm\", \"krwk\", \"101.9 talk fm\", \"talk\", \"radio fargo - moorhead\"],[\"103.3 fm\", \"kzcr\", \"z 103.3\", \"rock / aaa\", \"jerry papenfuss\"],[\"103.9 fm\", \"kvmi\", \"103.9 the truck\", \"country\", \"vision media incorporated\"],[\"104.1 fm\", \"kbot\", \"104.1 the wave\", \"adult contemporary\", \"leighton broadcasting\"],[\"104.7 fm\", \"kmjo\", \"104.7 popster fm\", \"adult hits\", \"radio fargo - moorhead\"],[\"105.1 fm\", \"kqwb\", \"q 105.1\", \"active rock\", \"triad broadcasting\"],[\"106.1 fm\", \"kqlx - fm\", \"thunder 106.1\", \"classic country\", \"great plains integrated marketing\"],[\"106.5 fm\", \"krjb\", \"krjb 106.5\", \"country\", \"r&j broadcasting\"],[\"106.9 fm\", \"kegk\", \"eagle 106.9\", \"classic hits\", \"great plains integrated marketing\"],[\"107.9 fm\", \"kpfx\", \"107.9 the fox\", \"classic rock\", \"triad broadcasting\"]]\nQuestion = Is it true that a contemporary christian music station is life 97.9 fm?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    formats = get_column_by_name(table_data, \"format\")\n    answer = False\n    for name, format in zip(names, formats):\n        if \"life 97.9\" in name.lower() and \"contemporary christian music\" in format.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "98f6e110-5000-41e3-ad85-8c2012470429", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1980 - 81 philadelphia flyers season\ntable_data = [[\"game\", \"december\", \"opponent\", \"score\", \"record\", \"points\"],[\"27\", \"4\", \"chicago black hawks\", \"7 - 5\", \"18 - 5 - 4\", \"40\"],[\"28\", \"6\", \"detroit red wings\", \"2 - 4\", \"18 - 6 - 4\", \"40\"],[\"29\", \"7\", \"colorado rockies\", \"4 - 2\", \"19 - 6 - 4\", \"42\"],[\"30\", \"10\", \"chicago black hawks\", \"2 - 2\", \"19 - 6 - 5\", \"43\"],[\"31\", \"13\", \"pittsburgh penguins\", \"6 - 5\", \"20 - 6 - 5\", \"45\"],[\"32\", \"14\", \"st louis blues\", \"5 - 4\", \"21 - 6 - 5\", \"47\"],[\"33\", \"18\", \"colorado rockies\", \"2 - 0\", \"22 - 6 - 5\", \"49\"],[\"34\", \"20\", \"washington capitals\", \"5 - 2\", \"23 - 6 - 5\", \"51\"],[\"35\", \"21\", \"washington capitals\", \"0 - 6\", \"23 - 7 - 5\", \"51\"],[\"36\", \"27\", \"calgary flames\", \"1 - 2\", \"23 - 8 - 5\", \"51\"],[\"37\", \"28\", \"edmonton oilers\", \"2 - 1\", \"24 - 8 - 5\", \"53\"],[\"38\", \"30\", \"minnesota north stars\", \"5 - 6\", \"24 - 9 - 5\", \"53\"]]\nQuestion = Is it true that the opponent for the game with 45 points is the pittsburgh penguins?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    points = get_column_by_name(table_data, \"points\")\n    for opponent, point in zip(opponents, points):\n        if equal_to(point, \"45\"):\n            answer = equal_to(opponent.lower(), \"pittsburgh penguins\")\n            break \n    return answer\n\n### END"}
{"id": "1386d5d0-b6ea-4857-8dc5-bb060535a1e6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1981 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"footscray\", \"10.14 (74)\", \"hawthorn\", \"11.18 (84)\", \"western oval\", \"13789\", \"23 may 1981\"],[\"fitzroy\", \"13.15 (93)\", \"geelong\", \"16.18 (114)\", \"junction oval\", \"15604\", \"23 may 1981\"],[\"carlton\", \"25.22 (172)\", \"south melbourne\", \"11.7 (73)\", \"princes park\", \"22445\", \"23 may 1981\"],[\"melbourne\", \"10.10 (70)\", \"essendon\", \"14.20 (104)\", \"mcg\", \"31769\", \"23 may 1981\"],[\"north melbourne\", \"12.26 (98)\", \"collingwood\", \"16.15 (111)\", \"arden street oval\", \"24625\", \"23 may 1981\"],[\"richmond\", \"20.16 (136)\", \"st kilda\", \"15.15 (105)\", \"vfl park\", \"40240\", \"23 may 1981\"]]\nQuestion = Is it true that north melbourne played at home versus collingwood?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    answer = False\n    for home_team, away_team in zip(home_teams, away_teams):\n        if home_team.lower() == \"north melbourne\" and away_team.lower() == \"collingwood\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "88302d20-fb32-4589-a185-ff03c6c3936a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1997 major league baseball draft\ntable_data = [[\"pick\", \"player\", \"team\", \"position\", \"school\"],[\"1\", \"matt anderson\", \"detroit tigers\", \"p\", \"rice university\"],[\"2\", \"jd drew\", \"philadelphia phillies\", \"of\", \"florida state university\"],[\"3\", \"troy glaus\", \"anaheim angels\", \"3b , p\", \"ucla\"],[\"4\", \"jason grilli\", \"san francisco giants\", \"p\", \"seton hall university\"],[\"5\", \"vernon wells\", \"toronto blue jays\", \"of\", \"bowie hs (arlington , texas)\"],[\"6\", \"geoff goetz\", \"new york mets\", \"p\", \"jesuit hs (tampa , florida)\"],[\"7\", \"dan reichert\", \"kansas city royals\", \"p\", \"university of the pacific\"],[\"8\", \"jj davis\", \"pittsburgh pirates\", \"of\", \"baldwin park hs (pomona , california)\"],[\"9\", \"michael cuddyer\", \"minnesota twins\", \"ss , p\", \"great bridge hs (chesapeake , virginia)\"],[\"10\", \"jon garland\", \"chicago cubs\", \"p\", \"kennedy hs (granada hills , california)\"],[\"11\", \"chris enochs\", \"oakland athletics\", \"p\", \"west virginia university\"],[\"12\", \"aaron akin\", \"florida marlins\", \"p\", \"cowley county community college\"],[\"13\", \"kyle peterson\", \"milwaukee brewers\", \"p\", \"stanford university\"],[\"14\", \"brandon larson\", \"cincinnati reds\", \"ss\", \"louisiana state university\"],[\"15\", \"jason dellaero\", \"chicago white sox\", \"ss , p\", \"university of south florida\"],[\"16\", \"lance berkman\", \"houston astros\", \"1b\", \"rice university\"],[\"17\", \"john curtice\", \"boston red sox\", \"p\", \"great bridge hs (chesapeake , virginia)\"],[\"18\", \"mark mangum\", \"colorado rockies\", \"p\", \"kingwood hs (kingwood , texas)\"],[\"19\", \"ryan anderson\", \"seattle mariners\", \"p\", \"divine child hs (westland , michigan)\"],[\"20\", \"adam kennedy\", \"st louis cardinals\", \"ss\", \"cal state northridge university\"],[\"21\", \"eric dubose\", \"oakland athletics\", \"p\", \"mississippi state university\"],[\"22\", \"jayson werth\", \"baltimore orioles\", \"c , of\", \"glenwood hs (chatham , illinois)\"],[\"23\", \"donnie bridges\", \"montreal expos\", \"p\", \"oak grove hs (hattiesburg , mississippi)\"],[\"24\", \"tyrell godwin\", \"new york yankees\", \"of\", \"east bladen hs (elizabethtown , north carolina)\"],[\"25\", \"glenn davis\", \"los angeles dodgers\", \"1b\", \"vanderbilt university\"],[\"26\", \"darnell mcdonald\", \"baltimore orioles\", \"of\", \"cherry creek hs (englewood , colorado)\"],[\"27\", \"kevin nicholson\", \"san diego padres\", \"ss\", \"stetson university\"],[\"28\", \"tim drew\", \"cleveland indians\", \"p , of\", \"lowndes county hs (valdosta , georgia)\"],[\"29\", \"troy cameron\", \"atlanta braves\", \"ss\", \"st thomas aquinas hs (fort lauderdale , florida)\"],[\"30\", \"jack cust\", \"arizona diamondbacks\", \"1b\", \"immaculata hs (somerville , new jersey)\"],[\"31\", \"jason standridge\", \"tampa bay devil rays\", \"p\", \"hewitt - trussville hs (trussville , al)\"]]\nQuestion = Is it true that jason grilli is from university of south florida?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    schools = get_column_by_name(table_data, \"school\")\n    for player, school in zip(players, schools):\n        if player.lower() == \"jason grilli\":\n            answer = school.lower() == \"university of south florida\"\n            break\n    return answer\n\n### END"}
{"id": "24b6f0eb-fe3b-4cc1-9334-d9d1455902a6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of six feet under episodes\ntable_data = [[\"no in series\",\"no in season\",\"title\",\"directed by\",\"written by\",\"original air date\"],[\"14\",\"1\",\"in the game\",\"rodrigo garcã­a\",\"alan ball\",\"march 3 , 2002\"],[\"15\",\"2\",\"out , out brief candle\",\"kathy bates\",\"laurence andries\",\"march 10 , 2002\"],[\"16\",\"3\",\"the plan\",\"rose troche\",\"kate robin\",\"march 17 , 2002\"],[\"17\",\"4\",\"driving mr mossback\",\"michael cuesta\",\"rick cleveland\",\"march 24 , 2002\"],[\"18\",\"5\",\"the invisible woman\",\"jeremy podeswa\",\"bruce eric kaplan\",\"march 31 , 2002\"],[\"19\",\"6\",\"in place of anger\",\"michael engler\",\"christian taylor\",\"april 7 , 2002\"],[\"20\",\"7\",\"back to the garden\",\"dan attias\",\"jill soloway\",\"april 14 , 2002\"],[\"21\",\"8\",\"it 's the most wonderful time of the year\",\"alan taylor\",\"scott buck\",\"april 21 , 2002\"],[\"22\",\"9\",\"someone else 's eyes\",\"michael cuesta\",\"alan ball\",\"april 28 , 2002\"],[\"23\",\"10\",\"the secret\",\"alan poul\",\"bruce eric kaplan\",\"may 5 , 2002\"],[\"24\",\"11\",\"the liar and the whore\",\"miguel arteta\",\"rick cleveland\",\"may 12 , 2002\"],[\"25\",\"12\",\"i'll take you\",\"michael engler\",\"jill soloway\",\"may 19 , 2002\"]]\nQuestion = Is it true that the eleventh episode in this season is episode 24 overall in the series?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    no_in_series = get_column_by_name(table_data, \"no in series\")\n    no_in_season = get_column_by_name(table_data, \"no in season\")\n    for series_no, season_no in zip(no_in_series, no_in_season):\n        if season_no == \"11\":\n            answer = equal_to(series_no, \"24\")\n            break \n    return answer\n\n### END"}
{"id": "30e892b4-f32a-460d-82b9-d5e911390911", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1950 world figure skating championships\ntable_data = [[\"rank\", \"name\", \"nation\", \"placings\", \"total\"],[\"1\", \"karol kennedy / peter kennedy\", \"united states\", \"15\", \"96.07\"],[\"2\", \"jennifer nicks / john nicks\", \"united kingdom\", \"28.5\", \"92.70\"],[\"3\", \"marianne nagy / lászló nagy\", \"hungary\", \"32\", \"92.25\"],[\"4\", \"elianne steineman / andré calamé\", \"switzerland\", \"44.5\", \"90.00\"],[\"5\", \"suzanne gheldorf / jacques rénard\", \"belgium\", \"48.5\", \"89.43\"],[\"6\", \"elly stärck / harry gareis\", \"austria\", \"61\", \"88.08\"],[\"7\", \"marlene smith / donald gilchrist\", \"canada\", \"63\", \"87.07\"],[\"8\", \"joan waterhouse / gordon holloway\", \"united kingdom\", \"62\", \"88.31\"],[\"9\", \"liliane de becker / edmund verbustel\", \"belgium\", \"64\", \"88.42\"],[\"10\", \"irene maguire / walter muehlbronner\", \"united states\", \"82\", \"84.26\"],[\"11\", \"sybil cooke / bob hudson\", \"united kingdom\", \"93.5\", \"83.47\"],[\"12\", \"denise favart / jacques favart\", \"france\", \"108\", \"77.73\"]]\nQuestion = Is it true that liliane de becker and edmund verbustel had placings of 64?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    placings = get_column_by_name(table_data, \"placings\")\n    for name, placing in zip(names, placings):\n        if \"liliane de becker / edmund verbustel\" in name.lower():\n            answer = equal_to(placing, \"64\")\n            break \n    return answer\n\n### END"}
{"id": "2ed4c998-cb4b-4ce2-8089-b6f464990b4b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of the busiest airports in africa\ntable_data = [[\"country\", \"airport\", \"city\", \"2010\", \"change (10 / 09)\"],[\"south africa\", \"or tambo international airport\", \"johannesburg\", \"18383549\", \"0 11.4%\"],[\"egypt\", \"cairo international airport\", \"cairo\", \"16148480\", \"0 12.3%\"],[\"spain\", \"gran canaria airport\", \"las palmas de gran canaria\", \"9486035\", \"0 3.6%\"],[\"egypt\", \"sharm el - sheikh international airport\", \"sharm el - sheikh\", \"8693990\", \"0 17.0%\"],[\"south africa\", \"cape town international airport\", \"cape town\", \"8107648\", \"0 5.0%\"],[\"egypt\", \"hurghada international airport\", \"hurghada\", \"8062652\", \"0 19.8%\"],[\"spain\", \"tenerife sur\", \"granadilla de abona\", \"7358986\", \"0 3.5%\"],[\"morocco\", \"mohammed v international airport\", \"casablanca\", \"7245508\", \"0 13.3%\"],[\"nigeria\", \"murtala muhammed international airport\", \"lagos\", \"6273545\", \"0 11.1%\"],[\"kenya\", \"jomo kenyatta international airport\", \"nairobi\", \"5485771\", \"0 8.0%\"],[\"spain\", \"lanzarote airport\", \"san bartolomé , las palmas\", \"4938343\", \"0 5.0%\"],[\"south africa\", \"king shaka international airport\", \"durban\", \"4757800\", \"0 10.5%\"],[\"ethiopia\", \"bole international airport\", \"addis ababa\", \"4562036\", \"0 13.83\"],[\"spain\", \"fuerteventura airport\", \"puerto del rosario\", \"4173590\", \"0 11.6%\"],[\"spain\", \"tenerife norte\", \"san cristóbal de la laguna\", \"4051356\", \"0 0.1%\"],[\"nigeria\", \"nnamdi azikiwe international airport\", \"abuja\", \"3922547\", \"0 22.7%\"],[\"morocco\", \"marrakech - menara airport\", \"marrakech\", \"3453044\", \"0 15.0%\"],[\"mauritius\", \"sir seewoosagur ramgoolam international airport\", \"mauritius\", \"2509156\", \"0 8.5%\"],[\"france\", \"la réunion roland garros airport\", \"saint - denis\", \"1911336\", \"0 13.5%\"],[\"senegal\", \"léopold sédar senghor international airport\", \"dakar\", \"1687006\", \"unknown\"],[\"morocco\", \"agadir - al massira airport\", \"agadir\", \"1621272\", \"0 11.3%\"],[\"tanzania\", \"julius nyerere international airport\", \"dar es salaam\", \"1556410\", \"0 9.4%\"],[\"south africa\", \"port elizabeth airport\", \"port elizabeth\", \"1400688\", \"0 3.2%\"],[\"ghana\", \"kotoka international airport\", \"accra\", \"1387045\", \"unknown\"],[\"nigeria\", \"port harcourt international airport\", \"port harcourt\", \"1211816\", \"0 12.0%\"],[\"south africa\", \"lanseria international airport\", \"krugersdorp\", \"1000000\", \"unknown\"]]\nQuestion = Is it true that ghana 's kotoka international airport had more passengers in 2010 than south africa 's port elizabeth airport?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    countries = get_column_by_name(table_data, \"country\")\n    airports = get_column_by_name(table_data, \"airport\")\n    passengers = get_column_by_name(table_data, \"2010\")\n    ghana_passengers = 0\n    sa_passengers = 0\n    for country, airport, passenger in zip(countries, airports, passengers):\n        if country.lower() == \"ghana\" and airport.lower() == \"kotoka international airport\":\n            ghana_passengers = int(passenger)\n        if country.lower() == \"south africa\" and airport.lower() == \"port elizabeth airport\":\n            sa_passengers = int(passenger)\n    answer = greater(ghana_passengers, sa_passengers)\n    return answer\n\n### END"}
{"id": "3805be95-d39d-45fc-8bd6-66140b274909", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1970 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"carlton\", \"16.14 (110)\", \"st kilda\", \"10.11 (71)\", \"princes park\", \"22988\", \"18 july 1970\"],[\"south melbourne\", \"11.9 (75)\", \"richmond\", \"12.17 (89)\", \"lake oval\", \"25651\", \"18 july 1970\"],[\"north melbourne\", \"13.17 (95)\", \"fitzroy\", \"18.14 (122)\", \"arden street oval\", \"8443\", \"18 july 1970\"],[\"geelong\", \"15.16 (106)\", \"essendon\", \"8.17 (65)\", \"kardinia park\", \"17220\", \"18 july 1970\"],[\"melbourne\", \"7.19 (61)\", \"collingwood\", \"10.16 (76)\", \"mcg\", \"36044\", \"18 july 1970\"],[\"hawthorn\", \"23.9 (147)\", \"footscray\", \"6.12 (48)\", \"vfl park\", \"14151\", \"18 july 1970\"]]\nQuestion = Is it true that in the match where the away team scored 8.17 (65) , the home team scored 15.16 (106)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    away_team_scores = get_column_by_name(table_data, \"away team score\")\n    for home_team_score, away_team_score in zip(home_team_scores, away_team_scores):\n        if away_team_score == \"8.17 (65)\":\n            answer = equal_to(home_team_score, \"15.16 (106)\")\n            break \n    return answer\n\n### END"}
{"id": "2b1f02b1-b1d2-46b6-bdf1-55e93b604fc0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rowing at the 2008 summer olympics - women 's lightweight double sculls\ntable_data = [[\"rank\", \"rowers\", \"country\", \"time\", \"notes\"],[\"1\", \"melanie kok , tracy cameron\", \"canada\", \"7:10.70\", \"fa\"],[\"2\", \"xu dongxiang , chen haixia\", \"china\", \"7:11.59\", \"fa\"],[\"3\", \"chrysi biskitzi , alexandra tsiavou\", \"greece\", \"7:11.99\", \"fa\"],[\"4\", \"renee hykel , jennifer goldsack\", \"united states\", \"7:12.15\", \"fb\"],[\"5\", \"amber halliday , marguerite houston\", \"australia\", \"7:13.80\", \"fb\"],[\"6\", \"misaki kumakura , akiko iwamoto\", \"japan\", \"7:16.13\", \"fb\"]]\nQuestion = Is it true that the athletes who were ranked smaller than 5 with notes listed as fb were from the united states?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef smaller_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    countries = get_column_by_name(table_data, \"country\")\n    notes = get_column_by_name(table_data, \"notes\")\n    answer = False\n    for rank, country, note in zip(ranks, countries, notes):\n        if smaller_than(int(rank), 5) and note.lower() == \"fb\" and country.lower() == \"united states\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "da811cff-5957-488e-84a9-4bac85f4befe", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1961 british saloon car championship season\ntable_data = [[\"round\", \"circuit\", \"date\", \"class a winner\", \"class b winner\", \"class c winner\", \"class d winner\"],[\"1\", \"snetterton motor racing circuit , norfolk\", \"25 march\", \"george 'doc' shepherd\", \"alan hutcheson\", \"none (no entries)\", \"gawaine baillie\"],[\"2\", \"goodwood circuit , west sussex\", \"3 april\", \"john whitmore\", \"bill blydenstein\", \"ellis cuff - miller\", \"mike parkes\"],[\"3\", \"aintree motor racing circuit , liverpool\", \"22 april\", \"john whitmore\", \"alan hutcheson\", \"chris kerrison\", \"roy salvadori\"],[\"4\", \"silverstone circuit , northamptonshire\", \"6 may\", \"bill aston\", \"peter harper\", \"chris kerrison\", \"graham hill\"],[\"5\", \"crystal palace , london\", \"22 may\", \"george 'doc' shepherd\", \"bill blydenstein\", \"none (no entries)\", \"roy salvadori\"],[\"6\", \"silverstone circuit , northamptonshire\", \"8 july\", \"herbert linge\", \"ellis cuff - miller\", \"chris kerrison\", \"mike parkes\"],[\"7\", \"brands hatch , kent\", \"7 august\", \"frank hamlin\", \"alan hutcheson\", \"chris kerrison\", \"mike parkes\"],[\"8\", \"oulton park , cheshire\", \"23 september\", \"john whitmore\", \"peter harper\", \"none (no entries)\", \"roy salvadori\"]]\nQuestion = Is it true that alan hutcheson won class b , in round 1 , on 25th march?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    dates = get_column_by_name(table_data, \"date\")\n    class_b_winners = get_column_by_name(table_data, \"class b winner\")\n    for round, date, class_b_winner in zip(rounds, dates, class_b_winners):\n        if round == \"1\" and date == \"25 march\":\n            answer = equal_to(class_b_winner, \"alan hutcheson\")\n            break \n    return answer\n\n### END"}
{"id": "429bcf0e-5bb1-42ac-8c0b-944d648ec2ef", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = usa today all - usa high school baseball team\ntable_data = [[\"player\", \"position\", \"school\", \"hometown\", \"mlb draft\"],[\"delmon young\", \"outfielder\", \"camarillo high school\", \"camarillo , ca\", \"1st round - 1st pick of 2003 draft ( devil rays )\"],[\"chris lubanski\", \"outfielder\", \"kennedy - kenrick catholic high school\", \"norristown , pa\", \"1st round - 5th pick of 2003 draft ( royals )\"],[\"lastings milledge\", \"outfielder\", \"lakewood ranch high school\", \"bradenton , fl\", \"1st round - 12th pick of 2003 draft ( mets )\"],[\"brandon wood\", \"infielder\", \"horizon high school\", \"scottsdale , az\", \"1st round - 23rd pick of 2003 draft ( angels )\"],[\"john danks\", \"pitcher\", \"round rock high school\", \"round rock , tx\", \"1st round - 9th pick of 2003 draft ( rangers )\"],[\"jonathan fulton\", \"infielder\", \"george washington high school\", \"danville , va\", \"3rd round - 83rd pick of 2003 draft ( marlins )\"],[\"ian stewart\", \"infielder\", \"la quinta high school\", \"westminster , ca\", \"1st round - 10th pick of 2003 draft ( rockies )\"],[\"jeff allison\", \"pitcher\", \"veterans memorial high school\", \"peabody , ma\", \"1st round - 16th pick of 2003 draft ( marlins )\"],[\"daric barton\", \"catcher\", \"marina high school\", \"huntington beach , ca\", \"1st round - 28th pick of 2003 draft ( cardinals )\"],[\"eric duncan\", \"infielder\", \"seton hall preparatory school\", \"west orange , nj\", \"1st round - 27th pick of 2003 draft ( yankees )\"]]\nQuestion = Is it true that the person who attended camarillo high school was drafted in the 1st round - 10th pick of 2003 draft?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    schools = get_column_by_name(table_data, \"school\")\n    mlb_drafts = get_column_by_name(table_data, \"mlb draft\")\n    for school, mlb_draft in zip(schools, mlb_drafts):\n        if school.lower() == \"camarillo high school\":\n            answer = equal_to(mlb_draft, \"1st round - 10th pick of 2003 draft\")\n            break \n    return answer\n\n### END"}
{"id": "d017459b-7f2d-449e-a26f-7dcd4d8dc995", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 fis ski jumping world cup\ntable_data = [[\"rank\", \"name\", \"nationality\", \"1st (m)\", \"2nd (m)\", \"points\", \"overall fht points\", \"overall wc points (rank)\"],[\"1\", \"thomas morgenstern\", \"austria\", \"133.0\", \"136.0\", \"264.7\", \"987.1 (6)\", \"440 (4)\"],[\"2\", \"janne ahonen\", \"finland\", \"134.0\", \"133.5\", \"264.0\", \"1013.9 (2)\", \"350 (7)\"],[\"3\", \"simon ammann\", \"switzerland\", \"136.0\", \"131.5\", \"261.5\", \"1008.3 (5)\", \"669 (1)\"],[\"4\", \"wolfgang loitzl\", \"austria\", \"130.5\", \"135.0\", \"260.9\", \"1011.6 (3)\", \"411 (5)\"],[\"5\", \"andreas kofler\", \"austria\", \"129.0\", \"133.5\", \"255.0\", \"1027.2 (1)\", \"521 (3)\"]]\nQuestion = Is it true that wolfgang loitzl from austria was ranked number 4 and had overall fht points of 987.1 (6)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    names = get_column_by_name(table_data, \"name\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    overall_fht_points = get_column_by_name(table_data, \"overall fht points\")\n    for rank, name, nationality, overall_fht_point in zip(ranks, names, nationalities, overall_fht_points):\n        if name.lower() == \"wolfgang loitzl\" and nationality.lower() == \"austria\":\n            answer = equal_to(rank, \"4\") and equal_to(overall_fht_point, \"987.1 (6)\")\n            break \n    return answer\n\n### END"}
{"id": "56f63e8d-e06f-45f2-af66-0e90b5412111", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of leverage episodes\ntable_data = [[\"series\",\"season\",\"title\",\"directed by\",\"written by\",\"original air date\",\"us viewers (in millions)\"],[\"14\",\"1\",\"the beantown bailout job\",\"dean devlin\",\"john rogers\",\"july 15 , 2009\",\"3.89\"],[\"15\",\"2\",\"the tap - out job\",\"marc roskin\",\"albert kim\",\"july 22 , 2009\",\"3.05\"],[\"16\",\"3\",\"the order 23 job\",\"rod hardy\",\"chris downey\",\"july 29 , 2009\",\"3.68\"],[\"17\",\"4\",\"the fairy godparents job\",\"jonathan frakes\",\"amy berg\",\"august 5 , 2009\",\"3.69\"],[\"18\",\"5\",\"the three days of the hunter job\",\"marc roskin\",\"melissa glenn & jessica rieder\",\"august 12 , 2009\",\"3.16\"],[\"19\",\"6\",\"the top hat job\",\"peter o'fallon\",\"m scott veach & christine boylan\",\"august 19 , 2009\",\"3.43\"],[\"20\",\"7\",\"the two live crew job\",\"dean devlin\",\"amy berg & john rogers\",\"august 26 , 2009\",\"3.73\"],[\"21\",\"8\",\"the ice man job\",\"jeremiah chechik\",\"christine boylan\",\"september 2 , 2009\",\"3.58\"],[\"22\",\"9\",\"the lost heir job\",\"peter winther\",\"chris downey\",\"september 9 , 2009\",\"3.37\"],[\"23\",\"10\",\"the runway job\",\"mark roskin\",\"albert kim\",\"january 13 , 2010\",\"3.69\"],[\"24\",\"11\",\"the bottle job\",\"jonathan frakes\",\"christine boylan\",\"january 20 , 2010\",\"3.00\"],[\"25\",\"12\",\"the zanzibar marketplace job\",\"jeremiah chechik\",\"melissa glenn & jessica rieder\",\"january 27 , 2010\",\"3.02\"],[\"26\",\"13\",\"the future job\",\"mark roskin\",\"amy berg & chris downey\",\"february 3 , 2010\",\"2.91\"],[\"27\",\"14\",\"the three strikes job\",\"dean devlin\",\"john rogers\",\"february 10 , 2010\",\"2.8\"]]\nQuestion = Is it true that series 23 was directed by jonathan frakes?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    series = get_column_by_name(table_data, \"series\")\n    directors = get_column_by_name(table_data, \"directed by\")\n    answer = False\n    for serie, director in zip(series, directors):\n        if serie == \"23\" and director.lower() == \"jonathan frakes\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "2a790add-6d20-4705-9ba6-c9577c071a49", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of collaborative software\ntable_data = [[\"name\", \"e - mail server\", \"faxing\", \"instant messaging\", \"telephony\", \"videoconferencing\", \"web conferencing\", \"data conferencing\", \"application sharing\", \"electronic meeting system\", \"synchronous conferencing\"],[\"ibm sametime\", \"no , integrated with lotus domino\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ibm lotus domino\", \"yes\", \"yes\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"no\", \"yes with integrated sametime\", \"yes with integrated sametime\", \"no\"],[\"microsoft exchange server\", \"yes\", \"yes\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"],[\"microsoft lync server\", \"no , integrated with exchange server\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"microsoft sharepoint\", \"no , integrated with exchange server\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"],[\"name\", \"e - mail server\", \"faxing\", \"instant messaging\", \"telephony\", \"videoconferencing\", \"web conferencing\", \"data conferencing\", \"application sharing\", \"electronic meeting system\", \"synchronous conferencing\"]]\nQuestion = Is it true that ibm sametime offers both application sharing and web conferencing?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    application_sharing = get_column_by_name(table_data, \"application sharing\")\n    web_conferencing = get_column_by_name(table_data, \"web conferencing\")\n    for name, app_share, web_conf in zip(names, application_sharing, web_conferencing):\n        if name.lower() == \"ibm sametime\":\n            answer = equal_to(app_share, \"yes\") and equal_to(web_conf, \"yes\")\n            break \n    return answer\n\n### END"}
{"id": "f7347be2-7e85-437e-aee9-367c484e39d6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = papal conclave , 1314 - 16\ntable_data = [[\"elector\",\"nationality\",\"faction\",\"elevated\",\"elevator\"],[\"nicolò albertini , op\",\"prato\",\"italian\",\"1303 , december 18\",\"benedict xi\"],[\"bérenger frédol , seniore\",\"french\",\"french\",\"1305 , december 15\",\"clement v\"],[\"arnaud de falguières\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"],[\"guillaume de mandagot , crsa\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"arnaud d'aux\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"jacques d'euse\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"nicolas de fréauville , op\",\"french\",\"french\",\"1305 , december 15\",\"clement v\"],[\"arnaud nouvel , ocist\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"],[\"bérenguer frédol , iuniore\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"michel du bec - crespin\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"guillaume teste\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"guillaume pierre godin , op\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"vital du four , ofm\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"raymond , osb\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"giacomo colonna\",\"roman\",\"italian\",\"1278 , march 12\",\"nicholas iii\"],[\"napoleone orsini\",\"roman\",\"italian\",\"1288 , may 16\",\"nicholas iv\"],[\"pietro colonna\",\"roman\",\"italian\",\"1288 , may 16\",\"nicholas iv\"],[\"guglielmo de longhi\",\"bergamo\",\"italian\",\"1294 , september 18\",\"celestine v\"],[\"giacomo gaetani stefaneschi\",\"rome\",\"italian\",\"1295 , december 17\",\"boniface viii\"],[\"francesco caetani\",\"rome\",\"italian\",\"1295 , december 17\",\"boniface viii\"],[\"luc fieschi\",\"genoese\",\"italian\",\"1300 , march 2\",\"boniface viii\"],[\"arnaud de pellegrue\",\"french\",\"gascon\",\"1305 , december 15\",\"clement v\"],[\"raymond guillaume des forges\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"],[\"bernard de garves\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"]]\nQuestion = Is it true that the elevator nicholas iii 's nationality is roman?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    elevators = get_column_by_name(table_data, \"elevator\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    answer = False\n    for elevator, nationality in zip(elevators, nationalities):\n        if \"nicholas iii\" in elevator.lower():\n            if \"roman\" in nationality.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "4cbc6406-d5df-44e1-b474-a3bb39685389", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"population (region total)\", \"population (stanthorpe)\", \"population (warwick)\", \"population (allora)\", \"population (glengallan)\", \"population (rosenthal)\"],[\"1933\", \"25016\", \"6934\", \"6664\", \"2624\", \"6334\", \"2460\"],[\"1947\", \"24009\", \"7419\", \"7129\", \"2217\", \"5269\", \"1975\"],[\"1954\", \"25862\", \"8335\", \"9151\", \"2106\", \"4639\", \"1631\"],[\"1961\", \"26288\", \"8514\", \"9843\", \"1961\", \"4388\", \"1582\"],[\"1966\", \"25917\", \"8503\", \"10065\", \"1890\", \"3906\", \"1553\"],[\"1971\", \"24115\", \"8189\", \"9303\", \"1719\", \"3410\", \"1494\"],[\"1976\", \"24583\", \"8709\", \"9169\", \"1666\", \"3491\", \"1548\"],[\"1981\", \"24300\", \"8576\", \"8853\", \"1679\", \"3611\", \"1581\"],[\"1986\", \"26270\", \"9143\", \"9435\", \"2041\", \"3688\", \"1963\"],[\"1991\", \"28288\", \"9556\", \"10393\", \"2132\", \"3966\", \"2241\"],[\"1996\", \"29563\", \"9596\", \"10896\", \"2234\", \"3990\", \"2742\"],[\"2001\", \"30554\", \"9860\", \"10956\", \"2439\", \"4088\", \"3129\"]]\nQuestion = Is it true that stanthorpe has maximum population size of 9860 and it was in 1996?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    stanthorpe_populations = get_column_by_name(table_data, \"population (stanthorpe)\")\n    years = get_column_by_name(table_data, \"year\")\n    max_population = max(stanthorpe_populations, key=int)\n    max_population_year = years[stanthorpe_populations.index(max_population)]\n    answer = equal_to(max_population, \"9860\") and equal_to(max_population_year, \"1996\")\n    return answer\n\n### END"}
{"id": "048d7106-359d-4632-b13f-83cffa19d121", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = air macau destinations\ntable_data = [[\"city\",\"country\",\"iata\",\"icao\",\"airport\"],[\"bangkok\",\"thailand\",\"bkk\",\"vtbs\",\"suvarnabhumi airport\"],[\"beijing\",\"china\",\"pek\",\"zbaa\",\"beijing capital international airport\"],[\"changsha\",\"china\",\"csx\",\"zgha\",\"changsha huanghua international airport\"],[\"chengdu\",\"china\",\"ctu\",\"zuuu\",\"chengdu shuangliu international airport\"],[\"chongqing\",\"china\",\"ckg\",\"zuck\",\"chongqing jiangbei international airport\"],[\"hangzhou\",\"china\",\"hgh\",\"zshc\",\"hangzhou xiaoshan international airport\"],[\"hefei\",\"china\",\"hfe\",\"zsof\",\"hefei luogang international airport\"],[\"kaohsiung\",\"taiwan\",\"khh\",\"rckh\",\"kaohsiung international airport\"],[\"macau\",\"macau\",\"mfm\",\"vmmc\",\"macau international airport\"],[\"nanjing\",\"china\",\"nkg\",\"zsnj\",\"nanjing lukou international airport\"],[\"nanning\",\"china\",\"nng\",\"zgnn\",\"nanning wuxu international airport\"],[\"ningbo\",\"china\",\"ngb\",\"zsnb\",\"ningbo lishe international airport\"],[\"osaka\",\"japan\",\"kix\",\"rjbb\",\"kansai international airport\"],[\"seoul\",\"south korea\",\"icn\",\"rksi\",\"incheon international airport\"],[\"shanghai\",\"china\",\"sha\",\"zsss\",\"shanghai hongqiao international airport\"],[\"shanghai\",\"china\",\"pvg\",\"zspd\",\"shanghai pudong international airport\"],[\"shenyang\",\"china\",\"she\",\"zytx\",\"shenyang taoxian international airport\"],[\"shenzhen\",\"china\",\"szx\",\"zgsz\",\"shenzhen bao'an international airport\"],[\"singapore\",\"singapore\",\"sin\",\"wsss\",\"singapore changi airport\"],[\"taipei\",\"taiwan\",\"tpe\",\"rctp\",\"taiwan taoyuan international airport\"],[\"taiyuan\",\"china\",\"tyn\",\"zbyn\",\"taiyuan wusu airport\"],[\"tokyo\",\"japan\",\"nrt\",\"rjaa\",\"narita international airport\"],[\"xiamen\",\"china\",\"xmn\",\"zsam\",\"xiamen gaoqi international airport\"],[\"wenzhou\",\"china\",\"wnz\",\"zswz\",\"wenzhou yongqiang international airport\"]]\nQuestion = Is it true that kaoshiung international airport 's icao code is rckh?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    airports = get_column_by_name(table_data, \"airport\")\n    icaos = get_column_by_name(table_data, \"icao\")\n    for airport, icao in zip(airports, icaos):\n        if \"kaohsiung international airport\" in airport.lower():\n            answer = equal_to(icao, \"rckh\")\n            break \n    return answer\n\n### END"}
{"id": "1c1bbc92-8d2f-416f-a394-4b9fbe4908ea", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = american dad! (season 1)\ntable_data = [[\"no in series\", \"title\", \"directed by\", \"written by\", \"original air date\", \"production code\", \"us viewers (millions)\"],[\"1\", \"pilot\", \"ron hughart\", \"seth macfarlane , mike barker & matt weitzman\", \"february 6 , 2005\", \"1ajn01\", \"15.10\"],[\"2\", \"threat levels\", \"brent woods\", \"david zuckerman\", \"may 1 , 2005\", \"1ajn02\", \"9.47\"],[\"3\", \"stan knows best\", \"pam cooke\", \"mike barker & matt weitzman\", \"may 8 , 2005\", \"1ajn03\", \"8.23\"],[\"4\", \"francine 's flashback\", \"caleb meurer & brent woods\", \"rick wiener & kenny schwartz\", \"may 15 , 2005\", \"1ajn05\", \"7.84\"],[\"5\", \"roger codger\", \"albert calleros\", \"dan vebber\", \"june 5 , 2005\", \"1ajn04\", \"6.09\"],[\"6\", \"homeland insecurity\", \"rodney clouden\", \"neal boushell & sam o'neal\", \"june 12 , 2005\", \"1ajn06\", \"6.85\"]]\nQuestion = Is it true that dan vebber wrote episode series number 5?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    series_numbers = get_column_by_name(table_data, \"no in series\")\n    writers = get_column_by_name(table_data, \"written by\")\n    for series_number, writer in zip(series_numbers, writers):\n        if series_number == \"5\":\n            answer = equal_to(writer, \"dan vebber\")\n            break \n    return answer\n\n### END"}
{"id": "dbf51d7b-7057-4bfa-ada9-7c8a8325ace8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of rna structure prediction software\ntable_data = [[\"name\", \"species specific\", \"intra - molecular structure\", \"comparative\", \"link\"],[\"diana - microt\", \"human , mouse\", \"no\", \"yes\", \"webserver\"],[\"microtar\", \"no\", \"no\", \"no\", \"sourcecode\"],[\"mitarget\", \"no\", \"no\", \"no\", \"webserver\"],[\"mirror\", \"no\", \"no\", \"no\", \"webserver\"],[\"pictar\", \"8 vertebrates\", \"no\", \"yes\", \"predictions\"],[\"pita\", \"no\", \"yes\", \"no\", \"executable , webserver , predictions\"],[\"rna22\", \"no\", \"no\", \"no\", \"predictions custom\"],[\"rnahybrid\", \"no\", \"no\", \"no\", \"sourcecode , webserver\"],[\"sylamer\", \"no\", \"no\", \"no\", \"sourcecode webserver\"],[\"taref\", \"yes\", \"no\", \"no\", \"server / sourcecode\"],[\"p - taref\", \"yes\", \"no\", \"no\", \"server / standalone\"],[\"targetscan\", \"vertebrates , flies , nematodes\", \"evaluated indirectly\", \"yes\", \"sourcecode , webserver\"]]\nQuestion = Is it true that mitarget had no intra - molecular structure and no comparative?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    intra_molecular_structures = get_column_by_name(table_data, \"intra - molecular structure\")\n    comparatives = get_column_by_name(table_data, \"comparative\")\n    for name, intra_molecular_structure, comparative in zip(names, intra_molecular_structures, comparatives):\n        if name.lower() == \"mitarget\":\n            answer = equal_to(intra_molecular_structure, \"no\") and equal_to(comparative, \"no\")\n            break \n    return answer\n\n### END"}
{"id": "68407672-dda0-443d-9fd6-c8eaa45edd51", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of leverage episodes\ntable_data = [[\"series\",\"season\",\"title\",\"directed by\",\"written by\",\"original air date\",\"us viewers (in millions)\"],[\"14\",\"1\",\"the beantown bailout job\",\"dean devlin\",\"john rogers\",\"july 15, 2009\",\"3.89\"],[\"15\",\"2\",\"the tap - out job\",\"marc roskin\",\"albert kim\",\"july 22, 2009\",\"3.05\"],[\"16\",\"3\",\"the order 23 job\",\"rod hardy\",\"chris downey\",\"july 29, 2009\",\"3.68\"],[\"17\",\"4\",\"the fairy godparents job\",\"jonathan frakes\",\"amy berg\",\"august 5, 2009\",\"3.69\"],[\"18\",\"5\",\"the three days of the hunter job\",\"marc roskin\",\"melissa glenn & jessica rieder\",\"august 12, 2009\",\"3.16\"],[\"19\",\"6\",\"the top hat job\",\"peter o'fallon\",\"m scott veach & christine boylan\",\"august 19, 2009\",\"3.43\"],[\"20\",\"7\",\"the two live crew job\",\"dean devlin\",\"amy berg & john rogers\",\"august 26, 2009\",\"3.73\"],[\"21\",\"8\",\"the ice man job\",\"jeremiah chechik\",\"christine boylan\",\"september 2, 2009\",\"3.58\"],[\"22\",\"9\",\"the lost heir job\",\"peter winther\",\"chris downey\",\"september 9, 2009\",\"3.37\"],[\"23\",\"10\",\"the runway job\",\"mark roskin\",\"albert kim\",\"january 13, 2010\",\"3.69\"],[\"24\",\"11\",\"the bottle job\",\"jonathan frakes\",\"christine boylan\",\"january 20, 2010\",\"3.00\"],[\"25\",\"12\",\"the zanzibar marketplace job\",\"jeremiah chechik\",\"melissa glenn & jessica rieder\",\"january 27, 2010\",\"3.02\"],[\"26\",\"13\",\"the future job\",\"mark roskin\",\"amy berg & chris downey\",\"february 3, 2010\",\"2.91\"],[\"27\",\"14\",\"the three strikes job\",\"dean devlin\",\"john rogers\",\"february 10, 2010\",\"2.8\"]]\nQuestion = Is it true that the season number for series 23 , the runway job , was 10 , with september 9 , 2009 air date?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    series = get_column_by_name(table_data, \"series\")\n    seasons = get_column_by_name(table_data, \"season\")\n    titles = get_column_by_name(table_data, \"title\")\n    air_dates = get_column_by_name(table_data, \"original air date\")\n    for serie, season, title, air_date in zip(series, seasons, titles, air_dates):\n        if serie == \"23\" and title.lower() == \"the runway job\":\n            answer = equal_to(season, \"10\") and equal_to(air_date, \"september 9, 2009\")\n            break \n    return answer\n\n### END"}
{"id": "b75de224-2187-42c3-a1b7-2ae85e208ff1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2004 - 05 in scottish football\ntable_data = [[\"date\",\"venue\",\"score\",\"competition\",\"report\"],[\"18 august\",\"hampden park , glasgow (h)\",\"0 - 3\",\"friendly\",\"bbc sport\"],[\"3 september\",\"estadio ciudad de valencia , valencia (a)\",\"1 - 1\",\"friendly\",\"bbc sport\"],[\"8 september\",\"hampden park , glasgow (h)\",\"0 - 0\",\"wcq5\",\"bbc sport\"],[\"9 october\",\"hampden park , glasgow (h)\",\"0 - 1\",\"wcq5\",\"bbc sport\"],[\"13 october\",\"republican stadium , chişinău (a)\",\"1 - 1\",\"wcq5\",\"bbc sport\"],[\"17 november\",\"easter road , edinburgh (h)\",\"1 - 4\",\"friendly\",\"bbc sport\"],[\"26 march\",\"san siro , milan (a)\",\"0 - 2\",\"wcq5\",\"bbc sport\"],[\"4 june\",\"hampden park , glasgow (h)\",\"2 - 0\",\"wcq5\",\"bbc sport\"],[\"8 june\",\"dinamo stadion , minsk (a)\",\"0 - 0\",\"wcq5\",\"bbc sport\"]]\nQuestion = Is it true that the score was 0 - 2 at the san siro , milan (a) venue?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"venue\")\n    scores = get_column_by_name(table_data, \"score\")\n    for venue, score in zip(venues, scores):\n        if \"san siro , milan (a)\" in venue.lower():\n            answer = equal_to(score, \"0 - 2\")\n            break \n    return answer\n\n### END"}
{"id": "84745e8a-68ec-493d-946e-a97d7640178a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\"],[\"coronation street\", \"who do you think you are\", \"the nature of things\", \"the nature of things\", \"doc zone\", \"doc zone\", \"the national\"],[\"etalk\", \"jeopardy!\", \"csi\", \"csi\", \"grey 's anatomy\", \"grey 's anatomy\", \"er\"],[\"et canada\", \"entertainment tonight\", \"survivor : china\", \"survivor : china\", \"the office\", \"my name is earl\", \"shark\"],[\"wheel of fortune\", \"e2\", \"scrubs\", \"30 rock\", \"don't forget the lyrics!\", \"don't forget the lyrics!\", \"big shots\"],[\"friends\", \"access hollywood\", \"ugly betty\", \"ugly betty\", \"supernatural\", \"supernatural\", \"terminal city\"],[\"the insider\", \"e! news\", \"are you smarter than a 5th grader\", \"are you smarter than a 5th grader\", \"e! movies we love\", \"e! movies we love\", \"e! movies we love\"],[\"virginie\", \"infoman\", \"le moment de vérité\", \"le moment de vérité\", \"tous pour un\", \"tous pour un\", \"le téléjournal\"],[\"la fièvre de la danse\", \"la fièvre de la danse\", \"le banquier\", \"le banquier\", \"taxi 0 - 22\", \"taxi 0 - 22\", \"le tva 22 heures\"],[\"loft story\", \"criss angel\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal du soir\"]]\nQuestion = Is it true that et candada came on at 7:00 , the same channel had survivor : tawain at 8:00?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    column_7 = get_column_by_index(table_data, 0)\n    column_8 = get_column_by_index(table_data, 2)\n    answer = False\n    for show_7, show_8 in zip(column_7, column_8):\n        if equal_to(show_7, \"et canada\") and equal_to(show_8, \"survivor : tawain\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "a804dea2-494a-4234-ad8c-e7b76e3f9f2c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 miller superbike world championship round\ntable_data = [[\"rider\", \"bike\", \"laps\", \"time\", \"grid\"],[\"carlos checa\", \"honda cbr1000rr\", \"20\", \"37:04.991\", \"1\"],[\"troy corser\", \"yamaha yzf - r1\", \"20\", \"+ 2.809\", \"5\"],[\"michel fabrizio\", \"ducati 1098 f08\", \"20\", \"+ 6.546\", \"4\"],[\"max neukirchner\", \"suzuki gsx - r1000\", \"20\", \"+ 7.764\", \"2\"],[\"fonsi nieto\", \"suzuki gsx - r1000\", \"20\", \"+ 16.475\", \"13\"],[\"jakub smrz\", \"ducati 1098 rs 08\", \"20\", \"+ 17.126\", \"11\"],[\"karl muggeridge\", \"honda cbr1000rr\", \"20\", \"+ 17.284\", \"12\"],[\"yukio kagayama\", \"suzuki gsx - r1000\", \"20\", \"+ 17.416\", \"8\"],[\"max biaggi\", \"ducati 1098 rs 08\", \"20\", \"+ 18.117\", \"9\"],[\"ryuichi kiyonari\", \"honda cbr1000rr\", \"20\", \"+ 20.467\", \"20\"],[\"lorenzo lanzi\", \"ducati 1098 rs 08\", \"20\", \"+ 21.742\", \"15\"],[\"kenan sofuoğlu\", \"honda cbr1000rr\", \"20\", \"+ 27.533\", \"25\"],[\"gregorio lavilla\", \"honda cbr1000rr\", \"20\", \"+ 32.609\", \"23\"],[\"ruben xaus\", \"ducati 1098 rs 08\", \"20\", \"+ 33.165\", \"6\"],[\"russell holland\", \"honda cbr1000rr\", \"20\", \"+ 34.182\", \"17\"],[\"shinichi nakatomi\", \"yamaha yzf - r1\", \"20\", \"+ 34.500\", \"22\"],[\"ayrton badovini\", \"kawasaki zx - 10r\", \"20\", \"+ 36.155\", \"16\"],[\"sébastien gimbert\", \"yamaha yzf - r1\", \"20\", \"+ 41.685\", \"24\"],[\"makoto tamada\", \"kawasaki zx - 10r\", \"20\", \"+ 43.579\", \"18\"],[\"roberto rolfo\", \"honda cbr1000rr\", \"20\", \"+ 54.195\", \"28\"],[\"jason pridmore\", \"honda cbr1000rr\", \"20\", \"+ 1:00.388\", \"19\"],[\"vittorio iannuzzo\", \"kawasaki zx - 10r\", \"20\", \"+ 1:02.104\", \"21\"],[\"scott jensen\", \"suzuki gsx - r1000 k8\", \"20\", \"+ 1:09.953\", \"29\"],[\"loic napoleone\", \"yamaha yzf - r1\", \"20\", \"+ 1:12.258\", \"27\"],[\"shuhei aoyama\", \"honda cbr1000rr\", \"14\", \"retirement\", \"14\"],[\"david checa\", \"yamaha yzf - r1\", \"6\", \"retirement\", \"26\"],[\"noriyuki haga\", \"yamaha yzf - r1\", \"5\", \"accident\", \"10\"],[\"troy bayliss\", \"ducati 1098 f08\", \"4\", \"accident\", \"3\"],[\"régis laconi\", \"kawasaki zx - 10r\", \"4\", \"retirement\", \"7\"]]\nQuestion = Is it true that suzuki gsx - r1000 is the bike that has a grid number smaller than 9 with a time of + 7.764?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef smaller(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    bikes = get_column_by_name(table_data, \"bike\")\n    times = get_column_by_name(table_data, \"time\")\n    grids = get_column_by_name(table_data, \"grid\")\n    for bike, time, grid in zip(bikes, times, grids):\n        if bike.lower() == \"suzuki gsx - r1000\" and equal_to(time, \"+ 7.764\") and smaller(int(grid), 9):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "59582bd8-f725-48a3-ba4f-38717005b4bc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = ghost whisperer (season 3)\ntable_data = [[\"no in series\",\"no in season\",\"title\",\"directed by\",\"written by\", \"original air date\",\"us viewers (millions)\"],[\"45\", \"1\", \"the underneath\", \"john gray\", \"john gray\", \"september 28, 2007\", \"8.72\"],[\"46\", \"2\", \"don't try this at home\", \"ian sander\", \"teddy tenenbaum & laurie mccarthy\", \"october 5, 2007\", \"8.91\"],[\"47\", \"3\", \"haunted hero\", \"eric laneuville\", \"breen frazier & karl schaefer\", \"october 12, 2007\", \"8.90\"],[\"48\", \"4\", \"no safe place\", \"peter o'fallon\", \"jeannine renshaw\", \"october 19, 2007\", \"8.95\"],[\"49\", \"5\", \"weight of what was\", \"gloria muzio\", \"pk simonds\", \"october 26, 2007\", \"9.99\"],[\"50\", \"6\", \"double exposure\", \"eric laneuville\", \"laurie mccarthy\", \"november 2, 2007\", \"9.18\"],[\"51\", \"7\", \"unhappy medium\", \"frederick eo toye\", \"breen frazier\", \"november 9, 2007\", \"9.85\"],[\"52\", \"8\", \"bad blood\", \"peter werner\", \"teddy tenenbaum\", \"november 16, 2007\", \"9.56\"],[\"53\", \"9\", \"all ghosts lead to grandview\", \"frederick eo toye\", \"pk simonds & laurie mccarthy\", \"november 23, 2007\", \"9.98\"],[\"54\", \"10\", \"holiday spirit\", \"steven robman\", \"jeannine renshaw\", \"december 14, 2007\", \"9.80\"],[\"55\", \"11\", \"slam (aka slambook)\", \"mark rosman\", \"karl schaefer & daniel sinclair\", \"january 11, 2008\", \"9.86\"],[\"56\", \"12\", \"first do no harm\", \"ian sander\", \"john gray\", \"january 18, 2008\", \"9.91\"],[\"57\", \"13\", \"home but not alone\", \"eric laneuville\", \"pk simonds & laurie mccarthy\", \"april 4, 2008\", \"9.06\"],[\"58\", \"14\", \"the grave sitter\", \"frederick eo toye\", \"john gray\", \"april 11, 2008\", \"8.55\"],[\"59\", \"15\", \"horror show\", \"ian sander\", \"jeannine renshaw\", \"april 25, 2008\", \"8.98\"],[\"60\", \"16\", \"deadbeat dads\", \"gloria muzio\", \"mark b perry\", \"may 2, 2008\", \"9.21\"],[\"61\", \"17\", \"stranglehold (part 1)\", \"eric laneuville\", \"laurie mccarthy & pk simonds\", \"may 9, 2008\", \"8.78\"]]\nQuestion = Is it true that haunted hero was aired in season 3 series number 47?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_no_in_series = get_column_by_name(table_data, \"no in series\")\n    column_title = get_column_by_name(table_data, \"title\")\n    answer = \"47\" in column_no_in_series and \"haunted hero\" in column_title\n    return answer\n\n### END"}
{"id": "51ccf551-104b-4611-ae09-bf19dbf1ba35", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = south carolina gamecocks men 's soccer\ntable_data = [[\"rank\", \"player\", \"goals\", \"assists\", \"points\", \"years\"],[\"1\", \"doug allison\", \"63\", \"32\", \"158\", \"1984 - 87\"],[\"2\", \"chris faklaris\", \"55\", \"14\", \"124\", \"1991 - 94\"],[\"3\", \"clint mathis\", \"53\", \"15\", \"121\", \"1994 - 97\"],[\"4\", \"clark brisson\", \"36\", \"26\", \"98\", \"1987 - 90\"],[\"5\", \"dan ratcliff\", \"37\", \"20\", \"94\", \"1983 - 86\"],[\"6\", \"jordan quinn\", \"37\", \"13\", \"87\", \"1999 - 02\"],[\"7\", \"andrew coggins\", \"33\", \"15\", \"81\", \"1988 - 91\"],[\"8\", \"brian winstead\", \"33\", \"14\", \"80\", \"1978 - 79\"],[\"9\", \"billy baumhoff\", \"22\", \"34\", \"78\", \"1991 - 94\"],[\"9\", \"rob smith\", \"19\", \"40\", \"78\", \"1991 - 94\"],[\"11\", \"john harr\", \"28\", \"20\", \"76\", \"1997 - 99\"],[\"12\", \"arni arnthorsson\", \"22\", \"25\", \"69\", \"1984 - 87\"],[\"13\", \"dave goodchild\", \"28\", \"12\", \"68\", \"1979 - 82\"],[\"14\", \"rubãn tufiã±o\", \"18\", \"30\", \"66\", \"1989 - 92\"],[\"15\", \"joey worthen\", \"25\", \"15\", \"65\", \"1998 - 01\"]]\nQuestion = Is it true that the player with 13 assists ranked 1st in the standings?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    assists = get_column_by_name(table_data, \"assists\")\n    for rank, assist in zip(ranks, assists):\n        if equal_to(rank, \"1\") and equal_to(assist, \"13\"):\n            answer = True\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "5eec9cbe-f754-4748-a481-e68aabffe5e1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1977 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"carlton\", \"3.13 (31)\", \"geelong\", \"2.12 (24)\", \"princes park\", \"11009\", \"18 june 1977\"],[\"south melbourne\", \"8.22 (70)\", \"melbourne\", \"9.10 (64)\", \"lake oval\", \"20785\", \"18 june 1977\"],[\"north melbourne\", \"6.11 (47)\", \"hawthorn\", \"6.12 (48)\", \"arden street oval\", \"9027\", \"18 june 1977\"],[\"richmond\", \"13.15 (93)\", \"fitzroy\", \"6.5 (41)\", \"mcg\", \"12877\", \"18 june 1977\"],[\"footscray\", \"5.6 (36)\", \"collingwood\", \"9.15 (69)\", \"western oval\", \"11921\", \"18 june 1977\"],[\"essendon\", \"5.16 (46)\", \"st kilda\", \"5.12 (42)\", \"vfl park\", \"14337\", \"18 june 1977\"]]\nQuestion = Is it true that at footscray vs collingwood , the attendance was 11921 with a score of 5.6 (36) for footscray?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    for home_team, home_team_score, away_team, crowd in zip(home_teams, home_team_scores, away_teams, crowds):\n        if home_team.lower() == \"footscray\" and away_team.lower() == \"collingwood\":\n            answer = equal_to(home_team_score, \"5.6 (36)\") and equal_to(crowd, \"11921\")\n            break \n    return answer\n\n### END"}
{"id": "1edb433d-3c61-4f82-8c22-651cf5de5188", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of americas records in swimming\ntable_data = [[\"event\", \"time\", \"nationality\", \"date\", \"meet\", \"location\"],[\"50 m freestyle\", \"20.91\", \"brazil\", \"18 december 2009\", \"brazilian championships\", \"são paulo, brazil\"],[\"100 m freestyle\", \"46.91\", \"brazil\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m freestyle\", \"1:42.96\", \"united states\", \"12 august 2008\", \"olympic games\", \"beijing, china\"],[\"400 m freestyle\", \"3:42.78\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"800 m freestyle\", \"7:41.86\", \"canada\", \"27 july 2011\", \"world championships\", \"shanghai, china\"],[\"1500 m freestyle\", \"14:39.63\", \"canada\", \"4 august 2012\", \"olympic games\", \"london, united kingdom\"],[\"50 m backstroke\", \"24.33\", \"united states\", \"5 december 2008\", \"dutch swim cup\", \"eindhoven, netherlands\"],[\"100 m backstroke\", \"51.94\", \"united states\", \"8 july 2009\", \"us championships\", \"indianapolis, united states\"],[\"200 m backstroke\", \"1:51.92\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m breaststroke\", \"26.76\", \"brazil\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"100 m breaststroke\", \"58.96\", \"united states\", \"26 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m breaststroke\", \"2:07.42\", \"united states\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m butterfly\", \"22.76\", \"brazil\", \"26 april 2012\", \"maria lenk trophy\", \"rio de janeiro, brazil\"],[\"100 m butterfly\", \"49.82\", \"united states\", \"1 august 2009\", \"world championships\", \"rome, italy\"],[\"200 m butterfly\", \"1:51.51\", \"united states\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m individual medley\", \"1:54.00\", \"united states\", \"28 july 2011\", \"world championships\", \"shanghai, china\"],[\"400 m individual medley\", \"4:03.84\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"4100 m freestyle relay\", \"3:08.24\", \"united states\", \"11 august 2008\", \"olympic games\", \"beijing, china\"],[\"4200 m freestyle relay\", \"6:58.55\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"4100 m medley relay\", \"3:27.28\", \"united states\", \"2 august 2009\", \"world championships\", \"rome, italy\"]]\nQuestion = Is it true that the winning time of the 50 m freestyle on 18 december , 2009 was 20.91?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    times = get_column_by_name(table_data, \"time\")\n    dates = get_column_by_name(table_data, \"date\")\n    for event, time, date in zip(events, times, dates):\n        if event.lower() == \"50 m freestyle\" and date.lower() == \"18 december 2009\":\n            answer = equal_to(time, \"20.91\")\n            break \n    return answer\n\n### END"}
{"id": "27f0bfe2-d593-4a93-a67b-f21512d0bfcb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = volleyball at the 2008 summer olympics - men 's team rosters\ntable_data = [[\"name\", \"height\", \"weight\", \"spike\", \"2008 club\"],[\"bian hongmin\", \"m\", \"-\", \"cm (in)\", \"zhejiang\"],[\"yuan zhi\", \"m\", \"-\", \"cm (in)\", \"liaoning\"],[\"guo peng\", \"m\", \"-\", \"cm (in)\", \"army\"],[\"shi hairong\", \"m\", \"-\", \"cm (in)\", \"jiangsu\"],[\"cui jianjun\", \"m\", \"-\", \"cm (in)\", \"henan\"],[\"jiao shuai\", \"m\", \"-\", \"cm (in)\", \"henan\"],[\"yu dawei\", \"m\", \"-\", \"cm (in)\", \"shangdong\"],[\"shen qiong\", \"m\", \"-\", \"cm (in)\", \"shanghai\"],[\"jiang fudong\", \"m\", \"-\", \"cm (in)\", \"sichuan\"],[\"ren qi\", \"m\", \"-\", \"cm (in)\", \"shanghai\"],[\"sui shengsheng\", \"m\", \"-\", \"cm (in)\", \"liaoning\"],[\"fang yingchao\", \"m\", \"-\", \"cm (in)\", \"shanghai\"]]\nQuestion = Is it true that bian hongmin are in the category of jiangsu 2008 club?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    clubs = get_column_by_name(table_data, \"2008 club\")\n    for name, club in zip(names, clubs):\n        if equal_to(name, \"bian hongmin\"):\n            answer = equal_to(club, \"jiangsu\")\n            break \n    return answer\n\n### END"}
{"id": "80197e5c-ba54-4c88-8644-eaaba6af3b2d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = good news network\ntable_data = [[\"call sign\", \"frequency mhz\", \"city of license\", \"erp w\", \"class\", \"fcc info\"],[\"wlpe\", \"91.7\", \"augusta , ga\", \"1150\", \"a\", \"fcc\"],[\"wgph\", \"91.5\", \"vidalia , ga\", \"31000\", \"c2\", \"fcc\"],[\"wwgf\", \"107.5\", \"donalsonville , ga\", \"6000\", \"a\", \"fcc\"],[\"wpwb\", \"90.5\", \"byron , ga\", \"16500\", \"c2\", \"fcc\"],[\"wlpf\", \"98.5\", \"ocilla , ga\", \"2300\", \"a\", \"fcc\"],[\"wziq\", \"106.5\", \"smithville , ga\", \"2450\", \"a\", \"fcc\"],[\"wlpg\", \"91.7\", \"florence , sc\", \"20000\", \"c2\", \"fcc\"],[\"wpma\", \"102.7\", \"greensboro , ga\", \"7500\", \"c3\", \"fcc\"],[\"wthp\", \"94.3\", \"gibson , ga\", \"6300\", \"c3\", \"fcc\"],[\"wlpt\", \"88.3\", \"jesup , ga\", \"20000\", \"c1\", \"fcc\"],[\"wsja\", \"91.3\", \"york , al\", \"5000\", \"a\", \"fcc\"],[\"wlgp\", \"100.3\", \"jacksonville , nc\", \"100000\", \"c1\", \"fcc\"]]\nQuestion = Is it true that wsja is the only call sign with fcc listed under fcc info?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef solution(table_data):\n    fcc_info = get_column_by_name(table_data, \"fcc info\")\n    count = count_occurrences(\"fcc\", fcc_info)\n    answer = count == 1\n    return answer\n\n### END"}
{"id": "a1f8037e-30e2-4ca7-89cc-2dd808e2cecb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = latin america\ntable_data = [[\"rank\", \"metropolitan area\", \"country\", \"gdp (ppp) (2008) billions of us\", \"metropolitan population (2006) millions\", \"gdp (ppp) us per capita\"],[\"1\", \"mexico city\", \"mexico\", \"390\", \"21.2\", \"20300\"],[\"2\", \"são paulo\", \"brazil\", \"388\", \"18.61\", \"20800\"],[\"3\", \"buenos aires\", \"argentina\", \"362\", \"13.52\", \"28000\"],[\"4\", \"rio de janeiro\", \"brazil\", \"201\", \"11.62\", \"17300\"],[\"5\", \"bogotá\", \"colombia\", \"180\", \"8.55\", \"21050\"],[\"6\", \"santiago\", \"chile\", \"120\", \"5.70\", \"21050\"],[\"7\", \"brasilia\", \"brazil\", \"110\", \"3.48\", \"31600\"],[\"8\", \"lima\", \"peru\", \"109\", \"8.35\", \"13100\"],[\"9\", \"medellín\", \"colombia\", \"102\", \"3.58\", \"28500\"],[\"10\", \"guadalajara\", \"mexico\", \"81\", \"3.95\", \"20500\"]]\nQuestion = Is it true that the average 2006 metropolitan population of brasilia with a gdp per capita over 13100 is 8.35?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    cities = get_column_by_name(table_data, \"metropolitan area\")\n    populations = get_column_by_name(table_data, \"metropolitan population (2006) millions\")\n    gdps = get_column_by_name(table_data, \"gdp (ppp) us per capita\")\n    for city, population, gdp in zip(cities, populations, gdps):\n        if city.lower() == \"brasilia\" and int(gdp) > 13100:\n            answer = equal_to(float(population), 8.35)\n            break \n    return answer\n\n### END"}
{"id": "d5494773-ebe4-4c4f-a659-c118408b24a7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1996 - 97 european challenge cup\ntable_data = [[\"team\", \"tries for\", \"tries against\", \"try diff\", \"points for\", \"points against\", \"points diff\"],[\"bourgoin\", \"27\", \"4\", \"+ 23\", \"196\", \"66\", \"+ 130\"],[\"bordeaux - bègles\", \"29\", \"13\", \"+ 16\", \"195\", \"99\", \"+ 96\"],[\"swansea\", \"28\", \"19\", \"+ 9\", \"207\", \"138\", \"+ 69\"],[\"gloucester\", \"17\", \"17\", \"0\", \"119\", \"123\", \"4\"],[\"ebbw vale\", \"6\", \"36\", \"30\", \"48\", \"243\", \"195\"],[\"london irish\", \"12\", \"30\", \"18\", \"90\", \"186\", \"96\"]]\nQuestion = Is it true that with a try difference of + 23 there was a total of 66 points against?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    try_diffs = get_column_by_name(table_data, \"try diff\")\n    points_against = get_column_by_name(table_data, \"points against\")\n    for try_diff, point_against in zip(try_diffs, points_against):\n        if try_diff == \"+ 23\":\n            answer = equal_to(point_against, \"66\")\n            break \n    return answer\n\n### END"}
{"id": "b1df3e27-1219-442d-a15f-08c0f41c510e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 veikkausliiga\ntable_data = [[\"club\", \"location\", \"stadium\", \"capacity\", \"manager\", \"kitmaker\"],[\"ac oulu\", \"oulu\", \"castrén\", \"4000\", \"juha malinen\", \"umbro\"],[\"fc honka\", \"espoo\", \"tapiolan urheilupuisto\", \"6000\", \"mika lehkosuo\", \"kappa\"],[\"fc inter\", \"turku\", \"veritas stadion\", \"9372\", \"job dragtsma\", \"nike\"],[\"fc lahti\", \"lahti\", \"lahden stadion\", \"15000\", \"ilkka mäkelä\", \"umbro\"],[\"ff jaro\", \"jakobstad\", \"jakobstads centralplan\", \"5000\", \"alexei eremenko sr\", \"errea\"],[\"haka\", \"valkeakoski\", \"tehtaan kenttä\", \"3516\", \"sami ristilä\", \"umbro\"],[\"hjk\", \"helsinki\", \"sonera stadium\", \"10770\", \"antti muurinen\", \"adidas\"],[\"ifk mariehamn\", \"mariehamn\", \"wiklöf holding arena\", \"4000\", \"pekka lyyski\", \"puma\"],[\"jjk\", \"jyväskylä\", \"harjun stadion\", \"3000\", \"kari martonen\", \"legea\"],[\"kups\", \"kuopio\", \"kuopion keskuskenttä\", \"5000\", \"esa pekonen\", \"puma\"],[\"mypa\", \"anjalankoski\", \"saviniemi\", \"4167\", \"janne lindberg\", \"puma\"],[\"tampere united\", \"tampere\", \"ratina stadion\", \"17000\", \"ari hjelm\", \"puma\"],[\"tps\", \"turku\", \"veritas stadion\", \"9372\", \"marko rajamäki\", \"puma\"]]\nQuestion = Is it true that the kitmaker for tps is puma?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    clubs = get_column_by_name(table_data, \"club\")\n    kitmakers = get_column_by_name(table_data, \"kitmaker\")\n    for club, kitmaker in zip(clubs, kitmakers):\n        if club.lower() == \"tps\":\n            answer = kitmaker.lower() == \"puma\"\n            break\n    return answer\n\n### END"}
{"id": "6222f507-6157-4501-9b0f-1c5025a50534", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = daniel gimeno - traver\ntable_data = [[\"date\", \"tournament\", \"surface\", \"opponent\", \"score\"],[\"5 september 2005\", \"brasov\", \"clay\", \"daniel elsner\", \"5 - 7 , 2 - 6\"],[\"5 november 2007\", \"guayaquil\", \"clay\", \"nicolás lapentti\", \"3 - 6 , 7 - 6 (6) , 5 - 7\"],[\"10 march 2008\", \"tanger\", \"clay\", \"marcel granollers\", \"4 - 6 , 4 - 6\"],[\"15 september 2008\", \"banja luka\", \"clay\", \"ilija bozoljac\", \"4 - 6 , 4 - 6\"],[\"12 october 2009\", \"asunción\", \"clay\", \"ramón delgado\", \"6 - 7 (2 - 7) , 6 - 1 , 3 - 6\"],[\"5 july 2010\", \"san benedetto\", \"clay\", \"carlos berlocq\", \"3 - 6 , 6 - 4 , 4 - 6\"],[\"2 october 2011\", \"madrid\", \"clay\", \"jérémy chardy\", \"1 - 6 , 7 - 5 , 6 - 7 (3 - 7)\"],[\"12 august 2012\", \"cordenos\", \"clay\", \"paolo lorenzi\", \"6 - 7 (5 - 7) , 3 - 6\"]]\nQuestion = Is it true that during the guayaquil tournament on november 5 , 2007 , the score was 3 - 6 , 7 - 6 (6) , 5 - 7?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    tournaments = get_column_by_name(table_data, \"tournament\")\n    scores = get_column_by_name(table_data, \"score\")\n    for date, tournament, score in zip(dates, tournaments, scores):\n        if date.lower() == \"5 november 2007\" and tournament.lower() == \"guayaquil\":\n            answer = equal_to(score, \"3 - 6 , 7 - 6 (6) , 5 - 7\")\n            break \n    return answer\n\n### END"}
{"id": "8c851248-b6e7-4304-a06d-56f3526fedb7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = royal canadian mint numismatic coins (2000s)\ntable_data = [[\"year\", \"animal\", \"artist\", \"finish\", \"mintage\", \"issue price\"],[\"2007\", \"ruby - throated hummingbird\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2007\", \"red breasted nuthatch\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2008\", \"downy woodpecker\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2008\", \"northern cardinal\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2010\", \"american goldfinch\", \"arnold nogy (reverse) , susanna blunt (obverse)\", \"specimen (with selective colouring)\", \"14000\", \"24.95\"]]\nQuestion = Is it true that the downy woodpecker coin was minted in 2008?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    animals = get_column_by_name(table_data, \"animal\")\n    for year, animal in zip(years, animals):\n        if animal.lower() == \"downy woodpecker\":\n            answer = equal_to(year, \"2008\")\n            break \n    return answer\n\n### END"}
{"id": "1cffd42d-fb2f-44fa-a024-c9a97e38ff93", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1982 - 83 atlanta hawks season\ntable_data = [[\"round\", \"pick\", \"player\", \"nationality\", \"college\"],[\"1\", \"10\", \"keith edmonson\", \"united states\", \"purdue\"],[\"3\", \"56\", \"joe kopicki\", \"united states\", \"detroit mercy\"],[\"5\", \"102\", \"mark hall\", \"united states\", \"minnesota\"],[\"6\", \"126\", \"jay bruchak\", \"united states\", \"mount st mary 's\"],[\"7\", \"148\", \"horace wyatt\", \"united states\", \"clemson\"],[\"8\", \"172\", \"james ratiff\", \"united states\", \"howard\"],[\"9\", \"194\", \"pierre bland\", \"united states\", \"elizabeth city state\"],[\"10\", \"216\", \"ronnie mcadoo\", \"united states\", \"old dominion\"]]\nQuestion = Is it true that horace wyatt from clemson was the round 5 , number 102 pick?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    picks = get_column_by_name(table_data, \"pick\")\n    players = get_column_by_name(table_data, \"player\")\n    colleges = get_column_by_name(table_data, \"college\")\n    for round, pick, player, college in zip(rounds, picks, players, colleges):\n        if player.lower() == \"horace wyatt\" and college.lower() == \"clemson\":\n            answer = equal_to(round, \"5\") and equal_to(pick, \"102\")\n            break \n    return answer\n\n### END"}
{"id": "39f329c6-ce92-4b90-a5a6-51e198425bd4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1974 formula one season\ntable_data = [[\"race\",\"circuit\",\"date\",\"pole position\",\"fastest lap\",\"winning driver\",\"constructor\",\"tyre\",\"report\"],[\"argentine grand prix\",\"buenos aires\",\"13 january\",\"ronnie peterson\",\"clay regazzoni\",\"denny hulme\",\"mclaren - ford\",\"g\",\"report\"],[\"brazilian grand prix\",\"interlagos\",\"27 january\",\"emerson fittipaldi\",\"clay regazzoni\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"south african grand prix\",\"kyalami\",\"30 march\",\"niki lauda\",\"carlos reutemann\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"],[\"spanish grand prix\",\"jarama\",\"28 april\",\"niki lauda\",\"niki lauda\",\"niki lauda\",\"ferrari\",\"g\",\"report\"],[\"belgian grand prix\",\"nivelles - baulers\",\"12 may\",\"clay regazzoni\",\"denny hulme\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"monaco grand prix\",\"monaco\",\"26 may\",\"niki lauda\",\"ronnie peterson\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"swedish grand prix\",\"anderstorp\",\"9 june\",\"patrick depailler\",\"patrick depailler\",\"jody scheckter\",\"tyrrell - ford\",\"g\",\"report\"],[\"dutch grand prix\",\"zandvoort\",\"23 june\",\"niki lauda\",\"ronnie peterson\",\"niki lauda\",\"ferrari\",\"g\",\"report\"],[\"french grand prix\",\"dijon - prenois\",\"7 july\",\"niki lauda\",\"jody scheckter\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"british grand prix\",\"brands hatch\",\"20 july\",\"niki lauda\",\"niki lauda\",\"jody scheckter\",\"tyrrell - ford\",\"g\",\"report\"],[\"german grand prix\",\"nürburgring\",\"4 august\",\"niki lauda\",\"jody scheckter\",\"clay regazzoni\",\"ferrari\",\"g\",\"report\"],[\"austrian grand prix\",\"österreichring\",\"18 august\",\"niki lauda\",\"clay regazzoni\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"],[\"italian grand prix\",\"monza\",\"8 september\",\"niki lauda\",\"carlos pace\",\"ronnie peterson\",\"lotus - ford\",\"g\",\"report\"],[\"canadian grand prix\",\"mosport park\",\"22 september\",\"emerson fittipaldi\",\"niki lauda\",\"emerson fittipaldi\",\"mclaren - ford\",\"g\",\"report\"],[\"united states grand prix\",\"watkins glen\",\"6 october\",\"carlos reutemann\",\"carlos pace\",\"carlos reutemann\",\"brabham - ford\",\"g\",\"report\"]]\nQuestion = Is it true that the race at the interlagos circuit was held on 27 january?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    circuits = get_column_by_name(table_data, \"circuit\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for circuit, date in zip(circuits, dates):\n        if \"interlagos\" in circuit.lower() and \"27 january\" in date.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "c60798ad-1442-4d5e-b0f6-552413c7a35d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1972 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"st kilda\", \"13.12 (90)\", \"melbourne\", \"13.11 (89)\", \"moorabbin oval\", \"18836\", \"19 august 1972\"],[\"south melbourne\", \"9.12 (66)\", \"footscray\", \"11.13 (79)\", \"lake oval\", \"9154\", \"19 august 1972\"],[\"richmond\", \"20.17 (137)\", \"fitzroy\", \"13.22 (100)\", \"mcg\", \"27651\", \"19 august 1972\"],[\"geelong\", \"17.10 (112)\", \"collingwood\", \"17.9 (111)\", \"kardinia park\", \"23108\", \"19 august 1972\"],[\"north melbourne\", \"8.12 (60)\", \"carlton\", \"23.11 (149)\", \"arden street oval\", \"11271\", \"19 august 1972\"],[\"hawthorn\", \"15.16 (106)\", \"essendon\", \"12.15 (87)\", \"vfl park\", \"36749\", \"19 august 1972\"]]\nQuestion = Is it true that 27651 people were in the crowd for the greelong game?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    for home_team, crowd in zip(home_teams, crowds):\n        if home_team.lower() == \"geelong\":\n            answer = equal_to(crowd, \"27651\")\n            break \n    return answer\n\n### END"}
{"id": "df8b136b-6d33-4c5a-aa9e-a18ff2077dec", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 icc world twenty20 statistics\ntable_data = [[\"bowler\",\"over no\",\"venue\",\"date\",\"wickets\"],[\"shane bond\",\"1\",\"durban\",\"2007 - 09 - 12\",\"morris ouma bowled tanmay mishra caught oram\"],[\"chris martin\",\"9\",\"durban\",\"2007 - 09 - 12\",\"thomas odoyo caught taylor\"],[\"dewald nel\",\"2\",\"durban\",\"2007 - 09 - 12\",\"none\"],[\"syed rasel\",\"1\",\"johannesburg\",\"2007 - 09 - 13\",\"chris gayle caught kapali\"],[\"chaminda vaas\",\"1\",\"johannesburg\",\"2007 - 09 - 14\",\"morris ouma lbw\"],[\"irfan pathan\",\"9\",\"durban\",\"2007 - 09 - 14\",\"kamran akmal run out younis khan bowled\"],[\"shaun pollock\",\"1\",\"cape town\",\"2007 - 09 - 16\",\"luke wright caught de villiers\"],[\"dilhara fernando\",\"6\",\"johannesburg\",\"2007 - 09 - 17\",\"mohammad hafeez bowled\"],[\"shahid afridi\",\"9\",\"johannesburg\",\"2007 - 09 - 18\",\"andrew symonds bowled\"],[\"syed rasel\",\"2\",\"johannesburg\",\"2007 - 09 - 18\",\"none\"],[\"dilhara fernando\",\"4\",\"johannesburg\",\"2007 - 09 - 18\",\"tamim iqbal caught malinga aftab ahmed bowled\"],[\"mark gillespie\",\"4\",\"durban\",\"2007 - 09 - 19\",\"ab de villiers caught mccullum\"],[\"dilhara fernando\",\"2\",\"cape town\",\"2007 - 09 - 20\",\"none\"],[\"shanthakumaran sreesanth\",\"4\",\"durban\",\"2007 - 09 - 22\",\"none\"],[\"shanthakumaran sreesanth\",\"2\",\"johannesburg\",\"2007 - 09 - 24\",\"none\"]]\nQuestion = Is it true that chris gayle caught kapali on 9 - 13 - 2007 , in johannesburg?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"venue\")\n    dates = get_column_by_name(table_data, \"date\")\n    wickets = get_column_by_name(table_data, \"wickets\")\n    answer = False\n    for venue, date, wicket in zip(venues, dates, wickets):\n        if \"johannesburg\" in venue.lower() and \"2007 - 09 - 13\" in date.lower() and \"chris gayle caught kapali\" in wicket.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "baaae2a2-7c18-4f78-bd00-6dbf251aa53c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = air macau destinations\ntable_data = [[\"city\", \"country\", \"iata\", \"icao\", \"airport\"],[\"bangkok\", \"thailand\", \"bkk\", \"vtbs\", \"suvarnabhumi airport\"],[\"beijing\", \"china\", \"pek\", \"zbaa\", \"beijing capital international airport\"],[\"changsha\", \"china\", \"csx\", \"zgha\", \"changsha huanghua international airport\"],[\"chengdu\", \"china\", \"ctu\", \"zuuu\", \"chengdu shuangliu international airport\"],[\"chongqing\", \"china\", \"ckg\", \"zuck\", \"chongqing jiangbei international airport\"],[\"hangzhou\", \"china\", \"hgh\", \"zshc\", \"hangzhou xiaoshan international airport\"],[\"hefei\", \"china\", \"hfe\", \"zsof\", \"hefei luogang international airport\"],[\"kaohsiung\", \"taiwan\", \"khh\", \"rckh\", \"kaohsiung international airport\"],[\"macau\", \"macau\", \"mfm\", \"vmmc\", \"macau international airport\"],[\"nanjing\", \"china\", \"nkg\", \"zsnj\", \"nanjing lukou international airport\"],[\"nanning\", \"china\", \"nng\", \"zgnn\", \"nanning wuxu international airport\"],[\"ningbo\", \"china\", \"ngb\", \"zsnb\", \"ningbo lishe international airport\"],[\"osaka\", \"japan\", \"kix\", \"rjbb\", \"kansai international airport\"],[\"seoul\", \"south korea\", \"icn\", \"rksi\", \"incheon international airport\"],[\"shanghai\", \"china\", \"sha\", \"zsss\", \"shanghai hongqiao international airport\"],[\"shanghai\", \"china\", \"pvg\", \"zspd\", \"shanghai pudong international airport\"],[\"shenyang\", \"china\", \"she\", \"zytx\", \"shenyang taoxian international airport\"],[\"shenzhen\", \"china\", \"szx\", \"zgsz\", \"shenzhen bao'an international airport\"],[\"singapore\", \"singapore\", \"sin\", \"wsss\", \"singapore changi airport\"],[\"taipei\", \"taiwan\", \"tpe\", \"rctp\", \"taiwan taoyuan international airport\"],[\"taiyuan\", \"china\", \"tyn\", \"zbyn\", \"taiyuan wusu airport\"],[\"tokyo\", \"japan\", \"nrt\", \"rjaa\", \"narita international airport\"],[\"xiamen\", \"china\", \"xmn\", \"zsam\", \"xiamen gaoqi international airport\"],[\"wenzhou\", \"china\", \"wnz\", \"zswz\", \"wenzhou yongqiang international airport\"]]\nQuestion = Is it true that the iata code for taiyuan wusu airport is tyn?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    airports = get_column_by_name(table_data, \"airport\")\n    iatas = get_column_by_name(table_data, \"iata\")\n    for airport, iata in zip(airports, iatas):\n        if \"taiyuan wusu airport\" in airport.lower():\n            answer = equal_to(iata, \"tyn\")\n            break \n    return answer\n\n### END"}
{"id": "0e055a75-d0a1-4758-a31f-0add51d6aac8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1997 major league baseball draft\ntable_data = [[\"pick\", \"player\", \"team\", \"position\", \"school\"],[\"1\", \"matt anderson\", \"detroit tigers\", \"p\", \"rice university\"],[\"2\", \"jd drew\", \"philadelphia phillies\", \"of\", \"florida state university\"],[\"3\", \"troy glaus\", \"anaheim angels\", \"3b , p\", \"ucla\"],[\"4\", \"jason grilli\", \"san francisco giants\", \"p\", \"seton hall university\"],[\"5\", \"vernon wells\", \"toronto blue jays\", \"of\", \"bowie hs (arlington , texas)\"],[\"6\", \"geoff goetz\", \"new york mets\", \"p\", \"jesuit hs (tampa , florida)\"],[\"7\", \"dan reichert\", \"kansas city royals\", \"p\", \"university of the pacific\"],[\"8\", \"jj davis\", \"pittsburgh pirates\", \"of\", \"baldwin park hs (pomona , california)\"],[\"9\", \"michael cuddyer\", \"minnesota twins\", \"ss , p\", \"great bridge hs (chesapeake , virginia)\"],[\"10\", \"jon garland\", \"chicago cubs\", \"p\", \"kennedy hs (granada hills , california)\"],[\"11\", \"chris enochs\", \"oakland athletics\", \"p\", \"west virginia university\"],[\"12\", \"aaron akin\", \"florida marlins\", \"p\", \"cowley county community college\"],[\"13\", \"kyle peterson\", \"milwaukee brewers\", \"p\", \"stanford university\"],[\"14\", \"brandon larson\", \"cincinnati reds\", \"ss\", \"louisiana state university\"],[\"15\", \"jason dellaero\", \"chicago white sox\", \"ss , p\", \"university of south florida\"],[\"16\", \"lance berkman\", \"houston astros\", \"1b\", \"rice university\"],[\"17\", \"john curtice\", \"boston red sox\", \"p\", \"great bridge hs (chesapeake , virginia)\"],[\"18\", \"mark mangum\", \"colorado rockies\", \"p\", \"kingwood hs (kingwood , texas)\"],[\"19\", \"ryan anderson\", \"seattle mariners\", \"p\", \"divine child hs (westland , michigan)\"],[\"20\", \"adam kennedy\", \"st louis cardinals\", \"ss\", \"cal state northridge university\"],[\"21\", \"eric dubose\", \"oakland athletics\", \"p\", \"mississippi state university\"],[\"22\", \"jayson werth\", \"baltimore orioles\", \"c , of\", \"glenwood hs (chatham , illinois)\"],[\"23\", \"donnie bridges\", \"montreal expos\", \"p\", \"oak grove hs (hattiesburg , mississippi)\"],[\"24\", \"tyrell godwin\", \"new york yankees\", \"of\", \"east bladen hs (elizabethtown , north carolina)\"],[\"25\", \"glenn davis\", \"los angeles dodgers\", \"1b\", \"vanderbilt university\"],[\"26\", \"darnell mcdonald\", \"baltimore orioles\", \"of\", \"cherry creek hs (englewood , colorado)\"],[\"27\", \"kevin nicholson\", \"san diego padres\", \"ss\", \"stetson university\"],[\"28\", \"tim drew\", \"cleveland indians\", \"p , of\", \"lowndes county hs (valdosta , georgia)\"],[\"29\", \"troy cameron\", \"atlanta braves\", \"ss\", \"st thomas aquinas hs (fort lauderdale , florida)\"],[\"30\", \"jack cust\", \"arizona diamondbacks\", \"1b\", \"immaculata hs (somerville , new jersey)\"],[\"31\", \"jason standridge\", \"tampa bay devil rays\", \"p\", \"hewitt - trussville hs (trussville , al)\"]]\nQuestion = Is it true that john curtice 's position was pitcher (p)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    positions = get_column_by_name(table_data, \"position\")\n    for player, position in zip(players, positions):\n        if player.lower() == \"john curtice\":\n            answer = position.lower() == \"p\"\n            break\n    return answer\n\n### END"}
{"id": "38075cb0-42be-4176-a95c-3227468536a8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = israeli football league\ntable_data = [[\"season\", \"champion\", \"runner up\", \"israel bowl\", \"venue\", \"date\", \"finals mvp\"],[\"2007 - 08\", \"jerusalem lions\", \"haifa underdogs\", \"i\", \"kraft stadium , jerusalem\", \"march 28 , 2008\", \"moshe horowitz (lions)\"],[\"2008 - 09\", \"modi'in pioneers\", \"jerusalem lions\", \"ii\", \"kraft stadium , jerusalem\", \"april 3 , 2009\", \"assaf katz (pioneers)\"],[\"2009 - 10\", \"tel aviv sabres\", \"jerusalem lions\", \"iii\", \"kraft stadium , jerusalem\", \"march 26 , 2010\", \"evan reshef (sabres)\"],[\"2010 - 11\", \"judean rebels\", \"tel aviv sabres\", \"iv\", \"kraft stadium , jerusalem\", \"march 18 , 2011\", \"zack miller (rebels)\"],[\"2011 - 12\", \"tel aviv sabres\", \"tel aviv pioneers\", \"v\", \"kraft stadium , jerusalem\", \"march 30 , 2012\", \"adi hakami and jonathan curran (sabres)\"],[\"2012 - 13\", \"tel aviv sabres\", \"judean rebels\", \"vi\", \"kraft stadium , jerusalem\", \"march 22 , 2013\", \"jonathan curran and banning fudge (sabres)\"]]\nQuestion = Is it true that the season for runner up of judean rebels is 2013 - 14?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    runner_ups = get_column_by_name(table_data, \"runner up\")\n    for season, runner_up in zip(seasons, runner_ups):\n        if runner_up.lower() == \"judean rebels\":\n            answer = equal_to(season, \"2013 - 14\")\n            break \n    return answer\n\n### END"}
{"id": "aa251926-5004-406c-95da-73bca168491d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mark donohue\ntable_data = [[\"year\", \"chassis\", \"engine\", \"start\", \"finish\", \"entrant\"],[\"1969\", \"lola\", \"offy\", \"4th\", \"7th\", \"penske\"],[\"1970\", \"lola\", \"ford\", \"5th\", \"2nd\", \"penske\"],[\"1971\", \"mclaren\", \"offy\", \"2nd\", \"25th\", \"penske\"],[\"1972\", \"mclaren\", \"offy\", \"3rd\", \"1st\", \"penske\"],[\"1973\", \"eagle\", \"offy\", \"3rd\", \"15th\", \"penske\"]]\nQuestion = Is it true that the chassis for the offy engine was mclaren?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    chassis = get_column_by_name(table_data, \"chassis\")\n    engines = get_column_by_name(table_data, \"engine\")\n    answer = False\n    for ch, eng in zip(chassis, engines):\n        if eng.lower() == \"offy\" and ch.lower() == \"mclaren\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "c02d4bb2-e99b-4965-a4c2-faabc548ac6f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = comparison of e - book formats\ntable_data = [[\"format\", \"filename extension\", \"image support\", \"interactivity support\", \"word wrap support\", \"open standard\"],[\"djvu\", \"djvu\", \"yes\", \"no\", \"no\", \"yes\"],[\"epub (idpf)\", \"epub\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"fictionbook\", \"fb2\", \"yes\", \"no\", \"yes\", \"yes\"],[\"html\", \"html\", \"yes\", \"no\", \"yes\", \"yes\"],[\"kindle\", \"azw\", \"yes\", \"yes\", \"yes\", \"no\"],[\"microsoft reader\", \"lit\", \"yes\", \"no\", \"yes\", \"no\"],[\"mobipocket\", \"prc , mobi\", \"yes\", \"yes\", \"yes\", \"no\"],[\"multimedia ebook\", \"exe\", \"yes\", \"yes\", \"no\", \"yes\"],[\"newton book\", \"pkg\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ereader\", \"pdb\", \"yes\", \"no\", \"yes\", \"no\"],[\"plain text\", \"txt\", \"no\", \"no\", \"yes\", \"yes\"],[\"plucker\", \"pdb\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"portable document format\", \"pdf\", \"yes\", \"yes\", \"yes though not all readers implement support\", \"yes\"],[\"postscript\", \"ps\", \"yes\", \"no\", \"no\", \"yes\"],[\"tome raider\", \"tr2 , tr3\", \"yes\", \"no\", \"yes\", \"no\"],[\"openxps\", \"oxps , xps\", \"yes\", \"no\", \"no\", \"yes\"]]\nQuestion = Is it true that both azw and prc both have a word wrap support and an open standard?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    formats = get_column_by_name(table_data, \"format\")\n    word_wrap_supports = get_column_by_name(table_data, \"word wrap support\")\n    open_standards = get_column_by_name(table_data, \"open standard\")\n    answer = False\n    for format, word_wrap_support, open_standard in zip(formats, word_wrap_supports, open_standards):\n        if \"azw\" in format.lower() or \"prc\" in format.lower():\n            if equal_to(word_wrap_support.lower(), \"yes\") and equal_to(open_standard.lower(), \"yes\"):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "0ec96544-a7ae-4a17-8a3b-2833f8d3dcf2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = big day out lineups by year\ntable_data = [[\"sydney\", \"melbourne\", \"perth\", \"adelaide\", \"gold coast\", \"auckland\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"cancelled\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\"],[\"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"no\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"no\"],[\"no\", \"yes\", \"no\", \"no\", \"no\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"]]\nQuestion = Is it true that adelaide has 3 yes 's and 6 no 's?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_element_in_list(lst, element):\n    return lst.count(element)\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    adelaide_column = get_column_by_name(table_data, \"adelaide\")\n    yes_count = count_element_in_list(adelaide_column, \"yes\")\n    no_count = count_element_in_list(adelaide_column, \"no\")\n    answer = equal_to(yes_count, 3) and equal_to(no_count, 6)\n    return answer\n\n### END"}
{"id": "89dc5d05-72dd-4f9e-904d-1c5d2b373fc6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1972 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"st kilda\", \"13.12 (90)\", \"melbourne\", \"13.11 (89)\", \"moorabbin oval\", \"18836\", \"19 august 1972\"],[\"south melbourne\", \"9.12 (66)\", \"footscray\", \"11.13 (79)\", \"lake oval\", \"9154\", \"19 august 1972\"],[\"richmond\", \"20.17 (137)\", \"fitzroy\", \"13.22 (100)\", \"mcg\", \"27651\", \"19 august 1972\"],[\"geelong\", \"17.10 (112)\", \"collingwood\", \"17.9 (111)\", \"kardinia park\", \"23108\", \"19 august 1972\"],[\"north melbourne\", \"8.12 (60)\", \"carlton\", \"23.11 (149)\", \"arden street oval\", \"11271\", \"19 august 1972\"],[\"hawthorn\", \"15.16 (106)\", \"essendon\", \"12.15 (87)\", \"vfl park\", \"36749\", \"19 august 1972\"]]\nQuestion = Is it true that the away team with the highest score is fitzroy?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef parse_score(score_str):\n    return int(score_str.split(' ')[1].strip('()'))\n\ndef get_max_value_and_index(lst):\n    max_value = max(lst)\n    max_index = lst.index(max_value)\n    return max_value, max_index\n\ndef solution(table_data):\n    away_teams = get_column_by_name(table_data, \"away team\")\n    away_team_scores = get_column_by_name(table_data, \"away team score\")\n    parsed_scores = [parse_score(score) for score in away_team_scores]\n    max_score, max_index = get_max_value_and_index(parsed_scores)\n    highest_scoring_team = away_teams[max_index]\n    answer = highest_scoring_team.lower() == \"fitzroy\"\n    return answer\n\n### END"}
{"id": "91061ade-8401-4b30-a10f-92be02682d4a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 brazilian grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"felipe massa\", \"ferrari\", \"71\", \"1:34:11.435\", \"1\"],[\"fernando alonso\", \"renault\", \"71\", \"+ 13.298\", \"6\"],[\"kimi räikkönen\", \"ferrari\", \"71\", \"+ 16.235\", \"3\"],[\"sebastian vettel\", \"toro rosso - ferrari\", \"71\", \"+ 38.011\", \"7\"],[\"lewis hamilton\", \"mclaren - mercedes\", \"71\", \"+ 38.907\", \"4\"],[\"timo glock\", \"toyota\", \"71\", \"+ 44.368\", \"10\"],[\"heikki kovalainen\", \"mclaren - mercedes\", \"71\", \"+ 55.074\", \"5\"],[\"jarno trulli\", \"toyota\", \"71\", \"+ 1:08.433\", \"2\"],[\"mark webber\", \"red bull - renault\", \"71\", \"+ 1:19.666\", \"12\"],[\"nick heidfeld\", \"bmw sauber\", \"70\", \"+ 1 lap\", \"8\"],[\"robert kubica\", \"bmw sauber\", \"70\", \"+ 1 lap\", \"13\"],[\"nico rosberg\", \"williams - toyota\", \"70\", \"+ 1 lap\", \"18\"],[\"jenson button\", \"honda\", \"70\", \"+ 1 lap\", \"17\"],[\"sébastien bourdais\", \"toro rosso - ferrari\", \"70\", \"+ 1 lap\", \"9\"],[\"rubens barrichello\", \"honda\", \"70\", \"+ 1 lap\", \"15\"],[\"adrian sutil\", \"force india - ferrari\", \"69\", \"+ 2 laps\", \"20\"],[\"kazuki nakajima\", \"williams - toyota\", \"69\", \"+ 2 laps\", \"16\"],[\"giancarlo fisichella\", \"force india - ferrari\", \"69\", \"+ 2 laps\", \"19\"],[\"nelson piquet jr\", \"renault\", \"0\", \"accident\", \"11\"],[\"david coulthard\", \"red bull - renault\", \"0\", \"collision\", \"14\"]]\nQuestion = Is it true that more than one lap has a grid of fifteen?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    grids = get_column_by_name(table_data, \"grid\")\n    answer = grids.count(\"15\") > 1\n    return answer\n\n### END"}
{"id": "7d817252-20f2-41b7-971b-756c01bed94b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = julia glushko\ntable_data = [[\"outcome\", \"date\", \"tournament\", \"surface\", \"opponent in the final\", \"score\"],[\"winner\", \"november 11 , 2007\", \"mallorca , spain\", \"clay\", \"diana buzean\", \"6 - 0 , 6 - 0\"],[\"winner\", \"may 30 , 2010\", \"ra'anana , israel\", \"hard\", \"keren shlomo\", \"6 - 1 , 6 - 3\"],[\"winner\", \"october 24 , 2010\", \"akko , israel\", \"hard\", \"julia kimmelmann\", \"6 - 2 , 6 - 2\"],[\"winner\", \"november 7 , 2010\", \"kalgoorlie , australia\", \"hard\", \"isabella holland\", \"6 - 1 , 6 - 2\"],[\"winner\", \"november 28 , 2010\", \"traralgon , australia\", \"hard\", \"sacha jones\", \"2 - 6 , 7 - 5 , 7 - 6 (7 - 4)\"],[\"runner - up\", \"july 15 , 2012\", \"waterloo , canada\", \"clay\", \"sharon fichman\", \"6 - 3 , 6 - 2\"],[\"winner\", \"july 29 , 2012\", \"lexington , united states\", \"hard\", \"johanna konta\", \"6 - 3 , 6 - 0\"],[\"winner\", \"march 24 , 2013\", \"innisbrook resort and golf club , united states\", \"clay\", \"patricia mayr - achleitner\", \"2 - 6 , 6 - 0 , 6 - 4\"],[\"winner\", \"july 7 , 2013\", \"waterloo , canada\", \"clay\", \"gabriela dabrowski\", \"6 - 1 , 6 - 3\"]]\nQuestion = Is it true that the surface was clay for november 28 , 2010?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    surfaces = get_column_by_name(table_data, \"surface\")\n    answer = False\n    for date, surface in zip(dates, surfaces):\n        if \"november 28 , 2010\" in date.lower():\n            if surface.lower() == \"clay\":\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "53da1b55-bfbc-4ba3-9777-7c47ac56cd79", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 football league one\ntable_data = [[\"team\",\"outgoing manager\",\"manner of departure\",\"date of vacancy\",\"replaced by\",\"date of appointment\",\"position in table\"],[\"milton keynes dons\",\"paul ince\",\"signed by blackburn rovers (mutual consent)\",\"22 june 2008\",\"roberto di matteo\",\"2 july 2008\",\"pre - season\"],[\"cheltenham town\",\"keith downing\",\"mutual consent\",\"13 september 2008\",\"martin allen\",\"15 september 2008\",\"24th\"],[\"colchester united\",\"geraint williams\",\"mutual consent\",\"22 september 2008\",\"paul lambert\",\"24 september 2008\",\"23rd\"],[\"carlisle united\",\"john ward\",\"mutual consent\",\"3 november 2008\",\"greg abbott\",\"5 december 2008\",\"20th\"],[\"huddersfield town\",\"stan ternent\",\"mutual consent\",\"4 november 2008\",\"lee clark\",\"11 december 2008\",\"16th\"],[\"swindon town\",\"maurice malpas\",\"mutual consent\",\"14 november 2008\",\"danny wilson\",\"26 december 2008\",\"16th\"],[\"crewe alexandra\",\"steve holland\",\"contract terminated\",\"18 november 2008\",\"guðjón þórðarson\",\"24 december 2008\",\"24th\"],[\"hartlepool united\",\"danny wilson\",\"contract terminated\",\"15 december 2008\",\"chris turner\",\"15 december 2008\",\"13th\"],[\"leeds united\",\"gary mcallister\",\"contract terminated\",\"21 december 2008\",\"simon grayson\",\"23 december 2008\",\"9th\"],[\"walsall\",\"jimmy mullen\",\"contract terminated\",\"10 january 2009\",\"chris hutchings\",\"20 january 2009\",\"12th\"],[\"leyton orient\",\"martin ling\",\"mutual consent\",\"18 january 2009\",\"geraint williams\",\"5 february 2009\",\"21st\"],[\"yeovil town\",\"russell slade\",\"contract terminated\",\"16 february 2009\",\"terry skiverton\",\"18 february 2009\",\"16th\"],[\"brighton & hove albion\",\"micky adams\",\"contract terminated\",\"21 february 2009\",\"russell slade\",\"6 march 2009\",\"21st\"]]\nQuestion = Is it true that micky adams vacate his position before 21 february 2009?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\nfrom datetime import datetime\n\ndef parse_date(date_str):\n    return datetime.strptime(date_str, '%d %B %Y')\n\ndef before(date1, date2):\n    return date1 < date2\n\ndef solution(table_data):\n    managers = get_column_by_name(table_data, \"outgoing manager\")\n    dates = get_column_by_name(table_data, \"date of vacancy\")\n    for manager, date in zip(managers, dates):\n        if manager.lower() == \"micky adams\":\n            answer = before(parse_date(date), parse_date(\"21 february 2009\"))\n            break\n    return answer\n\n### END"}
{"id": "fc5b32f5-3b20-479c-b0cc-148c618ee3b2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"singular abbreviation\", \"singular word\", \"plural abbreviation\", \"plural word\", \"discipline\"],[\"d\", \"didot\", \"dd\", \"didots\", \"typography\"],[\"f\", \"following line or page\", \"ff\", \"following lines or pages\", \"notes\"],[\"f\", \"folio\", \"ff\", \"folios\", \"literature\"],[\"h\", \"hand\", \"hh\", \"hands\", \"horse height\"],[\"l\", \"line\", \"ll\", \"lines\", \"notes\"],[\"ms\", \"manuscript\", \"mss\", \"manuscripts\", \"notes\"],[\"op\", \"opus\", \"opp\", \"opera\", \"notes\"],[\"p\", \"page\", \"pp\", \"pages\", \"notes\"],[\"q\", \"quarto\", \"qq\", \"quartos\", \"literature\"],[\"s (or §)\", \"section\", \"ss (or §§)\", \"sections\", \"notes\"],[\"v\", \"volume\", \"vv\", \"volumes\", \"notes\"]]\nQuestion = Is it true that the plural word of hands used the abbreviation hh?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    plural_words = get_column_by_name(table_data, \"plural word\")\n    plural_abbreviations = get_column_by_name(table_data, \"plural abbreviation\")\n    for plural_word, plural_abbreviation in zip(plural_words, plural_abbreviations):\n        if plural_word.lower() == \"hands\":\n            answer = equal_to(plural_abbreviation, \"hh\")\n            break \n    return answer\n\n### END"}
{"id": "ecd73f7e-9788-4e3b-ab93-32c8db58c96b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"census year\", \"number of muslims 000\", \"population of england and wales 000\", \"muslim (% of total population)\", \"registered mosques\", \"muslims per mosque\"],[\"1961\", \"50\", \"46196\", \"0.11\", \"7\", \"7143\"],[\"1971\", \"226\", \"49152\", \"0.46\", \"30\", \"7533\"],[\"1981\", \"553\", \"49634\", \"1.11\", \"149\", \"3711\"],[\"1991\", \"950\", \"51099\", \"1.86\", \"443\", \"2144\"],[\"2001\", \"1600\", \"52042\", \"3.07\", \"614\", \"2606\"]]\nQuestion = Is it true that in 1981 the percentage of the total population that was muslim was 1.11%?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    census_years = get_column_by_name(table_data, \"census year\")\n    muslim_percentages = get_column_by_name(table_data, \"muslim (% of total population)\")\n    for year, percentage in zip(census_years, muslim_percentages):\n        if year == \"1981\":\n            answer = equal_to(percentage, \"1.11\")\n            break \n    return answer\n\n### END"}
{"id": "eac6a498-74c8-449c-9b8b-0235cdb37d0a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of radio stations in tamaulipas\ntable_data = [[\"frequency\", \"callsign\", \"brand\", \"city of license\", \"type\"],[\"580\", \"xehp\", \"la mas prendida\", \"ciudad victoria\", \"norteño\"],[\"640\", \"xetam\", \"la poderosa\", \"santa elena\", \"norteño\"],[\"970\", \"xebj - am\", \"radio 970\", \"ciudad victoria\", \"contemporary\"],[\"1340\", \"xerpv - am\", \"la cotorra\", \"ciudad victoria\", \"norteño\"],[\"1380\", \"xegw\", \"planeta w 1380\", \"ciudad victoria\", \"christian pop\"],[\"1480\", \"xevic\", \"radio tamaulipas\", \"ciudad victoria\", \"state government\"]]\nQuestion = Is it true that norteno has a callsign of xetam when the frequency is 580?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    callsigns = get_column_by_name(table_data, \"callsign\")\n    types = get_column_by_name(table_data, \"type\")\n    for frequency, callsign, type in zip(frequencies, callsigns, types):\n        if frequency == \"580\" and type.lower() == \"norteño\":\n            answer = equal_to(callsign, \"xetam\")\n            break \n    return answer\n\n### END"}
{"id": "8edd82cc-37e1-480b-bde2-c4507efa834d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mcleod 's daughters (season 2)\ntable_data = [[\"season\",\"series\",\"title\",\"director (s)\",\"writer (s)\",\"original airdate\"],[\"1\",\"23\",\"the drovers connection\",\"robert klenner\",\"chris hawkshaw & susan smith\",\"27 march 2002\"],[\"2\",\"24\",\"through the looking glass\",\"robert klenner\",\"david phillips\",\"3 april 2002\"],[\"3\",\"25\",\"desperate measures\",\"lewis fitz - gerald\",\"chris mccourt\",\"10 april 2002\"],[\"4\",\"26\",\"the bore war\",\"lewis fitz - gerald\",\"alexa wyatt\",\"17 april 2002\"],[\"5\",\"27\",\"hello stranger\",\"donald crombie\",\"michaeley o'brien\",\"24 april 2002\"],[\"6\",\"28\",\"a dry spell\",\"donald crombie\",\"chris phillips\",\"1 may 2002\"],[\"7\",\"29\",\"three 's a crowd\",\"karl zwicky\",\"chris pearce & alexa wyatt\",\"8 may 2002\"],[\"8\",\"30\",\"the bridle waltz\",\"karl zwicky\",\"robert dudley & alexa wyatt\",\"15 may 2002\"],[\"9\",\"31\",\"to have & to hold\",\"chris martin - jones\",\"chris mccourt & sarah smith\",\"3 july 2002\"],[\"10\",\"32\",\"home is where the heart is\",\"chris martin - jones\",\"ysabelle dean\",\"10 july 2002\"],[\"11\",\"33\",\"wildfire\",\"ian gilmour\",\"sally webb\",\"17 july 2002\"],[\"12\",\"34\",\"hounded\",\"ian gilmour\",\"dave warner\",\"24 july 2002\"],[\"13\",\"35\",\"steer trek\",\"karl zwicky\",\"david phillips & alexa wyatt\",\"31 july 2002\"],[\"14\",\"36\",\"brave j\",\"karl zwicky\",\"louise crane\",\"7 august 2002\"],[\"15\",\"37\",\"you can leave your hat on\",\"chris martin - jones\",\"guila sandler\",\"15 august 2002\"],[\"16\",\"38\",\"stripped bare\",\"chris martin - jones\",\"chris hawkshaw\",\"21 august 2002\"],[\"17\",\"39\",\"blame it on the moonlight\",\"donald crombie\",\"chris mccourt\",\"4 september 2002\"],[\"18\",\"40\",\"made to be broken\",\"donald crombie\",\"chris mccourt\",\"18 september 2002\"],[\"19\",\"41\",\"best of enemies\",\"robert klenner\",\"david phillips\",\"25 september 2002\"],[\"20\",\"42\",\"wind change\",\"robert klenner\",\"chris phillips\",\"2 october 2002\"],[\"21\",\"43\",\"no more mr nice guy\",\"karl zwicky\",\"sarah smith\",\"9 october 2002\"]]\nQuestion = Is it true that the director when chris hawkshaw is the writer was karl zwicky?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    directors = get_column_by_name(table_data, \"director (s)\")\n    writers = get_column_by_name(table_data, \"writer (s)\")\n    answer = False\n    for director, writer in zip(directors, writers):\n        if \"chris hawkshaw\" in writer.lower():\n            if \"karl zwicky\" in director.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "589b3861-0577-4fa5-8be9-938c50415636", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1994 nhl entry draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"261\", \"per gustafsson\", \"defence\", \"sweden\", \"florida panthers\", \"hv71 (sweden)\"],[\"262\", \"jeremy stevenson\", \"left wing\", \"united states\", \"mighty ducks of anaheim\", \"sault ste marie greyhounds (ohl)\"],[\"263\", \"rob mara\", \"left wing\", \"united states\", \"chicago blackhawks\", \"belmont hill high school (hs - massachusetts)\"],[\"264\", \"jason issel\", \"left wing\", \"canada\", \"winnipeg jets\", \"prince albert raiders (whl)\"],[\"265\", \"steve nimigon\", \"left wing\", \"canada\", \"hartford whalers\", \"niagara falls thunder (ohl)\"],[\"266\", \"ladislav benysek\", \"defence\", \"czech republic\", \"edmonton oilers\", \"olomouc hc (czech republic)\"],[\"267\", \"jamie butt\", \"left wing\", \"canada\", \"ny rangers\", \"tacoma rockets (whl)\"],[\"268\", \"brian white\", \"defence\", \"united states\", \"tampa bay lightning\", \"arlington catholic high school (hs - massachusetts)\"],[\"269\", \"mike hanson\", \"centre\", \"united states\", \"new jersey devils\", \"minot high school (hs - north dakota)\"],[\"270\", \"jan lipiansky\", \"forward\", \"slovakia\", \"philadelphia flyers\", \"slovan bratislava (slovakia)\"],[\"271\", \"david beauregard\", \"left wing\", \"canada\", \"san jose sharks\", \"st hyacinthe lasers (qmjhl)\"],[\"272\", \"dick tarnstrom\", \"defence\", \"sweden\", \"new york islanders\", \"aik (sweden)\"],[\"273\", \"robert longpre\", \"centre\", \"canada\", \"vancouver canucks\", \"medicine hat tigers (whl)\"],[\"274\", \"antti tormanen\", \"left wing\", \"finland\", \"ottawa senators\", \"jokerit (finland)\"],[\"275\", \"sergei tertyshny\", \"defence\", \"russia\", \"washington capitals\", \"chelyabinsk traktor (russia)\"],[\"276\", \"scott fankhouser\", \"goaltender\", \"united states\", \"st louis blues\", \"university of massachusetts lowell (ncaa)\"],[\"277\", \"shayne wright\", \"defence\", \"canada\", \"buffalo sabres\", \"owen sound platers (ohl)\"],[\"278\", \"ross parsons\", \"defence\", \"canada\", \"montreal canadiens\", \"regina pats (whl)\"],[\"279\", \"pavel torgayev\", \"centre\", \"russia\", \"calgary flames\", \"tps (finland)\"],[\"280\", \"chris szysky\", \"right wing\", \"canada\", \"dallas stars\", \"swift current broncos (whl)\"],[\"281\", \"andrei yakhanov\", \"defence\", \"russia\", \"boston bruins\", \"ufa salavat yulayev (russia)\"],[\"282\", \"doug nolan\", \"defence\", \"united states\", \"toronto maple leafs\", \"catholic memorial high school (hs - massachusetts)\"],[\"283\", \"toivo suursoo\", \"left wing\", \"estonia\", \"detroit red wings\", \"krylya sovetov moscow (russia)\"],[\"284\", \"brian leitza\", \"goaltender\", \"united states\", \"pittsburgh penguins\", \"sioux city musketeers (ushl)\"],[\"285\", \"steven low\", \"defence\", \"canada\", \"quebec nordiques\", \"sherbrooke faucons (qmjhl)\"],[\"286\", \"kim johnsson\", \"defence\", \"sweden\", \"new york rangers\", \"malmã if (sweden)\"]]\nQuestion = Is it true that steven low played for catholic memorial high school (hs - massachusetts)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    teams = get_column_by_name(table_data, \"college / junior / club team\")\n    answer = False\n    for player, team in zip(players, teams):\n        if player.lower() == \"steven low\" and team.lower() == \"catholic memorial high school (hs - massachusetts)\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "7b388af5-e6a6-4c74-94a0-e832ae90bd38", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = south carolina gamecocks men 's soccer\ntable_data = [[\"rank\", \"player\", \"goals\", \"assists\", \"points\", \"years\"],[\"1\", \"doug allison\", \"63\", \"32\", \"158\", \"1984 - 87\"],[\"2\", \"chris faklaris\", \"55\", \"14\", \"124\", \"1991 - 94\"],[\"3\", \"clint mathis\", \"53\", \"15\", \"121\", \"1994 - 97\"],[\"4\", \"clark brisson\", \"36\", \"26\", \"98\", \"1987 - 90\"],[\"5\", \"dan ratcliff\", \"37\", \"20\", \"94\", \"1983 - 86\"],[\"6\", \"jordan quinn\", \"37\", \"13\", \"87\", \"1999 - 02\"],[\"7\", \"andrew coggins\", \"33\", \"15\", \"81\", \"1988 - 91\"],[\"8\", \"brian winstead\", \"33\", \"14\", \"80\", \"1978 - 79\"],[\"9\", \"billy baumhoff\", \"22\", \"34\", \"78\", \"1991 - 94\"],[\"9\", \"rob smith\", \"19\", \"40\", \"78\", \"1991 - 94\"],[\"11\", \"john harr\", \"28\", \"20\", \"76\", \"1997 - 99\"],[\"12\", \"arni arnthorsson\", \"22\", \"25\", \"69\", \"1984 - 87\"],[\"13\", \"dave goodchild\", \"28\", \"12\", \"68\", \"1979 - 82\"],[\"14\", \"rubãn tufiã±o\", \"18\", \"30\", \"66\", \"1989 - 92\"],[\"15\", \"joey worthen\", \"25\", \"15\", \"65\", \"1998 - 01\"]]\nQuestion = Is it true that bill baumoff scored the most total points of all players listed in the table?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef is_max(num, num_list):\n    return num == max(num_list)\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    points = get_column_by_name(table_data, \"points\")\n    points = list(map(int, points))\n    player_index = players.index(\"billy baumhoff\")\n    player_points = points[player_index]\n    answer = is_max(player_points, points)\n    return answer\n\n### END"}
{"id": "0b1c8a6f-2875-4d50-9cb2-d0a3418df254", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = hey venus!\ntable_data = [[\"region\", \"date\", \"label\", \"format\", \"catalogue\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"vinyl record\", \"rtradlp 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"compact disc\", \"rtradcd 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"download\", \"-\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"vinyl record\", \"rt - 346 - 1\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"download\", \"rt - 346 - 5\"],[\"united states\", \"22 january 2008\", \"rough trade america\", \"double compact disc\", \"rtradcd 423\"],[\"japan\", \"12 september 2007\", \"rough trade japan\", \"compact disc\", \"xqcy - 1003\"]]\nQuestion = Is it true that for vinyl , the rough trade records catalogue entry is rtradcd 423?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    formats = get_column_by_name(table_data, \"format\")\n    labels = get_column_by_name(table_data, \"label\")\n    catalogues = get_column_by_name(table_data, \"catalogue\")\n    for format, label, catalogue in zip(formats, labels, catalogues):\n        if format.lower() == \"vinyl record\" and label.lower() == \"rough trade records\":\n            answer = equal_to(catalogue, \"rtradcd 423\")\n            break \n    return answer\n\n### END"}
{"id": "a1b333ca-4549-4a96-8295-10752e281075", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = f.c. united of manchester\ntable_data = [[\"season\",\"leaguecontested\",\"level\",\"leagueposition\",\"avghome attendance 1\",\"fa cup\",\"fa trophy\",\"leading scorer 1\"],[\"2005 - 06\",\"north west counties league division two\",\"10\",\"1st of 19 promoted\",\"3056\",\"n / a\",\"n / a\",\"rory patterson 18\"],[\"2006 - 07\",\"north west counties league division one\",\"9\",\"1st of 22 promoted\",\"2581\",\"n / a\",\"n / a\",\"stuart rudd 38\"],[\"2007 - 08\",\"northern premier league division one north\",\"8\",\"2nd of 18 won playoffs promoted\",\"2086 2\",\"1q\",\"prelim rd\",\"rory patterson 34\"],[\"2008 - 09\",\"northern premier league premier division\",\"7\",\"6th of 22\",\"2152\",\"1q\",\"3q\",\"kyle wilson 21\"],[\"2009 - 10\",\"northern premier league premier division\",\"7\",\"13th of 20\",\"1954 3\",\"4q\",\"3q\",\"phil marsh 10\"],[\"2010 - 11\",\"northern premier league premier division\",\"7\",\"4th of 22 playoffs runner - up\",\"1961 4\",\"r2\",\"3q\",\"michael norton 24\"],[\"2011 - 12\",\"northern premier league premier division\",\"7\",\"6th of 22 playoffs runner - up\",\"1947 5\",\"2q\",\"r1\",\"matthew wolfenden 20\"],[\"2012 - 13\",\"northern premier league premier division\",\"7\",\"3rd of 22 playoffs runner - up\",\"1835 6\",\"4q\",\"2q\",\"matthew wolfenden 19\"],[\"2013 - 14\",\"northern premier league premier division\",\"7\",\"4th of 24\",\"1713\",\"1q\",\"1q next game 19th oct\",\"tom greaves 8\"]]\nQuestion = Is it true that in the 2010 - 11 season 's norther premier league premier division the leading scorer 1 was michael norton with 24 goals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    leading_scorers = get_column_by_name(table_data, \"leading scorer 1\")\n    for season, leading_scorer in zip(seasons, leading_scorers):\n        if season.lower() == \"2010 - 11\":\n            answer = equal_to(leading_scorer, \"michael norton 24\")\n            break \n    return answer\n\n### END"}
{"id": "c0935d6f-9690-4557-88e3-e09e6b0daedd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = south carolina gamecocks men 's soccer\ntable_data = [[\"rank\", \"player\", \"goals\", \"assists\", \"points\", \"years\"],[\"1\", \"doug allison\", \"63\", \"32\", \"158\", \"1984 - 87\"],[\"2\", \"chris faklaris\", \"55\", \"14\", \"124\", \"1991 - 94\"],[\"3\", \"clint mathis\", \"53\", \"15\", \"121\", \"1994 - 97\"],[\"4\", \"clark brisson\", \"36\", \"26\", \"98\", \"1987 - 90\"],[\"5\", \"dan ratcliff\", \"37\", \"20\", \"94\", \"1983 - 86\"],[\"6\", \"jordan quinn\", \"37\", \"13\", \"87\", \"1999 - 02\"],[\"7\", \"andrew coggins\", \"33\", \"15\", \"81\", \"1988 - 91\"],[\"8\", \"brian winstead\", \"33\", \"14\", \"80\", \"1978 - 79\"],[\"9\", \"billy baumhoff\", \"22\", \"34\", \"78\", \"1991 - 94\"],[\"9\", \"rob smith\", \"19\", \"40\", \"78\", \"1991 - 94\"],[\"11\", \"john harr\", \"28\", \"20\", \"76\", \"1997 - 99\"],[\"12\", \"arni arnthorsson\", \"22\", \"25\", \"69\", \"1984 - 87\"],[\"13\", \"dave goodchild\", \"28\", \"12\", \"68\", \"1979 - 82\"],[\"14\", \"rubãn tufiã±o\", \"18\", \"30\", \"66\", \"1989 - 92\"],[\"15\", \"joey worthen\", \"25\", \"15\", \"65\", \"1998 - 01\"]]\nQuestion = Is it true that in the years 1991 - 1994 billy baumhoff scored 78 points with 22 goals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    goals = get_column_by_name(table_data, \"goals\")\n    points = get_column_by_name(table_data, \"points\")\n    years = get_column_by_name(table_data, \"years\")\n    for player, goal, point, year in zip(players, goals, points, years):\n        if player.lower() == \"billy baumhoff\" and year == \"1991 - 94\":\n            answer = equal_to(goal, \"22\") and equal_to(point, \"78\")\n            break \n    return answer\n\n### END"}
{"id": "d71443fe-8d92-4f87-9acf-744522175504", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1999 tennessee titans season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 12 , 1999\", \"cincinnati bengals\", \"w 36 - 35\", \"65272\"],[\"2\", \"september 19 , 1999\", \"cleveland browns\", \"w 26 - 9\", \"65904\"],[\"3\", \"september 26 , 1999\", \"jacksonville jaguars\", \"w 20 - 19\", \"61502\"],[\"4\", \"october 3 , 1999\", \"san francisco 49ers\", \"l 22 - 24\", \"67447\"],[\"5\", \"october 10 , 1999\", \"baltimore ravens\", \"w 14 - 11\", \"65487\"],[\"6\", \"october 17 , 1999\", \"new orleans saints\", \"w 24 - 21\", \"51875\"],[\"8\", \"october 31 , 1999\", \"st louis rams\", \"w 24 - 21\", \"66415\"],[\"9\", \"november 7 , 1999\", \"miami dolphins\", \"l 0 - 17\", \"74109\"],[\"10\", \"november 14 , 1999\", \"cincinnati bengals\", \"w 24 - 14\", \"46017\"],[\"11\", \"november 21 , 1999\", \"pittsburgh steelers\", \"w 16 - 10\", \"66619\"],[\"12\", \"november 28 , 1999\", \"cleveland browns\", \"w 33 - 21\", \"72008\"],[\"13\", \"december 5 , 1999\", \"baltimore ravens\", \"l 14 - 41\", \"67854\"],[\"14\", \"december 9 , 1999\", \"oakland raiders\", \"w 21 - 14\", \"66357\"],[\"15\", \"december 19 , 1999\", \"atlanta falcons\", \"w 30 - 17\", \"66196\"],[\"16\", \"december 26 , 1999\", \"jacksonville jaguars\", \"w 41 - 14\", \"66641\"],[\"17\", \"january 2 , 2000\", \"pittsburgh steelers\", \"w 47 - 36\", \"48025\"]]\nQuestion = Is it true that the game on the week 2 had an attendance of 65904?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    for week, attendance in zip(weeks, attendances):\n        if week == \"2\":\n            answer = equal_to(attendance, \"65904\")\n            break \n    return answer\n\n### END"}
{"id": "d03b9b65-6a00-4140-87b9-745f29ff4b7a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of six feet under episodes\ntable_data = [[\"no in series\", \"no in season\", \"title\", \"directed by\", \"written by\", \"original air date\"],[\"14\", \"1\", \"in the game\", \"rodrigo garcã­a\", \"alan ball\", \"march 3 , 2002\"],[\"15\", \"2\", \"out , out brief candle\", \"kathy bates\", \"laurence andries\", \"march 10 , 2002\"],[\"16\", \"3\", \"the plan\", \"rose troche\", \"kate robin\", \"march 17 , 2002\"],[\"17\", \"4\", \"driving mr mossback\", \"michael cuesta\", \"rick cleveland\", \"march 24 , 2002\"],[\"18\", \"5\", \"the invisible woman\", \"jeremy podeswa\", \"bruce eric kaplan\", \"march 31 , 2002\"],[\"19\", \"6\", \"in place of anger\", \"michael engler\", \"christian taylor\", \"april 7 , 2002\"],[\"20\", \"7\", \"back to the garden\", \"dan attias\", \"jill soloway\", \"april 14 , 2002\"],[\"21\", \"8\", \"it 's the most wonderful time of the year\", \"alan taylor\", \"scott buck\", \"april 21 , 2002\"],[\"22\", \"9\", \"someone else 's eyes\", \"michael cuesta\", \"alan ball\", \"april 28 , 2002\"],[\"23\", \"10\", \"the secret\", \"alan poul\", \"bruce eric kaplan\", \"may 5 , 2002\"],[\"24\", \"11\", \"the liar and the whore\", \"miguel arteta\", \"rick cleveland\", \"may 12 , 2002\"],[\"25\", \"12\", \"i'll take you\", \"michael engler\", \"jill soloway\", \"may 19 , 2002\"]]\nQuestion = Is it true that alan taylor directed only one episode , which aired on april 21 , 2002?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef solution(table_data):\n    directors = get_column_by_name(table_data, \"directed by\")\n    air_dates = get_column_by_name(table_data, \"original air date\")\n    director = \"alan taylor\"\n    air_date = \"april 21 , 2002\"\n    answer = False\n    if count_occurrences(director, directors) == 1 and air_date in air_dates:\n        answer = True\n    return answer\n\n### END"}
{"id": "4349e426-d669-4a55-937a-0c0acb717120", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 14 icc world cricket league\ntable_data = [[\"details\",\"host nation (s)\",\"final venue\",\"winner\",\"result\",\"runner - up\"],[\"2009 division seven\",\"guernsey\",\"king george v sports ground , castel\",\"207 / 7 (46.1 overs)\",\"bahrain won by 3 wickets scorecard\",\"guernsey 204 / 9 (50.0 overs)\"],[\"2009 division six\",\"singapore\",\"kallang cricket ground , singapore\",\"242 / 8 (50.0 overs)\",\"singapore won by 68 runs scorecard\",\"174 all out (48.4 overs)\"],[\"2010 division one\",\"netherlands\",\"vra ground , amstelveen\",\"ireland 233 / 4 (44.5 overs)\",\"ireland won by 6 wickets scorecard\",\"232 all out (48.5 overs)\"],[\"2010 division four\",\"italy\",\"ovale di rastignano , pianoro\",\"united states 188 / 2 (21.4 overs)\",\"united states won by 8 wickets scorecard\",\"italy 185 / 9 (50 overs)\"],[\"2010 division eight\",\"kuwait\",\"kuwait oil company hubara ground , ahmadi city\",\"164 / 4 (33.1 overs)\",\"kuwait won by 6 wickets scorecard\",\"163 / 8 (50 overs)\"],[\"2011 division three\",\"hong kong\",\"kowloon cricket club\",\"hong kong 207 / 6 (47.1 overs)\",\"hong kong won by 4 wickets scorecard\",\"202 (50 overs)\"],[\"2011 division two\",\"united arab emirates\",\"dsc cricket stadium , dubai\",\"201 / 5 (45.3 overs)\",\"united arab emirates won by 5 wickets scorecard\",\"namibia 200 (49.3 overs)\"],[\"2011 division seven\",\"botswana\",\"botswana cricket association oval 1 , gaborone\",\"219 / 9 (50 overs)\",\"kuwait won by 72 runs scorecard\",\"147 (36.5 overs)\"],[\"2011 division six\",\"malaysia\",\"kinrara academy oval , kuala lumpur\",\"guernsey 211 / 8 (49.3 overs)\",\"guernsey won by 2 wickets scorecard\",\"208 / 9 (50 overs)\"],[\"2012 division five\",\"singapore\",\"kallang ground , singapore\",\"164 / 1 (26.4 overs)\",\"singapore won by 9 wickets scorecard\",\"159 (47 overs)\"],[\"2012 division four\",\"malaysia\",\"kinrara academy oval , kuala lumpur\",\"147 / 2 (28 overs)\",\"nepal won by 8 wickets scorecard\",\"united states 145 (48.1 overs)\"],[\"2012 division eight\",\"samoa\",\"faleata oval no 1 , apia\",\"222 / 9 (50 overs)\",\"vanuatu won by 39 runs scorecard\",\"183 (42.5 overs)\"],[\"2013 division seven\",\"botswana\",\"botswana cricket association oval 1 , gaborone\",\"134 / 4 (32.1 overs)\",\"nigeria won by 6 wickets ( d / l ) scorecard\",\"133 (38 , 4 overs)\"],[\"2013 division three\",\"bermuda\",\"national stadium , hamilton\",\"153 / 5 (39.2 overs)\",\"nepal won by 5 wickets scorecard\",\"151 / 8 (50.0 overs)\"],[\"2013 division six\",\"jersey\",\"grainville cricket ground , st saviour\",\"jersey 10 points\",\"jersey won on points table\",\"8 points\"]]\nQuestion = Is it true that the winner of the division whose final venue was kowloon cricket club was guernsey 211 / 8 (49.3 overs)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    final_venues = get_column_by_name(table_data, \"final venue\")\n    winners = get_column_by_name(table_data, \"winner\")\n    for final_venue, winner in zip(final_venues, winners):\n        if \"kowloon cricket club\" in final_venue.lower():\n            answer = equal_to(winner, \"guernsey 211 / 8 (49.3 overs)\")\n            break \n    return answer\n\n### END"}
{"id": "2f4b0ef9-6ec0-4b15-a9b4-5f64cb209401", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"domestic freight\", \"domestic mail\", \"international freight\", \"international mail\", \"total freight and mail\", \"change\"],[\"2006\", \"132\", \"260\", \"2883\", \"3\", \"3278\", \"+ 9 , 8%\"],[\"2007\", \"50\", \"102\", \"3304\", \"3\", \"3459\", \"+ 5 , 5%\"],[\"2008\", \"43\", \"0\", \"4650\", \"1\", \"4695\", \"+ 35 , 7%\"],[\"2009\", \"157\", \"0\", \"6761\", \"0\", \"6919\", \"+ 47 , 4%\"],[\"2010\", \"72\", \"0\", \"6988\", \"0\", \"7061\", \"+ 2 , 1%\"],[\"2011\", \"1\", \"1\", \"7852\", \"0\", \"7853\", \"+ 11 , 2%\"]]\nQuestion = Is it true that the total number of frieght and mail of 7853 has a domestic mail of 1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    total_freight_and_mail = get_column_by_name(table_data, \"total freight and mail\")\n    domestic_mail = get_column_by_name(table_data, \"domestic mail\")\n    for total, mail in zip(total_freight_and_mail, domestic_mail):\n        if total == \"7853\":\n            answer = equal_to(mail, \"1\")\n            break \n    return answer\n\n### END"}
{"id": "e20fdf99-7edd-44d0-804f-2b3e6d5692d4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mercedes - benz r170\ntable_data = [[\"model\", \"years\", \"engine\", \"power\", \"0 - 100 km / h (62 mph)\", \"top speed\"],[\"slk200\", \"1997 - 2004\", \"2l m111.946 l4\", \"102 kw (136hp)\", \"9.3 seconds\", \"208 km / h (129 mph)\"],[\"slk200k\", \"1997 - 2000\", \"2l m111.943 l4\", \"143 kw (192hp)\", \"6.8 seconds\", \"236 km / h (147 mph)\"],[\"slk200k\", \"2001 - 2004\", \"2l m111.958 l4\", \"122 kw (163hp)\", \"7.4 seconds\", \"223 km / h (138 mph)\"],[\"slk230k\", \"1996 - 2000\", \"2.3l m111.973 l4\", \"144 kw (193hp)\", \"6.9 seconds\", \"231 km / h (143 mph)\"],[\"slk230k\", \"2001 - 2004\", \"2.3l m111.983 l4\", \"147 kw (197hp)\", \"6.8 seconds\", \"240 km / h (148 mph)\"],[\"slk320\", \"2001 - 2004\", \"3.2l m112.947 v6\", \"162 kw (218hp)\", \"6.5 seconds\", \"250 / 276 km / h (155 / 171 mph)\"],[\"slk32 amg\", \"2001 - 2004\", \"3.2l m112.960 v6\", \"264 kw (354hp)\", \"5.2 seconds\", \"250 / 280 / 310 km / h (155 / 174 / 193 mph)\"]]\nQuestion = Is it true that the 0 - 100 km / h (62 mph) acceleration for the model with a top speed of 208 km / h (129 mph) is 9.3 seconds?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    top_speeds = get_column_by_name(table_data, \"top speed\")\n    accelerations = get_column_by_name(table_data, \"0 - 100 km / h (62 mph)\")\n    for top_speed, acceleration in zip(top_speeds, accelerations):\n        if top_speed == \"208 km / h (129 mph)\":\n            answer = equal_to(acceleration, \"9.3 seconds\")\n            break \n    return answer\n\n### END"}
{"id": "38ac4b24-40be-482d-8f28-e4e6b0aec179", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 chelsea f.c. season\ntable_data = [[\"competition\",\"current position / round\",\"final position / round\",\"first match\",\"last match\"],[\"fa community shield\",\"-\",\"runner - up\",\"5 aug 2007\",\"5 aug 2007\"],[\"premier league\",\"-\",\"runner - up\",\"12 aug 2007\",\"11 may 2008\"],[\"uefa champions league\",\"-\",\"runner - up\",\"18 sep 2007\",\"21 may 2008\"],[\"football league cup\",\"-\",\"runner - up\",\"24 sep 2007\",\"24 feb 2008\"],[\"fa cup\",\"-\",\"quarter - finals\",\"5 jan 2008\",\"3 mar 2008\"]]\nQuestion = Is it true that for the premier league competition , the first match was played on august 12 , 2007 and the last match played on may 11 , 2008?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    competitions = get_column_by_name(table_data, \"competition\")\n    first_matches = get_column_by_name(table_data, \"first match\")\n    last_matches = get_column_by_name(table_data, \"last match\")\n    for competition, first_match, last_match in zip(competitions, first_matches, last_matches):\n        if competition.lower() == \"premier league\":\n            answer = equal_to(first_match, \"12 aug 2007\") and equal_to(last_match, \"11 may 2008\")\n            break \n    return answer\n\n### END"}
{"id": "5dc14121-c640-40b4-8462-d718c2d9ff06", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = marsel ilhan\ntable_data = [[\"outcome\", \"date\", \"tournament\", \"surface\", \"opponent\", \"score\"],[\"runner - up\", \"august 20 , 2007\", \"karshi\", \"hard\", \"denis istomin\", \"1 - 6 , 4 - 6\"],[\"winner\", \"july 13 , 2008\", \"israel open\", \"hard\", \"ivo klec\", \"6 - 4 , 6 - 4\"],[\"runner - up\", \"may 17 , 2009\", \"izmir cup\", \"hard\", \"andrea stoppini\", \"6 - 7 , 2 - 6\"],[\"winner\", \"september 20 , 2010\", \"banja luka\", \"clay\", \"pere riba\", \"6 - 0 , 7 - 6 (7 - 4)\"],[\"runner - up\", \"september 26 , 2010\", \"izmir cup\", \"hard\", \"somdev devvarman\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 10 , 2011\", \"scheveningen\", \"clay\", \"steve darcis\", \"3 - 6 , 6 - 4 , 2 - 6\"],[\"runner - up\", \"september 25 , 2011\", \"izmir cup\", \"hard\", \"lukáš lacko\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 29 , 2012\", \"president 's cup (tennis)\", \"hard\", \"evgeny donskoy\", \"3 - 6 , 4 - 6\"]]\nQuestion = Is it true that on august 20th , 2007 , the outcome of the israel open was runner - up?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    outcomes = get_column_by_name(table_data, \"outcome\")\n    tournaments = get_column_by_name(table_data, \"tournament\")\n    answer = False\n    for date, outcome, tournament in zip(dates, outcomes, tournaments):\n        if \"august 20 , 2007\" in date.lower() and \"israel open\" in tournament.lower():\n            answer = outcome.lower() == \"runner - up\"\n            break\n    return answer\n\n### END"}
{"id": "a2e6ea93-bae8-48e2-9ffd-f9166b0636a0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = malayalam calendar\ntable_data = [[\"months in malayalam era\", \"in malayalam\", \"gregorian calendar\", \"tamil calendar\", \"saka era\", \"sign of zodiac\"],[\"chingam\", \"ചിങ്ങം\", \"august - september\", \"aavani\", \"sravan - bhadrapada\", \"leo\"],[\"kanni\", \"കന്നി\", \"september - october\", \"purattasi\", \"bhadrapada - asvina\", \"virgo\"],[\"tulam\", \"തുലാം\", \"october - november\", \"aippasi\", \"asvina - kartika\", \"libra\"],[\"vrscikam\", \"വൃശ്ചികം\", \"november - december\", \"karthigai\", \"kartika - agrahayana\", \"scorpio\"],[\"dhanu\", \"ധനു\", \"december - january\", \"margazhi\", \"agrahayana - pausa\", \"sagittarius\"],[\"makaram\", \"മകരം\", \"january - february\", \"thai\", \"pausa - magha\", \"capricon\"],[\"kumbham\", \"കുംഭം\", \"february - march\", \"maasi\", \"magha - phalguna\", \"aquarius\"],[\"minam\", \"മീനം\", \"march - april\", \"panguni\", \"phalguna - chaitra\", \"pisces\"],[\"medam\", \"മേടം\", \"april - may\", \"chithirai\", \"chaitra - vaisakha\", \"aries\"],[\"edavam (idavam)\", \"ഇടവം\", \"may - june\", \"vaikasi\", \"vaisakha - jyaistha\", \"taurus\"],[\"mithunam\", \"മിഥുനം\", \"june - july\", \"aani\", \"jyaistha - asada\", \"gemini\"],[\"karkadakam\", \"കര്‍ക്കടകം\", \"july - august\", \"aadi\", \"asada - sravana\", \"cancer\"]]\nQuestion = Is it true that the sign of the zodiac with month മീനം is pisces?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    malayalam_months = get_column_by_name(table_data, \"in malayalam\")\n    zodiac_signs = get_column_by_name(table_data, \"sign of zodiac\")\n    for month, sign in zip(malayalam_months, zodiac_signs):\n        if month == \"മീനം\":\n            answer = sign == \"pisces\"\n            break\n    return answer\n\n### END"}
{"id": "7bfcb776-2a5b-454d-9f8e-3f82bd23b3e1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = papal election , 1292 - 94\ntable_data = [[\"elector\",\"nationality\",\"order\",\"title\",\"elevated\",\"elevator\"],[\"latino malabranca orsini , op\",\"roman\",\"cardinal - bishop\",\"bishop of ostia e velletri\",\"1278 , march 12\",\"nicholas iii\"],[\"gerardo bianchi\",\"parmigiani\",\"cardinal - bishop\",\"bishop of sabina\",\"1278 , march 12\",\"nicholas iii\"],[\"giovanni boccamazza\",\"roman\",\"cardinal - bishop\",\"bishop of frascati\",\"1285 , december 22\",\"honorius iv\"],[\"matteo d'acquasparta , ofm\",\"ni todi\",\"cardinal - bishop\",\"bishop of porto e santa rufina\",\"1288 , may 16\",\"nicholas iv\"],[\"jean cholet\",\"french\",\"cardinal - priest\",\"titulus s cecilia\",\"1281 , april 12\",\"martin iv\"],[\"benedetto caetani\",\"ni anagni ( n catalonia family)\",\"cardinal - priest\",\"titulus ss silvestro e martino ai monti\",\"1281 , april 12\",\"martin iv\"],[\"hugues aycelin de billom , op\",\"french\",\"cardinal - priest\",\"titulus s sabina\",\"1288 , may 16\",\"nicholas iv\"],[\"pietro peregrosso\",\"ese milan\",\"cardinal - priest\",\"titulus s marco\",\"1288 , may 16\",\"nicholas iv\"],[\"matteo orsini rosso\",\"roman\",\"cardinal - deacon\",\"deacon of s maria in portico\",\"1262 , may 22\",\"urban iv\"],[\"giacomo colonna\",\"roman\",\"cardinal - deacon\",\"deacon of s maria in via lata\",\"1278 , march 12\",\"nicholas iii\"],[\"napoleone orsini\",\"roman\",\"cardinal - deacon\",\"deacon of s adriano\",\"1288 , may 16\",\"nicholas iv\"],[\"pietro colonna\",\"roman\",\"cardinal - deacon\",\"deacon of s eustachio\",\"1288 , may 16\",\"nicholas iv\"]]\nQuestion = Is it true that the bishop of frascati is the title of elector giovanni boccamazza?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    electors = get_column_by_name(table_data, \"elector\")\n    titles = get_column_by_name(table_data, \"title\")\n    for elector, title in zip(electors, titles):\n        if equal_to(elector, \"giovanni boccamazza\"):\n            answer = equal_to(title, \"bishop of frascati\")\n            break \n    return answer\n\n### END"}
{"id": "2bd865f5-0b56-40c8-96ce-2f9eb40a47db", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mercedes - benz r170\ntable_data = [[\"model\", \"years\", \"engine\", \"power\", \"0 - 100 km / h (62 mph)\", \"top speed\"],[\"slk200\", \"1997 - 2004\", \"2l m111.946 l4\", \"102 kw (136hp)\", \"9.3 seconds\", \"208 km / h (129 mph)\"],[\"slk200k\", \"1997 - 2000\", \"2l m111.943 l4\", \"143 kw (192hp)\", \"6.8 seconds\", \"236 km / h (147 mph)\"],[\"slk200k\", \"2001 - 2004\", \"2l m111.958 l4\", \"122 kw (163hp)\", \"7.4 seconds\", \"223 km / h (138 mph)\"],[\"slk230k\", \"1996 - 2000\", \"2.3l m111.973 l4\", \"144 kw (193hp)\", \"6.9 seconds\", \"231 km / h (143 mph)\"],[\"slk230k\", \"2001 - 2004\", \"2.3l m111.983 l4\", \"147 kw (197hp)\", \"6.8 seconds\", \"240 km / h (148 mph)\"],[\"slk320\", \"2001 - 2004\", \"3.2l m112.947 v6\", \"162 kw (218hp)\", \"6.5 seconds\", \"250 / 276 km / h (155 / 171 mph)\"],[\"slk32 amg\", \"2001 - 2004\", \"3.2l m112.960 v6\", \"264 kw (354hp)\", \"5.2 seconds\", \"250 / 280 / 310 km / h (155 / 174 / 193 mph)\"]]\nQuestion = Is it true that the slk200k with a top speed of more than 236 km / h (147 mph) can accelerate to 100 km / h (62 mph) in less than 6.8 seconds?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef parse_speed_to_mph(speed_str):\n    speed = int(speed_str.split(' ')[0])\n    return speed\n\ndef parse_time_to_seconds(time_str):\n    time = float(time_str.split(' ')[0])\n    return time\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef less(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    models = get_column_by_name(table_data, \"model\")\n    top_speeds = get_column_by_name(table_data, \"top speed\")\n    acceleration_times = get_column_by_name(table_data, \"0 - 100 km / h (62 mph)\")\n    answer = False\n    for model, top_speed, acceleration_time in zip(models, top_speeds, acceleration_times):\n        if \"slk200k\" in model.lower():\n            parsed_speed = parse_speed_to_mph(top_speed)\n            parsed_time = parse_time_to_seconds(acceleration_time)\n            if greater(parsed_speed, 236) and less(parsed_time, 6.8):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "c03fab51-2a09-4e1b-b925-6e5b7bff5688", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1982 - 83 atlanta hawks season\ntable_data = [[\"round\", \"pick\", \"player\", \"nationality\", \"college\"],[\"1\", \"10\", \"keith edmonson\", \"united states\", \"purdue\"],[\"3\", \"56\", \"joe kopicki\", \"united states\", \"detroit mercy\"],[\"5\", \"102\", \"mark hall\", \"united states\", \"minnesota\"],[\"6\", \"126\", \"jay bruchak\", \"united states\", \"mount st mary 's\"],[\"7\", \"148\", \"horace wyatt\", \"united states\", \"clemson\"],[\"8\", \"172\", \"james ratiff\", \"united states\", \"howard\"],[\"9\", \"194\", \"pierre bland\", \"united states\", \"elizabeth city state\"],[\"10\", \"216\", \"ronnie mcadoo\", \"united states\", \"old dominion\"]]\nQuestion = Is it true that pierre bland had a pick less than 148 in 1 round?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    picks = get_column_by_name(table_data, \"pick\")\n    players = get_column_by_name(table_data, \"player\")\n    for round, pick, player in zip(rounds, picks, players):\n        if player.lower() == \"pierre bland\":\n            answer = less_than(int(pick), 148) and round == \"1\"\n            break \n    return answer\n\n### END"}
{"id": "7b8e5d74-3898-4402-a7ac-f16e7152356a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = vern schuppan\ntable_data = [[\"year\", \"chassis\", \"engine\", \"start\", \"finish\"],[\"1976\", \"eagle\", \"offy\", \"17th\", \"18th\"],[\"1977\", \"wildcat\", \"offy\", \"dnq\", \"dnq\"],[\"1979\", \"wildcat\", \"dgs\", \"22nd\", \"21st\"],[\"1981\", \"mclaren\", \"cosworth\", \"18th\", \"3rd\"],[\"1982\", \"penske\", \"cosworth\", \"dnq\", \"dnq\"]]\nQuestion = Is it true that in 1979 , the wildcat chassis started 22nd and finished 21st?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    chassis = get_column_by_name(table_data, \"chassis\")\n    starts = get_column_by_name(table_data, \"start\")\n    finishes = get_column_by_name(table_data, \"finish\")\n    for year, chassi, start, finish in zip(years, chassis, starts, finishes):\n        if year == \"1979\" and chassi.lower() == \"wildcat\":\n            answer = equal_to(start, \"22nd\") and equal_to(finish, \"21st\")\n            break \n    return answer\n\n### END"}
{"id": "3774b032-40d6-4cbe-8c4e-f0e63dc59637", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2004 - 05 in scottish football\ntable_data = [[\"date\",\"venue\",\"score\",\"competition\",\"report\"],[\"18 august\",\"hampden park , glasgow (h)\",\"0 - 3\",\"friendly\",\"bbc sport\"],[\"3 september\",\"estadio ciudad de valencia , valencia (a)\",\"1 - 1\",\"friendly\",\"bbc sport\"],[\"8 september\",\"hampden park , glasgow (h)\",\"0 - 0\",\"wcq5\",\"bbc sport\"],[\"9 october\",\"hampden park , glasgow (h)\",\"0 - 1\",\"wcq5\",\"bbc sport\"],[\"13 october\",\"republican stadium , chişinău (a)\",\"1 - 1\",\"wcq5\",\"bbc sport\"],[\"17 november\",\"easter road , edinburgh (h)\",\"1 - 4\",\"friendly\",\"bbc sport\"],[\"26 march\",\"san siro , milan (a)\",\"0 - 2\",\"wcq5\",\"bbc sport\"],[\"4 june\",\"hampden park , glasgow (h)\",\"2 - 0\",\"wcq5\",\"bbc sport\"],[\"8 june\",\"dinamo stadion , minsk (a)\",\"0 - 0\",\"wcq5\",\"bbc sport\"]]\nQuestion = Is it true that the friendly competition at easter road , endinburgh (h) had a score of 1 - 4?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"venue\")\n    scores = get_column_by_name(table_data, \"score\")\n    competitions = get_column_by_name(table_data, \"competition\")\n    for venue, score, competition in zip(venues, scores, competitions):\n        if venue.lower() == \"easter road , edinburgh (h)\" and competition.lower() == \"friendly\":\n            answer = equal_to(score, \"1 - 4\")\n            break \n    return answer\n\n### END"}
{"id": "ab285631-5bbf-4133-b55e-16f84f345fd6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\", \"10:30\"],[\"heartland\", \"heartland\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"cbc news : sunday night\", \"cbc news : sunday night\"],[\"law and order : criminal intent\", \"law and order : criminal intent\", \"cold case\", \"cold case\", \"desperate housewives\", \"desperate housewives\", \"dirty sexy money\", \"dirty sexy money\"],[\"the simpsons\", \"da kink in my hair\", \"the simpsons\", \"king of the hill\", \"family guy\", \"american dad!\", \"brothers & sisters\", \"brothers & sisters\"],[\"america 's funniest home videos\", \"america 's funniest home videos\", \"kyle xy\", \"kyle xy\", \"america 's next top model\", \"america 's next top model\", \"stargate sg - 1\", \"stargate sg - 1\"],[\"everybody hates chris\", \"speakers' corner\", \"behind the movies\", \"bravo!fact presents\", \"great movies\", \"great movies\", \"great movies\", \"great movies\"],[\"viva laughlin\", \"viva laughlin\", \"extreme makeover : home edition\", \"extreme makeover : home edition\", \"e! countdowns\", \"e! countdowns\", \"e! live encore\", \"e! live encore\"],[\"découverte\", \"et dieu créa laflaque\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"le téléjournal\", \"le téléjournal\"],[\"le banquier / dieu merci!\", \"le banquier / dieu merci!\", \"occupation double\", \"occupation double\", \"occupation double\", \"occupation double\", \"le tva week - end\", \"le tva week - end\"],[\"loft story\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal weekend\"]]\nQuestion = Is it true that découverte is at 7:00 when tout le monde en parle is at 9:30?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    column_7 = get_column_by_index(table_data, 0)\n    column_9_30 = get_column_by_index(table_data, 5)\n    answer = equal_to(column_7[7], \"découverte\") and equal_to(column_9_30[7], \"tout le monde en parle\")\n    return answer\n\n### END"}
{"id": "d49f17e5-95f0-44c5-a06a-337dc03f4dc8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1944 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"st kilda\", \"7.12 (54)\", \"south melbourne\", \"10.19 (79)\", \"junction oval\", \"8000\", \"5 august 1944\"],[\"geelong\", \"11.20 (86)\", \"hawthorn\", \"9.7 (61)\", \"kardinia park\", \"7000\", \"5 august 1944\"],[\"collingwood\", \"8.12 (60)\", \"footscray\", \"15.9 (99)\", \"victoria park\", \"9000\", \"5 august 1944\"],[\"carlton\", \"4.14 (38)\", \"melbourne\", \"8.6 (54)\", \"princes park\", \"10000\", \"5 august 1944\"],[\"north melbourne\", \"11.12 (78)\", \"fitzroy\", \"15.11 (101)\", \"arden street oval\", \"14000\", \"5 august 1944\"],[\"richmond\", \"11.17 (83)\", \"essendon\", \"12.15 (87)\", \"punt road oval\", \"26000\", \"5 august 1944\"]]\nQuestion = Is it true that the home team with the lowest away team score is collingwood?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef parse_score(score_str):\n    return int(score_str.split(' ')[1].strip('()'))\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    away_team_scores = get_column_by_name(table_data, \"away team score\")\n    min_score = float('inf')\n    min_score_home_team = None\n    for home_team, away_team_score in zip(home_teams, away_team_scores):\n        score = parse_score(away_team_score)\n        if score < min_score:\n            min_score = score\n            min_score_home_team = home_team\n    answer = min_score_home_team.lower() == \"collingwood\"\n    return answer\n\n### END"}
{"id": "f8265a41-555a-4f56-982c-0c12df2c469b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 veikkausliiga\ntable_data = [[\"club\", \"location\", \"stadium\", \"capacity\", \"manager\", \"kitmaker\"],[\"ac oulu\", \"oulu\", \"castrén\", \"4000\", \"juha malinen\", \"umbro\"],[\"fc honka\", \"espoo\", \"tapiolan urheilupuisto\", \"6000\", \"mika lehkosuo\", \"kappa\"],[\"fc inter\", \"turku\", \"veritas stadion\", \"9372\", \"job dragtsma\", \"nike\"],[\"fc lahti\", \"lahti\", \"lahden stadion\", \"15000\", \"ilkka mäkelä\", \"umbro\"],[\"ff jaro\", \"jakobstad\", \"jakobstads centralplan\", \"5000\", \"alexei eremenko sr\", \"errea\"],[\"haka\", \"valkeakoski\", \"tehtaan kenttä\", \"3516\", \"sami ristilä\", \"umbro\"],[\"hjk\", \"helsinki\", \"sonera stadium\", \"10770\", \"antti muurinen\", \"adidas\"],[\"ifk mariehamn\", \"mariehamn\", \"wiklöf holding arena\", \"4000\", \"pekka lyyski\", \"puma\"],[\"jjk\", \"jyväskylä\", \"harjun stadion\", \"3000\", \"kari martonen\", \"legea\"],[\"kups\", \"kuopio\", \"kuopion keskuskenttä\", \"5000\", \"esa pekonen\", \"puma\"],[\"mypa\", \"anjalankoski\", \"saviniemi\", \"4167\", \"janne lindberg\", \"puma\"],[\"tampere united\", \"tampere\", \"ratina stadion\", \"17000\", \"ari hjelm\", \"puma\"],[\"tps\", \"turku\", \"veritas stadion\", \"9372\", \"marko rajamäki\", \"puma\"]]\nQuestion = Is it true that the stadium in kuopio is named kuopion keskuskentta?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"location\")\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    for location, stadium in zip(locations, stadiums):\n        if location.lower() == \"kuopio\":\n            answer = equal_to(stadium, \"kuopion keskuskenttä\")\n            break \n    return answer\n\n### END"}
{"id": "e323ec39-eea2-4be5-80f1-cf66e0dee2b8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1979 new orleans saints season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 2 , 1979\", \"atlanta falcons\", \"l 40 - 34\", \"70940\"],[\"2\", \"september 9 , 1979\", \"green bay packers\", \"l 28 - 19\", \"53184\"],[\"3\", \"september 16 , 1979\", \"philadelphia eagles\", \"l 26 - 14\", \"54212\"],[\"4\", \"september 23 , 1979\", \"san francisco 49ers\", \"w 30 - 21\", \"39727\"],[\"5\", \"september 30 , 1979\", \"new york giants\", \"w 24 - 14\", \"51543\"],[\"6\", \"october 7 , 1979\", \"los angeles rams\", \"l 35 - 17\", \"68986\"],[\"7\", \"october 14 , 1979\", \"tampa bay buccaneers\", \"w 42 - 14\", \"67640\"],[\"8\", \"october 21 , 1979\", \"detroit lions\", \"w 17 - 7\", \"57428\"],[\"9\", \"october 28 , 1979\", \"washington redskins\", \"w 14 - 10\", \"52133\"],[\"10\", \"november 4 , 1979\", \"denver broncos\", \"l 10 - 3\", \"74482\"],[\"11\", \"november 11 , 1979\", \"san francisco 49ers\", \"w 31 - 20\", \"65551\"],[\"12\", \"november 18 , 1979\", \"seattle seahawks\", \"l 38 - 24\", \"60055\"],[\"13\", \"november 25 , 1979\", \"atlanta falcons\", \"w 37 - 6\", \"42815\"],[\"14\", \"december 3 , 1979\", \"oakland raiders\", \"l 42 - 35\", \"65541\"],[\"15\", \"december 9 , 1979\", \"san diego chargers\", \"l 35 - 0\", \"61059\"],[\"16\", \"december 16 , 1979\", \"los angeles rams\", \"w 29 - 14\", \"53879\"]]\nQuestion = Is it true that in week 3 , the opponents were the philadelphia eagles , and the result was a l 26 - 14?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    results = get_column_by_name(table_data, \"result\")\n    for week, opponent, result in zip(weeks, opponents, results):\n        if week == \"3\":\n            answer = equal_to(opponent, \"philadelphia eagles\") and equal_to(result, \"l 26 - 14\")\n            break \n    return answer\n\n### END"}
{"id": "94e3d259-c404-4dcc-b99b-ed62e5fcf993", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\"],[\"coronation street\", \"who do you think you are\", \"the nature of things\", \"the nature of things\", \"doc zone\", \"doc zone\", \"the national\"],[\"etalk\", \"jeopardy!\", \"csi\", \"csi\", \"grey 's anatomy\", \"grey 's anatomy\", \"er\"],[\"et canada\", \"entertainment tonight\", \"survivor : china\", \"survivor : china\", \"the office\", \"my name is earl\", \"shark\"],[\"wheel of fortune\", \"e2\", \"scrubs\", \"30 rock\", \"don't forget the lyrics!\", \"don't forget the lyrics!\", \"big shots\"],[\"friends\", \"access hollywood\", \"ugly betty\", \"ugly betty\", \"supernatural\", \"supernatural\", \"terminal city\"],[\"the insider\", \"e! news\", \"are you smarter than a 5th grader\", \"are you smarter than a 5th grader\", \"e! movies we love\", \"e! movies we love\", \"e! movies we love\"],[\"virginie\", \"infoman\", \"le moment de vérité\", \"le moment de vérité\", \"tous pour un\", \"tous pour un\", \"le téléjournal\"],[\"la fièvre de la danse\", \"la fièvre de la danse\", \"le banquier\", \"le banquier\", \"taxi 0 - 22\", \"taxi 0 - 22\", \"le tva 22 heures\"],[\"loft story\", \"criss angel\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal du soir\"]]\nQuestion = Is it true that le journal du sour was on tv at 10:00 the same channel had ugly betty at 8:30?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    column_8_30 = get_column_by_index(table_data, 3)\n    column_10_00 = get_column_by_index(table_data, 6)\n    for show_8_30, show_10_00 in zip(column_8_30, column_10_00):\n        if equal_to(show_8_30, \"ugly betty\") and equal_to(show_10_00, \"le journal du soir\"):\n            return True\n    return False\n\n### END"}
{"id": "ba78f9d8-719e-4c70-b574-324b676fbe20", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 cleveland cavaliers season\ntable_data = [[\"game\",\"date\",\"team\",\"score\",\"high points\",\"high rebounds\",\"high assists\",\"location attendance\",\"record\"],[\"18\",\"december 2\",\"phoenix suns\",\"w 107 - 90 (ot)\",\"zydrunas ilgauskas (14)\",\"shaquille o'neal (9)\",\"lebron james (10)\",\"quicken loans arena 20562\",\"13 - 5\"],[\"19\",\"december 4\",\"chicago bulls\",\"w 101 - 87 (ot)\",\"lebron james (23)\",\"zydrunas ilgauskas , shaquille o'neal (7)\",\"lebron james (11)\",\"quicken loans arena 20562\",\"14 - 5\"],[\"20\",\"december 6\",\"milwaukee bucks\",\"w 101 - 86 (ot)\",\"delonte west (21)\",\"anderson varejão (12)\",\"lebron james (10)\",\"bradley center 16625\",\"15 - 5\"],[\"21\",\"december 8\",\"memphis grizzlies\",\"l 109 - 111 (ot)\",\"lebron james (43)\",\"lebron james (13)\",\"mo williams (8)\",\"fedex forum 16325\",\"15 - 6\"],[\"22\",\"december 9\",\"houston rockets\",\"l 85 - 95 (ot)\",\"lebron james (27)\",\"shaquille o'neal , j j hickson (10)\",\"lebron james (7)\",\"toyota center 18200\",\"15 - 7\"],[\"23\",\"december 11\",\"portland trail blazers\",\"w 104 - 99 (ot)\",\"lebron james (33)\",\"shaquille o'neal (11)\",\"mo williams (10)\",\"quicken loans arena 20562\",\"16 - 7\"],[\"24\",\"december 13\",\"oklahoma city thunder\",\"w 102 - 89 (ot)\",\"lebron james (44)\",\"anderson varejão (10)\",\"lebron james (6)\",\"ford center 18203\",\"17 - 7\"],[\"25\",\"december 15\",\"new jersey nets\",\"w 99 - 89 (ot)\",\"lebron james (23)\",\"mo williams , jamario moon (8)\",\"lebron james (7)\",\"quicken loans arena 20562\",\"18 - 7\"],[\"26\",\"december 16\",\"philadelphia 76ers\",\"w 108 - 101 (ot)\",\"lebron james (36)\",\"shaquille o'neal (9)\",\"lebron james (7)\",\"wachovia center 19517\",\"19 - 7\"],[\"27\",\"december 18\",\"milwaukee bucks\",\"w 85 - 82 (ot)\",\"lebron james (26)\",\"lebron james (10)\",\"lebron james (8)\",\"quicken loans arena 20562\",\"20 - 7\"],[\"28\",\"december 20\",\"dallas mavericks\",\"l 95 - 102 (ot)\",\"lebron james (25)\",\"anderson varejão , shaquille o'neal (8)\",\"lebron james (6)\",\"american airlines center 20346\",\"20 - 8\"],[\"29\",\"december 21\",\"phoenix suns\",\"w 109 - 91 (ot)\",\"lebron james (29)\",\"mo williams , lebron james , jj hickson (6)\",\"delonte west (6)\",\"us airways center 18221\",\"21 - 8\"],[\"30\",\"december 23\",\"sacramento kings\",\"w 117 - 104 (ot)\",\"lebron james (34)\",\"lebron james (16)\",\"lebron james (10)\",\"arco arena 16407\",\"22 - 8\"],[\"31\",\"december 25\",\"la lakers\",\"w 102 - 87 (ot)\",\"mo williams (28)\",\"anderson varejão , zydrunas ilgauskas (9)\",\"lebron james (9)\",\"staples center 18997\",\"23 - 8\"],[\"32\",\"december 27\",\"houston rockets\",\"w 108 - 83 (ot)\",\"lebron james (29)\",\"shaquille o'neal (11)\",\"lebron james (6)\",\"quicken loans arena 20562\",\"24 - 8\"]]\nQuestion = Is it true that on december 25 , the high assists were done by lebron james with 6 assists?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    high_assists = get_column_by_name(table_data, \"high assists\")\n    for date, high_assist in zip(dates, high_assists):\n        if \"december 25\" in date.lower():\n            answer = equal_to(high_assist, \"lebron james (6)\")\n            break \n    return answer\n\n### END"}
{"id": "c60600d4-309f-4400-8cfa-9a86b70f9308", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date\",\"visitor\",\"score\",\"home\",\"decision\",\"record\"],[\"february 2\",\"phoenix\",\"2 - 3\",\"nashville\",\"ellis\",\"27 - 21 - 5\"],[\"february 5\",\"carolina\",\"0 - 1\",\"nashville\",\"ellis\",\"28 - 21 - 5\"],[\"february 7\",\"tampa bay\",\"2 - 1\",\"nashville\",\"ellis\",\"28 - 21 - 6\"],[\"february 9\",\"nashville\",\"3 - 4\",\"san jose\",\"ellis\",\"28 - 22 - 6\"],[\"february 10\",\"nashville\",\"6 - 3\",\"phoenix\",\"ellis\",\"29 - 22 - 6\"],[\"february 12\",\"detroit\",\"2 - 4\",\"nashville\",\"ellis\",\"30 - 22 - 6\"],[\"february 14\",\"chicago\",\"6 - 1\",\"nashville\",\"mason\",\"30 - 23 - 6\"],[\"february 16\",\"st louis\",\"1 - 2\",\"nashville\",\"ellis\",\"31 - 23 - 6\"],[\"february 17\",\"nashville\",\"4 - 5\",\"minnesota\",\"ellis\",\"31 - 23 - 7\"],[\"february 19\",\"edmonton\",\"4 - 5\",\"nashville\",\"ellis\",\"32 - 23 - 7\"],[\"february 21\",\"vancouver\",\"3 - 2\",\"nashville\",\"ellis\",\"32 - 23 - 8\"],[\"february 23\",\"dallas\",\"6 - 3\",\"nashville\",\"ellis\",\"32 - 24 - 8\"],[\"february 27\",\"nashville\",\"4 - 8\",\"buffalo\",\"mason\",\"32 - 25 - 8\"]]\nQuestion = Is it true that on february 21 , the game between nashville and visiting vancouver had a decision of ellis and ended with a record of 32 - 23 - 8?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    visitors = get_column_by_name(table_data, \"visitor\")\n    homes = get_column_by_name(table_data, \"home\")\n    decisions = get_column_by_name(table_data, \"decision\")\n    records = get_column_by_name(table_data, \"record\")\n    for date, visitor, home, decision, record in zip(dates, visitors, homes, decisions, records):\n        if date.lower() == \"february 21\" and visitor.lower() == \"vancouver\" and home.lower() == \"nashville\":\n            answer = equal_to(decision, \"ellis\") and equal_to(record, \"32 - 23 - 8\")\n            break \n    return answer\n\n### END"}
{"id": "1b7e7cf3-967f-4f97-a035-2cc994677e6a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1950 world figure skating championships\ntable_data = [[\"rank\", \"name\", \"nation\", \"placings\", \"total\"],[\"1\", \"karol kennedy / peter kennedy\", \"united states\", \"15\", \"96.07\"],[\"2\", \"jennifer nicks / john nicks\", \"united kingdom\", \"28.5\", \"92.70\"],[\"3\", \"marianne nagy / lászló nagy\", \"hungary\", \"32\", \"92.25\"],[\"4\", \"elianne steineman / andré calamé\", \"switzerland\", \"44.5\", \"90.00\"],[\"5\", \"suzanne gheldorf / jacques rénard\", \"belgium\", \"48.5\", \"89.43\"],[\"6\", \"elly stärck / harry gareis\", \"austria\", \"61\", \"88.08\"],[\"7\", \"marlene smith / donald gilchrist\", \"canada\", \"63\", \"87.07\"],[\"8\", \"joan waterhouse / gordon holloway\", \"united kingdom\", \"62\", \"88.31\"],[\"9\", \"liliane de becker / edmund verbustel\", \"belgium\", \"64\", \"88.42\"],[\"10\", \"irene maguire / walter muehlbronner\", \"united states\", \"82\", \"84.26\"],[\"11\", \"sybil cooke / bob hudson\", \"united kingdom\", \"93.5\", \"83.47\"],[\"12\", \"denise favart / jacques favart\", \"france\", \"108\", \"77.73\"]]\nQuestion = Is it true that the sum of all total values for switzerland is greater than that of the united states?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef sum_column_values(column):\n    return sum(map(float, column))\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    nations = get_column_by_name(table_data, \"nation\")\n    totals = get_column_by_name(table_data, \"total\")\n    total_us = 0\n    total_switzerland = 0\n    for nation, total in zip(nations, totals):\n        if nation.lower() == \"united states\":\n            total_us += float(total)\n        elif nation.lower() == \"switzerland\":\n            total_switzerland += float(total)\n    answer = greater(total_switzerland, total_us)\n    return answer\n\n### END"}
{"id": "629c22db-3757-427b-8e71-671cb0a430d8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = yani tseng\ntable_data = [[\"year\", \"championship\", \"winning score\", \"to par\", \"margin of victory\", \"runner - up\", \"winner 's share\"],[\"2008\", \"lpga championship\", \"73 + 70 + 65 + 68 = 276\", \"12\", \"playoff 1\", \"maria hjorth\", \"300000\"],[\"2010\", \"kraft nabisco championship\", \"69 + 71 + 67 + 68 = 275\", \"13\", \"1 stroke\", \"suzann pettersen\", \"300000\"],[\"2010\", \"women 's british open\", \"68 + 68 + 68 + 73 = 277\", \"11\", \"1 stroke\", \"katherine hull\", \"408714\"],[\"2011\", \"lpga championship (2)\", \"66 + 70 + 67 + 66 = 269\", \"19\", \"10 strokes\", \"morgan pressel\", \"375000\"],[\"2011\", \"women 's british open (2)\", \"71 + 66 + 66 + 69 = 272\", \"16\", \"4 strokes\", \"brittany lang\", \"392133\"]]\nQuestion = Is it true that the smallest winner 's share during the lpga championship was 300000?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef get_min_value(lst):\n    return min(lst)\n\ndef solution(table_data):\n    championships = get_column_by_name(table_data, \"championship\")\n    winner_shares = get_column_by_name(table_data, \"winner 's share\")\n    lpga_winner_shares = [int(winner_shares[i]) for i in range(len(championships)) if \"lpga championship\" in championships[i].lower()]\n    min_lpga_winner_share = get_min_value(lpga_winner_shares)\n    answer = equal_to(min_lpga_winner_share, 300000)\n    return answer\n\n### END"}
{"id": "b52fcf1c-5d13-4acc-81dc-9ebc93ec8ee9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of all that episodes\ntable_data = [[\"season\", \"series\", \"episode title\", \"original air date\", \"nick prod\"],[\"1\", \"139\", \"lillix\", \"october 11 , 2003\", \"941\"],[\"2\", \"140\", \"nodesha\", \"october 18 , 2003\", \"942\"],[\"3\", \"141\", \"da razkalz cru\", \"october 25 , 2003\", \"943\"],[\"4\", \"142\", \"third eye blind\", \"november 1 , 2003\", \"944\"],[\"5\", \"143\", \"fefe dobson\", \"november 22 , 2003\", \"945\"],[\"7\", \"145\", \"drake bell\", \"january 10 , 2004\", \"947\"],[\"8\", \"146\", \"ok go\", \"january 24 , 2004\", \"948\"],[\"9\", \"147\", \"britney spears / nick cannon\", \"january 31 , 2004\", \"949\"],[\"10\", \"148\", \"brittany snow / wakefield\", \"february 7 , 2004\", \"950\"],[\"11\", \"149\", \"boomkat\", \"february 14 , 2004\", \"951\"],[\"12\", \"150\", \"nick lachey\", \"april 17 , 2004\", \"952\"],[\"13\", \"151\", \"avril lavigne\", \"june 12 , 2004\", \"953\"],[\"14\", \"152\", \"substitute jack\", \"june 19 , 2004\", \"954\"],[\"15\", \"153\", \"aaron carter\", \"june 26 , 2004\", \"955\"]]\nQuestion = Is it true that the premiere season was 2 with a nick production number of 942?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    nick_prods = get_column_by_name(table_data, \"nick prod\")\n    for season, nick_prod in zip(seasons, nick_prods):\n        if equal_to(season, \"1\") and equal_to(nick_prod, \"942\"):\n            answer = True\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "cd4c88db-e1f8-4c2d-9807-17ef2ef54ae3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = cultural interest fraternities and sororities\ntable_data = [[\"letters\", \"organization\", \"nickname\", \"founding date\", \"founding university\", \"type\"],[\"δλφ\", \"delta lambda phi\", \"dlp , deltas' , or lambda men\", \"1986 - 10 - 15\", \"washington , dc\", \"fraternity\"],[\"κψκ\", \"kappa psi kappa\", \"canes , k - psis , diamonds , or angels\", \"2001 - 08 - 17\", \"tallahassee , florida\", \"fraternity\"],[\"οεπ\", \"omicron epsilon pi\", \"the epps\", \"2000 - 12 - 07\", \"tallahassee , florida\", \"sorority\"],[\"γρλ\", \"gamma rho lambda 1\", \"grl\", \"2003 - 08 - 25\", \"tempe , arizona\", \"sorority\"],[\"αλζ\", \"alpha lambda zeta\", \"the regal alphas\", \"2006 - 01 - 09\", \"houston , texas and atlanta , georgia\", \"fraternity\"],[\"καλ\", \"kappa alpha lambda\", \"the kappas\", \"2003 - 10 - 19\", \"clark atlanta university\", \"sorority\"],[\"φαν\", \"phi alpha nu\", \"phi - nomenal gentlewomen\", \"2006 - 07 - 30\", \"charlotte , nc\", \"fraternity\"]]\nQuestion = Is it true that if the letters is ΦΑΝ , the founding date is 2006 - 07 - 30?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    letters = get_column_by_name(table_data, \"letters\")\n    founding_dates = get_column_by_name(table_data, \"founding date\")\n    for letter, founding_date in zip(letters, founding_dates):\n        if letter.lower() == \"φαν\":\n            answer = equal_to(founding_date, \"2006 - 07 - 30\")\n            break \n    return answer\n\n### END"}
{"id": "2117c51b-1072-493c-8fa8-0110cd9550e0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1997 new england patriots season\ntable_data = [[\"round\", \"overall\", \"player\", \"position\", \"college\"],[\"1\", \"29\", \"chris canty\", \"cornerback\", \"kansas state\"],[\"2\", \"59\", \"brandon mitchell\", \"defensive tackle\", \"texas a&m\"],[\"3\", \"61\", \"sedrick shaw\", \"running back\", \"iowa\"],[\"3\", \"89\", \"chris carter\", \"safety\", \"texas\"],[\"4\", \"97\", \"damon denson\", \"offensive guard\", \"michigan\"],[\"4\", \"125\", \"ed ellis\", \"offensive tackle\", \"buffalo\"],[\"5\", \"159\", \"vernon crawford\", \"linebacker\", \"florida state\"],[\"6\", \"192\", \"tony gaiter\", \"wide receiver\", \"miami (fl)\"],[\"7\", \"230\", \"scott rehberg\", \"offensive guard\", \"central michigan\"]]\nQuestion = Is it true that the overall score for vernon crawford , a florida state player , was 159?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    colleges = get_column_by_name(table_data, \"college\")\n    overalls = get_column_by_name(table_data, \"overall\")\n    for player, college, overall in zip(players, colleges, overalls):\n        if player.lower() == \"vernon crawford\" and college.lower() == \"florida state\":\n            answer = equal_to(overall, \"159\")\n            break \n    return answer\n\n### END"}
{"id": "7658c38e-5eb5-43c6-b79d-518dcbc090e5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1985 chicago cubs season\ntable_data = [[\"date\",\"opponent\",\"score\",\"loss\",\"save\"],[\"july 1\",\"phillies\",\"3 - 1\",\"denny (5 - 6)\",\"smith (17)\"],[\"july 2\",\"phillies\",\"11 - 2\",\"sutcliffe (7 - 7)\",\"\"],[\"july 3\",\"phillies\",\"4 - 3\",\"tekulve (4 - 3)\",\"\"],[\"july 4\",\"giants\",\"6 - 4\",\"trout (7 - 4)\",\"minton (2)\"],[\"july 5\",\"giants\",\"12 - 6\",\"sanderson (4 - 4)\",\"\"],[\"july 6\",\"giants\",\"6 - 4\",\"smith (4 - 3)\",\"m davis (5)\"],[\"july 7\",\"giants\",\"6 - 5\",\"m davis (3 - 6)\",\"smith (18)\"],[\"july 8\",\"padres\",\"8 - 4\",\"sorensen (1 - 2)\",\"\"],[\"july 9\",\"padres\",\"7 - 3\",\"show (7 - 6)\",\"frazier (1)\"],[\"july 10\",\"padres\",\"4 - 3\",\"dravecky (8 - 5)\",\"smith (19)\"],[\"july 11\",\"dodgers\",\"3 - 1\",\"fontenot (3 - 4)\",\"howell (9)\"],[\"july 12\",\"dodgers\",\"7 - 4\",\"smith (4 - 4)\",\"\"],[\"july 13\",\"dodgers\",\"9 - 1\",\"gura (0 - 2)\",\"\"],[\"july 14\",\"dodgers\",\"10 - 4\",\"honeycutt (6 - 8)\",\"brusstar (2)\"],[\"july 18\",\"giants\",\"1 - 0\",\"frazier (5 - 3)\",\"\"],[\"july 19\",\"giants\",\"4 - 3\",\"gott (4 - 7)\",\"smith (20)\"],[\"july 20\",\"giants\",\"2 - 1\",\"hammaker (3 - 9)\",\"smith (21)\"],[\"july 21\",\"giants\",\"2 - 1\",\"gura (0 - 3)\",\"minton (3)\"],[\"july 22\",\"padres\",\"5 - 3\",\"jackson (0 - 1)\",\"smith (22)\"],[\"july 23\",\"padres\",\"8 - 1\",\"hawkins (12 - 3)\",\"\"],[\"july 24\",\"padres\",\"4 - 3 10\",\"stoddard (1 - 4)\",\"frazier (2)\"],[\"july 25\",\"dodgers\",\"7 - 3\",\"fontenot (3 - 5)\",\"howell (10)\"],[\"july 26\",\"dodgers\",\"10 - 0\",\"ruthven (4 - 7)\",\"\"],[\"july 27\",\"dodgers\",\"5 - 4\",\"frazier (5 - 4)\",\"howell (11)\"],[\"july 28\",\"dodgers\",\"9 - 2\",\"powell (0 - 1)\",\"brusstar (3)\"],[\"july 30\",\"cardinals\",\"11 - 3\",\"engel (0 - 1)\",\"\"],[\"july 31\",\"cardinals\",\"5 - 2\",\"andãjar (17 - 5)\",\"smith (23)\"]]\nQuestion = Is it true that on july 24 , the loss was credited to gura (0 - 3)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    losses = get_column_by_name(table_data, \"loss\")\n    for date, loss in zip(dates, losses):\n        if date.lower() == \"july 24\":\n            answer = loss.lower() == \"gura (0 - 3)\"\n            break\n    return answer\n\n### END"}
{"id": "36958bf8-ca23-450f-99f6-8b7932410cc5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1926 grand prix season\ntable_data = [[\"name\", \"circuit\", \"date\", \"winning drivers\", \"winning constructor\", \"report\"],[\"indianapolis 500\", \"indianapolis\", \"31 may\", \"frank lockhart\", \"miller\", \"report\"],[\"french grand prix\", \"miramas\", \"27 june\", \"jules goux\", \"bugatti\", \"report\"],[\"san sebastián grand prix / european grand prix\", \"lasarte\", \"18 july\", \"jules goux\", \"bugatti\", \"report\"],[\"british grand prix\", \"brooklands\", \"7 august\", \"robert sénéchal louis wagner\", \"delage\", \"report\"],[\"italian grand prix\", \"monza\", \"5 september\", \"louis charavel\", \"bugatti\", \"report\"]]\nQuestion = Is it true that on may 31 , frank lockhart was the winning driver at the indianapolis 500?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    dates = get_column_by_name(table_data, \"date\")\n    winning_drivers = get_column_by_name(table_data, \"winning drivers\")\n    for name, date, winning_driver in zip(names, dates, winning_drivers):\n        if name.lower() == \"indianapolis 500\" and date.lower() == \"31 may\":\n            answer = equal_to(winning_driver.lower(), \"frank lockhart\")\n            break \n    return answer\n\n### END"}
{"id": "d30bbeed-e934-4c5b-b001-bf1d00a295cc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = john mcenroe career statistics\ntable_data = [[\"outcome\", \"year\", \"championship\", \"surface\", \"partner\", \"opponents in the final\", \"score in the final\"],[\"winner\", \"2007\", \"french open\", \"clay\", \"järryd\", \"fitzgerald vilas\", \"6 - 1 , 6 - 2\"],[\"winner\", \"2008\", \"french open\", \"clay\", \"järryd\", \"bahrami leconte\", \"6 - 4 , 7 - 6 2\"],[\"winner\", \"2009\", \"french open\", \"clay\", \"järryd\", \"bahrami leconte\", \"7 - 6 2 , 6 - 1\"],[\"winner\", \"2010\", \"french open\", \"clay\", \"gómez\", \"bahrami leconte\", \"6 - 1 , 6 - 1\"],[\"runner - up\", \"2011\", \"french open\", \"clay\", \"gómez\", \"forget leconte\", \"6 - 3 , 5 - 7 ,\"]]\nQuestion = Is it true that they played with the same partner vs forget leconte as versus villas?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    partners = get_column_by_name(table_data, \"partner\")\n    opponents = get_column_by_name(table_data, \"opponents in the final\")\n    partner_vilas = None\n    partner_leconte = None\n    for partner, opponent in zip(partners, opponents):\n        if \"vilas\" in opponent.lower():\n            partner_vilas = partner\n        if \"leconte\" in opponent.lower():\n            partner_leconte = partner\n    answer = equal_to(partner_vilas, partner_leconte)\n    return answer\n\n### END"}
{"id": "9a93be9c-5fe4-4ff5-9498-7928539d1616", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mahmoud amnah\ntable_data = [[\"date\", \"venue\", \"score\", \"result\", \"competition\"],[\"08 oct 2004\", \"doha , qatar\", \"1 - 0\", \"2 - 1\", \"international friendly\"],[\"26 jan 2005\", \"kuwait city , kuwait\", \"1 - 1\", \"2 - 3\", \"international friendly\"],[\"04 dec 2005\", \"al - gharafa stadium , doha , qatar\", \"1 - 0\", \"2 - 2\", \"west asian games 2005\"],[\"10 dec 2005\", \"qatar sc stadium , doha , qatar\", \"1 - 0\", \"2 - 2\", \"west asian games 2005\"],[\"17 may 2008\", \"abbasiyyin stadium , damascus , syria\", \"1 - 0\", \"2 - 1\", \"international friendly\"]]\nQuestion = Is it true that the international friendly competition was held on 26 jan 2005?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    competitions = get_column_by_name(table_data, \"competition\")\n    answer = False\n    for date, competition in zip(dates, competitions):\n        if \"26 jan 2005\" in date.lower() and \"international friendly\" in competition.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "a03dc59d-aaf7-4f44-80fe-27c472ca2746", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\", \"10:30\"],[\"heartland\", \"heartland\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"cbc news : sunday night\", \"cbc news : sunday night\"],[\"law and order : criminal intent\", \"law and order : criminal intent\", \"cold case\", \"cold case\", \"desperate housewives\", \"desperate housewives\", \"dirty sexy money\", \"dirty sexy money\"],[\"the simpsons\", \"da kink in my hair\", \"the simpsons\", \"king of the hill\", \"family guy\", \"american dad!\", \"brothers & sisters\", \"brothers & sisters\"],[\"america 's funniest home videos\", \"america 's funniest home videos\", \"kyle xy\", \"kyle xy\", \"america 's next top model\", \"america 's next top model\", \"stargate sg - 1\", \"stargate sg - 1\"],[\"everybody hates chris\", \"speakers' corner\", \"behind the movies\", \"bravo!fact presents\", \"great movies\", \"great movies\", \"great movies\", \"great movies\"],[\"viva laughlin\", \"viva laughlin\", \"extreme makeover : home edition\", \"extreme makeover : home edition\", \"e! countdowns\", \"e! countdowns\", \"e! live encore\", \"e! live encore\"],[\"découverte\", \"et dieu créa laflaque\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"le téléjournal\", \"le téléjournal\"],[\"le banquier / dieu merci!\", \"le banquier / dieu merci!\", \"occupation double\", \"occupation double\", \"occupation double\", \"occupation double\", \"le tva week - end\", \"le tva week - end\"],[\"loft story\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal weekend\"]]\nQuestion = Is it true that brothers & sisters is at 10:00 when da king in my hair is at 7:30?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    column_730 = get_column_by_index(table_data, 1)\n    column_1000 = get_column_by_index(table_data, 6)\n    answer = \"da kink in my hair\" in column_730 and \"brothers & sisters\" in column_1000\n    return answer\n\n### END"}
{"id": "1c816105-b776-468b-ac40-d798fe0f3a3f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"episode\", \"broadcast date\", \"run time\", \"viewers (in millions)\", \"archive\"],[\"episode 1\", \"21 march 1970\", \"24:33\", \"7.1\", \"pal 2 colour videotape\"],[\"episode 2\", \"28 march 1970\", \"24:39\", \"7.6\", \"chroma dot colour recovery\"],[\"episode 3\", \"4 april 1970\", \"24:38\", \"8.0\", \"chroma dot colour recovery\"],[\"episode 4\", \"11 april 1970\", \"24:37\", \"9.3\", \"chroma dot colour recovery\"],[\"episode 5\", \"18 april 1970\", \"24:17\", \"7.1\", \"pal d3 colour restoration\"],[\"episode 6\", \"25 april 1970\", \"24:31\", \"6.9\", \"chroma dot colour recovery\"],[\"episode 7\", \"2 may 1970\", \"24:32\", \"6.4\", \"chroma dot colour recovery\"]]\nQuestion = Is it true that 6.9 million viewers tuned in on may 2nd , 1970?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    broadcast_dates = get_column_by_name(table_data, \"broadcast date\")\n    viewers = get_column_by_name(table_data, \"viewers (in millions)\")\n    for broadcast_date, viewer in zip(broadcast_dates, viewers):\n        if \"2 may 1970\" in broadcast_date.lower():\n            answer = equal_to(viewer, \"6.9\")\n            break \n    return answer\n\n### END"}
{"id": "e78a74bf-82de-44ea-ac89-e6bf3b56cc19", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = boise state broncos men 's basketball\ntable_data = [[\"year\", \"round\", \"opponent\", \"result\", \"bsu head coach\"],[\"1976\", \"first round\", \"unlv\", \"l 78 - 103\", \"bus conner\"],[\"1988\", \"first round\", \"michigan\", \"l 58 - 63\", \"bobby dye\"],[\"1993\", \"first round\", \"vanderbilt\", \"l 72 - 92\", \"bobby dye\"],[\"1994\", \"first round\", \"louisville\", \"l 58 - 67\", \"bobby dye\"],[\"2008\", \"first round\", \"louisville\", \"l 61 - 79\", \"greg graham\"],[\"2013\", \"first four\", \"la salle\", \"l 71 - 80\", \"leon rice\"]]\nQuestion = Is it true that l 71 - 80 was the result in 2013 of the first four rounds?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    rounds = get_column_by_name(table_data, \"round\")\n    results = get_column_by_name(table_data, \"result\")\n    for year, round, result in zip(years, rounds, results):\n        if year == \"2013\" and round.lower() == \"first four\":\n            answer = equal_to(result, \"l 71 - 80\")\n            break \n    return answer\n\n### END"}
{"id": "542612df-32aa-4417-b6e0-4ca569d7b6b0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sheffield and hallamshire association cup\ntable_data = [[\"season\", \"winner\", \"result\", \"runner - up\", \"final venue\"],[\"2002 - 03\", \"elm tree\", \"1 - 0\", \"stocksbridge park steels reserves\", \"belle vue\"],[\"2003 - 04\", \"hsbc\", \"3 - 2\", \"athersley recreation\", \"belle vue\"],[\"2004 - 05\", \"kiveton park\", \"2 - 2\", \"athersley recreation\", \"sandy lane\"],[\"2005 - 06\", \"kiveton park\", \"5 - 0\", \"sheffield lane top\", \"belle vue\"],[\"2006 - 07\", \"stocksbridge park steels reserves\", \"3 - 1\", \"hemsworth miners welfare\", \"millmoor\"],[\"2007 - 08\", \"athersley recreation\", \"1 - 0\", \"hollinsend amateurs\", \"oakwell\"],[\"2008 - 09\", \"hall green united\", \"2 - 1\", \"kirkburton\", \"keepmoat stadium (pitch 2)\"],[\"2009 - 10\", \"sheffield reserves\", \"2 - 1\", \"dearne colliery miners welfare\", \"inkersall road\"],[\"2010 - 11\", \"stocksbridge park steels reserves\", \"3 - 0\", \"kirkburton\", \"green lane\"],[\"2012 - 13\", \"swinton athletic\", \"3 - 0\", \"kirkburton\", \"sandy lane\"]]\nQuestion = Is it true that sheffield lane top was the runner - up during the 2005 - 06 season with kiveton park as the winner?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    winners = get_column_by_name(table_data, \"winner\")\n    runner_ups = get_column_by_name(table_data, \"runner - up\")\n    for season, winner, runner_up in zip(seasons, winners, runner_ups):\n        if season == \"2005 - 06\":\n            answer = equal_to(winner, \"kiveton park\") and equal_to(runner_up, \"sheffield lane top\")\n            break \n    return answer\n\n### END"}
{"id": "181eadb2-18ae-4bf4-9e37-5a45fc094429", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = marsel ilhan\ntable_data = [[\"outcome\", \"date\", \"tournament\", \"surface\", \"opponent\", \"score\"],[\"runner - up\", \"august 20 , 2007\", \"karshi\", \"hard\", \"denis istomin\", \"1 - 6 , 4 - 6\"],[\"winner\", \"july 13 , 2008\", \"israel open\", \"hard\", \"ivo klec\", \"6 - 4 , 6 - 4\"],[\"runner - up\", \"may 17 , 2009\", \"izmir cup\", \"hard\", \"andrea stoppini\", \"6 - 7 , 2 - 6\"],[\"winner\", \"september 20 , 2010\", \"banja luka\", \"clay\", \"pere riba\", \"6 - 0 , 7 - 6 (7 - 4)\"],[\"runner - up\", \"september 26 , 2010\", \"izmir cup\", \"hard\", \"somdev devvarman\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 10 , 2011\", \"scheveningen\", \"clay\", \"steve darcis\", \"3 - 6 , 6 - 4 , 2 - 6\"],[\"runner - up\", \"september 25 , 2011\", \"izmir cup\", \"hard\", \"lukáš lacko\", \"4 - 6 , 3 - 6\"],[\"runner - up\", \"july 29 , 2012\", \"president 's cup (tennis)\", \"hard\", \"evgeny donskoy\", \"3 - 6 , 4 - 6\"]]\nQuestion = Is it true that september 26 , 2010 was the date on which İlhan played against pere riba in izmir cup?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    tournaments = get_column_by_name(table_data, \"tournament\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    answer = False\n    for date, tournament, opponent in zip(dates, tournaments, opponents):\n        if date == \"september 26 , 2010\" and tournament == \"izmir cup\" and opponent == \"pere riba\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "f980568e-b3e2-456c-9d12-ec5215633b8b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2003 - 04 isu junior grand prix\ntable_data = [[\"rank\", \"nation\", \"gold\", \"silver\", \"bronze\", \"total\"],[\"1\", \"russia\", \"10\", \"14\", \"8\", \"32\"],[\"2\", \"united states\", \"9\", \"6\", \"7\", \"22\"],[\"3\", \"canada\", \"4\", \"2\", \"10\", \"16\"],[\"4\", \"japan\", \"4\", \"5\", \"4\", \"13\"],[\"5\", \"hungary\", \"4\", \"0\", \"2\", \"6\"],[\"6\", \"czech republic\", \"2\", \"1\", \"1\", \"4\"],[\"6\", \"ukraine\", \"1\", \"3\", \"0\", \"4\"],[\"6\", \"italy\", \"0\", \"1\", \"3\", \"4\"],[\"7\", \"sweden\", \"1\", \"2\", \"0\", \"3\"],[\"8\", \"israel\", \"1\", \"1\", \"0\", \"2\"],[\"9\", \"finland\", \"0\", \"0\", \"1\", \"1\"],[\"9\", \"france\", \"0\", \"1\", \"0\", \"1\"]]\nQuestion = Is it true that japan has more 16 total medals with ranks larger than 3 and total bronze medals being 0?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    nations = get_column_by_name(table_data, \"nation\")\n    total_medals = get_column_by_name(table_data, \"total\")\n    bronze_medals = get_column_by_name(table_data, \"bronze\")\n    for rank, nation, total_medal, bronze_medal in zip(ranks, nations, total_medals, bronze_medals):\n        if nation.lower() == \"japan\":\n            answer = greater(int(rank), 3) and equal_to(int(total_medal), 16) and equal_to(int(bronze_medal), 0)\n            break \n    return answer\n\n### END"}
{"id": "74c11f5b-030e-41e3-8548-5755f763dc76", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1989 - 90 fa cup\ntable_data = [[\"tie no\", \"home team\", \"score\", \"away team\", \"date\"],[\"1\", \"blackpool\", \"2 - 2\", \"queens park rangers\", \"18 feb 1990\"],[\"replay\", \"queens park rangers\", \"0 - 0\", \"blackpool\", \"21 feb 1990\"],[\"replay\", \"queens park rangers\", \"3 - 0\", \"blackpool\", \"26 feb 1990\"],[\"2\", \"bristol city\", \"0 - 0\", \"cambridge united\", \"17 feb 1990\"],[\"replay\", \"cambridge united\", \"1 - 1\", \"bristol city\", \"21 feb 1990\"],[\"replay\", \"cambridge united\", \"5 - 1\", \"bristol city\", \"27 feb 1990\"],[\"3\", \"liverpool\", \"3 - 0\", \"southampton\", \"17 feb 1990\"],[\"4\", \"west bromwich albion\", \"0 - 2\", \"aston villa\", \"17 feb 1990\"],[\"5\", \"sheffield united\", \"2 - 2\", \"barnsley\", \"18 feb 1990\"],[\"replay\", \"barnsley\", \"0 - 0\", \"sheffield united\", \"21 feb 1990\"],[\"replay\", \"barnsley\", \"0 - 1\", \"sheffield united\", \"5 mar 1990\"],[\"6\", \"newcastle united\", \"2 - 3\", \"manchester united\", \"18 feb 1990\"],[\"7\", \"oldham athletic\", \"2 - 2\", \"everton\", \"17 feb 1990\"],[\"replay\", \"everton\", \"1 - 1\", \"oldham athletic\", \"21 feb 1990\"],[\"replay\", \"oldham athletic\", \"2 - 1\", \"everton\", \"10 mar 1990\"],[\"8\", \"crystal palace\", \"1 - 0\", \"rochdale\", \"17 feb 1990\"]]\nQuestion = Is it true that west bromwich albion played a match on 17 feb 1990?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for home_team, date in zip(home_teams, dates):\n        if home_team.lower() == \"west bromwich albion\" and date.lower() == \"17 feb 1990\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "b4e5f3a6-0f56-4755-9ba7-78a193c04c75", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = media in fargo - moorhead\ntable_data = [[\"frequency\", \"call sign\", \"name\", \"format\", \"owner\"],[\"88.7 fm\", \"kfbn\", \"heaven 88.7\", \"christian\", \"fargo baptist church\"],[\"90.3 fm\", \"kccd\", \"minnesota public radio / npr\", \"news / talk\", \"minnesota public radio\"],[\"91.1 fm\", \"kccm\", \"minnesota public radio / npr\", \"classical\", \"minnesota public radio\"],[\"91.9 fm\", \"kdsu\", \"prairie public / npr\", \"adult album alternative\", \"north dakota state university\"],[\"92.7 fm\", \"kzdr\", \"92.7 the bone\", \"active rock\", \"mediactive\"],[\"93.7 fm\", \"wday - fm\", \"y94\", \"top 40 (chr)\", \"radio fargo - moorhead\"],[\"95.1 fm\", \"kbvb\", \"bob 95 fm\", \"country\", \"radio fargo - moorhead\"],[\"95.9 fm\", \"kxbq - lp\", \"dive 95.9\", \"alternative\", \"women 's care clinic\"],[\"96.3 fm\", \"knds - lp\", \"thunderradio radio free fargo\", \"college\", \"north dakota state university\"],[\"97.9 fm\", \"kfnw - fm\", \"life 97.9\", \"contemporary christian music\", \"northwestern college\"],[\"98.7 fm\", \"klta\", \"big 98.7\", \"adult chr\", \"triad broadcasting\"],[\"99.3 fm\", \"k257ep\", \"k - love\", \"contemporary christian music ( kklq translator )\", \"educational media foundation\"],[\"99.9 fm\", \"kvox - fm\", \"froggy 99.9\", \"country\", \"triad broadcasting\"],[\"100.7 fm\", \"kklq\", \"k - love\", \"contemporary christian music\", \"educational media foundation\"],[\"101.9 fm\", \"krwk\", \"101.9 talk fm\", \"talk\", \"radio fargo - moorhead\"],[\"103.3 fm\", \"kzcr\", \"z 103.3\", \"rock / aaa\", \"jerry papenfuss\"],[\"103.9 fm\", \"kvmi\", \"103.9 the truck\", \"country\", \"vision media incorporated\"],[\"104.1 fm\", \"kbot\", \"104.1 the wave\", \"adult contemporary\", \"leighton broadcasting\"],[\"104.7 fm\", \"kmjo\", \"104.7 popster fm\", \"adult hits\", \"radio fargo - moorhead\"],[\"105.1 fm\", \"kqwb\", \"q 105.1\", \"active rock\", \"triad broadcasting\"],[\"106.1 fm\", \"kqlx - fm\", \"thunder 106.1\", \"classic country\", \"great plains integrated marketing\"],[\"106.5 fm\", \"krjb\", \"krjb 106.5\", \"country\", \"r&j broadcasting\"],[\"106.9 fm\", \"kegk\", \"eagle 106.9\", \"classic hits\", \"great plains integrated marketing\"],[\"107.9 fm\", \"kpfx\", \"107.9 the fox\", \"classic rock\", \"triad broadcasting\"]]\nQuestion = Is it true that the call sign for the contemporary christian music station is kqlx - fm?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    call_signs = get_column_by_name(table_data, \"call sign\")\n    formats = get_column_by_name(table_data, \"format\")\n    for call_sign, format in zip(call_signs, formats):\n        if \"contemporary christian music\" in format.lower():\n            answer = equal_to(call_sign, \"kqlx - fm\")\n            break \n    return answer\n\n### END"}
{"id": "d9061710-1c00-4aed-a466-94c3c4126a61", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1926 - 27 new york rangers season\ntable_data = [[\"game\", \"march\", \"opponent\", \"score\", \"record\"],[\"36\", \"1\", \"chicago black hawks\", \"3 - 0\", \"20 - 12 - 4\"],[\"37\", \"5\", \"montreal maroons\", \"0 - 0 ot\", \"20 - 12 - 5\"],[\"38\", \"13\", \"detroit cougars\", \"2 - 2 ot\", \"20 - 12 - 6\"],[\"39\", \"15\", \"pittsburgh pirates\", \"5 - 0\", \"21 - 12 - 6\"],[\"40\", \"17\", \"detroit cougars\", \"2 - 0\", \"22 - 12 - 6\"],[\"41\", \"20\", \"new york americans\", \"2 - 1\", \"23 - 12 - 6\"],[\"42\", \"22\", \"pittsburgh pirates\", \"4 - 1\", \"24 - 12 - 6\"],[\"43\", \"25\", \"chicago black hawks\", \"4 - 0\", \"25 - 12 - 6\"],[\"44\", \"26\", \"boston bruins\", \"4 - 3 ot\", \"25 - 13 - 6\"]]\nQuestion = Is it true that after the game on march 17 , the team 's record was 22 - 12 - 6?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"march\")\n    records = get_column_by_name(table_data, \"record\")\n    for date, record in zip(dates, records):\n        if date == \"17\":\n            answer = equal_to(record, \"22 - 12 - 6\")\n            break \n    return answer\n\n### END"}
{"id": "f544da7c-9d07-4474-95fe-ba786f35e0c5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of rna structure prediction software\ntable_data = [[\"name\", \"species specific\", \"intra - molecular structure\", \"comparative\", \"link\"],[\"diana - microt\", \"human , mouse\", \"no\", \"yes\", \"webserver\"],[\"microtar\", \"no\", \"no\", \"no\", \"sourcecode\"],[\"mitarget\", \"no\", \"no\", \"no\", \"webserver\"],[\"mirror\", \"no\", \"no\", \"no\", \"webserver\"],[\"pictar\", \"8 vertebrates\", \"no\", \"yes\", \"predictions\"],[\"pita\", \"no\", \"yes\", \"no\", \"executable , webserver , predictions\"],[\"rna22\", \"no\", \"no\", \"no\", \"predictions custom\"],[\"rnahybrid\", \"no\", \"no\", \"no\", \"sourcecode , webserver\"],[\"sylamer\", \"no\", \"no\", \"no\", \"sourcecode webserver\"],[\"taref\", \"yes\", \"no\", \"no\", \"server / sourcecode\"],[\"p - taref\", \"yes\", \"no\", \"no\", \"server / standalone\"],[\"targetscan\", \"vertebrates , flies , nematodes\", \"evaluated indirectly\", \"yes\", \"sourcecode , webserver\"]]\nQuestion = Is it true that mitarget and pictar have no comparative , no intra - molecular structure , with their only link being webserver?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    intra_molecular_structures = get_column_by_name(table_data, \"intra - molecular structure\")\n    comparatives = get_column_by_name(table_data, \"comparative\")\n    links = get_column_by_name(table_data, \"link\")\n    for name, intra_molecular_structure, comparative, link in zip(names, intra_molecular_structures, comparatives, links):\n        if name.lower() in [\"mitarget\", \"pictar\"]:\n            if not (equal_to(intra_molecular_structure, \"no\") and equal_to(comparative, \"no\") and equal_to(link, \"webserver\")):\n                return False\n    return True\n\n### END"}
{"id": "00c9c4b8-c62d-4c13-a64e-c74dd1a022ee", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of radio stations in tamaulipas\ntable_data = [[\"frequency\", \"callsign\", \"brand\", \"city of license\", \"type\"],[\"580\", \"xehp\", \"la mas prendida\", \"ciudad victoria\", \"norteño\"],[\"640\", \"xetam\", \"la poderosa\", \"santa elena\", \"norteño\"],[\"970\", \"xebj - am\", \"radio 970\", \"ciudad victoria\", \"contemporary\"],[\"1340\", \"xerpv - am\", \"la cotorra\", \"ciudad victoria\", \"norteño\"],[\"1380\", \"xegw\", \"planeta w 1380\", \"ciudad victoria\", \"christian pop\"],[\"1480\", \"xevic\", \"radio tamaulipas\", \"ciudad victoria\", \"state government\"]]\nQuestion = Is it true that ciudad victoria is the city of license for frequency 1380?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    cities_of_license = get_column_by_name(table_data, \"city of license\")\n    for frequency, city_of_license in zip(frequencies, cities_of_license):\n        if frequency == \"1380\":\n            answer = equal_to(city_of_license.lower(), \"ciudad victoria\")\n            break \n    return answer\n\n### END"}
{"id": "950f3411-51aa-40dc-bd88-c0344cfd440a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1966 american football league draft\ntable_data = [[\"pick\", \"afl team\", \"player\", \"position\", \"college\"],[\"1\", \"miami dolphins\", \"jim grabowski\", \"running back\", \"illinois\"],[\"2\", \"miami dolphins\", \"rick norton\", \"quarterback\", \"kentucky\"],[\"3\", \"boston patriots\", \"karl singer\", \"offensive tackle\", \"purdue\"],[\"4\", \"denver broncos\", \"jerry shay\", \"offensive tackle\", \"purdue\"],[\"5\", \"houston oilers\", \"tommy nobis\", \"linebacker\", \"texas\"],[\"6\", \"kansas city chiefs\", \"aaron brown\", \"end\", \"minnesota\"],[\"7\", \"san diego chargers\", \"don davis\", \"offensive tackle\", \"cal state - la\"],[\"8\", \"buffalo bills\", \"mike dennis\", \"running back\", \"ole 'miss\"],[\"9\", \"new york jets\", \"bill yearby\", \"offensive tackle\", \"michigan\"],[\"10\", \"oakland raiders\", \"rodger bird\", \"running back\", \"kentucky\"]]\nQuestion = Is it true that karl singer plays in the position of offensive tackle for purdue college?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    positions = get_column_by_name(table_data, \"position\")\n    colleges = get_column_by_name(table_data, \"college\")\n    for player, position, college in zip(players, positions, colleges):\n        if player.lower() == \"karl singer\" and position.lower() == \"offensive tackle\" and college.lower() == \"purdue\":\n            return True\n    return False\n\n### END"}
{"id": "c0bd7a15-efa9-49ce-ad3c-b95c8d8c2756", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mike hailwood\ntable_data = [[\"year\", \"entrant\", \"chassis\", \"engine\", \"pts\"],[\"1963\", \"reg parnell racing\", \"lotus 24\", \"climax\", \"0\"],[\"1963\", \"reg parnell racing\", \"lola mk4\", \"climax\", \"0\"],[\"1964\", \"reg parnell racing\", \"lotus 25\", \"brm\", \"1\"],[\"1965\", \"reg parnell racing\", \"lotus 25\", \"brm\", \"0\"],[\"1971\", \"team surtees\", \"surtees ts9\", \"ford\", \"3\"],[\"1972\", \"brooke bond oxo team surtees\", \"surtees ts9b\", \"ford\", \"13\"],[\"1973\", \"brooke bond oxo team surtees\", \"surtees ts14a\", \"ford\", \"0\"],[\"1974\", \"yardley team mclaren\", \"mclaren m23\", \"ford\", \"12\"]]\nQuestion = Is it true that there were 13 points in 1972?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    points = get_column_by_name(table_data, \"pts\")\n    for year, point in zip(years, points):\n        if year == \"1972\":\n            answer = equal_to(point, \"13\")\n            break \n    return answer\n\n### END"}
{"id": "2715b211-c894-4054-b790-10f1b78c5816", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = colin morgan\ntable_data = [[\"year\", \"award\", \"category\", \"role\", \"result\"],[\"2008\", \"variety club showbiz awards\", \"outstanding newcomer\", \"merlin in merlin\", \"won\"],[\"2009\", \"monte carlo tv festival awards\", \"outstanding actor (drama)\", \"merlin in merlin\", \"nominated\"],[\"2010\", \"monte carlo tv festival awards\", \"outstanding actor (drama)\", \"merlin in merlin\", \"nominated\"],[\"2011\", \"monte carlo tv festival awards\", \"outstanding actor (drama)\", \"merlin in merlin\", \"nominated\"],[\"2012\", \"virgin media tv awards\", \"best actor\", \"merlin in merlin\", \"won\"],[\"2013\", \"national television award\", \"drama performance : male\", \"merlin in merlin\", \"won\"]]\nQuestion = Is it true that monte carlo tv festival awards nominated merlin in merlin for outstanding actor (drama) in the year 2011?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    awards = get_column_by_name(table_data, \"award\")\n    categories = get_column_by_name(table_data, \"category\")\n    roles = get_column_by_name(table_data, \"role\")\n    results = get_column_by_name(table_data, \"result\")\n    for year, award, category, role, result in zip(years, awards, categories, roles, results):\n        if equal_to(year, \"2011\") and equal_to(award.lower(), \"monte carlo tv festival awards\") and equal_to(category.lower(), \"outstanding actor (drama)\") and equal_to(role.lower(), \"merlin in merlin\") and equal_to(result.lower(), \"nominated\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "00b01f8d-7d52-4e66-a6a3-09d97af42a8d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1926 grand prix season\ntable_data = [[\"name\", \"circuit\", \"date\", \"winning drivers\", \"winning constructor\", \"report\"],[\"indianapolis 500\", \"indianapolis\", \"31 may\", \"frank lockhart\", \"miller\", \"report\"],[\"french grand prix\", \"miramas\", \"27 june\", \"jules goux\", \"bugatti\", \"report\"],[\"san sebastián grand prix / european grand prix\", \"lasarte\", \"18 july\", \"jules goux\", \"bugatti\", \"report\"],[\"british grand prix\", \"brooklands\", \"7 august\", \"robert sénéchal louis wagner\", \"delage\", \"report\"],[\"italian grand prix\", \"monza\", \"5 september\", \"louis charavel\", \"bugatti\", \"report\"]]\nQuestion = Is it true that on one occasion frank lockhart was a winning driver at the indianoplis 500?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_winning_drivers = get_column_by_name(table_data, \"winning drivers\")\n    column_name = get_column_by_name(table_data, \"name\")\n    answer = False\n    for name, winning_driver in zip(column_name, column_winning_drivers):\n        if \"indianapolis 500\" in name.lower() and \"frank lockhart\" in winning_driver.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "b10dca6c-4b4f-46f3-8b30-cc6a27baeba3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = hey venus!\ntable_data = [[\"region\", \"date\", \"label\", \"format\", \"catalogue\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"vinyl record\", \"rtradlp 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"compact disc\", \"rtradcd 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"download\", \"-\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"vinyl record\", \"rt - 346 - 1\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"download\", \"rt - 346 - 5\"],[\"united states\", \"22 january 2008\", \"rough trade america\", \"double compact disc\", \"rtradcd 423\"],[\"japan\", \"12 september 2007\", \"rough trade japan\", \"compact disc\", \"xqcy - 1003\"]]\nQuestion = Is it true that the rough trade america label has a downloadable format in the united states?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    regions = get_column_by_name(table_data, \"region\")\n    labels = get_column_by_name(table_data, \"label\")\n    formats = get_column_by_name(table_data, \"format\")\n    answer = False\n    for region, label, format in zip(regions, labels, formats):\n        if region.lower() == \"united states\" and label.lower() == \"rough trade america\" and format.lower() == \"download\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "16780252-68b0-4b2b-b6a9-3293b3883dda", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the howie carr show\ntable_data = [[\"calls\",\"frequency\",\"branding\",\"format\",\"timeslot\",\"group owner\"],[\"wgan\",\"560 khz\",\"news radio 560 wgan\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"whyn\",\"560 khz\",\"news / talk 560 whyn\",\"news / talk\",\"live 3p - 7p\",\"clear channel communications\"],[\"wvmt\",\"620 khz\",\"news / talk 620 wvmt\",\"news / talk\",\"live 3p - 7p\",\"sison broadcasting\"],[\"wrko\",\"680 khz\",\"am 680 wrko\",\"news / talk\",\"live 3p - 7p\",\"entercom\"],[\"wcrn\",\"830 khz\",\"wcrn 830 true talk\",\"news / talk\",\"live 3p - 7p\",\"carter broadcasting\"],[\"wkbk\",\"1290 khz\",\"1290 wkbk w281au 104.1\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"wegp\",\"1390 khz\",\"wegp 1390 am - the talk of the county\",\"news / talk\",\"live 3p - 6p\",\"decelles / media , inc\"],[\"wxtk\",\"95.1 mhz\",\"news radio 95 wxtk\",\"news / talk\",\"live 3p - 7p\",\"qantam of cape cod , llc\"],[\"wntk - fm\",\"99.7 mhz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wuvr\",\"1490 khz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wvom - fm / wvqm\",\"103.9 / 101.3 mhz\",\"the voice of maine\",\"news / talk\",\"live 3p - 7p\",\"blueberry broadcasting\"]]\nQuestion = Is it true that live calls honored on whyn are 3p - 7p?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    calls = get_column_by_name(table_data, \"calls\")\n    timeslots = get_column_by_name(table_data, \"timeslot\")\n    for call, timeslot in zip(calls, timeslots):\n        if call.lower() == \"whyn\":\n            answer = equal_to(timeslot, \"live 3p - 7p\")\n            break \n    return answer\n\n### END"}
{"id": "fbb3a15e-48be-4a04-bd69-3d85ce33c078", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1993 tampa bay buccaneers season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"kickoff\", \"game site\", \"attendance\", \"record\"],[\"1\", \"september 5 , 1993\", \"kansas city chiefs\", \"l 27 - 3\", \"1:00\", \"tampa stadium\", \"63378\", \"0 - 1\"],[\"2\", \"september 12 , 1993\", \"new york giants\", \"l 23 - 7\", \"1:00\", \"giants stadium\", \"75891\", \"0 - 2\"],[\"4\", \"september 26 , 1993\", \"chicago bears\", \"l 47 - 17\", \"1:00\", \"soldier field\", \"58329\", \"0 - 3\"],[\"5\", \"october 3 , 1993\", \"detroit lions\", \"w 27 - 10\", \"1:00\", \"tampa stadium\", \"40794\", \"1 - 3\"],[\"6\", \"october 10 , 1993\", \"minnesota vikings\", \"l 15 - 0\", \"1:00\", \"hubert h humphrey metrodome\", \"54215\", \"1 - 4\"],[\"8\", \"october 24 , 1993\", \"green bay packers\", \"l 37 - 14\", \"1:00\", \"tampa stadium\", \"47354\", \"1 - 5\"],[\"9\", \"october 31 , 1993\", \"atlanta falcons\", \"w 31 - 24\", \"1:00\", \"georgia dome\", \"50647\", \"2 - 5\"],[\"10\", \"november 7 , 1993\", \"detroit lions\", \"l 23 - 0\", \"1:00\", \"pontiac silverdome\", \"65295\", \"2 - 6\"],[\"11\", \"november 14 , 1993\", \"san francisco 49ers\", \"l 45 - 21\", \"1:00\", \"tampa stadium\", \"43835\", \"2 - 7\"],[\"12\", \"november 21 , 1993\", \"minnesota vikings\", \"w 23 - 10\", \"8:00\", \"tampa stadium\", \"40848\", \"3 - 7\"],[\"13\", \"november 28 , 1993\", \"green bay packers\", \"l 13 - 10\", \"1:00\", \"lambeau field\", \"56995\", \"3 - 8\"],[\"14\", \"december 5 , 1993\", \"washington redskins\", \"l 23 - 17\", \"1:00\", \"tampa stadium\", \"49035\", \"3 - 9\"],[\"15\", \"december 12 , 1993\", \"chicago bears\", \"w 13 - 10\", \"1:00\", \"tampa stadium\", \"56667\", \"4 - 9\"],[\"16\", \"december 19 , 1993\", \"los angeles raiders\", \"l 27 - 20\", \"4:00\", \"los angeles memorial coliseum\", \"40532\", \"4 - 10\"],[\"17\", \"december 26 , 1993\", \"denver broncos\", \"w 17 - 10\", \"4:00\", \"mile high stadium\", \"73434\", \"5 - 10\"],[\"18\", \"january 2 , 1994\", \"san diego chargers\", \"l 32 - 17\", \"4:00\", \"tampa stadium\", \"35587\", \"5 - 11\"]]\nQuestion = Is it true that the sixteenth week led to a record of 4 - 8?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    records = get_column_by_name(table_data, \"record\")\n    for week, record in zip(weeks, records):\n        if week == \"16\":\n            answer = equal_to(record, \"4 - 8\")\n            break \n    return answer\n\n### END"}
{"id": "d17b28b3-cf44-402c-826e-5ae1d0dd3532", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"\", \"date\", \"vs\", \"opponent\", \"score\", \"attendance\", \"record\"],[\"1\", \"january 5 , 1991\", \"at\", \"detroit turbos\", \"8 - 18\", \"6847\", \"loss\"],[\"2\", \"january 11 , 1991\", \"vs\", \"new england blazers\", \"11 - 10\", \"14789\", \"win\"],[\"3\", \"january 19 , 1991\", \"at\", \"new york saints\", \"13 - 19\", \"9081\", \"loss\"],[\"4\", \"january 26 , 1991\", \"vs\", \"new york saints\", \"13 - 8\", \"16282\", \"win\"],[\"5\", \"february 10 , 1991\", \"vs\", \"detroit turbos\", \"12 - 14\", \"16642\", \"loss\"],[\"6\", \"february 22 , 1991\", \"at\", \"new england blazers\", \"11 - 13\", \"7095\", \"loss\"],[\"7\", \"february 28 , 1991\", \"vs\", \"pittsburgh bulls\", \"11 - 9\", \"13712\", \"win\"],[\"8\", \"march 9 , 1991\", \"at\", \"pittsburgh bulls\", \"15 - 7\", \"8589\", \"win\"],[\"9\", \"march 17 , 1991\", \"vs\", \"baltimore thunder\", \"14 - 17\", \"16289\", \"loss\"]]\nQuestion = Is it true that on february 28 , 1991 the opponent was the pittsburgh bulls?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    for date, opponent in zip(dates, opponents):\n        if equal_to(date, \"february 28 , 1991\") and equal_to(opponent, \"pittsburgh bulls\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "2d5e0fcb-0d06-4622-8df1-832083bcfd7a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1981 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"footscray\", \"10.14 (74)\", \"hawthorn\", \"11.18 (84)\", \"western oval\", \"13789\", \"23 may 1981\"],[\"fitzroy\", \"13.15 (93)\", \"geelong\", \"16.18 (114)\", \"junction oval\", \"15604\", \"23 may 1981\"],[\"carlton\", \"25.22 (172)\", \"south melbourne\", \"11.7 (73)\", \"princes park\", \"22445\", \"23 may 1981\"],[\"melbourne\", \"10.10 (70)\", \"essendon\", \"14.20 (104)\", \"mcg\", \"31769\", \"23 may 1981\"],[\"north melbourne\", \"12.26 (98)\", \"collingwood\", \"16.15 (111)\", \"arden street oval\", \"24625\", \"23 may 1981\"],[\"richmond\", \"20.16 (136)\", \"st kilda\", \"15.15 (105)\", \"vfl park\", \"40240\", \"23 may 1981\"]]\nQuestion = Is it true that richmond 's home game drew 40240 spectators?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    for home_team, crowd in zip(home_teams, crowds):\n        if home_team.lower() == \"richmond\":\n            answer = equal_to(crowd, \"40240\")\n            break \n    return answer\n\n### END"}
{"id": "ea4eb5ec-f5a5-4017-a6c5-3c4055a05aac", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = leonardo de souza\ntable_data = [[\"season\", \"series\", \"team name\", \"races\", \"poles\", \"wins\", \"podiums\", \"f / laps\", \"points\", \"final placing\"],[\"2005\", \"formula renault brasil\", \"kemba racing\", \"14\", \"0\", \"0\", \"0\", \"0\", \"18\", \"21st\"],[\"2006\", \"formula renault brasil\", \"eng makers\", \"10\", \"0\", \"0\", \"0\", \"0\", \"8\", \"18th\"],[\"2008\", \"formula three sudamericana\", \"kemba racing\", \"14\", \"0\", \"0\", \"0\", \"0\", \"24\", \"8th\"],[\"2009\", \"formula three sudamericana\", \"kemba racing\", \"14\", \"0\", \"1\", \"2\", \"0\", \"33\", \"9th\"],[\"2010\", \"formula three sudamericana\", \"kemba racing\", \"20\", \"0\", \"1\", \"4\", \"1\", \"171\", \"5th\"]]\nQuestion = Is it true that the win is zero for 4 podiums?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    wins = get_column_by_name(table_data, \"wins\")\n    podiums = get_column_by_name(table_data, \"podiums\")\n    for win, podium in zip(wins, podiums):\n        if podium == \"4\":\n            answer = equal_to(win, \"0\")\n            break \n    return answer\n\n### END"}
{"id": "60ed43b0-395d-4783-a213-28a7df96d5bc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date (yyyy - mm - dd)\", \"time ( utc )\", \"latitude\", \"longitude\", \"depth\", \"magnitude\"],[\"2010 - 04 - 13\", \"21:40:00\", \"33.183 degree n\", \"96.623 degree e\", \"-\", \"5.0 (m w )\"],[\"2010 - 04 - 13\", \"23:49:39\", \"33.224 degree n\", \"96.666 degree e\", \"-\", \"6.9 (m w )\"],[\"2010 - 04 - 14\", \"00:01:17\", \"32.875 degree n\", \"96.999 degree e\", \"-\", \"5.3 (m w )\"],[\"2010 - 04 - 14\", \"00:12:25\", \"33.159 degree n\", \"96.580 degree e\", \"-\", \"5.2 (m w )\"],[\"2010 - 04 - 14\", \"01:25:15\", \"33.179 degree n\", \"96.448 degree e\", \"-\", \"5.8 (m w )\"],[\"2010 - 04 - 14\", \"03:15:46\", \"33.151 degree n\", \"96.701 degree e\", \"-\", \"4.7 (m w )\"],[\"2010 - 04 - 14\", \"12:19:36\", \"33.077 degree n\", \"96.846 degree e\", \"-\", \"4.1 (m w )\"]]\nQuestion = Is it true that the depth is not recorded on this chart?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    depths = get_column_by_name(table_data, \"depth\")\n    answer = all(depth == \"-\" for depth in depths)\n    return answer\n\n### END"}
{"id": "e5784822-7894-4fe5-82ee-e46376484780", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\", \"10:30\"],[\"heartland\", \"heartland\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"cbc news : sunday night\", \"cbc news : sunday night\"],[\"law and order : criminal intent\", \"law and order : criminal intent\", \"cold case\", \"cold case\", \"desperate housewives\", \"desperate housewives\", \"dirty sexy money\", \"dirty sexy money\"],[\"the simpsons\", \"da kink in my hair\", \"the simpsons\", \"king of the hill\", \"family guy\", \"american dad!\", \"brothers & sisters\", \"brothers & sisters\"],[\"america 's funniest home videos\", \"america 's funniest home videos\", \"kyle xy\", \"kyle xy\", \"america 's next top model\", \"america 's next top model\", \"stargate sg - 1\", \"stargate sg - 1\"],[\"everybody hates chris\", \"speakers' corner\", \"behind the movies\", \"bravo!fact presents\", \"great movies\", \"great movies\", \"great movies\", \"great movies\"],[\"viva laughlin\", \"viva laughlin\", \"extreme makeover : home edition\", \"extreme makeover : home edition\", \"e! countdowns\", \"e! countdowns\", \"e! live encore\", \"e! live encore\"],[\"découverte\", \"et dieu créa laflaque\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"le téléjournal\", \"le téléjournal\"],[\"le banquier / dieu merci!\", \"le banquier / dieu merci!\", \"occupation double\", \"occupation double\", \"occupation double\", \"occupation double\", \"le tva week - end\", \"le tva week - end\"],[\"loft story\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal weekend\"]]\nQuestion = Is it true that the earliest time for extreme makeover : home edition is the same time as the earliest time for family guy?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef get_earliest_time_for_show(table, show):\n    for i in range(len(table[0])):\n        column = get_column_by_index(table, i)\n        if show in column:\n            return table[0][i]\n    return None\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    show1 = \"extreme makeover : home edition\"\n    show2 = \"family guy\"\n    earliest_time_show1 = get_earliest_time_for_show(table_data, show1)\n    earliest_time_show2 = get_earliest_time_for_show(table_data, show2)\n    answer = equal_to(earliest_time_show1, earliest_time_show2)\n    return answer\n\n### END"}
{"id": "0d036e92-49cc-4bdf-935b-670fea88fcc8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 3. liga\ntable_data = [[\"team\",\"outgoing manager\",\"manner of departure\",\"date of vacancy\",\"replaced by\",\"date of appointment\",\"position in table\"],[\"vfl osnabrück\",\"claus - dieter wollitz\",\"fc energie cottbus purchased rights\",\"30 june 2009\",\"karsten baumann\",\"1 july 2009\",\"pre - season\"],[\"fc carl zeiss jena\",\"marc fascher\",\"end of contract\",\"30 june 2009\",\"rené van eck\",\"1 july 2009\",\"pre - season\"],[\"fc rot - weiß erfurt\",\"henri fuchs\",\"end of tenure as caretaker\",\"30 june 2009\",\"rainer hörgl\",\"1 july 2009\",\"pre - season\"],[\"vfb stuttgart ii\",\"rainer adrion\",\"new coach of germany u - 21\",\"30 june 2009\",\"reiner geyer\",\"1 july 2009\",\"pre - season\"],[\"sv wacker burghausen\",\"ralf santelli\",\"end of contract\",\"30 june 2009\",\"jürgen press\",\"1 july 2009\",\"pre - season\"]]\nQuestion = Is it true that 1 july 2009 was the date of the appointment for the replaced manager , reiner geyer due to end of contract?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    replaced_by = get_column_by_name(table_data, \"replaced by\")\n    date_of_appointment = get_column_by_name(table_data, \"date of appointment\")\n    manner_of_departure = get_column_by_name(table_data, \"manner of departure\")\n    for replaced, date, manner in zip(replaced_by, date_of_appointment, manner_of_departure):\n        if replaced.lower() == \"reiner geyer\" and date == \"1 july 2009\":\n            answer = equal_to(manner, \"end of contract\")\n            break \n    return answer\n\n### END"}
{"id": "62e1bff1-5fa5-48b3-8a21-ca8645f49ce7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = algeria at the 2008 summer olympics\ntable_data = [[\"athlete\", \"event\", \"round of 32\", \"round of 16\", \"quarterfinals\", \"semifinals\"],[\"abdelhalim ouradi\", \"bantamweight\", \"nevin ( irl ) l 4 - 9\", \"did not advance\", \"did not advance\", \"did not advance\"],[\"abdelkader chadi\", \"featherweight\", \"bye\", \"adi ( tha ) w 7 - 6\", \"kılıç ( tur ) l 6 - 13\", \"did not advance\"],[\"hamza kramou\", \"lightweight\", \"ugás ( cub ) l 3 - 21\", \"did not advance\", \"did not advance\", \"did not advance\"],[\"nabil kassel\", \"middleweight\", \"bye\", \"sutherland ( irl ) l 14 - 21\", \"did not advance\", \"did not advance\"],[\"abdelhafid benchebla\", \"light heavyweight\", \"kumar ( ind ) w 23 - 3\", \"yasser ( egy ) w 13 - 6\", \"zhang xp ( chn ) l 7 - 12\", \"did not advance\"],[\"abdelaziz touilbini\", \"heavyweight\", \"n / a\", \"wilder ( usa ) l 4 - 10\", \"did not advance\", \"did not advance\"]]\nQuestion = Is it true that abdelhafid benchebla faced kılıç ( tur ) l 6 - 13 in the quarterfinals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    athletes = get_column_by_name(table_data, \"athlete\")\n    quarterfinals = get_column_by_name(table_data, \"quarterfinals\")\n    for athlete, quarterfinal in zip(athletes, quarterfinals):\n        if athlete.lower() == \"abdelhafid benchebla\":\n            answer = equal_to(quarterfinal, \"kılıç ( tur ) l 6 - 13\")\n            break \n    return answer\n\n### END"}
{"id": "82cebc17-acbf-4b09-9aef-a9d3b99e8a80", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = usa today all - usa high school baseball team\ntable_data = [[\"player\",\"position\",\"school\",\"hometown\",\"mlb draft\"],[\"delmon young\",\"outfielder\",\"camarillo high school\",\"camarillo, ca\",\"1st round - 1st pick of 2003 draft (devil rays)\"],[\"chris lubanski\",\"outfielder\",\"kennedy - kenrick catholic high school\",\"norristown, pa\",\"1st round - 5th pick of 2003 draft (royals)\"],[\"lastings milledge\",\"outfielder\",\"lakewood ranch high school\",\"bradenton, fl\",\"1st round - 12th pick of 2003 draft (mets)\"],[\"brandon wood\",\"infielder\",\"horizon high school\",\"scottsdale, az\",\"1st round - 23rd pick of 2003 draft (angels)\"],[\"john danks\",\"pitcher\",\"round rock high school\",\"round rock, tx\",\"1st round - 9th pick of 2003 draft (rangers)\"],[\"jonathan fulton\",\"infielder\",\"george washington high school\",\"danville, va\",\"3rd round - 83rd pick of 2003 draft (marlins)\"],[\"ian stewart\",\"infielder\",\"la quinta high school\",\"westminster, ca\",\"1st round - 10th pick of 2003 draft (rockies)\"],[\"jeff allison\",\"pitcher\",\"veterans memorial high school\",\"peabody, ma\",\"1st round - 16th pick of 2003 draft (marlins)\"],[\"daric barton\",\"catcher\",\"marina high school\",\"huntington beach, ca\",\"1st round - 28th pick of 2003 draft (cardinals)\"],[\"eric duncan\",\"infielder\",\"seton hall preparatory school\",\"west orange, nj\",\"1st round - 27th pick of 2003 draft (yankees)\"]]\nQuestion = Is it true that the mlb draft status of eric duncan was 1st round - 27th pick of 2003 draft (yankees)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    mlb_drafts = get_column_by_name(table_data, \"mlb draft\")\n    for player, mlb_draft in zip(players, mlb_drafts):\n        if player.lower() == \"eric duncan\":\n            answer = equal_to(mlb_draft, \"1st round - 27th pick of 2003 draft (yankees)\")\n            break \n    return answer\n\n### END"}
{"id": "02fdd60e-19b1-462e-89f4-3c2da4b20f3f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = duke of rohan\ntable_data = [[\"name\",\"birth\",\"marriage\",\"became duke\",\"ceased to be duke\",\"death\",\"spouse\"],[\"louis de rohan - chabot\",\"3 november 1652\",\"18 july 1678\",\"27 february 1655 father 's death\",\"17 august 1727\",\"17 august 1727\",\"marie élisabeth du bec - crespin de grimaldi\"],[\"louis bretagne alain de rohan - chabot\",\"26 september 1679\",\"29 may 1708\",\"17 august 1727 father 's death\",\"10 august 1738\",\"10 august 1738\",\"françoise de roquelaure\"],[\"louis marie de rohan - chabot\",\"17 january 1710\",\"19 december 1735\",\"10 august 1738 father 's death\",\"28 november 1791\",\"28 november 1791\",\"charlotte rosalie de chtillon\"],[\"louis antoine de rohan - chabot\",\"20 april 1733\",\"12 april 1757\",\"28 november 1791 uncles death\",\"29 november 1807\",\"29 november 1807\",\"élisabeth louise de la rochefoucauld\"],[\"alexandre de rohan - chabot\",\"3 december 1761\",\"29 may 1785\",\"29 november 1807 father 's death\",\"8 february 1816\",\"8 february 1816\",\"anne louise élisabeth de montmorency\"],[\"louis françois de rohan - chabot\",\"29 february 1788\",\"2 may 1808\",\"8 february 1816 father 's death\",\"8 february 1833\",\"8 february 1833\",\"marie georgine armandine de sérent\"],[\"fernand de rohan - chabot\",\"14 october 1789\",\"19 may 1817\",\"8 february 1833 brothers death\",\"10 september 1869\",\"10 september 1869\",\"josephine françoise de gontaut - biron\"],[\"charles de rohan - chabot\",\"12 december 1819\",\"29 june 1843\",\"10 september 1869 father 's death\",\"6 august 1893\",\"6 august 1893\",\"octavie rouillé de boissy\"],[\"alain de rohan - chabot\",\"1 december 1844\",\"26 june 1872\",\"6 august 1893 father 's death\",\"6 january 1914\",\"6 january 1914\",\"herminie de la brousse de verteillac\"],[\"josselin de rohan - chabot\",\"4 april 1879\",\"11 june 1906\",\"6 january 1914 father 's death\",\"13 july 1916\",\"13 july 1916\",\"marguerite marie de rohan - chabot\"],[\"alain louis auguste de rohan - chabot\",\"10 may 1913\",\"5 may 1937\",\"13 july 1916 father 's death\",\"17 may 1966\",\"17 may 1966\",\"helene claire marie de liencourt\"],[\"josselin de rohan - chabot\",\"5 june 1938\",\"17 november 1973\",\"17 may 1966 father 's death\",\"n / a\",\"n / a\",\"antoinette jeanne yvonne boegner\"],[\"name\",\"birth\",\"marriage\",\"became duke\",\"ceased to be duke\",\"death\",\"spouse\"]]\nQuestion = Is it true that antoinette jeanne yvonne boegner got married on may 23rd?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_marriage = get_column_by_name(table_data, \"marriage\")\n    column_spouse = get_column_by_name(table_data, \"spouse\")\n    answer = False\n    for marriage, spouse in zip(column_marriage, column_spouse):\n        if \"antoinette jeanne yvonne boegner\" in spouse.lower():\n            answer = \"may 23\" in marriage.lower()\n            break\n    return answer\n\n### END"}
{"id": "376f4fbf-a5db-441f-9f87-670e64aaf70f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = big day out lineups by year\ntable_data = [[\"sydney\", \"melbourne\", \"perth\", \"adelaide\", \"gold coast\", \"auckland\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"cancelled\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\"],[\"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"no\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"yes\"],[\"yes\", \"yes\", \"no\", \"no\", \"yes\", \"no\"],[\"no\", \"yes\", \"no\", \"no\", \"no\", \"no\"],[\"no\", \"no\", \"no\", \"no\", \"yes\", \"no\"]]\nQuestion = Is it true that whenever sydney , perth and gold coast have a no , melbourne has a yes?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    sydney = get_column_by_name(table_data, \"sydney\")\n    perth = get_column_by_name(table_data, \"perth\")\n    gold_coast = get_column_by_name(table_data, \"gold coast\")\n    melbourne = get_column_by_name(table_data, \"melbourne\")\n    for s, p, g, m in zip(sydney, perth, gold_coast, melbourne):\n        if equal_to(s, \"no\") and equal_to(p, \"no\") and equal_to(g, \"no\") and not equal_to(m, \"yes\"):\n            return False\n    return True\n\n### END"}
{"id": "0777788c-6c89-4803-aec4-d277e1379d37", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of americas records in swimming\ntable_data = [[\"event\", \"time\", \"nationality\", \"date\", \"meet\", \"location\"],[\"50 m freestyle\", \"20.91\", \"brazil\", \"18 december 2009\", \"brazilian championships\", \"são paulo, brazil\"],[\"100 m freestyle\", \"46.91\", \"brazil\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m freestyle\", \"1:42.96\", \"united states\", \"12 august 2008\", \"olympic games\", \"beijing, china\"],[\"400 m freestyle\", \"3:42.78\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"800 m freestyle\", \"7:41.86\", \"canada\", \"27 july 2011\", \"world championships\", \"shanghai, china\"],[\"1500 m freestyle\", \"14:39.63\", \"canada\", \"4 august 2012\", \"olympic games\", \"london, united kingdom\"],[\"50 m backstroke\", \"24.33\", \"united states\", \"5 december 2008\", \"dutch swim cup\", \"eindhoven, netherlands\"],[\"100 m backstroke\", \"51.94\", \"united states\", \"8 july 2009\", \"us championships\", \"indianapolis, united states\"],[\"200 m backstroke\", \"1:51.92\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m breaststroke\", \"26.76\", \"brazil\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"100 m breaststroke\", \"58.96\", \"united states\", \"26 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m breaststroke\", \"2:07.42\", \"united states\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m butterfly\", \"22.76\", \"brazil\", \"26 april 2012\", \"maria lenk trophy\", \"rio de janeiro, brazil\"],[\"100 m butterfly\", \"49.82\", \"united states\", \"1 august 2009\", \"world championships\", \"rome, italy\"],[\"200 m butterfly\", \"1:51.51\", \"united states\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m individual medley\", \"1:54.00\", \"united states\", \"28 july 2011\", \"world championships\", \"shanghai, china\"],[\"400 m individual medley\", \"4:03.84\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"4100 m freestyle relay\", \"3:08.24\", \"united states\", \"11 august 2008\", \"olympic games\", \"beijing, china\"],[\"4200 m freestyle relay\", \"6:58.55\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"4100 m medley relay\", \"3:27.28\", \"united states\", \"2 august 2009\", \"world championships\", \"rome, italy\"]]\nQuestion = Is it true that the winner of the 28 july , 2011 200 m individual medley had a time of 1:54:00?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    times = get_column_by_name(table_data, \"time\")\n    dates = get_column_by_name(table_data, \"date\")\n    for event, time, date in zip(events, times, dates):\n        if event.lower() == \"200 m individual medley\" and date.lower() == \"28 july 2011\":\n            answer = equal_to(time, \"1:54.00\")\n            break \n    return answer\n\n### END"}
{"id": "07282817-eb8d-4d0b-8dcb-13dbe5fd7d0e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2005 japanese television dramas\ntable_data = [[\"japanese title\", \"romaji title\", \"tv station\", \"episodes\", \"average ratings\"],[\"電車男\", \"densha otoko\", \"fuji tv\", \"11\", \"21.0%\"],[\"海猿 umizaru evolution\", \"umizaru evolution\", \"fuji tv\", \"11\", \"13.2%\"],[\"スローダンス\", \"slow dance\", \"fuji tv\", \"11\", \"16.8%\"],[\"がんばっていきまっしょい\", \"ganbatte ikimasshoi\", \"fuji tv\", \"10\", \"12.4%\"],[\"幸せになりたい!\", \"shiawase ni naritai!\", \"tbs\", \"10\", \"11.8%\"],[\"女系家族\", \"nyokei kazoku\", \"tbs\", \"11\", \"13.85%\"],[\"いま、会いにゆきます\", \"ima , ai ni yukimasu\", \"tbs\", \"10\", \"11%\"],[\"ドラゴン桜\", \"dragon zakura\", \"tbs\", \"11\", \"16.4%\"],[\"はるか17\", \"haruka seventeen\", \"tv asahi\", \"10\", \"8.9%\"],[\"菊次郎とさき 2\", \"kikujirou to saki 2\", \"ntv\", \"9\", \"14.9%\"],[\"女王の教室\", \"joou no kyoushitsu\", \"ntv\", \"11\", \"15.7%\"]]\nQuestion = Is it true that kikujirou to saki 2 was the romaji title that has a japanese title of 女王の教室?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    japanese_titles = get_column_by_name(table_data, \"japanese title\")\n    romaji_titles = get_column_by_name(table_data, \"romaji title\")\n    for japanese_title, romaji_title in zip(japanese_titles, romaji_titles):\n        if japanese_title == \"女王の教室\":\n            answer = equal_to(romaji_title, \"kikujirou to saki 2\")\n            break \n    return answer\n\n### END"}
{"id": "e9a55298-59f0-484b-8ccd-53f07f8be79e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = anaprof clausura 2008\ntable_data = [[\"place (posición)\", \"team (equipo)\", \"played (pj)\", \"won (pg)\", \"draw (pe)\", \"lost (pp)\", \"goals scored (gf)\", \"goals conceded (gc)\", \"+ / - (dif)\", \"points (pts)\"],[\"1\", \"árabe unido\", \"31\", \"17\", \"6\", \"8\", \"54\", \"31\", \"+ 23\", \"57\"],[\"2\", \"tauro\", \"31\", \"16\", \"8\", \"7\", \"54\", \"41\", \"+ 13\", \"56\"],[\"3\", \"san francisco\", \"31\", \"14\", \"11\", \"6\", \"54\", \"42\", \"+ 12\", \"53\"],[\"4\", \"chepo\", \"31\", \"13\", \"10\", \"8\", \"50\", \"31\", \"+ 19\", \"49\"],[\"5\", \"sporting san miguelito\", \"31\", \"11\", \"10\", \"10\", \"44\", \"40\", \"+ 4\", \"43\"],[\"6\", \"atlético veragüense\", \"31\", \"9\", \"11\", \"11\", \"40\", \"48\", \"- 8\", \"38\"],[\"7\", \"chorrillo\", \"31\", \"7\", \"13\", \"11\", \"32\", \"39\", \"- 7\", \"34\"],[\"8\", \"atlético chiriquí\", \"31\", \"9\", \"7\", \"15\", \"33\", \"64\", \"- 31\", \"34\"],[\"9\", \"alianza\", \"31\", \"9\", \"4\", \"18\", \"45\", \"51\", \"- 6\", \"31\"],[\"10\", \"plaza amador\", \"31\", \"6\", \"8\", \"17\", \"22\", \"41\", \"- 19\", \"27\"]]\nQuestion = Is it true that there is not a team with 65 goals cone timeded and more than 33 goals scored?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    goals_scored = get_column_by_name(table_data, \"goals scored (gf)\")\n    goals_conceded = get_column_by_name(table_data, \"goals conceded (gc)\")\n    answer = True\n    for gs, gc in zip(goals_scored, goals_conceded):\n        if int(gc) >= 65 and int(gs) > 33:\n            answer = False\n            break\n    return answer\n\n### END"}
{"id": "f90abfee-4bdf-4979-8263-ada67055011a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 issf world cup final (rifle and pistol)\ntable_data = [[\"shooter\", \"event\", \"rank points\", \"score points\", \"total\"],[\"zhu qinan ( chn )\", \"wcf 2007\", \"defending champion\", \"defending champion\", \"defending champion\"],[\"abhinav bindra ( ind )\", \"og beijing\", \"olympic gold medalist\", \"olympic gold medalist\", \"olympic gold medalist\"],[\"henri häkkinen ( fin )\", \"og beijing\", \"olympic bronze medalist\", \"olympic bronze medalist\", \"olympic bronze medalist\"],[\"alin george moldoveanu ( rou )\", \"wc munich\", \"15\", \"14\", \"29\"],[\"péter sidi ( hun )\", \"wc rio de janeiro\", \"15\", \"13\", \"28\"],[\"matthew emmons ( usa )\", \"wc beijing\", \"10\", \"14\", \"24\"],[\"cao yifei ( chn )\", \"wc milan\", \"10\", \"11\", \"21\"],[\"gagan narang ( ind )\", \"wc beijing\", \"8\", \"12\", \"20\"],[\"thomas farnik ( aut )\", \"wc munich\", \"8\", \"12\", \"20\"],[\"nemanja mirosavljev ( srb )\", \"wc rio de janeiro\", \"8\", \"11\", \"19\"],[\"artur ayvazyan ( ukr )\", \"wc milan\", \"5\", \"12\", \"17\"]]\nQuestion = Is it true that thomas farnik ( aut ) is the shooter who has wc munich as the event , and 8 as the rank points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    shooters = get_column_by_name(table_data, \"shooter\")\n    events = get_column_by_name(table_data, \"event\")\n    rank_points = get_column_by_name(table_data, \"rank points\")\n    for shooter, event, rank_point in zip(shooters, events, rank_points):\n        if shooter.lower() == \"thomas farnik ( aut )\" and event.lower() == \"wc munich\" and equal_to(rank_point, \"8\"):\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "e0325c09-0624-403b-9a0e-b953ffd54653", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1950 world figure skating championships\ntable_data = [[\"rank\", \"name\", \"nation\", \"placings\", \"total\"],[\"1\", \"karol kennedy / peter kennedy\", \"united states\", \"15\", \"96.07\"],[\"2\", \"jennifer nicks / john nicks\", \"united kingdom\", \"28.5\", \"92.70\"],[\"3\", \"marianne nagy / lászló nagy\", \"hungary\", \"32\", \"92.25\"],[\"4\", \"elianne steineman / andré calamé\", \"switzerland\", \"44.5\", \"90.00\"],[\"5\", \"suzanne gheldorf / jacques rénard\", \"belgium\", \"48.5\", \"89.43\"],[\"6\", \"elly stärck / harry gareis\", \"austria\", \"61\", \"88.08\"],[\"7\", \"marlene smith / donald gilchrist\", \"canada\", \"63\", \"87.07\"],[\"8\", \"joan waterhouse / gordon holloway\", \"united kingdom\", \"62\", \"88.31\"],[\"9\", \"liliane de becker / edmund verbustel\", \"belgium\", \"64\", \"88.42\"],[\"10\", \"irene maguire / walter muehlbronner\", \"united states\", \"82\", \"84.26\"],[\"11\", \"sybil cooke / bob hudson\", \"united kingdom\", \"93.5\", \"83.47\"],[\"12\", \"denise favart / jacques favart\", \"france\", \"108\", \"77.73\"]]\nQuestion = Is it true that united kingdon ranked number 2 with a total of 92.7?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    nations = get_column_by_name(table_data, \"nation\")\n    totals = get_column_by_name(table_data, \"total\")\n    for rank, nation, total in zip(ranks, nations, totals):\n        if rank == \"2\" and nation.lower() == \"united kingdom\":\n            answer = equal_to(total, \"92.70\")\n            break \n    return answer\n\n### END"}
{"id": "35abdc5a-db2b-4ce8-8668-39abe1e53b24", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = comparison of e - book formats\ntable_data = [[\"format\", \"filename extension\", \"image support\", \"interactivity support\", \"word wrap support\", \"open standard\"],[\"djvu\", \"djvu\", \"yes\", \"no\", \"no\", \"yes\"],[\"epub (idpf)\", \"epub\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"fictionbook\", \"fb2\", \"yes\", \"no\", \"yes\", \"yes\"],[\"html\", \"html\", \"yes\", \"no\", \"yes\", \"yes\"],[\"kindle\", \"azw\", \"yes\", \"yes\", \"yes\", \"no\"],[\"microsoft reader\", \"lit\", \"yes\", \"no\", \"yes\", \"no\"],[\"mobipocket\", \"prc , mobi\", \"yes\", \"yes\", \"yes\", \"no\"],[\"multimedia ebook\", \"exe\", \"yes\", \"yes\", \"no\", \"yes\"],[\"newton book\", \"pkg\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ereader\", \"pdb\", \"yes\", \"no\", \"yes\", \"no\"],[\"plain text\", \"txt\", \"no\", \"no\", \"yes\", \"yes\"],[\"plucker\", \"pdb\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"portable document format\", \"pdf\", \"yes\", \"yes\", \"yes though not all readers implement support\", \"yes\"],[\"postscript\", \"ps\", \"yes\", \"no\", \"no\", \"yes\"],[\"tome raider\", \"tr2 , tr3\", \"yes\", \"no\", \"yes\", \"no\"],[\"openxps\", \"oxps , xps\", \"yes\", \"no\", \"no\", \"yes\"]]\nQuestion = Is it true that there is not word wrap support for the file format , mobipocket?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    formats = get_column_by_name(table_data, \"format\")\n    word_wrap_supports = get_column_by_name(table_data, \"word wrap support\")\n    for format, word_wrap_support in zip(formats, word_wrap_supports):\n        if format.lower() == \"mobipocket\":\n            answer = equal_to(word_wrap_support, \"no\")\n            break \n    return answer\n\n### END"}
{"id": "9447a51d-9d47-431d-b9a1-eac63f885836", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = extreme engineering\ntable_data = [[\"no in series\",\"no in season\",\"title\",\"country\",\"project\",\"status at production\",\"original air date\"],[\"70\",\"1\",\"rebuilding new york city 's subway\",\"united states\",\"new york city subway expansion\",\"under construction\",\"april 8 , 2011\"],[\"71\",\"2\",\"drought - proofing australia\",\"australia\",\"wonthaggi desalination plant\",\"under construction\",\"april 15 , 2011\"],[\"72\",\"3\",\"azerbaijan 's amazing transformation\",\"azerbaijan\",\"flame towers and heydar aliyev cultural centre\",\"under construction\",\"april 22 , 2011\"],[\"73\",\"4\",\"london 's olympic aquatic stadium\",\"united kingdom\",\"london aquatics centre\",\"under construction\",\"april 29 , 2011\"],[\"74\",\"5\",\"constructing serbia 's largest bridge\",\"serbia\",\"ada bridge\",\"under construction\",\"june 18 , 2011\"],[\"75\",\"6\",\"amsterdam 's futuristic floating city\",\"netherlands\",\"netherlands land expansion\",\"under construction\",\"june 25 , 2011\"],[\"76\",\"7\",\"building mumbai 's modern airport\",\"india\",\"chhatrapati shivaji international airport\",\"under construction\",\"july 2 , 2011\"]]\nQuestion = Is it true that the title rebuilding new york city 's subway was in series 70?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    series_numbers = get_column_by_name(table_data, \"no in series\")\n    titles = get_column_by_name(table_data, \"title\")\n    for series_number, title in zip(series_numbers, titles):\n        if series_number == \"70\":\n            answer = equal_to(title, \"rebuilding new york city 's subway\")\n            break \n    return answer\n\n### END"}
{"id": "7548bbb7-8853-4e1a-aa8f-837ae2fab3d5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = papal election , 1292 - 94\ntable_data = [[\"elector\",\"nationality\",\"order\",\"title\",\"elevated\",\"elevator\"],[\"latino malabranca orsini , op\",\"roman\",\"cardinal - bishop\",\"bishop of ostia e velletri\",\"1278 , march 12\",\"nicholas iii\"],[\"gerardo bianchi\",\"parmigiani\",\"cardinal - bishop\",\"bishop of sabina\",\"1278 , march 12\",\"nicholas iii\"],[\"giovanni boccamazza\",\"roman\",\"cardinal - bishop\",\"bishop of frascati\",\"1285 , december 22\",\"honorius iv\"],[\"matteo d'acquasparta , ofm\",\"ni todi\",\"cardinal - bishop\",\"bishop of porto e santa rufina\",\"1288 , may 16\",\"nicholas iv\"],[\"jean cholet\",\"french\",\"cardinal - priest\",\"titulus s cecilia\",\"1281 , april 12\",\"martin iv\"],[\"benedetto caetani\",\"ni anagni ( n catalonia family)\",\"cardinal - priest\",\"titulus ss silvestro e martino ai monti\",\"1281 , april 12\",\"martin iv\"],[\"hugues aycelin de billom , op\",\"french\",\"cardinal - priest\",\"titulus s sabina\",\"1288 , may 16\",\"nicholas iv\"],[\"pietro peregrosso\",\"ese milan\",\"cardinal - priest\",\"titulus s marco\",\"1288 , may 16\",\"nicholas iv\"],[\"matteo orsini rosso\",\"roman\",\"cardinal - deacon\",\"deacon of s maria in portico\",\"1262 , may 22\",\"urban iv\"],[\"giacomo colonna\",\"roman\",\"cardinal - deacon\",\"deacon of s maria in via lata\",\"1278 , march 12\",\"nicholas iii\"],[\"napoleone orsini\",\"roman\",\"cardinal - deacon\",\"deacon of s adriano\",\"1288 , may 16\",\"nicholas iv\"],[\"pietro colonna\",\"roman\",\"cardinal - deacon\",\"deacon of s eustachio\",\"1288 , may 16\",\"nicholas iv\"]]\nQuestion = Is it true that the deacon of s maria in via lata is of roman nationality?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    answer = False\n    for title, nationality in zip(titles, nationalities):\n        if \"deacon of s maria in via lata\" in title.lower():\n            if \"roman\" in nationality.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "6dd16951-557f-4dd1-8a42-27deeda0d145", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = atlanta falcons draft history\ntable_data = [[\"round\", \"pick\", \"overall\", \"name\", \"position\"],[\"1\", \"9\", \"9\", \"bubba bean\", \"running back\"],[\"2\", \"8\", \"36\", \"sonny collins\", \"running back\"],[\"3\", \"11\", \"71\", \"dave scott\", \"guard\"],[\"4\", \"10\", \"102\", \"walt brett\", \"defensive end\"],[\"6\", \"13\", \"169\", \"stan varner\", \"defensive tackle\"],[\"7\", \"11\", \"193\", \"karl farmer\", \"wide receiver\"],[\"8\", \"10\", \"219\", \"frank reed\", \"washington\"],[\"9\", \"9\", \"246\", \"phil mckinnely\", \"offensive tackle\"],[\"11\", \"11\", \"302\", \"chuck brislin\", \"offensive tackle\"],[\"12\", \"10\", \"329\", \"pat bolton\", \"kicker\"],[\"13\", \"9\", \"356\", \"mike williams\", \"offensive tackle\"],[\"14\", \"8\", \"383\", \"mark husfloen\", \"defensive end\"],[\"15\", \"11\", \"414\", \"ron olson\", \"defensive back\"],[\"16\", \"10\", \"441\", \"pat curto\", \"linebacker\"],[\"17\", \"9\", \"468\", \"tony green\", \"defensive back\"]]\nQuestion = Is it true that ron olson had an overall greater than 414 with a pick number bigger than 9?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    overalls = get_column_by_name(table_data, \"overall\")\n    picks = get_column_by_name(table_data, \"pick\")\n    for name, overall, pick in zip(names, overalls, picks):\n        if name.lower() == \"ron olson\":\n            answer = greater(int(overall), 414) and greater(int(pick), 9)\n            break \n    return answer\n\n### END"}
{"id": "2023ad39-d8e2-4c82-a3ec-74cf62c51cb1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = hey venus!\ntable_data = [[\"region\", \"date\", \"label\", \"format\", \"catalogue\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"vinyl record\", \"rtradlp 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"compact disc\", \"rtradcd 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"download\", \"-\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"vinyl record\", \"rt - 346 - 1\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"download\", \"rt - 346 - 5\"],[\"united states\", \"22 january 2008\", \"rough trade america\", \"double compact disc\", \"rtradcd 423\"],[\"japan\", \"12 september 2007\", \"rough trade japan\", \"compact disc\", \"xqcy - 1003\"]]\nQuestion = Is it true that in the united states , the label used is rough trade america?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    regions = get_column_by_name(table_data, \"region\")\n    labels = get_column_by_name(table_data, \"label\")\n    answer = False\n    for region, label in zip(regions, labels):\n        if \"united states\" in region.lower() and \"rough trade america\" in label.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "9f40e7ae-f195-4782-92db-f0433a7599c1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1926 grand prix season\ntable_data = [[\"name\", \"circuit\", \"date\", \"winning drivers\", \"winning constructor\", \"report\"],[\"indianapolis 500\", \"indianapolis\", \"31 may\", \"frank lockhart\", \"miller\", \"report\"],[\"french grand prix\", \"miramas\", \"27 june\", \"jules goux\", \"bugatti\", \"report\"],[\"san sebastián grand prix / european grand prix\", \"lasarte\", \"18 july\", \"jules goux\", \"bugatti\", \"report\"],[\"british grand prix\", \"brooklands\", \"7 august\", \"robert sénéchal louis wagner\", \"delage\", \"report\"],[\"italian grand prix\", \"monza\", \"5 september\", \"louis charavel\", \"bugatti\", \"report\"]]\nQuestion = Is it true that the winning constructor of the british grand prix was delage?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    races = get_column_by_name(table_data, \"name\")\n    constructors = get_column_by_name(table_data, \"winning constructor\")\n    for race, constructor in zip(races, constructors):\n        if \"british grand prix\" in race.lower():\n            answer = equal_to(constructor, \"delage\")\n            break \n    return answer\n\n### END"}
{"id": "78c01700-bc2c-4302-be4f-414fea359181", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"class\", \"part 1\", \"part 2\", \"part 3\", \"part 4\", \"verb meaning\"],[\"1\", \"rīdan\", \"rād\", \"ridon\", \"riden\", \"to ride\"],[\"2a\", \"frēosan\", \"frēas\", \"fruron\", \"froren\", \"to freeze\"],[\"2b\", \"lūcan\", \"lēac\", \"lucon\", \"locen\", \"to lock\"],[\"3a\", \"bindan\", \"band\", \"bundon\", \"bunden\", \"to bind\"],[\"3b\", \"weorþan\", \"wearþ\", \"wurdon\", \"worden\", \"to become\"],[\"4\", \"beran\", \"bær\", \"bǣron\", \"boren\", \"to bear\"],[\"5\", \"lesan\", \"læs\", \"lǣron\", \"leren\", \"to gather\"],[\"6\", \"alan\", \"ōl\", \"ōlon\", \"alen\", \"to nourish , to grow\"],[\"7a\", \"hātan\", \"hēt\", \"hēton\", \"hāten\", \"to call , to be called\"],[\"7b\", \"hlēapan\", \"hlēop\", \"hlēppon\", \"hlēapen\", \"to leap\"],[\"7c\", \"healdan\", \"hēold\", \"hēoldon\", \"healden\", \"to hold\"],[\"7d\", \"rǣdan\", \"rēd\", \"rēdon\", \"rǣden\", \"to advise , to interpret\"]]\nQuestion = Is it true that part 3 verbs which mean to freeze , lock , or hold appear two times in the list?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef solution(table_data):\n    part_3_verbs = get_column_by_name(table_data, \"part 3\")\n    verb_meanings = get_column_by_name(table_data, \"verb meaning\")\n    target_verbs = [\"fruron\", \"lucon\", \"hēoldon\"]\n    target_meanings = [\"to freeze\", \"to lock\", \"to hold\"]\n    count = 0\n    for verb, meaning in zip(part_3_verbs, verb_meanings):\n        if verb in target_verbs and meaning in target_meanings:\n            count += 1\n    answer = count == 2\n    return answer\n\n### END"}
{"id": "452a9a0f-4c20-488e-8e36-48132d043d85", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"title\", \"from album\", \"label\", \"label - nr\"],[\"1962\", \"tonight / sinnin' sam\", \"lookin' ahead\", \"pacific jazz\", \"x - 340\"],[\"1962\", \"the young rabbits / song of india\", \"lookin' ahead\", \"pacific jazz\", \"x - 342\"],[\"1962\", \"congolese sermon / weather beat\", \"(only on 45)\", \"pacific jazz\", \"x - 357\"],[\"1963\", \"no name samba / tough talk\", \"tough talk\", \"world pacific\", \"x - 371\"],[\"1963\", \"turkish black / boopie\", \"tough talk\", \"world pacific\", \"x - 388\"],[\"1963\", \"spanish castles / bluesette\", \"jazz waltz (w les mccann)\", \"world pacific\", \"406\"],[\"1964\", \"heat wave / on broadway\", \"heat wave\", \"world pacific\", \"401\"],[\"1964\", \"i remember tomorrow / long john\", \"stretchin' out\", \"world pacific\", \"412\"],[\"1965\", \"tough talk / the thing\", \"the thing\", \"world pacific\", \"77800\"],[\"1965\", \"aqua dulce / soul bourgeoisie\", \"chile con soul\", \"world pacific\", \"77806\"],[\"1966\", \"scratch / uptight\", \"talk that talk\", \"pacific jazz\", \"88125\"],[\"1968\", \"ooga - boo - ga - loo / eleanor rigby\", \"lighthouse '68\", \"pacific jazz\", \"88144\"],[\"1968\", \"hey jude / love and peace\", \"powerhouse\", \"pacific jazz\", \"88146\"],[\"1969\", \"get back / willie and laura mae jones\", \"lighthouse '69\", \"word pacific jazz\", \"88153\"],[\"1970\", \"way back home / jackson\", \"old socks , new shoes\", \"chisa\", \"c - 8010\"]]\nQuestion = Is it true that the album powerhouse was released in 1968?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    albums = get_column_by_name(table_data, \"from album\")\n    answer = False\n    for year, album in zip(years, albums):\n        if album.lower() == \"powerhouse\" and year == \"1968\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "7935e3fc-5a5e-4655-9873-0aece63f2a1b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = gambrinus liga\ntable_data = [[\"season\", \"champions\", \"runner - up\", \"third place\", \"top goalscorer\", \"club\"],[\"1993 - 94\", \"sparta prague (1)\", \"slavia prague\", \"baník ostrava\", \"horst siegl (20)\", \"sparta prague\"],[\"1994 - 95\", \"sparta prague (2)\", \"slavia prague\", \"fc brno\", \"radek drulák (15)\", \"drnovice\"],[\"1995 - 96\", \"slavia prague (1)\", \"sigma olomouc\", \"baumit jablonec\", \"radek drulák (22)\", \"drnovice\"],[\"1996 - 97\", \"sparta prague (3)\", \"slavia prague\", \"baumit jablonec\", \"horst siegl (19)\", \"sparta prague\"],[\"1997 - 98\", \"sparta prague (4)\", \"slavia prague\", \"sigma olomouc\", \"horst siegl (13)\", \"sparta prague\"],[\"1998 - 99\", \"sparta prague (5)\", \"teplice\", \"slavia prague\", \"horst siegl (18)\", \"sparta prague\"],[\"1999 - 00\", \"sparta prague (6)\", \"slavia prague\", \"drnovice\", \"vratislav lokvenc (21)\", \"sparta prague\"],[\"2000 - 01\", \"sparta prague (7)\", \"slavia prague\", \"sigma olomouc\", \"vítězslav tuma (15)\", \"drnovice\"],[\"2001 - 02\", \"slovan liberec (1)\", \"sparta prague\", \"viktoria žižkov\", \"jiří štajner (15)\", \"slovan liberec\"],[\"2002 - 03\", \"sparta prague (8)\", \"slavia prague\", \"viktoria žižkov\", \"jiří kowalík (16)\", \"1. fc synot\"],[\"2003 - 04\", \"baník ostrava (1)\", \"sparta prague\", \"sigma olomouc\", \"marek heinz (19)\", \"baník ostrava\"],[\"2004 - 05\", \"sparta prague (9)\", \"slavia prague\", \"teplice\", \"tomáš jun (14)\", \"sparta prague\"],[\"2005 - 06\", \"slovan liberec (2)\", \"mladá boleslav\", \"slavia prague\", \"milan ivana (11)\", \"fc slovácko\"],[\"2006 - 07\", \"sparta prague (10)\", \"slavia prague\", \"mladá boleslav\", \"luboš pecka (16)\", \"mladá boleslav\"],[\"2007 - 08\", \"slavia prague (2)\", \"sparta prague\", \"baník ostrava\", \"václav svěrkoš (15)\", \"baník ostrava\"],[\"2008 - 09\", \"slavia prague (3)\", \"sparta prague\", \"slovan liberec\", \"andrej kerić (15)\", \"slovan liberec\"],[\"2009 - 10\", \"sparta prague (11)\", \"jablonec\", \"baník ostrava\", \"michal ordoš (12)\", \"sigma olomouc\"],[\"2010 - 11\", \"viktoria plzeň (1)\", \"sparta prague\", \"jablonec\", \"david lafata (19)\", \"jablonec\"],[\"2011 - 12\", \"slovan liberec (3)\", \"sparta prague\", \"viktoria plzeň\", \"david lafata (25)\", \"jablonec\"]]\nQuestion = Is it true that sparta praque was the runner - up for the 2008 - 09 season and jablonec was the champion?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    champions = get_column_by_name(table_data, \"champions\")\n    runner_ups = get_column_by_name(table_data, \"runner - up\")\n    for season, champion, runner_up in zip(seasons, champions, runner_ups):\n        if \"2008 - 09\" in season.lower():\n            answer = \"sparta prague\" in runner_up.lower() and \"jablonec\" in champion.lower()\n            break\n    return answer\n\n### END"}
{"id": "c6e67fde-579e-4958-a4ca-ba00505a7240", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1981 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"footscray\", \"10.14 (74)\", \"hawthorn\", \"11.18 (84)\", \"western oval\", \"13789\", \"23 may 1981\"],[\"fitzroy\", \"13.15 (93)\", \"geelong\", \"16.18 (114)\", \"junction oval\", \"15604\", \"23 may 1981\"],[\"carlton\", \"25.22 (172)\", \"south melbourne\", \"11.7 (73)\", \"princes park\", \"22445\", \"23 may 1981\"],[\"melbourne\", \"10.10 (70)\", \"essendon\", \"14.20 (104)\", \"mcg\", \"31769\", \"23 may 1981\"],[\"north melbourne\", \"12.26 (98)\", \"collingwood\", \"16.15 (111)\", \"arden street oval\", \"24625\", \"23 may 1981\"],[\"richmond\", \"20.16 (136)\", \"st kilda\", \"15.15 (105)\", \"vfl park\", \"40240\", \"23 may 1981\"]]\nQuestion = Is it true that melbourne plays as the home team in the mcg venue?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    answer = False\n    for home_team, venue in zip(home_teams, venues):\n        if home_team.lower() == \"melbourne\" and venue.lower() == \"mcg\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "e3e45d4d-a542-457f-871a-ca589a33e1a9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = livonia cup\ntable_data = [[\"season\", \"winner\", \"score\", \"runner - up\", \"venue\"],[\"2011\", \"fc flora tallinn\", \"2 - 0\", \"skonto fc\", \"skonto hall , riga\"],[\"2008\", \"fk ventspils\", \"2 - 2 aet , 4 - 3 pen\", \"fc levadia tallinn\", \"skonto hall , riga\"],[\"2005\", \"skonto fc\", \"4 - 3\", \"fc levadia tallinn\", \"skonto hall , riga\"],[\"2004\", \"skonto fc\", \"3 - 3 aet , 4 - 3 pen\", \"fc flora tallinn\", \"skonto hall , riga\"],[\"2003\", \"skonto fc\", \"2 - 2 aet , 12 - 11 pen\", \"fc flora tallinn\", \"skonto hall , riga\"]]\nQuestion = Is it true that only season 2004 had a score of 3 - 3 aet , 4 - 3 pen?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    scores = get_column_by_name(table_data, \"score\")\n    count = 0\n    for score in scores:\n        if equal_to(score, \"3 - 3 aet , 4 - 3 pen\"):\n            count += 1\n    answer = equal_to(count, 1)\n    return answer\n\n### END"}
{"id": "d78c83ec-9dc6-4f9d-b3ad-971426eeeb20", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of flashpoint episodes\ntable_data = [[\"no\", \"-\", \"title\", \"directed by\", \"written by\", \"canadian air date\", \"us air date\", \"production code\", \"canadian viewers (million)\"],[\"45\", \"1\", \"personal effects (part 2)\", \"kelly makin\", \"mark ellis & stephanie morgenstern\", \"july 8 , 2011\", \"july 8 , 2011\", \"401\", \"1.369\"],[\"46\", \"2\", \"good cop\", \"john fawcett\", \"michael maclennan\", \"july 15 , 2011\", \"july 15 , 2011\", \"402\", \"1.508\"],[\"47\", \"3\", \"run , jaime , run\", \"kelly makin\", \"ian weir\", \"july 22 , 2011\", \"july 22 , 2011\", \"403\", \"1.537\"],[\"48\", \"4\", \"through a glass darkly\", \"john fawcett\", \"andrew wreggitt\", \"july 29 , 2011\", \"july 29 , 2011\", \"404\", \"1.430\"],[\"49\", \"5\", \"the better man\", \"david frazee\", \"michael maclennan\", \"august 5 , 2011\", \"august 5 , 2011\", \"405\", \"1.254\"],[\"50\", \"6\", \"a day in the life\", \"jim donovan\", \"mark ellis & stephanie morgenstern\", \"august 12 , 2011\", \"august 12 , 2011\", \"406\", \"1.406\"],[\"51\", \"7\", \"shockwave\", \"david frazee\", \"larry bambrick\", \"august 19 , 2011\", \"august 19 , 2011\", \"407\", \"1.313\"],[\"52\", \"8\", \"grounded\", \"david frazee\", \"karen walton\", \"september 19 , 2011\", \"october 18 , 2011\", \"412\", \"1.536\"],[\"53\", \"9\", \"the war within\", \"david frazee\", \"daniel godwin & michael maclennan\", \"september 27 , 2011\", \"december 13 , 2011\", \"408\", \"1.349\"],[\"54\", \"10\", \"the cost of doing business\", \"david frazee\", \"larry bambrick\", \"october 4 , 2011\", \"october 25 , 2011\", \"409\", \"1.309\"],[\"55\", \"11\", \"wild card\", \"brett sullivan\", \"karen walton\", \"october 11 , 2011\", \"november 1 , 2011\", \"410\", \"1.263\"],[\"56\", \"12\", \"a new life\", \"kelly makin\", \"adam barken\", \"november 1 , 2011\", \"november 8 , 2011\", \"411\", \"1.293\"],[\"57\", \"13\", \"a call to arms\", \"ã‰rik canuel\", \"alex levine\", \"november 8 , 2011\", \"november 22 , 2011\", \"413\", \"1.215\"],[\"58\", \"14\", \"day game\", \"kelly makin\", \"aubrey nealon\", \"november 15 , 2011\", \"november 29 , 2011\", \"415\", \"1.191\"],[\"59\", \"15\", \"blue on blue\", \"stefan pleszczynski\", \"adam barken\", \"november 22 , 2011\", \"december 6 , 2011\", \"416\", \"1.229\"],[\"60\", \"16\", \"team player\", \"kelly makin\", \"michael maclennan\", \"november 28 , 2011\", \"january 10 , 2012\", \"414\", \"1.452\"],[\"61\", \"17\", \"priority of life\", \"david frazee\", \"mark ellis , stephanie morgenstern & alex levine\", \"december 6 , 2011\", \"january 17 , 2012\", \"417\", \"1.317\"]]\nQuestion = Is it true that jim donovan directed one show , a day in the life?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_directed_by = get_column_by_name(table_data, \"directed by\")\n    column_title = get_column_by_name(table_data, \"title\")\n    answer = \"jim donovan\" in column_directed_by and \"a day in the life\" in column_title\n    return answer\n\n### END"}
{"id": "673c8936-8ff9-435d-bb4f-f4a33e4ca131", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = chameleon\ntable_data = [[\"scientific name\", \"common name\", \"length (male)\", \"length (female)\", \"color\", \"lifespan (years)\"],[\"chamaeleo calyptratus\", \"veiled chameleon\", \"14 - 24 in\", \"10 - 13 in\", \"green and light colors\", \"about 5\"],[\"trioceros jacksonii\", \"jackson 's chameleon\", \"9 - 13 in\", \"10 - 13 in\", \"green and light colors\", \"5 - 10\"],[\"furcifer pardalis\", \"panther chameleon\", \"15 - 21 in\", \"9 - 13 in\", \"darker colors\", \"about 5 (2 - 3 for birthing females)\"],[\"rieppeleon brevicaudatus\", \"bearded pygmy chameleon\", \"2 - 3 in\", \"2 - 3 in\", \"brown , beige , green\", \"about 3 - 5\"],[\"rhampholeon spectrum\", \"spectral pygmy chameleon\", \"3 - 4 in\", \"2 - 4 in\", \"tan and gray\", \"3 - 5\"]]\nQuestion = Is it true that furcifer pardalis , panther chameleon , has darker colors with a lifespan of about 5 years?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    scientific_names = get_column_by_name(table_data, \"scientific name\")\n    common_names = get_column_by_name(table_data, \"common name\")\n    colors = get_column_by_name(table_data, \"color\")\n    lifespans = get_column_by_name(table_data, \"lifespan (years)\")\n    for scientific_name, common_name, color, lifespan in zip(scientific_names, common_names, colors, lifespans):\n        if equal_to(scientific_name, \"furcifer pardalis\") and equal_to(common_name, \"panther chameleon\"):\n            answer = equal_to(color, \"darker colors\") and \"about 5\" in lifespan\n            break \n    return answer\n\n### END"}
{"id": "de2b4bbd-c6ba-4d8c-9191-1deb051a0aad", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mercedes - benz r170\ntable_data = [[\"model\", \"years\", \"engine\", \"power\", \"0 - 100 km / h (62 mph)\", \"top speed\"],[\"slk200\", \"1997 - 2004\", \"2l m111.946 l4\", \"102 kw (136hp)\", \"9.3 seconds\", \"208 km / h (129 mph)\"],[\"slk200k\", \"1997 - 2000\", \"2l m111.943 l4\", \"143 kw (192hp)\", \"6.8 seconds\", \"236 km / h (147 mph)\"],[\"slk200k\", \"2001 - 2004\", \"2l m111.958 l4\", \"122 kw (163hp)\", \"7.4 seconds\", \"223 km / h (138 mph)\"],[\"slk230k\", \"1996 - 2000\", \"2.3l m111.973 l4\", \"144 kw (193hp)\", \"6.9 seconds\", \"231 km / h (143 mph)\"],[\"slk230k\", \"2001 - 2004\", \"2.3l m111.983 l4\", \"147 kw (197hp)\", \"6.8 seconds\", \"240 km / h (148 mph)\"],[\"slk320\", \"2001 - 2004\", \"3.2l m112.947 v6\", \"162 kw (218hp)\", \"6.5 seconds\", \"250 / 276 km / h (155 / 171 mph)\"],[\"slk32 amg\", \"2001 - 2004\", \"3.2l m112.960 v6\", \"264 kw (354hp)\", \"5.2 seconds\", \"250 / 280 / 310 km / h (155 / 174 / 193 mph)\"]]\nQuestion = Is it true that the slk200 model can go from 0 - 100 km / h in 9.3 seconds and can reach a top speed of 208 km / hr?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    models = get_column_by_name(table_data, \"model\")\n    speeds = get_column_by_name(table_data, \"0 - 100 km / h (62 mph)\")\n    top_speeds = get_column_by_name(table_data, \"top speed\")\n    for model, speed, top_speed in zip(models, speeds, top_speeds):\n        if model.lower() == \"slk200\":\n            answer = equal_to(speed, \"9.3 seconds\") and equal_to(top_speed, \"208 km / h (129 mph)\")\n            break \n    return answer\n\n### END"}
{"id": "e4fe872b-eeef-4dc6-8d34-ceb5bc51b52a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2003 - 04 isu junior grand prix\ntable_data = [[\"rank\", \"nation\", \"gold\", \"silver\", \"bronze\", \"total\"],[\"1\", \"russia\", \"10\", \"14\", \"8\", \"32\"],[\"2\", \"united states\", \"9\", \"6\", \"7\", \"22\"],[\"3\", \"canada\", \"4\", \"2\", \"10\", \"16\"],[\"4\", \"japan\", \"4\", \"5\", \"4\", \"13\"],[\"5\", \"hungary\", \"4\", \"0\", \"2\", \"6\"],[\"6\", \"czech republic\", \"2\", \"1\", \"1\", \"4\"],[\"6\", \"ukraine\", \"1\", \"3\", \"0\", \"4\"],[\"6\", \"italy\", \"0\", \"1\", \"3\", \"4\"],[\"7\", \"sweden\", \"1\", \"2\", \"0\", \"3\"],[\"8\", \"israel\", \"1\", \"1\", \"0\", \"2\"],[\"9\", \"finland\", \"0\", \"0\", \"1\", \"1\"],[\"9\", \"france\", \"0\", \"1\", \"0\", \"1\"]]\nQuestion = Is it true that japan is ranked number 4?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    nations = get_column_by_name(table_data, \"nation\")\n    for rank, nation in zip(ranks, nations):\n        if nation.lower() == \"japan\":\n            answer = equal_to(rank, \"4\")\n            break \n    return answer\n\n### END"}
{"id": "9f9538cc-8b1e-40c6-bfd3-b27f43d2d8ee", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = royal canadian mint numismatic coins (2000s)\ntable_data = [[\"year\", \"animal\", \"artist\", \"finish\", \"mintage\", \"issue price\"],[\"2007\", \"ruby - throated hummingbird\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2007\", \"red breasted nuthatch\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2008\", \"downy woodpecker\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2008\", \"northern cardinal\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2010\", \"american goldfinch\", \"arnold nogy (reverse) , susanna blunt (obverse)\", \"specimen (with selective colouring)\", \"14000\", \"24.95\"]]\nQuestion = Is it true that on the year 2010 the downy woodpecker coin created?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    animals = get_column_by_name(table_data, \"animal\")\n    answer = False\n    for year, animal in zip(years, animals):\n        if year == \"2010\" and animal.lower() == \"downy woodpecker\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "8302ad99-d5d6-4690-a219-737829e3df98", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = cultural interest fraternities and sororities\ntable_data = [[\"letters\", \"organization\", \"nickname\", \"founding date\", \"founding university\", \"type\"],[\"δλφ\", \"delta lambda phi\", \"dlp , deltas' , or lambda men\", \"1986 - 10 - 15\", \"washington , dc\", \"fraternity\"],[\"κψκ\", \"kappa psi kappa\", \"canes , k - psis , diamonds , or angels\", \"2001 - 08 - 17\", \"tallahassee , florida\", \"fraternity\"],[\"οεπ\", \"omicron epsilon pi\", \"the epps\", \"2000 - 12 - 07\", \"tallahassee , florida\", \"sorority\"],[\"γρλ\", \"gamma rho lambda 1\", \"grl\", \"2003 - 08 - 25\", \"tempe , arizona\", \"sorority\"],[\"αλζ\", \"alpha lambda zeta\", \"the regal alphas\", \"2006 - 01 - 09\", \"houston , texas and atlanta , georgia\", \"fraternity\"],[\"καλ\", \"kappa alpha lambda\", \"the kappas\", \"2003 - 10 - 19\", \"clark atlanta university\", \"sorority\"],[\"φαν\", \"phi alpha nu\", \"phi - nomenal gentlewomen\", \"2006 - 07 - 30\", \"charlotte , nc\", \"fraternity\"]]\nQuestion = Is it true that the founding date for the delta lambda phi in washington dc is 1986 - 10 - 15?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    organizations = get_column_by_name(table_data, \"organization\")\n    founding_dates = get_column_by_name(table_data, \"founding date\")\n    founding_universities = get_column_by_name(table_data, \"founding university\")\n    for organization, founding_date, founding_university in zip(organizations, founding_dates, founding_universities):\n        if organization.lower() == \"delta lambda phi\" and founding_university.lower() == \"washington , dc\":\n            answer = equal_to(founding_date, \"1986 - 10 - 15\")\n            break \n    return answer\n\n### END"}
{"id": "9dc657b6-2554-4a67-809e-108a5c9b9851", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = somerset county cricket club in 2009\ntable_data = [[\"player\", \"matches\", \"innings\", \"wickets\", \"average\", \"bbi\", \"bbm\", \"5wi\"],[\"charl willoughby\", \"16\", \"26\", \"54\", \"30.03\", \"5 / 56\", \"7 / 170\", \"3\"],[\"david stiff\", \"10\", \"18\", \"31\", \"36.12\", \"5 / 91\", \"5 / 93\", \"1\"],[\"alfonso thomas\", \"14\", \"22\", \"35\", \"37.62\", \"5 / 53\", \"8 / 152\", \"1\"],[\"ben phillips\", \"7\", \"11\", \"12\", \"38.00\", \"4 / 46\", \"4 / 73\", \"0\"],[\"arul suppiah\", \"16\", \"19\", \"15\", \"45.46\", \"3 / 58\", \"5 / 85\", \"0\"],[\"peter trego\", \"16\", \"25\", \"19\", \"46.78\", \"3 / 53\", \"3 / 74\", \"0\"],[\"andrew caddick\", \"5\", \"8\", \"10\", \"52.50\", \"3 / 53\", \"4 / 95\", \"0\"]]\nQuestion = Is it true that ben philips had more than 30 wickets?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    wickets = get_column_by_name(table_data, \"wickets\")\n    for player, wicket in zip(players, wickets):\n        if player.lower() == \"ben phillips\":\n            answer = greater(int(wicket), 30)\n            break \n    return answer\n\n### END"}
{"id": "de31c5ea-6bd0-46a7-9a9a-7b7e5b2532c8", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = jewelpet universe\ntable_data = [[\"name\",\"sweet\",\"species\",\"gender\",\"attribute\",\"birthday\",\"media debut\",\"voice actor\"],[\"sakuran ( さくらん )\",\"sakuramochi\",\"brown bear\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"rina hidaka\"],[\"melorina ( メロリーナ )\",\"melonpan\",\"poodle\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"asuka ōgame (sweets dance princess)\"],[\"eclan ( エクレン )\",\"eclair\",\"rex rabbit\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"chiwa saito (sweets dance princess)\"],[\"macaronia ( マカロニア )\",\"macaron\",\"holland lop\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"miyu matsuki (sweets dance princess)\"],[\"donadona ( ドナドナ )\",\"donut\",\"golden hamster\",\"male\",\"magical red\",\"unknown\",\"jps ep 38\",\"saki fujita (sweets dance princess)\"],[\"honey ( ハニー )\",\"honey waffles\",\"flying squirrel\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"megumi mukai (sweets dance princess)\"],[\"purinki ( プリンキー )\",\"crème caramel\",\"common squirrel monkey\",\"female\",\"magical green\",\"unknown\",\"jps ep 38\",\"mana matsufuji (sweets dance princess)\"],[\"chocolat ( ショコラ )\",\"chocolate ice cream\",\"asian black bear\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"marie miyake (sweets dance princess)\"],[\"maco ( マコ )\",\"macaron\",\"roborovski hamster\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"mako\"],[\"kaco ( カコ )\",\"macaron\",\"roborovski hamster\",\"male\",\"magical green\",\"unknown\",\"jps ep 38\",\"asuka ōgame\"],[\"roco ( ロコ )\",\"macaron\",\"roborovski hamster\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"marie miyake\"],[\"coron ( コロン )\",\"macaron\",\"roborovski hamster\",\"male\",\"magical red\",\"unknown\",\"jps ep 38\",\"saki fujita\"]]\nQuestion = Is it true that holland lop of male gender has magical green attribute?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    species = get_column_by_name(table_data, \"species\")\n    genders = get_column_by_name(table_data, \"gender\")\n    attributes = get_column_by_name(table_data, \"attribute\")\n    answer = False\n    for specie, gender, attribute in zip(species, genders, attributes):\n        if \"holland lop\" in specie.lower() and \"male\" in gender.lower() and \"magical green\" in attribute.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "315849d2-152a-43c9-81f2-ac74dfce1ad3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = bmw m1 procar championship\ntable_data = [[\"round\", \"date\", \"event\", \"circuit\", \"winning driver\", \"winning team\"],[\"1\", \"may 12\", \"belgian grand prix\", \"circuit zolder\", \"elio de angelis\", \"squadra osella corse\"],[\"2\", \"may 26\", \"monaco grand prix\", \"circuit de monaco\", \"niki lauda\", \"project four\"],[\"-\", \"june 3\", \"gunnar nilsson trophy\", \"donington park\", \"nelson piquet\", \"bmw motorsport\"],[\"3\", \"june 30\", \"french grand prix\", \"dijon - prenois\", \"nelson piquet\", \"bmw motorsport\"],[\"4\", \"july 13\", \"british grand prix\", \"silverstone circuit\", \"niki lauda\", \"project four\"],[\"5\", \"july 28\", \"german grand prix\", \"hockenheimring\", \"niki lauda\", \"project four\"],[\"6\", \"august 11\", \"austrian grand prix\", \"österreichring\", \"jacques laffite\", \"bmw motorsport\"],[\"7\", \"august 25\", \"dutch grand prix\", \"circuit zandvoort\", \"hans - joachim stuck\", \"cassani racing\"],[\"8\", \"september 8\", \"italian grand prix\", \"autodromo nazionale monza\", \"hans - joachim stuck\", \"cassani racing\"]]\nQuestion = Is it true that the winning team on july 13 and august 11 was project four?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    winning_teams = get_column_by_name(table_data, \"winning team\")\n    answer = False\n    for date, winning_team in zip(dates, winning_teams):\n        if \"july 13\" in date.lower() or \"august 11\" in date.lower():\n            if equal_to(winning_team, \"project four\"):\n                answer = True\n            else:\n                answer = False\n                break\n    return answer\n\n### END"}
{"id": "b0a57e87-3459-4771-9b9d-6fc8722e893c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 - 02 prva hnl\ntable_data = [[\"team\",\"manager\",\"home city\",\"stadium\",\"capacity\"],[\"cibalia\",\"davor čop\",\"vinkovci\",\"stadion hnk cibalia\",\"9920\"],[\"čakovec\",\"rajko magić\",\"čakovec\",\"stadion src mladost\",\"8000\"],[\"dinamo zagreb\",\"ilija lončarević\",\"zagreb\",\"stadion maksimir\",\"37168\"],[\"hajduk split\",\"nenad gračan\",\"split\",\"gradski stadion u poljudu\",\"35000\"],[\"hrvatski dragovoljac\",\"luka bonačić\",\"zagreb\",\"stadion nšc stjepan spajić\",\"5000\"],[\"kamen ingrad\",\"tomislav radić\",\"velika\",\"stadion kamen ingrada\",\"8000\"],[\"marsonia\",\"milo nižetić\",\"slavonski brod\",\"gradski stadion uz savu\",\"10000\"],[\"osijek\",\"vlado bilić\",\"osijek\",\"stadion gradski vrt\",\"19500\"],[\"pomorac\",\"predrag stilinović\",\"kostrena\",\"stadion žuknica\",\"3000\"],[\"rijeka\",\"ivan katalinić\",\"rijeka\",\"stadion na kantridi\",\"10275\"],[\"slaven belupo\",\"dražen besek\",\"koprivnica\",\"gradski stadion u koprivnici\",\"4000\"],[\"šibenik\",\"vjekoslav lokica\",\"šibenik\",\"stadion šubićevac\",\"8000\"],[\"tšk topolovac\",\"ivica vidović\",\"topolovac\",\"gradski stadion sisak\",\"8000\"],[\"varteks\",\"branko janžek\",\"varaždin\",\"stadion nk varteks\",\"10800\"],[\"zadar\",\"stanko mršić\",\"zadar\",\"stadion stanovi\",\"5860\"],[\"nk zagreb\",\"zlatko kranjčar\",\"zagreb\",\"stadion u kranjčevićevoj ulici\",\"8850\"]]\nQuestion = Is it true that the stadion src mladost is located in topolovac?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    stadiums = get_column_by_name(table_data, \"stadium\")\n    cities = get_column_by_name(table_data, \"home city\")\n    answer = False\n    for stadium, city in zip(stadiums, cities):\n        if \"stadion src mladost\" in stadium.lower() and \"topolovac\" in city.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "f7c0b22c-f63c-43f0-9c8c-c4370e6eb688", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of leverage episodes\ntable_data = [[\"series\",\"season\",\"title\",\"directed by\",\"written by\",\"original air date\",\"us viewers (in millions)\"],[\"14\",\"1\",\"the beantown bailout job\",\"dean devlin\",\"john rogers\",\"july 15 , 2009\",\"3.89\"],[\"15\",\"2\",\"the tap - out job\",\"marc roskin\",\"albert kim\",\"july 22 , 2009\",\"3.05\"],[\"16\",\"3\",\"the order 23 job\",\"rod hardy\",\"chris downey\",\"july 29 , 2009\",\"3.68\"],[\"17\",\"4\",\"the fairy godparents job\",\"jonathan frakes\",\"amy berg\",\"august 5 , 2009\",\"3.69\"],[\"18\",\"5\",\"the three days of the hunter job\",\"marc roskin\",\"melissa glenn & jessica rieder\",\"august 12 , 2009\",\"3.16\"],[\"19\",\"6\",\"the top hat job\",\"peter o'fallon\",\"m scott veach & christine boylan\",\"august 19 , 2009\",\"3.43\"],[\"20\",\"7\",\"the two live crew job\",\"dean devlin\",\"amy berg & john rogers\",\"august 26 , 2009\",\"3.73\"],[\"21\",\"8\",\"the ice man job\",\"jeremiah chechik\",\"christine boylan\",\"september 2 , 2009\",\"3.58\"],[\"22\",\"9\",\"the lost heir job\",\"peter winther\",\"chris downey\",\"september 9 , 2009\",\"3.37\"],[\"23\",\"10\",\"the runway job\",\"mark roskin\",\"albert kim\",\"january 13 , 2010\",\"3.69\"],[\"24\",\"11\",\"the bottle job\",\"jonathan frakes\",\"christine boylan\",\"january 20 , 2010\",\"3.00\"],[\"25\",\"12\",\"the zanzibar marketplace job\",\"jeremiah chechik\",\"melissa glenn & jessica rieder\",\"january 27 , 2010\",\"3.02\"],[\"26\",\"13\",\"the future job\",\"mark roskin\",\"amy berg & chris downey\",\"february 3 , 2010\",\"2.91\"],[\"27\",\"14\",\"the three strikes job\",\"dean devlin\",\"john rogers\",\"february 10 , 2010\",\"2.8\"]]\nQuestion = Is it true that the director , marc roskin , was the only director for season 2?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    directors = get_column_by_name(table_data, \"directed by\")\n    season_2_directors = [director for season, director in zip(seasons, directors) if equal_to(season, \"2\")]\n    answer = len(set(season_2_directors)) == 1 and equal_to(season_2_directors[0], \"marc roskin\")\n    return answer\n\n### END"}
{"id": "d59da710-a287-41bb-bdb5-bb32f19c6caa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 nbl season\ntable_data = [[\"date\",\"home team\",\"score\",\"away team\",\"venue\",\"crowd\",\"box score\",\"report\"],[\"24 february\",\"south dragons\",\"94 - 81\",\"townsville crocodiles\",\"hisense arena\",\"3613\",\"box score\",\"-\"],[\"25 february\",\"melbourne tigers\",\"117 - 99\",\"new zealand breakers\",\"state netball and hockey centre\",\"2998\",\"box score\",\"-\"],[\"26 february\",\"townsville crocodiles\",\"82 - 77\",\"south dragons\",\"townsville entertainment centre\",\"4505\",\"box score\",\"-\"],[\"27 february\",\"new zealand breakers\",\"97 - 103\",\"melbourne tigers\",\"north shore events centre\",\"4500\",\"box score\",\"-\"],[\"28 february\",\"south dragons\",\"101 - 78\",\"townsville crocodiles\",\"hisense arena\",\"3007\",\"box score\",\"-\"]]\nQuestion = Is it true that the townsville crocodiles scored 82 points and the south dragons scored 77 points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    scores = get_column_by_name(table_data, \"score\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    for home_team, score, away_team in zip(home_teams, scores, away_teams):\n        if home_team.lower() == \"townsville crocodiles\" and away_team.lower() == \"south dragons\":\n            answer = equal_to(score, \"82 - 77\")\n            break \n    return answer\n\n### END"}
{"id": "333f435e-41a3-4150-9435-d209a52f1a28", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = electoral history of eliot spitzer\ntable_data = [[\"year\", \"party\", \"governor\", \"lieutenant governor\", \"comptroller\", \"attorney general\", \"us senate\"],[\"1998\", \"democratic\", \"peter vallone\", \"sandra frankel\", \"carl mccall\", \"eliot spitzer\", \"charles schumer\"],[\"1998\", \"liberal\", \"betsy mccaughey ross\", \"jonathan reiter\", \"carl mccall\", \"eliot spitzer\", \"charles schumer\"],[\"2002\", \"democratic\", \"carl mccall\", \"dennis mehiel\", \"alan hevesi\", \"eliot spitzer\", \"(no election)\"],[\"2002\", \"independence\", \"tom golisano\", \"mary donohue\", \"john faso\", \"eliot spitzer\", \"(no election)\"],[\"2006\", \"democratic\", \"eliot spitzer\", \"david paterson\", \"alan hevesi\", \"andrew cuomo\", \"hillary rodham clinton\"],[\"2006\", \"independence\", \"eliot spitzer\", \"david paterson\", \"alan hevesi\", \"jeanine pirro\", \"hillary rodham clinton\"],[\"2006\", \"working families\", \"eliot spitzer\", \"david paterson\", \"alan hevesi\", \"andrew cuomo\", \"hillary rodham clinton\"]]\nQuestion = Is it true that carl mccall was the comptroller along with the working families party only one time?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    comptrollers = get_column_by_name(table_data, \"comptroller\")\n    parties = get_column_by_name(table_data, \"party\")\n    count = 0\n    for comptroller, party in zip(comptrollers, parties):\n        if comptroller.lower() == \"carl mccall\" and party.lower() == \"working families\":\n            count += 1\n    answer = count == 1\n    return answer\n\n### END"}
{"id": "966d38b3-4c52-4b1c-bf82-fd2c9bc5a9af", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = ghost whisperer (season 3)\ntable_data = [[\"no in series\",\"no in season\",\"title\",\"directed by\",\"written by\", \"original air date\",\"us viewers (millions)\"],[\"45\", \"1\", \"the underneath\", \"john gray\", \"john gray\", \"september 28, 2007\", \"8.72\"],[\"46\", \"2\", \"don't try this at home\", \"ian sander\", \"teddy tenenbaum & laurie mccarthy\", \"october 5, 2007\", \"8.91\"],[\"47\", \"3\", \"haunted hero\", \"eric laneuville\", \"breen frazier & karl schaefer\", \"october 12, 2007\", \"8.90\"],[\"48\", \"4\", \"no safe place\", \"peter o'fallon\", \"jeannine renshaw\", \"october 19, 2007\", \"8.95\"],[\"49\", \"5\", \"weight of what was\", \"gloria muzio\", \"pk simonds\", \"october 26, 2007\", \"9.99\"],[\"50\", \"6\", \"double exposure\", \"eric laneuville\", \"laurie mccarthy\", \"november 2, 2007\", \"9.18\"],[\"51\", \"7\", \"unhappy medium\", \"frederick eo toye\", \"breen frazier\", \"november 9, 2007\", \"9.85\"],[\"52\", \"8\", \"bad blood\", \"peter werner\", \"teddy tenenbaum\", \"november 16, 2007\", \"9.56\"],[\"53\", \"9\", \"all ghosts lead to grandview\", \"frederick eo toye\", \"pk simonds & laurie mccarthy\", \"november 23, 2007\", \"9.98\"],[\"54\", \"10\", \"holiday spirit\", \"steven robman\", \"jeannine renshaw\", \"december 14, 2007\", \"9.80\"],[\"55\", \"11\", \"slam (aka slambook)\", \"mark rosman\", \"karl schaefer & daniel sinclair\", \"january 11, 2008\", \"9.86\"],[\"56\", \"12\", \"first do no harm\", \"ian sander\", \"john gray\", \"january 18, 2008\", \"9.91\"],[\"57\", \"13\", \"home but not alone\", \"eric laneuville\", \"pk simonds & laurie mccarthy\", \"april 4, 2008\", \"9.06\"],[\"58\", \"14\", \"the grave sitter\", \"frederick eo toye\", \"john gray\", \"april 11, 2008\", \"8.55\"],[\"59\", \"15\", \"horror show\", \"ian sander\", \"jeannine renshaw\", \"april 25, 2008\", \"8.98\"],[\"60\", \"16\", \"deadbeat dads\", \"gloria muzio\", \"mark b perry\", \"may 2, 2008\", \"9.21\"],[\"61\", \"17\", \"stranglehold (part 1)\", \"eric laneuville\", \"laurie mccarthy & pk simonds\", \"may 9, 2008\", \"8.78\"]]\nQuestion = Is it true that home but not alone is episode number 57 in the series?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_no_in_series = get_column_by_name(table_data, \"no in series\")\n    column_title = get_column_by_name(table_data, \"title\")\n    answer = False\n    for no_in_series, title in zip(column_no_in_series, column_title):\n        if no_in_series == \"57\" and title.lower() == \"home but not alone\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "40864a1f-df2c-45f2-aca3-e98ed1170e24", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mercedes - benz r170\ntable_data = [[\"model\", \"years\", \"engine\", \"power\", \"0 - 100 km / h (62 mph)\", \"top speed\"],[\"slk200\", \"1997 - 2004\", \"2l m111.946 l4\", \"102 kw (136hp)\", \"9.3 seconds\", \"208 km / h (129 mph)\"],[\"slk200k\", \"1997 - 2000\", \"2l m111.943 l4\", \"143 kw (192hp)\", \"6.8 seconds\", \"236 km / h (147 mph)\"],[\"slk200k\", \"2001 - 2004\", \"2l m111.958 l4\", \"122 kw (163hp)\", \"7.4 seconds\", \"223 km / h (138 mph)\"],[\"slk230k\", \"1996 - 2000\", \"2.3l m111.973 l4\", \"144 kw (193hp)\", \"6.9 seconds\", \"231 km / h (143 mph)\"],[\"slk230k\", \"2001 - 2004\", \"2.3l m111.983 l4\", \"147 kw (197hp)\", \"6.8 seconds\", \"240 km / h (148 mph)\"],[\"slk320\", \"2001 - 2004\", \"3.2l m112.947 v6\", \"162 kw (218hp)\", \"6.5 seconds\", \"250 / 276 km / h (155 / 171 mph)\"],[\"slk32 amg\", \"2001 - 2004\", \"3.2l m112.960 v6\", \"264 kw (354hp)\", \"5.2 seconds\", \"250 / 280 / 310 km / h (155 / 174 / 193 mph)\"]]\nQuestion = Is it true that 9.3 seconds is the 0 - 100 km / h (62 mph) acceleration of the model with a top speed of less than 208 km / h (129 mph)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef parse_speed_to_mph(speed_str):\n    speed = int(speed_str.split(' ')[0])\n    return speed\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    speeds = get_column_by_name(table_data, \"top speed\")\n    accelerations = get_column_by_name(table_data, \"0 - 100 km / h (62 mph)\")\n    answer = False\n    for speed, acceleration in zip(speeds, accelerations):\n        parsed_speed = parse_speed_to_mph(speed)\n        if less_than(parsed_speed, 208):\n            if acceleration == \"9.3 seconds\":\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "517f546b-4764-4d7f-8a58-a291a5e404bd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 boston celtics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"74\", \"april 1\", \"chicago\", \"106 - 92\", \"allen (22)\", \"perkins (9)\", \"rondo (10)\", \"united center 22225\", \"59 - 15\"],[\"75\", \"april 2\", \"indiana\", \"92 - 77\", \"garnett (20)\", \"garnett (11)\", \"rondo (6)\", \"td banknorth garden 18624\", \"60 - 15\"],[\"76\", \"april 5\", \"charlotte\", \"101 - 78\", \"powe (22)\", \"powe (9)\", \"rondo (5)\", \"charlotte bobcats arena 19403\", \"61 - 15\"],[\"77\", \"april 8\", \"milwaukee\", \"107 - 104 (ot)\", \"garnett (21)\", \"perkins (10)\", \"pierce (4)\", \"bradley center 15921\", \"62 - 15\"],[\"78\", \"april 9\", \"washington\", \"95 - 109\", \"pierce (28)\", \"garnett (14)\", \"pierce , rondo (7)\", \"verizon center 20173\", \"62 - 16\"],[\"79\", \"april 11\", \"milwaukee\", \"102 - 86\", \"rondo (16)\", \"garnett , posey (8)\", \"rondo (10)\", \"td banknorth garden 18624\", \"63 - 16\"],[\"80\", \"april 12\", \"atlanta\", \"99 - 89\", \"garnett (24)\", \"davis (10)\", \"cassell , rondo (5)\", \"philips arena 20098\", \"64 - 16\"],[\"81\", \"april 14\", \"new york\", \"99 - 93\", \"rondo (23)\", \"rondo (10)\", \"rondo (5)\", \"madison square garden 19763\", \"65 - 16\"],[\"82\", \"april 16\", \"new jersey\", \"105 - 94\", \"powe (27)\", \"powe (11)\", \"cassell (4)\", \"td banknorth garden 18624\", \"66 - 16\"]]\nQuestion = Is it true that in the game on april 14 , rondo had high assists of 5 and high rebounds of 10?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    high_rebounds = get_column_by_name(table_data, \"high rebounds\")\n    high_assists = get_column_by_name(table_data, \"high assists\")\n    for date, high_rebound, high_assist in zip(dates, high_rebounds, high_assists):\n        if \"april 14\" in date.lower():\n            answer = equal_to(high_rebound, \"rondo (10)\") and equal_to(high_assist, \"rondo (5)\")\n            break \n    return answer\n\n### END"}
{"id": "bf154a77-c054-4367-9c16-d2951c89bd3e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of australian football league pre - season and night series premiers\ntable_data = [[\"season\", \"premier\", \"runner up\", \"score\", \"venue\", \"attendance\", \"premiership\"],[\"1984\", \"essendon\", \"sydney swans\", \"13.11 (89) - 5.8 (38)\", \"waverley park\", \"30824\", \"night series\"],[\"1984\", \"essendon\", \"hawthorn\", \"14.21 (105) - 12.9 (81)\", \"mcg\", \"92685\", \"vfl grand final\"],[\"1986\", \"hawthorn\", \"carlton\", \"9.12 (66) - 5.6 (36)\", \"waverley park\", \"19627\", \"night series\"],[\"1986\", \"hawthorn\", \"carlton\", \"16.14 (110) - 9.14 (68)\", \"mcg\", \"101861\", \"vfl grand final\"],[\"1988\", \"hawthorn\", \"geelong\", \"10.10 (70) - 9.13 (67)\", \"waverley park\", \"35803\", \"pre - season cup\"],[\"1988\", \"hawthorn\", \"melbourne\", \"22.20 (152) - 6.20 (56)\", \"mcg\", \"93754\", \"vfl grand final\"],[\"1993\", \"essendon\", \"richmond\", \"14.18 (102) - 11.13 (79)\", \"waverley park\", \"75533\", \"pre - season cup\"],[\"1993\", \"essendon\", \"carlton carlton\", \"20.13 (133) - 13.11 (89)\", \"mcg\", \"96862\", \"afl grand final\"],[\"2000\", \"essendon\", \"north melbourne\", \"16.21 (117) - 11.10 (76)\", \"mcg\", \"56720\", \"pre - season cup\"],[\"2000\", \"essendon\", \"melbourne\", \"19.21 (135) - 11.9 (75)\", \"mcg\", \"96249\", \"afl grand final\"],[\"2009\", \"geelong\", \"collingwood\", \"0.18.19 (127) - 1.6.6 (51)\", \"etihad stadium\", \"37277\", \"pre - season cup\"]]\nQuestion = Is it true that mcg venue was a runner up to essendon?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_runner_up = get_column_by_name(table_data, \"runner up\")\n    answer = \"mcg\" in column_runner_up\n    return answer\n\n### END"}
{"id": "7c25a425-923c-482b-8324-d2c98621b279", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\"],[\"coronation street\", \"who do you think you are\", \"the nature of things\", \"the nature of things\", \"doc zone\", \"doc zone\", \"the national\"],[\"etalk\", \"jeopardy!\", \"csi\", \"csi\", \"grey 's anatomy\", \"grey 's anatomy\", \"er\"],[\"et canada\", \"entertainment tonight\", \"survivor : china\", \"survivor : china\", \"the office\", \"my name is earl\", \"shark\"],[\"wheel of fortune\", \"e2\", \"scrubs\", \"30 rock\", \"don't forget the lyrics!\", \"don't forget the lyrics!\", \"big shots\"],[\"friends\", \"access hollywood\", \"ugly betty\", \"ugly betty\", \"supernatural\", \"supernatural\", \"terminal city\"],[\"the insider\", \"e! news\", \"are you smarter than a 5th grader\", \"are you smarter than a 5th grader\", \"e! movies we love\", \"e! movies we love\", \"e! movies we love\"],[\"virginie\", \"infoman\", \"le moment de vérité\", \"le moment de vérité\", \"tous pour un\", \"tous pour un\", \"le téléjournal\"],[\"la fièvre de la danse\", \"la fièvre de la danse\", \"le banquier\", \"le banquier\", \"taxi 0 - 22\", \"taxi 0 - 22\", \"le tva 22 heures\"],[\"loft story\", \"criss angel\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal du soir\"]]\nQuestion = Is it true that don't forget the lyrics! is on tv at 9:30 on the same channel that had e2 on at 7:30?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    column_730 = get_column_by_index(table_data, 1)\n    column_930 = get_column_by_index(table_data, 5)\n    for show_730, show_930 in zip(column_730, column_930):\n        if show_730.lower() == \"e2\" and show_930.lower() == \"don't forget the lyrics!\":\n            answer = True\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "1d63db25-3dc3-443f-b541-fb2666feb3e5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = cultural interest fraternities and sororities\ntable_data = [[\"letters\", \"organization\", \"nickname\", \"founding date\", \"founding university\", \"type\"],[\"δλφ\", \"delta lambda phi\", \"dlp , deltas' , or lambda men\", \"1986 - 10 - 15\", \"washington , dc\", \"fraternity\"],[\"κψκ\", \"kappa psi kappa\", \"canes , k - psis , diamonds , or angels\", \"2001 - 08 - 17\", \"tallahassee , florida\", \"fraternity\"],[\"οεπ\", \"omicron epsilon pi\", \"the epps\", \"2000 - 12 - 07\", \"tallahassee , florida\", \"sorority\"],[\"γρλ\", \"gamma rho lambda 1\", \"grl\", \"2003 - 08 - 25\", \"tempe , arizona\", \"sorority\"],[\"αλζ\", \"alpha lambda zeta\", \"the regal alphas\", \"2006 - 01 - 09\", \"houston , texas and atlanta , georgia\", \"fraternity\"],[\"καλ\", \"kappa alpha lambda\", \"the kappas\", \"2003 - 10 - 19\", \"clark atlanta university\", \"sorority\"],[\"φαν\", \"phi alpha nu\", \"phi - nomenal gentlewomen\", \"2006 - 07 - 30\", \"charlotte , nc\", \"fraternity\"]]\nQuestion = Is it true that phi - nomenal gentlewomen is the nickname given to a fraternity in charlotte , nc?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    nicknames = get_column_by_name(table_data, \"nickname\")\n    founding_universities = get_column_by_name(table_data, \"founding university\")\n    types = get_column_by_name(table_data, \"type\")\n    answer = False\n    for nickname, founding_university, type in zip(nicknames, founding_universities, types):\n        if \"phi - nomenal gentlewomen\" in nickname.lower() and \"charlotte , nc\" in founding_university.lower() and \"fraternity\" in type.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "ad3fdda9-3d23-4d63-a98a-aa508a636d67", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 intercity football league\ntable_data = [[\"date\", \"team 1\", \"result\", \"team 2\", \"ground\"],[\"november 8 , 2008\", \"taipower\", \"0 - 1\", \"hun sing\", \"chungshan soccer stadium\"],[\"november 8 , 2008\", \"chia cheng hsin\", \"2 - 1\", \"tatung\", \"chungshan soccer stadium\"],[\"november 15 , 2008\", \"tatung\", \"0 - 1\", \"taipower\", \"pailing sport park\"],[\"november 15 , 2008\", \"hun sing\", \"0 - 4\", \"chia cheng hsin\", \"pailing sport park\"],[\"november 22 , 2008\", \"taipower\", \"1 - 0\", \"chia cheng hsin\", \"national pei men senior high school\"],[\"november 22 , 2008\", \"tatung\", \"1 - 1\", \"hun sing\", \"national pei men senior high school\"]]\nQuestion = Is it true that hun sing was team 2 when tatung was team 1 at national pei men senior high school?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    team_1 = get_column_by_name(table_data, \"team 1\")\n    team_2 = get_column_by_name(table_data, \"team 2\")\n    ground = get_column_by_name(table_data, \"ground\")\n    answer = False\n    for t1, t2, g in zip(team_1, team_2, ground):\n        if t1.lower() == \"tatung\" and t2.lower() == \"hun sing\" and g.lower() == \"national pei men senior high school\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "39ef55ed-067b-4363-ae8b-aa325bea8624", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 croatian cup\ntable_data = [[\"round\", \"main date\", \"number of fixtures\", \"clubs\", \"new entries this round\"],[\"preliminary round\", \"27 august 2008\", \"16\", \"48 → 32\", \"none\"],[\"first round\", \"23 and 24 september 2008\", \"16\", \"32 → 16\", \"16\"],[\"second round\", \"29 october 2008\", \"8\", \"16 → 8\", \"none\"],[\"quarter - finals\", \"12 and 26 november 2008\", \"8\", \"8 → 4\", \"none\"],[\"semi - finals\", \"4 and 18 march 2009\", \"4\", \"4 → 2\", \"none\"],[\"final\", \"13 and 28 may 2009\", \"2\", \"2 → 1\", \"none\"]]\nQuestion = Is it true that in the first round , the number of clubs went from 32 → 16?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    clubs = get_column_by_name(table_data, \"clubs\")\n    for round, club in zip(rounds, clubs):\n        if round.lower() == \"first round\":\n            answer = equal_to(club, \"32 → 16\")\n            break \n    return answer\n\n### END"}
{"id": "48cbfac1-d9da-48f5-bec1-ade96e8bb27a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rowing at the 2008 summer olympics - women 's lightweight double sculls\ntable_data = [[\"rank\", \"rowers\", \"country\", \"time\", \"notes\"],[\"1\", \"melanie kok , tracy cameron\", \"canada\", \"7:10.70\", \"fa\"],[\"2\", \"xu dongxiang , chen haixia\", \"china\", \"7:11.59\", \"fa\"],[\"3\", \"chrysi biskitzi , alexandra tsiavou\", \"greece\", \"7:11.99\", \"fa\"],[\"4\", \"renee hykel , jennifer goldsack\", \"united states\", \"7:12.15\", \"fb\"],[\"5\", \"amber halliday , marguerite houston\", \"australia\", \"7:13.80\", \"fb\"],[\"6\", \"misaki kumakura , akiko iwamoto\", \"japan\", \"7:16.13\", \"fb\"]]\nQuestion = Is it true that the united states was ranked better than 4th with a note of fb?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    countries = get_column_by_name(table_data, \"country\")\n    notes = get_column_by_name(table_data, \"notes\")\n    for rank, country, note in zip(ranks, countries, notes):\n        if country.lower() == \"united states\" and note.lower() == \"fb\":\n            answer = less_than(int(rank), 4)\n            break \n    return answer\n\n### END"}
{"id": "971775f1-9931-4b02-9960-ea632861d488", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 melbourne cup\ntable_data = [[\"saddle cloth\", \"horse\", \"trainer\", \"jockey\", \"weight (kg)\", \"barrier\", \"placing\"],[\"1\", \"septimus\", \"aidan o'brien\", \"j p murtagh\", \"58.5\", \"10\", \"18\"],[\"2\", \"master o 'reilly\", \"danny o'brien\", \"v duric\", \"55\", \"6\", \"4\"],[\"3\", \"honolulu\", \"aidan o'brien\", \"colm odonoghue\", \"54.5\", \"24\", \"21\"],[\"4\", \"cest la guerre\", \"john sadler\", \"b prebble\", \"54\", \"5\", \"3\"],[\"5\", \"nom du jeu\", \"murray baker\", \"j lloyd\", \"54\", \"1\", \"8\"],[\"6\", \"yellowstone\", \"jane chapple - hyam\", \"j f egan\", \"54\", \"scr\", \"scr\"],[\"7\", \"zipping\", \"john sadler\", \"d nikolic\", \"54\", \"16\", \"9\"],[\"8\", \"mad rush\", \"luca cumani\", \"damien oliver\", \"53.5\", \"4\", \"7\"],[\"9\", \"ice chariot\", \"ron maund\", \"m rodd\", \"53\", \"22\", \"11\"],[\"10\", \"viewed\", \"bart cummings\", \"b shinn\", \"53\", \"9\", \"1\"],[\"11\", \"littorio\", \"nigel blackiston\", \"s r king\", \"52.5\", \"17\", \"13\"],[\"12\", \"bauer\", \"luca cumani\", \"c w brown\", \"52\", \"13\", \"2\"],[\"13\", \"boundless\", \"stephen mckee\", \"g j childs\", \"52\", \"20\", \"15\"],[\"14\", \"gallopin\", \"danny o'brien\", \"j winks\", \"52\", \"21\", \"dnf\"],[\"15\", \"guyno\", \"lou luciani\", \"c newitt\", \"52\", \"8\", \"12\"],[\"16\", \"zarita\", \"pat hyland\", \"d dunn\", \"52\", \"scr\", \"scr\"],[\"17\", \"newport\", \"paul perry\", \"chris symons\", \"51.5\", \"15\", \"10\"],[\"18\", \"profound beauty\", \"dermot k weld\", \"glen boss\", \"51.5\", \"2\", \"5\"],[\"19\", \"red lord\", \"anthony cummings\", \"nicholas hall\", \"51.5\", \"14\", \"16\"],[\"20\", \"varevees\", \"richard gibson\", \"craig williams\", \"51.5\", \"23\", \"14\"],[\"21\", \"prize lady\", \"graeme sanders\", \"m c sweeney\", \"51\", \"18\", \"17\"],[\"22\", \"alessandro volta\", \"aidan o'brien\", \"w m lordan\", \"50.5\", \"11\", \"20\"],[\"23\", \"barbaricus\", \"danny o'brien\", \"s baster\", \"50.5\", \"3\", \"19\"],[\"24\", \"moatize\", \"bart cummings\", \"ms c lindop\", \"50\", \"19\", \"6\"]]\nQuestion = Is it true that w m lordan rode mad rush?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    horses = get_column_by_name(table_data, \"horse\")\n    jockeys = get_column_by_name(table_data, \"jockey\")\n    answer = False\n    for horse, jockey in zip(horses, jockeys):\n        if horse.lower() == \"mad rush\" and jockey.lower() == \"w m lordan\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "d5c3205f-dbd3-4efa-8834-29922d796ea2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of leverage episodes\ntable_data = [[\"series\",\"season\",\"title\",\"directed by\",\"written by\",\"original air date\",\"us viewers (in millions)\"],[\"14\", \"1\", \"the beantown bailout job\", \"dean devlin\", \"john rogers\", \"july 15 , 2009\", \"3.89\"],[\"15\", \"2\", \"the tap - out job\", \"marc roskin\", \"albert kim\", \"july 22 , 2009\", \"3.05\"],[\"16\", \"3\", \"the order 23 job\", \"rod hardy\", \"chris downey\", \"july 29 , 2009\", \"3.68\"],[\"17\", \"4\", \"the fairy godparents job\", \"jonathan frakes\", \"amy berg\", \"august 5 , 2009\", \"3.69\"],[\"18\", \"5\", \"the three days of the hunter job\", \"marc roskin\", \"melissa glenn & jessica rieder\", \"august 12 , 2009\", \"3.16\"],[\"19\", \"6\", \"the top hat job\", \"peter o'fallon\", \"m scott veach & christine boylan\", \"august 19 , 2009\", \"3.43\"],[\"20\", \"7\", \"the two live crew job\", \"dean devlin\", \"amy berg & john rogers\", \"august 26 , 2009\", \"3.73\"],[\"21\", \"8\", \"the ice man job\", \"jeremiah chechik\", \"christine boylan\", \"september 2 , 2009\", \"3.58\"],[\"22\", \"9\", \"the lost heir job\", \"peter winther\", \"chris downey\", \"september 9 , 2009\", \"3.37\"],[\"23\", \"10\", \"the runway job\", \"mark roskin\", \"albert kim\", \"january 13 , 2010\", \"3.69\"],[\"24\", \"11\", \"the bottle job\", \"jonathan frakes\", \"christine boylan\", \"january 20 , 2010\", \"3.00\"],[\"25\", \"12\", \"the zanzibar marketplace job\", \"jeremiah chechik\", \"melissa glenn & jessica rieder\", \"january 27 , 2010\", \"3.02\"],[\"26\", \"13\", \"the future job\", \"mark roskin\", \"amy berg & chris downey\", \"february 3 , 2010\", \"2.91\"],[\"27\", \"14\", \"the three strikes job\", \"dean devlin\", \"john rogers\", \"february 10 , 2010\", \"2.8\"]]\nQuestion = Is it true that director peter winther directed only season 9 , series 22 and season 1 , series 14 was written by john rogers?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    directors = get_column_by_name(table_data, \"directed by\")\n    writers = get_column_by_name(table_data, \"written by\")\n    series = get_column_by_name(table_data, \"series\")\n    seasons = get_column_by_name(table_data, \"season\")\n    answer = False\n    for director, writer, serie, season in zip(directors, writers, series, seasons):\n        if equal_to(director, \"peter winther\") and equal_to(serie, \"22\") and equal_to(season, \"9\"):\n            answer = True\n        if equal_to(writer, \"john rogers\") and equal_to(serie, \"14\") and equal_to(season, \"1\"):\n            answer = True\n    return answer\n\n### END"}
{"id": "1286f24e-ae93-4af1-9495-493e9749b501", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1949 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"5.13 (43)\", \"richmond\", \"20.12 (132)\", \"glenferrie oval\", \"13000\", \"23 april 1949\"],[\"footscray\", \"12.7 (79)\", \"geelong\", \"9.14 (68)\", \"western oval\", \"15500\", \"23 april 1949\"],[\"south melbourne\", \"12.13 (85)\", \"st kilda\", \"12.10 (82)\", \"lake oval\", \"9000\", \"23 april 1949\"],[\"north melbourne\", \"7.14 (56)\", \"essendon\", \"10.15 (75)\", \"arden street oval\", \"20000\", \"23 april 1949\"],[\"melbourne\", \"12.8 (80)\", \"collingwood\", \"11.16 (82)\", \"mcg\", \"29000\", \"23 april 1949\"],[\"fitzroy\", \"15.16 (106)\", \"carlton\", \"15.15 (105)\", \"brunswick street oval\", \"25000\", \"23 april 1949\"]]\nQuestion = Is it true that south melbourne played at the western oval venue?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    for home_team, venue in zip(home_teams, venues):\n        if home_team.lower() == \"south melbourne\" and venue.lower() == \"western oval\":\n            return True\n    return False\n\n### END"}
{"id": "ee10f59c-a0ed-4415-af16-6cbc5d43deb5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1970 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"carlton\", \"16.14 (110)\", \"st kilda\", \"10.11 (71)\", \"princes park\", \"22988\", \"18 july 1970\"],[\"south melbourne\", \"11.9 (75)\", \"richmond\", \"12.17 (89)\", \"lake oval\", \"25651\", \"18 july 1970\"],[\"north melbourne\", \"13.17 (95)\", \"fitzroy\", \"18.14 (122)\", \"arden street oval\", \"8443\", \"18 july 1970\"],[\"geelong\", \"15.16 (106)\", \"essendon\", \"8.17 (65)\", \"kardinia park\", \"17220\", \"18 july 1970\"],[\"melbourne\", \"7.19 (61)\", \"collingwood\", \"10.16 (76)\", \"mcg\", \"36044\", \"18 july 1970\"],[\"hawthorn\", \"23.9 (147)\", \"footscray\", \"6.12 (48)\", \"vfl park\", \"14151\", \"18 july 1970\"]]\nQuestion = Is it true that st kilda was the away team against carlton?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    answer = \"st kilda\" in away_teams and \"carlton\" in home_teams\n    return answer\n\n### END"}
{"id": "b8e3f3a4-e0dd-41de-9251-b9777f478096", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = new york city mayoral elections\ntable_data = [[\"1953\", \"party\", \"manhattan\", \"the bronx\", \"brooklyn\", \"queens\", \"richmond\", \"total\"],[\"robert f wagner , jr\", \"democratic\", \"236960\", \"206771\", \"339970\", \"207918\", \"31007\", \"1022626\"],[\"robert f wagner , jr\", \"democratic\", \"47.9%\", \"46.2%\", \"46.6%\", \"40.6%\", \"51.8%\", \"1022626\"],[\"harold riegelman\", \"republican\", \"147876\", \"97224\", \"183968\", \"208829\", \"23694\", \"661591\"],[\"harold riegelman\", \"republican\", \"29.9%\", \"21.7%\", \"25.2%\", \"40.8%\", \"39.6%\", \"661591\"],[\"rudolph halley\", \"liberal\", \"76884\", \"112825\", \"162275\", \"73192\", \"3514\", \"428690\"],[\"rudolph halley\", \"independent\", \"7648\", \"9853\", \"13264\", \"7356\", \"295\", \"38416\"],[\"rudolph halley\", \"total\", \"84532\", \"122678\", \"175539\", \"80548\", \"3809\", \"467106\"],[\"rudolph halley\", \"total\", \"17.1%\", \"27.4%\", \"24.1%\", \"15.7%\", \"6.4%\", \"467106\"],[\"clifford t mcavoy\", \"american labor party\", \"14904\", \"13290\", \"17337\", \"7182\", \"332\", \"53045\"],[\"david l weiss\", \"socialist workers\", \"10683\", \"7760\", \"13062\", \"7254\", \"1019\", \"2054\"],[\"nathan karp\", \"industrial gov't\", \"10683\", \"7760\", \"13062\", \"7254\", \"1019\", \"916\"],[\"scattered\", \"scattered\", \"10683\", \"7760\", \"13062\", \"7254\", \"1019\", \"180\"],[\"unrecorded (blank , spoiled , etc)\", \"unrecorded (blank , spoiled , etc)\", \"10683\", \"7760\", \"13062\", \"7254\", \"1019\", \"36630\"],[\"t o t a l\", \"t o t a l\", \"494955\", \"447723\", \"729876\", \"511731\", \"59861\", \"2244146\"]]\nQuestion = Is it true that david l weiss , nathan karp , and unrecorded (blank , spoiled , etc) each totaled 1019 votes for richmond?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    richmond_votes = get_column_by_name(table_data, \"richmond\")\n    parties = get_column_by_name(table_data, \"party\")\n    answer = True\n    for party, votes in zip(parties, richmond_votes):\n        if party.lower() in [\"david l weiss\", \"nathan karp\", \"unrecorded (blank , spoiled , etc)\"]:\n            if not equal_to(votes, \"1019\"):\n                answer = False\n                break\n    return answer\n\n### END"}
{"id": "252e96c0-77ad-4fa4-ad11-9486f638b41e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of venezuelan submissions for the academy award for best foreign language film\ntable_data = [[\"year (ceremony)\", \"original title\", \"film title used in nomination\", \"director\", \"result\"],[\"1978 (50th)\", \"el pez que fuma\", \"el pez que fuma\", \"román chalbaud\", \"not nominated\"],[\"1984 (57th)\", \"la casa de agua\", \"the house of water\", \"jacobo penzo\", \"not nominated\"],[\"1985 (58th)\", \"oriana\", \"oriana\", \"fina torres\", \"not nominated\"],[\"1991 (64th)\", \"jericó\", \"jericho\", \"luis alberto lamata\", \"not nominated\"],[\"1994 (67th)\", \"golpes a mi puerta\", \"knocks at my door\", \"alejandro saderman\", \"not nominated\"],[\"1995 (68th)\", \"sicario\", \"sicario\", \"josé ramón novoa\", \"not nominated\"],[\"1997 (70th)\", \"una vida y dos mandados\", \"one life and two trails\", \"alberto aruelo\", \"not nominated\"],[\"1998 (71st)\", \"rizo\", \"loop\", \"julio sosa\", \"not nominated\"],[\"1999 (72nd)\", \"huelepega : ley de la calle\", \"huelepega\", \"elia schneider\", \"not nominated\"],[\"2000 (73rd)\", \"oro diablo\", \"oro diablo\", \"josé ramón novoa\", \"not nominated\"],[\"2001 (74th)\", \"una casa con vista al mar\", \"a house with a view of the sea\", \"alberto aruelo\", \"not nominated\"],[\"2002 (75th)\", \"la pluma del arcángel\", \"the archangel 's feather\", \"luis manzo\", \"not nominated\"],[\"2003 (76th)\", \"sangrador\", \"sangrador\", \"leonardo henriquez\", \"not nominated\"],[\"2004 (77th)\", \"punto y raya\", \"punto y raya\", \"elia schneider\", \"not nominated\"],[\"2005 (78th)\", \"1888: el extraordinario viaje de santa isabel\", \"1888: the extraordinary voyage of the santa isabel\", \"alfredo anzola\", \"disqualified\"],[\"2006 (79th)\", \"maroa : una niña de la calle\", \"maroa\", \"solveig hoogesteijn\", \"not nominated\"],[\"2007 (80th)\", \"postales de leningrado\", \"postcards from leningrad\", \"mariana rondon\", \"not nominated\"],[\"2008 (81st)\", \"el tinte de la fama\", \"the color of fame\", \"alberto bellame\", \"not nominated\"],[\"2009 (82nd)\", \"libertador morales , el justiciero\", \"libertador morales , el justiciero\", \"efterpi charalambidis\", \"not nominated\"],[\"2010 (83rd)\", \"hermano\", \"hermano\", \"marcel rasquin\", \"not nominated\"],[\"2011 (84th)\", \"the rumble of the stones\", \"el rumor de las piedras\", \"alejandro bellame\", \"not nominated\"],[\"2012 (85th)\", \"rock , paper , scissors\", \"piedra , papel o tijera\", \"hernán jabes\", \"not nominated\"],[\"2013 (86th)\", \"breach in the silence\", \"brecha en el silencio\", \"luis rodríguez , andrés rodríguez\", \"tbd\"]]\nQuestion = Is it true that the nomination title sangrador is associated with the year 2006 (76th)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year (ceremony)\")\n    titles = get_column_by_name(table_data, \"film title used in nomination\")\n    answer = False\n    for year, title in zip(years, titles):\n        if \"2006 (76th)\" in year.lower() and \"sangrador\" in title.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "0f22a7e0-3068-4180-b3a4-92d1c907a021", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of six feet under episodes\ntable_data = [[\"no in series\", \"no in season\", \"title\", \"directed by\", \"written by\", \"original air date\"],[\"14\", \"1\", \"in the game\", \"rodrigo garcã­a\", \"alan ball\", \"march 3 , 2002\"],[\"15\", \"2\", \"out , out brief candle\", \"kathy bates\", \"laurence andries\", \"march 10 , 2002\"],[\"16\", \"3\", \"the plan\", \"rose troche\", \"kate robin\", \"march 17 , 2002\"],[\"17\", \"4\", \"driving mr mossback\", \"michael cuesta\", \"rick cleveland\", \"march 24 , 2002\"],[\"18\", \"5\", \"the invisible woman\", \"jeremy podeswa\", \"bruce eric kaplan\", \"march 31 , 2002\"],[\"19\", \"6\", \"in place of anger\", \"michael engler\", \"christian taylor\", \"april 7 , 2002\"],[\"20\", \"7\", \"back to the garden\", \"dan attias\", \"jill soloway\", \"april 14 , 2002\"],[\"21\", \"8\", \"it 's the most wonderful time of the year\", \"alan taylor\", \"scott buck\", \"april 21 , 2002\"],[\"22\", \"9\", \"someone else 's eyes\", \"michael cuesta\", \"alan ball\", \"april 28 , 2002\"],[\"23\", \"10\", \"the secret\", \"alan poul\", \"bruce eric kaplan\", \"may 5 , 2002\"],[\"24\", \"11\", \"the liar and the whore\", \"miguel arteta\", \"rick cleveland\", \"may 12 , 2002\"],[\"25\", \"12\", \"i'll take you\", \"michael engler\", \"jill soloway\", \"may 19 , 2002\"]]\nQuestion = Is it true that miguel arteta directed the episode called the liar and the whore?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    directors = get_column_by_name(table_data, \"directed by\")\n    answer = False\n    for title, director in zip(titles, directors):\n        if title.lower() == \"the liar and the whore\" and director.lower() == \"miguel arteta\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "dc0465d9-cf7f-4807-9930-36c4893a11db", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1971 nhl amateur draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"15\", \"ken baird\", \"defence\", \"canada\", \"california golden seals\", \"flin flon bombers (wchl)\"],[\"16\", \"henry boucha\", \"centre\", \"united states\", \"detroit red wings\", \"us national development team\"],[\"17\", \"bobby lalonde\", \"centre\", \"canada\", \"vancouver canucks\", \"montreal junior canadiens (oha)\"],[\"18\", \"brian mckenzie\", \"left wing\", \"canada\", \"pittsburgh penguins\", \"st catharines black hawks (oha)\"],[\"19\", \"craig ramsay\", \"left wing\", \"canada\", \"buffalo sabres\", \"peterborough petes (oha)\"],[\"20\", \"larry robinson\", \"defence\", \"canada\", \"montreal canadiens\", \"kitchener rangers (oha)\"],[\"21\", \"rod norrish\", \"left wing\", \"canada\", \"minnesota north stars\", \"regina pats (wchl)\"],[\"22\", \"rick kehoe\", \"right wing\", \"canada\", \"toronto maple leafs\", \"hamilton red wings (oha)\"],[\"23\", \"dave fortier\", \"defence\", \"canada\", \"toronto maple leafs\", \"st catharines black hawks (oha)\"],[\"24\", \"michel deguise\", \"goaltender\", \"canada\", \"montreal canadiens\", \"sorel eperviers (qmjhl)\"],[\"25\", \"terry french\", \"centre\", \"canada\", \"montreal canadiens\", \"ottawa 67 's (oha)\"],[\"26\", \"dave kryskow\", \"left wing\", \"canada\", \"chicago black hawks\", \"edmonton oil kings (wchl)\"],[\"27\", \"tom williams\", \"left wing\", \"canada\", \"new york rangers\", \"hamilton red wings (oha)\"],[\"28\", \"curt ridley\", \"goaltender\", \"canada\", \"boston bruins\", \"portage terriers (mjhl)\"]]\nQuestion = Is it true that dave kryskow plays left wing for the chicago black hawks?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    positions = get_column_by_name(table_data, \"position\")\n    teams = get_column_by_name(table_data, \"nhl team\")\n    answer = False\n    for player, position, team in zip(players, positions, teams):\n        if player.lower() == \"dave kryskow\" and position.lower() == \"left wing\" and team.lower() == \"chicago black hawks\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "f4b83956-453f-4639-961a-1256cad0ca60", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2004 - 05 in scottish football\ntable_data = [[\"date\",\"venue\",\"score\",\"competition\",\"report\"],[\"18 august\",\"hampden park , glasgow (h)\",\"0 - 3\",\"friendly\",\"bbc sport\"],[\"3 september\",\"estadio ciudad de valencia , valencia (a)\",\"1 - 1\",\"friendly\",\"bbc sport\"],[\"8 september\",\"hampden park , glasgow (h)\",\"0 - 0\",\"wcq5\",\"bbc sport\"],[\"9 october\",\"hampden park , glasgow (h)\",\"0 - 1\",\"wcq5\",\"bbc sport\"],[\"13 october\",\"republican stadium , chişinău (a)\",\"1 - 1\",\"wcq5\",\"bbc sport\"],[\"17 november\",\"easter road , edinburgh (h)\",\"1 - 4\",\"friendly\",\"bbc sport\"],[\"26 march\",\"san siro , milan (a)\",\"0 - 2\",\"wcq5\",\"bbc sport\"],[\"4 june\",\"hampden park , glasgow (h)\",\"2 - 0\",\"wcq5\",\"bbc sport\"],[\"8 june\",\"dinamo stadion , minsk (a)\",\"0 - 0\",\"wcq5\",\"bbc sport\"]]\nQuestion = Is it true that the score was 2 - 0 at the hampden park , glasgow (h) venue on 4 june?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    venues = get_column_by_name(table_data, \"venue\")\n    scores = get_column_by_name(table_data, \"score\")\n    for date, venue, score in zip(dates, venues, scores):\n        if date.lower() == \"4 june\" and venue.lower() == \"hampden park , glasgow (h)\":\n            answer = equal_to(score, \"2 - 0\")\n            break \n    return answer\n\n### END"}
{"id": "5e3b835d-4f85-4aba-8d11-2ff5a4ac12bb", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = algeria at the 2008 summer olympics\ntable_data = [[\"athlete\", \"event\", \"round of 32\", \"round of 16\", \"quarterfinals\", \"semifinals\"],[\"abdelhalim ouradi\", \"bantamweight\", \"nevin ( irl ) l 4 - 9\", \"did not advance\", \"did not advance\", \"did not advance\"],[\"abdelkader chadi\", \"featherweight\", \"bye\", \"adi ( tha ) w 7 - 6\", \"kılıç ( tur ) l 6 - 13\", \"did not advance\"],[\"hamza kramou\", \"lightweight\", \"ugás ( cub ) l 3 - 21\", \"did not advance\", \"did not advance\", \"did not advance\"],[\"nabil kassel\", \"middleweight\", \"bye\", \"sutherland ( irl ) l 14 - 21\", \"did not advance\", \"did not advance\"],[\"abdelhafid benchebla\", \"light heavyweight\", \"kumar ( ind ) w 23 - 3\", \"yasser ( egy ) w 13 - 6\", \"zhang xp ( chn ) l 7 - 12\", \"did not advance\"],[\"abdelaziz touilbini\", \"heavyweight\", \"n / a\", \"wilder ( usa ) l 4 - 10\", \"did not advance\", \"did not advance\"]]\nQuestion = Is it true that in the round of 32 , nabil kassel took a bye?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    athletes = get_column_by_name(table_data, \"athlete\")\n    round_of_32 = get_column_by_name(table_data, \"round of 32\")\n    for athlete, round_32 in zip(athletes, round_of_32):\n        if athlete.lower() == \"nabil kassel\":\n            answer = equal_to(round_32, \"bye\")\n            break \n    return answer\n\n### END"}
{"id": "a1a6f4ed-f7e8-4119-a340-1ee287146ecd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = dock jumping\ntable_data = [[\"date\", \"distance\", \"handler\", \"event\", \"location\"],[\"7 july 2000\", \"ft4in (m)\", \"beth gutteridge\", \"espn great outdoor games\", \"lake placid , ny\"],[\"8 july 2001\", \"ft1in (m)\", \"mike wallace\", \"espn great outdoor games\", \"lake placid , ny\"],[\"20 february 2002\", \"ft3in (m)\", \"mike jackson\", \"indianapolis boat , sport & travel show\", \"indianapolis , in\"],[\"1 may 2002\", \"ft4in (m)\", \"john kline\", \"espn2 super retriever series\", \"northfield , mn\"],[\"6 july 2002\", \"ft6in (m)\", \"mike jackson\", \"espn great outdoor games\", \"lake placid , ny\"],[\"7 august 2005\", \"ft5in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"21 august 2005\", \"ft7in (m)\", \"kevin meese\", \"big nickle time cabela 's\", \"hamburg , pa\"],[\"9 october 2005\", \"ft10in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"30 may 2010\", \"ft11.59in (m)\", \"rande murphy\", \"super retriever series crown championship\", \"little rock , ar\"],[\"11 july 2010\", \"ft1in (m)\", \"melissa ness\", \"2010 ukc premier\", \"richmond , in\"],[\"29 may 2011\", \"ft7in (m)\", \"tony lampert\", \"super retriever series crown championship\", \"little rock , ar\"],[\"07 oct 2011\", \"ft11in (m)\", \"tony lampert\", \"david letterman show , october 7 2011\", \"new york , ny\"]]\nQuestion = Is it true that there was more than one events held in northfield , mn?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(value, lst):\n    return lst.count(value)\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"location\")\n    count = count_occurrences(\"northfield , mn\", locations)\n    answer = count > 1\n    return answer\n\n### END"}
{"id": "d1d0977e-af6e-4951-9fe9-4186888115cc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = cultural interest fraternities and sororities\ntable_data = [[\"letters\", \"organization\", \"nickname\", \"founding date\", \"founding university\", \"type\"],[\"δλφ\", \"delta lambda phi\", \"dlp , deltas' , or lambda men\", \"1986 - 10 - 15\", \"washington , dc\", \"fraternity\"],[\"κψκ\", \"kappa psi kappa\", \"canes , k - psis , diamonds , or angels\", \"2001 - 08 - 17\", \"tallahassee , florida\", \"fraternity\"],[\"οεπ\", \"omicron epsilon pi\", \"the epps\", \"2000 - 12 - 07\", \"tallahassee , florida\", \"sorority\"],[\"γρλ\", \"gamma rho lambda 1\", \"grl\", \"2003 - 08 - 25\", \"tempe , arizona\", \"sorority\"],[\"αλζ\", \"alpha lambda zeta\", \"the regal alphas\", \"2006 - 01 - 09\", \"houston , texas and atlanta , georgia\", \"fraternity\"],[\"καλ\", \"kappa alpha lambda\", \"the kappas\", \"2003 - 10 - 19\", \"clark atlanta university\", \"sorority\"],[\"φαν\", \"phi alpha nu\", \"phi - nomenal gentlewomen\", \"2006 - 07 - 30\", \"charlotte , nc\", \"fraternity\"]]\nQuestion = Is it true that the letters φαν were founding on 2006 - 07 - 30?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    letters = get_column_by_name(table_data, \"letters\")\n    founding_dates = get_column_by_name(table_data, \"founding date\")\n    for letter, founding_date in zip(letters, founding_dates):\n        if letter.lower() == \"φαν\":\n            answer = equal_to(founding_date, \"2006 - 07 - 30\")\n            break \n    return answer\n\n### END"}
{"id": "f6137292-bf8e-4c6a-bb47-fa3e91a3a67f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1964 all - ireland senior hurling championship\ntable_data = [[\"rank\", \"player\", \"county\", \"tally\", \"total\", \"opposition\"],[\"1\", \"richard browne\", \"cork\", \"4 - 0\", \"12\", \"galway\"],[\"2\", \"tony forrestal\", \"kilkenny\", \"3 - 2\", \"11\", \"wexford\"],[\"3\", \"pat cronin\", \"clare\", \"2 - 4\", \"10\", \"limerick\"],[\"3\", \"jimmy doyle\", \"tipperary\", \"1 - 7\", \"10\", \"clare\"],[\"3\", \"jimmy doyle\", \"tipperary\", \"0 - 10\", \"10\", \"cork\"],[\"3\", \"jimmy doyle\", \"tipperary\", \"0 - 10\", \"10\", \"kilkenny\"],[\"7\", \"donie nealon\", \"tipperary\", \"3 - 0\", \"9\", \"kilkenny\"],[\"7\", \"philly grimes\", \"waterford\", \"2 - 3\", \"9\", \"cork\"],[\"7\", \"paddy molloy\", \"offaly\", \"1 - 6\", \"9\", \"westmeath\"],[\"10\", \"fran whelan\", \"dublin\", \"2 - 2\", \"8\", \"carlow\"],[\"10\", \"pat harte\", \"cork\", \"2 - 2\", \"8\", \"waterford\"]]\nQuestion = Is it true that there are two ranked players with a tally of 4 - 0?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef count_occurrences(lst, value):\n    return lst.count(value)\n\ndef solution(table_data):\n    tallies = get_column_by_name(table_data, \"tally\")\n    answer = count_occurrences(tallies, \"4 - 0\") == 2\n    return answer\n\n### END"}
{"id": "4379361a-0039-4730-8dc5-88aac1515c9d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of world cups and world championships for juniors and youth\ntable_data = [[\"sport\", \"competition name\", \"competing entities\", \"age groups\", \"held every\"],[\"aquatics\", \"fina world junior swimming championships\", \"individuals\", \"17 or younger\", \"two years\"],[\"athletics\", \"iaaf world junior championships in athletics\", \"individuals\", \"18 - 19\", \"two years\"],[\"athletics\", \"iaaf world youth championships in athletics\", \"individuals\", \"17 or younger\", \"two years\"],[\"badminton\", \"bwf world junior championships\", \"individuals\", \"19 or younger\", \"one year\"],[\"bandy\", \"bandy world championship u - 23\", \"nations\", \"under - 23\", \"two years\"],[\"bandy\", \"bandy world championship u - 19\", \"nations\", \"under - 19\", \"two years\"],[\"bandy\", \"bandy world championship u - 17\", \"nations\", \"under - 17\", \"two years\"],[\"bandy\", \"bandy world championship u - 15\", \"nations\", \"under - 15\", \"two years\"],[\"baseball\", \"world junior baseball championship\", \"nations\", \"under - 18\", \"one year through 2000 , now two years\"],[\"baseball\", \"world youth baseball championship\", \"nations\", \"under - 16\", \"one year through 1998 , two years starting in 2001\"],[\"baseball\", \"big league world series\", \"communities\", \"16 - 18\", \"one year\"],[\"baseball\", \"senior league world series\", \"communities\", \"14 - 16\", \"one year\"],[\"baseball\", \"junior league world series\", \"communities\", \"13 - 15\", \"one year\"],[\"baseball\", \"little league world series\", \"communities\", \"13 or younger\", \"one year\"],[\"basketball\", \"fiba under - 21 world championship\", \"nations\", \"21 or younger\", \"four years until 2005\"],[\"basketball\", \"fiba under - 19 world championship\", \"nations\", \"19 or younger\", \"four years until 2007 , now two years\"],[\"basketball\", \"fiba under - 17 world championship\", \"nations\", \"17 or younger\", \"two years\"],[\"basketball\", \"fiba 3x3 u - 18 world championships\", \"nations\", \"18 or younger\", \"year\"],[\"cricket\", \"u - 19 cricket world cup\", \"nations\", \"19 or younger\", \"two years\"],[\"figure skating\", \"world junior figure skating championships\", \"individuals\", \"13 - 19\", \"one year\"],[\"football (soccer)\", \"fifa u - 20 world cup\", \"nations\", \"20 or younger\", \"two years\"],[\"football (soccer)\", \"fifa u - 17 world cup\", \"nations\", \"17 or younger\", \"two years\"],[\"ice hockey\", \"iihf world u20 championship\", \"nations\", \"20 or younger\", \"year\"],[\"ice hockey\", \"iihf world u18 championships\", \"nations\", \"18 or younger\", \"year\"],[\"lacrosse\", \"under - 19 world lacrosse championships\", \"nations\", \"19 or younger\", \"four years\"],[\"rowing\", \"junior world rowing championships\", \"nations\", \"18 or younger\", \"year\"],[\"rugby union\", \"irb junior world championship\", \"nations\", \"20 or younger\", \"year\"],[\"rugby union\", \"under 19 rugby world championship\", \"nations\", \"19 or younger\", \"year\"],[\"rugby union\", \"under 21 rugby world championship\", \"nations\", \"21 or younger\", \"year\"],[\"speed skating\", \"world junior speed skating championships\", \"individuals and nations\", \"19 or younger\", \"one year\"],[\"speed skating\", \"isu junior world cup speed skating\", \"individuals and nations\", \"19 or younger\", \"one year\"],[\"sailing\", \"isaf youth sailing world championships\", \"nations\", \"under 19 's\", \"annually\"],[\"sailing\", \"isaf classes world championship\", \"held in the optimist , splash , zoom , rs tera etc\", \"19 or younger\", \"various\"],[\"table tennis\", \"world junior table tennis championships\", \"individuals and nations\", \"18 or younger\", \"one year\"],[\"volleyball\", \"men 's junior volleyball world championship\", \"nations\", \"21 or younger\", \"two years\"],[\"volleyball\", \"boys youth volleyball world championship\", \"nations\", \"19 or younger\", \"two years\"]]\nQuestion = Is it true that the table tennis competition usually held every one year?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    sports = get_column_by_name(table_data, \"sport\")\n    held_every = get_column_by_name(table_data, \"held every\")\n    for sport, held in zip(sports, held_every):\n        if sport.lower() == \"table tennis\":\n            answer = equal_to(held, \"one year\")\n            break \n    return answer\n\n### END"}
{"id": "0f088aac-e108-450e-b8e2-80e2f6a4833f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 - 11 new jersey nets season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"34\", \"january 1\", \"minnesota\", \"l 88 - 103 (ot)\", \"sasha vujačić (22)\", \"kris humphries (14)\", \"devin harris (8)\", \"target center 12665\", \"9 - 25\"],[\"35\", \"january 5\", \"chicago\", \"w 96 - 94 (ot)\", \"kris humphries (20)\", \"kris humphries (11)\", \"devin harris (11)\", \"prudential center 15025\", \"10 - 25\"],[\"36\", \"january 7\", \"washington\", \"l 77 - 97 (ot)\", \"jordan farmar , brook lopez (14)\", \"stephen graham (9)\", \"devin harris (3)\", \"verizon center 16017\", \"10 - 26\"],[\"37\", \"january 8\", \"milwaukee\", \"l 92 - 115 (ot)\", \"kris humphries (22)\", \"kris humphries (8)\", \"jordan farmar (10)\", \"prudential center 12898\", \"10 - 27\"],[\"38\", \"january 12\", \"phoenix\", \"l 109 - 118 (ot)\", \"sasha vujačić (19)\", \"travis outlaw (11)\", \"devin harris (15)\", \"us airways center 16334\", \"10 - 28\"],[\"39\", \"january 14\", \"la lakers\", \"l 88 - 100 (ot)\", \"brook lopez (35)\", \"kris humphries (15)\", \"devin harris (8)\", \"staples center 18997\", \"10 - 29\"],[\"40\", \"january 15\", \"portland\", \"l 89 - 96 (ot)\", \"brook lopez (32)\", \"kris humphries (10)\", \"devin harris (6)\", \"rose garden 20441\", \"10 - 30\"],[\"41\", \"january 17\", \"golden state\", \"l 100 - 109 (ot)\", \"brook lopez (20)\", \"kris humphries (10)\", \"devin harris (8)\", \"oracle arena 18563\", \"10 - 31\"],[\"42\", \"january 19\", \"utah\", \"w 103 - 95 (ot)\", \"brook lopez (20)\", \"travis outlaw (8)\", \"devin harris (8)\", \"prudential center 13251\", \"11 - 31\"],[\"43\", \"january 21\", \"detroit\", \"w 89 - 74 (ot)\", \"brook lopez (15)\", \"kris humphries (12)\", \"devin harris (9)\", \"prudential center 13316\", \"12 - 31\"],[\"44\", \"january 22\", \"dallas\", \"l 86 - 87 (ot)\", \"brook lopez (24)\", \"kris humphries (15)\", \"devin harris (11)\", \"prudential center 14051\", \"12 - 32\"],[\"45\", \"january 24\", \"cleveland\", \"w 103 - 101 (ot)\", \"brook lopez (28)\", \"kris humphries (11)\", \"devin harris (10)\", \"prudential center 10197\", \"13 - 32\"],[\"46\", \"january 26\", \"memphis\", \"w 93 - 88 (ot)\", \"anthony morrow (19)\", \"derrick favors (9)\", \"devin harris (9)\", \"prudential center 8866\", \"14 - 32\"],[\"47\", \"january 28\", \"indiana\", \"l 92 - 124 (ot)\", \"brook lopez (28)\", \"travis outlaw (6)\", \"devin harris (9)\", \"conseco fieldhouse 11337\", \"14 - 33\"],[\"48\", \"january 29\", \"milwaukee\", \"l 81 - 91 (ot)\", \"brook lopez (26)\", \"kris humphries (10)\", \"devin harris (16)\", \"bradley center 17173\", \"14 - 34\"]]\nQuestion = Is it true that devin harris (9) got high assists for team in indiana?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    high_assists = get_column_by_name(table_data, \"high assists\")\n    answer = False\n    for team, high_assist in zip(teams, high_assists):\n        if team.lower() == \"indiana\" and high_assist.lower() == \"devin harris (9)\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "a49197c9-398c-4ded-bab2-8a130852f39a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = vern schuppan\ntable_data = [[\"year\", \"chassis\", \"engine\", \"start\", \"finish\"],[\"1976\", \"eagle\", \"offy\", \"17th\", \"18th\"],[\"1977\", \"wildcat\", \"offy\", \"dnq\", \"dnq\"],[\"1979\", \"wildcat\", \"dgs\", \"22nd\", \"21st\"],[\"1981\", \"mclaren\", \"cosworth\", \"18th\", \"3rd\"],[\"1982\", \"penske\", \"cosworth\", \"dnq\", \"dnq\"]]\nQuestion = Is it true that in 1976 , 17th was the starter?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    starts = get_column_by_name(table_data, \"start\")\n    for year, start in zip(years, starts):\n        if year == \"1976\":\n            answer = equal_to(start, \"17th\")\n            break \n    return answer\n\n### END"}
{"id": "1de19e0b-e0b4-469e-9eec-1e74cf1b73f1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = jewelpet universe\ntable_data = [[\"name\",\"sweet\",\"species\",\"gender\",\"attribute\",\"birthday\",\"media debut\",\"voice actor\"],[\"sakuran ( さくらん )\",\"sakuramochi\",\"brown bear\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"rina hidaka\"],[\"melorina ( メロリーナ )\",\"melonpan\",\"poodle\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"asuka ōgame (sweets dance princess)\"],[\"eclan ( エクレン )\",\"eclair\",\"rex rabbit\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"chiwa saito (sweets dance princess)\"],[\"macaronia ( マカロニア )\",\"macaron\",\"holland lop\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"miyu matsuki (sweets dance princess)\"],[\"donadona ( ドナドナ )\",\"donut\",\"golden hamster\",\"male\",\"magical red\",\"unknown\",\"jps ep 38\",\"saki fujita (sweets dance princess)\"],[\"honey ( ハニー )\",\"honey waffles\",\"flying squirrel\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"megumi mukai (sweets dance princess)\"],[\"purinki ( プリンキー )\",\"crème caramel\",\"common squirrel monkey\",\"female\",\"magical green\",\"unknown\",\"jps ep 38\",\"mana matsufuji (sweets dance princess)\"],[\"chocolat ( ショコラ )\",\"chocolate ice cream\",\"asian black bear\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"marie miyake (sweets dance princess)\"],[\"maco ( マコ )\",\"macaron\",\"roborovski hamster\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"mako\"],[\"kaco ( カコ )\",\"macaron\",\"roborovski hamster\",\"male\",\"magical green\",\"unknown\",\"jps ep 38\",\"asuka ōgame\"],[\"roco ( ロコ )\",\"macaron\",\"roborovski hamster\",\"female\",\"magical red\",\"unknown\",\"jps ep 38\",\"marie miyake\"],[\"coron ( コロン )\",\"macaron\",\"roborovski hamster\",\"male\",\"magical red\",\"unknown\",\"jps ep 38\",\"saki fujita\"]]\nQuestion = Is it true that the voice actor saki fujita is associated with the sweet called macaron?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    sweets = get_column_by_name(table_data, \"sweet\")\n    voice_actors = get_column_by_name(table_data, \"voice actor\")\n    answer = False\n    for sweet, voice_actor in zip(sweets, voice_actors):\n        if \"macaron\" in sweet.lower() and \"saki fujita\" in voice_actor.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "9081a064-a382-47e8-a188-1eaafd1b9c56", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2011 the dominion tankard\ntable_data = [[\"skip (club)\", \"w\", \"l\", \"pf\", \"pa\", \"ends won\", \"ends lost\", \"blank ends\", \"stolen ends\"],[\"peter corner (brampton)\", \"8\", \"2\", \"69\", \"54\", \"41\", \"36\", \"8\", \"11\"],[\"glenn howard (coldwater)\", \"8\", \"2\", \"79\", \"35\", \"40\", \"22\", \"8\", \"11\"],[\"greg balsdon (loonie)\", \"7\", \"3\", \"80\", \"57\", \"46\", \"37\", \"5\", \"12\"],[\"john epping (donalda)\", \"7\", \"3\", \"76\", \"64\", \"43\", \"41\", \"5\", \"10\"],[\"mark bice (sarnia)\", \"6\", \"4\", \"70\", \"76\", \"45\", \"44\", \"8\", \"7\"],[\"chris gardner (renfrew)\", \"5\", \"5\", \"73\", \"72\", \"47\", \"41\", \"7\", \"16\"],[\"dale matchett (bradford)\", \"4\", \"6\", \"57\", \"75\", \"35\", \"42\", \"7\", \"7\"],[\"mark kean (annandale)\", \"3\", \"7\", \"53\", \"67\", \"43\", \"35\", \"12\", \"8\"],[\"howard rajala (rideau)\", \"3\", \"7\", \"67\", \"71\", \"43\", \"48\", \"5\", \"9\"],[\"nick rizzo (brantford)\", \"3\", \"7\", \"56\", \"74\", \"35\", \"42\", \"4\", \"5\"]]\nQuestion = Is it true that 72 is the pa , when the pf is 73?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    pf = get_column_by_name(table_data, \"pf\")\n    pa = get_column_by_name(table_data, \"pa\")\n    for pf_value, pa_value in zip(pf, pa):\n        if equal_to(pf_value, \"73\") and equal_to(pa_value, \"72\"):\n            return True\n    return False\n\n### END"}
{"id": "04d9a1e0-5282-4c68-9bfc-1a2208deeb84", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of tallest buildings in houston\ntable_data = [[\"name\", \"street address\", \"years as tallest\", \"height ft / m\", \"floors\"],[\"lomas & nettleton building\", \"201 main street\", \"1904 - 1908\", \"n / a\", \"8\"],[\"711 main\", \"711 main street\", \"1908 - 1910\", \"134 / 41\", \"10\"],[\"806 main\", \"806 main street\", \"1910 - 1926\", \"302 / 92\", \"23\"],[\"magnolia hotel\", \"1100 texas avenue\", \"1926 - 1927\", \"325 / 99\", \"22\"],[\"niels esperson building\", \"808 travis street\", \"1927 - 1929\", \"410 / 125\", \"32\"],[\"jpmorgan chase building\", \"712 main street\", \"1929 - 1963\", \"428 / 131\", \"36\"],[\"exxon building\", \"800 bell avenue\", \"1963 - 1971\", \"607 / 185\", \"44\"],[\"one shell plaza\", \"910 louisiana street\", \"1971 - 1980\", \"714 / 218\", \"50\"],[\"enterprise plaza\", \"1100 louisiana street\", \"1980 - 1982\", \"756 / 230\", \"55\"],[\"jpmorgan chase tower\", \"600 travis street\", \"1982 - present\", \"1002 / 305\", \"75\"]]\nQuestion = Is it true that the building at 800 bell avenue has over 44 floors?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    street_addresses = get_column_by_name(table_data, \"street address\")\n    floors = get_column_by_name(table_data, \"floors\")\n    for street_address, floor in zip(street_addresses, floors):\n        if street_address.lower() == \"800 bell avenue\":\n            answer = greater(int(floor), 44)\n            break \n    return answer\n\n### END"}
{"id": "5f88934c-defb-4e85-aab7-7ef293d0b767", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1955 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"melbourne\", \"12.22 (94)\", \"south melbourne\", \"4.7 (31)\", \"mcg\", \"19484\", \"20 august 1955\"],[\"collingwood\", \"7.17 (59)\", \"fitzroy\", \"7.7 (49)\", \"victoria park\", \"19270\", \"20 august 1955\"],[\"carlton\", \"10.6 (66)\", \"geelong\", \"8.12 (60)\", \"princes park\", \"22482\", \"20 august 1955\"],[\"st kilda\", \"6.7 (43)\", \"richmond\", \"19.23 (137)\", \"junction oval\", \"13000\", \"20 august 1955\"],[\"north melbourne\", \"5.5 (35)\", \"footscray\", \"14.11 (95)\", \"arden street oval\", \"20000\", \"20 august 1955\"],[\"hawthorn\", \"7.8 (50)\", \"essendon\", \"13.14 (92)\", \"glenferrie oval\", \"24500\", \"20 august 1955\"]]\nQuestion = Is it true that richmond was the away team in 20 august 1955?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    away_teams = get_column_by_name(table_data, \"away team\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for away_team, date in zip(away_teams, dates):\n        if \"richmond\" in away_team.lower() and \"20 august 1955\" in date.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "3bdecd84-04f1-435e-998b-2a8064b2bab0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2005 cfl draft\ntable_data = [[\"pick\", \"cfl team\", \"player\", \"position\", \"college\"],[\"45\", \"calgary stampeders\", \"brett ralph\", \"wr\", \"alberta\"],[\"46\", \"ottawa renegades\", \"lenard semajuste\", \"fb\", \"adams state\"],[\"47\", \"winnipeg blue bombers\", \"ryan bisson\", \"ol\", \"northwood\"],[\"48\", \"saskatchewan roughriders\", \"ryan gottselig\", \"dl\", \"saskatchewan\"],[\"49\", \"montreal alouettes (via edmonton)\", \"adam eckert\", \"wr\", \"dickinson state\"],[\"50\", \"hamilton tiger - cats\", \"andrew paopao\", \"dl\", \"san jose state\"],[\"51\", \"montreal alouettes\", \"olivier manigat\", \"ol\", \"columbia\"],[\"52\", \"bc lions\", \"karl ortmanns\", \"ol\", \"acadia\"],[\"53\", \"toronto argonauts\", \"ian forde\", \"rb\", \"waterloo\"]]\nQuestion = Is it true that karl ortmanns from acadia went to the saskatchewan roughriders?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    teams = get_column_by_name(table_data, \"cfl team\")\n    colleges = get_column_by_name(table_data, \"college\")\n    for player, team, college in zip(players, teams, colleges):\n        if player.lower() == \"karl ortmanns\" and college.lower() == \"acadia\":\n            answer = equal_to(team.lower(), \"saskatchewan roughriders\")\n            break \n    return answer\n\n### END"}
{"id": "1446fdbf-1dc0-496a-b262-61375e2cea3d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"d 47 +\", \"d 46 +\", \"d 45 +\", \"d 44 +\", \"d 43 o\", \"d 42 o\", \"d 41\", \"d 40\"],[\"d 8\", \"d 9\", \"d 10\", \"d 11\", \"d 12\", \"d 13\", \"d 14\", \"d 15\"],[\"d 27\", \"d 26\", \"d 25\", \"d 24\", \"d 23\", \"d 22\", \"d 21\", \"d 20\"],[\"d 28\", \"d 29\", \"d 30\", \"d 31\", \"d 32\", \"d 33\", \"d 34\", \"d 35\"],[\"d 47 +\", \"d 46 +\", \"d 45 +\", \"d 44 +\", \"d 43 o\", \"d 42 o\", \"d 41\", \"d 40\"],[\"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\", \"↓ plurality ( + vice president 's tie - breaking vote)\"],[\"r 48 +\", \"r 47 +\", \"r 46 +\", \"r 45 +\", \"r 44 +\", \"r 43 +\", \"r 42 o\", \"r 41 o\"],[\"r 29\", \"r 30\", \"r 31\", \"r 32\", \"r 33\", \"r 34\", \"r 35\", \"r 36\"],[\"r 28\", \"r 27\", \"r 26\", \"r 25\", \"r 24\", \"r 23\", \"r 22\", \"r 21\"],[\"r 9\", \"r 10\", \"r 11\", \"r 12\", \"r 13\", \"r 14\", \"r 15\", \"r 16\"],[\"r 8\", \"r 7\", \"r 6\", \"r 5\", \"r 4\", \"r 3\", \"r 2\", \"r 1\"]]\nQuestion = Is it true that the d44 which has d 42 o of d 9 is d 31?\n\n### RESPONSE:\ndef get_cell_value(table, row_index, column_index):\n    return table[row_index][column_index]\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    d44_value = get_cell_value(table_data, 1, 3)\n    d42o_value = get_cell_value(table_data, 1, 5)\n    d9_value = get_cell_value(table_data, 1, 1)\n    d31_value = get_cell_value(table_data, 3, 3)\n    answer = equal_to(d44_value, d31_value) and equal_to(d42o_value, d9_value)\n    return answer\n\n### END"}
{"id": "4044a212-9dda-4e9d-b1d1-309a7264b079", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date (yyyy - mm - dd)\", \"time ( utc )\", \"latitude\", \"longitude\", \"depth\", \"magnitude\"],[\"2010 - 04 - 13\", \"21:40:00\", \"33.183 degree n\", \"96.623 degree e\", \"-\", \"5.0 (m w )\"],[\"2010 - 04 - 13\", \"23:49:39\", \"33.224 degree n\", \"96.666 degree e\", \"-\", \"6.9 (m w )\"],[\"2010 - 04 - 14\", \"00:01:17\", \"32.875 degree n\", \"96.999 degree e\", \"-\", \"5.3 (m w )\"],[\"2010 - 04 - 14\", \"00:12:25\", \"33.159 degree n\", \"96.580 degree e\", \"-\", \"5.2 (m w )\"],[\"2010 - 04 - 14\", \"01:25:15\", \"33.179 degree n\", \"96.448 degree e\", \"-\", \"5.8 (m w )\"],[\"2010 - 04 - 14\", \"03:15:46\", \"33.151 degree n\", \"96.701 degree e\", \"-\", \"4.7 (m w )\"],[\"2010 - 04 - 14\", \"12:19:36\", \"33.077 degree n\", \"96.846 degree e\", \"-\", \"4.1 (m w )\"]]\nQuestion = Is it true that the date 2010 - 04 - 13 recorded magnitude of 5.2 (m w ) at utc time of 03:15:46 with 33.179° n latitude?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date (yyyy - mm - dd)\")\n    times = get_column_by_name(table_data, \"time ( utc )\")\n    latitudes = get_column_by_name(table_data, \"latitude\")\n    magnitudes = get_column_by_name(table_data, \"magnitude\")\n    for date, time, latitude, magnitude in zip(dates, times, latitudes, magnitudes):\n        if date == \"2010 - 04 - 13\" and time == \"03:15:46\" and latitude == \"33.179 degree n\" and magnitude == \"5.2 (m w )\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "4368f29f-5867-4191-bbba-f449ea708b18", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 uci track cycling world cup classics\ntable_data = [[\"rank\",\"team\",\"round1\",\"round2\",\"round3\",\"round4\",\"round5\",\"total points\"],[\"1\",\"germany\",\"92\",\"56\",\"62\",\"52\",\"74\",\"336\"],[\"2\",\"netherlands\",\"41\",\"60\",\"17\",\"72\",\"99\",\"289\"],[\"3\",\"great britain\",\"133\",\"36\",\"15\",\"32\",\"57\",\"273\"],[\"4\",\"france\",\"24\",\"25\",\"65\",\"64\",\"71\",\"249\"],[\"5\",\"spain\",\"49\",\"66\",\"78\",\"17\",\"31\",\"241\"],[\"6\",\"china\",\"41\",\"38\",\"23\",\"108\",\"31\",\"241\"],[\"7\",\"team toshiba\",\"12\",\"98\",\"38\",\"29\",\"35\",\"212\"],[\"8\",\"russia\",\"45\",\"55\",\"51\",\"37\",\"11\",\"199\"],[\"9\",\"ukraine\",\"51\",\"67\",\"22\",\"30\",\"24\",\"194\"]]\nQuestion = Is it true that in round 4 , toshiba scored a 29?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    round4_scores = get_column_by_name(table_data, \"round4\")\n    for team, round4_score in zip(teams, round4_scores):\n        if team.lower() == \"team toshiba\":\n            answer = equal_to(round4_score, \"29\")\n            break \n    return answer\n\n### END"}
{"id": "8955c03c-023e-4a58-a975-dba2ccc3ff43", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sanya\ntable_data = [[\"english name\", \"simplified\", \"traditional\", \"pinyin\", \"area\", \"population\", \"density\"],[\"hexi district\", \"河西区\", \"河西區\", \"héxī qū\", \"10\", \"134026\", \"13403\"],[\"hedong district\", \"河东区\", \"河東區\", \"hédōng qū\", \"35\", \"147944\", \"4227\"],[\"haitangwan\", \"海棠湾镇\", \"海棠灣鎮\", \"hǎitángwān zhèn\", \"254\", \"44617\", \"176\"],[\"jiyang\", \"吉阳镇\", \"吉陽鎮\", \"jíyáng zhèn\", \"199\", \"92316\", \"464\"],[\"fenghuang\", \"凤凰镇\", \"鳳凰鎮\", \"fènghuáng zhèn\", \"487\", \"66801\", \"137\"],[\"yacheng\", \"崖城镇\", \"崖城鎮\", \"yáchéng zhèn\", \"383\", \"74779\", \"195\"],[\"tianya\", \"天涯镇\", \"天涯鎮\", \"tiānyá zhèn\", \"269\", \"34934\", \"130\"],[\"yucai\", \"育才镇\", \"育才鎮\", \"yùcái zhèn\", \"315\", \"17515\", \"56\"],[\"nantian farm\", \"国营南田农场\", \"國營南田農場\", \"guóyíng nántián nóngchǎng\", \"nd\", \"24280\", \"nd\"],[\"nanxin farm\", \"国营南新农场\", \"國營南新農場\", \"guóyíng nánxīn nóngchǎng\", \"nd\", \"16801\", \"nd\"],[\"licai farm\", \"国营立才农场\", \"國營立才農場\", \"guóyíng lìcái nóngchǎng\", \"nd\", \"16659\", \"nd\"]]\nQuestion = Is it true that the fènghuáng zhèn pinyin has the are of 487 and population of 66801?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    pinyins = get_column_by_name(table_data, \"pinyin\")\n    areas = get_column_by_name(table_data, \"area\")\n    populations = get_column_by_name(table_data, \"population\")\n    for pinyin, area, population in zip(pinyins, areas, populations):\n        if pinyin.lower() == \"fènghuáng zhèn\":\n            answer = equal_to(area, \"487\") and equal_to(population, \"66801\")\n            break \n    return answer\n\n### END"}
{"id": "7c369590-721c-4628-b2b2-687c6a41d6e2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1970 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"footscray\", \"10.23 (83)\", \"north melbourne\", \"11.15 (81)\", \"western oval\", \"13118\", \"8 august 1970\"],[\"essendon\", \"12.16 (88)\", \"fitzroy\", \"14.10 (94)\", \"windy hill\", \"13572\", \"8 august 1970\"],[\"richmond\", \"9.10 (64)\", \"melbourne\", \"18.10 (118)\", \"mcg\", \"25158\", \"8 august 1970\"],[\"south melbourne\", \"16.7 (103)\", \"hawthorn\", \"13.8 (86)\", \"lake oval\", \"17437\", \"8 august 1970\"],[\"collingwood\", \"13.23 (101)\", \"carlton\", \"2.12 (24)\", \"victoria park\", \"39959\", \"8 august 1970\"],[\"st kilda\", \"12.16 (88)\", \"geelong\", \"5.7 (37)\", \"vfl park\", \"29667\", \"8 august 1970\"]]\nQuestion = Is it true that collingwood was teh home team on august 8 , 1970?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for home_team, date in zip(home_teams, dates):\n        if \"8 august 1970\" in date.lower() and \"collingwood\" in home_team.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "7b832325-dbdc-4f23-a9f8-475f6644e7fa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 fc schalke 04 season\ntable_data = [[\"nat\", \"name\", \"moving from\", \"type\", \"transfer window\", \"ends\", \"transfer fee\"],[\"ned\", \"engelaar\", \"twente\", \"transfer\", \"summer\", \"2011\", \"6 m\"],[\"per\", \"farfán\", \"psv\", \"transfer\", \"summer\", \"2012\", \"10 m\"],[\"mar\", \"amsif\", \"youth system\", \"promotion\", \"summer\", \"2010\", \"n / a\"],[\"geo\", \"kenia\", \"youth system\", \"promotion\", \"summer\", \"2012\", \"n / a\"],[\"per\", \"zambrano\", \"youth system\", \"promotion\", \"summer\", \"2012\", \"n / a\"]]\nQuestion = Is it true that the nationality of geo is the promotion type?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    nat = get_column_by_name(table_data, \"nat\")\n    type = get_column_by_name(table_data, \"type\")\n    for nat_value, type_value in zip(nat, type):\n        if equal_to(nat_value, \"geo\") and equal_to(type_value, \"promotion\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "62b50982-5a43-40d6-8093-68d75aecf789", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the howie carr show\ntable_data = [[\"calls\", \"frequency\", \"branding\", \"format\", \"timeslot\", \"group owner\"],[\"wgan\", \"560 khz\", \"news radio 560 wgan\", \"news / talk\", \"live 3p - 6p\", \"saga communications\"],[\"whyn\", \"560 khz\", \"news / talk 560 whyn\", \"news / talk\", \"live 3p - 7p\", \"clear channel communications\"],[\"wvmt\", \"620 khz\", \"news / talk 620 wvmt\", \"news / talk\", \"live 3p - 7p\", \"sison broadcasting\"],[\"wrko\", \"680 khz\", \"am 680 wrko\", \"news / talk\", \"live 3p - 7p\", \"entercom\"],[\"wcrn\", \"830 khz\", \"wcrn 830 true talk\", \"news / talk\", \"live 3p - 7p\", \"carter broadcasting\"],[\"wkbk\", \"1290 khz\", \"1290 wkbk w281au 104.1\", \"news / talk\", \"live 3p - 6p\", \"saga communications\"],[\"wegp\", \"1390 khz\", \"wegp 1390 am - the talk of the county\", \"news / talk\", \"live 3p - 6p\", \"decelles / media , inc\"],[\"wxtk\", \"95.1 mhz\", \"news radio 95 wxtk\", \"news / talk\", \"live 3p - 7p\", \"qantam of cape cod , llc\"],[\"wntk - fm\", \"99.7 mhz\", \"wntk talk radio\", \"news / talk\", \"live 3p - 6p\", \"koor communications\"],[\"wuvr\", \"1490 khz\", \"wntk talk radio\", \"news / talk\", \"live 3p - 6p\", \"koor communications\"],[\"wvom - fm / wvqm\", \"103.9 / 101.3 mhz\", \"the voice of maine\", \"news / talk\", \"live 3p - 7p\", \"blueberry broadcasting\"]]\nQuestion = Is it true that the timeslot of calls of wrko is always live 3p - 6p?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    calls = get_column_by_name(table_data, \"calls\")\n    timeslots = get_column_by_name(table_data, \"timeslot\")\n    for call, timeslot in zip(calls, timeslots):\n        if call.lower() == \"wrko\":\n            answer = equal_to(timeslot, \"live 3p - 6p\")\n            break \n    return answer\n\n### END"}
{"id": "5fda0e39-51e6-4e8e-9ecc-328381677b27", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = inbee park\ntable_data = [[\"no\",\"date\",\"tournament\",\"winning score\",\"to par\",\"margin of victory\",\"runner (s) - up\",\"winners share\"],[\"1\",\"29 jun 2008\",\"us women 's open\",\"72 + 69 + 71 + 71 = 283\",\"- 9\",\"4 strokes\",\"helen alfredsson\",\"560000\"],[\"2\",\"29 jul 2012\",\"evian masters\",\"71 + 64 + 70 + 66 = 271\",\"- 17\",\"2 strokes\",\"karrie webb stacy lewis\",\"487500\"],[\"3\",\"14 oct 2012\",\"sime darby lpga malaysia\",\"69 + 68 + 65 + 67 = 269\",\"- 15\",\"2 strokes\",\"choi na - yeon\",\"285000\"],[\"4\",\"24 feb 2013\",\"honda lpga thailand\",\"67 + 71 + 71 + 67 = 276\",\"- 12\",\"1 stroke\",\"ariya jutanugarn\",\"225000\"],[\"5\",\"7 apr 2013\",\"kraft nabisco championship\",\"70 + 67 + 67 + 69 = 273\",\"- 15\",\"4 strokes\",\"ryu so - yeon\",\"300000\"],[\"6\",\"28 apr 2013\",\"north texas lpga shootout\",\"67 + 70 + 67 + 67 = 271\",\"- 13\",\"1 stroke\",\"carlota ciganda\",\"195000\"],[\"7\",\"9 jun 2013\",\"lpga championship\",\"72 + 68 + 68 + 75 = 283\",\"- 5\",\"playoff\",\"catriona matthew\",\"337500\"],[\"8\",\"23 jun 2013\",\"walmart nw arkansas championship\",\"69 + 65 + 67 = 201\",\"- 12\",\"playoff\",\"ryu so - yeon\",\"300000\"]]\nQuestion = Is it true that evian masters was the number 2 tournament?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    column_no = get_column_by_name(table_data, \"no\")\n    column_tournament = get_column_by_name(table_data, \"tournament\")\n    answer = \"evian masters\" in column_tournament and \"2\" in column_no\n    return answer\n\n### END"}
{"id": "f3f18aa1-6a13-4ba5-99e8-60a824431bdc", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2010 veikkausliiga\ntable_data = [[\"club\", \"location\", \"stadium\", \"capacity\", \"manager\", \"kitmaker\"],[\"ac oulu\", \"oulu\", \"castrén\", \"4000\", \"juha malinen\", \"umbro\"],[\"fc honka\", \"espoo\", \"tapiolan urheilupuisto\", \"6000\", \"mika lehkosuo\", \"kappa\"],[\"fc inter\", \"turku\", \"veritas stadion\", \"9372\", \"job dragtsma\", \"nike\"],[\"fc lahti\", \"lahti\", \"lahden stadion\", \"15000\", \"ilkka mäkelä\", \"umbro\"],[\"ff jaro\", \"jakobstad\", \"jakobstads centralplan\", \"5000\", \"alexei eremenko sr\", \"errea\"],[\"haka\", \"valkeakoski\", \"tehtaan kenttä\", \"3516\", \"sami ristilä\", \"umbro\"],[\"hjk\", \"helsinki\", \"sonera stadium\", \"10770\", \"antti muurinen\", \"adidas\"],[\"ifk mariehamn\", \"mariehamn\", \"wiklöf holding arena\", \"4000\", \"pekka lyyski\", \"puma\"],[\"jjk\", \"jyväskylä\", \"harjun stadion\", \"3000\", \"kari martonen\", \"legea\"],[\"kups\", \"kuopio\", \"kuopion keskuskenttä\", \"5000\", \"esa pekonen\", \"puma\"],[\"mypa\", \"anjalankoski\", \"saviniemi\", \"4167\", \"janne lindberg\", \"puma\"],[\"tampere united\", \"tampere\", \"ratina stadion\", \"17000\", \"ari hjelm\", \"puma\"],[\"tps\", \"turku\", \"veritas stadion\", \"9372\", \"marko rajamäki\", \"puma\"]]\nQuestion = Is it true that there are more than 5 managers where the kitmaker is puma?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    kitmakers = get_column_by_name(table_data, \"kitmaker\")\n    managers = get_column_by_name(table_data, \"manager\")\n    puma_managers = [manager for manager, kitmaker in zip(managers, kitmakers) if kitmaker.lower() == \"puma\"]\n    answer = greater(len(puma_managers), 5)\n    return answer\n\n### END"}
{"id": "7670ff21-0481-48be-a675-4651b91ac83b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = comparison of e - book formats\ntable_data = [[\"format\", \"filename extension\", \"image support\", \"interactivity support\", \"word wrap support\", \"open standard\"],[\"djvu\", \"djvu\", \"yes\", \"no\", \"no\", \"yes\"],[\"epub (idpf)\", \"epub\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"fictionbook\", \"fb2\", \"yes\", \"no\", \"yes\", \"yes\"],[\"html\", \"html\", \"yes\", \"no\", \"yes\", \"yes\"],[\"kindle\", \"azw\", \"yes\", \"yes\", \"yes\", \"no\"],[\"microsoft reader\", \"lit\", \"yes\", \"no\", \"yes\", \"no\"],[\"mobipocket\", \"prc , mobi\", \"yes\", \"yes\", \"yes\", \"no\"],[\"multimedia ebook\", \"exe\", \"yes\", \"yes\", \"no\", \"yes\"],[\"newton book\", \"pkg\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ereader\", \"pdb\", \"yes\", \"no\", \"yes\", \"no\"],[\"plain text\", \"txt\", \"no\", \"no\", \"yes\", \"yes\"],[\"plucker\", \"pdb\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"portable document format\", \"pdf\", \"yes\", \"yes\", \"yes though not all readers implement support\", \"yes\"],[\"postscript\", \"ps\", \"yes\", \"no\", \"no\", \"yes\"],[\"tome raider\", \"tr2 , tr3\", \"yes\", \"no\", \"yes\", \"no\"],[\"openxps\", \"oxps , xps\", \"yes\", \"no\", \"no\", \"yes\"]]\nQuestion = Is it true that the fictionbook and html formats do not support interactivity , but supports word wrap , image support and has an open standard?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    formats = get_column_by_name(table_data, \"format\")\n    image_supports = get_column_by_name(table_data, \"image support\")\n    interactivity_supports = get_column_by_name(table_data, \"interactivity support\")\n    word_wrap_supports = get_column_by_name(table_data, \"word wrap support\")\n    open_standards = get_column_by_name(table_data, \"open standard\")\n    answer = False\n    for format, image_support, interactivity_support, word_wrap_support, open_standard in zip(formats, image_supports, interactivity_supports, word_wrap_supports, open_standards):\n        if format.lower() in [\"fictionbook\", \"html\"]:\n            if equal_to(image_support, \"yes\") and equal_to(interactivity_support, \"no\") and equal_to(word_wrap_support, \"yes\") and equal_to(open_standard, \"yes\"):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "5a205a9d-8ebd-4291-a050-9ce4ee134e6c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of americas records in swimming\ntable_data = [[\"event\", \"time\", \"nationality\", \"date\", \"meet\", \"location\"],[\"50 m freestyle\", \"20.91\", \"brazil\", \"18 december 2009\", \"brazilian championships\", \"são paulo, brazil\"],[\"100 m freestyle\", \"46.91\", \"brazil\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m freestyle\", \"1:42.96\", \"united states\", \"12 august 2008\", \"olympic games\", \"beijing, china\"],[\"400 m freestyle\", \"3:42.78\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"800 m freestyle\", \"7:41.86\", \"canada\", \"27 july 2011\", \"world championships\", \"shanghai, china\"],[\"1500 m freestyle\", \"14:39.63\", \"canada\", \"4 august 2012\", \"olympic games\", \"london, united kingdom\"],[\"50 m backstroke\", \"24.33\", \"united states\", \"5 december 2008\", \"dutch swim cup\", \"eindhoven, netherlands\"],[\"100 m backstroke\", \"51.94\", \"united states\", \"8 july 2009\", \"us championships\", \"indianapolis, united states\"],[\"200 m backstroke\", \"1:51.92\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m breaststroke\", \"26.76\", \"brazil\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"100 m breaststroke\", \"58.96\", \"united states\", \"26 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m breaststroke\", \"2:07.42\", \"united states\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m butterfly\", \"22.76\", \"brazil\", \"26 april 2012\", \"maria lenk trophy\", \"rio de janeiro, brazil\"],[\"100 m butterfly\", \"49.82\", \"united states\", \"1 august 2009\", \"world championships\", \"rome, italy\"],[\"200 m butterfly\", \"1:51.51\", \"united states\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m individual medley\", \"1:54.00\", \"united states\", \"28 july 2011\", \"world championships\", \"shanghai, china\"],[\"400 m individual medley\", \"4:03.84\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"4100 m freestyle relay\", \"3:08.24\", \"united states\", \"11 august 2008\", \"olympic games\", \"beijing, china\"],[\"4200 m freestyle relay\", \"6:58.55\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"4100 m medley relay\", \"3:27.28\", \"united states\", \"2 august 2009\", \"world championships\", \"rome, italy\"]]\nQuestion = Is it true that the wold championships for the 200 m backstroke were on 1 august 2009?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    dates = get_column_by_name(table_data, \"date\")\n    meets = get_column_by_name(table_data, \"meet\")\n    for event, date, meet in zip(events, dates, meets):\n        if event.lower() == \"200 m backstroke\" and meet.lower() == \"world championships\":\n            answer = equal_to(date, \"1 august 2009\")\n            break \n    return answer\n\n### END"}
{"id": "5387ca76-ae8c-449b-a778-6403bac5bec7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = saori obata\ntable_data = [[\"date\", \"tournament\", \"surface\", \"opponent in the final\", \"score\"],[\"november 18 , 2001\", \"port pirie , australia\", \"hard\", \"pavlina nola\", \"6 - 1 , 6 - 2\"],[\"november 25 , 2001\", \"nuriootpa , australia\", \"hard\", \"yoon - jeong cho\", \"6 - 4 , 6 - 1\"],[\"may 11 , 2003\", \"fukuoka , japan\", \"clay\", \"maria elena camerin\", \"2 - 6 , 6 - 3 , 6 - 3\"],[\"april 3 , 2005\", \"augusta , united states\", \"hard\", \"victoria azarenka\", \"6 - 2 , 6 - 2\"],[\"may 8 , 2005\", \"gifu , japan\", \"hard\", \"shiho hisamatsu\", \"6 - 1 , 2 - 6 , 6 - 4\"]]\nQuestion = Is it true that the score with opponent maria elena camerin was 2 - 6 , 6 - 3 , 6 - 3?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent in the final\")\n    scores = get_column_by_name(table_data, \"score\")\n    for opponent, score in zip(opponents, scores):\n        if opponent.lower() == \"maria elena camerin\":\n            answer = equal_to(score, \"2 - 6 , 6 - 3 , 6 - 3\")\n            break \n    return answer\n\n### END"}
{"id": "3febf642-f368-4cad-8a2f-d3a552d6219a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = royal canadian mint numismatic coins (2000s)\ntable_data = [[\"year\", \"animal\", \"artist\", \"finish\", \"mintage\", \"issue price\"],[\"2007\", \"ruby - throated hummingbird\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2007\", \"red breasted nuthatch\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2008\", \"downy woodpecker\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2008\", \"northern cardinal\", \"arnold nogy\", \"specimen (with selective colouring)\", \"25000\", \"24.95\"],[\"2010\", \"american goldfinch\", \"arnold nogy (reverse) , susanna blunt (obverse)\", \"specimen (with selective colouring)\", \"14000\", \"24.95\"]]\nQuestion = Is it true that an artist by the name of arnold nogy , had been the creater of all coins on the chart before 2010?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef string_in_string(str1, str2):\n    return str1 in str2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    artists = get_column_by_name(table_data, \"artist\")\n    answer = True\n    for year, artist in zip(years, artists):\n        if int(year) < 2010:\n            if not string_in_string(\"arnold nogy\", artist.lower()):\n                answer = False\n                break\n    return answer\n\n### END"}
{"id": "6f34bf3f-32cd-406c-ba1e-09148b95fbec", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = cultural interest fraternities and sororities\ntable_data = [[\"letters\", \"organization\", \"nickname\", \"founding date\", \"founding university\", \"type\"],[\"δλφ\", \"delta lambda phi\", \"dlp , deltas' , or lambda men\", \"1986 - 10 - 15\", \"washington , dc\", \"fraternity\"],[\"κψκ\", \"kappa psi kappa\", \"canes , k - psis , diamonds , or angels\", \"2001 - 08 - 17\", \"tallahassee , florida\", \"fraternity\"],[\"οεπ\", \"omicron epsilon pi\", \"the epps\", \"2000 - 12 - 07\", \"tallahassee , florida\", \"sorority\"],[\"γρλ\", \"gamma rho lambda 1\", \"grl\", \"2003 - 08 - 25\", \"tempe , arizona\", \"sorority\"],[\"αλζ\", \"alpha lambda zeta\", \"the regal alphas\", \"2006 - 01 - 09\", \"houston , texas and atlanta , georgia\", \"fraternity\"],[\"καλ\", \"kappa alpha lambda\", \"the kappas\", \"2003 - 10 - 19\", \"clark atlanta university\", \"sorority\"],[\"φαν\", \"phi alpha nu\", \"phi - nomenal gentlewomen\", \"2006 - 07 - 30\", \"charlotte , nc\", \"fraternity\"]]\nQuestion = Is it true that 2001 - 08 - 17 was the founding date of the organization with the letters κψκ?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    letters = get_column_by_name(table_data, \"letters\")\n    founding_dates = get_column_by_name(table_data, \"founding date\")\n    for letter, founding_date in zip(letters, founding_dates):\n        if letter.lower() == \"κψκ\":\n            answer = equal_to(founding_date, \"2001 - 08 - 17\")\n            break \n    return answer\n\n### END"}
{"id": "836ae216-440d-4a1c-b00d-8dc623741bbf", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 boston celtics season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"74\", \"april 1\", \"chicago\", \"106 - 92\", \"allen (22)\", \"perkins (9)\", \"rondo (10)\", \"united center 22225\", \"59 - 15\"],[\"75\", \"april 2\", \"indiana\", \"92 - 77\", \"garnett (20)\", \"garnett (11)\", \"rondo (6)\", \"td banknorth garden 18624\", \"60 - 15\"],[\"76\", \"april 5\", \"charlotte\", \"101 - 78\", \"powe (22)\", \"powe (9)\", \"rondo (5)\", \"charlotte bobcats arena 19403\", \"61 - 15\"],[\"77\", \"april 8\", \"milwaukee\", \"107 - 104 (ot)\", \"garnett (21)\", \"perkins (10)\", \"pierce (4)\", \"bradley center 15921\", \"62 - 15\"],[\"78\", \"april 9\", \"washington\", \"95 - 109\", \"pierce (28)\", \"garnett (14)\", \"pierce , rondo (7)\", \"verizon center 20173\", \"62 - 16\"],[\"79\", \"april 11\", \"milwaukee\", \"102 - 86\", \"rondo (16)\", \"garnett , posey (8)\", \"rondo (10)\", \"td banknorth garden 18624\", \"63 - 16\"],[\"80\", \"april 12\", \"atlanta\", \"99 - 89\", \"garnett (24)\", \"davis (10)\", \"cassell , rondo (5)\", \"philips arena 20098\", \"64 - 16\"],[\"81\", \"april 14\", \"new york\", \"99 - 93\", \"rondo (23)\", \"rondo (10)\", \"rondo (5)\", \"madison square garden 19763\", \"65 - 16\"],[\"82\", \"april 16\", \"new jersey\", \"105 - 94\", \"powe (27)\", \"powe (11)\", \"cassell (4)\", \"td banknorth garden 18624\", \"66 - 16\"]]\nQuestion = Is it true that game 79 was on april 11?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    games = get_column_by_name(table_data, \"game\")\n    for date, game in zip(dates, games):\n        if game == \"79\":\n            answer = equal_to(date, \"april 11\")\n            break \n    return answer\n\n### END"}
{"id": "cf838367-4f56-4a33-abfc-e2c969ec3461", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of make it or break it episodes\ntable_data = [[\"series\",\"season\",\"title\",\"directed by\",\"written by\",\"original air date\",\"us viewers (in millions)\"],[\"21\",\"1\",\"friends close , enemies closer\",\"patrick norris\",\"joanna johnson\",\"june 28 , 2010\",\"1.83\"],[\"22\",\"2\",\"all or nothing\",\"fred gerber\",\"kerry lenhart & john j sakmar\",\"july 5 , 2010\",\"1.72\"],[\"23\",\"3\",\"battle of the flexes\",\"j miller tobin\",\"amy turner\",\"july 13 , 2010\",\"1.56\"],[\"24\",\"4\",\"and the rocky goes to\",\"bethany rooney\",\"holly sorensen\",\"july 20 , 2010\",\"1.46\"],[\"25\",\"5\",\"i won't dance , don't ask me\",\"david paymer\",\"michael gans & richard register\",\"july 27 , 2010\",\"1.66\"],[\"26\",\"6\",\"party gone out of bounds\",\"felix alcala\",\"joanna johnson\",\"august 3 , 2010\",\"1.75\"],[\"27\",\"7\",\"what are you made of\",\"glenn l steelman\",\"holly sorensen\",\"august 10 , 2010\",\"1.56\"],[\"28\",\"8\",\"rock bottom\",\"chris grismer\",\"liz maccie\",\"august 17 , 2010\",\"1.30\"],[\"29\",\"9\",\"if only\",\"david paymer\",\"michael gans & richard register\",\"august 24 , 2010\",\"1.42\"],[\"30\",\"10\",\"the edge of the worlds\",\"chris grismer\",\"kerry lenhart & john j sakmar\",\"august 31 , 2010\",\"1.44\"],[\"31\",\"11\",\"the new normal\",\"michael lange\",\"holly sorensen\",\"march 28 , 2011\",\"2.06\"],[\"32\",\"12\",\"free people\",\"fred gerber\",\"joanna johnson\",\"april 4 , 2011\",\"1.69\"],[\"33\",\"13\",\"the buddy system\",\"glenn l steelman\",\"amy turner\",\"april 11 , 2011\",\"1.64\"],[\"34\",\"14\",\"life or death\",\"david paymer\",\"michael gans & richard register\",\"april 18 , 2011\",\"1.58\"],[\"35\",\"15\",\"hungary heart\",\"rod hardy\",\"kerry lenhart & john j sakmar\",\"april 25 , 2011\",\"1.64\"],[\"36\",\"16\",\"requiem for a dream\",\"michael schultz\",\"holly sorenson\",\"may 2 , 2011\",\"1.65\"],[\"37\",\"17\",\"to thine own self be true\",\"john behring\",\"liz maccie\",\"may 9 , 2011\",\"1.51\"],[\"38\",\"18\",\"dog eat dog\",\"chris grismer\",\"michael gans & richard register\",\"may 16 , 2011\",\"1.64\"],[\"39\",\"19\",\"what lies beneath\",\"david paymer\",\"joanna johnson\",\"may 23 , 2011\",\"1.49\"]]\nQuestion = Is it true that holly sorensen is the writer for the show titled and the rocky goes to?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    writers = get_column_by_name(table_data, \"written by\")\n    answer = False\n    for title, writer in zip(titles, writers):\n        if \"and the rocky goes to\" in title.lower():\n            if \"holly sorensen\" in writer.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "6156630f-aaa6-405c-965e-69f371e08ad3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = south carolina gamecocks men 's soccer\ntable_data = [[\"rank\", \"player\", \"goals\", \"assists\", \"points\", \"years\"],[\"1\", \"doug allison\", \"63\", \"32\", \"158\", \"1984 - 87\"],[\"2\", \"chris faklaris\", \"55\", \"14\", \"124\", \"1991 - 94\"],[\"3\", \"clint mathis\", \"53\", \"15\", \"121\", \"1994 - 97\"],[\"4\", \"clark brisson\", \"36\", \"26\", \"98\", \"1987 - 90\"],[\"5\", \"dan ratcliff\", \"37\", \"20\", \"94\", \"1983 - 86\"],[\"6\", \"jordan quinn\", \"37\", \"13\", \"87\", \"1999 - 02\"],[\"7\", \"andrew coggins\", \"33\", \"15\", \"81\", \"1988 - 91\"],[\"8\", \"brian winstead\", \"33\", \"14\", \"80\", \"1978 - 79\"],[\"9\", \"billy baumhoff\", \"22\", \"34\", \"78\", \"1991 - 94\"],[\"9\", \"rob smith\", \"19\", \"40\", \"78\", \"1991 - 94\"],[\"11\", \"john harr\", \"28\", \"20\", \"76\", \"1997 - 99\"],[\"12\", \"arni arnthorsson\", \"22\", \"25\", \"69\", \"1984 - 87\"],[\"13\", \"dave goodchild\", \"28\", \"12\", \"68\", \"1979 - 82\"],[\"14\", \"rubãn tufiã±o\", \"18\", \"30\", \"66\", \"1989 - 92\"],[\"15\", \"joey worthen\", \"25\", \"15\", \"65\", \"1998 - 01\"]]\nQuestion = Is it true that there were no years when a player scored 36 goals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    goals = get_column_by_name(table_data, \"goals\")\n    answer = \"36\" in goals\n    return not answer\n\n### END"}
{"id": "89157cf7-f575-4123-9834-defb3f088ec5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of all that episodes\ntable_data = [[\"season\", \"series\", \"episode title\", \"original air date\", \"nick prod\"],[\"1\", \"139\", \"lillix\", \"october 11 , 2003\", \"941\"],[\"2\", \"140\", \"nodesha\", \"october 18 , 2003\", \"942\"],[\"3\", \"141\", \"da razkalz cru\", \"october 25 , 2003\", \"943\"],[\"4\", \"142\", \"third eye blind\", \"november 1 , 2003\", \"944\"],[\"5\", \"143\", \"fefe dobson\", \"november 22 , 2003\", \"945\"],[\"7\", \"145\", \"drake bell\", \"january 10 , 2004\", \"947\"],[\"8\", \"146\", \"ok go\", \"january 24 , 2004\", \"948\"],[\"9\", \"147\", \"britney spears / nick cannon\", \"january 31 , 2004\", \"949\"],[\"10\", \"148\", \"brittany snow / wakefield\", \"february 7 , 2004\", \"950\"],[\"11\", \"149\", \"boomkat\", \"february 14 , 2004\", \"951\"],[\"12\", \"150\", \"nick lachey\", \"april 17 , 2004\", \"952\"],[\"13\", \"151\", \"avril lavigne\", \"june 12 , 2004\", \"953\"],[\"14\", \"152\", \"substitute jack\", \"june 19 , 2004\", \"954\"],[\"15\", \"153\", \"aaron carter\", \"june 26 , 2004\", \"955\"]]\nQuestion = Is it true that nick production 945 , fefe dobson , originally aired on november 22 , 2003?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    nick_prods = get_column_by_name(table_data, \"nick prod\")\n    episode_titles = get_column_by_name(table_data, \"episode title\")\n    original_air_dates = get_column_by_name(table_data, \"original air date\")\n    for nick_prod, episode_title, original_air_date in zip(nick_prods, episode_titles, original_air_dates):\n        if nick_prod == \"945\" and episode_title.lower() == \"fefe dobson\" and original_air_date.lower() == \"november 22 , 2003\":\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "6979aba0-2887-437d-ad50-ef739740a914", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1994 nhl entry draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"261\", \"per gustafsson\", \"defence\", \"sweden\", \"florida panthers\", \"hv71 (sweden)\"],[\"262\", \"jeremy stevenson\", \"left wing\", \"united states\", \"mighty ducks of anaheim\", \"sault ste marie greyhounds (ohl)\"],[\"263\", \"rob mara\", \"left wing\", \"united states\", \"chicago blackhawks\", \"belmont hill high school (hs - massachusetts)\"],[\"264\", \"jason issel\", \"left wing\", \"canada\", \"winnipeg jets\", \"prince albert raiders (whl)\"],[\"265\", \"steve nimigon\", \"left wing\", \"canada\", \"hartford whalers\", \"niagara falls thunder (ohl)\"],[\"266\", \"ladislav benysek\", \"defence\", \"czech republic\", \"edmonton oilers\", \"olomouc hc (czech republic)\"],[\"267\", \"jamie butt\", \"left wing\", \"canada\", \"ny rangers\", \"tacoma rockets (whl)\"],[\"268\", \"brian white\", \"defence\", \"united states\", \"tampa bay lightning\", \"arlington catholic high school (hs - massachusetts)\"],[\"269\", \"mike hanson\", \"centre\", \"united states\", \"new jersey devils\", \"minot high school (hs - north dakota)\"],[\"270\", \"jan lipiansky\", \"forward\", \"slovakia\", \"philadelphia flyers\", \"slovan bratislava (slovakia)\"],[\"271\", \"david beauregard\", \"left wing\", \"canada\", \"san jose sharks\", \"st hyacinthe lasers (qmjhl)\"],[\"272\", \"dick tarnstrom\", \"defence\", \"sweden\", \"new york islanders\", \"aik (sweden)\"],[\"273\", \"robert longpre\", \"centre\", \"canada\", \"vancouver canucks\", \"medicine hat tigers (whl)\"],[\"274\", \"antti tormanen\", \"left wing\", \"finland\", \"ottawa senators\", \"jokerit (finland)\"],[\"275\", \"sergei tertyshny\", \"defence\", \"russia\", \"washington capitals\", \"chelyabinsk traktor (russia)\"],[\"276\", \"scott fankhouser\", \"goaltender\", \"united states\", \"st louis blues\", \"university of massachusetts lowell (ncaa)\"],[\"277\", \"shayne wright\", \"defence\", \"canada\", \"buffalo sabres\", \"owen sound platers (ohl)\"],[\"278\", \"ross parsons\", \"defence\", \"canada\", \"montreal canadiens\", \"regina pats (whl)\"],[\"279\", \"pavel torgayev\", \"centre\", \"russia\", \"calgary flames\", \"tps (finland)\"],[\"280\", \"chris szysky\", \"right wing\", \"canada\", \"dallas stars\", \"swift current broncos (whl)\"],[\"281\", \"andrei yakhanov\", \"defence\", \"russia\", \"boston bruins\", \"ufa salavat yulayev (russia)\"],[\"282\", \"doug nolan\", \"defence\", \"united states\", \"toronto maple leafs\", \"catholic memorial high school (hs - massachusetts)\"],[\"283\", \"toivo suursoo\", \"left wing\", \"estonia\", \"detroit red wings\", \"krylya sovetov moscow (russia)\"],[\"284\", \"brian leitza\", \"goaltender\", \"united states\", \"pittsburgh penguins\", \"sioux city musketeers (ushl)\"],[\"285\", \"steven low\", \"defence\", \"canada\", \"quebec nordiques\", \"sherbrooke faucons (qmjhl)\"],[\"286\", \"kim johnsson\", \"defence\", \"sweden\", \"new york rangers\", \"malmã if (sweden)\"]]\nQuestion = Is it true that per gustafsson played for hv71 in sweden?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    teams = get_column_by_name(table_data, \"college / junior / club team\")\n    answer = False\n    for player, team in zip(players, teams):\n        if \"per gustafsson\" in player.lower() and \"hv71 (sweden)\" in team.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "ccee04d6-c5eb-40d2-80b1-516f5decea0e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2005 - 06 coventry city f.c. season\ntable_data = [[\"name\",\"championship\",\"league cup\",\"fa cup\",\"total\"],[\"gary mcsheffrey\",\"10\",\"1\",\"0\",\"11\"],[\"michael doyle\",\"9\",\"0\",\"0\",\"9\"],[\"richard duffy\",\"7\",\"0\",\"1\",\"8\"],[\"robert page\",\"8\",\"0\",\"0\",\"8\"],[\"dennis wise\",\"7\",\"0\",\"0\",\"7\"],[\"dele adebola\",\"4\",\"0\",\"1\",\"5\"],[\"don hutchison\",\"4\",\"0\",\"1\",\"5\"],[\"stern john\",\"4\",\"1\",\"0\",\"5\"],[\"marcus hall\",\"3\",\"1\",\"0\",\"4\"],[\"matt heath\",\"4\",\"0\",\"0\",\"4\"],[\"james scowcroft\",\"3\",\"0\",\"1\",\"4\"],[\"adrian williams\",\"4\",\"0\",\"0\",\"4\"],[\"stephen hughes\",\"2\",\"0\",\"1\",\"3\"],[\"richard shaw\",\"3\",\"0\",\"0\",\"3\"],[\"willo flood\",\"2\",\"0\",\"0\",\"2\"],[\"claus bech jãrgensen\",\"2\",\"0\",\"0\",\"2\"],[\"isaac osbourne\",\"1\",\"1\",\"0\",\"2\"],[\"kevin thornton\",\"2\",\"0\",\"0\",\"2\"],[\"andrew whing\",\"2\",\"0\",\"0\",\"2\"]]\nQuestion = Is it true that richard duffy / dele adebola and don hutchison are the names that has a championship smaller than 2 , and a total smaller than 4 , and an fa cup larger than 0?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef smaller(num1, num2):\n    return num1 < num2\n\ndef larger(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    championships = get_column_by_name(table_data, \"championship\")\n    totals = get_column_by_name(table_data, \"total\")\n    fa_cups = get_column_by_name(table_data, \"fa cup\")\n    answer = False\n    for name, championship, total, fa_cup in zip(names, championships, totals, fa_cups):\n        if name.lower() in [\"richard duffy\", \"dele adebola\", \"don hutchison\"]:\n            if smaller(int(championship), 2) and smaller(int(total), 4) and larger(int(fa_cup), 0):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "3f8d11f4-97f0-460c-99ba-d294c7f6115e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 honda indy 300\ntable_data = [[\"driver\", \"team\", \"laps\", \"time / retired\", \"grid\"],[\"cristiano da matta\", \"newman - haas racing\", \"65\", \"1:51:47.260\", \"3\"],[\"michael andretti\", \"team green\", \"65\", \"+ 5.8 secs\", \"6\"],[\"alex tagliani\", \"forsythe racing\", \"65\", \"+ 7.5 secs\", \"7\"],[\"gil de ferran\", \"team penske\", \"65\", \"+ 20.9 secs\", \"2\"],[\"kenny brack\", \"team rahal\", \"65\", \"+ 22.6 secs\", \"13\"],[\"jimmy vasser\", \"patrick racing\", \"65\", \"+ 24.7 secs\", \"10\"],[\"michel jourdain , jr\", \"bettenhausen racing\", \"65\", \"+ 39.5 secs\", \"16\"],[\"christian fittipaldi\", \"newman - haas racing\", \"65\", \"+ 40.5 secs\", \"15\"],[\"max papis\", \"team rahal\", \"65\", \"+ 42.6 secs\", \"14\"],[\"memo gidley\", \"chip ganassi racing\", \"65\", \"+ 42.9 secs\", \"23\"],[\"patrick carpentier\", \"forsythe racing\", \"65\", \"+ 46.7 secs\", \"9\"],[\"shinji nakano\", \"fernández racing\", \"65\", \"+ 46.9 secs\", \"18\"],[\"alex barron\", \"arciero - blair racing\", \"65\", \"+ 46.9 secs\", \"26\"],[\"paul tracy\", \"team green\", \"65\", \"+ 62.6 secs\", \"4\"],[\"scott dixon\", \"pacwest racing\", \"65\", \"+ 72.0 secs\", \"8\"],[\"tora takagi\", \"walker racing\", \"65\", \"+ 81.8 secs\", \"20\"],[\"tony kanaan\", \"mo nunn racing\", \"65\", \"+ 82.0 secs\", \"3\"],[\"bryan herta\", \"forsythe racing\", \"65\", \"+ 82.4 secs\", \"22\"],[\"adrián fernández\", \"fernández racing\", \"65\", \"+ 100.3 secs\", \"17\"],[\"hélio castroneves\", \"team penske\", \"64\", \"+ 1 lap\", \"11\"],[\"bruno junqueira\", \"chip ganassi racing\", \"56\", \"contact\", \"21\"],[\"roberto moreno\", \"patrick racing\", \"54\", \"mechanical\", \"1\"],[\"dario franchitti\", \"team green\", \"35\", \"mechanical\", \"5\"],[\"maurício gugelmin\", \"pacwest racing\", \"34\", \"mechanical\", \"25\"],[\"oriol servià\", \"sigma autosport\", \"10\", \"mechanical\", \"12\"],[\"casey mears\", \"mo nunn racing\", \"0\", \"contact\", \"24\"]]\nQuestion = Is it true that the time or retired that tony kanaan has is + 72.0 seconds?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    times = get_column_by_name(table_data, \"time / retired\")\n    for driver, time in zip(drivers, times):\n        if driver.lower() == \"tony kanaan\":\n            answer = equal_to(time, \"+ 72.0 secs\")\n            break \n    return answer\n\n### END"}
{"id": "7fbfc0d5-efe3-4002-b081-c47e5f9764cf", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = comparison of e - book formats\ntable_data = [[\"format\", \"filename extension\", \"image support\", \"interactivity support\", \"word wrap support\", \"open standard\"],[\"djvu\", \"djvu\", \"yes\", \"no\", \"no\", \"yes\"],[\"epub (idpf)\", \"epub\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"fictionbook\", \"fb2\", \"yes\", \"no\", \"yes\", \"yes\"],[\"html\", \"html\", \"yes\", \"no\", \"yes\", \"yes\"],[\"kindle\", \"azw\", \"yes\", \"yes\", \"yes\", \"no\"],[\"microsoft reader\", \"lit\", \"yes\", \"no\", \"yes\", \"no\"],[\"mobipocket\", \"prc , mobi\", \"yes\", \"yes\", \"yes\", \"no\"],[\"multimedia ebook\", \"exe\", \"yes\", \"yes\", \"no\", \"yes\"],[\"newton book\", \"pkg\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"ereader\", \"pdb\", \"yes\", \"no\", \"yes\", \"no\"],[\"plain text\", \"txt\", \"no\", \"no\", \"yes\", \"yes\"],[\"plucker\", \"pdb\", \"yes\", \"yes\", \"yes\", \"yes\"],[\"portable document format\", \"pdf\", \"yes\", \"yes\", \"yes though not all readers implement support\", \"yes\"],[\"postscript\", \"ps\", \"yes\", \"no\", \"no\", \"yes\"],[\"tome raider\", \"tr2 , tr3\", \"yes\", \"no\", \"yes\", \"no\"],[\"openxps\", \"oxps , xps\", \"yes\", \"no\", \"no\", \"yes\"]]\nQuestion = Is it true that the formats of fictionbook and html support word wrap and open standard , but do not have interactivity support?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    formats = get_column_by_name(table_data, \"format\")\n    interactivity_supports = get_column_by_name(table_data, \"interactivity support\")\n    word_wrap_supports = get_column_by_name(table_data, \"word wrap support\")\n    open_standards = get_column_by_name(table_data, \"open standard\")\n    answer = False\n    for format, interactivity_support, word_wrap_support, open_standard in zip(formats, interactivity_supports, word_wrap_supports, open_standards):\n        if format.lower() in [\"fictionbook\", \"html\"]:\n            if equal_to(interactivity_support, \"no\") and equal_to(word_wrap_support, \"yes\") and equal_to(open_standard, \"yes\"):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "18c9f7bb-a40f-410a-84cc-cc273f43ba9b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2001 honda indy 300\ntable_data = [[\"driver\", \"team\", \"laps\", \"time / retired\", \"grid\"],[\"cristiano da matta\", \"newman - haas racing\", \"65\", \"1:51:47.260\", \"3\"],[\"michael andretti\", \"team green\", \"65\", \"+ 5.8 secs\", \"6\"],[\"alex tagliani\", \"forsythe racing\", \"65\", \"+ 7.5 secs\", \"7\"],[\"gil de ferran\", \"team penske\", \"65\", \"+ 20.9 secs\", \"2\"],[\"kenny brack\", \"team rahal\", \"65\", \"+ 22.6 secs\", \"13\"],[\"jimmy vasser\", \"patrick racing\", \"65\", \"+ 24.7 secs\", \"10\"],[\"michel jourdain , jr\", \"bettenhausen racing\", \"65\", \"+ 39.5 secs\", \"16\"],[\"christian fittipaldi\", \"newman - haas racing\", \"65\", \"+ 40.5 secs\", \"15\"],[\"max papis\", \"team rahal\", \"65\", \"+ 42.6 secs\", \"14\"],[\"memo gidley\", \"chip ganassi racing\", \"65\", \"+ 42.9 secs\", \"23\"],[\"patrick carpentier\", \"forsythe racing\", \"65\", \"+ 46.7 secs\", \"9\"],[\"shinji nakano\", \"fernández racing\", \"65\", \"+ 46.9 secs\", \"18\"],[\"alex barron\", \"arciero - blair racing\", \"65\", \"+ 46.9 secs\", \"26\"],[\"paul tracy\", \"team green\", \"65\", \"+ 62.6 secs\", \"4\"],[\"scott dixon\", \"pacwest racing\", \"65\", \"+ 72.0 secs\", \"8\"],[\"tora takagi\", \"walker racing\", \"65\", \"+ 81.8 secs\", \"20\"],[\"tony kanaan\", \"mo nunn racing\", \"65\", \"+ 82.0 secs\", \"3\"],[\"bryan herta\", \"forsythe racing\", \"65\", \"+ 82.4 secs\", \"22\"],[\"adrián fernández\", \"fernández racing\", \"65\", \"+ 100.3 secs\", \"17\"],[\"hélio castroneves\", \"team penske\", \"64\", \"+ 1 lap\", \"11\"],[\"bruno junqueira\", \"chip ganassi racing\", \"56\", \"contact\", \"21\"],[\"roberto moreno\", \"patrick racing\", \"54\", \"mechanical\", \"1\"],[\"dario franchitti\", \"team green\", \"35\", \"mechanical\", \"5\"],[\"maurício gugelmin\", \"pacwest racing\", \"34\", \"mechanical\", \"25\"],[\"oriol servià\", \"sigma autosport\", \"10\", \"mechanical\", \"12\"],[\"casey mears\", \"mo nunn racing\", \"0\", \"contact\", \"24\"]]\nQuestion = Is it true that cristiano da matta drives for newman - haas racing with a time of 1:51:47.260?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    teams = get_column_by_name(table_data, \"team\")\n    times = get_column_by_name(table_data, \"time / retired\")\n    for driver, team, time in zip(drivers, teams, times):\n        if equal_to(driver, \"cristiano da matta\") and equal_to(team, \"newman - haas racing\") and equal_to(time, \"1:51:47.260\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "88d08900-4025-4372-bdfb-991930cfeb5b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1928 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"fitzroy\", \"17.11 (113)\", \"south melbourne\", \"11.11 (77)\", \"brunswick street oval\", \"8000\", \"2 june 1928\"],[\"carlton\", \"12.12 (84)\", \"collingwood\", \"13.9 (87)\", \"princes park\", \"30000\", \"2 june 1928\"],[\"north melbourne\", \"5.7 (37)\", \"melbourne\", \"14.16 (100)\", \"arden street oval\", \"9000\", \"2 june 1928\"],[\"richmond\", \"12.21 (93)\", \"geelong\", \"13.12 (90)\", \"punt road oval\", \"10000\", \"2 june 1928\"],[\"st kilda\", \"9.17 (71)\", \"footscray\", \"11.6 (72)\", \"junction oval\", \"12000\", \"2 june 1928\"],[\"hawthorn\", \"7.15 (57)\", \"essendon\", \"13.20 (98)\", \"glenferrie oval\", \"6000\", \"2 june 1928\"]]\nQuestion = Is it true that geelong was the away team for the match at princes park?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"venue\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    for venue, away_team in zip(venues, away_teams):\n        if equal_to(venue, \"princes park\"):\n            answer = equal_to(away_team, \"geelong\")\n            break \n    return answer\n\n### END"}
{"id": "0ed3df8c-837a-4029-94b9-e14515172eca", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = cultural interest fraternities and sororities\ntable_data = [[\"letters\", \"organization\", \"nickname\", \"founding date\", \"founding university\", \"type\"],[\"δλφ\", \"delta lambda phi\", \"dlp , deltas' , or lambda men\", \"1986 - 10 - 15\", \"washington , dc\", \"fraternity\"],[\"κψκ\", \"kappa psi kappa\", \"canes , k - psis , diamonds , or angels\", \"2001 - 08 - 17\", \"tallahassee , florida\", \"fraternity\"],[\"οεπ\", \"omicron epsilon pi\", \"the epps\", \"2000 - 12 - 07\", \"tallahassee , florida\", \"sorority\"],[\"γρλ\", \"gamma rho lambda 1\", \"grl\", \"2003 - 08 - 25\", \"tempe , arizona\", \"sorority\"],[\"αλζ\", \"alpha lambda zeta\", \"the regal alphas\", \"2006 - 01 - 09\", \"houston , texas and atlanta , georgia\", \"fraternity\"],[\"καλ\", \"kappa alpha lambda\", \"the kappas\", \"2003 - 10 - 19\", \"clark atlanta university\", \"sorority\"],[\"φαν\", \"phi alpha nu\", \"phi - nomenal gentlewomen\", \"2006 - 07 - 30\", \"charlotte , nc\", \"fraternity\"]]\nQuestion = Is it true that the founding date for kappa psi kappa , with the nickname canes , k - psis , diamonds , or angels is 2003 - 10 - 19?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    organizations = get_column_by_name(table_data, \"organization\")\n    nicknames = get_column_by_name(table_data, \"nickname\")\n    founding_dates = get_column_by_name(table_data, \"founding date\")\n    for organization, nickname, founding_date in zip(organizations, nicknames, founding_dates):\n        if organization.lower() == \"kappa psi kappa\" and nickname.lower() == \"canes , k - psis , diamonds , or angels\":\n            answer = equal_to(founding_date, \"2003 - 10 - 19\")\n            break \n    return answer\n\n### END"}
{"id": "e9dd43b0-38e7-49f5-91c5-20766e071a01", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the sunday night project\ntable_data = [[\"episode number\", \"air date\", \"guest host\", \"musical guest (song performed)\", \"who knows the most about the guest host panelists\", \"coat of cash wearing celebrity\"],[\"1\", \"8 june 2008\", \"katie price and peter andre\", \"the courteeners ( no you didn't , no you don't )\", \"cerys matthews and michelle dewberry\", \"andy abraham\"],[\"2\", \"15 june 2008\", \"pamela anderson\", \"five o'clock heroes feat agyness deyn ( who )\", \"paul daniels and danny dyer\", \"ricky whittle\"],[\"3\", \"22 june 2008\", \"mark ronson\", \"nerd ( everyone nose )\", \"pharrell williams and miquita oliver\", \"stephanie mcmichael\"],[\"4\", \"29 june 2008\", \"ronan keating , stephen gately , and shane lynch\", \"estelle ( no substitute love )\", \"lulu and estelle\", \"carly stratton\"],[\"5\", \"6 july 2008\", \"david hasselhoff\", \"the feeling ( turn it up )\", \"scott mills and sally lindsay\", \"sylvia barrie\"],[\"6\", \"13 july 2008\", \"barbara windsor\", \"the ting tings ( shut up and let me go )\", \"patsy palmer and anna karen\", \"jennifer clark\"]]\nQuestion = Is it true that cerys matthews and michelle dewberry were on the who knows about the hose panel on june 22 , 2008?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    air_dates = get_column_by_name(table_data, \"air date\")\n    panelists = get_column_by_name(table_data, \"who knows the most about the guest host panelists\")\n    answer = False\n    for air_date, panelist in zip(air_dates, panelists):\n        if \"22 june 2008\" in air_date.lower():\n            answer = \"cerys matthews and michelle dewberry\" in panelist.lower()\n            break\n    return answer\n\n### END"}
{"id": "d8d87883-77b3-4742-b8df-5c4278b9489a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"date\", \"visitor\", \"score\", \"home\", \"record\"],[\"february 2\", \"vancouver\", \"5 - 1\", \"california\", \"15 - 28 - 5\"],[\"february 4\", \"chicago\", \"6 - 2\", \"vancouver\", \"15 - 29 - 5\"],[\"february 6\", \"montreal\", \"4 - 2\", \"vancouver\", \"15 - 30 - 5\"],[\"february 8\", \"philadelphia\", \"3 - 1\", \"vancouver\", \"15 - 31 - 5\"],[\"february 10\", \"vancouver\", \"1 - 9\", \"boston\", \"15 - 32 - 5\"],[\"february 12\", \"vancouver\", \"4 - 5\", \"st louis\", \"15 - 33 - 5\"],[\"february 13\", \"vancouver\", \"4 - 6\", \"pittsburgh\", \"15 - 34 - 5\"],[\"february 15\", \"new york\", \"5 - 1\", \"vancouver\", \"15 - 35 - 5\"],[\"february 18\", \"st louis\", \"2 - 5\", \"vancouver\", \"16 - 35 - 5\"],[\"february 19\", \"vancouver\", \"3 - 5\", \"los angeles\", \"16 - 36 - 5\"],[\"february 22\", \"boston\", \"4 - 3\", \"vancouver\", \"16 - 37 - 5\"],[\"february 24\", \"vancouver\", \"0 - 2\", \"detroit\", \"16 - 38 - 5\"],[\"february 26\", \"vancouver\", \"1 - 7\", \"toronto\", \"16 - 39 - 5\"],[\"february 27\", \"vancouver\", \"3 - 3\", \"chicago\", \"16 - 39 - 6\"],[\"february 29\", \"vancouver\", \"2 - 8\", \"detroit\", \"16 - 40 - 6\"]]\nQuestion = Is it true that the score on february 10 was 4 - 5?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    scores = get_column_by_name(table_data, \"score\")\n    for date, score in zip(dates, scores):\n        if date.lower() == \"february 10\":\n            answer = equal_to(score, \"4 - 5\")\n            break \n    return answer\n\n### END"}
{"id": "130dc206-d64b-4d57-b1c3-b49995092b01", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\"],[\"coronation street\", \"who do you think you are\", \"the nature of things\", \"the nature of things\", \"doc zone\", \"doc zone\", \"the national\"],[\"etalk\", \"jeopardy!\", \"csi\", \"csi\", \"grey 's anatomy\", \"grey 's anatomy\", \"er\"],[\"et canada\", \"entertainment tonight\", \"survivor : china\", \"survivor : china\", \"the office\", \"my name is earl\", \"shark\"],[\"wheel of fortune\", \"e2\", \"scrubs\", \"30 rock\", \"don't forget the lyrics!\", \"don't forget the lyrics!\", \"big shots\"],[\"friends\", \"access hollywood\", \"ugly betty\", \"ugly betty\", \"supernatural\", \"supernatural\", \"terminal city\"],[\"the insider\", \"e! news\", \"are you smarter than a 5th grader\", \"are you smarter than a 5th grader\", \"e! movies we love\", \"e! movies we love\", \"e! movies we love\"],[\"virginie\", \"infoman\", \"le moment de vérité\", \"le moment de vérité\", \"tous pour un\", \"tous pour un\", \"le téléjournal\"],[\"la fièvre de la danse\", \"la fièvre de la danse\", \"le banquier\", \"le banquier\", \"taxi 0 - 22\", \"taxi 0 - 22\", \"le tva 22 heures\"],[\"loft story\", \"criss angel\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal du soir\"]]\nQuestion = Is it true that movies was on tv at 8:00 on the same channel that had loft story on at 7:00?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    column_7 = get_column_by_index(table_data, 0)\n    column_8 = get_column_by_index(table_data, 2)\n    for show_7, show_8 in zip(column_7, column_8):\n        if show_7.lower() == \"loft story\" and show_8.lower() == \"movies\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "c2414296-7a40-4d4e-a705-c03f7779ad5f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2007 - 08 canadian network television schedule\ntable_data = [[\"7:00\", \"7:30\", \"8:00\", \"8:30\", \"9:00\", \"9:30\", \"10:00\", \"10:30\"],[\"heartland\", \"heartland\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"movies & specials\", \"cbc news : sunday night\", \"cbc news : sunday night\"],[\"law and order : criminal intent\", \"law and order : criminal intent\", \"cold case\", \"cold case\", \"desperate housewives\", \"desperate housewives\", \"dirty sexy money\", \"dirty sexy money\"],[\"the simpsons\", \"da kink in my hair\", \"the simpsons\", \"king of the hill\", \"family guy\", \"american dad!\", \"brothers & sisters\", \"brothers & sisters\"],[\"america 's funniest home videos\", \"america 's funniest home videos\", \"kyle xy\", \"kyle xy\", \"america 's next top model\", \"america 's next top model\", \"stargate sg - 1\", \"stargate sg - 1\"],[\"everybody hates chris\", \"speakers' corner\", \"behind the movies\", \"bravo!fact presents\", \"great movies\", \"great movies\", \"great movies\", \"great movies\"],[\"viva laughlin\", \"viva laughlin\", \"extreme makeover : home edition\", \"extreme makeover : home edition\", \"e! countdowns\", \"e! countdowns\", \"e! live encore\", \"e! live encore\"],[\"découverte\", \"et dieu créa laflaque\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"tout le monde en parle\", \"le téléjournal\", \"le téléjournal\"],[\"le banquier / dieu merci!\", \"le banquier / dieu merci!\", \"occupation double\", \"occupation double\", \"occupation double\", \"occupation double\", \"le tva week - end\", \"le tva week - end\"],[\"loft story\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"movies\", \"le journal weekend\"]]\nQuestion = Is it true that law and order : criminal intent has a 10:00 of brothers & sisters?\n\n### RESPONSE:\ndef get_column_by_index(table, column_index):\n    column = []\n    for row in table:\n        if len(row) > column_index:\n            column.append(row[column_index])\n        else:\n            column.append(None)\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    column_10 = get_column_by_index(table_data, 6)\n    column_7 = get_column_by_index(table_data, 0)\n    for show_7, show_10 in zip(column_7, column_10):\n        if show_7.lower() == \"law and order : criminal intent\":\n            answer = equal_to(show_10, \"brothers & sisters\")\n            break \n    return answer\n\n### END"}
{"id": "394f52df-b42f-4a1c-917c-94c702f3f839", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = high jump\ntable_data = [[\"pos\", \"mark\", \"athlete\", \"nationality\", \"venue\", \"date\"],[\"1\", \"2.09 m (6ft10¼in)\", \"stefka kostadinova\", \"bulgaria\", \"rome\", \"30 august 1987\"],[\"2\", \"2.08 m (6ft9¾in)\", \"blanka vlašić\", \"croatia\", \"zagreb\", \"31 august 2009\"],[\"3\", \"2.07 m (6ft9¼in)\", \"lyudmila andonova\", \"bulgaria\", \"berlin\", \"20 july 1984\"],[\"3\", \"2.07 m (6ft9¼in)\", \"anna chicherova\", \"russia\", \"cheboksary\", \"22 july 2011\"],[\"5\", \"2.06 m (6ft9in)\", \"kajsa bergqvist\", \"sweden\", \"eberstadt\", \"26 july 2003\"],[\"5\", \"2.06 m (6ft9in)\", \"hestrie cloete\", \"south africa\", \"paris\", \"31 august 2003\"],[\"5\", \"2.06 m (6ft9in)\", \"yelena slesarenko\", \"russia\", \"athens\", \"28 august 2004\"],[\"5\", \"2.06 m (6ft9in)\", \"ariane friedrich\", \"germany\", \"berlin\", \"14 june 2009\"],[\"9\", \"2.05 m (6ft8½in)\", \"tamara bykova\", \"soviet union\", \"kiev\", \"22 june 1984\"],[\"9\", \"2.05 m (6ft8½in)\", \"heike henkel\", \"germany\", \"tokyo\", \"31 august 1991\"],[\"9\", \"2.05 m (6ft8½in)\", \"inha babakova\", \"ukraine\", \"tokyo\", \"15 september 1995\"],[\"9\", \"2.05 m (6ft8½in)\", \"tia hellebaut\", \"belgium\", \"beijing\", \"23 august 2008\"],[\"9\", \"2.05 m (6ft8½in)\", \"chaunté lowe\", \"usa\", \"des moines\", \"26 june 2010\"]]\nQuestion = Is it true that the athlete from belgium played at the venue in beijing?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    venues = get_column_by_name(table_data, \"venue\")\n    answer = False\n    for nationality, venue in zip(nationalities, venues):\n        if \"belgium\" in nationality.lower() and \"beijing\" in venue.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "f5ca157a-abba-4bc6-ba13-86654d5856cf", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1981 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"footscray\", \"10.14 (74)\", \"hawthorn\", \"11.18 (84)\", \"western oval\", \"13789\", \"23 may 1981\"],[\"fitzroy\", \"13.15 (93)\", \"geelong\", \"16.18 (114)\", \"junction oval\", \"15604\", \"23 may 1981\"],[\"carlton\", \"25.22 (172)\", \"south melbourne\", \"11.7 (73)\", \"princes park\", \"22445\", \"23 may 1981\"],[\"melbourne\", \"10.10 (70)\", \"essendon\", \"14.20 (104)\", \"mcg\", \"31769\", \"23 may 1981\"],[\"north melbourne\", \"12.26 (98)\", \"collingwood\", \"16.15 (111)\", \"arden street oval\", \"24625\", \"23 may 1981\"],[\"richmond\", \"20.16 (136)\", \"st kilda\", \"15.15 (105)\", \"vfl park\", \"40240\", \"23 may 1981\"]]\nQuestion = Is it true that the away team at western oval was hawthorn?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"venue\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    for venue, away_team in zip(venues, away_teams):\n        if venue.lower() == \"western oval\" and away_team.lower() == \"hawthorn\":\n            return True\n    return False\n\n### END"}
{"id": "0fe6cc3a-a84b-4f88-998b-ecaef2062606", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = westinghouse broadcasting\ntable_data = [[\"city of license / market\", \"station\", \"channel tv ( dt )\", \"years owned\", \"current affiliation\"],[\"san francisco - oakland - san jose\", \"kpix\", \"5 (29)\", \"1954 - 1995\", \"cbs owned - and - operated ( o&o )\"],[\"baltimore\", \"wjz - tv\", \"13 (13)\", \"1957 - 1995\", \"cbs owned - and - operated (o&o)\"],[\"boston\", \"wbz - tv\", \"4 (30)\", \"1948 - 1995\", \"cbs owned - and - operated (o&o)\"],[\"charlotte\", \"wpcq - tv (now wcnc - tv )\", \"36 (22)\", \"1980 - 1985\", \"nbc affiliate owned by belo corporation\"],[\"cleveland\", \"kyw - tv (now wkyc - tv )\", \"3 (17)\", \"1956 - 1965\", \"nbc affiliate owned by gannett company\"],[\"philadelphia\", \"wptz / kyw - tv\", \"3 (26)\", \"1953 - 1956 1965 - 1995\", \"cbs owned - and - operated (o&o)\"]]\nQuestion = Is it true that the station kpix plays on channel 5?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    stations = get_column_by_name(table_data, \"station\")\n    channels = get_column_by_name(table_data, \"channel tv ( dt )\")\n    for station, channel in zip(stations, channels):\n        if station.lower() == \"kpix\":\n            answer = equal_to(channel, \"5 (29)\")\n            break \n    return answer\n\n### END"}
{"id": "7a62666d-24ee-49cf-ab84-3552bbb7d626", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = strikeout\ntable_data = [[\"pitcher\", \"strikeouts\", \"season\", \"team\", \"league\", \"overall rank\"],[\"matt kilroy\", \"513\", \"1886\", \"baltimore orioles\", \"aa\", \"1\"],[\"toad ramsey\", \"499\", \"1886\", \"louisville colonels\", \"aa\", \"2\"],[\"dupee shaw\", \"451\", \"1884\", \"detroit wolverines / boston reds\", \"nl / ua\", \"4\"],[\"old hoss radbourn\", \"441\", \"1884\", \"providence grays\", \"nl\", \"5\"],[\"charlie buffington\", \"417\", \"1884\", \"boston beaneaters\", \"nl\", \"6\"],[\"guy hecker\", \"385\", \"1884\", \"louisville eclipse\", \"aa\", \"7\"],[\"nolan ryan\", \"383\", \"1973\", \"california angels\", \"al\", \"8\"],[\"sandy koufax\", \"382\", \"1965\", \"los angeles dodgers\", \"nl\", \"9\"]]\nQuestion = Is it true that old hoss radbourn , in 1884 had 442 strikeouts?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    pitchers = get_column_by_name(table_data, \"pitcher\")\n    strikeouts = get_column_by_name(table_data, \"strikeouts\")\n    seasons = get_column_by_name(table_data, \"season\")\n    for pitcher, strikeout, season in zip(pitchers, strikeouts, seasons):\n        if pitcher.lower() == \"old hoss radbourn\" and season == \"1884\":\n            answer = equal_to(strikeout, \"442\")\n            break \n    return answer\n\n### END"}
{"id": "fc994c5f-70df-4515-81ab-66a7f2982d6d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2011 capital one world women 's curling championship\ntable_data = [[\"country\", \"skip\", \"w\", \"l\", \"pf\", \"pa\", \"ends won\", \"ends lost\", \"blank ends\", \"stolen ends\", \"shot %\"],[\"sweden\", \"anette norberg\", \"9\", \"2\", \"67\", \"53\", \"40\", \"41\", \"12\", \"8\", \"73%\"],[\"china\", \"wang bingyu\", \"8\", \"3\", \"64\", \"43\", \"44\", \"30\", \"14\", \"16\", \"82%\"],[\"denmark\", \"lene nielsen\", \"7\", \"4\", \"77\", \"55\", \"47\", \"33\", \"15\", \"14\", \"78%\"],[\"canada\", \"amber holland\", \"7\", \"4\", \"68\", \"55\", \"42\", \"40\", \"12\", \"7\", \"82%\"],[\"switzerland\", \"mirjam ott\", \"7\", \"4\", \"68\", \"58\", \"46\", \"37\", \"15\", \"15\", \"82%\"],[\"russia\", \"anna sidorova\", \"6\", \"5\", \"70\", \"65\", \"40\", \"45\", \"8\", \"8\", \"72%\"],[\"united states\", \"patti lank\", \"6\", \"5\", \"64\", \"63\", \"48\", \"36\", \"10\", \"17\", \"72%\"],[\"germany\", \"andrea schöpp\", \"5\", \"6\", \"61\", \"67\", \"40\", \"49\", \"12\", \"13\", \"78%\"],[\"scotland\", \"anna sloan\", \"4\", \"7\", \"49\", \"69\", \"33\", \"43\", \"15\", \"6\", \"76%\"],[\"norway\", \"linn githmark\", \"3\", \"8\", \"54\", \"71\", \"42\", \"48\", \"15\", \"7\", \"77%\"],[\"czech republic\", \"anna kubešková\", \"2\", \"9\", \"40\", \"73\", \"35\", \"43\", \"11\", \"7\", \"71%\"]]\nQuestion = Is it true that the number of ends stolen when there were 6 blank ends is more than 43?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    blank_ends = get_column_by_name(table_data, \"blank ends\")\n    stolen_ends = get_column_by_name(table_data, \"stolen ends\")\n    answer = False\n    for blank_end, stolen_end in zip(blank_ends, stolen_ends):\n        if int(blank_end) == 6:\n            if greater(int(stolen_end), 43):\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "96539f11-e873-451c-897e-65eaf359abd2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1979 new orleans saints season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"attendance\"],[\"1\", \"september 2 , 1979\", \"atlanta falcons\", \"l 40 - 34\", \"70940\"],[\"2\", \"september 9 , 1979\", \"green bay packers\", \"l 28 - 19\", \"53184\"],[\"3\", \"september 16 , 1979\", \"philadelphia eagles\", \"l 26 - 14\", \"54212\"],[\"4\", \"september 23 , 1979\", \"san francisco 49ers\", \"w 30 - 21\", \"39727\"],[\"5\", \"september 30 , 1979\", \"new york giants\", \"w 24 - 14\", \"51543\"],[\"6\", \"october 7 , 1979\", \"los angeles rams\", \"l 35 - 17\", \"68986\"],[\"7\", \"october 14 , 1979\", \"tampa bay buccaneers\", \"w 42 - 14\", \"67640\"],[\"8\", \"october 21 , 1979\", \"detroit lions\", \"w 17 - 7\", \"57428\"],[\"9\", \"october 28 , 1979\", \"washington redskins\", \"w 14 - 10\", \"52133\"],[\"10\", \"november 4 , 1979\", \"denver broncos\", \"l 10 - 3\", \"74482\"],[\"11\", \"november 11 , 1979\", \"san francisco 49ers\", \"w 31 - 20\", \"65551\"],[\"12\", \"november 18 , 1979\", \"seattle seahawks\", \"l 38 - 24\", \"60055\"],[\"13\", \"november 25 , 1979\", \"atlanta falcons\", \"w 37 - 6\", \"42815\"],[\"14\", \"december 3 , 1979\", \"oakland raiders\", \"l 42 - 35\", \"65541\"],[\"15\", \"december 9 , 1979\", \"san diego chargers\", \"l 35 - 0\", \"61059\"],[\"16\", \"december 16 , 1979\", \"los angeles rams\", \"w 29 - 14\", \"53879\"]]\nQuestion = Is it true that oakland raiders is the opponent of the last game of the season?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    opponents = get_column_by_name(table_data, \"opponent\")\n    last_game_opponent = opponents[-1]\n    answer = equal_to(last_game_opponent, \"oakland raiders\")\n    return answer\n\n### END"}
{"id": "4c2f31d5-6ac8-47e6-a70b-b36986a9a8ee", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"singular abbreviation\", \"singular word\", \"plural abbreviation\", \"plural word\", \"discipline\"],[\"d\", \"didot\", \"dd\", \"didots\", \"typography\"],[\"f\", \"following line or page\", \"ff\", \"following lines or pages\", \"notes\"],[\"f\", \"folio\", \"ff\", \"folios\", \"literature\"],[\"h\", \"hand\", \"hh\", \"hands\", \"horse height\"],[\"l\", \"line\", \"ll\", \"lines\", \"notes\"],[\"ms\", \"manuscript\", \"mss\", \"manuscripts\", \"notes\"],[\"op\", \"opus\", \"opp\", \"opera\", \"notes\"],[\"p\", \"page\", \"pp\", \"pages\", \"notes\"],[\"q\", \"quarto\", \"qq\", \"quartos\", \"literature\"],[\"s (or §)\", \"section\", \"ss (or §§)\", \"sections\", \"notes\"],[\"v\", \"volume\", \"vv\", \"volumes\", \"notes\"]]\nQuestion = Is it true that the abbreviation of ll is used for lines?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    plural_abbreviations = get_column_by_name(table_data, \"plural abbreviation\")\n    plural_words = get_column_by_name(table_data, \"plural word\")\n    answer = False\n    for plural_abbreviation, plural_word in zip(plural_abbreviations, plural_words):\n        if \"ll\" in plural_abbreviation.lower() and \"lines\" in plural_word.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "da85360c-8067-47a7-a14f-bee9a755fed9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = israeli football league\ntable_data = [[\"season\", \"champion\", \"runner up\", \"israel bowl\", \"venue\", \"date\", \"finals mvp\"],[\"2007 - 08\", \"jerusalem lions\", \"haifa underdogs\", \"i\", \"kraft stadium , jerusalem\", \"march 28 , 2008\", \"moshe horowitz (lions)\"],[\"2008 - 09\", \"modi'in pioneers\", \"jerusalem lions\", \"ii\", \"kraft stadium , jerusalem\", \"april 3 , 2009\", \"assaf katz (pioneers)\"],[\"2009 - 10\", \"tel aviv sabres\", \"jerusalem lions\", \"iii\", \"kraft stadium , jerusalem\", \"march 26 , 2010\", \"evan reshef (sabres)\"],[\"2010 - 11\", \"judean rebels\", \"tel aviv sabres\", \"iv\", \"kraft stadium , jerusalem\", \"march 18 , 2011\", \"zack miller (rebels)\"],[\"2011 - 12\", \"tel aviv sabres\", \"tel aviv pioneers\", \"v\", \"kraft stadium , jerusalem\", \"march 30 , 2012\", \"adi hakami and jonathan curran (sabres)\"],[\"2012 - 13\", \"tel aviv sabres\", \"judean rebels\", \"vi\", \"kraft stadium , jerusalem\", \"march 22 , 2013\", \"jonathan curran and banning fudge (sabres)\"]]\nQuestion = Is it true that the venue for the march 28 , 2008 israel bowl was kraft stadium in jerusalem?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    venues = get_column_by_name(table_data, \"venue\")\n    for date, venue in zip(dates, venues):\n        if equal_to(date, \"march 28 , 2008\"):\n            answer = equal_to(venue, \"kraft stadium , jerusalem\")\n            break \n    return answer\n\n### END"}
{"id": "56f49054-285d-4643-a1fc-d7156779e41b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sanya\ntable_data = [[\"english name\", \"simplified\", \"traditional\", \"pinyin\", \"area\", \"population\", \"density\"],[\"hexi district\", \"河西区\", \"河西區\", \"héxī qū\", \"10\", \"134026\", \"13403\"],[\"hedong district\", \"河东区\", \"河東區\", \"hédōng qū\", \"35\", \"147944\", \"4227\"],[\"haitangwan\", \"海棠湾镇\", \"海棠灣鎮\", \"hǎitángwān zhèn\", \"254\", \"44617\", \"176\"],[\"jiyang\", \"吉阳镇\", \"吉陽鎮\", \"jíyáng zhèn\", \"199\", \"92316\", \"464\"],[\"fenghuang\", \"凤凰镇\", \"鳳凰鎮\", \"fènghuáng zhèn\", \"487\", \"66801\", \"137\"],[\"yacheng\", \"崖城镇\", \"崖城鎮\", \"yáchéng zhèn\", \"383\", \"74779\", \"195\"],[\"tianya\", \"天涯镇\", \"天涯鎮\", \"tiānyá zhèn\", \"269\", \"34934\", \"130\"],[\"yucai\", \"育才镇\", \"育才鎮\", \"yùcái zhèn\", \"315\", \"17515\", \"56\"],[\"nantian farm\", \"国营南田农场\", \"國營南田農場\", \"guóyíng nántián nóngchǎng\", \"nd\", \"24280\", \"nd\"],[\"nanxin farm\", \"国营南新农场\", \"國營南新農場\", \"guóyíng nánxīn nóngchǎng\", \"nd\", \"16801\", \"nd\"],[\"licai farm\", \"国营立才农场\", \"國營立才農場\", \"guóyíng lìcái nóngchǎng\", \"nd\", \"16659\", \"nd\"]]\nQuestion = Is it true that the population of hǎitángwān zhèn is 44617?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    pinyins = get_column_by_name(table_data, \"pinyin\")\n    populations = get_column_by_name(table_data, \"population\")\n    for pinyin, population in zip(pinyins, populations):\n        if pinyin.lower() == \"hǎitángwān zhèn\":\n            answer = equal_to(population, \"44617\")\n            break \n    return answer\n\n### END"}
{"id": "25ecf3a1-bc6b-4204-a756-68bf44b18870", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 cleveland cavaliers season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"18\", \"december 2\", \"phoenix suns\", \"w 107 - 90 (ot)\", \"zydrunas ilgauskas (14)\", \"shaquille o'neal (9)\", \"lebron james (10)\", \"quicken loans arena 20562\", \"13 - 5\"],[\"19\", \"december 4\", \"chicago bulls\", \"w 101 - 87 (ot)\", \"lebron james (23)\", \"zydrunas ilgauskas , shaquille o'neal (7)\", \"lebron james (11)\", \"quicken loans arena 20562\", \"14 - 5\"],[\"20\", \"december 6\", \"milwaukee bucks\", \"w 101 - 86 (ot)\", \"delonte west (21)\", \"anderson varejão (12)\", \"lebron james (10)\", \"bradley center 16625\", \"15 - 5\"],[\"21\", \"december 8\", \"memphis grizzlies\", \"l 109 - 111 (ot)\", \"lebron james (43)\", \"lebron james (13)\", \"mo williams (8)\", \"fedex forum 16325\", \"15 - 6\"],[\"22\", \"december 9\", \"houston rockets\", \"l 85 - 95 (ot)\", \"lebron james (27)\", \"shaquille o'neal , j j hickson (10)\", \"lebron james (7)\", \"toyota center 18200\", \"15 - 7\"],[\"23\", \"december 11\", \"portland trail blazers\", \"w 104 - 99 (ot)\", \"lebron james (33)\", \"shaquille o'neal (11)\", \"mo williams (10)\", \"quicken loans arena 20562\", \"16 - 7\"],[\"24\", \"december 13\", \"oklahoma city thunder\", \"w 102 - 89 (ot)\", \"lebron james (44)\", \"anderson varejão (10)\", \"lebron james (6)\", \"ford center 18203\", \"17 - 7\"],[\"25\", \"december 15\", \"new jersey nets\", \"w 99 - 89 (ot)\", \"lebron james (23)\", \"mo williams , jamario moon (8)\", \"lebron james (7)\", \"quicken loans arena 20562\", \"18 - 7\"],[\"26\", \"december 16\", \"philadelphia 76ers\", \"w 108 - 101 (ot)\", \"lebron james (36)\", \"shaquille o'neal (9)\", \"lebron james (7)\", \"wachovia center 19517\", \"19 - 7\"],[\"27\", \"december 18\", \"milwaukee bucks\", \"w 85 - 82 (ot)\", \"lebron james (26)\", \"lebron james (10)\", \"lebron james (8)\", \"quicken loans arena 20562\", \"20 - 7\"],[\"28\", \"december 20\", \"dallas mavericks\", \"l 95 - 102 (ot)\", \"lebron james (25)\", \"anderson varejão , shaquille o'neal (8)\", \"lebron james (6)\", \"american airlines center 20346\", \"20 - 8\"],[\"29\", \"december 21\", \"phoenix suns\", \"w 109 - 91 (ot)\", \"lebron james (29)\", \"mo williams , lebron james , jj hickson (6)\", \"delonte west (6)\", \"us airways center 18221\", \"21 - 8\"],[\"30\", \"december 23\", \"sacramento kings\", \"w 117 - 104 (ot)\", \"lebron james (34)\", \"lebron james (16)\", \"lebron james (10)\", \"arco arena 16407\", \"22 - 8\"],[\"31\", \"december 25\", \"la lakers\", \"w 102 - 87 (ot)\", \"mo williams (28)\", \"anderson varejão , zydrunas ilgauskas (9)\", \"lebron james (9)\", \"staples center 18997\", \"23 - 8\"],[\"32\", \"december 27\", \"houston rockets\", \"w 108 - 83 (ot)\", \"lebron james (29)\", \"shaquille o'neal (11)\", \"lebron james (6)\", \"quicken loans arena 20562\", \"24 - 8\"]]\nQuestion = Is it true that on december 13 , lebron james had the most assists with 6?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    high_assists = get_column_by_name(table_data, \"high assists\")\n    for date, high_assist in zip(dates, high_assists):\n        if \"december 13\" in date.lower():\n            answer = equal_to(high_assist, \"lebron james (6)\")\n            break \n    return answer\n\n### END"}
{"id": "eda67ca1-7c58-47da-bb80-493e922cc1c4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1997 major league baseball draft\ntable_data = [[\"pick\", \"player\", \"team\", \"position\", \"school\"],[\"1\", \"matt anderson\", \"detroit tigers\", \"p\", \"rice university\"],[\"2\", \"jd drew\", \"philadelphia phillies\", \"of\", \"florida state university\"],[\"3\", \"troy glaus\", \"anaheim angels\", \"3b , p\", \"ucla\"],[\"4\", \"jason grilli\", \"san francisco giants\", \"p\", \"seton hall university\"],[\"5\", \"vernon wells\", \"toronto blue jays\", \"of\", \"bowie hs (arlington , texas)\"],[\"6\", \"geoff goetz\", \"new york mets\", \"p\", \"jesuit hs (tampa , florida)\"],[\"7\", \"dan reichert\", \"kansas city royals\", \"p\", \"university of the pacific\"],[\"8\", \"jj davis\", \"pittsburgh pirates\", \"of\", \"baldwin park hs (pomona , california)\"],[\"9\", \"michael cuddyer\", \"minnesota twins\", \"ss , p\", \"great bridge hs (chesapeake , virginia)\"],[\"10\", \"jon garland\", \"chicago cubs\", \"p\", \"kennedy hs (granada hills , california)\"],[\"11\", \"chris enochs\", \"oakland athletics\", \"p\", \"west virginia university\"],[\"12\", \"aaron akin\", \"florida marlins\", \"p\", \"cowley county community college\"],[\"13\", \"kyle peterson\", \"milwaukee brewers\", \"p\", \"stanford university\"],[\"14\", \"brandon larson\", \"cincinnati reds\", \"ss\", \"louisiana state university\"],[\"15\", \"jason dellaero\", \"chicago white sox\", \"ss , p\", \"university of south florida\"],[\"16\", \"lance berkman\", \"houston astros\", \"1b\", \"rice university\"],[\"17\", \"john curtice\", \"boston red sox\", \"p\", \"great bridge hs (chesapeake , virginia)\"],[\"18\", \"mark mangum\", \"colorado rockies\", \"p\", \"kingwood hs (kingwood , texas)\"],[\"19\", \"ryan anderson\", \"seattle mariners\", \"p\", \"divine child hs (westland , michigan)\"],[\"20\", \"adam kennedy\", \"st louis cardinals\", \"ss\", \"cal state northridge university\"],[\"21\", \"eric dubose\", \"oakland athletics\", \"p\", \"mississippi state university\"],[\"22\", \"jayson werth\", \"baltimore orioles\", \"c , of\", \"glenwood hs (chatham , illinois)\"],[\"23\", \"donnie bridges\", \"montreal expos\", \"p\", \"oak grove hs (hattiesburg , mississippi)\"],[\"24\", \"tyrell godwin\", \"new york yankees\", \"of\", \"east bladen hs (elizabethtown , north carolina)\"],[\"25\", \"glenn davis\", \"los angeles dodgers\", \"1b\", \"vanderbilt university\"],[\"26\", \"darnell mcdonald\", \"baltimore orioles\", \"of\", \"cherry creek hs (englewood , colorado)\"],[\"27\", \"kevin nicholson\", \"san diego padres\", \"ss\", \"stetson university\"],[\"28\", \"tim drew\", \"cleveland indians\", \"p , of\", \"lowndes county hs (valdosta , georgia)\"],[\"29\", \"troy cameron\", \"atlanta braves\", \"ss\", \"st thomas aquinas hs (fort lauderdale , florida)\"],[\"30\", \"jack cust\", \"arizona diamondbacks\", \"1b\", \"immaculata hs (somerville , new jersey)\"],[\"31\", \"jason standridge\", \"tampa bay devil rays\", \"p\", \"hewitt - trussville hs (trussville , al)\"]]\nQuestion = Is it true that john curtice and jack cust played the same position?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    positions = get_column_by_name(table_data, \"position\")\n    john_position = positions[players.index(\"john curtice\")]\n    jack_position = positions[players.index(\"jack cust\")]\n    answer = equal_to(john_position, jack_position)\n    return answer\n\n### END"}
{"id": "7cf3237d-7c5b-4653-a0a4-5657a70494b4", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of radio stations in tamaulipas\ntable_data = [[\"frequency\", \"callsign\", \"brand\", \"city of license\", \"type\"],[\"580\", \"xehp\", \"la mas prendida\", \"ciudad victoria\", \"norteño\"],[\"640\", \"xetam\", \"la poderosa\", \"santa elena\", \"norteño\"],[\"970\", \"xebj - am\", \"radio 970\", \"ciudad victoria\", \"contemporary\"],[\"1340\", \"xerpv - am\", \"la cotorra\", \"ciudad victoria\", \"norteño\"],[\"1380\", \"xegw\", \"planeta w 1380\", \"ciudad victoria\", \"christian pop\"],[\"1480\", \"xevic\", \"radio tamaulipas\", \"ciudad victoria\", \"state government\"]]\nQuestion = Is it true that brand la cotorra with the type norteño is on frequency 1340?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    brands = get_column_by_name(table_data, \"brand\")\n    types = get_column_by_name(table_data, \"type\")\n    for frequency, brand, type in zip(frequencies, brands, types):\n        if brand.lower() == \"la cotorra\" and type.lower() == \"norteño\":\n            answer = equal_to(frequency, \"1340\")\n            break \n    return answer\n\n### END"}
{"id": "d1b6feeb-30f0-45a0-bc54-5eb67f62e245", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 3. liga\ntable_data = [[\"team\",\"outgoing manager\",\"manner of departure\",\"date of vacancy\",\"replaced by\",\"date of appointment\",\"position in table\"],[\"vfl osnabrück\",\"claus - dieter wollitz\",\"fc energie cottbus purchased rights\",\"30 june 2009\",\"karsten baumann\",\"1 july 2009\",\"pre - season\"],[\"fc carl zeiss jena\",\"marc fascher\",\"end of contract\",\"30 june 2009\",\"rené van eck\",\"1 july 2009\",\"pre - season\"],[\"fc rot - weiß erfurt\",\"henri fuchs\",\"end of tenure as caretaker\",\"30 june 2009\",\"rainer hörgl\",\"1 july 2009\",\"pre - season\"],[\"vfb stuttgart ii\",\"rainer adrion\",\"new coach of germany u - 21\",\"30 june 2009\",\"reiner geyer\",\"1 july 2009\",\"pre - season\"],[\"sv wacker burghausen\",\"ralf santelli\",\"end of contract\",\"30 june 2009\",\"jürgen press\",\"1 july 2009\",\"pre - season\"]]\nQuestion = Is it true that ralf santelli departed june 30th , 2009 and was replaced by jurgen press?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    outgoing_managers = get_column_by_name(table_data, \"outgoing manager\")\n    dates_of_vacancy = get_column_by_name(table_data, \"date of vacancy\")\n    replaced_bys = get_column_by_name(table_data, \"replaced by\")\n    for outgoing_manager, date_of_vacancy, replaced_by in zip(outgoing_managers, dates_of_vacancy, replaced_bys):\n        if equal_to(outgoing_manager, \"ralf santelli\") and equal_to(date_of_vacancy, \"30 june 2009\") and equal_to(replaced_by, \"jürgen press\"):\n            answer = True\n            break \n    return answer\n\n### END"}
{"id": "84f679f9-b830-4da4-b1ca-bb76e82d69b9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of quadrangles on mercury\ntable_data = [[\"name\",\"number\",\"namesake\",\"albedo feature name\",\"area\",\"current map\"],[\"borealis\",\"h - 1\",\"borealis planitia\",\"borea\",\"north pole to 67 degree latitude\",\"h - 1\"],[\"victoria\",\"h - 2\",\"victoria rupes\",\"aurora\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 2\"],[\"shakespeare\",\"h - 3\",\"shakespeare crater\",\"caduceata\",\"90 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 3\"],[\"raditladi\",\"h - 4\",\"raditladi basin\",\"liguria\",\"270 to 180 degree longitude , 21 to 66 degree latitude\",\"h - 4\"],[\"hokusai\",\"h - 5\",\"hokusai crater\",\"apollonia\",\"360 to 270 degree longitude , 21 to 66 degree latitude\",\"h - 5\"],[\"kuiper\",\"h - 6\",\"kuiper crater\",\"tricrena\",\"0 to 72 degree longitude , 22 to 22 degree latitude\",\"h - 6\"],[\"beethoven\",\"h - 7\",\"beethoven crater\",\"solitudo lycaonis\",\"72 to 144 degree longitude , 22 to 22 degree latitude\",\"h - 7\"],[\"tolstoj\",\"h - 8\",\"tolstoj crater\",\"phaethontias\",\"144 to 216 degree longitude , 22 to 22 degree latitude\",\"h - 8\"],[\"eminescu\",\"h - 9\",\"eminescu crater\",\"solitudo criophori\",\"216 to 288 degree longitude , 22 to 22 degree latitude\",\"h - 9\"],[\"derain\",\"h - 10\",\"derain crater\",\"pieria\",\"288 to 360 degree longitude , - 22 to 22 degree latitude\",\"h - 10\"],[\"discovery\",\"h - 11\",\"discovery rupes\",\"solitudo hermae trismegisti\",\"0 to 90 degree longitude , 21 to 66 degree latitude\",\"h - 11\"],[\"michelangelo\",\"h - 12\",\"michelangelo crater\",\"solitudo promethei\",\"90 to 180 degree longitude , 21 to - 66 degree latitude\",\"h - 12\"],[\"neruda\",\"h - 13\",\"neruda crater\",\"solitudo persephones\",\"180 to 270 degree longitude , 21 to - 66 degree latitude\",\"h - 13\"],[\"debussy\",\"h - 14\",\"debussy crater\",\"cyllene\",\"270 to 360 degree longitude , 21 to 66 degree latitude\",\"h - 14\"],[\"bach\",\"h - 15\",\"bach crater\",\"australia\",\"south pole to 67 degree latitude\",\"h - 15\"]]\nQuestion = Is it true that beethoven has a current map designation that is lower than h - 7?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    current_maps = get_column_by_name(table_data, \"current map\")\n    for name, current_map in zip(names, current_maps):\n        if name.lower() == \"beethoven\":\n            answer = less_than(int(current_map.split('-')[1].strip()), 7)\n            break \n    return answer\n\n### END"}
{"id": "4f868ffb-01cd-48fe-893f-607b8296eef5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = radio iq\ntable_data = [[\"call sign\", \"frequency mhz\", \"city of license\", \"erp w\", \"class\", \"fcc info\"],[\"wvtw\", \"88.5\", \"charlottesville , virginia\", \"1000\", \"b1\", \"fcc\"],[\"wffc\", \"89.9\", \"ferrum , virginia\", \"1100\", \"a\", \"fcc\"],[\"wqiq\", \"88.3\", \"spotsylvania , virginia\", \"3500\", \"a\", \"fcc\"],[\"wriq\", \"88.7\", \"lexington , virginia\", \"3900\", \"a\", \"fcc\"],[\"wwvt\", \"1260\", \"christiansburg , virginia\", \"5000 day 25 night\", \"d\", \"fcc\"]]\nQuestion = Is it true that the city of license of ferrum , virginia , has a class a?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    cities = get_column_by_name(table_data, \"city of license\")\n    classes = get_column_by_name(table_data, \"class\")\n    for city, class_ in zip(cities, classes):\n        if \"ferrum , virginia\" in city.lower():\n            answer = equal_to(class_.lower(), \"a\")\n            break \n    return answer\n\n### END"}
{"id": "0b15626d-af9c-417b-bf12-53f9f9ba98b7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = rowing at the 2008 summer olympics - women 's lightweight double sculls\ntable_data = [[\"rank\", \"rowers\", \"country\", \"time\", \"notes\"],[\"1\", \"melanie kok , tracy cameron\", \"canada\", \"7:10.70\", \"fa\"],[\"2\", \"xu dongxiang , chen haixia\", \"china\", \"7:11.59\", \"fa\"],[\"3\", \"chrysi biskitzi , alexandra tsiavou\", \"greece\", \"7:11.99\", \"fa\"],[\"4\", \"renee hykel , jennifer goldsack\", \"united states\", \"7:12.15\", \"fb\"],[\"5\", \"amber halliday , marguerite houston\", \"australia\", \"7:13.80\", \"fb\"],[\"6\", \"misaki kumakura , akiko iwamoto\", \"japan\", \"7:16.13\", \"fb\"]]\nQuestion = Is it true that the time for the race with the united states is 7:12.15?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    countries = get_column_by_name(table_data, \"country\")\n    times = get_column_by_name(table_data, \"time\")\n    for country, time in zip(countries, times):\n        if country.lower() == \"united states\":\n            answer = equal_to(time, \"7:12.15\")\n            break \n    return answer\n\n### END"}
{"id": "cf2e508b-93a4-4333-8a74-af4c57f29fc0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = zorro (musical)\ntable_data = [[\"year\", \"award\", \"category\", \"nominee\", \"result\"],[\"2009\", \"laurence olivier award\", \"best new musical\", \"best new musical\", \"nominated\"],[\"2009\", \"laurence olivier award\", \"best actor in a musical\", \"matt rawle\", \"nominated\"],[\"2009\", \"laurence olivier award\", \"best actress in a musical\", \"emma williams\", \"nominated\"],[\"2009\", \"laurence olivier award\", \"best performance in a supporting role in a musical\", \"lesli margherita\", \"won\"],[\"2009\", \"laurence olivier award\", \"best theatre choreographer\", \"rafael amargo\", \"nominated\"]]\nQuestion = Is it true that lesli margherita was nominated on 2009 for best performance in a supporting role in a musical but didn't win?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    nominees = get_column_by_name(table_data, \"nominee\")\n    results = get_column_by_name(table_data, \"result\")\n    for nominee, result in zip(nominees, results):\n        if equal_to(nominee, \"lesli margherita\"):\n            answer = not equal_to(result, \"won\")\n            break \n    return answer\n\n### END"}
{"id": "8b432574-4ffe-4b42-8766-f83758f16d04", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sanya\ntable_data = [[\"english name\", \"simplified\", \"traditional\", \"pinyin\", \"area\", \"population\", \"density\"],[\"hexi district\", \"河西区\", \"河西區\", \"héxī qū\", \"10\", \"134026\", \"13403\"],[\"hedong district\", \"河东区\", \"河東區\", \"hédōng qū\", \"35\", \"147944\", \"4227\"],[\"haitangwan\", \"海棠湾镇\", \"海棠灣鎮\", \"hǎitángwān zhèn\", \"254\", \"44617\", \"176\"],[\"jiyang\", \"吉阳镇\", \"吉陽鎮\", \"jíyáng zhèn\", \"199\", \"92316\", \"464\"],[\"fenghuang\", \"凤凰镇\", \"鳳凰鎮\", \"fènghuáng zhèn\", \"487\", \"66801\", \"137\"],[\"yacheng\", \"崖城镇\", \"崖城鎮\", \"yáchéng zhèn\", \"383\", \"74779\", \"195\"],[\"tianya\", \"天涯镇\", \"天涯鎮\", \"tiānyá zhèn\", \"269\", \"34934\", \"130\"],[\"yucai\", \"育才镇\", \"育才鎮\", \"yùcái zhèn\", \"315\", \"17515\", \"56\"],[\"nantian farm\", \"国营南田农场\", \"國營南田農場\", \"guóyíng nántián nóngchǎng\", \"nd\", \"24280\", \"nd\"],[\"nanxin farm\", \"国营南新农场\", \"國營南新農場\", \"guóyíng nánxīn nóngchǎng\", \"nd\", \"16801\", \"nd\"],[\"licai farm\", \"国营立才农场\", \"國營立才農場\", \"guóyíng lìcái nóngchǎng\", \"nd\", \"16659\", \"nd\"]]\nQuestion = Is it true that yacheng is the english name for the chinese city 崖城镇?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    english_names = get_column_by_name(table_data, \"english name\")\n    simplified_names = get_column_by_name(table_data, \"simplified\")\n    for english_name, simplified_name in zip(english_names, simplified_names):\n        if simplified_name == \"崖城镇\":\n            answer = english_name == \"yacheng\"\n            break\n    return answer\n\n### END"}
{"id": "fc0ec235-67c8-4d61-b2dd-e33adeb12bd5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of ministers for energy of luxembourg\ntable_data = [[\"minister\", \"party\", \"start date\", \"end date\", \"prime minister\"],[\"antoine wehenkel\", \"lsap\", \"15 july 1964\", \"6 february 1969\", \"pierre werner\"],[\"marcel mart\", \"dp\", \"6 february 1969\", \"15 june 1974\", \"pierre werner\"],[\"marcel mart\", \"dp\", \"15 june 1974\", \"16 september 1977\", \"gaston thorn\"],[\"josy barthel\", \"dp\", \"16 september 1977\", \"16 july 1979\", \"gaston thorn\"],[\"josy barthel\", \"dp\", \"16 july 1979\", \"20 july 1984\", \"pierre werner\"],[\"marcel schlechter\", \"lsap\", \"20 july 1984\", \"14 july 1989\", \"jacques santer\"],[\"alex bodry\", \"lsap\", \"14 july 1989\", \"13 july 1994\", \"jacques santer\"],[\"robert goebbels\", \"lsap\", \"13 july 1994\", \"26 january 1995\", \"jacques santer\"],[\"robert goebbels\", \"lsap\", \"26 january 1995\", \"7 august 1999\", \"jean - claude juncker\"]]\nQuestion = Is it true that pierre werner was the prime minister for minister alex bodry?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    ministers = get_column_by_name(table_data, \"minister\")\n    prime_ministers = get_column_by_name(table_data, \"prime minister\")\n    for minister, prime_minister in zip(ministers, prime_ministers):\n        if equal_to(minister, \"alex bodry\"):\n            answer = equal_to(prime_minister, \"pierre werner\")\n            break \n    return answer\n\n### END"}
{"id": "b5ec8b78-454d-417e-ab24-f701aad6524d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = papal conclave , 1314 - 16\ntable_data = [[\"elector\",\"nationality\",\"faction\",\"elevated\",\"elevator\"],[\"nicolò albertini , op\",\"prato\",\"italian\",\"1303 , december 18\",\"benedict xi\"],[\"bérenger frédol , seniore\",\"french\",\"french\",\"1305 , december 15\",\"clement v\"],[\"arnaud de falguières\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"],[\"guillaume de mandagot , crsa\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"arnaud d'aux\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"jacques d'euse\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"nicolas de fréauville , op\",\"french\",\"french\",\"1305 , december 15\",\"clement v\"],[\"arnaud nouvel , ocist\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"],[\"bérenguer frédol , iuniore\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"michel du bec - crespin\",\"french\",\"french\",\"1312 , december 23\",\"clement v\"],[\"guillaume teste\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"guillaume pierre godin , op\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"vital du four , ofm\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"raymond , osb\",\"french\",\"gascon\",\"1312 , december 23\",\"clement v\"],[\"giacomo colonna\",\"roman\",\"italian\",\"1278 , march 12\",\"nicholas iii\"],[\"napoleone orsini\",\"roman\",\"italian\",\"1288 , may 16\",\"nicholas iv\"],[\"pietro colonna\",\"roman\",\"italian\",\"1288 , may 16\",\"nicholas iv\"],[\"guglielmo de longhi\",\"bergamo\",\"italian\",\"1294 , september 18\",\"celestine v\"],[\"giacomo gaetani stefaneschi\",\"rome\",\"italian\",\"1295 , december 17\",\"boniface viii\"],[\"francesco caetani\",\"rome\",\"italian\",\"1295 , december 17\",\"boniface viii\"],[\"luc fieschi\",\"genoese\",\"italian\",\"1300 , march 2\",\"boniface viii\"],[\"arnaud de pellegrue\",\"french\",\"gascon\",\"1305 , december 15\",\"clement v\"],[\"raymond guillaume des forges\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"],[\"bernard de garves\",\"french\",\"gascon\",\"1310 , december 19\",\"clement v\"]]\nQuestion = Is it true that the elevator of jacques d'euse is clement v?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    electors = get_column_by_name(table_data, \"elector\")\n    elevators = get_column_by_name(table_data, \"elevator\")\n    answer = False\n    for elector, elevator in zip(electors, elevators):\n        if \"jacques d'euse\" in elector.lower():\n            if \"clement v\" in elevator.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "dcd6b17f-f293-4190-922a-9881ebb4b746", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = radio iq\ntable_data = [[\"call sign\", \"frequency mhz\", \"city of license\", \"erp w\", \"class\", \"fcc info\"],[\"wvtw\", \"88.5\", \"charlottesville , virginia\", \"1000\", \"b1\", \"fcc\"],[\"wffc\", \"89.9\", \"ferrum , virginia\", \"1100\", \"a\", \"fcc\"],[\"wqiq\", \"88.3\", \"spotsylvania , virginia\", \"3500\", \"a\", \"fcc\"],[\"wriq\", \"88.7\", \"lexington , virginia\", \"3900\", \"a\", \"fcc\"],[\"wwvt\", \"1260\", \"christiansburg , virginia\", \"5000 day 25 night\", \"d\", \"fcc\"]]\nQuestion = Is it true that the frequency of class b1 is 88.5 mhz?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    classes = get_column_by_name(table_data, \"class\")\n    frequencies = get_column_by_name(table_data, \"frequency mhz\")\n    for class_, frequency in zip(classes, frequencies):\n        if class_.lower() == \"b1\":\n            answer = equal_to(frequency, \"88.5\")\n            break \n    return answer\n\n### END"}
{"id": "8101fbdb-107e-40dd-a27d-c218b8d0d21b", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = f.c. united of manchester\ntable_data = [[\"season\",\"leaguecontested\",\"level\",\"leagueposition\",\"avghome attendance 1\",\"fa cup\",\"fa trophy\",\"leading scorer 1\"],[\"2005 - 06\",\"north west counties league division two\",\"10\",\"1st of 19 promoted\",\"3056\",\"n / a\",\"n / a\",\"rory patterson 18\"],[\"2006 - 07\",\"north west counties league division one\",\"9\",\"1st of 22 promoted\",\"2581\",\"n / a\",\"n / a\",\"stuart rudd 38\"],[\"2007 - 08\",\"northern premier league division one north\",\"8\",\"2nd of 18 won playoffs promoted\",\"2086 2\",\"1q\",\"prelim rd\",\"rory patterson 34\"],[\"2008 - 09\",\"northern premier league premier division\",\"7\",\"6th of 22\",\"2152\",\"1q\",\"3q\",\"kyle wilson 21\"],[\"2009 - 10\",\"northern premier league premier division\",\"7\",\"13th of 20\",\"1954 3\",\"4q\",\"3q\",\"phil marsh 10\"],[\"2010 - 11\",\"northern premier league premier division\",\"7\",\"4th of 22 playoffs runner - up\",\"1961 4\",\"r2\",\"3q\",\"michael norton 24\"],[\"2011 - 12\",\"northern premier league premier division\",\"7\",\"6th of 22 playoffs runner - up\",\"1947 5\",\"2q\",\"r1\",\"matthew wolfenden 20\"],[\"2012 - 13\",\"northern premier league premier division\",\"7\",\"3rd of 22 playoffs runner - up\",\"1835 6\",\"4q\",\"2q\",\"matthew wolfenden 19\"],[\"2013 - 14\",\"northern premier league premier division\",\"7\",\"4th of 24\",\"1713\",\"1q\",\"1q next game 19th oct\",\"tom greaves 8\"]]\nQuestion = Is it true that in 2012 - 13 , the leading scorer was matthew wolfenden 19?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    leading_scorers = get_column_by_name(table_data, \"leading scorer 1\")\n    for season, leading_scorer in zip(seasons, leading_scorers):\n        if season == \"2012 - 13\":\n            answer = equal_to(leading_scorer, \"matthew wolfenden 19\")\n            break \n    return answer\n\n### END"}
{"id": "45b346c6-de36-4624-bf08-c15512ec1974", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2000 tennessee titans season\ntable_data = [[\"week\", \"date\", \"tv time\", \"opponent\", \"result\"],[\"1\", \"september 3 , 2000\", \"espn 7:30 pm cdt\", \"buffalo bills\", \"l 13 - 16\"],[\"2\", \"september 10 , 2000\", \"cbs 12:00 pm cdt\", \"kansas city chiefs\", \"w 17 - 14\"],[\"3\", \"-\", \"-\", \"-\", None],[\"4\", \"september 24 , 2000\", \"cbs 12:00 pm cdt\", \"pittsburgh steelers\", \"w 23 - 20\"],[\"5\", \"october 1 , 2000\", \"fox 12:00 pm cdt\", \"new york giants\", \"w 28 - 14\"],[\"6\", \"october 8 , 2000\", \"cbs 12:00 pm cdt\", \"cincinnati bengals\", \"w 23 - 14\"],[\"7\", \"october 16 , 2000\", \"abc 8:00 pm cdt\", \"jacksonville jaguars\", \"w 27 - 13\"],[\"8\", \"october 22 , 2000\", \"cbs 12:00 pm cdt\", \"baltimore ravens\", \"w 14 - 6\"],[\"9\", \"october 30 , 2000\", \"abc 8:00 pm cdt\", \"washington redskins\", \"w 27 - 21\"],[\"10\", \"november 5 , 2000\", \"cbs 12:00 pm cdt\", \"pittsburgh steelers\", \"w 9 - 7\"],[\"11\", \"november 12 , 2000\", \"cbs 12:00 pm cdt\", \"baltimore ravens\", \"l 23 - 24\"],[\"12\", \"november 19 , 2000\", \"cbs 12:00 pm cdt\", \"cleveland browns\", \"w 24 - 10\"],[\"13\", \"november 26 , 2000\", \"cbs 3:15 pm cdt\", \"jacksonville jaguars\", \"l 13 - 16\"],[\"14\", \"december 3 , 2000\", \"cbs 12:00 pm cdt\", \"philadelphia eagles\", \"w 15 - 13\"],[\"15\", \"december 10 , 2000\", \"cbs 12:00 pm cdt\", \"cincinnati bengals\", \"w 35 - 3\"],[\"16\", \"december 17 , 2000\", \"cbs 12:00 pm cdt\", \"cleveland browns\", \"w 24 - 0\"],[\"17\", \"december 25 , 2000\", \"abc 8:00 pm cdt\", \"dallas cowboys\", \"w 31 - 0\"]]\nQuestion = Is it true that week 1 had a result of l 13 - 16 , and the opponents were the buffalo bills?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    results = get_column_by_name(table_data, \"result\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    for week, result, opponent in zip(weeks, results, opponents):\n        if week == \"1\":\n            answer = equal_to(result, \"l 13 - 16\") and equal_to(opponent, \"buffalo bills\")\n            break \n    return answer\n\n### END"}
{"id": "f89197b1-0d21-41ac-b918-4b9e5c6879b2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of world cups and world championships for juniors and youth\ntable_data = [[\"sport\",\"competition name\",\"competing entities\",\"age groups\",\"held every\"],[\"aquatics\",\"fina world junior swimming championships\",\"individuals\",\"17 or younger\",\"two years\"],[\"athletics\",\"iaaf world junior championships in athletics\",\"individuals\",\"18 - 19\",\"two years\"],[\"athletics\",\"iaaf world youth championships in athletics\",\"individuals\",\"17 or younger\",\"two years\"],[\"badminton\",\"bwf world junior championships\",\"individuals\",\"19 or younger\",\"one year\"],[\"bandy\",\"bandy world championship u - 23\",\"nations\",\"under - 23\",\"two years\"],[\"bandy\",\"bandy world championship u - 19\",\"nations\",\"under - 19\",\"two years\"],[\"bandy\",\"bandy world championship u - 17\",\"nations\",\"under - 17\",\"two years\"],[\"bandy\",\"bandy world championship u - 15\",\"nations\",\"under - 15\",\"two years\"],[\"baseball\",\"world junior baseball championship\",\"nations\",\"under - 18\",\"one year through 2000 , now two years\"],[\"baseball\",\"world youth baseball championship\",\"nations\",\"under - 16\",\"one year through 1998 , two years starting in 2001\"],[\"baseball\",\"big league world series\",\"communities\",\"16 - 18\",\"one year\"],[\"baseball\",\"senior league world series\",\"communities\",\"14 - 16\",\"one year\"],[\"baseball\",\"junior league world series\",\"communities\",\"13 - 15\",\"one year\"],[\"baseball\",\"little league world series\",\"communities\",\"13 or younger\",\"one year\"],[\"basketball\",\"fiba under - 21 world championship\",\"nations\",\"21 or younger\",\"four years until 2005\"],[\"basketball\",\"fiba under - 19 world championship\",\"nations\",\"19 or younger\",\"four years until 2007 , now two years\"],[\"basketball\",\"fiba under - 17 world championship\",\"nations\",\"17 or younger\",\"two years\"],[\"basketball\",\"fiba 3x3 u - 18 world championships\",\"nations\",\"18 or younger\",\"year\"],[\"cricket\",\"u - 19 cricket world cup\",\"nations\",\"19 or younger\",\"two years\"],[\"figure skating\",\"world junior figure skating championships\",\"individuals\",\"13 - 19\",\"one year\"],[\"football (soccer)\",\"fifa u - 20 world cup\",\"nations\",\"20 or younger\",\"two years\"],[\"football (soccer)\",\"fifa u - 17 world cup\",\"nations\",\"17 or younger\",\"two years\"],[\"ice hockey\",\"iihf world u20 championship\",\"nations\",\"20 or younger\",\"year\"],[\"ice hockey\",\"iihf world u18 championships\",\"nations\",\"18 or younger\",\"year\"],[\"lacrosse\",\"under - 19 world lacrosse championships\",\"nations\",\"19 or younger\",\"four years\"],[\"rowing\",\"junior world rowing championships\",\"nations\",\"18 or younger\",\"year\"],[\"rugby union\",\"irb junior world championship\",\"nations\",\"20 or younger\",\"year\"],[\"rugby union\",\"under 19 rugby world championship\",\"nations\",\"19 or younger\",\"year\"],[\"rugby union\",\"under 21 rugby world championship\",\"nations\",\"21 or younger\",\"year\"],[\"speed skating\",\"world junior speed skating championships\",\"individuals and nations\",\"19 or younger\",\"one year\"],[\"speed skating\",\"isu junior world cup speed skating\",\"individuals and nations\",\"19 or younger\",\"one year\"],[\"sailing\",\"isaf youth sailing world championships\",\"nations\",\"under 19 's\",\"annually\"],[\"sailing\",\"isaf classes world championship\",\"held in the optimist , splash , zoom , rs tera etc\",\"19 or younger\",\"various\"],[\"table tennis\",\"world junior table tennis championships\",\"individuals and nations\",\"18 or younger\",\"one year\"],[\"volleyball\",\"men 's junior volleyball world championship\",\"nations\",\"21 or younger\",\"two years\"],[\"volleyball\",\"boys youth volleyball world championship\",\"nations\",\"19 or younger\",\"two years\"]]\nQuestion = Is it true that u - 19 cricket world cup is held every two years?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    competition_names = get_column_by_name(table_data, \"competition name\")\n    held_every = get_column_by_name(table_data, \"held every\")\n    for competition_name, held in zip(competition_names, held_every):\n        if competition_name.lower() == \"u - 19 cricket world cup\":\n            answer = equal_to(held, \"two years\")\n            break \n    return answer\n\n### END"}
{"id": "9f21f58a-d9a5-473e-8159-07d840334f34", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of derbyshire county cricket club seasons\ntable_data = [[\"season\", \"pl\", \"w\", \"l\", \"d\", \"captain\", \"most runs\", \"most wkts\", \"wkt keeper\"],[\"1888\", \"12\", \"3\", \"9\", \"0\", \"william chatterton\", \"william chatterton\", \"john hulme\", \"james disney\"],[\"1889\", \"11\", \"3\", \"5\", \"3\", \"william chatterton\", \"william chatterton\", \"george davidson\", \"james disney\"],[\"1890\", \"14\", \"7\", \"5\", \"2\", \"fred spofforth\", \"levi wright\", \"george davidson\", \"no regular keeper\"],[\"1891\", \"13\", \"6\", \"4\", \"3\", \"sydney evershed\", \"william chatterton\", \"george davidson\", \"william storer\"],[\"1892\", \"13\", \"5\", \"7\", \"1\", \"sydney evershed\", \"harry bagshaw\", \"george davidson\", \"william storer\"]]\nQuestion = Is it true that in the season where levi wright had the most runs the team lost five times?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    most_runs = get_column_by_name(table_data, \"most runs\")\n    losses = get_column_by_name(table_data, \"l\")\n    for most_run, loss in zip(most_runs, losses):\n        if most_run.lower() == \"levi wright\":\n            answer = equal_to(loss, \"5\")\n            break \n    return answer\n\n### END"}
{"id": "8c12dd5a-d9c8-4613-868e-be64cfa8c4c7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = dock jumping\ntable_data = [[\"date\", \"distance\", \"handler\", \"event\", \"location\"],[\"7 july 2000\", \"ft4in (m)\", \"beth gutteridge\", \"espn great outdoor games\", \"lake placid , ny\"],[\"8 july 2001\", \"ft1in (m)\", \"mike wallace\", \"espn great outdoor games\", \"lake placid , ny\"],[\"20 february 2002\", \"ft3in (m)\", \"mike jackson\", \"indianapolis boat , sport & travel show\", \"indianapolis , in\"],[\"1 may 2002\", \"ft4in (m)\", \"john kline\", \"espn2 super retriever series\", \"northfield , mn\"],[\"6 july 2002\", \"ft6in (m)\", \"mike jackson\", \"espn great outdoor games\", \"lake placid , ny\"],[\"7 august 2005\", \"ft5in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"21 august 2005\", \"ft7in (m)\", \"kevin meese\", \"big nickle time cabela 's\", \"hamburg , pa\"],[\"9 october 2005\", \"ft10in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"30 may 2010\", \"ft11.59in (m)\", \"rande murphy\", \"super retriever series crown championship\", \"little rock , ar\"],[\"11 july 2010\", \"ft1in (m)\", \"melissa ness\", \"2010 ukc premier\", \"richmond , in\"],[\"29 may 2011\", \"ft7in (m)\", \"tony lampert\", \"super retriever series crown championship\", \"little rock , ar\"],[\"07 oct 2011\", \"ft11in (m)\", \"tony lampert\", \"david letterman show , october 7 2011\", \"new york , ny\"]]\nQuestion = Is it true that the event with a distance of ft12in (m) is 2010 ukc premier?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    distances = get_column_by_name(table_data, \"distance\")\n    events = get_column_by_name(table_data, \"event\")\n    for distance, event in zip(distances, events):\n        if equal_to(distance, \"ft12in (m)\") and equal_to(event, \"2010 ukc premier\"):\n            return True\n    return False\n\n### END"}
{"id": "515c9a35-7287-4676-b880-bf50b98cc0ef", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1993 open championship\ntable_data = [[\"place\", \"player\", \"country\", \"score\", \"to par\"],[\"t1\", \"mark calcavecchia\", \"united states\", \"66\", \"- 4\"],[\"t1\", \"greg norman\", \"australia\", \"66\", \"- 4\"],[\"t1\", \"peter senior\", \"australia\", \"66\", \"- 4\"],[\"t1\", \"fuzzy zoeller\", \"united states\", \"66\", \"- 4\"],[\"t5\", \"stephen ames\", \"trinidad and tobago\", \"67\", \"- 3\"],[\"t5\", \"howard clark\", \"england\", \"67\", \"- 3\"],[\"t5\", \"glen day\", \"united states\", \"67\", \"- 3\"],[\"t5\", \"gary evans\", \"england\", \"67\", \"- 3\"],[\"t5\", \"bernhard langer\", \"germany\", \"67\", \"- 3\"],[\"t5\", \"mark mcnulty\", \"zimbabwe\", \"67\", \"- 3\"],[\"t5\", \"larry mize\", \"united states\", \"67\", \"- 3\"],[\"t5\", \"des smyth\", \"ireland\", \"67\", \"- 3\"],[\"t5\", \"greg turner\", \"new zealand\", \"67\", \"- 3\"],[\"t5\", \"wayne westner\", \"south africa\", \"67\", \"- 3\"]]\nQuestion = Is it true that des smyth is the player from ireland?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    countries = get_column_by_name(table_data, \"country\")\n    answer = False\n    for player, country in zip(players, countries):\n        if player.lower() == \"des smyth\" and country.lower() == \"ireland\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "92a79522-a6f0-40ca-a56d-65b5c1d7947c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"team\", \"number\", \"games\", \"kicks\", \"handballs\", \"total disposals\", \"marks\", \"tackles\", \"goals\", \"behinds\", \"goal accuracy %\", \"brownlow medal votes\"],[\"2005\", \"sydney\", \"40\", \"5\", \"21\", \"11\", \"32\", \"10\", \"3\", \"1\", \"1\", \"50%\", \"0\"],[\"2006\", \"sydney\", \"9\", \"17\", \"148\", \"57\", \"205\", \"68\", \"53\", \"9\", \"7\", \"56%\", \"0\"],[\"2007\", \"sydney\", \"9\", \"23\", \"333\", \"148\", \"481\", \"150\", \"60\", \"14\", \"5\", \"74%\", \"9\"],[\"2008\", \"sydney\", \"9\", \"11\", \"110\", \"47\", \"157\", \"53\", \"19\", \"6\", \"1\", \"86%\", \"0\"],[\"2009\", \"sydney\", \"9\", \"12\", \"112\", \"70\", \"183\", \"37\", \"16\", \"5\", \"5\", \"50%\", \"0\"],[\"2010\", \"sydney\", \"9\", \"24\", \"339\", \"204\", \"543\", \"128\", \"60\", \"7\", \"9\", \"44%\", \"4\"]]\nQuestion = Is it true that in 5 games , sydney had 10 marks and 3 tackles?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    games = get_column_by_name(table_data, \"games\")\n    marks = get_column_by_name(table_data, \"marks\")\n    tackles = get_column_by_name(table_data, \"tackles\")\n    for game, mark, tackle in zip(games, marks, tackles):\n        if equal_to(game, \"5\") and equal_to(mark, \"10\") and equal_to(tackle, \"3\"):\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "27737a67-9ed7-4f41-87bb-3ee1dde217f2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = ádammo\ntable_data = [[\"año\", \"trabajo nominado\", \"premio\", \"categoría\", \"country\", \"resultado\"],[\"2009\", \"adammo\", \"mtv latin america\", \"revelation artist\", \"colombia\", \"nominate\"],[\"2009\", \"adammo\", \"mtv latin america\", \"best new artist : center\", \"colombia\", \"winner\"],[\"2009\", \"adammo\", \"mtv latin america\", \"prize zone\", \"colombia\", \"nominate\"],[\"2010\", \"adammo\", \"premios apdayc\", \"rock group of the year\", \"perú\", \"winner\"],[\"2010\", \"adammo\", \"premios apdayc\", \"artist of the year\", \"perú\", \"nominate\"],[\"2010\", \"adammo\", \"premios orgullosamente latino\", \"grupo latin of the year\", \"mexico\", \"nominate\"],[\"2010\", \"algún día\", \"latin grammy awards\", \"short video of the year\", \"eeuu\", \"nominate\"],[\"2010\", \"adammo\", \"premios clarín\", \"best music video of the year\", \"argentina\", \"nominate\"],[\"2010\", \"adammo\", \"premios clarín\", \"best international breakthrough\", \"argentina\", \"nominate\"],[\"2010\", \"adammo\", \"premios clarín\", \"best international album\", \"argentina\", \"nominate\"],[\"2010\", \"algún día\", \"radio can\", \"best video\", \"colombia\", \"nominate\"],[\"2011\", \"adammo\", \"premios apdayc\", \"rock group of the year\", \"perú\", \"winner\"],[\"2011\", \"adammo\", \"mtv europe music awards\", \"world wide act latin american\", \"europa\", \"nominate\"],[\"2011\", \"adammo\", \"zona joven\", \"best pop rock peruano\", \"perú\", \"winner\"],[\"2012\", \"siento que caigo\", \"radio can\", \"song of the year\", \"perú\", \"nominate\"]]\nQuestion = Is it true that peru was the country when the ano was 2009?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    años = get_column_by_name(table_data, \"año\")\n    countries = get_column_by_name(table_data, \"country\")\n    answer = False\n    for año, country in zip(años, countries):\n        if año == \"2009\" and country.lower() == \"perú\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "ba426a57-28e0-435d-b398-bbeeca0a735c", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = savannah braves\ntable_data = [[\"year\", \"record\", \"finish\", \"manager\", \"playoffs\"],[\"1971\", \"57 - 84\", \"5th\", \"eddie haas\", \"not eligible\"],[\"1972\", \"80 - 59\", \"2nd\", \"clint courtney\", \"not eligible\"],[\"1973\", \"71 - 68\", \"3rd\", \"clint courtney (34 - 23) / tommie aaron (37 - 45)\", \"not eligible\"],[\"1974\", \"73 - 65\", \"4th\", \"tommie aaron\", \"not eligible\"],[\"1975\", \"70 - 64\", \"3rd (t)\", \"tommie aaron\", \"not eligible\"],[\"1976\", \"69 - 71\", \"5th\", \"tommie aaron\", \"not eligible\"],[\"1977\", \"77 - 63\", \"3rd\", \"gene hassell\", \"lost in 1st round\"],[\"1978\", \"72 - 72\", \"4th\", \"bobby dews\", \"lost league finals\"],[\"1979\", \"60 - 83\", \"10th\", \"eddie haas\", \"not eligible\"],[\"1980\", \"77 - 67\", \"3rd\", \"eddie haas\", \"lost in 1st round\"],[\"1981\", \"70 - 70\", \"5th\", \"andy gilbert\", \"lost in 1st round\"],[\"1982\", \"69 - 75\", \"8th\", \"andy gilbert\", \"not eligible\"],[\"1983\", \"81 - 64\", \"3rd\", \"bobby dews\", \"lost in 1st round\"]]\nQuestion = Is it true that the record was 73 - 65 in the year of 1974?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    records = get_column_by_name(table_data, \"record\")\n    for year, record in zip(years, records):\n        if year == \"1974\":\n            answer = equal_to(record, \"73 - 65\")\n            break \n    return answer\n\n### END"}
{"id": "adea1014-9888-494b-ae34-d851053a124e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 brazilian grand prix\ntable_data = [[\"driver\", \"constructor\", \"laps\", \"time / retired\", \"grid\"],[\"felipe massa\", \"ferrari\", \"71\", \"1:34:11.435\", \"1\"],[\"fernando alonso\", \"renault\", \"71\", \"+ 13.298\", \"6\"],[\"kimi räikkönen\", \"ferrari\", \"71\", \"+ 16.235\", \"3\"],[\"sebastian vettel\", \"toro rosso - ferrari\", \"71\", \"+ 38.011\", \"7\"],[\"lewis hamilton\", \"mclaren - mercedes\", \"71\", \"+ 38.907\", \"4\"],[\"timo glock\", \"toyota\", \"71\", \"+ 44.368\", \"10\"],[\"heikki kovalainen\", \"mclaren - mercedes\", \"71\", \"+ 55.074\", \"5\"],[\"jarno trulli\", \"toyota\", \"71\", \"+ 1:08.433\", \"2\"],[\"mark webber\", \"red bull - renault\", \"71\", \"+ 1:19.666\", \"12\"],[\"nick heidfeld\", \"bmw sauber\", \"70\", \"+ 1 lap\", \"8\"],[\"robert kubica\", \"bmw sauber\", \"70\", \"+ 1 lap\", \"13\"],[\"nico rosberg\", \"williams - toyota\", \"70\", \"+ 1 lap\", \"18\"],[\"jenson button\", \"honda\", \"70\", \"+ 1 lap\", \"17\"],[\"sébastien bourdais\", \"toro rosso - ferrari\", \"70\", \"+ 1 lap\", \"9\"],[\"rubens barrichello\", \"honda\", \"70\", \"+ 1 lap\", \"15\"],[\"adrian sutil\", \"force india - ferrari\", \"69\", \"+ 2 laps\", \"20\"],[\"kazuki nakajima\", \"williams - toyota\", \"69\", \"+ 2 laps\", \"16\"],[\"giancarlo fisichella\", \"force india - ferrari\", \"69\", \"+ 2 laps\", \"19\"],[\"nelson piquet jr\", \"renault\", \"0\", \"accident\", \"11\"],[\"david coulthard\", \"red bull - renault\", \"0\", \"collision\", \"14\"]]\nQuestion = Is it true that sébastien bourdais drove for 70 laps , recorded a time of + 1 lap , and started in grid 9?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    drivers = get_column_by_name(table_data, \"driver\")\n    laps = get_column_by_name(table_data, \"laps\")\n    times = get_column_by_name(table_data, \"time / retired\")\n    grids = get_column_by_name(table_data, \"grid\")\n    for driver, lap, time, grid in zip(drivers, laps, times, grids):\n        if driver.lower() == \"sébastien bourdais\":\n            answer = equal_to(lap, \"70\") and equal_to(time, \"+ 1 lap\") and equal_to(grid, \"9\")\n            break \n    return answer\n\n### END"}
{"id": "6c3cb6a0-abbd-46d9-8723-c7bd39c05a4e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1971 nhl amateur draft\ntable_data = [[\"pick\", \"player\", \"position\", \"nationality\", \"nhl team\", \"college / junior / club team\"],[\"15\", \"ken baird\", \"defence\", \"canada\", \"california golden seals\", \"flin flon bombers (wchl)\"],[\"16\", \"henry boucha\", \"centre\", \"united states\", \"detroit red wings\", \"us national development team\"],[\"17\", \"bobby lalonde\", \"centre\", \"canada\", \"vancouver canucks\", \"montreal junior canadiens (oha)\"],[\"18\", \"brian mckenzie\", \"left wing\", \"canada\", \"pittsburgh penguins\", \"st catharines black hawks (oha)\"],[\"19\", \"craig ramsay\", \"left wing\", \"canada\", \"buffalo sabres\", \"peterborough petes (oha)\"],[\"20\", \"larry robinson\", \"defence\", \"canada\", \"montreal canadiens\", \"kitchener rangers (oha)\"],[\"21\", \"rod norrish\", \"left wing\", \"canada\", \"minnesota north stars\", \"regina pats (wchl)\"],[\"22\", \"rick kehoe\", \"right wing\", \"canada\", \"toronto maple leafs\", \"hamilton red wings (oha)\"],[\"23\", \"dave fortier\", \"defence\", \"canada\", \"toronto maple leafs\", \"st catharines black hawks (oha)\"],[\"24\", \"michel deguise\", \"goaltender\", \"canada\", \"montreal canadiens\", \"sorel eperviers (qmjhl)\"],[\"25\", \"terry french\", \"centre\", \"canada\", \"montreal canadiens\", \"ottawa 67 's (oha)\"],[\"26\", \"dave kryskow\", \"left wing\", \"canada\", \"chicago black hawks\", \"edmonton oil kings (wchl)\"],[\"27\", \"tom williams\", \"left wing\", \"canada\", \"new york rangers\", \"hamilton red wings (oha)\"],[\"28\", \"curt ridley\", \"goaltender\", \"canada\", \"boston bruins\", \"portage terriers (mjhl)\"]]\nQuestion = Is it true that peterborough petes (oha) plays on defense position?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    positions = get_column_by_name(table_data, \"position\")\n    teams = get_column_by_name(table_data, \"college / junior / club team\")\n    answer = False\n    for position, team in zip(positions, teams):\n        if \"peterborough petes (oha)\" in team.lower():\n            if \"defence\" in position.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "57fda84e-4db3-4562-a53b-54b323c9dfc1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the sunday night project\ntable_data = [[\"episode number\", \"air date\", \"guest host\", \"musical guest (song performed)\", \"who knows the most about the guest host panelists\", \"coat of cash wearing celebrity\"],[\"1\", \"8 june 2008\", \"katie price and peter andre\", \"the courteeners ( no you didn't , no you don't )\", \"cerys matthews and michelle dewberry\", \"andy abraham\"],[\"2\", \"15 june 2008\", \"pamela anderson\", \"five o'clock heroes feat agyness deyn ( who )\", \"paul daniels and danny dyer\", \"ricky whittle\"],[\"3\", \"22 june 2008\", \"mark ronson\", \"nerd ( everyone nose )\", \"pharrell williams and miquita oliver\", \"stephanie mcmichael\"],[\"4\", \"29 june 2008\", \"ronan keating , stephen gately , and shane lynch\", \"estelle ( no substitute love )\", \"lulu and estelle\", \"carly stratton\"],[\"5\", \"6 july 2008\", \"david hasselhoff\", \"the feeling ( turn it up )\", \"scott mills and sally lindsay\", \"sylvia barrie\"],[\"6\", \"13 july 2008\", \"barbara windsor\", \"the ting tings ( shut up and let me go )\", \"patsy palmer and anna karen\", \"jennifer clark\"]]\nQuestion = Is it true that the ting tings (shut up and let me go) was performed in episode 5?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    musical_guests = get_column_by_name(table_data, \"musical guest (song performed)\")\n    episode_5_guest = musical_guests[4]\n    answer = equal_to(episode_5_guest, \"the ting tings ( shut up and let me go )\")\n    return answer\n\n### END"}
{"id": "a617fc67-ade9-4a21-8a6a-e66f12b5c4aa", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"episode\", \"broadcast date\", \"run time\", \"viewers (in millions)\", \"archive\"],[\"episode 1\", \"21 march 1970\", \"24:33\", \"7.1\", \"pal 2 colour videotape\"],[\"episode 2\", \"28 march 1970\", \"24:39\", \"7.6\", \"chroma dot colour recovery\"],[\"episode 3\", \"4 april 1970\", \"24:38\", \"8.0\", \"chroma dot colour recovery\"],[\"episode 4\", \"11 april 1970\", \"24:37\", \"9.3\", \"chroma dot colour recovery\"],[\"episode 5\", \"18 april 1970\", \"24:17\", \"7.1\", \"pal d3 colour restoration\"],[\"episode 6\", \"25 april 1970\", \"24:31\", \"6.9\", \"chroma dot colour recovery\"],[\"episode 7\", \"2 may 1970\", \"24:32\", \"6.4\", \"chroma dot colour recovery\"]]\nQuestion = Is it true that on 25april 1970 6.9 million viewers tuned in?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    broadcast_dates = get_column_by_name(table_data, \"broadcast date\")\n    viewers = get_column_by_name(table_data, \"viewers (in millions)\")\n    for date, viewer in zip(broadcast_dates, viewers):\n        if \"25 april 1970\" in date.lower():\n            answer = equal_to(viewer, \"6.9\")\n            break \n    return answer\n\n### END"}
{"id": "b6f645c1-796f-455c-9be8-29845b731ced", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1993 tampa bay buccaneers season\ntable_data = [[\"week\", \"date\", \"opponent\", \"result\", \"kickoff\", \"game site\", \"attendance\", \"record\"],[\"1\", \"september 5 , 1993\", \"kansas city chiefs\", \"l 27 - 3\", \"1:00\", \"tampa stadium\", \"63378\", \"0 - 1\"],[\"2\", \"september 12 , 1993\", \"new york giants\", \"l 23 - 7\", \"1:00\", \"giants stadium\", \"75891\", \"0 - 2\"],[\"4\", \"september 26 , 1993\", \"chicago bears\", \"l 47 - 17\", \"1:00\", \"soldier field\", \"58329\", \"0 - 3\"],[\"5\", \"october 3 , 1993\", \"detroit lions\", \"w 27 - 10\", \"1:00\", \"tampa stadium\", \"40794\", \"1 - 3\"],[\"6\", \"october 10 , 1993\", \"minnesota vikings\", \"l 15 - 0\", \"1:00\", \"hubert h humphrey metrodome\", \"54215\", \"1 - 4\"],[\"8\", \"october 24 , 1993\", \"green bay packers\", \"l 37 - 14\", \"1:00\", \"tampa stadium\", \"47354\", \"1 - 5\"],[\"9\", \"october 31 , 1993\", \"atlanta falcons\", \"w 31 - 24\", \"1:00\", \"georgia dome\", \"50647\", \"2 - 5\"],[\"10\", \"november 7 , 1993\", \"detroit lions\", \"l 23 - 0\", \"1:00\", \"pontiac silverdome\", \"65295\", \"2 - 6\"],[\"11\", \"november 14 , 1993\", \"san francisco 49ers\", \"l 45 - 21\", \"1:00\", \"tampa stadium\", \"43835\", \"2 - 7\"],[\"12\", \"november 21 , 1993\", \"minnesota vikings\", \"w 23 - 10\", \"8:00\", \"tampa stadium\", \"40848\", \"3 - 7\"],[\"13\", \"november 28 , 1993\", \"green bay packers\", \"l 13 - 10\", \"1:00\", \"lambeau field\", \"56995\", \"3 - 8\"],[\"14\", \"december 5 , 1993\", \"washington redskins\", \"l 23 - 17\", \"1:00\", \"tampa stadium\", \"49035\", \"3 - 9\"],[\"15\", \"december 12 , 1993\", \"chicago bears\", \"w 13 - 10\", \"1:00\", \"tampa stadium\", \"56667\", \"4 - 9\"],[\"16\", \"december 19 , 1993\", \"los angeles raiders\", \"l 27 - 20\", \"4:00\", \"los angeles memorial coliseum\", \"40532\", \"4 - 10\"],[\"17\", \"december 26 , 1993\", \"denver broncos\", \"w 17 - 10\", \"4:00\", \"mile high stadium\", \"73434\", \"5 - 10\"],[\"18\", \"january 2 , 1994\", \"san diego chargers\", \"l 32 - 17\", \"4:00\", \"tampa stadium\", \"35587\", \"5 - 11\"]]\nQuestion = Is it true that week 16 led to a record of 4 - 10?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    weeks = get_column_by_name(table_data, \"week\")\n    records = get_column_by_name(table_data, \"record\")\n    for week, record in zip(weeks, records):\n        if week == \"16\":\n            answer = equal_to(record, \"4 - 10\")\n            break \n    return answer\n\n### END"}
{"id": "7a5ea67d-11b2-4560-b3a2-93f4d626c0d1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of venezuelan submissions for the academy award for best foreign language film\ntable_data = [[\"year (ceremony)\",\"original title\",\"film title used in nomination\",\"director\",\"result\"],[\"1978 (50th)\",\"el pez que fuma\",\"el pez que fuma\",\"román chalbaud\",\"not nominated\"],[\"1984 (57th)\",\"la casa de agua\",\"the house of water\",\"jacobo penzo\",\"not nominated\"],[\"1985 (58th)\",\"oriana\",\"oriana\",\"fina torres\",\"not nominated\"],[\"1991 (64th)\",\"jericó\",\"jericho\",\"luis alberto lamata\",\"not nominated\"],[\"1994 (67th)\",\"golpes a mi puerta\",\"knocks at my door\",\"alejandro saderman\",\"not nominated\"],[\"1995 (68th)\",\"sicario\",\"sicario\",\"josé ramón novoa\",\"not nominated\"],[\"1997 (70th)\",\"una vida y dos mandados\",\"one life and two trails\",\"alberto aruelo\",\"not nominated\"],[\"1998 (71st)\",\"rizo\",\"loop\",\"julio sosa\",\"not nominated\"],[\"1999 (72nd)\",\"huelepega : ley de la calle\",\"huelepega\",\"elia schneider\",\"not nominated\"],[\"2000 (73rd)\",\"oro diablo\",\"oro diablo\",\"josé ramón novoa\",\"not nominated\"],[\"2001 (74th)\",\"una casa con vista al mar\",\"a house with a view of the sea\",\"alberto aruelo\",\"not nominated\"],[\"2002 (75th)\",\"la pluma del arcángel\",\"the archangel 's feather\",\"luis manzo\",\"not nominated\"],[\"2003 (76th)\",\"sangrador\",\"sangrador\",\"leonardo henriquez\",\"not nominated\"],[\"2004 (77th)\",\"punto y raya\",\"punto y raya\",\"elia schneider\",\"not nominated\"],[\"2005 (78th)\",\"1888: el extraordinario viaje de santa isabel\",\"1888: the extraordinary voyage of the santa isabel\",\"alfredo anzola\",\"disqualified\"],[\"2006 (79th)\",\"maroa : una niña de la calle\",\"maroa\",\"solveig hoogesteijn\",\"not nominated\"],[\"2007 (80th)\",\"postales de leningrado\",\"postcards from leningrad\",\"mariana rondon\",\"not nominated\"],[\"2008 (81st)\",\"el tinte de la fama\",\"the color of fame\",\"alberto bellame\",\"not nominated\"],[\"2009 (82nd)\",\"libertador morales , el justiciero\",\"libertador morales , el justiciero\",\"efterpi charalambidis\",\"not nominated\"],[\"2010 (83rd)\",\"hermano\",\"hermano\",\"marcel rasquin\",\"not nominated\"],[\"2011 (84th)\",\"the rumble of the stones\",\"el rumor de las piedras\",\"alejandro bellame\",\"not nominated\"],[\"2012 (85th)\",\"rock , paper , scissors\",\"piedra , papel o tijera\",\"hernán jabes\",\"not nominated\"],[\"2013 (86th)\",\"breach in the silence\",\"brecha en el silencio\",\"luis rodríguez , andrés rodríguez\",\"tbd\"]]\nQuestion = Is it true that the original title el tinte de la fama is associated with year 2008 (81st)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year (ceremony)\")\n    original_titles = get_column_by_name(table_data, \"original title\")\n    for year, original_title in zip(years, original_titles):\n        if year == \"2008 (81st)\" and original_title == \"el tinte de la fama\":\n            return True\n    return False\n\n### END"}
{"id": "6fcb3b75-2a1b-4516-b393-c864425e8564", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of rna structure prediction software\ntable_data = [[\"name\", \"species specific\", \"intra - molecular structure\", \"comparative\", \"link\"],[\"diana - microt\", \"human , mouse\", \"no\", \"yes\", \"webserver\"],[\"microtar\", \"no\", \"no\", \"no\", \"sourcecode\"],[\"mitarget\", \"no\", \"no\", \"no\", \"webserver\"],[\"mirror\", \"no\", \"no\", \"no\", \"webserver\"],[\"pictar\", \"8 vertebrates\", \"no\", \"yes\", \"predictions\"],[\"pita\", \"no\", \"yes\", \"no\", \"executable , webserver , predictions\"],[\"rna22\", \"no\", \"no\", \"no\", \"predictions custom\"],[\"rnahybrid\", \"no\", \"no\", \"no\", \"sourcecode , webserver\"],[\"sylamer\", \"no\", \"no\", \"no\", \"sourcecode webserver\"],[\"taref\", \"yes\", \"no\", \"no\", \"server / sourcecode\"],[\"p - taref\", \"yes\", \"no\", \"no\", \"server / standalone\"],[\"targetscan\", \"vertebrates , flies , nematodes\", \"evaluated indirectly\", \"yes\", \"sourcecode , webserver\"]]\nQuestion = Is it true that the mitarget has a comparative of no and an no intra - molecular structure with the link of sourcecode , webserver?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    intra_molecular_structures = get_column_by_name(table_data, \"intra - molecular structure\")\n    comparatives = get_column_by_name(table_data, \"comparative\")\n    links = get_column_by_name(table_data, \"link\")\n    for name, intra_molecular_structure, comparative, link in zip(names, intra_molecular_structures, comparatives, links):\n        if name.lower() == \"mitarget\":\n            answer = equal_to(intra_molecular_structure, \"no\") and equal_to(comparative, \"no\") and equal_to(link, \"sourcecode , webserver\")\n            break \n    return answer\n\n### END"}
{"id": "f5e1a329-8d07-4701-b96f-2f96f53a62c1", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1967 - 68 new york rangers season\ntable_data = [[\"game\", \"october\", \"opponent\", \"score\", \"record\"],[\"1\", \"11\", \"chicago black hawks\", \"6 - 3\", \"1 - 0 - 0\"],[\"2\", \"15\", \"detroit red wings\", \"3 - 2\", \"1 - 1 - 0\"],[\"3\", \"18\", \"montreal canadiens\", \"2 - 2\", \"1 - 1 - 1\"],[\"4\", \"21\", \"toronto maple leafs\", \"5 - 3\", \"2 - 1 - 1\"],[\"5\", \"22\", \"pittsburgh penguins\", \"6 - 4\", \"3 - 1 - 1\"],[\"6\", \"25\", \"chicago black hawks\", \"2 - 2\", \"3 - 1 - 2\"],[\"7\", \"26\", \"montreal canadiens\", \"1 - 1\", \"3 - 1 - 3\"],[\"8\", \"29\", \"toronto maple leafs\", \"3 - 2\", \"4 - 1 - 3\"],[\"9\", \"31\", \"los angeles kings\", \"6 - 1\", \"5 - 1 - 3\"]]\nQuestion = Is it true that the game on october 11 was played against the toronto maple leafs?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"october\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    answer = False\n    for date, opponent in zip(dates, opponents):\n        if date == \"11\" and opponent.lower() == \"toronto maple leafs\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "fd865001-1b73-4909-ab50-9079322d6002", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1966 american football league draft\ntable_data = [[\"pick\", \"afl team\", \"player\", \"position\", \"college\"],[\"1\", \"miami dolphins\", \"jim grabowski\", \"running back\", \"illinois\"],[\"2\", \"miami dolphins\", \"rick norton\", \"quarterback\", \"kentucky\"],[\"3\", \"boston patriots\", \"karl singer\", \"offensive tackle\", \"purdue\"],[\"4\", \"denver broncos\", \"jerry shay\", \"offensive tackle\", \"purdue\"],[\"5\", \"houston oilers\", \"tommy nobis\", \"linebacker\", \"texas\"],[\"6\", \"kansas city chiefs\", \"aaron brown\", \"end\", \"minnesota\"],[\"7\", \"san diego chargers\", \"don davis\", \"offensive tackle\", \"cal state - la\"],[\"8\", \"buffalo bills\", \"mike dennis\", \"running back\", \"ole 'miss\"],[\"9\", \"new york jets\", \"bill yearby\", \"offensive tackle\", \"michigan\"],[\"10\", \"oakland raiders\", \"rodger bird\", \"running back\", \"kentucky\"]]\nQuestion = Is it true that mike dennis plays as running back for buffalo bills?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    positions = get_column_by_name(table_data, \"position\")\n    teams = get_column_by_name(table_data, \"afl team\")\n    for player, position, team in zip(players, positions, teams):\n        if player.lower() == \"mike dennis\" and position.lower() == \"running back\" and team.lower() == \"buffalo bills\":\n            return True\n    return False\n\n### END"}
{"id": "f0593a3c-d139-4ebb-a459-37b28f813a4e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the howie carr show\ntable_data = [[\"calls\",\"frequency\",\"branding\",\"format\",\"timeslot\",\"group owner\"],[\"wgan\",\"560 khz\",\"news radio 560 wgan\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"whyn\",\"560 khz\",\"news / talk 560 whyn\",\"news / talk\",\"live 3p - 7p\",\"clear channel communications\"],[\"wvmt\",\"620 khz\",\"news / talk 620 wvmt\",\"news / talk\",\"live 3p - 7p\",\"sison broadcasting\"],[\"wrko\",\"680 khz\",\"am 680 wrko\",\"news / talk\",\"live 3p - 7p\",\"entercom\"],[\"wcrn\",\"830 khz\",\"wcrn 830 true talk\",\"news / talk\",\"live 3p - 7p\",\"carter broadcasting\"],[\"wkbk\",\"1290 khz\",\"1290 wkbk w281au 104.1\",\"news / talk\",\"live 3p - 6p\",\"saga communications\"],[\"wegp\",\"1390 khz\",\"wegp 1390 am - the talk of the county\",\"news / talk\",\"live 3p - 6p\",\"decelles / media , inc\"],[\"wxtk\",\"95.1 mhz\",\"news radio 95 wxtk\",\"news / talk\",\"live 3p - 7p\",\"qantam of cape cod , llc\"],[\"wntk - fm\",\"99.7 mhz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wuvr\",\"1490 khz\",\"wntk talk radio\",\"news / talk\",\"live 3p - 6p\",\"koor communications\"],[\"wvom - fm / wvqm\",\"103.9 / 101.3 mhz\",\"the voice of maine\",\"news / talk\",\"live 3p - 7p\",\"blueberry broadcasting\"]]\nQuestion = Is it true that the frequency of 721 khz is used for news radio 560 wgan?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    frequencies = get_column_by_name(table_data, \"frequency\")\n    brandings = get_column_by_name(table_data, \"branding\")\n    answer = False\n    for frequency, branding in zip(frequencies, brandings):\n        if \"721 khz\" in frequency.lower() and \"news radio 560 wgan\" in branding.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "73c3079f-8ad6-42f2-b5bd-d87c44e5bd85", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of venezuelan submissions for the academy award for best foreign language film\ntable_data = [[\"year (ceremony)\", \"original title\", \"film title used in nomination\", \"director\", \"result\"],[\"1978 (50th)\", \"el pez que fuma\", \"el pez que fuma\", \"román chalbaud\", \"not nominated\"],[\"1984 (57th)\", \"la casa de agua\", \"the house of water\", \"jacobo penzo\", \"not nominated\"],[\"1985 (58th)\", \"oriana\", \"oriana\", \"fina torres\", \"not nominated\"],[\"1991 (64th)\", \"jericó\", \"jericho\", \"luis alberto lamata\", \"not nominated\"],[\"1994 (67th)\", \"golpes a mi puerta\", \"knocks at my door\", \"alejandro saderman\", \"not nominated\"],[\"1995 (68th)\", \"sicario\", \"sicario\", \"josé ramón novoa\", \"not nominated\"],[\"1997 (70th)\", \"una vida y dos mandados\", \"one life and two trails\", \"alberto aruelo\", \"not nominated\"],[\"1998 (71st)\", \"rizo\", \"loop\", \"julio sosa\", \"not nominated\"],[\"1999 (72nd)\", \"huelepega : ley de la calle\", \"huelepega\", \"elia schneider\", \"not nominated\"],[\"2000 (73rd)\", \"oro diablo\", \"oro diablo\", \"josé ramón novoa\", \"not nominated\"],[\"2001 (74th)\", \"una casa con vista al mar\", \"a house with a view of the sea\", \"alberto aruelo\", \"not nominated\"],[\"2002 (75th)\", \"la pluma del arcángel\", \"the archangel 's feather\", \"luis manzo\", \"not nominated\"],[\"2003 (76th)\", \"sangrador\", \"sangrador\", \"leonardo henriquez\", \"not nominated\"],[\"2004 (77th)\", \"punto y raya\", \"punto y raya\", \"elia schneider\", \"not nominated\"],[\"2005 (78th)\", \"1888: el extraordinario viaje de santa isabel\", \"1888: the extraordinary voyage of the santa isabel\", \"alfredo anzola\", \"disqualified\"],[\"2006 (79th)\", \"maroa : una niña de la calle\", \"maroa\", \"solveig hoogesteijn\", \"not nominated\"],[\"2007 (80th)\", \"postales de leningrado\", \"postcards from leningrad\", \"mariana rondon\", \"not nominated\"],[\"2008 (81st)\", \"el tinte de la fama\", \"the color of fame\", \"alberto bellame\", \"not nominated\"],[\"2009 (82nd)\", \"libertador morales , el justiciero\", \"libertador morales , el justiciero\", \"efterpi charalambidis\", \"not nominated\"],[\"2010 (83rd)\", \"hermano\", \"hermano\", \"marcel rasquin\", \"not nominated\"],[\"2011 (84th)\", \"the rumble of the stones\", \"el rumor de las piedras\", \"alejandro bellame\", \"not nominated\"],[\"2012 (85th)\", \"rock , paper , scissors\", \"piedra , papel o tijera\", \"hernán jabes\", \"not nominated\"],[\"2013 (86th)\", \"breach in the silence\", \"brecha en el silencio\", \"luis rodríguez , andrés rodríguez\", \"tbd\"]]\nQuestion = Is it true that breach in the silence was the original title of brecha en el silencio?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    original_titles = get_column_by_name(table_data, \"original title\")\n    film_titles = get_column_by_name(table_data, \"film title used in nomination\")\n    answer = \"breach in the silence\" in original_titles and \"brecha en el silencio\" in film_titles\n    return answer\n\n### END"}
{"id": "b96fab63-ef3d-44c4-a895-b3580560488a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of rna structure prediction software\ntable_data = [[\"name\", \"species specific\", \"intra - molecular structure\", \"comparative\", \"link\"],[\"diana - microt\", \"human , mouse\", \"no\", \"yes\", \"webserver\"],[\"microtar\", \"no\", \"no\", \"no\", \"sourcecode\"],[\"mitarget\", \"no\", \"no\", \"no\", \"webserver\"],[\"mirror\", \"no\", \"no\", \"no\", \"webserver\"],[\"pictar\", \"8 vertebrates\", \"no\", \"yes\", \"predictions\"],[\"pita\", \"no\", \"yes\", \"no\", \"executable , webserver , predictions\"],[\"rna22\", \"no\", \"no\", \"no\", \"predictions custom\"],[\"rnahybrid\", \"no\", \"no\", \"no\", \"sourcecode , webserver\"],[\"sylamer\", \"no\", \"no\", \"no\", \"sourcecode webserver\"],[\"taref\", \"yes\", \"no\", \"no\", \"server / sourcecode\"],[\"p - taref\", \"yes\", \"no\", \"no\", \"server / standalone\"],[\"targetscan\", \"vertebrates , flies , nematodes\", \"evaluated indirectly\", \"yes\", \"sourcecode , webserver\"]]\nQuestion = Is it true that for the name p - taref , species specific yes , the link is predictions custom?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    species_specifics = get_column_by_name(table_data, \"species specific\")\n    links = get_column_by_name(table_data, \"link\")\n    for name, species_specific, link in zip(names, species_specifics, links):\n        if name.lower() == \"p - taref\" and species_specific.lower() == \"yes\":\n            answer = equal_to(link, \"predictions custom\")\n            break \n    return answer\n\n### END"}
{"id": "b4862eee-e307-4344-9577-510a92cbc028", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 melbourne cup\ntable_data = [[\"saddle cloth\", \"horse\", \"trainer\", \"jockey\", \"weight (kg)\", \"barrier\", \"placing\"],[\"1\", \"septimus\", \"aidan o'brien\", \"j p murtagh\", \"58.5\", \"10\", \"18\"],[\"2\", \"master o 'reilly\", \"danny o'brien\", \"v duric\", \"55\", \"6\", \"4\"],[\"3\", \"honolulu\", \"aidan o'brien\", \"colm odonoghue\", \"54.5\", \"24\", \"21\"],[\"4\", \"cest la guerre\", \"john sadler\", \"b prebble\", \"54\", \"5\", \"3\"],[\"5\", \"nom du jeu\", \"murray baker\", \"j lloyd\", \"54\", \"1\", \"8\"],[\"6\", \"yellowstone\", \"jane chapple - hyam\", \"j f egan\", \"54\", \"scr\", \"scr\"],[\"7\", \"zipping\", \"john sadler\", \"d nikolic\", \"54\", \"16\", \"9\"],[\"8\", \"mad rush\", \"luca cumani\", \"damien oliver\", \"53.5\", \"4\", \"7\"],[\"9\", \"ice chariot\", \"ron maund\", \"m rodd\", \"53\", \"22\", \"11\"],[\"10\", \"viewed\", \"bart cummings\", \"b shinn\", \"53\", \"9\", \"1\"],[\"11\", \"littorio\", \"nigel blackiston\", \"s r king\", \"52.5\", \"17\", \"13\"],[\"12\", \"bauer\", \"luca cumani\", \"c w brown\", \"52\", \"13\", \"2\"],[\"13\", \"boundless\", \"stephen mckee\", \"g j childs\", \"52\", \"20\", \"15\"],[\"14\", \"gallopin\", \"danny o'brien\", \"j winks\", \"52\", \"21\", \"dnf\"],[\"15\", \"guyno\", \"lou luciani\", \"c newitt\", \"52\", \"8\", \"12\"],[\"16\", \"zarita\", \"pat hyland\", \"d dunn\", \"52\", \"scr\", \"scr\"],[\"17\", \"newport\", \"paul perry\", \"chris symons\", \"51.5\", \"15\", \"10\"],[\"18\", \"profound beauty\", \"dermot k weld\", \"glen boss\", \"51.5\", \"2\", \"5\"],[\"19\", \"red lord\", \"anthony cummings\", \"nicholas hall\", \"51.5\", \"14\", \"16\"],[\"20\", \"varevees\", \"richard gibson\", \"craig williams\", \"51.5\", \"23\", \"14\"],[\"21\", \"prize lady\", \"graeme sanders\", \"m c sweeney\", \"51\", \"18\", \"17\"],[\"22\", \"alessandro volta\", \"aidan o'brien\", \"w m lordan\", \"50.5\", \"11\", \"20\"],[\"23\", \"barbaricus\", \"danny o'brien\", \"s baster\", \"50.5\", \"3\", \"19\"],[\"24\", \"moatize\", \"bart cummings\", \"ms c lindop\", \"50\", \"19\", \"6\"]]\nQuestion = Is it true that the horse in 23th place had a barrier of 19 and weighing less than 52?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    barriers = get_column_by_name(table_data, \"barrier\")\n    weights = get_column_by_name(table_data, \"weight (kg)\")\n    horse_23_barrier = barriers[22]\n    horse_23_weight = float(weights[22])\n    answer = equal_to(horse_23_barrier, \"19\") and less_than(horse_23_weight, 52)\n    return answer\n\n### END"}
{"id": "5df15c4c-f6cd-4655-9b09-f1b8c0048130", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"position\", \"name\", \"played\", \"drawn\", \"lost\", \"points\"],[\"1\", \"tsv trostberg\", \"10\", \"1\", \"1\", \"17\"],[\"2\", \"esc riverrats geretsried\", \"10\", \"0\", \"3\", \"14\"],[\"3\", \"ersc ottobrunn\", \"10\", \"1\", \"4\", \"11\"],[\"4\", \"ec bad tãlz ii\", \"10\", \"0\", \"5\", \"10\"],[\"5\", \"ehc bad aibling\", \"10\", \"0\", \"7\", \"6\"],[\"6\", \"dec frillensee - inzell\", \"10\", \"0\", \"9\", \"2\"]]\nQuestion = Is it true that tsv trostberg played 10 with 1 draw and 17 points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    played = get_column_by_name(table_data, \"played\")\n    drawn = get_column_by_name(table_data, \"drawn\")\n    points = get_column_by_name(table_data, \"points\")\n    for name, play, draw, point in zip(names, played, drawn, points):\n        if name.lower() == \"tsv trostberg\":\n            answer = equal_to(play, \"10\") and equal_to(draw, \"1\") and equal_to(point, \"17\")\n            break \n    return answer\n\n### END"}
{"id": "71b21977-0f74-4118-a565-e6526ce18991", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = statistics relating to enlargement of the european union\ntable_data = [[\"member countries\", \"population\", \"area (km square)\", \"gdp (billion us)\", \"gdp per capita (us)\"],[\"cyprus\", \"775927\", \"9250\", \"11.681\", \"15054\"],[\"czech republic\", \"10246178\", \"78866\", \"105.248\", \"10272\"],[\"estonia\", \"1341664\", \"45226\", \"22.384\", \"16684\"],[\"hungary\", \"10032375\", \"93030\", \"102183\", \"10185\"],[\"latvia\", \"2306306\", \"64589\", \"24.826\", \"10764\"],[\"lithuania\", \"3607899\", \"65200\", \"31.971\", \"8861\"],[\"malta\", \"396851\", \"316\", \"5.097\", \"12843\"],[\"poland\", \"38580445\", \"311904\", \"316.438\", \"8202\"],[\"slovakia\", \"5423567\", \"49036\", \"42.800\", \"7810\"],[\"slovenia\", \"2011473\", \"20273\", \"29.633\", \"14732\"],[\"accession countries\", \"74722685\", \"737690\", \"685.123\", \"9169\"],[\"existing members (2004)\", \"381781620\", \"3367154\", \"7711.871\", \"20200\"],[\"eu25 (2004)\", \"456504305 ( + 19.57%)\", \"4104844 ( + 17.97%)\", \"8396994 ( + 8.88%)\", \"18394 (8.94%)\"]]\nQuestion = Is it true that estonia is the member country with a population of 1341664?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    member_countries = get_column_by_name(table_data, \"member countries\")\n    populations = get_column_by_name(table_data, \"population\")\n    for member_country, population in zip(member_countries, populations):\n        if member_country.lower() == \"estonia\":\n            answer = equal_to(population, \"1341664\")\n            break \n    return answer\n\n### END"}
{"id": "b9a6b93c-f30c-49b1-a610-1e83e7de1ec0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = united states house of representatives elections , 2010\ntable_data = [[\"district\",\"incumbent\",\"party\",\"first elected\",\"result\",\"candidates\"],[\"pennsylvania 1\",\"bob brady\",\"democratic\",\"1998\",\"re - elected\",\"bob brady (d) unopposed\"],[\"pennsylvania 2\",\"chaka fattah\",\"democratic\",\"1994\",\"re - elected\",\"chaka fattah (d) 89.3% rick hellberg (r) 10.7%\"],[\"pennsylvania 3\",\"kathy dahlkemper\",\"democratic\",\"2008\",\"lost re - election republican gain\",\"mike kelly (r) 55.7% kathy dahlkemper (d) 44.3%\"],[\"pennsylvania 4\",\"jason altmire\",\"democratic\",\"2006\",\"re - elected\",\"jason altmire (d) 50.8% keith rothfuss (r) 49.2%\"],[\"pennsylvania 6\",\"jim gerlach\",\"republican\",\"2002\",\"re - elected\",\"jim gerlach (r) 57.1% manan trivedi (d) 42.9%\"],[\"pennsylvania 9\",\"bill shuster\",\"republican\",\"2001\",\"re - elected\",\"bill shuster (r) 73.1% tom conners (d) 26.9%\"],[\"pennsylvania 10\",\"chris carney\",\"democratic\",\"2006\",\"lost re - election republican gain\",\"tom marino (r) 55.2% chris carney (d) 44.8%\"],[\"pennsylvania 11\",\"paul kanjorski\",\"democratic\",\"1984\",\"lost re - election republican gain\",\"lou barletta (r) 54.7% paul kanjorski (d) 45.3%\"],[\"pennsylvania 12\",\"mark critz\",\"democratic\",\"2010\",\"re - elected\",\"mark critz (d) 50.8% tim burns (r) 49.2%\"],[\"pennsylvania 13\",\"allyson schwartz\",\"democratic\",\"2004\",\"re - elected\",\"allyson schwartz (d) 56.3% dee adcock (r) 43.7%\"],[\"pennsylvania 16\",\"joe pitts\",\"republican\",\"1996\",\"re - elected\",\"joe pitts (r) 65.4% lois herr (d) 34.6%\"],[\"pennsylvania 17\",\"tim holden\",\"democratic\",\"1992\",\"re - elected\",\"tim holden (d) 55.5% dave argall (r) 44.5%\"]]\nQuestion = Is it true that democrat mark critz was re - elected and won by 50.8% against tim burns (r) 49.2%?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    incumbents = get_column_by_name(table_data, \"incumbent\")\n    results = get_column_by_name(table_data, \"result\")\n    candidates = get_column_by_name(table_data, \"candidates\")\n    for incumbent, result, candidate in zip(incumbents, results, candidates):\n        if incumbent.lower() == \"mark critz\" and result.lower() == \"re - elected\":\n            answer = equal_to(candidate, \"mark critz (d) 50.8% tim burns (r) 49.2%\")\n            break \n    return answer\n\n### END"}
{"id": "befddc75-6520-41f9-b58a-2df007f53c3d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = glover teixeira\ntable_data = [[\"result\", \"opponent\", \"method\", \"event\", \"date\"],[\"loss\", \"gabriel vella\", \"points\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"armando sapo\", \"submission\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"salvador minnit\", \"submission\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"win\", \"jorge bezerra\", \"points\", \"adcc brasil trials (over 99 kg)\", \"2011\"],[\"loss\", \"vinny magalhães\", \"submission (armbar)\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"loss\", \"gerardi rinaldi\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"dean lister\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"vesa vuori\", \"points\", \"adcc barcelona (under 99 kg)\", \"2009\"],[\"win\", \"leonardo chocolate\", \"submission (rear naked choke)\", \"adcc brasil trails (under 99 kg)\", \"2009\"],[\"win\", \"renato ferreira\", \"points\", \"adcc brasil trails (under 99 kg)\", \"2009\"]]\nQuestion = Is it true that in 2009 , gerardi rinaldi lost the adcc barcelona (under 99 kg) fight?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    results = get_column_by_name(table_data, \"result\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    events = get_column_by_name(table_data, \"event\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for result, opponent, event, date in zip(results, opponents, events, dates):\n        if \"2009\" in date and \"adcc barcelona (under 99 kg)\" in event.lower() and \"gerardi rinaldi\" in opponent.lower():\n            if \"loss\" in result.lower():\n                answer = True\n                break\n    return answer\n\n### END"}
{"id": "3b7cbe79-652d-4b39-822d-692ae504fcac", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = volleyball at the 2008 summer olympics - men 's team rosters\ntable_data = [[\"name\", \"height\", \"weight\", \"spike\", \"2008 club\"],[\"bian hongmin\", \"m\", \"-\", \"cm (in)\", \"zhejiang\"],[\"yuan zhi\", \"m\", \"-\", \"cm (in)\", \"liaoning\"],[\"guo peng\", \"m\", \"-\", \"cm (in)\", \"army\"],[\"shi hairong\", \"m\", \"-\", \"cm (in)\", \"jiangsu\"],[\"cui jianjun\", \"m\", \"-\", \"cm (in)\", \"henan\"],[\"jiao shuai\", \"m\", \"-\", \"cm (in)\", \"henan\"],[\"yu dawei\", \"m\", \"-\", \"cm (in)\", \"shangdong\"],[\"shen qiong\", \"m\", \"-\", \"cm (in)\", \"shanghai\"],[\"jiang fudong\", \"m\", \"-\", \"cm (in)\", \"sichuan\"],[\"ren qi\", \"m\", \"-\", \"cm (in)\", \"shanghai\"],[\"sui shengsheng\", \"m\", \"-\", \"cm (in)\", \"liaoning\"],[\"fang yingchao\", \"m\", \"-\", \"cm (in)\", \"shanghai\"]]\nQuestion = Is it true that the weights in the table are specific?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef contains(lst, value):\n    return value in lst\n\ndef solution(table_data):\n    weights = get_column_by_name(table_data, \"weight\")\n    answer = not contains(weights, \"-\")\n    return answer\n\n### END"}
{"id": "e4e55280-7779-4200-a82d-bcccf08fb42d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = orlando magic all - time roster\ntable_data = [[\"player\",\"nationality\",\"position\",\"years in orlando\",\"school / club team\"],[\"matt barnes\",\"united states\",\"guard - forward\",\"2009 - 2010\",\"ucla\"],[\"andre barrett\",\"united states\",\"guard\",\"2005\",\"seton hall\"],[\"brandon bass\",\"united states\",\"forward\",\"2009 - 2011\",\"louisiana state\"],[\"tony battie\",\"united states\",\"forward - center\",\"2004 - 2009\",\"texas tech\"],[\"david benoit\",\"united states\",\"forward\",\"1998\",\"alabama\"],[\"keith bogans\",\"united states\",\"guard\",\"2003 - 2004\",\"kentucky\"],[\"keith bogans\",\"united states\",\"guard\",\"2006 - 2009\",\"kentucky\"],[\"anthony bonner\",\"united states\",\"forward\",\"1995 - 1996\",\"st louis\"],[\"anthony bowie\",\"united states\",\"guard\",\"1991 - 1996\",\"oklahoma\"],[\"earl boykins\",\"united states\",\"guard\",\"1999\",\"eastern michigan\"],[\"michael bradley\",\"united states\",\"forward\",\"2004 - 2005\",\"villanova\"],[\"dee brown\",\"united states\",\"guard\",\"2000 - 2002\",\"jacksonville\"],[\"jud buechler\",\"united states\",\"guard - forward\",\"2001 - 2002\",\"arizona\"],[\"pat burke\",\"ireland\",\"center\",\"2002 - 2003\",\"auburn\"]]\nQuestion = Is it true that the united states has a player of pat burke in the years 2006 - 2009 in orlando?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    years_in_orlando = get_column_by_name(table_data, \"years in orlando\")\n    answer = False\n    for player, nationality, year in zip(players, nationalities, years_in_orlando):\n        if player.lower() == \"pat burke\" and nationality.lower() == \"united states\" and \"2006 - 2009\" in year.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "d6169555-df63-4338-b378-06bf5019942e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2011 the dominion tankard\ntable_data = [[\"skip (club)\", \"w\", \"l\", \"pf\", \"pa\", \"ends won\", \"ends lost\", \"blank ends\", \"stolen ends\"],[\"peter corner (brampton)\", \"8\", \"2\", \"69\", \"54\", \"41\", \"36\", \"8\", \"11\"],[\"glenn howard (coldwater)\", \"8\", \"2\", \"79\", \"35\", \"40\", \"22\", \"8\", \"11\"],[\"greg balsdon (loonie)\", \"7\", \"3\", \"80\", \"57\", \"46\", \"37\", \"5\", \"12\"],[\"john epping (donalda)\", \"7\", \"3\", \"76\", \"64\", \"43\", \"41\", \"5\", \"10\"],[\"mark bice (sarnia)\", \"6\", \"4\", \"70\", \"76\", \"45\", \"44\", \"8\", \"7\"],[\"chris gardner (renfrew)\", \"5\", \"5\", \"73\", \"72\", \"47\", \"41\", \"7\", \"16\"],[\"dale matchett (bradford)\", \"4\", \"6\", \"57\", \"75\", \"35\", \"42\", \"7\", \"7\"],[\"mark kean (annandale)\", \"3\", \"7\", \"53\", \"67\", \"43\", \"35\", \"12\", \"8\"],[\"howard rajala (rideau)\", \"3\", \"7\", \"67\", \"71\", \"43\", \"48\", \"5\", \"9\"],[\"nick rizzo (brantford)\", \"3\", \"7\", \"56\", \"74\", \"35\", \"42\", \"4\", \"5\"]]\nQuestion = Is it true that the smallest number in pf is 7?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(int(row[column_index]))\n    return column\n\ndef get_min_value(lst):\n    return min(lst)\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    pf_values = get_column_by_name(table_data, \"pf\")\n    min_pf_value = get_min_value(pf_values)\n    answer = equal_to(min_pf_value, 7)\n    return answer\n\n### END"}
{"id": "b6fa951e-6fcf-4fe3-92ec-23828cde2a24", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1981 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"footscray\", \"10.14 (74)\", \"hawthorn\", \"11.18 (84)\", \"western oval\", \"13789\", \"23 may 1981\"],[\"fitzroy\", \"13.15 (93)\", \"geelong\", \"16.18 (114)\", \"junction oval\", \"15604\", \"23 may 1981\"],[\"carlton\", \"25.22 (172)\", \"south melbourne\", \"11.7 (73)\", \"princes park\", \"22445\", \"23 may 1981\"],[\"melbourne\", \"10.10 (70)\", \"essendon\", \"14.20 (104)\", \"mcg\", \"31769\", \"23 may 1981\"],[\"north melbourne\", \"12.26 (98)\", \"collingwood\", \"16.15 (111)\", \"arden street oval\", \"24625\", \"23 may 1981\"],[\"richmond\", \"20.16 (136)\", \"st kilda\", \"15.15 (105)\", \"vfl park\", \"40240\", \"23 may 1981\"]]\nQuestion = Is it true that on 23 may 1981 was the home team score 20.16 (136) and the crowd was 22567?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    dates = get_column_by_name(table_data, \"date\")\n    for home_team_score, crowd, date in zip(home_team_scores, crowds, dates):\n        if date == \"23 may 1981\":\n            answer = equal_to(home_team_score, \"20.16 (136)\") and equal_to(crowd, \"22567\")\n            break \n    return answer\n\n### END"}
{"id": "815828f1-ca37-443d-9fb8-6c6589ae9eea", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of leverage episodes\ntable_data = [[\"series\",\"season\",\"title\",\"directed by\",\"written by\",\"original air date\",\"us viewers (in millions)\"],[\"14\", \"1\", \"the beantown bailout job\", \"dean devlin\", \"john rogers\", \"july 15 , 2009\", \"3.89\"],[\"15\", \"2\", \"the tap - out job\", \"marc roskin\", \"albert kim\", \"july 22 , 2009\", \"3.05\"],[\"16\", \"3\", \"the order 23 job\", \"rod hardy\", \"chris downey\", \"july 29 , 2009\", \"3.68\"],[\"17\", \"4\", \"the fairy godparents job\", \"jonathan frakes\", \"amy berg\", \"august 5 , 2009\", \"3.69\"],[\"18\", \"5\", \"the three days of the hunter job\", \"marc roskin\", \"melissa glenn & jessica rieder\", \"august 12 , 2009\", \"3.16\"],[\"19\", \"6\", \"the top hat job\", \"peter o'fallon\", \"m scott veach & christine boylan\", \"august 19 , 2009\", \"3.43\"],[\"20\", \"7\", \"the two live crew job\", \"dean devlin\", \"amy berg & john rogers\", \"august 26 , 2009\", \"3.73\"],[\"21\", \"8\", \"the ice man job\", \"jeremiah chechik\", \"christine boylan\", \"september 2 , 2009\", \"3.58\"],[\"22\", \"9\", \"the lost heir job\", \"peter winther\", \"chris downey\", \"september 9 , 2009\", \"3.37\"],[\"23\", \"10\", \"the runway job\", \"mark roskin\", \"albert kim\", \"january 13 , 2010\", \"3.69\"],[\"24\", \"11\", \"the bottle job\", \"jonathan frakes\", \"christine boylan\", \"january 20 , 2010\", \"3.00\"],[\"25\", \"12\", \"the zanzibar marketplace job\", \"jeremiah chechik\", \"melissa glenn & jessica rieder\", \"january 27 , 2010\", \"3.02\"],[\"26\", \"13\", \"the future job\", \"mark roskin\", \"amy berg & chris downey\", \"february 3 , 2010\", \"2.91\"],[\"27\", \"14\", \"the three strikes job\", \"dean devlin\", \"john rogers\", \"february 10 , 2010\", \"2.8\"]]\nQuestion = Is it true that the title , the runway job was completed as series 23 , season 10?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    series = get_column_by_name(table_data, \"series\")\n    seasons = get_column_by_name(table_data, \"season\")\n    titles = get_column_by_name(table_data, \"title\")\n    for serie, season, title in zip(series, seasons, titles):\n        if title.lower() == \"the runway job\":\n            answer = equal_to(serie, \"23\") and equal_to(season, \"10\")\n            break \n    return answer\n\n### END"}
{"id": "5d34f3cd-6ef0-4123-8c08-83cd0029f9fe", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 fis ski jumping world cup\ntable_data = [[\"rank\", \"name\", \"nationality\", \"1st (m)\", \"2nd (m)\", \"points\", \"overall fht points\", \"overall wc points (rank)\"],[\"1\", \"thomas morgenstern\", \"austria\", \"133.0\", \"136.0\", \"264.7\", \"987.1 (6)\", \"440 (4)\"],[\"2\", \"janne ahonen\", \"finland\", \"134.0\", \"133.5\", \"264.0\", \"1013.9 (2)\", \"350 (7)\"],[\"3\", \"simon ammann\", \"switzerland\", \"136.0\", \"131.5\", \"261.5\", \"1008.3 (5)\", \"669 (1)\"],[\"4\", \"wolfgang loitzl\", \"austria\", \"130.5\", \"135.0\", \"260.9\", \"1011.6 (3)\", \"411 (5)\"],[\"5\", \"andreas kofler\", \"austria\", \"129.0\", \"133.5\", \"255.0\", \"1027.2 (1)\", \"521 (3)\"]]\nQuestion = Is it true that for the athlete from switzerland , the rank was 3 and the points were 264.7?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    points = get_column_by_name(table_data, \"points\")\n    for rank, nationality, point in zip(ranks, nationalities, points):\n        if nationality.lower() == \"switzerland\":\n            answer = equal_to(rank, \"3\") and equal_to(point, \"264.7\")\n            break \n    return answer\n\n### END"}
{"id": "824e3cc7-0771-4135-9b0c-8d5351c5f0f6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"player\", \"minutes\", \"field goals\", \"rebounds\", \"assists\", \"steals\", \"blocks\", \"points\"],[\"andrea stinson\", \"1006\", \"179\", \"137\", \"88\", \"43\", \"19\", \"450\"],[\"allison feaster\", \"1007\", \"126\", \"153\", \"46\", \"29\", \"10\", \"365\"],[\"dawn staley\", \"1152\", \"107\", \"71\", \"179\", \"52\", \"1\", \"298\"],[\"tammy sutton - brown\", \"602\", \"72\", \"129\", \"11\", \"21\", \"39\", \"196\"],[\"tonya edwards\", \"580\", \"60\", \"62\", \"48\", \"19\", \"7\", \"194\"],[\"shalonda enis\", \"623\", \"66\", \"113\", \"14\", \"10\", \"5\", \"191\"],[\"charlotte smith\", \"678\", \"57\", \"101\", \"50\", \"16\", \"13\", \"171\"],[\"clarisse machanguana\", \"580\", \"63\", \"121\", \"17\", \"16\", \"16\", \"163\"],[\"summer erb\", \"148\", \"18\", \"35\", \"4\", \"1\", \"5\", \"54\"],[\"kelly miller\", \"225\", \"22\", \"28\", \"14\", \"9\", \"0\", \"55\"]]\nQuestion = Is it true that there is no information in the table cone timerning long range shots?\n\n### RESPONSE:\ndef solution(table_data):\n    column_names = table_data[0]\n    answer = \"long range shots\" not in column_names\n    return answer\n\ntable_data = [[\"player\", \"minutes\", \"field goals\", \"rebounds\", \"assists\", \"steals\", \"blocks\", \"points\"],[\"andrea stinson\", \"1006\", \"179\", \"137\", \"88\", \"43\", \"19\", \"450\"],[\"allison feaster\", \"1007\", \"126\", \"153\", \"46\", \"29\", \"10\", \"365\"],[\"dawn staley\", \"1152\", \"107\", \"71\", \"179\", \"52\", \"1\", \"298\"],[\"tammy sutton - brown\", \"602\", \"72\", \"129\", \"11\", \"21\", \"39\", \"196\"],[\"tonya edwards\", \"580\", \"60\", \"62\", \"48\", \"19\", \"7\", \"194\"],[\"shalonda enis\", \"623\", \"66\", \"113\", \"14\", \"10\", \"5\", \"191\"],[\"charlotte smith\", \"678\", \"57\", \"101\", \"50\", \"16\", \"13\", \"171\"],[\"clarisse machanguana\", \"580\", \"63\", \"121\", \"17\", \"16\", \"16\", \"163\"],[\"summer erb\", \"148\", \"18\", \"35\", \"4\", \"1\", \"5\", \"54\"],[\"kelly miller\", \"225\", \"22\", \"28\", \"14\", \"9\", \"0\", \"55\"]]\n\n### END"}
{"id": "52a40f7f-4a74-4326-bc80-8dce75fefec2", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"census year\", \"number of muslims 000\", \"population of england and wales 000\", \"muslim (% of total population)\", \"registered mosques\", \"muslims per mosque\"],[\"1961\", \"50\", \"46196\", \"0.11\", \"7\", \"7143\"],[\"1971\", \"226\", \"49152\", \"0.46\", \"30\", \"7533\"],[\"1981\", \"553\", \"49634\", \"1.11\", \"149\", \"3711\"],[\"1991\", \"950\", \"51099\", \"1.86\", \"443\", \"2144\"],[\"2001\", \"1600\", \"52042\", \"3.07\", \"614\", \"2606\"]]\nQuestion = Is it true that in the census year 1981 , the population of england wales 000 was 49634 and the number of muslims 000 was 226?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    census_years = get_column_by_name(table_data, \"census year\")\n    muslims = get_column_by_name(table_data, \"number of muslims 000\")\n    populations = get_column_by_name(table_data, \"population of england and wales 000\")\n    for census_year, muslim, population in zip(census_years, muslims, populations):\n        if census_year == \"1981\":\n            answer = equal_to(muslim, \"226\") and equal_to(population, \"49634\")\n            break \n    return answer\n\n### END"}
{"id": "6ce22c8d-56b3-4a35-a562-d633be82dd3f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = dock jumping\ntable_data = [[\"date\", \"distance\", \"handler\", \"event\", \"location\"],[\"7 july 2000\", \"ft4in (m)\", \"beth gutteridge\", \"espn great outdoor games\", \"lake placid , ny\"],[\"8 july 2001\", \"ft1in (m)\", \"mike wallace\", \"espn great outdoor games\", \"lake placid , ny\"],[\"20 february 2002\", \"ft3in (m)\", \"mike jackson\", \"indianapolis boat , sport & travel show\", \"indianapolis , in\"],[\"1 may 2002\", \"ft4in (m)\", \"john kline\", \"espn2 super retriever series\", \"northfield , mn\"],[\"6 july 2002\", \"ft6in (m)\", \"mike jackson\", \"espn great outdoor games\", \"lake placid , ny\"],[\"7 august 2005\", \"ft5in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"21 august 2005\", \"ft7in (m)\", \"kevin meese\", \"big nickle time cabela 's\", \"hamburg , pa\"],[\"9 october 2005\", \"ft10in (m)\", \"kevin meese\", \"bass pro shops\", \"baltimore , md\"],[\"30 may 2010\", \"ft11.59in (m)\", \"rande murphy\", \"super retriever series crown championship\", \"little rock , ar\"],[\"11 july 2010\", \"ft1in (m)\", \"melissa ness\", \"2010 ukc premier\", \"richmond , in\"],[\"29 may 2011\", \"ft7in (m)\", \"tony lampert\", \"super retriever series crown championship\", \"little rock , ar\"],[\"07 oct 2011\", \"ft11in (m)\", \"tony lampert\", \"david letterman show , october 7 2011\", \"new york , ny\"]]\nQuestion = Is it true that mike jackson was the handler at the indianapolis boat , sport & travel show on february 20 , 2002?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    handlers = get_column_by_name(table_data, \"handler\")\n    events = get_column_by_name(table_data, \"event\")\n    dates = get_column_by_name(table_data, \"date\")\n    answer = False\n    for handler, event, date in zip(handlers, events, dates):\n        if handler.lower() == \"mike jackson\" and event.lower() == \"indianapolis boat , sport & travel show\" and date.lower() == \"20 february 2002\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "d96a21f8-2275-4527-b4a2-cf0ae97a856d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = eurovision song contest 1962\ntable_data = [[\"draw\", \"language\", \"artist\", \"english translation\", \"place\", \"points\"],[\"01\", \"finnish\", \"marion rung\", \"chirpy chirp\", \"7\", \"4\"],[\"02\", \"french\", \"fud leclerc\", \"your name\", \"13\", \"0\"],[\"03\", \"spanish\", \"victor balaguer\", \"call me\", \"13\", \"0\"],[\"04\", \"german\", \"eleonore schwarz\", \"only in the vienna air\", \"13\", \"0\"],[\"05\", \"danish\", \"ellen winther\", \"lullaby\", \"10\", \"2\"],[\"06\", \"swedish\", \"inger berggren\", \"sun and spring\", \"7\", \"4\"],[\"07\", \"german\", \"conny froboess\", \"two little italians\", \"6\", \"9\"],[\"08\", \"dutch\", \"de spelbrekers\", \"-\", \"13\", \"0\"],[\"09\", \"french\", \"isabelle aubret\", \"a first love\", \"1\", \"26\"],[\"10\", \"norwegian\", \"inger jacobsen\", \"come sun , come rain\", \"10\", \"2\"],[\"11\", \"french\", \"jean philippe\", \"the return\", \"10\", \"2\"],[\"12\", \"serbian\", \"lola novaković\", \"don't turn the lights on at twilight\", \"4\", \"10\"],[\"13\", \"english\", \"ronnie carroll\", \"-\", \"4\", \"10\"],[\"14\", \"french\", \"camillo felgen\", \"little chap\", \"3\", \"11\"],[\"15\", \"italian\", \"claudio villa\", \"goodbye , goodbye\", \"9\", \"3\"],[\"16\", \"french\", \"françois deguelt\", \"say nothing\", \"2\", \"13\"]]\nQuestion = Is it true that the artist with the draw smaller than 15 , and the english translation of lullaby is camillo felgen?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef smaller_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    draws = get_column_by_name(table_data, \"draw\")\n    artists = get_column_by_name(table_data, \"artist\")\n    translations = get_column_by_name(table_data, \"english translation\")\n    for draw, artist, translation in zip(draws, artists, translations):\n        if smaller_than(int(draw), 15) and translation.lower() == \"lullaby\":\n            answer = artist.lower() == \"camillo felgen\"\n            break\n    return answer\n\n### END"}
{"id": "2aaf7341-c692-4314-865a-5abbfcf820a5", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 melbourne cup\ntable_data = [[\"saddle cloth\", \"horse\", \"trainer\", \"jockey\", \"weight (kg)\", \"barrier\", \"placing\"],[\"1\", \"septimus\", \"aidan o'brien\", \"j p murtagh\", \"58.5\", \"10\", \"18\"],[\"2\", \"master o 'reilly\", \"danny o'brien\", \"v duric\", \"55\", \"6\", \"4\"],[\"3\", \"honolulu\", \"aidan o'brien\", \"colm odonoghue\", \"54.5\", \"24\", \"21\"],[\"4\", \"cest la guerre\", \"john sadler\", \"b prebble\", \"54\", \"5\", \"3\"],[\"5\", \"nom du jeu\", \"murray baker\", \"j lloyd\", \"54\", \"1\", \"8\"],[\"6\", \"yellowstone\", \"jane chapple - hyam\", \"j f egan\", \"54\", \"scr\", \"scr\"],[\"7\", \"zipping\", \"john sadler\", \"d nikolic\", \"54\", \"16\", \"9\"],[\"8\", \"mad rush\", \"luca cumani\", \"damien oliver\", \"53.5\", \"4\", \"7\"],[\"9\", \"ice chariot\", \"ron maund\", \"m rodd\", \"53\", \"22\", \"11\"],[\"10\", \"viewed\", \"bart cummings\", \"b shinn\", \"53\", \"9\", \"1\"],[\"11\", \"littorio\", \"nigel blackiston\", \"s r king\", \"52.5\", \"17\", \"13\"],[\"12\", \"bauer\", \"luca cumani\", \"c w brown\", \"52\", \"13\", \"2\"],[\"13\", \"boundless\", \"stephen mckee\", \"g j childs\", \"52\", \"20\", \"15\"],[\"14\", \"gallopin\", \"danny o'brien\", \"j winks\", \"52\", \"21\", \"dnf\"],[\"15\", \"guyno\", \"lou luciani\", \"c newitt\", \"52\", \"8\", \"12\"],[\"16\", \"zarita\", \"pat hyland\", \"d dunn\", \"52\", \"scr\", \"scr\"],[\"17\", \"newport\", \"paul perry\", \"chris symons\", \"51.5\", \"15\", \"10\"],[\"18\", \"profound beauty\", \"dermot k weld\", \"glen boss\", \"51.5\", \"2\", \"5\"],[\"19\", \"red lord\", \"anthony cummings\", \"nicholas hall\", \"51.5\", \"14\", \"16\"],[\"20\", \"varevees\", \"richard gibson\", \"craig williams\", \"51.5\", \"23\", \"14\"],[\"21\", \"prize lady\", \"graeme sanders\", \"m c sweeney\", \"51\", \"18\", \"17\"],[\"22\", \"alessandro volta\", \"aidan o'brien\", \"w m lordan\", \"50.5\", \"11\", \"20\"],[\"23\", \"barbaricus\", \"danny o'brien\", \"s baster\", \"50.5\", \"3\", \"19\"],[\"24\", \"moatize\", \"bart cummings\", \"ms c lindop\", \"50\", \"19\", \"6\"]]\nQuestion = Is it true that damien oliver rode a horse named mad rush?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    jockeys = get_column_by_name(table_data, \"jockey\")\n    horses = get_column_by_name(table_data, \"horse\")\n    answer = False\n    for jockey, horse in zip(jockeys, horses):\n        if jockey.lower() == \"damien oliver\" and horse.lower() == \"mad rush\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "a4fca3c5-06d3-4d05-af35-c73997375438", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = jimmy davies\ntable_data = [[\"year\", \"entrant\", \"chassis\", \"engine\", \"points\"],[\"1950\", \"pat clancy\", \"ewing\", \"offenhauser l4\", \"0\"],[\"1951\", \"parks offenhauser / le parks\", \"pawl\", \"offenhauser l4\", \"0\"],[\"1953\", \"pat clancy\", \"kurtis kraft 500b\", \"offenhauser l4\", \"0\"],[\"1954\", \"bardahl / ed walsh\", \"kurtis kraft 4000\", \"offenhauser l4\", \"0\"],[\"1955\", \"bardahl / pat clancy\", \"kurtis kraft 500b\", \"offenhauser l4\", \"4\"],[\"1956\", \"novi racing\", \"kurtis kraft 500f\", \"novi v8\", \"0\"],[\"1957\", \"trio brdeact wind allass\", \"kurtis kraft 500d\", \"offenhauser l4\", \"0\"],[\"1959\", \"sumar / chapman root\", \"kurtis kraft 500 g\", \"offenhauser l4\", \"0\"]]\nQuestion = Is it true that after 1956 kurtis kraft 500f became the chassis?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1 == str2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    chassis = get_column_by_name(table_data, \"chassis\")\n    for year, chassi in zip(years, chassis):\n        if int(year) > 1956:\n            answer = equal_to(chassi, \"kurtis kraft 500f\")\n            break \n    return answer\n\n### END"}
{"id": "98658c63-20e4-4214-acb7-83d4cf0a2abe", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1965 american football league draft\ntable_data = [[\"pick\", \"team\", \"player\", \"position\", \"college\"],[\"9\", \"denver broncos\", \"dick butkus\", \"linebacker\", \"illinois\"],[\"10\", \"houston oilers\", \"malcolm walker\", \"center\", \"rice\"],[\"11\", \"oakland raiders\", \"fred biletnikoff\", \"wide receiver\", \"florida state\"],[\"12\", \"new york jets\", \"john huarte\", \"quarterback\", \"notre dame\"],[\"13\", \"kansas city chiefs\", \"jack chapple\", \"linebacker\", \"stanford\"],[\"14\", \"san diego chargers\", \"roy jefferson\", \"linebacker\", \"utah\"],[\"15\", \"houston oilers (from boston patriots)\", \"ralph neely\", \"tackle\", \"oklahoma\"],[\"16\", \"kansas city chiefs (from buffalo bills)\", \"ronnie caveness\", \"linebacker\", \"arkansas\"]]\nQuestion = Is it true that the kansas city chiefs picked a linebacker from utah for pick number 14?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    positions = get_column_by_name(table_data, \"position\")\n    colleges = get_column_by_name(table_data, \"college\")\n    picks = get_column_by_name(table_data, \"pick\")\n    for team, position, college, pick in zip(teams, positions, colleges, picks):\n        if team.lower() == \"kansas city chiefs\" and position.lower() == \"linebacker\" and college.lower() == \"utah\" and pick == \"14\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "bffc7b65-07a8-4129-b0df-f001e742a842", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 14 icc world cricket league\ntable_data = [[\"details\",\"host nation (s)\",\"final venue\",\"winner\",\"result\",\"runner - up\"],[\"2009 division seven\",\"guernsey\",\"king george v sports ground , castel\",\"207 / 7 (46.1 overs)\",\"bahrain won by 3 wickets scorecard\",\"guernsey 204 / 9 (50.0 overs)\"],[\"2009 division six\",\"singapore\",\"kallang cricket ground , singapore\",\"242 / 8 (50.0 overs)\",\"singapore won by 68 runs scorecard\",\"174 all out (48.4 overs)\"],[\"2010 division one\",\"netherlands\",\"vra ground , amstelveen\",\"ireland 233 / 4 (44.5 overs)\",\"ireland won by 6 wickets scorecard\",\"232 all out (48.5 overs)\"],[\"2010 division four\",\"italy\",\"ovale di rastignano , pianoro\",\"united states 188 / 2 (21.4 overs)\",\"united states won by 8 wickets scorecard\",\"italy 185 / 9 (50 overs)\"],[\"2010 division eight\",\"kuwait\",\"kuwait oil company hubara ground , ahmadi city\",\"164 / 4 (33.1 overs)\",\"kuwait won by 6 wickets scorecard\",\"163 / 8 (50 overs)\"],[\"2011 division three\",\"hong kong\",\"kowloon cricket club\",\"hong kong 207 / 6 (47.1 overs)\",\"hong kong won by 4 wickets scorecard\",\"202 (50 overs)\"],[\"2011 division two\",\"united arab emirates\",\"dsc cricket stadium , dubai\",\"201 / 5 (45.3 overs)\",\"united arab emirates won by 5 wickets scorecard\",\"namibia 200 (49.3 overs)\"],[\"2011 division seven\",\"botswana\",\"botswana cricket association oval 1 , gaborone\",\"219 / 9 (50 overs)\",\"kuwait won by 72 runs scorecard\",\"147 (36.5 overs)\"],[\"2011 division six\",\"malaysia\",\"kinrara academy oval , kuala lumpur\",\"guernsey 211 / 8 (49.3 overs)\",\"guernsey won by 2 wickets scorecard\",\"208 / 9 (50 overs)\"],[\"2012 division five\",\"singapore\",\"kallang ground , singapore\",\"164 / 1 (26.4 overs)\",\"singapore won by 9 wickets scorecard\",\"159 (47 overs)\"],[\"2012 division four\",\"malaysia\",\"kinrara academy oval , kuala lumpur\",\"147 / 2 (28 overs)\",\"nepal won by 8 wickets scorecard\",\"united states 145 (48.1 overs)\"],[\"2012 division eight\",\"samoa\",\"faleata oval no 1 , apia\",\"222 / 9 (50 overs)\",\"vanuatu won by 39 runs scorecard\",\"183 (42.5 overs)\"],[\"2013 division seven\",\"botswana\",\"botswana cricket association oval 1 , gaborone\",\"134 / 4 (32.1 overs)\",\"nigeria won by 6 wickets ( d / l ) scorecard\",\"133 (38 , 4 overs)\"],[\"2013 division three\",\"bermuda\",\"national stadium , hamilton\",\"153 / 5 (39.2 overs)\",\"nepal won by 5 wickets scorecard\",\"151 / 8 (50.0 overs)\"],[\"2013 division six\",\"jersey\",\"grainville cricket ground , st saviour\",\"jersey 10 points\",\"jersey won on points table\",\"8 points\"]]\nQuestion = Is it true that hong kong was the only nation that was the host as well as the winner?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    host_nations = get_column_by_name(table_data, \"host nation (s)\")\n    winners = get_column_by_name(table_data, \"winner\")\n    host_and_winner = 0\n    for host_nation, winner in zip(host_nations, winners):\n        if host_nation.lower() in winner.lower():\n            host_and_winner += 1\n    answer = host_and_winner == 1\n    return answer\n\n### END"}
{"id": "1ad0f325-0848-45f4-94a0-42921b7f94ad", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = american dad! (season 1)\ntable_data = [[\"no in series\", \"title\", \"directed by\", \"written by\", \"original air date\", \"production code\", \"us viewers (millions)\"],[\"1\", \"pilot\", \"ron hughart\", \"seth macfarlane , mike barker & matt weitzman\", \"february 6 , 2005\", \"1ajn01\", \"15.10\"],[\"2\", \"threat levels\", \"brent woods\", \"david zuckerman\", \"may 1 , 2005\", \"1ajn02\", \"9.47\"],[\"3\", \"stan knows best\", \"pam cooke\", \"mike barker & matt weitzman\", \"may 8 , 2005\", \"1ajn03\", \"8.23\"],[\"4\", \"francine 's flashback\", \"caleb meurer & brent woods\", \"rick wiener & kenny schwartz\", \"may 15 , 2005\", \"1ajn05\", \"7.84\"],[\"5\", \"roger codger\", \"albert calleros\", \"dan vebber\", \"june 5 , 2005\", \"1ajn04\", \"6.09\"],[\"6\", \"homeland insecurity\", \"rodney clouden\", \"neal boushell & sam o'neal\", \"june 12 , 2005\", \"1ajn06\", \"6.85\"]]\nQuestion = Is it true that francine 's flashback is the title of episode that was seen by 7.84 million people in the us?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    titles = get_column_by_name(table_data, \"title\")\n    viewers = get_column_by_name(table_data, \"us viewers (millions)\")\n    for title, viewer in zip(titles, viewers):\n        if title.lower() == \"francine 's flashback\":\n            answer = equal_to(viewer, \"7.84\")\n            break \n    return answer\n\n### END"}
{"id": "10d18cca-e3e0-477b-bc90-96b7075d3664", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1968 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"hawthorn\", \"17.24 (126)\", \"south melbourne\", \"19.12 (126)\", \"glenferrie oval\", \"13536\", \"20 april 1968\"],[\"st kilda\", \"16.22 (118)\", \"melbourne\", \"9.8 (62)\", \"moorabbin oval\", \"21758\", \"20 april 1968\"],[\"geelong\", \"9.17 (71)\", \"footscray\", \"6.11 (47)\", \"kardinia park\", \"14589\", \"20 april 1968\"],[\"north melbourne\", \"9.9 (63)\", \"essendon\", \"10.22 (82)\", \"arden street oval\", \"14810\", \"20 april 1968\"],[\"fitzroy\", \"14.16 (100)\", \"collingwood\", \"10.11 (71)\", \"princes park\", \"17149\", \"20 april 1968\"],[\"richmond\", \"17.16 (118)\", \"carlton\", \"10.12 (72)\", \"mcg\", \"51889\", \"20 april 1968\"]]\nQuestion = Is it true that in the game between fitzroy and collingwood held on 20 april 1968 , the away team scored 10.11 (71)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    away_team_scores = get_column_by_name(table_data, \"away team score\")\n    dates = get_column_by_name(table_data, \"date\")\n    for home_team, away_team, away_team_score, date in zip(home_teams, away_teams, away_team_scores, dates):\n        if home_team.lower() == \"fitzroy\" and away_team.lower() == \"collingwood\" and date == \"20 april 1968\":\n            answer = equal_to(away_team_score, \"10.11 (71)\")\n            break \n    return answer\n\n### END"}
{"id": "e064f8f5-4123-4310-bfd3-2d1365715908", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 - 09 uci track cycling world cup classics\ntable_data = [[\"rank\", \"team\", \"round1\", \"round2\", \"round3\", \"round4\", \"round5\", \"total points\"],[\"1\", \"germany\", \"92\", \"56\", \"62\", \"52\", \"74\", \"336\"],[\"2\", \"netherlands\", \"41\", \"60\", \"17\", \"72\", \"99\", \"289\"],[\"3\", \"great britain\", \"133\", \"36\", \"15\", \"32\", \"57\", \"273\"],[\"4\", \"france\", \"24\", \"25\", \"65\", \"64\", \"71\", \"249\"],[\"5\", \"spain\", \"49\", \"66\", \"78\", \"17\", \"31\", \"241\"],[\"6\", \"china\", \"41\", \"38\", \"23\", \"108\", \"31\", \"241\"],[\"7\", \"team toshiba\", \"12\", \"98\", \"38\", \"29\", \"35\", \"212\"],[\"8\", \"russia\", \"45\", \"55\", \"51\", \"37\", \"11\", \"199\"],[\"9\", \"ukraine\", \"51\", \"67\", \"22\", \"30\", \"24\", \"194\"]]\nQuestion = Is it true that team toshiba 's round 5 score is 35 with a total of 212 points?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    teams = get_column_by_name(table_data, \"team\")\n    round5_scores = get_column_by_name(table_data, \"round5\")\n    total_points = get_column_by_name(table_data, \"total points\")\n    for team, round5_score, total_point in zip(teams, round5_scores, total_points):\n        if team.lower() == \"team toshiba\":\n            answer = equal_to(round5_score, \"35\") and equal_to(total_point, \"212\")\n            break \n    return answer\n\n### END"}
{"id": "8a2bc4dd-79a8-415d-9702-d506f710be2e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = türk telekom arena\ntable_data = [[\"project\", \"year\", \"location\", \"capacity\", \"suites\", \"architect\", \"cost\"],[\"faruk süren project\", \"1997 - 2001\", \"mecidiyeköy\", \"40482\", \"125 + 72 boxes without outside seating\", \"bbb architects\", \"118.5 million ( in 2014 dollars)\"],[\"mehmet cansun project\", \"2001\", \"mecidiyeköy\", \"35000\", \"132\", \"gs member architecture group\", \"35 million ( in 2014 dollars)\"],[\"özhan canaydın : back to süren 's project\", \"2002 - 2005\", \"aslantepe\", \"40482\", \"125\", \"bbb architects\", \"90 million ( in 2014 dollars)\"],[\"eren talu bidding project\", \"2007\", \"aslantepe\", \"52000\", \"150\", \"populous\", \"n / a\"],[\"özhan canaydın project\", \"2007\", \"aslantepe\", \"52652\", \"157\", \"asp stuttgart\", \"250 million ( in 2014 dollars)\"]]\nQuestion = Is it true that the highest capacity in aslantepe in 2002 - 2005 is 40482?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    locations = get_column_by_name(table_data, \"location\")\n    capacities = get_column_by_name(table_data, \"capacity\")\n    for year, location, capacity in zip(years, locations, capacities):\n        if \"2002 - 2005\" in year and \"aslantepe\" in location:\n            answer = equal_to(capacity, \"40482\")\n            break \n    return answer\n\n### END"}
{"id": "072fa724-0dff-4338-bce4-6a56c33938f3", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"\", \"date\", \"vs\", \"opponent\", \"score\", \"attendance\", \"record\"],[\"1\", \"january 9 , 1988\", \"at\", \"washington wave\", \"13 - 14\", \"6624\", \"loss\"],[\"2\", \"january 16 , 1988\", \"vs\", \"washington wave\", \"10 - 11\", \"13814\", \"loss\"],[\"3\", \"january 30 , 1988\", \"vs\", \"baltimore thunder\", \"12 - 7\", \"16028\", \"win\"],[\"4\", \"february 6 , 1988\", \"vs\", \"new jersey saints\", \"7 - 10\", \"9064\", \"loss\"],[\"5\", \"february 14 , 1988\", \"at\", \"washington wave\", \"12 - 13\", \"6683\", \"loss\"],[\"6\", \"february 20 , 1988\", \"vs\", \"baltimore thunder\", \"14 - 13\", \"10004\", \"win\"],[\"7\", \"february 21 , 1988\", \"at\", \"new jersey saints\", \"12 - 13\", \"6427\", \"loss\"],[\"8\", \"february 27 , 1988\", \"at\", \"baltimore thunder\", \"17 - 9\", \"4937\", \"win\"]]\nQuestion = Is it true that the game played on february 6 , 1988 versus the new jersey saints , had an attendance more than the previous game with the baltimore thunder?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    opponents = get_column_by_name(table_data, \"opponent\")\n    attendances = get_column_by_name(table_data, \"attendance\")\n    answer = False\n    for i in range(len(dates)):\n        if dates[i] == \"february 6 , 1988\" and opponents[i] == \"new jersey saints\":\n            if i > 0 and opponents[i-1] == \"baltimore thunder\":\n                answer = greater(int(attendances[i]), int(attendances[i-1]))\n                break\n    return answer\n\n### END"}
{"id": "32117c6a-c9f9-4f50-a6d4-b28e590b93bf", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1928 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"fitzroy\", \"17.11 (113)\", \"south melbourne\", \"11.11 (77)\", \"brunswick street oval\", \"8000\", \"2 june 1928\"],[\"carlton\", \"12.12 (84)\", \"collingwood\", \"13.9 (87)\", \"princes park\", \"30000\", \"2 june 1928\"],[\"north melbourne\", \"5.7 (37)\", \"melbourne\", \"14.16 (100)\", \"arden street oval\", \"9000\", \"2 june 1928\"],[\"richmond\", \"12.21 (93)\", \"geelong\", \"13.12 (90)\", \"punt road oval\", \"10000\", \"2 june 1928\"],[\"st kilda\", \"9.17 (71)\", \"footscray\", \"11.6 (72)\", \"junction oval\", \"12000\", \"2 june 1928\"],[\"hawthorn\", \"7.15 (57)\", \"essendon\", \"13.20 (98)\", \"glenferrie oval\", \"6000\", \"2 june 1928\"]]\nQuestion = Is it true that richmond was the home team that scored 12.21 (93) at princes park?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    venues = get_column_by_name(table_data, \"venue\")\n    for home_team, home_team_score, venue in zip(home_teams, home_team_scores, venues):\n        if home_team.lower() == \"richmond\" and home_team_score == \"12.21 (93)\" and venue.lower() == \"princes park\":\n            answer = True\n            break\n        else:\n            answer = False\n    return answer\n\n### END"}
{"id": "93d39e3e-5dbb-4fcb-a3ba-cb20142b1998", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 cleveland cavaliers season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"18\", \"december 2\", \"phoenix suns\", \"w 107 - 90 (ot)\", \"zydrunas ilgauskas (14)\", \"shaquille o'neal (9)\", \"lebron james (10)\", \"quicken loans arena 20562\", \"13 - 5\"],[\"19\", \"december 4\", \"chicago bulls\", \"w 101 - 87 (ot)\", \"lebron james (23)\", \"zydrunas ilgauskas , shaquille o'neal (7)\", \"lebron james (11)\", \"quicken loans arena 20562\", \"14 - 5\"],[\"20\", \"december 6\", \"milwaukee bucks\", \"w 101 - 86 (ot)\", \"delonte west (21)\", \"anderson varejão (12)\", \"lebron james (10)\", \"bradley center 16625\", \"15 - 5\"],[\"21\", \"december 8\", \"memphis grizzlies\", \"l 109 - 111 (ot)\", \"lebron james (43)\", \"lebron james (13)\", \"mo williams (8)\", \"fedex forum 16325\", \"15 - 6\"],[\"22\", \"december 9\", \"houston rockets\", \"l 85 - 95 (ot)\", \"lebron james (27)\", \"shaquille o'neal , j j hickson (10)\", \"lebron james (7)\", \"toyota center 18200\", \"15 - 7\"],[\"23\", \"december 11\", \"portland trail blazers\", \"w 104 - 99 (ot)\", \"lebron james (33)\", \"shaquille o'neal (11)\", \"mo williams (10)\", \"quicken loans arena 20562\", \"16 - 7\"],[\"24\", \"december 13\", \"oklahoma city thunder\", \"w 102 - 89 (ot)\", \"lebron james (44)\", \"anderson varejão (10)\", \"lebron james (6)\", \"ford center 18203\", \"17 - 7\"],[\"25\", \"december 15\", \"new jersey nets\", \"w 99 - 89 (ot)\", \"lebron james (23)\", \"mo williams , jamario moon (8)\", \"lebron james (7)\", \"quicken loans arena 20562\", \"18 - 7\"],[\"26\", \"december 16\", \"philadelphia 76ers\", \"w 108 - 101 (ot)\", \"lebron james (36)\", \"shaquille o'neal (9)\", \"lebron james (7)\", \"wachovia center 19517\", \"19 - 7\"],[\"27\", \"december 18\", \"milwaukee bucks\", \"w 85 - 82 (ot)\", \"lebron james (26)\", \"lebron james (10)\", \"lebron james (8)\", \"quicken loans arena 20562\", \"20 - 7\"],[\"28\", \"december 20\", \"dallas mavericks\", \"l 95 - 102 (ot)\", \"lebron james (25)\", \"anderson varejão , shaquille o'neal (8)\", \"lebron james (6)\", \"american airlines center 20346\", \"20 - 8\"],[\"29\", \"december 21\", \"phoenix suns\", \"w 109 - 91 (ot)\", \"lebron james (29)\", \"mo williams , lebron james , jj hickson (6)\", \"delonte west (6)\", \"us airways center 18221\", \"21 - 8\"],[\"30\", \"december 23\", \"sacramento kings\", \"w 117 - 104 (ot)\", \"lebron james (34)\", \"lebron james (16)\", \"lebron james (10)\", \"arco arena 16407\", \"22 - 8\"],[\"31\", \"december 25\", \"la lakers\", \"w 102 - 87 (ot)\", \"mo williams (28)\", \"anderson varejão , zydrunas ilgauskas (9)\", \"lebron james (9)\", \"staples center 18997\", \"23 - 8\"],[\"32\", \"december 27\", \"houston rockets\", \"w 108 - 83 (ot)\", \"lebron james (29)\", \"shaquille o'neal (11)\", \"lebron james (6)\", \"quicken loans arena 20562\", \"24 - 8\"]]\nQuestion = Is it true that in alternate locations to the arco arena , 16407 attended for a team that was 22 - 8?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    locations = get_column_by_name(table_data, \"location attendance\")\n    records = get_column_by_name(table_data, \"record\")\n    for location, record in zip(locations, records):\n        if \"arco arena\" in location.lower() and equal_to(record, \"22 - 8\"):\n            answer = False\n            break\n    return answer\n\n### END"}
{"id": "c786a8d7-0854-4f51-83a7-b1f313081d88", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1961 british saloon car championship season\ntable_data = [[\"round\", \"circuit\", \"date\", \"class a winner\", \"class b winner\", \"class c winner\", \"class d winner\"],[\"1\", \"snetterton motor racing circuit , norfolk\", \"25 march\", \"george 'doc' shepherd\", \"alan hutcheson\", \"none (no entries)\", \"gawaine baillie\"],[\"2\", \"goodwood circuit , west sussex\", \"3 april\", \"john whitmore\", \"bill blydenstein\", \"ellis cuff - miller\", \"mike parkes\"],[\"3\", \"aintree motor racing circuit , liverpool\", \"22 april\", \"john whitmore\", \"alan hutcheson\", \"chris kerrison\", \"roy salvadori\"],[\"4\", \"silverstone circuit , northamptonshire\", \"6 may\", \"bill aston\", \"peter harper\", \"chris kerrison\", \"graham hill\"],[\"5\", \"crystal palace , london\", \"22 may\", \"george 'doc' shepherd\", \"bill blydenstein\", \"none (no entries)\", \"roy salvadori\"],[\"6\", \"silverstone circuit , northamptonshire\", \"8 july\", \"herbert linge\", \"ellis cuff - miller\", \"chris kerrison\", \"mike parkes\"],[\"7\", \"brands hatch , kent\", \"7 august\", \"frank hamlin\", \"alan hutcheson\", \"chris kerrison\", \"mike parkes\"],[\"8\", \"oulton park , cheshire\", \"23 september\", \"john whitmore\", \"peter harper\", \"none (no entries)\", \"roy salvadori\"]]\nQuestion = Is it true that for round 3 , aintree motor racing circuit , liverpool , john whitmore was the class b winner and mike parkes was the class a winner?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    rounds = get_column_by_name(table_data, \"round\")\n    circuits = get_column_by_name(table_data, \"circuit\")\n    class_a_winners = get_column_by_name(table_data, \"class a winner\")\n    class_b_winners = get_column_by_name(table_data, \"class b winner\")\n    for round, circuit, class_a_winner, class_b_winner in zip(rounds, circuits, class_a_winners, class_b_winners):\n        if round == \"3\" and \"aintree motor racing circuit , liverpool\" in circuit.lower():\n            answer = equal_to(class_a_winner, \"mike parkes\") and equal_to(class_b_winner, \"john whitmore\")\n            break \n    return answer\n\n### END"}
{"id": "08f09fe6-ef4d-41bc-bbc0-88b01267a3a7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = hey venus!\ntable_data = [[\"region\", \"date\", \"label\", \"format\", \"catalogue\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"vinyl record\", \"rtradlp 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"compact disc\", \"rtradcd 346\"],[\"united kingdom\", \"27 august 2007\", \"rough trade records\", \"download\", \"-\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"vinyl record\", \"rt - 346 - 1\"],[\"united states\", \"28 august 2007\", \"rough trade america\", \"download\", \"rt - 346 - 5\"],[\"united states\", \"22 january 2008\", \"rough trade america\", \"double compact disc\", \"rtradcd 423\"],[\"japan\", \"12 september 2007\", \"rough trade japan\", \"compact disc\", \"xqcy - 1003\"]]\nQuestion = Is it true that the download format in the united states region is provided by the rough trade america label?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    regions = get_column_by_name(table_data, \"region\")\n    labels = get_column_by_name(table_data, \"label\")\n    formats = get_column_by_name(table_data, \"format\")\n    answer = False\n    for region, label, format in zip(regions, labels, formats):\n        if region.lower() == \"united states\" and label.lower() == \"rough trade america\" and format.lower() == \"download\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "097845b9-ac36-4ed2-9273-7edb39e11f66", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = yrjö väisälä\ntable_data = [[\"1391 carelia\", \"1398 donnera\", \"1405 sibelius\", \"1406 komppa\", \"1407 lindelöf\"],[\"1421 esperanto\", \"1424 sundmania\", \"1446 sillanpää\", \"1447 utra\", \"1448 lindbladia\"],[\"1449 virtanen\", \"1450 raimonda\", \"1451 granö\", \"1453 fennia\", \"1454 kalevala\"],[\"1460 haltia\", \"1462 zamenhof\", \"1463 nordenmarkia\", \"1471 tornio\", \"1472 muonio\"],[\"1473 ounas\", \"1477 bonsdorffia\", \"1478 vihuri\", \"1479 inkeri\", \"1480 aunus\"],[\"1483 hakoila\", \"1488 aura\", \"1492 oppolzer\", \"1494 savo\", \"1495 helsinki\"],[\"1496 turku\", \"1497 tampere\", \"1498 lahti\", \"1499 pori\", \"1500 jyväskylä\"],[\"1503 kuopio\", \"1518 rovaniemi\", \"1519 kajaani\", \"1520 imatra\", \"1521 seinäjoki\"],[\"1523 pieksämäki\", \"1524 joensuu\", \"1525 savonlinna\", \"1526 mikkeli\", \"1527 malmquista\"],[\"1529 oterma\", \"1530 rantaseppä\", \"1532 inari\", \"1533 saimaa\", \"1534 näsi\"],[\"1535 päijänne\", \"1536 pielinen\", \"1541 estonia\", \"1542 schalén\", \"1548 palomaa\"],[\"1549 mikko\", \"1551 argelander\", \"1552 bessel\", \"1567 alikoski\", \"1631 kopff\"],[\"1646 rosseland\", \"1656 suomi\", \"1659 punkaharju\", \"1677 tycho brahe\", \"1678 hveen\"],[\"1696 nurmela\", \"1699 honkasalo\", \"1723 klemola\", \"1740 paavo nurmi\", \"1757 porvoo\"],[\"1883 rimito\", \"1928 summa\", \"1929 kollaa\", \"1947 iso - heikkilä\", \"2020 ukko\"],[\"2067 aksnes\", \"2091 sampo\", \"2096 väinö\", \"2194 arpola\", \"2204 lyyli\"],[\"2243 lönnrot\", \"2258 viipuri\", \"2292 seili\", \"2299 hanko\", \"2333 porthan\"],[\"2379 heiskanen\", \"2397 lappajärvi\", \"2454 olaus magnus\", \"2464 nordenskiöld\", \"2479 sodankylä\"],[\"2486 metsähovi\", \"2502 nummela\", \"2512 tavastia\", \"2535 hämeenlinna\", \"2638 gadolin\"],[\"2639 planman\", \"2678 aavasaksa\", \"2679 kittisvaara\", \"2690 ristiina\", \"2715 mielikki\"],[\"2716 tuulikki\", \"2733 hamina\", \"2737 kotka\", \"2750 loviisa\", \"2802 weisell\"],[\"2820 iisalmi\", \"2826 ahti\", \"2885 palva\", \"2898 neuvo\", \"2962 otto\"],[\"2972 niilo\", \"3037 alku\", \"3099 hergenrother\", \"3166 klondike\", \"3212 agricola\"],[\"3223 forsius\", \"3272 tillandz\", \"3281 maupertuis\", \"3522 becker\", \"3606 pohjola\"],[\"3897 louhi\", \"4181 kivi\", \"4266 waltari\", \"4512 sinuhe\", \"5073 junttura\"]]\nQuestion = Is it true that the 1471 tornio asteroid neared the 1406 komppa asteroid when 1391 carelia passed 1460 haltia?\n\n### RESPONSE:\ndef solution(table_data):\n    return False\n\n### END"}
{"id": "59076e0e-c38a-4649-b948-3ad4b8c38d73", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1982 - 83 atlanta hawks season\ntable_data = [[\"round\", \"pick\", \"player\", \"nationality\", \"college\"],[\"1\", \"10\", \"keith edmonson\", \"united states\", \"purdue\"],[\"3\", \"56\", \"joe kopicki\", \"united states\", \"detroit mercy\"],[\"5\", \"102\", \"mark hall\", \"united states\", \"minnesota\"],[\"6\", \"126\", \"jay bruchak\", \"united states\", \"mount st mary 's\"],[\"7\", \"148\", \"horace wyatt\", \"united states\", \"clemson\"],[\"8\", \"172\", \"james ratiff\", \"united states\", \"howard\"],[\"9\", \"194\", \"pierre bland\", \"united states\", \"elizabeth city state\"],[\"10\", \"216\", \"ronnie mcadoo\", \"united states\", \"old dominion\"]]\nQuestion = Is it true that jay bruchak had a pick of 126?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    picks = get_column_by_name(table_data, \"pick\")\n    for player, pick in zip(players, picks):\n        if player.lower() == \"jay bruchak\":\n            answer = equal_to(pick, \"126\")\n            break \n    return answer\n\n### END"}
{"id": "eebfa284-3622-4f7a-809c-2cccf9b3c621", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = provinces of korea\ntable_data = [[\"japanese name\", \"kana\", \"hanja / kanji\", \"korean name\", \"hangul\"],[\"chūsei - hokudō\", \"ちゅうせいほくどう\", \"忠清北道\", \"chungcheong - bukdo\", \"충청북도\"],[\"keishō - hokudō\", \"けいしょうほくどう\", \"慶尚北道\", \"gyeongsang - bukdo\", \"경상북도\"],[\"chūsei - nandō\", \"ちゅうせいなんどう\", \"忠淸南道\", \"chungcheong - namdo\", \"충청남도\"],[\"keishō - nandō\", \"けいしょうなんどう\", \"慶尚南道\", \"gyeongsang - namdo\", \"경상남도\"],[\"heian - hokudō\", \"へいあんほくどう\", \"平安北道\", \"pyeongan - bukdo\", \"평안북도\"],[\"kōgendō\", \"こうげんどう\", \"江原道\", \"gangwondo\", \"강원도\"],[\"heian - nandō\", \"へいあんなんどう\", \"平安南道\", \"pyeongan - namdo\", \"평안남도\"],[\"kōkaidō\", \"こうかいどう\", \"黃海道\", \"hwanghaedo\", \"황해도\"],[\"kankyō - hokudo\", \"かんきょうほくどう\", \"咸鏡北道\", \"hamgyeong - bukdo\", \"함경북도\"],[\"zenra - hokudō\", \"ぜんらほくどう\", \"全羅北道\", \"jeolla - bukdo\", \"전라북도\"],[\"kankyō - nandō\", \"かんきょうなんどう\", \"咸鏡南道\", \"hamgyeong - namdo\", \"함경남도\"],[\"zenra - nandō\", \"ぜんらなんどう\", \"全羅南道\", \"jeolla - namdo\", \"전라남도\"],[\"keikidō\", \"けいきどう\", \"京畿道\", \"gyeonggido\", \"경기도\"]]\nQuestion = Is it true that chūsei - hokudō is the japanese name of the province with a korean name of chungcheong - bukdo?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    japanese_names = get_column_by_name(table_data, \"japanese name\")\n    korean_names = get_column_by_name(table_data, \"korean name\")\n    for japanese_name, korean_name in zip(japanese_names, korean_names):\n        if equal_to(korean_name, \"chungcheong - bukdo\"):\n            answer = equal_to(japanese_name, \"chūsei - hokudō\")\n            break \n    return answer\n\n### END"}
{"id": "4afcbc84-11c2-4c0b-8f74-685231019ba9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1926 grand prix season\ntable_data = [[\"name\", \"circuit\", \"date\", \"winning drivers\", \"winning constructor\", \"report\"],[\"indianapolis 500\", \"indianapolis\", \"31 may\", \"frank lockhart\", \"miller\", \"report\"],[\"french grand prix\", \"miramas\", \"27 june\", \"jules goux\", \"bugatti\", \"report\"],[\"san sebastián grand prix / european grand prix\", \"lasarte\", \"18 july\", \"jules goux\", \"bugatti\", \"report\"],[\"british grand prix\", \"brooklands\", \"7 august\", \"robert sénéchal louis wagner\", \"delage\", \"report\"],[\"italian grand prix\", \"monza\", \"5 september\", \"louis charavel\", \"bugatti\", \"report\"]]\nQuestion = Is it true that the winning constructor for brooklands was delage?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    circuits = get_column_by_name(table_data, \"circuit\")\n    constructors = get_column_by_name(table_data, \"winning constructor\")\n    for circuit, constructor in zip(circuits, constructors):\n        if circuit.lower() == \"brooklands\":\n            answer = equal_to(constructor.lower(), \"delage\")\n            break \n    return answer\n\n### END"}
{"id": "2f8666ce-7cf9-4c6e-9202-c4be972deae9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of 10 metre air pistol records\ntable_data = [[\"score\", \"shooter\", \"date\", \"comp\", \"place\"],[\"688.6\", \"igor basinski ( urs )\", \"1986\", \"wch\", \"suhl , east germany\"],[\"689.7\", \"aleksandr melentiev ( urs )\", \"1987\", \"wc\", \"seoul , south korea\"],[\"692.3\", \"igor basinski ( urs )\", \"1988\", \"ech\", \"stavanger , norway\"],[\"new targets from 1989\", \"new targets from 1989\", \"new targets from 1989\", \"new targets from 1989\", \"new targets from 1989\"],[\"686.4\", \"sorin babii ( rou )\", \"1989\", \"ech\", \"copenhagen , denmark\"],[\"690.3\", \"sergei pyzhianov ( urs )\", \"1989\", \"wch\", \"sarajevo , yugoslavia\"],[\"695.1\", \"sergei pyzhianov ( urs )\", \"13 oct 1989\", \"wcf\", \"munich , west germany\"]]\nQuestion = Is it true that in 1989 , shooter sorin babii ( rou ) had a score of 686.4?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    shooters = get_column_by_name(table_data, \"shooter\")\n    scores = get_column_by_name(table_data, \"score\")\n    dates = get_column_by_name(table_data, \"date\")\n    for shooter, score, date in zip(shooters, scores, dates):\n        if shooter.lower() == \"sorin babii ( rou )\" and \"1989\" in date:\n            answer = equal_to(score, \"686.4\")\n            break \n    return answer\n\n### END"}
{"id": "6d64954f-6c54-4da2-8721-2eb465515ece", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of georgian submissions for the academy award for best foreign language film\ntable_data = [[\"year (ceremony)\",\"film title used in nomination\",\"original title\",\"director\",\"main language (s)\",\"result\"],[\"1996 (69th)\",\"a chef in love\",\"შეყვარებული მზარეულის 1001 რეცეპტი\",\"nana dzhordzhadze\",\"french , georgian\",\"nominee\"],[\"1999 (72nd)\",\"here comes the dawn\",\"აქ თენდება\",\"zaza urushadze\",\"georgian\",\"not nominated\"],[\"2000 (73rd)\",\"27 missing kisses\",\"ზაფხული , ანუ 27 მოპარული კოცნა\",\"nana dzhordzhadze\",\"georgian , russian\",\"not nominated\"],[\"2001 (74th)\",\"migration of the angel\",\"ანგელოზის გადაფრენა\",\"nodar managadze\",\"georgian\",\"not nominated\"],[\"2005 (78th)\",\"tbilisi , tbilisi\",\"თბილისი - თბილისი\",\"levan zaqareishvili\",\"georgian\",\"not nominated\"],[\"2007 (80th)\",\"russian triangle\",\"რუსული სამკუთხედი\",\"aleko tsabadze\",\"russian\",\"not nominated\"],[\"2008 (81st)\",\"mediator\",\"მედიატორი\",\"dito tsintsadze\",\"english , german , russian\",\"not nominated\"],[\"2009 (82nd)\",\"the other bank\",\"გაღმა ნაპირი\",\"george ovashvili\",\"georgian , abkhaz , russian\",\"not nominated\"],[\"2010 (83rd)\",\"street days\",\"ქუჩის დღეები\",\"levan koguashvili\",\"georgian\",\"not nominated\"],[\"2011 (84th)\",\"chantrapas\",\"შანტრაპა\",\"otar iosseliani\",\"french , georgian\",\"not nominated\"],[\"2012 (85th)\",\"keep smiling\",\"გაიღიმეთ\",\"rusudan chkonia\",\"georgian\",\"not nominated\"]]\nQuestion = Is it true that the original title გაღმა ნაპირი was released in the year 2009 (82nd)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year (ceremony)\")\n    original_titles = get_column_by_name(table_data, \"original title\")\n    for year, original_title in zip(years, original_titles):\n        if original_title == \"გაღმა ნაპირი\":\n            answer = equal_to(year, \"2009 (82nd)\")\n            break\n    return answer\n\n### END"}
{"id": "d7d9451d-3efe-439e-89f6-e38502a9caac", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = f.c. united of manchester\ntable_data = [[\"season\",\"leaguecontested\",\"level\",\"leagueposition\",\"avghome attendance 1\",\"fa cup\",\"fa trophy\",\"leading scorer 1\"],[\"2005 - 06\",\"north west counties league division two\",\"10\",\"1st of 19 promoted\",\"3056\",\"n / a\",\"n / a\",\"rory patterson 18\"],[\"2006 - 07\",\"north west counties league division one\",\"9\",\"1st of 22 promoted\",\"2581\",\"n / a\",\"n / a\",\"stuart rudd 38\"],[\"2007 - 08\",\"northern premier league division one north\",\"8\",\"2nd of 18 won playoffs promoted\",\"2086 2\",\"1q\",\"prelim rd\",\"rory patterson 34\"],[\"2008 - 09\",\"northern premier league premier division\",\"7\",\"6th of 22\",\"2152\",\"1q\",\"3q\",\"kyle wilson 21\"],[\"2009 - 10\",\"northern premier league premier division\",\"7\",\"13th of 20\",\"1954 3\",\"4q\",\"3q\",\"phil marsh 10\"],[\"2010 - 11\",\"northern premier league premier division\",\"7\",\"4th of 22 playoffs runner - up\",\"1961 4\",\"r2\",\"3q\",\"michael norton 24\"],[\"2011 - 12\",\"northern premier league premier division\",\"7\",\"6th of 22 playoffs runner - up\",\"1947 5\",\"2q\",\"r1\",\"matthew wolfenden 20\"],[\"2012 - 13\",\"northern premier league premier division\",\"7\",\"3rd of 22 playoffs runner - up\",\"1835 6\",\"4q\",\"2q\",\"matthew wolfenden 19\"],[\"2013 - 14\",\"northern premier league premier division\",\"7\",\"4th of 24\",\"1713\",\"1q\",\"1q next game 19th oct\",\"tom greaves 8\"]]\nQuestion = Is it true that in the 2013 - 14 season 's norther premier league premier division the leading scorer 1 was tom greaves with 8 goals?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    seasons = get_column_by_name(table_data, \"season\")\n    leading_scorers = get_column_by_name(table_data, \"leading scorer 1\")\n    for season, leading_scorer in zip(seasons, leading_scorers):\n        if season.lower() == \"2013 - 14\":\n            answer = equal_to(leading_scorer, \"tom greaves 8\")\n            break \n    return answer\n\n### END"}
{"id": "047c5387-5229-4703-b7a4-aafbd5a10208", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"game\", \"date\", \"home team\", \"result\", \"road team\"],[\"game 1\", \"april 14\", \"boston\", \"117 - 114\", \"los angeles\"],[\"game 2\", \"april 16\", \"boston\", \"113 - 106\", \"los angeles\"],[\"game 3\", \"april 17\", \"los angeles\", \"119 - 99\", \"boston\"],[\"game 4\", \"april 19\", \"los angeles\", \"105 - 108\", \"boston\"],[\"game 5\", \"april 21\", \"boston\", \"119 - 126\", \"los angeles\"],[\"game 6\", \"april 24\", \"los angeles\", \"109 - 112\", \"boston\"]]\nQuestion = Is it true that during game 1 boston played against los angeles?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    games = get_column_by_name(table_data, \"game\")\n    home_teams = get_column_by_name(table_data, \"home team\")\n    road_teams = get_column_by_name(table_data, \"road team\")\n    answer = False\n    for game, home_team, road_team in zip(games, home_teams, road_teams):\n        if game.lower() == \"game 1\" and home_team.lower() == \"boston\" and road_team.lower() == \"los angeles\":\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "e6a4a19a-999a-4429-9110-cd28cda9d28d", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sheffield and hallamshire association cup\ntable_data = [[\"season\", \"winner\", \"result\", \"runner - up\", \"final venue\"],[\"2002 - 03\", \"elm tree\", \"1 - 0\", \"stocksbridge park steels reserves\", \"belle vue\"],[\"2003 - 04\", \"hsbc\", \"3 - 2\", \"athersley recreation\", \"belle vue\"],[\"2004 - 05\", \"kiveton park\", \"2 - 2\", \"athersley recreation\", \"sandy lane\"],[\"2005 - 06\", \"kiveton park\", \"5 - 0\", \"sheffield lane top\", \"belle vue\"],[\"2006 - 07\", \"stocksbridge park steels reserves\", \"3 - 1\", \"hemsworth miners welfare\", \"millmoor\"],[\"2007 - 08\", \"athersley recreation\", \"1 - 0\", \"hollinsend amateurs\", \"oakwell\"],[\"2008 - 09\", \"hall green united\", \"2 - 1\", \"kirkburton\", \"keepmoat stadium (pitch 2)\"],[\"2009 - 10\", \"sheffield reserves\", \"2 - 1\", \"dearne colliery miners welfare\", \"inkersall road\"],[\"2010 - 11\", \"stocksbridge park steels reserves\", \"3 - 0\", \"kirkburton\", \"green lane\"],[\"2012 - 13\", \"swinton athletic\", \"3 - 0\", \"kirkburton\", \"sandy lane\"]]\nQuestion = Is it true that green lane was the final venue having sheffield reserves as the winner?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    winners = get_column_by_name(table_data, \"winner\")\n    final_venues = get_column_by_name(table_data, \"final venue\")\n    answer = False\n    for winner, final_venue in zip(winners, final_venues):\n        if \"sheffield reserves\" in winner.lower() and \"green lane\" in final_venue.lower():\n            answer = True\n            break\n    return answer\n\n### END"}
{"id": "d71748e9-83b9-4912-b954-423f7d38efdd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1928 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"fitzroy\", \"17.11 (113)\", \"south melbourne\", \"11.11 (77)\", \"brunswick street oval\", \"8000\", \"2 june 1928\"],[\"carlton\", \"12.12 (84)\", \"collingwood\", \"13.9 (87)\", \"princes park\", \"30000\", \"2 june 1928\"],[\"north melbourne\", \"5.7 (37)\", \"melbourne\", \"14.16 (100)\", \"arden street oval\", \"9000\", \"2 june 1928\"],[\"richmond\", \"12.21 (93)\", \"geelong\", \"13.12 (90)\", \"punt road oval\", \"10000\", \"2 june 1928\"],[\"st kilda\", \"9.17 (71)\", \"footscray\", \"11.6 (72)\", \"junction oval\", \"12000\", \"2 june 1928\"],[\"hawthorn\", \"7.15 (57)\", \"essendon\", \"13.20 (98)\", \"glenferrie oval\", \"6000\", \"2 june 1928\"]]\nQuestion = Is it true that richmond played at home and scored 12.21 (93)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    home_team_scores = get_column_by_name(table_data, \"home team score\")\n    for home_team, home_team_score in zip(home_teams, home_team_scores):\n        if home_team.lower() == \"richmond\":\n            answer = equal_to(home_team_score, \"12.21 (93)\")\n            break \n    return answer\n\n### END"}
{"id": "3e92e429-0031-49ef-bdda-548579008258", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = chameleon\ntable_data = [[\"scientific name\", \"common name\", \"length (male)\", \"length (female)\", \"color\", \"lifespan (years)\"],[\"chamaeleo calyptratus\", \"veiled chameleon\", \"14 - 24 in\", \"10 - 13 in\", \"green and light colors\", \"about 5\"],[\"trioceros jacksonii\", \"jackson 's chameleon\", \"9 - 13 in\", \"10 - 13 in\", \"green and light colors\", \"5 - 10\"],[\"furcifer pardalis\", \"panther chameleon\", \"15 - 21 in\", \"9 - 13 in\", \"darker colors\", \"about 5 (2 - 3 for birthing females)\"],[\"rieppeleon brevicaudatus\", \"bearded pygmy chameleon\", \"2 - 3 in\", \"2 - 3 in\", \"brown , beige , green\", \"about 3 - 5\"],[\"rhampholeon spectrum\", \"spectral pygmy chameleon\", \"3 - 4 in\", \"2 - 4 in\", \"tan and gray\", \"3 - 5\"]]\nQuestion = Is it true that the common name for rhampholeon spectrum is panther chameleon?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    scientific_names = get_column_by_name(table_data, \"scientific name\")\n    common_names = get_column_by_name(table_data, \"common name\")\n    for scientific_name, common_name in zip(scientific_names, common_names):\n        if scientific_name.lower() == \"rhampholeon spectrum\":\n            answer = equal_to(common_name, \"panther chameleon\")\n            break \n    return answer\n\n### END"}
{"id": "0fd84dc1-0af5-4fec-86d7-5972bee30e5a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = history of test cricket from 1901 to 1914\ntable_data = [[\"date\", \"home captain\", \"away captain\", \"venue\", \"result\"],[\"15 , 16 , 18 , 19 , 20 , 21 dec 1911\", \"clem hill\", \"johnny douglas\", \"sydney cricket ground\", \"aus by 146 runs\"],[\"30 dec , 1 , 2 , 3 jan 1911 / 2\", \"clem hill\", \"johnny douglas\", \"melbourne cricket ground\", \"eng by 8 wkts\"],[\"12 , 13 , 15 , 16 , 17 jan 1912\", \"clem hill\", \"johnny douglas\", \"adelaide oval\", \"eng by 7 wkts\"],[\"9 , 10 , 12 , 13 feb 1912\", \"clem hill\", \"johnny douglas\", \"melbourne cricket ground\", \"eng by inns&225 runs\"],[\"23 , 24 , 26 , 27 , 28 , 29 feb , 1 mar 1912\", \"clem hill\", \"johnny douglas\", \"sydney cricket ground\", \"eng by 70 runs\"]]\nQuestion = Is it true that the game played on march 1 , 1912 was at sydney cricket ground?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    venues = get_column_by_name(table_data, \"venue\")\n    answer = False\n    for date, venue in zip(dates, venues):\n        if \"1 mar 1912\" in date.lower():\n            answer = \"sydney cricket ground\" in venue.lower()\n            break\n    return answer\n\n### END"}
{"id": "73b9d87d-b656-4a87-8235-01df70871f45", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = statistics relating to enlargement of the european union\ntable_data = [[\"member countries\", \"population\", \"area (km square)\", \"gdp (billion us)\", \"gdp per capita (us)\"],[\"cyprus\", \"775927\", \"9250\", \"11.681\", \"15054\"],[\"czech republic\", \"10246178\", \"78866\", \"105.248\", \"10272\"],[\"estonia\", \"1341664\", \"45226\", \"22.384\", \"16684\"],[\"hungary\", \"10032375\", \"93030\", \"102183\", \"10185\"],[\"latvia\", \"2306306\", \"64589\", \"24.826\", \"10764\"],[\"lithuania\", \"3607899\", \"65200\", \"31.971\", \"8861\"],[\"malta\", \"396851\", \"316\", \"5.097\", \"12843\"],[\"poland\", \"38580445\", \"311904\", \"316.438\", \"8202\"],[\"slovakia\", \"5423567\", \"49036\", \"42.800\", \"7810\"],[\"slovenia\", \"2011473\", \"20273\", \"29.633\", \"14732\"],[\"accession countries\", \"74722685\", \"737690\", \"685.123\", \"9169\"],[\"existing members (2004)\", \"381781620\", \"3367154\", \"7711.871\", \"20200\"],[\"eu25 (2004)\", \"456504305 ( + 19.57%)\", \"4104844 ( + 17.97%)\", \"8396994 ( + 8.88%)\", \"18394 (8.94%)\"]]\nQuestion = Is it true that the total population of the hungary is 275927 which has a gdp per capita (us) of 15054?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    member_countries = get_column_by_name(table_data, \"member countries\")\n    populations = get_column_by_name(table_data, \"population\")\n    gdp_per_capita = get_column_by_name(table_data, \"gdp per capita (us)\")\n    for member_country, population, gdp in zip(member_countries, populations, gdp_per_capita):\n        if member_country.lower() == \"hungary\":\n            answer = equal_to(population, \"275927\") and equal_to(gdp, \"15054\")\n            break \n    return answer\n\n### END"}
{"id": "f3802e6b-c2ad-4bd3-8c81-190530037bf0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1950 world figure skating championships\ntable_data = [[\"rank\", \"name\", \"nation\", \"placings\", \"total\"],[\"1\", \"karol kennedy / peter kennedy\", \"united states\", \"15\", \"96.07\"],[\"2\", \"jennifer nicks / john nicks\", \"united kingdom\", \"28.5\", \"92.70\"],[\"3\", \"marianne nagy / lászló nagy\", \"hungary\", \"32\", \"92.25\"],[\"4\", \"elianne steineman / andré calamé\", \"switzerland\", \"44.5\", \"90.00\"],[\"5\", \"suzanne gheldorf / jacques rénard\", \"belgium\", \"48.5\", \"89.43\"],[\"6\", \"elly stärck / harry gareis\", \"austria\", \"61\", \"88.08\"],[\"7\", \"marlene smith / donald gilchrist\", \"canada\", \"63\", \"87.07\"],[\"8\", \"joan waterhouse / gordon holloway\", \"united kingdom\", \"62\", \"88.31\"],[\"9\", \"liliane de becker / edmund verbustel\", \"belgium\", \"64\", \"88.42\"],[\"10\", \"irene maguire / walter muehlbronner\", \"united states\", \"82\", \"84.26\"],[\"11\", \"sybil cooke / bob hudson\", \"united kingdom\", \"93.5\", \"83.47\"],[\"12\", \"denise favart / jacques favart\", \"france\", \"108\", \"77.73\"]]\nQuestion = Is it true that 82 is the rank number for a placing of 28.5 and a total less than 99.7?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef less_than(num1, num2):\n    return num1 < num2\n\ndef solution(table_data):\n    ranks = get_column_by_name(table_data, \"rank\")\n    placings = get_column_by_name(table_data, \"placings\")\n    totals = get_column_by_name(table_data, \"total\")\n    for rank, placing, total in zip(ranks, placings, totals):\n        if equal_to(placing, \"28.5\") and less_than(float(total), 99.7):\n            answer = equal_to(rank, \"82\")\n            break\n    else:\n        answer = False\n    return answer\n\n### END"}
{"id": "cf067732-1643-4bb1-9582-3bcff06ea101", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of rna structure prediction software\ntable_data = [[\"name\", \"species specific\", \"intra - molecular structure\", \"comparative\", \"link\"],[\"diana - microt\", \"human , mouse\", \"no\", \"yes\", \"webserver\"],[\"microtar\", \"no\", \"no\", \"no\", \"sourcecode\"],[\"mitarget\", \"no\", \"no\", \"no\", \"webserver\"],[\"mirror\", \"no\", \"no\", \"no\", \"webserver\"],[\"pictar\", \"8 vertebrates\", \"no\", \"yes\", \"predictions\"],[\"pita\", \"no\", \"yes\", \"no\", \"executable , webserver , predictions\"],[\"rna22\", \"no\", \"no\", \"no\", \"predictions custom\"],[\"rnahybrid\", \"no\", \"no\", \"no\", \"sourcecode , webserver\"],[\"sylamer\", \"no\", \"no\", \"no\", \"sourcecode webserver\"],[\"taref\", \"yes\", \"no\", \"no\", \"server / sourcecode\"],[\"p - taref\", \"yes\", \"no\", \"no\", \"server / standalone\"],[\"targetscan\", \"vertebrates , flies , nematodes\", \"evaluated indirectly\", \"yes\", \"sourcecode , webserver\"]]\nQuestion = Is it true that both mitarget and mirror have no comparative , no intra - molecular structure and their only link is webserver?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    intra_molecular_structures = get_column_by_name(table_data, \"intra - molecular structure\")\n    comparatives = get_column_by_name(table_data, \"comparative\")\n    links = get_column_by_name(table_data, \"link\")\n    answer = False\n    for name, intra_molecular_structure, comparative, link in zip(names, intra_molecular_structures, comparatives, links):\n        if name.lower() in [\"mitarget\", \"mirror\"]:\n            if equal_to(intra_molecular_structure, \"no\") and equal_to(comparative, \"no\") and equal_to(link, \"webserver\"):\n                answer = True\n            else:\n                answer = False\n                break\n    return answer\n\n### END"}
{"id": "262dc670-32c0-48c3-a9a8-9c518b642143", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2008 miller superbike world championship round\ntable_data = [[\"rider\", \"bike\", \"laps\", \"time\", \"grid\"],[\"carlos checa\", \"honda cbr1000rr\", \"20\", \"37:04.991\", \"1\"],[\"troy corser\", \"yamaha yzf - r1\", \"20\", \"+ 2.809\", \"5\"],[\"michel fabrizio\", \"ducati 1098 f08\", \"20\", \"+ 6.546\", \"4\"],[\"max neukirchner\", \"suzuki gsx - r1000\", \"20\", \"+ 7.764\", \"2\"],[\"fonsi nieto\", \"suzuki gsx - r1000\", \"20\", \"+ 16.475\", \"13\"],[\"jakub smrz\", \"ducati 1098 rs 08\", \"20\", \"+ 17.126\", \"11\"],[\"karl muggeridge\", \"honda cbr1000rr\", \"20\", \"+ 17.284\", \"12\"],[\"yukio kagayama\", \"suzuki gsx - r1000\", \"20\", \"+ 17.416\", \"8\"],[\"max biaggi\", \"ducati 1098 rs 08\", \"20\", \"+ 18.117\", \"9\"],[\"ryuichi kiyonari\", \"honda cbr1000rr\", \"20\", \"+ 20.467\", \"20\"],[\"lorenzo lanzi\", \"ducati 1098 rs 08\", \"20\", \"+ 21.742\", \"15\"],[\"kenan sofuoğlu\", \"honda cbr1000rr\", \"20\", \"+ 27.533\", \"25\"],[\"gregorio lavilla\", \"honda cbr1000rr\", \"20\", \"+ 32.609\", \"23\"],[\"ruben xaus\", \"ducati 1098 rs 08\", \"20\", \"+ 33.165\", \"6\"],[\"russell holland\", \"honda cbr1000rr\", \"20\", \"+ 34.182\", \"17\"],[\"shinichi nakatomi\", \"yamaha yzf - r1\", \"20\", \"+ 34.500\", \"22\"],[\"ayrton badovini\", \"kawasaki zx - 10r\", \"20\", \"+ 36.155\", \"16\"],[\"sébastien gimbert\", \"yamaha yzf - r1\", \"20\", \"+ 41.685\", \"24\"],[\"makoto tamada\", \"kawasaki zx - 10r\", \"20\", \"+ 43.579\", \"18\"],[\"roberto rolfo\", \"honda cbr1000rr\", \"20\", \"+ 54.195\", \"28\"],[\"jason pridmore\", \"honda cbr1000rr\", \"20\", \"+ 1:00.388\", \"19\"],[\"vittorio iannuzzo\", \"kawasaki zx - 10r\", \"20\", \"+ 1:02.104\", \"21\"],[\"scott jensen\", \"suzuki gsx - r1000 k8\", \"20\", \"+ 1:09.953\", \"29\"],[\"loic napoleone\", \"yamaha yzf - r1\", \"20\", \"+ 1:12.258\", \"27\"],[\"shuhei aoyama\", \"honda cbr1000rr\", \"14\", \"retirement\", \"14\"],[\"david checa\", \"yamaha yzf - r1\", \"6\", \"retirement\", \"26\"],[\"noriyuki haga\", \"yamaha yzf - r1\", \"5\", \"accident\", \"10\"],[\"troy bayliss\", \"ducati 1098 f08\", \"4\", \"accident\", \"3\"],[\"régis laconi\", \"kawasaki zx - 10r\", \"4\", \"retirement\", \"7\"]]\nQuestion = Is it true that regis laconi 's suzuki gsx - r1000 k8 is 8?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    riders = get_column_by_name(table_data, \"rider\")\n    bikes = get_column_by_name(table_data, \"bike\")\n    grids = get_column_by_name(table_data, \"grid\")\n    for rider, bike, grid in zip(riders, bikes, grids):\n        if rider.lower() == \"régis laconi\":\n            answer = equal_to(bike, \"suzuki gsx - r1000 k8\") and equal_to(grid, \"8\")\n            break \n    return answer\n\n### END"}
{"id": "80ef4525-ec58-4da8-bb43-011088fb37ed", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1970 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"carlton\", \"16.14 (110)\", \"st kilda\", \"10.11 (71)\", \"princes park\", \"22988\", \"18 july 1970\"],[\"south melbourne\", \"11.9 (75)\", \"richmond\", \"12.17 (89)\", \"lake oval\", \"25651\", \"18 july 1970\"],[\"north melbourne\", \"13.17 (95)\", \"fitzroy\", \"18.14 (122)\", \"arden street oval\", \"8443\", \"18 july 1970\"],[\"geelong\", \"15.16 (106)\", \"essendon\", \"8.17 (65)\", \"kardinia park\", \"17220\", \"18 july 1970\"],[\"melbourne\", \"7.19 (61)\", \"collingwood\", \"10.16 (76)\", \"mcg\", \"36044\", \"18 july 1970\"],[\"hawthorn\", \"23.9 (147)\", \"footscray\", \"6.12 (48)\", \"vfl park\", \"14151\", \"18 july 1970\"]]\nQuestion = Is it true that 36044 where in attendance for melbourne 's home game?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    for home_team, crowd in zip(home_teams, crowds):\n        if home_team.lower() == \"melbourne\":\n            answer = equal_to(crowd, \"36044\")\n            break \n    return answer\n\n### END"}
{"id": "8d2ac07f-c94e-4d64-9f6d-d9d48de92a46", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2005 - 06 toronto raptors season\ntable_data = [[\"game\", \"date\", \"team\", \"score\", \"high points\", \"high rebounds\", \"high assists\", \"location attendance\", \"record\"],[\"57\", \"march 1\", \"atlanta\", \"l 111 - 113 (ot)\", \"chris bosh (27)\", \"charlie villanueva (11)\", \"chris bosh (5)\", \"air canada centre 15137\", \"20 - 37\"],[\"58\", \"march 4\", \"new jersey\", \"l 100 - 105 (ot)\", \"morris peterson (25)\", \"chris bosh , charlie villanueva (11)\", \"mike james (7)\", \"continental airlines arena 16215\", \"20 - 38\"],[\"59\", \"march 5\", \"boston\", \"w 111 - 105 (ot)\", \"morris peterson (27)\", \"chris bosh (10)\", \"mike james (6)\", \"air canada centre 16623\", \"21 - 38\"],[\"60\", \"march 7\", \"cleveland\", \"l 99 - 106 (ot)\", \"mike james (31)\", \"charlie villanueva (11)\", \"mike james (8)\", \"quicken loans arena 18077\", \"21 - 39\"],[\"61\", \"march 8\", \"cleveland\", \"l 97 - 98 (ot)\", \"morris peterson (31)\", \"chris bosh (14)\", \"mike james (7)\", \"air canada centre 19800\", \"21 - 40\"],[\"62\", \"march 10\", \"denver\", \"l 97 - 108 (ot)\", \"mike james (26)\", \"chris bosh (15)\", \"josé calderón (5)\", \"air canada centre 17806\", \"21 - 41\"],[\"63\", \"march 12\", \"indiana\", \"w 93 - 89 (ot)\", \"morris peterson (25)\", \"chris bosh (8)\", \"mike james (4)\", \"air canada centre 17573\", \"22 - 41\"],[\"64\", \"march 14\", \"philadelphia\", \"w 111 - 97 (ot)\", \"chris bosh (31)\", \"charlie villanueva (10)\", \"darrick martin (12)\", \"wachovia center 14917\", \"23 - 41\"],[\"65\", \"march 15\", \"detroit\", \"l 98 - 105 (ot)\", \"mike james (24)\", \"chris bosh (11)\", \"mike james (11)\", \"air canada centre 19800\", \"23 - 42\"],[\"66\", \"march 17\", \"milwaukee\", \"w 97 - 96 (ot)\", \"chris bosh (27)\", \"chris bosh (10)\", \"mike james (6)\", \"air canada centre 17273\", \"24 - 42\"],[\"67\", \"march 21\", \"new york\", \"w 114 - 109 (ot)\", \"mike james (37)\", \"mike james , charlie villanueva (8)\", \"mike james (5)\", \"madison square garden 18131\", \"25 - 42\"],[\"68\", \"march 22\", \"boston\", \"l 96 - 110 (ot)\", \"mike james (31)\", \"chris bosh (11)\", \"chris bosh (8)\", \"td banknorth garden 18624\", \"25 - 43\"],[\"69\", \"march 24\", \"minnesota\", \"w 97 - 77 (ot)\", \"morris peterson (21)\", \"chris bosh (15)\", \"mike james (5)\", \"air canada centre 17493\", \"26 - 43\"],[\"70\", \"march 26\", \"milwaukee\", \"l 116 - 125 (ot)\", \"charlie villanueva (48)\", \"charlie villanueva (9)\", \"mike james (10)\", \"bradley center 16317\", \"26 - 44\"],[\"71\", \"march 29\", \"miami\", \"l 94 - 98 (ot)\", \"morris peterson (28)\", \"charlie villanueva (13)\", \"mike james (12)\", \"air canada centre 19973\", \"26 - 45\"],[\"72\", \"march 31\", \"phoenix\", \"l 126 - 140 (ot)\", \"morris peterson (38)\", \"pape sow (15)\", \"mike james (10)\", \"air canada centre 19800\", \"26 - 46\"]]\nQuestion = Is it true that for the game played on march 31 , mike james (10) is the player listed for high assists?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    dates = get_column_by_name(table_data, \"date\")\n    high_assists = get_column_by_name(table_data, \"high assists\")\n    for date, high_assist in zip(dates, high_assists):\n        if \"march 31\" in date.lower():\n            answer = \"mike james (10)\" in high_assist.lower()\n            break\n    return answer\n\n### END"}
{"id": "33cb471e-1b90-4d4e-9df0-355f3b227cd9", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = list of americas records in swimming\ntable_data = [[\"event\", \"time\", \"nationality\", \"date\", \"meet\", \"location\"],[\"50 m freestyle\", \"20.91\", \"brazil\", \"18 december 2009\", \"brazilian championships\", \"são paulo, brazil\"],[\"100 m freestyle\", \"46.91\", \"brazil\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m freestyle\", \"1:42.96\", \"united states\", \"12 august 2008\", \"olympic games\", \"beijing, china\"],[\"400 m freestyle\", \"3:42.78\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"800 m freestyle\", \"7:41.86\", \"canada\", \"27 july 2011\", \"world championships\", \"shanghai, china\"],[\"1500 m freestyle\", \"14:39.63\", \"canada\", \"4 august 2012\", \"olympic games\", \"london, united kingdom\"],[\"50 m backstroke\", \"24.33\", \"united states\", \"5 december 2008\", \"dutch swim cup\", \"eindhoven, netherlands\"],[\"100 m backstroke\", \"51.94\", \"united states\", \"8 july 2009\", \"us championships\", \"indianapolis, united states\"],[\"200 m backstroke\", \"1:51.92\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m breaststroke\", \"26.76\", \"brazil\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"100 m breaststroke\", \"58.96\", \"united states\", \"26 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m breaststroke\", \"2:07.42\", \"united states\", \"30 july 2009\", \"world championships\", \"rome, italy\"],[\"50 m butterfly\", \"22.76\", \"brazil\", \"26 april 2012\", \"maria lenk trophy\", \"rio de janeiro, brazil\"],[\"100 m butterfly\", \"49.82\", \"united states\", \"1 august 2009\", \"world championships\", \"rome, italy\"],[\"200 m butterfly\", \"1:51.51\", \"united states\", \"29 july 2009\", \"world championships\", \"rome, italy\"],[\"200 m individual medley\", \"1:54.00\", \"united states\", \"28 july 2011\", \"world championships\", \"shanghai, china\"],[\"400 m individual medley\", \"4:03.84\", \"united states\", \"10 august 2008\", \"olympic games\", \"beijing, china\"],[\"4100 m freestyle relay\", \"3:08.24\", \"united states\", \"11 august 2008\", \"olympic games\", \"beijing, china\"],[\"4200 m freestyle relay\", \"6:58.55\", \"united states\", \"31 july 2009\", \"world championships\", \"rome, italy\"],[\"4100 m medley relay\", \"3:27.28\", \"united states\", \"2 august 2009\", \"world championships\", \"rome, italy\"]]\nQuestion = Is it true that the united states won the 200 m butterfly on 29 july , 2009 with a time of 1:51.51?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    events = get_column_by_name(table_data, \"event\")\n    times = get_column_by_name(table_data, \"time\")\n    nationalities = get_column_by_name(table_data, \"nationality\")\n    dates = get_column_by_name(table_data, \"date\")\n    for event, time, nationality, date in zip(events, times, nationalities, dates):\n        if event.lower() == \"200 m butterfly\" and nationality.lower() == \"united states\" and date.lower() == \"29 july 2009\":\n            answer = equal_to(time, \"1:51.51\")\n            break \n    return answer\n\n### END"}
{"id": "8100cc58-d69c-402b-8bd7-b6ff86406684", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2009 - 10 fis ski jumping world cup\ntable_data = [[\"rank\", \"name\", \"nationality\", \"1st (m)\", \"2nd (m)\", \"points\", \"overall fht points\", \"overall wc points (rank)\"],[\"1\", \"thomas morgenstern\", \"austria\", \"133.0\", \"136.0\", \"264.7\", \"987.1 (6)\", \"440 (4)\"],[\"2\", \"janne ahonen\", \"finland\", \"134.0\", \"133.5\", \"264.0\", \"1013.9 (2)\", \"350 (7)\"],[\"3\", \"simon ammann\", \"switzerland\", \"136.0\", \"131.5\", \"261.5\", \"1008.3 (5)\", \"669 (1)\"],[\"4\", \"wolfgang loitzl\", \"austria\", \"130.5\", \"135.0\", \"260.9\", \"1011.6 (3)\", \"411 (5)\"],[\"5\", \"andreas kofler\", \"austria\", \"129.0\", \"133.5\", \"255.0\", \"1027.2 (1)\", \"521 (3)\"]]\nQuestion = Is it true that thomas morgenstern has the rank of 1?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    names = get_column_by_name(table_data, \"name\")\n    ranks = get_column_by_name(table_data, \"rank\")\n    for name, rank in zip(names, ranks):\n        if name.lower() == \"thomas morgenstern\":\n            answer = equal_to(rank, \"1\")\n            break \n    return answer\n\n### END"}
{"id": "e695c6f2-cd52-458b-b39a-ab54bdfb4b3f", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = mysterious ways (tv series)\ntable_data = [[\"series\",\"season\",\"title\",\"director\",\"writer (s)\",\"nbc airdate\",\"code\"],[\"23\",\"1\",\"phoenix\",\"michael robison\",\"carl binder\",\"july 13, 2001\",\"201\"],[\"24\",\"2\",\"one of us\",\"michael robison\",\"melissa r byer, treena hancock\",\"july 20, 2001\",\"205\"],[\"25\",\"3\",\"pure of heart\",\"rick stevenson\",\"barbara covington\",\"july 27, 2001\",\"204\"],[\"26\",\"4\",\"condemned\",\"michael robison\",\"dawn ritchie, carl binder\",\"august 3, 2001\",\"207\"],[\"27\",\"5\",\"lost souls\",\"richard martin\",\"melissa r byer, treena hancock\",\"september 4, 2001\",\"210\"],[\"28\",\"6\",\"spike\",\"rick stevenson\",\"eric tuchman\",\"september 18, 2001\",\"202\"],[\"29\",\"7\",\"child of wonder\",\"ken jubenvill\",\"eric tuchman\",\"october 2, 2001\",\"206\"],[\"30\",\"8\",\"29\",\"ken jubenvill\",\"deborah starr seibel\",\"october 9, 2001\",\"208\"],[\"31\",\"9\",\"love 's divine\",\"scott williams\",\"john mandel\",\"october 16, 2001\",\"209\"],[\"32\",\"10\",\"the big picture\",\"ken jubenvill\",\"philip gerson\",\"november 6, 2001\",\"211\"],[\"33\",\"11\",\"a time to every purpose\",\"gil shilton\",\"barbara covington\",\"november 13, 2001\",\"212\"],[\"34\",\"12\",\"doctor in the house\",\"brad turner\",\"philip gerson\",\"november 27, 2001\",\"203\"],[\"35\",\"13\",\"the last dance\",\"ken jubenvill\",\"dan d'amelio\",\"december 11, 2001\",\"213\"],[\"36\",\"14\",\"free spirit\",\"eric tuchman\",\"ken jubenvill\",\"january 15, 2002\",\"214\"],[\"37\",\"15\",\"spark of life\",\"rick stevenson\",\"melissa r byer, treena hancock\",\"january 22, 2002\",\"220\"],[\"38\",\"16\",\"face in the crowd\",\"m robison\",\"barbara covington\",\"february 5, 2002\",\"222\"],[\"39\",\"17\",\"logan miller\",\"richard martin\",\"barbara covington\",\"february 26, 2002\",\"217\"],[\"40\",\"18\",\"friends in need\",\"ken jubenvill\",\"eric tuchman\",\"march 19, 2002\",\"218\"],[\"41\",\"19\",\"a man of god\",\"brad turner\",\"carl binder\",\"march 26, 2002\",\"219\"],[\"42\",\"20\",\"muti\",\"michael robison\",\"treena hancock, melissa r byer\",\"april 30, 2002\",\"215\"],[\"43\",\"21\",\"listen\",\"scott williams\",\"deborah starr seibel\",\"may 7, 2002\",\"221\"]]\nQuestion = Is it true that eric tuchman directed season 14?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(str1, str2):\n    return str1.lower() == str2.lower()\n\ndef solution(table_data):\n    directors = get_column_by_name(table_data, \"director\")\n    seasons = get_column_by_name(table_data, \"season\")\n    for director, season in zip(directors, seasons):\n        if season == \"14\":\n            answer = equal_to(director, \"eric tuchman\")\n            break \n    return answer\n\n### END"}
{"id": "372ff0c8-25fa-4d4e-914c-937374d8bdf6", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 1928 vfl season\ntable_data = [[\"home team\", \"home team score\", \"away team\", \"away team score\", \"venue\", \"crowd\", \"date\"],[\"fitzroy\", \"17.11 (113)\", \"south melbourne\", \"11.11 (77)\", \"brunswick street oval\", \"8000\", \"2 june 1928\"],[\"carlton\", \"12.12 (84)\", \"collingwood\", \"13.9 (87)\", \"princes park\", \"30000\", \"2 june 1928\"],[\"north melbourne\", \"5.7 (37)\", \"melbourne\", \"14.16 (100)\", \"arden street oval\", \"9000\", \"2 june 1928\"],[\"richmond\", \"12.21 (93)\", \"geelong\", \"13.12 (90)\", \"punt road oval\", \"10000\", \"2 june 1928\"],[\"st kilda\", \"9.17 (71)\", \"footscray\", \"11.6 (72)\", \"junction oval\", \"12000\", \"2 june 1928\"],[\"hawthorn\", \"7.15 (57)\", \"essendon\", \"13.20 (98)\", \"glenferrie oval\", \"6000\", \"2 june 1928\"]]\nQuestion = Is it true that 12000 people were in the crowd for the st kilda vs footscray match at junction oval?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    home_teams = get_column_by_name(table_data, \"home team\")\n    away_teams = get_column_by_name(table_data, \"away team\")\n    venues = get_column_by_name(table_data, \"venue\")\n    crowds = get_column_by_name(table_data, \"crowd\")\n    for home_team, away_team, venue, crowd in zip(home_teams, away_teams, venues, crowds):\n        if home_team.lower() == \"st kilda\" and away_team.lower() == \"footscray\" and venue.lower() == \"junction oval\":\n            answer = equal_to(crowd, \"12000\")\n            break \n    return answer\n\n### END"}
{"id": "914ef5fd-ab07-435d-ac09-78b3a1854b1e", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = los angeles lakers all - time roster\ntable_data = [[\"player\",\"nationality\",\"position\",\"from\",\"school / country\"],[\"bo lamar\",\"united states\",\"guard\",\"1977\",\"louisiana - lafayette\"],[\"jeff lamp\",\"united states\",\"guard / forward\",\"1987\",\"virginia\"],[\"mark landsberger\",\"united states\",\"forward / center\",\"1979\",\"arizona state\"],[\"stu lantz\",\"united states\",\"guard\",\"1974\",\"nebraska\"],[\"rudy larusso\",\"united states\",\"forward / center\",\"1959\",\"dartmouth\"],[\"butch lee\",\"united states\",\"guard\",\"1979\",\"marquette\"],[\"slick leonard\",\"united states\",\"guard\",\"1956\",\"indiana\"],[\"ronnie lester\",\"united states\",\"guard\",\"1984\",\"iowa\"],[\"stan love\",\"united states\",\"forward\",\"1973\",\"oregon\"],[\"clyde lovellette\",\"united states\",\"forward / center\",\"1953\",\"kansas\"],[\"maurice lucas\",\"united states\",\"forward / center\",\"1985\",\"marquette\"],[\"tyronn lue\",\"united states\",\"guard\",\"1998\",\"nebraska\"],[\"george lynch\",\"united states\",\"forward\",\"1993\",\"north carolina\"],[\"mike lynn\",\"united states\",\"forward\",\"1969\",\"ucla\"]]\nQuestion = Is it true that jeff lamp played guard for virginia in 1987?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    players = get_column_by_name(table_data, \"player\")\n    positions = get_column_by_name(table_data, \"position\")\n    years = get_column_by_name(table_data, \"from\")\n    schools = get_column_by_name(table_data, \"school / country\")\n    for player, position, year, school in zip(players, positions, years, schools):\n        if player.lower() == \"jeff lamp\":\n            answer = equal_to(position, \"guard / forward\") and equal_to(year, \"1987\") and equal_to(school, \"virginia\")\n            break \n    return answer\n\n### END"}
{"id": "250ba5c1-c749-4440-8d28-713302236ab7", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = 2004 - 05 in scottish football\ntable_data = [[\"date\",\"venue\",\"score\",\"competition\",\"report\"],[\"18 august\",\"hampden park , glasgow (h)\",\"0 - 3\",\"friendly\",\"bbc sport\"],[\"3 september\",\"estadio ciudad de valencia , valencia (a)\",\"1 - 1\",\"friendly\",\"bbc sport\"],[\"8 september\",\"hampden park , glasgow (h)\",\"0 - 0\",\"wcq5\",\"bbc sport\"],[\"9 october\",\"hampden park , glasgow (h)\",\"0 - 1\",\"wcq5\",\"bbc sport\"],[\"13 october\",\"republican stadium , chişinău (a)\",\"1 - 1\",\"wcq5\",\"bbc sport\"],[\"17 november\",\"easter road , edinburgh (h)\",\"1 - 4\",\"friendly\",\"bbc sport\"],[\"26 march\",\"san siro , milan (a)\",\"0 - 2\",\"wcq5\",\"bbc sport\"],[\"4 june\",\"hampden park , glasgow (h)\",\"2 - 0\",\"wcq5\",\"bbc sport\"],[\"8 june\",\"dinamo stadion , minsk (a)\",\"0 - 0\",\"wcq5\",\"bbc sport\"]]\nQuestion = Is it true that when the score was 2 - 0 the venue was san siro , milan (a)?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    venues = get_column_by_name(table_data, \"venue\")\n    scores = get_column_by_name(table_data, \"score\")\n    for venue, score in zip(venues, scores):\n        if score == \"2 - 0\":\n            answer = equal_to(venue, \"san siro , milan (a)\")\n            break \n    return answer\n\n### END"}
{"id": "8bd123a4-4341-4fb1-8fa1-f1f89f45d975", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = sanya\ntable_data = [[\"english name\", \"simplified\", \"traditional\", \"pinyin\", \"area\", \"population\", \"density\"],[\"hexi district\", \"河西区\", \"河西區\", \"héxī qū\", \"10\", \"134026\", \"13403\"],[\"hedong district\", \"河东区\", \"河東區\", \"hédōng qū\", \"35\", \"147944\", \"4227\"],[\"haitangwan\", \"海棠湾镇\", \"海棠灣鎮\", \"hǎitángwān zhèn\", \"254\", \"44617\", \"176\"],[\"jiyang\", \"吉阳镇\", \"吉陽鎮\", \"jíyáng zhèn\", \"199\", \"92316\", \"464\"],[\"fenghuang\", \"凤凰镇\", \"鳳凰鎮\", \"fènghuáng zhèn\", \"487\", \"66801\", \"137\"],[\"yacheng\", \"崖城镇\", \"崖城鎮\", \"yáchéng zhèn\", \"383\", \"74779\", \"195\"],[\"tianya\", \"天涯镇\", \"天涯鎮\", \"tiānyá zhèn\", \"269\", \"34934\", \"130\"],[\"yucai\", \"育才镇\", \"育才鎮\", \"yùcái zhèn\", \"315\", \"17515\", \"56\"],[\"nantian farm\", \"国营南田农场\", \"國營南田農場\", \"guóyíng nántián nóngchǎng\", \"nd\", \"24280\", \"nd\"],[\"nanxin farm\", \"国营南新农场\", \"國營南新農場\", \"guóyíng nánxīn nóngchǎng\", \"nd\", \"16801\", \"nd\"],[\"licai farm\", \"国营立才农场\", \"國營立才農場\", \"guóyíng lìcái nóngchǎng\", \"nd\", \"16659\", \"nd\"]]\nQuestion = Is it true that 崖城鎮 is the traditional that has a population of 74779?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    traditional = get_column_by_name(table_data, \"traditional\")\n    population = get_column_by_name(table_data, \"population\")\n    for trad, pop in zip(traditional, population):\n        if trad == \"崖城鎮\":\n            answer = equal_to(pop, \"74779\")\n            break \n    return answer\n\n### END"}
{"id": "729525b5-c335-4270-a8b4-dc97978941e0", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = locomotives of the london and north eastern railway\ntable_data = [[\"class\", \"type\", \"quantity\", \"date\", \"lner class\"],[\"2\", \"4 - 4 - 0\", \"25\", \"1887 - 1892\", \"d7\"],[\"3\", \"2 - 4 - 2t\", \"39\", \"1889 - 1892\", \"f1\"],[\"6ai\", \"0 - 6 - 0\", \"12\", \"1888\", \"j8\"],[\"6d\", \"2 - 4 - 0\", \"3\", \"1887\", \"e2\"],[\"6db\", \"4 - 4 - 0\", \"3\", \"1888\", \"d8\"],[\"9\", \"0 - 6 - 0\", \"6\", \"1888 - 89\", \"j13\"],[\"9a\", \"0 - 6 - 2t\", \"55\", \"1889 - 92\", \"n4\"],[\"9b & 9e\", \"0 - 6 - 0\", \"31\", \"1891 - 95\", \"j9\"],[\"9c & 9f\", \"0 - 6 - 2t\", \"129\", \"1891 - 1901\", \"n5\"],[\"9d , 9h & 9 m\", \"0 - 6 - 0\", \"124\", \"1892 - 1902\", \"j10\"]]\nQuestion = Is it true that the lner class f1 has a class of 4?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    classes = get_column_by_name(table_data, \"class\")\n    lner_classes = get_column_by_name(table_data, \"lner class\")\n    for class_, lner_class in zip(classes, lner_classes):\n        if lner_class.lower() == \"f1\":\n            answer = equal_to(class_, \"4\")\n            break \n    return answer\n\n### END"}
{"id": "d94a79cf-7d43-4080-9636-fc132bbb687a", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"model type\",\"model designation\",\"engine\",\"wheelbase (mm / inch)\",\"gvw (kg / ton)\",\"axle ratio\"],[\"cf220\",\"97100\",\"1759 cc (107.5 cu in) gasoline\",\"2692 / 106\",\"2235 / 2.2\",\"8 / 37\"],[\"cf220\",\"97f00\",\"1998 cc (121.9 cu in) diesel\",\"2692 / 106\",\"2235 / 2.2\",\"8 / 37\"],[\"cf250\",\"97300\",\"2279 cc (139 cu in) gasoline\",\"2692 / 106\",\"2500 / 2.46\",\"8 / 37\"],[\"cf250\",\"97 g00\",\"1998 cc (121.9 cu in) diesel\",\"2692 / 106\",\"2500 / 2.46\",\"8 / 37\"],[\"cf280\",\"97500\",\"2279 cc (139 cu in) gasoline\",\"3200 / 126\",\"2828 / 2.78\",\"11 / 49\"],[\"cf280\",\"97h00\",\"1998 cc (121.9 cu in) diesel\",\"3200 / 126\",\"2828 / 2.78\",\"9 / 47\"],[\"cf340\",\"97700\",\"2279 cc (139 cu in) gasoline\",\"3200 / 126\",\"3375 / 3.32\",\"9 / 47\"],[\"cf340\",\"97k00\",\"1998 cc (121.9 cu in) diesel\",\"3200 / 126\",\"3375 / 3.32\",\"9 / 47\"],[\"cf350\",\"97700\",\"2279 cc (139 cu in) gasoline\",\"3200 / 126\",\"3375 / 3.32\",\"9 / 47\"]]\nQuestion = Is it true that a 97f00 has a 1998 cc diesel engine with model type cf250?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef solution(table_data):\n    model_types = get_column_by_name(table_data, \"model type\")\n    model_designations = get_column_by_name(table_data, \"model designation\")\n    engines = get_column_by_name(table_data, \"engine\")\n    for model_type, model_designation, engine in zip(model_types, model_designations, engines):\n        if model_type.lower() == \"cf250\" and model_designation.lower() == \"97f00\" and \"1998 cc\" in engine.lower() and \"diesel\" in engine.lower():\n            return True\n    return False\n\n### END"}
{"id": "07b354dd-5838-4285-93c2-133be2866b03", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = none\ntable_data = [[\"year\", \"domestic freight\", \"domestic mail\", \"international freight\", \"international mail\", \"total freight and mail\", \"change\"],[\"2006\", \"132\", \"260\", \"2883\", \"3\", \"3278\", \"+ 9 , 8%\"],[\"2007\", \"50\", \"102\", \"3304\", \"3\", \"3459\", \"+ 5 , 5%\"],[\"2008\", \"43\", \"0\", \"4650\", \"1\", \"4695\", \"+ 35 , 7%\"],[\"2009\", \"157\", \"0\", \"6761\", \"0\", \"6919\", \"+ 47 , 4%\"],[\"2010\", \"72\", \"0\", \"6988\", \"0\", \"7061\", \"+ 2 , 1%\"],[\"2011\", \"1\", \"1\", \"7852\", \"0\", \"7853\", \"+ 11 , 2%\"]]\nQuestion = Is it true that in 2006 , there were 2883 international freights and 260 domestic mail?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef equal_to(num1, num2):\n    return num1 == num2\n\ndef solution(table_data):\n    years = get_column_by_name(table_data, \"year\")\n    domestic_mails = get_column_by_name(table_data, \"domestic mail\")\n    international_freights = get_column_by_name(table_data, \"international freight\")\n    for year, domestic_mail, international_freight in zip(years, domestic_mails, international_freights):\n        if year == \"2006\":\n            answer = equal_to(domestic_mail, \"260\") and equal_to(international_freight, \"2883\")\n            break \n    return answer\n\n### END"}
{"id": "d6ef7d59-39df-4864-b327-9fdac6fb58fd", "text": "### INSTRUCTION:\nGiven the following table and question, generate the python code to solve it.\n\nCaption = the simpsons (season 21)\ntable_data = [[\"-\", \"-\", \"title\", \"directed by\", \"written by\", \"original air date\", \"production code\", \"us viewers (millions)\"],[\"442\", \"1\", \"homer the whopper\", \"lance kramer\", \"seth rogen & evan goldberg\", \"september 27 , 2009\", \"labf13\", \"8.31\"],[\"443\", \"2\", \"bart gets a 'z'\", \"mark kirkland\", \"matt selman\", \"october 4 , 2009\", \"labf15\", \"9.32\"],[\"444\", \"3\", \"the great wife hope\", \"matthew faughnan\", \"carolyn omine\", \"october 11 , 2009\", \"labf16\", \"7.5\"],[\"446\", \"5\", \"the devil wears nada\", \"nancy kruse\", \"tim long\", \"november 15 , 2009\", \"labf17\", \"9.04\"],[\"447\", \"6\", \"pranks and greens\", \"chuck sheetz\", \"jeff westbrook\", \"november 22 , 2009\", \"labf18\", \"7.03\"],[\"448\", \"7\", \"rednecks and broomsticks\", \"bob anderson & rob oliver\", \"kevin curran\", \"november 29 , 2009\", \"labf19\", \"9.02\"],[\"449\", \"8\", \"o brother , where bart thou\", \"steven dean moore\", \"matt selman\", \"december 13 , 2009\", \"mabf01\", \"7.11\"],[\"450\", \"9\", \"thursdays with abie\", \"michael polcino\", \"don payne & mitchell h glazer\", \"january 3 , 2010\", \"mabf02\", \"8.65\"],[\"451\", \"10\", \"once upon a time in springfield\", \"matthew nastuk\", \"stephanie gillis\", \"january 10 , 2010\", \"labf20\", \"21.01\"],[\"452\", \"11\", \"million dollar maybe\", \"chris clements\", \"bill odenkirk\", \"january 31 , 2010\", \"mabf03\", \"5.11\"],[\"453\", \"12\", \"boy meets curl\", \"chuck sheetz\", \"rob lazebnik\", \"february 14 , 2010\", \"mabf05\", \"5.87\"],[\"454\", \"13\", \"the color yellow\", \"raymond s persi\", \"billy kimball & ian maxtone - graham\", \"february 21 , 2010\", \"mabf06\", \"6.08\"],[\"455\", \"14\", \"postcards from the wedge\", \"mark kirkland\", \"brian kelley\", \"march 14 , 2010\", \"mabf04\", \"5.23\"],[\"456\", \"15\", \"stealing first base\", \"steven dean moore\", \"john frink\", \"march 21 , 2010\", \"mabf07\", \"5.69\"],[\"457\", \"16\", \"the greatest story ever d'ohed\", \"michael polcino\", \"kevin curran\", \"march 28 , 2010\", \"mabf10\", \"5.69\"],[\"458\", \"17\", \"american history x - cellent\", \"bob anderson\", \"michael price\", \"april 11 , 2010\", \"mabf08\", \"5.65\"],[\"459\", \"18\", \"chief of hearts\", \"chris clements\", \"carolyn omine & william wright\", \"april 18 , 2010\", \"mabf09\", \"5.93\"],[\"460\", \"19\", \"the squirt and the whale\", \"mark kirkland\", \"matt warburton\", \"april 25 , 2010\", \"mabf14\", \"5.94\"],[\"461\", \"20\", \"to surveil with love\", \"lance kramer\", \"michael nobori\", \"may 2 , 2010\", \"mabf12\", \"6.06\"],[\"462\", \"21\", \"moe letter blues\", \"matthew nastuk\", \"stephanie gillis\", \"may 9 , 2010\", \"mabf13\", \"5.66\"],[\"463\", \"22\", \"the bob next door\", \"nancy kruse\", \"john frink\", \"may 16 , 2010\", \"mabf11\", \"6.26\"]]\nQuestion = Is it true that the production code is labf15 when us viewers is greater than 9.32 million?\n\n### RESPONSE:\ndef get_column_by_name(table, column_name):\n    column_index = table[0].index(column_name)\n    column = []\n    for row in table[1:]:\n        column.append(row[column_index])\n    return column\n\ndef greater(num1, num2):\n    return num1 > num2\n\ndef solution(table_data):\n    production_codes = get_column_by_name(table_data, \"production code\")\n    viewers = get_column_by_name(table_data, \"us viewers (millions)\")\n    answer = False\n    for production_code, viewer in zip(production_codes, viewers):\n        if production_code.lower() == \"labf15\" and greater(float(viewer), 9.32):\n            answer = True\n            break\n    return answer\n\n### END"}
